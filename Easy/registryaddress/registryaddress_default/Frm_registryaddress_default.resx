<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="DS.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="DS.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhWAA0AIcAAAAAAIAAAACAAICAAAAAgIAAgACAgICAgMDAwP8AAAD/AP//AAAA//8A/wD/////
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAMwAAZgAAmQAAzAAA/wAzAAAzMwAzZgAzmQAzzAAz/wBmAABmMwBmZgBm
        mQBmzABm/wCZAACZMwCZZgCZmQCZzACZ/wDMAADMMwDMZgDMmQDMzADM/wD/AAD/MwD/ZgD/mQD/zAD/
        /zMAADMAMzMAZjMAmTMAzDMA/zMzADMzMzMzZjMzmTMzzDMz/zNmADNmMzNmZjNmmTNmzDNm/zOZADOZ
        MzOZZjOZmTOZzDOZ/zPMADPMMzPMZjPMmTPMzDPM/zP/ADP/MzP/ZjP/mTP/zDP//2YAAGYAM2YAZmYA
        mWYAzGYA/2YzAGYzM2YzZmYzmWYzzGYz/2ZmAGZmM2ZmZmZmmWZmzGZm/2aZAGaZM2aZZmaZmWaZzGaZ
        /2bMAGbMM2bMZmbMmWbMzGbM/2b/AGb/M2b/Zmb/mWb/zGb//5kAAJkAM5kAZpkAmZkAzJkA/5kzAJkz
        M5kzZpkzmZkzzJkz/5lmAJlmM5lmZplmmZlmzJlm/5mZAJmZM5mZZpmZmZmZzJmZ/5nMAJnMM5nMZpnM
        mZnMzJnM/5n/AJn/M5n/Zpn/mZn/zJn//8wAAMwAM8wAZswAmcwAzMwA/8wzAMwzM8wzZswzmcwzzMwz
        /8xmAMxmM8xmZsxmmcxmzMxm/8yZAMyZM8yZZsyZmcyZzMyZ/8zMAMzMM8zMZszMmczMzMzM/8z/AMz/
        M8z/Zsz/mcz/zMz///8AAP8AM/8AZv8Amf8AzP8A//8zAP8zM/8zZv8zmf8zzP8z//9mAP9mM/9mZv9m
        mf9mzP9m//+ZAP+ZM/+ZZv+Zmf+ZzP+Z///MAP/MM//MZv/Mmf/MzP/M////AP//M///Zv//mf//zP//
        /yH/C05FVFNDQVBFMi4wAwEBAAAh+QQAAAAAACwAAAAAWAA0AAAI/wBfSJsmTd6DB8YOKmS3Lda2agTv
        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
        lUuMQovkt8QpLNPi5omleR/emvnMaE7zdQICADs=
</value>
  </data>
</root>