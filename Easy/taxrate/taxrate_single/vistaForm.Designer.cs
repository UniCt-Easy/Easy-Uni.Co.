/*
    Easy
    Copyright (C) 2020 Università degli Studi di Catania (www.unict.it)
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

﻿//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace taxrate_single {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("vistaForm")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class vistaForm : System.Data.DataSet {
        
        private taxrateDataTable tabletaxrate;
        
        private taxDataTable tabletax;
        
        private ratebracketDataTable tableratebracket;
        
        private ratevalidityDataTable tableratevalidity;
        
        private System.Data.DataRelation relationratebrackettaxrate;
        
        private System.Data.DataRelation relationtaxtaxrate;
        
        private System.Data.DataRelation relationratevaliditytaxrate;
        
        private System.Data.DataRelation relationratevalidityratebracket;
        
        private System.Data.DataRelation relationtaxratevalidity;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vistaForm() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected vistaForm(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["taxrate"] != null)) {
                    base.Tables.Add(new taxrateDataTable(ds.Tables["taxrate"]));
                }
                if ((ds.Tables["tax"] != null)) {
                    base.Tables.Add(new taxDataTable(ds.Tables["tax"]));
                }
                if ((ds.Tables["ratebracket"] != null)) {
                    base.Tables.Add(new ratebracketDataTable(ds.Tables["ratebracket"]));
                }
                if ((ds.Tables["ratevalidity"] != null)) {
                    base.Tables.Add(new ratevalidityDataTable(ds.Tables["ratevalidity"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public taxrateDataTable taxrate {
            get {
                return this.tabletaxrate;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public taxDataTable tax {
            get {
                return this.tabletax;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ratebracketDataTable ratebracket {
            get {
                return this.tableratebracket;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ratevalidityDataTable ratevalidity {
            get {
                return this.tableratevalidity;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            vistaForm cln = ((vistaForm)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["taxrate"] != null)) {
                    base.Tables.Add(new taxrateDataTable(ds.Tables["taxrate"]));
                }
                if ((ds.Tables["tax"] != null)) {
                    base.Tables.Add(new taxDataTable(ds.Tables["tax"]));
                }
                if ((ds.Tables["ratebracket"] != null)) {
                    base.Tables.Add(new ratebracketDataTable(ds.Tables["ratebracket"]));
                }
                if ((ds.Tables["ratevalidity"] != null)) {
                    base.Tables.Add(new ratevalidityDataTable(ds.Tables["ratevalidity"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabletaxrate = ((taxrateDataTable)(base.Tables["taxrate"]));
            if ((initTable == true)) {
                if ((this.tabletaxrate != null)) {
                    this.tabletaxrate.InitVars();
                }
            }
            this.tabletax = ((taxDataTable)(base.Tables["tax"]));
            if ((initTable == true)) {
                if ((this.tabletax != null)) {
                    this.tabletax.InitVars();
                }
            }
            this.tableratebracket = ((ratebracketDataTable)(base.Tables["ratebracket"]));
            if ((initTable == true)) {
                if ((this.tableratebracket != null)) {
                    this.tableratebracket.InitVars();
                }
            }
            this.tableratevalidity = ((ratevalidityDataTable)(base.Tables["ratevalidity"]));
            if ((initTable == true)) {
                if ((this.tableratevalidity != null)) {
                    this.tableratevalidity.InitVars();
                }
            }
            this.relationratebrackettaxrate = this.Relations["ratebrackettaxrate"];
            this.relationtaxtaxrate = this.Relations["taxtaxrate"];
            this.relationratevaliditytaxrate = this.Relations["ratevaliditytaxrate"];
            this.relationratevalidityratebracket = this.Relations["ratevalidityratebracket"];
            this.relationtaxratevalidity = this.Relations["taxratevalidity"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "vistaForm";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Vistaaliquotaritenuta.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletaxrate = new taxrateDataTable();
            base.Tables.Add(this.tabletaxrate);
            this.tabletax = new taxDataTable();
            base.Tables.Add(this.tabletax);
            this.tableratebracket = new ratebracketDataTable();
            base.Tables.Add(this.tableratebracket);
            this.tableratevalidity = new ratevalidityDataTable();
            base.Tables.Add(this.tableratevalidity);
            System.Data.ForeignKeyConstraint fkc;
            fkc = new System.Data.ForeignKeyConstraint("vistaFormKey4", new System.Data.DataColumn[] {
                        this.tableratebracket.taxcodeColumn,
                        this.tableratebracket.validitystartColumn,
                        this.tableratebracket.nbracketColumn}, new System.Data.DataColumn[] {
                        this.tabletaxrate.taxcodeColumn,
                        this.tabletaxrate.validitystartColumn,
                        this.tabletaxrate.nbracketColumn});
            this.tabletaxrate.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new System.Data.ForeignKeyConstraint("vistaFormKey5", new System.Data.DataColumn[] {
                        this.tabletax.taxcodeColumn}, new System.Data.DataColumn[] {
                        this.tabletaxrate.taxcodeColumn});
            this.tabletaxrate.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new System.Data.ForeignKeyConstraint("vistaFormKey6", new System.Data.DataColumn[] {
                        this.tableratevalidity.taxcodeColumn,
                        this.tableratevalidity.validitystartColumn}, new System.Data.DataColumn[] {
                        this.tabletaxrate.taxcodeColumn,
                        this.tabletaxrate.validitystartColumn});
            this.tabletaxrate.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new System.Data.ForeignKeyConstraint("vistaFormKey10", new System.Data.DataColumn[] {
                        this.tableratevalidity.taxcodeColumn,
                        this.tableratevalidity.validitystartColumn}, new System.Data.DataColumn[] {
                        this.tableratebracket.taxcodeColumn,
                        this.tableratebracket.validitystartColumn});
            this.tableratebracket.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new System.Data.ForeignKeyConstraint("vistaFormKey12", new System.Data.DataColumn[] {
                        this.tabletax.taxcodeColumn}, new System.Data.DataColumn[] {
                        this.tableratevalidity.taxcodeColumn});
            this.tableratevalidity.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationratebrackettaxrate = new System.Data.DataRelation("ratebrackettaxrate", new System.Data.DataColumn[] {
                        this.tableratebracket.taxcodeColumn,
                        this.tableratebracket.validitystartColumn,
                        this.tableratebracket.nbracketColumn}, new System.Data.DataColumn[] {
                        this.tabletaxrate.taxcodeColumn,
                        this.tabletaxrate.validitystartColumn,
                        this.tabletaxrate.nbracketColumn}, false);
            this.Relations.Add(this.relationratebrackettaxrate);
            this.relationtaxtaxrate = new System.Data.DataRelation("taxtaxrate", new System.Data.DataColumn[] {
                        this.tabletax.taxcodeColumn}, new System.Data.DataColumn[] {
                        this.tabletaxrate.taxcodeColumn}, false);
            this.Relations.Add(this.relationtaxtaxrate);
            this.relationratevaliditytaxrate = new System.Data.DataRelation("ratevaliditytaxrate", new System.Data.DataColumn[] {
                        this.tableratevalidity.taxcodeColumn,
                        this.tableratevalidity.validitystartColumn}, new System.Data.DataColumn[] {
                        this.tabletaxrate.taxcodeColumn,
                        this.tabletaxrate.validitystartColumn}, false);
            this.Relations.Add(this.relationratevaliditytaxrate);
            this.relationratevalidityratebracket = new System.Data.DataRelation("ratevalidityratebracket", new System.Data.DataColumn[] {
                        this.tableratevalidity.taxcodeColumn,
                        this.tableratevalidity.validitystartColumn}, new System.Data.DataColumn[] {
                        this.tableratebracket.taxcodeColumn,
                        this.tableratebracket.validitystartColumn}, false);
            this.Relations.Add(this.relationratevalidityratebracket);
            this.relationtaxratevalidity = new System.Data.DataRelation("taxratevalidity", new System.Data.DataColumn[] {
                        this.tabletax.taxcodeColumn}, new System.Data.DataColumn[] {
                        this.tableratevalidity.taxcodeColumn}, false);
            this.Relations.Add(this.relationtaxratevalidity);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetaxrate() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetax() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeratebracket() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeratevalidity() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            vistaForm ds = new vistaForm();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void taxrateRowChangeEventHandler(object sender, taxrateRowChangeEvent e);
        
        public delegate void taxRowChangeEventHandler(object sender, taxRowChangeEvent e);
        
        public delegate void ratebracketRowChangeEventHandler(object sender, ratebracketRowChangeEvent e);
        
        public delegate void ratevalidityRowChangeEventHandler(object sender, ratevalidityRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class taxrateDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columntaxcode;
            
            private System.Data.DataColumn columnvaliditystart;
            
            private System.Data.DataColumn columnnbracket;
            
            private System.Data.DataColumn columnratestart;
            
            private System.Data.DataColumn columntaxablenumerator;
            
            private System.Data.DataColumn columntaxabledenominator;
            
            private System.Data.DataColumn columnadminrate;
            
            private System.Data.DataColumn columnadminnumerator;
            
            private System.Data.DataColumn columnadmindenominator;
            
            private System.Data.DataColumn columnemployrate;
            
            private System.Data.DataColumn columnemploynumerator;
            
            private System.Data.DataColumn columnemploydenominator;
            
            private System.Data.DataColumn columncu;
            
            private System.Data.DataColumn columnct;
            
            private System.Data.DataColumn columnlu;
            
            private System.Data.DataColumn columnlt;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taxrateDataTable() {
                this.TableName = "taxrate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal taxrateDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected taxrateDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn taxcodeColumn {
                get {
                    return this.columntaxcode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn validitystartColumn {
                get {
                    return this.columnvaliditystart;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nbracketColumn {
                get {
                    return this.columnnbracket;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ratestartColumn {
                get {
                    return this.columnratestart;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn taxablenumeratorColumn {
                get {
                    return this.columntaxablenumerator;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn taxabledenominatorColumn {
                get {
                    return this.columntaxabledenominator;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn adminrateColumn {
                get {
                    return this.columnadminrate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn adminnumeratorColumn {
                get {
                    return this.columnadminnumerator;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn admindenominatorColumn {
                get {
                    return this.columnadmindenominator;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn employrateColumn {
                get {
                    return this.columnemployrate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn employnumeratorColumn {
                get {
                    return this.columnemploynumerator;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn employdenominatorColumn {
                get {
                    return this.columnemploydenominator;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taxrateRow this[int index] {
                get {
                    return ((taxrateRow)(this.Rows[index]));
                }
            }
            
            public event taxrateRowChangeEventHandler taxrateRowChanging;
            
            public event taxrateRowChangeEventHandler taxrateRowChanged;
            
            public event taxrateRowChangeEventHandler taxrateRowDeleting;
            
            public event taxrateRowChangeEventHandler taxrateRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtaxrateRow(taxrateRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taxrateRow AddtaxrateRow(
                        taxRow parenttaxRowBytaxtaxrate, 
                        System.DateTime validitystart, 
                        short nbracket, 
                        System.DateTime ratestart, 
                        double taxablenumerator, 
                        double taxabledenominator, 
                        double adminrate, 
                        double adminnumerator, 
                        double admindenominator, 
                        double employrate, 
                        double employnumerator, 
                        double employdenominator, 
                        string cu, 
                        System.DateTime ct, 
                        string lu, 
                        System.DateTime lt) {
                taxrateRow rowtaxrateRow = ((taxrateRow)(this.NewRow()));
                rowtaxrateRow.ItemArray = new object[] {
                        parenttaxRowBytaxtaxrate[0],
                        validitystart,
                        nbracket,
                        ratestart,
                        taxablenumerator,
                        taxabledenominator,
                        adminrate,
                        adminnumerator,
                        admindenominator,
                        employrate,
                        employnumerator,
                        employdenominator,
                        cu,
                        ct,
                        lu,
                        lt};
                this.Rows.Add(rowtaxrateRow);
                return rowtaxrateRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taxrateRow FindBytaxcodevaliditystartnbracketratestart(int taxcode, System.DateTime validitystart, short nbracket, System.DateTime ratestart) {
                return ((taxrateRow)(this.Rows.Find(new object[] {
                            taxcode,
                            validitystart,
                            nbracket,
                            ratestart})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                taxrateDataTable cln = ((taxrateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new taxrateDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntaxcode = base.Columns["taxcode"];
                this.columnvaliditystart = base.Columns["validitystart"];
                this.columnnbracket = base.Columns["nbracket"];
                this.columnratestart = base.Columns["ratestart"];
                this.columntaxablenumerator = base.Columns["taxablenumerator"];
                this.columntaxabledenominator = base.Columns["taxabledenominator"];
                this.columnadminrate = base.Columns["adminrate"];
                this.columnadminnumerator = base.Columns["adminnumerator"];
                this.columnadmindenominator = base.Columns["admindenominator"];
                this.columnemployrate = base.Columns["employrate"];
                this.columnemploynumerator = base.Columns["employnumerator"];
                this.columnemploydenominator = base.Columns["employdenominator"];
                this.columncu = base.Columns["cu"];
                this.columnct = base.Columns["ct"];
                this.columnlu = base.Columns["lu"];
                this.columnlt = base.Columns["lt"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntaxcode = new System.Data.DataColumn("taxcode", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxcode);
                this.columnvaliditystart = new System.Data.DataColumn("validitystart", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnvaliditystart);
                this.columnnbracket = new System.Data.DataColumn("nbracket", typeof(short), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnbracket);
                this.columnratestart = new System.Data.DataColumn("ratestart", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnratestart);
                this.columntaxablenumerator = new System.Data.DataColumn("taxablenumerator", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxablenumerator);
                this.columntaxabledenominator = new System.Data.DataColumn("taxabledenominator", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxabledenominator);
                this.columnadminrate = new System.Data.DataColumn("adminrate", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnadminrate);
                this.columnadminnumerator = new System.Data.DataColumn("adminnumerator", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnadminnumerator);
                this.columnadmindenominator = new System.Data.DataColumn("admindenominator", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnadmindenominator);
                this.columnemployrate = new System.Data.DataColumn("employrate", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnemployrate);
                this.columnemploynumerator = new System.Data.DataColumn("employnumerator", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnemploynumerator);
                this.columnemploydenominator = new System.Data.DataColumn("employdenominator", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnemploydenominator);
                this.columncu = new System.Data.DataColumn("cu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnct = new System.Data.DataColumn("ct", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlu = new System.Data.DataColumn("lu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnlt = new System.Data.DataColumn("lt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey1", new System.Data.DataColumn[] {
                                this.columntaxcode,
                                this.columnvaliditystart,
                                this.columnnbracket,
                                this.columnratestart}, true));
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey2", new System.Data.DataColumn[] {
                                this.columntaxcode}, false));
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey3", new System.Data.DataColumn[] {
                                this.columntaxcode,
                                this.columnvaliditystart}, false));
                this.columntaxcode.AllowDBNull = false;
                this.columntaxcode.Unique = true;
                this.columnvaliditystart.AllowDBNull = false;
                this.columnnbracket.AllowDBNull = false;
                this.columnratestart.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlt.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taxrateRow NewtaxrateRow() {
                return ((taxrateRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new taxrateRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(taxrateRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.taxrateRowChanged != null)) {
                    this.taxrateRowChanged(this, new taxrateRowChangeEvent(((taxrateRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.taxrateRowChanging != null)) {
                    this.taxrateRowChanging(this, new taxrateRowChangeEvent(((taxrateRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.taxrateRowDeleted != null)) {
                    this.taxrateRowDeleted(this, new taxrateRowChangeEvent(((taxrateRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.taxrateRowDeleting != null)) {
                    this.taxrateRowDeleting(this, new taxrateRowChangeEvent(((taxrateRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetaxrateRow(taxrateRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "taxrateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class taxDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columntaxcode;
            
            private System.Data.DataColumn columndescription;
            
            private System.Data.DataColumn columntaxkind;
            
            private System.Data.DataColumn columnfiscaltaxcode;
            
            private System.Data.DataColumn columnflagunabatable;
            
            private System.Data.DataColumn columncu;
            
            private System.Data.DataColumn columnct;
            
            private System.Data.DataColumn columnlu;
            
            private System.Data.DataColumn columnlt;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taxDataTable() {
                this.TableName = "tax";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal taxDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected taxDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn taxcodeColumn {
                get {
                    return this.columntaxcode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn taxkindColumn {
                get {
                    return this.columntaxkind;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn fiscaltaxcodeColumn {
                get {
                    return this.columnfiscaltaxcode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn flagunabatableColumn {
                get {
                    return this.columnflagunabatable;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taxRow this[int index] {
                get {
                    return ((taxRow)(this.Rows[index]));
                }
            }
            
            public event taxRowChangeEventHandler taxRowChanging;
            
            public event taxRowChangeEventHandler taxRowChanged;
            
            public event taxRowChangeEventHandler taxRowDeleting;
            
            public event taxRowChangeEventHandler taxRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtaxRow(taxRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taxRow AddtaxRow(int taxcode, string description, string taxkind, string fiscaltaxcode, string flagunabatable, string cu, System.DateTime ct, string lu, System.DateTime lt) {
                taxRow rowtaxRow = ((taxRow)(this.NewRow()));
                rowtaxRow.ItemArray = new object[] {
                        taxcode,
                        description,
                        taxkind,
                        fiscaltaxcode,
                        flagunabatable,
                        cu,
                        ct,
                        lu,
                        lt};
                this.Rows.Add(rowtaxRow);
                return rowtaxRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taxRow FindBytaxcode(int taxcode) {
                return ((taxRow)(this.Rows.Find(new object[] {
                            taxcode})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                taxDataTable cln = ((taxDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new taxDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntaxcode = base.Columns["taxcode"];
                this.columndescription = base.Columns["description"];
                this.columntaxkind = base.Columns["taxkind"];
                this.columnfiscaltaxcode = base.Columns["fiscaltaxcode"];
                this.columnflagunabatable = base.Columns["flagunabatable"];
                this.columncu = base.Columns["cu"];
                this.columnct = base.Columns["ct"];
                this.columnlu = base.Columns["lu"];
                this.columnlt = base.Columns["lt"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntaxcode = new System.Data.DataColumn("taxcode", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxcode);
                this.columndescription = new System.Data.DataColumn("description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columntaxkind = new System.Data.DataColumn("taxkind", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxkind);
                this.columnfiscaltaxcode = new System.Data.DataColumn("fiscaltaxcode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfiscaltaxcode);
                this.columnflagunabatable = new System.Data.DataColumn("flagunabatable", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnflagunabatable);
                this.columncu = new System.Data.DataColumn("cu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnct = new System.Data.DataColumn("ct", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlu = new System.Data.DataColumn("lu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnlt = new System.Data.DataColumn("lt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey7", new System.Data.DataColumn[] {
                                this.columntaxcode}, true));
                this.columntaxcode.AllowDBNull = false;
                this.columntaxcode.Unique = true;
                this.columndescription.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlt.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taxRow NewtaxRow() {
                return ((taxRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new taxRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(taxRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.taxRowChanged != null)) {
                    this.taxRowChanged(this, new taxRowChangeEvent(((taxRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.taxRowChanging != null)) {
                    this.taxRowChanging(this, new taxRowChangeEvent(((taxRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.taxRowDeleted != null)) {
                    this.taxRowDeleted(this, new taxRowChangeEvent(((taxRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.taxRowDeleting != null)) {
                    this.taxRowDeleting(this, new taxRowChangeEvent(((taxRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetaxRow(taxRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "taxDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ratebracketDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columntaxcode;
            
            private System.Data.DataColumn columnvaliditystart;
            
            private System.Data.DataColumn columnnbracket;
            
            private System.Data.DataColumn column__numeroscaglionestringa;
            
            private System.Data.DataColumn columnminamount;
            
            private System.Data.DataColumn columnmaxamount;
            
            private System.Data.DataColumn columncu;
            
            private System.Data.DataColumn columnct;
            
            private System.Data.DataColumn columnlu;
            
            private System.Data.DataColumn columnlt;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratebracketDataTable() {
                this.TableName = "ratebracket";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ratebracketDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ratebracketDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn taxcodeColumn {
                get {
                    return this.columntaxcode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn validitystartColumn {
                get {
                    return this.columnvaliditystart;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nbracketColumn {
                get {
                    return this.columnnbracket;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn @__numeroscaglionestringaColumn {
                get {
                    return this.column__numeroscaglionestringa;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn minamountColumn {
                get {
                    return this.columnminamount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn maxamountColumn {
                get {
                    return this.columnmaxamount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratebracketRow this[int index] {
                get {
                    return ((ratebracketRow)(this.Rows[index]));
                }
            }
            
            public event ratebracketRowChangeEventHandler ratebracketRowChanging;
            
            public event ratebracketRowChangeEventHandler ratebracketRowChanged;
            
            public event ratebracketRowChangeEventHandler ratebracketRowDeleting;
            
            public event ratebracketRowChangeEventHandler ratebracketRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddratebracketRow(ratebracketRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratebracketRow AddratebracketRow(int taxcode, System.DateTime validitystart, short nbracket, string @__numeroscaglionestringa, decimal minamount, decimal maxamount, string cu, System.DateTime ct, string lu, System.DateTime lt) {
                ratebracketRow rowratebracketRow = ((ratebracketRow)(this.NewRow()));
                rowratebracketRow.ItemArray = new object[] {
                        taxcode,
                        validitystart,
                        nbracket,
                        @__numeroscaglionestringa,
                        minamount,
                        maxamount,
                        cu,
                        ct,
                        lu,
                        lt};
                this.Rows.Add(rowratebracketRow);
                return rowratebracketRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratebracketRow FindBytaxcodevaliditystartnbracket(int taxcode, System.DateTime validitystart, short nbracket) {
                return ((ratebracketRow)(this.Rows.Find(new object[] {
                            taxcode,
                            validitystart,
                            nbracket})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ratebracketDataTable cln = ((ratebracketDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ratebracketDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntaxcode = base.Columns["taxcode"];
                this.columnvaliditystart = base.Columns["validitystart"];
                this.columnnbracket = base.Columns["nbracket"];
                this.column__numeroscaglionestringa = base.Columns["!numeroscaglionestringa"];
                this.columnminamount = base.Columns["minamount"];
                this.columnmaxamount = base.Columns["maxamount"];
                this.columncu = base.Columns["cu"];
                this.columnct = base.Columns["ct"];
                this.columnlu = base.Columns["lu"];
                this.columnlt = base.Columns["lt"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntaxcode = new System.Data.DataColumn("taxcode", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxcode);
                this.columnvaliditystart = new System.Data.DataColumn("validitystart", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnvaliditystart);
                this.columnnbracket = new System.Data.DataColumn("nbracket", typeof(short), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnbracket);
                this.column__numeroscaglionestringa = new System.Data.DataColumn("!numeroscaglionestringa", typeof(string), null, System.Data.MappingType.Element);
                this.column__numeroscaglionestringa.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "__numeroscaglionestringa");
                this.column__numeroscaglionestringa.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "__numeroscaglionestringaColumn");
                this.column__numeroscaglionestringa.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column__numeroscaglionestringa");
                this.column__numeroscaglionestringa.ExtendedProperties.Add("Generator_UserColumnName", "!numeroscaglionestringa");
                base.Columns.Add(this.column__numeroscaglionestringa);
                this.columnminamount = new System.Data.DataColumn("minamount", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnminamount);
                this.columnmaxamount = new System.Data.DataColumn("maxamount", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaxamount);
                this.columncu = new System.Data.DataColumn("cu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnct = new System.Data.DataColumn("ct", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlu = new System.Data.DataColumn("lu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnlt = new System.Data.DataColumn("lt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey8", new System.Data.DataColumn[] {
                                this.columntaxcode,
                                this.columnvaliditystart,
                                this.columnnbracket}, true));
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey9", new System.Data.DataColumn[] {
                                this.columntaxcode}, false));
                this.columntaxcode.AllowDBNull = false;
                this.columntaxcode.Unique = true;
                this.columnvaliditystart.AllowDBNull = false;
                this.columnnbracket.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlt.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratebracketRow NewratebracketRow() {
                return ((ratebracketRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ratebracketRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ratebracketRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ratebracketRowChanged != null)) {
                    this.ratebracketRowChanged(this, new ratebracketRowChangeEvent(((ratebracketRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ratebracketRowChanging != null)) {
                    this.ratebracketRowChanging(this, new ratebracketRowChangeEvent(((ratebracketRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ratebracketRowDeleted != null)) {
                    this.ratebracketRowDeleted(this, new ratebracketRowChangeEvent(((ratebracketRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ratebracketRowDeleting != null)) {
                    this.ratebracketRowDeleting(this, new ratebracketRowChangeEvent(((ratebracketRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveratebracketRow(ratebracketRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ratebracketDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ratevalidityDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columntaxcode;
            
            private System.Data.DataColumn columnvaliditystart;
            
            private System.Data.DataColumn column__datainiziostrutturastringa;
            
            private System.Data.DataColumn columntxt;
            
            private System.Data.DataColumn columnrtf;
            
            private System.Data.DataColumn columncu;
            
            private System.Data.DataColumn columnct;
            
            private System.Data.DataColumn columnlu;
            
            private System.Data.DataColumn columnlt;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratevalidityDataTable() {
                this.TableName = "ratevalidity";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ratevalidityDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ratevalidityDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn taxcodeColumn {
                get {
                    return this.columntaxcode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn validitystartColumn {
                get {
                    return this.columnvaliditystart;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn @__datainiziostrutturastringaColumn {
                get {
                    return this.column__datainiziostrutturastringa;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn txtColumn {
                get {
                    return this.columntxt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rtfColumn {
                get {
                    return this.columnrtf;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratevalidityRow this[int index] {
                get {
                    return ((ratevalidityRow)(this.Rows[index]));
                }
            }
            
            public event ratevalidityRowChangeEventHandler ratevalidityRowChanging;
            
            public event ratevalidityRowChangeEventHandler ratevalidityRowChanged;
            
            public event ratevalidityRowChangeEventHandler ratevalidityRowDeleting;
            
            public event ratevalidityRowChangeEventHandler ratevalidityRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddratevalidityRow(ratevalidityRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratevalidityRow AddratevalidityRow(taxRow parenttaxRowBytaxratevalidity, System.DateTime validitystart, string @__datainiziostrutturastringa, string txt, byte[] rtf, string cu, System.DateTime ct, string lu, System.DateTime lt) {
                ratevalidityRow rowratevalidityRow = ((ratevalidityRow)(this.NewRow()));
                rowratevalidityRow.ItemArray = new object[] {
                        parenttaxRowBytaxratevalidity[0],
                        validitystart,
                        @__datainiziostrutturastringa,
                        txt,
                        rtf,
                        cu,
                        ct,
                        lu,
                        lt};
                this.Rows.Add(rowratevalidityRow);
                return rowratevalidityRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratevalidityRow FindBytaxcodevaliditystart(int taxcode, System.DateTime validitystart) {
                return ((ratevalidityRow)(this.Rows.Find(new object[] {
                            taxcode,
                            validitystart})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ratevalidityDataTable cln = ((ratevalidityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ratevalidityDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntaxcode = base.Columns["taxcode"];
                this.columnvaliditystart = base.Columns["validitystart"];
                this.column__datainiziostrutturastringa = base.Columns["!datainiziostrutturastringa"];
                this.columntxt = base.Columns["txt"];
                this.columnrtf = base.Columns["rtf"];
                this.columncu = base.Columns["cu"];
                this.columnct = base.Columns["ct"];
                this.columnlu = base.Columns["lu"];
                this.columnlt = base.Columns["lt"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntaxcode = new System.Data.DataColumn("taxcode", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxcode);
                this.columnvaliditystart = new System.Data.DataColumn("validitystart", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnvaliditystart);
                this.column__datainiziostrutturastringa = new System.Data.DataColumn("!datainiziostrutturastringa", typeof(string), null, System.Data.MappingType.Element);
                this.column__datainiziostrutturastringa.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "__datainiziostrutturastringa");
                this.column__datainiziostrutturastringa.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "__datainiziostrutturastringaColumn");
                this.column__datainiziostrutturastringa.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column__datainiziostrutturastringa");
                this.column__datainiziostrutturastringa.ExtendedProperties.Add("Generator_UserColumnName", "!datainiziostrutturastringa");
                base.Columns.Add(this.column__datainiziostrutturastringa);
                this.columntxt = new System.Data.DataColumn("txt", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntxt);
                this.columnrtf = new System.Data.DataColumn("rtf", typeof(byte[]), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrtf);
                this.columncu = new System.Data.DataColumn("cu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnct = new System.Data.DataColumn("ct", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlu = new System.Data.DataColumn("lu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnlt = new System.Data.DataColumn("lt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey11", new System.Data.DataColumn[] {
                                this.columntaxcode,
                                this.columnvaliditystart}, true));
                this.columntaxcode.AllowDBNull = false;
                this.columnvaliditystart.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlt.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratevalidityRow NewratevalidityRow() {
                return ((ratevalidityRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ratevalidityRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ratevalidityRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ratevalidityRowChanged != null)) {
                    this.ratevalidityRowChanged(this, new ratevalidityRowChangeEvent(((ratevalidityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ratevalidityRowChanging != null)) {
                    this.ratevalidityRowChanging(this, new ratevalidityRowChangeEvent(((ratevalidityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ratevalidityRowDeleted != null)) {
                    this.ratevalidityRowDeleted(this, new ratevalidityRowChangeEvent(((ratevalidityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ratevalidityRowDeleting != null)) {
                    this.ratevalidityRowDeleting(this, new ratevalidityRowChangeEvent(((ratevalidityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveratevalidityRow(ratevalidityRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ratevalidityDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class taxrateRow : System.Data.DataRow {
            
            private taxrateDataTable tabletaxrate;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal taxrateRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletaxrate = ((taxrateDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int taxcode {
                get {
                    return ((int)(this[this.tabletaxrate.taxcodeColumn]));
                }
                set {
                    this[this.tabletaxrate.taxcodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime validitystart {
                get {
                    return ((System.DateTime)(this[this.tabletaxrate.validitystartColumn]));
                }
                set {
                    this[this.tabletaxrate.validitystartColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short nbracket {
                get {
                    return ((short)(this[this.tabletaxrate.nbracketColumn]));
                }
                set {
                    this[this.tabletaxrate.nbracketColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ratestart {
                get {
                    return ((System.DateTime)(this[this.tabletaxrate.ratestartColumn]));
                }
                set {
                    this[this.tabletaxrate.ratestartColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double taxablenumerator {
                get {
                    try {
                        return ((double)(this[this.tabletaxrate.taxablenumeratorColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'taxablenumerator\' in table \'taxrate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletaxrate.taxablenumeratorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double taxabledenominator {
                get {
                    try {
                        return ((double)(this[this.tabletaxrate.taxabledenominatorColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'taxabledenominator\' in table \'taxrate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletaxrate.taxabledenominatorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double adminrate {
                get {
                    try {
                        return ((double)(this[this.tabletaxrate.adminrateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'adminrate\' in table \'taxrate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletaxrate.adminrateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double adminnumerator {
                get {
                    try {
                        return ((double)(this[this.tabletaxrate.adminnumeratorColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'adminnumerator\' in table \'taxrate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletaxrate.adminnumeratorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double admindenominator {
                get {
                    try {
                        return ((double)(this[this.tabletaxrate.admindenominatorColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'admindenominator\' in table \'taxrate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletaxrate.admindenominatorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double employrate {
                get {
                    try {
                        return ((double)(this[this.tabletaxrate.employrateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'employrate\' in table \'taxrate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletaxrate.employrateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double employnumerator {
                get {
                    try {
                        return ((double)(this[this.tabletaxrate.employnumeratorColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'employnumerator\' in table \'taxrate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletaxrate.employnumeratorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double employdenominator {
                get {
                    try {
                        return ((double)(this[this.tabletaxrate.employdenominatorColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'employdenominator\' in table \'taxrate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletaxrate.employdenominatorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cu {
                get {
                    return ((string)(this[this.tabletaxrate.cuColumn]));
                }
                set {
                    this[this.tabletaxrate.cuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ct {
                get {
                    return ((System.DateTime)(this[this.tabletaxrate.ctColumn]));
                }
                set {
                    this[this.tabletaxrate.ctColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    return ((string)(this[this.tabletaxrate.luColumn]));
                }
                set {
                    this[this.tabletaxrate.luColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    return ((System.DateTime)(this[this.tabletaxrate.ltColumn]));
                }
                set {
                    this[this.tabletaxrate.ltColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratebracketRow ratebracketRowParent {
                get {
                    return ((ratebracketRow)(this.GetParentRow(this.Table.ParentRelations["ratebrackettaxrate"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ratebrackettaxrate"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taxRow taxRow {
                get {
                    return ((taxRow)(this.GetParentRow(this.Table.ParentRelations["taxtaxrate"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["taxtaxrate"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratevalidityRow ratevalidityRowParent {
                get {
                    return ((ratevalidityRow)(this.GetParentRow(this.Table.ParentRelations["ratevaliditytaxrate"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ratevaliditytaxrate"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstaxablenumeratorNull() {
                return this.IsNull(this.tabletaxrate.taxablenumeratorColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettaxablenumeratorNull() {
                this[this.tabletaxrate.taxablenumeratorColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstaxabledenominatorNull() {
                return this.IsNull(this.tabletaxrate.taxabledenominatorColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettaxabledenominatorNull() {
                this[this.tabletaxrate.taxabledenominatorColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsadminrateNull() {
                return this.IsNull(this.tabletaxrate.adminrateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetadminrateNull() {
                this[this.tabletaxrate.adminrateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsadminnumeratorNull() {
                return this.IsNull(this.tabletaxrate.adminnumeratorColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetadminnumeratorNull() {
                this[this.tabletaxrate.adminnumeratorColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsadmindenominatorNull() {
                return this.IsNull(this.tabletaxrate.admindenominatorColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetadmindenominatorNull() {
                this[this.tabletaxrate.admindenominatorColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemployrateNull() {
                return this.IsNull(this.tabletaxrate.employrateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemployrateNull() {
                this[this.tabletaxrate.employrateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemploynumeratorNull() {
                return this.IsNull(this.tabletaxrate.employnumeratorColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemploynumeratorNull() {
                this[this.tabletaxrate.employnumeratorColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemploydenominatorNull() {
                return this.IsNull(this.tabletaxrate.employdenominatorColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemploydenominatorNull() {
                this[this.tabletaxrate.employdenominatorColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class taxRow : System.Data.DataRow {
            
            private taxDataTable tabletax;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal taxRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletax = ((taxDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int taxcode {
                get {
                    return ((int)(this[this.tabletax.taxcodeColumn]));
                }
                set {
                    this[this.tabletax.taxcodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    return ((string)(this[this.tabletax.descriptionColumn]));
                }
                set {
                    this[this.tabletax.descriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string taxkind {
                get {
                    try {
                        return ((string)(this[this.tabletax.taxkindColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'taxkind\' in table \'tax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletax.taxkindColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fiscaltaxcode {
                get {
                    try {
                        return ((string)(this[this.tabletax.fiscaltaxcodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'fiscaltaxcode\' in table \'tax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletax.fiscaltaxcodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flagunabatable {
                get {
                    try {
                        return ((string)(this[this.tabletax.flagunabatableColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'flagunabatable\' in table \'tax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletax.flagunabatableColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cu {
                get {
                    return ((string)(this[this.tabletax.cuColumn]));
                }
                set {
                    this[this.tabletax.cuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ct {
                get {
                    return ((System.DateTime)(this[this.tabletax.ctColumn]));
                }
                set {
                    this[this.tabletax.ctColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    return ((string)(this[this.tabletax.luColumn]));
                }
                set {
                    this[this.tabletax.luColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    return ((System.DateTime)(this[this.tabletax.ltColumn]));
                }
                set {
                    this[this.tabletax.ltColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstaxkindNull() {
                return this.IsNull(this.tabletax.taxkindColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettaxkindNull() {
                this[this.tabletax.taxkindColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfiscaltaxcodeNull() {
                return this.IsNull(this.tabletax.fiscaltaxcodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfiscaltaxcodeNull() {
                this[this.tabletax.fiscaltaxcodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagunabatableNull() {
                return this.IsNull(this.tabletax.flagunabatableColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagunabatableNull() {
                this[this.tabletax.flagunabatableColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratevalidityRow[] GetratevalidityRows() {
                return ((ratevalidityRow[])(base.GetChildRows(this.Table.ChildRelations["taxratevalidity"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taxrateRow[] GettaxrateRows() {
                return ((taxrateRow[])(base.GetChildRows(this.Table.ChildRelations["taxtaxrate"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ratebracketRow : System.Data.DataRow {
            
            private ratebracketDataTable tableratebracket;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ratebracketRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableratebracket = ((ratebracketDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int taxcode {
                get {
                    return ((int)(this[this.tableratebracket.taxcodeColumn]));
                }
                set {
                    this[this.tableratebracket.taxcodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime validitystart {
                get {
                    return ((System.DateTime)(this[this.tableratebracket.validitystartColumn]));
                }
                set {
                    this[this.tableratebracket.validitystartColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short nbracket {
                get {
                    return ((short)(this[this.tableratebracket.nbracketColumn]));
                }
                set {
                    this[this.tableratebracket.nbracketColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string @__numeroscaglionestringa {
                get {
                    try {
                        return ((string)(this[this.tableratebracket.@__numeroscaglionestringaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'!numeroscaglionestringa\' in table \'ratebracket\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableratebracket.@__numeroscaglionestringaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal minamount {
                get {
                    try {
                        return ((decimal)(this[this.tableratebracket.minamountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'minamount\' in table \'ratebracket\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableratebracket.minamountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal maxamount {
                get {
                    try {
                        return ((decimal)(this[this.tableratebracket.maxamountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'maxamount\' in table \'ratebracket\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableratebracket.maxamountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cu {
                get {
                    return ((string)(this[this.tableratebracket.cuColumn]));
                }
                set {
                    this[this.tableratebracket.cuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ct {
                get {
                    return ((System.DateTime)(this[this.tableratebracket.ctColumn]));
                }
                set {
                    this[this.tableratebracket.ctColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    return ((string)(this[this.tableratebracket.luColumn]));
                }
                set {
                    this[this.tableratebracket.luColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    return ((System.DateTime)(this[this.tableratebracket.ltColumn]));
                }
                set {
                    this[this.tableratebracket.ltColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratevalidityRow ratevalidityRowParent {
                get {
                    return ((ratevalidityRow)(this.GetParentRow(this.Table.ParentRelations["ratevalidityratebracket"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ratevalidityratebracket"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is__numeroscaglionestringaNull() {
                return this.IsNull(this.tableratebracket.@__numeroscaglionestringaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set__numeroscaglionestringaNull() {
                this[this.tableratebracket.@__numeroscaglionestringaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsminamountNull() {
                return this.IsNull(this.tableratebracket.minamountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetminamountNull() {
                this[this.tableratebracket.minamountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmaxamountNull() {
                return this.IsNull(this.tableratebracket.maxamountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmaxamountNull() {
                this[this.tableratebracket.maxamountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taxrateRow[] GettaxrateRows() {
                return ((taxrateRow[])(base.GetChildRows(this.Table.ChildRelations["ratebrackettaxrate"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ratevalidityRow : System.Data.DataRow {
            
            private ratevalidityDataTable tableratevalidity;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ratevalidityRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableratevalidity = ((ratevalidityDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int taxcode {
                get {
                    return ((int)(this[this.tableratevalidity.taxcodeColumn]));
                }
                set {
                    this[this.tableratevalidity.taxcodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime validitystart {
                get {
                    return ((System.DateTime)(this[this.tableratevalidity.validitystartColumn]));
                }
                set {
                    this[this.tableratevalidity.validitystartColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string @__datainiziostrutturastringa {
                get {
                    try {
                        return ((string)(this[this.tableratevalidity.@__datainiziostrutturastringaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'!datainiziostrutturastringa\' in table \'ratevalidity\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableratevalidity.@__datainiziostrutturastringaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string txt {
                get {
                    try {
                        return ((string)(this[this.tableratevalidity.txtColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'txt\' in table \'ratevalidity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableratevalidity.txtColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] rtf {
                get {
                    try {
                        return ((byte[])(this[this.tableratevalidity.rtfColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'rtf\' in table \'ratevalidity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableratevalidity.rtfColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cu {
                get {
                    return ((string)(this[this.tableratevalidity.cuColumn]));
                }
                set {
                    this[this.tableratevalidity.cuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ct {
                get {
                    return ((System.DateTime)(this[this.tableratevalidity.ctColumn]));
                }
                set {
                    this[this.tableratevalidity.ctColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    return ((string)(this[this.tableratevalidity.luColumn]));
                }
                set {
                    this[this.tableratevalidity.luColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    return ((System.DateTime)(this[this.tableratevalidity.ltColumn]));
                }
                set {
                    this[this.tableratevalidity.ltColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taxRow taxRow {
                get {
                    return ((taxRow)(this.GetParentRow(this.Table.ParentRelations["taxratevalidity"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["taxratevalidity"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is__datainiziostrutturastringaNull() {
                return this.IsNull(this.tableratevalidity.@__datainiziostrutturastringaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set__datainiziostrutturastringaNull() {
                this[this.tableratevalidity.@__datainiziostrutturastringaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstxtNull() {
                return this.IsNull(this.tableratevalidity.txtColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettxtNull() {
                this[this.tableratevalidity.txtColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrtfNull() {
                return this.IsNull(this.tableratevalidity.rtfColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrtfNull() {
                this[this.tableratevalidity.rtfColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratebracketRow[] GetratebracketRows() {
                return ((ratebracketRow[])(base.GetChildRows(this.Table.ChildRelations["ratevalidityratebracket"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taxrateRow[] GettaxrateRows() {
                return ((taxrateRow[])(base.GetChildRows(this.Table.ChildRelations["ratevaliditytaxrate"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class taxrateRowChangeEvent : System.EventArgs {
            
            private taxrateRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taxrateRowChangeEvent(taxrateRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taxrateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class taxRowChangeEvent : System.EventArgs {
            
            private taxRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taxRowChangeEvent(taxRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taxRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ratebracketRowChangeEvent : System.EventArgs {
            
            private ratebracketRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratebracketRowChangeEvent(ratebracketRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratebracketRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ratevalidityRowChangeEvent : System.EventArgs {
            
            private ratevalidityRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratevalidityRowChangeEvent(ratevalidityRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratevalidityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591