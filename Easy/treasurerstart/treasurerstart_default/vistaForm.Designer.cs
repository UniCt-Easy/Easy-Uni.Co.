
/*
Easy
Copyright (C) 2024 Università degli Studi di Catania (www.unict.it)
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/


//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:2.0.50727.5456
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace treasurerstart_default {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("vistaForm")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class vistaForm : global::System.Data.DataSet {
        
        private treasurerstartDataTable tabletreasurerstart;
        
        private treasurerDataTable tabletreasurer;
        
        private global::System.Data.DataRelation relationtreasurertreasurerstart;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vistaForm() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected vistaForm(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["treasurerstart"] != null)) {
                    base.Tables.Add(new treasurerstartDataTable(ds.Tables["treasurerstart"]));
                }
                if ((ds.Tables["treasurer"] != null)) {
                    base.Tables.Add(new treasurerDataTable(ds.Tables["treasurer"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public treasurerstartDataTable treasurerstart {
            get {
                return this.tabletreasurerstart;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public treasurerDataTable treasurer {
            get {
                return this.tabletreasurer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            vistaForm cln = ((vistaForm)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["treasurerstart"] != null)) {
                    base.Tables.Add(new treasurerstartDataTable(ds.Tables["treasurerstart"]));
                }
                if ((ds.Tables["treasurer"] != null)) {
                    base.Tables.Add(new treasurerDataTable(ds.Tables["treasurer"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabletreasurerstart = ((treasurerstartDataTable)(base.Tables["treasurerstart"]));
            if ((initTable == true)) {
                if ((this.tabletreasurerstart != null)) {
                    this.tabletreasurerstart.InitVars();
                }
            }
            this.tabletreasurer = ((treasurerDataTable)(base.Tables["treasurer"]));
            if ((initTable == true)) {
                if ((this.tabletreasurer != null)) {
                    this.tabletreasurer.InitVars();
                }
            }
            this.relationtreasurertreasurerstart = this.Relations["treasurertreasurerstart"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "vistaForm";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Vistasaldoinizialecassiere.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("en-US");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletreasurerstart = new treasurerstartDataTable();
            base.Tables.Add(this.tabletreasurerstart);
            this.tabletreasurer = new treasurerDataTable();
            base.Tables.Add(this.tabletreasurer);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("treasurertreasurerstart", new global::System.Data.DataColumn[] {
                        this.tabletreasurer.idtreasurerColumn}, new global::System.Data.DataColumn[] {
                        this.tabletreasurerstart.idtreasurerColumn});
            this.tabletreasurerstart.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationtreasurertreasurerstart = new global::System.Data.DataRelation("treasurertreasurerstart", new global::System.Data.DataColumn[] {
                        this.tabletreasurer.idtreasurerColumn}, new global::System.Data.DataColumn[] {
                        this.tabletreasurerstart.idtreasurerColumn}, false);
            this.Relations.Add(this.relationtreasurertreasurerstart);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetreasurerstart() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetreasurer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            vistaForm ds = new vistaForm();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void treasurerstartRowChangeEventHandler(object sender, treasurerstartRowChangeEvent e);
        
        public delegate void treasurerRowChangeEventHandler(object sender, treasurerRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class treasurerstartDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnidtreasurer;
            
            private global::System.Data.DataColumn columnayear;
            
            private global::System.Data.DataColumn column__descrizione;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columncu;
            
            private global::System.Data.DataColumn columnct;
            
            private global::System.Data.DataColumn columnlu;
            
            private global::System.Data.DataColumn columnlt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public treasurerstartDataTable() {
                this.TableName = "treasurerstart";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal treasurerstartDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected treasurerstartDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idtreasurerColumn {
                get {
                    return this.columnidtreasurer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ayearColumn {
                get {
                    return this.columnayear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn @__descrizioneColumn {
                get {
                    return this.column__descrizione;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public treasurerstartRow this[int index] {
                get {
                    return ((treasurerstartRow)(this.Rows[index]));
                }
            }
            
            public event treasurerstartRowChangeEventHandler treasurerstartRowChanging;
            
            public event treasurerstartRowChangeEventHandler treasurerstartRowChanged;
            
            public event treasurerstartRowChangeEventHandler treasurerstartRowDeleting;
            
            public event treasurerstartRowChangeEventHandler treasurerstartRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtreasurerstartRow(treasurerstartRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public treasurerstartRow AddtreasurerstartRow(treasurerRow parenttreasurerRowBytreasurertreasurerstart, short ayear, string @__descrizione, decimal amount, string cu, System.DateTime ct, string lu, System.DateTime lt) {
                treasurerstartRow rowtreasurerstartRow = ((treasurerstartRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ayear,
                        @__descrizione,
                        amount,
                        cu,
                        ct,
                        lu,
                        lt};
                if ((parenttreasurerRowBytreasurertreasurerstart != null)) {
                    columnValuesArray[0] = parenttreasurerRowBytreasurertreasurerstart[0];
                }
                rowtreasurerstartRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtreasurerstartRow);
                return rowtreasurerstartRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public treasurerstartRow FindByidtreasurerayear(int idtreasurer, short ayear) {
                return ((treasurerstartRow)(this.Rows.Find(new object[] {
                            idtreasurer,
                            ayear})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                treasurerstartDataTable cln = ((treasurerstartDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new treasurerstartDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidtreasurer = base.Columns["idtreasurer"];
                this.columnayear = base.Columns["ayear"];
                this.column__descrizione = base.Columns["!descrizione"];
                this.columnamount = base.Columns["amount"];
                this.columncu = base.Columns["cu"];
                this.columnct = base.Columns["ct"];
                this.columnlu = base.Columns["lu"];
                this.columnlt = base.Columns["lt"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidtreasurer = new global::System.Data.DataColumn("idtreasurer", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidtreasurer);
                this.columnayear = new global::System.Data.DataColumn("ayear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnayear);
                this.column__descrizione = new global::System.Data.DataColumn("!descrizione", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column__descrizione);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columncu = new global::System.Data.DataColumn("cu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnct = new global::System.Data.DataColumn("ct", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlu = new global::System.Data.DataColumn("lu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnlt = new global::System.Data.DataColumn("lt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidtreasurer,
                                this.columnayear}, true));
                this.columnidtreasurer.AllowDBNull = false;
                this.columnayear.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlt.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public treasurerstartRow NewtreasurerstartRow() {
                return ((treasurerstartRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new treasurerstartRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(treasurerstartRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.treasurerstartRowChanged != null)) {
                    this.treasurerstartRowChanged(this, new treasurerstartRowChangeEvent(((treasurerstartRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.treasurerstartRowChanging != null)) {
                    this.treasurerstartRowChanging(this, new treasurerstartRowChangeEvent(((treasurerstartRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.treasurerstartRowDeleted != null)) {
                    this.treasurerstartRowDeleted(this, new treasurerstartRowChangeEvent(((treasurerstartRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.treasurerstartRowDeleting != null)) {
                    this.treasurerstartRowDeleting(this, new treasurerstartRowChangeEvent(((treasurerstartRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetreasurerstartRow(treasurerstartRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "treasurerstartDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class treasurerDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnidtreasurer;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnflagdefault;
            
            private global::System.Data.DataColumn columncin;
            
            private global::System.Data.DataColumn columnidbank;
            
            private global::System.Data.DataColumn columnidcab;
            
            private global::System.Data.DataColumn columncc;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columncap;
            
            private global::System.Data.DataColumn columncity;
            
            private global::System.Data.DataColumn columncountry;
            
            private global::System.Data.DataColumn columnphoneprefix;
            
            private global::System.Data.DataColumn columnphonenumber;
            
            private global::System.Data.DataColumn columnfaxprefix;
            
            private global::System.Data.DataColumn columnfaxnumber;
            
            private global::System.Data.DataColumn columnidsor01;
            
            private global::System.Data.DataColumn columnidsor02;
            
            private global::System.Data.DataColumn columnidsor03;
            
            private global::System.Data.DataColumn columnidsor04;
            
            private global::System.Data.DataColumn columnidsor05;
            
            private global::System.Data.DataColumn columncu;
            
            private global::System.Data.DataColumn columnct;
            
            private global::System.Data.DataColumn columnlu;
            
            private global::System.Data.DataColumn columnlt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public treasurerDataTable() {
                this.TableName = "treasurer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal treasurerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected treasurerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idtreasurerColumn {
                get {
                    return this.columnidtreasurer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn flagdefaultColumn {
                get {
                    return this.columnflagdefault;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cinColumn {
                get {
                    return this.columncin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idbankColumn {
                get {
                    return this.columnidbank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idcabColumn {
                get {
                    return this.columnidcab;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ccColumn {
                get {
                    return this.columncc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn capColumn {
                get {
                    return this.columncap;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cityColumn {
                get {
                    return this.columncity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn countryColumn {
                get {
                    return this.columncountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phoneprefixColumn {
                get {
                    return this.columnphoneprefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phonenumberColumn {
                get {
                    return this.columnphonenumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn faxprefixColumn {
                get {
                    return this.columnfaxprefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn faxnumberColumn {
                get {
                    return this.columnfaxnumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idsor01Column {
                get {
                    return this.columnidsor01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idsor02Column {
                get {
                    return this.columnidsor02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idsor03Column {
                get {
                    return this.columnidsor03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idsor04Column {
                get {
                    return this.columnidsor04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idsor05Column {
                get {
                    return this.columnidsor05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public treasurerRow this[int index] {
                get {
                    return ((treasurerRow)(this.Rows[index]));
                }
            }
            
            public event treasurerRowChangeEventHandler treasurerRowChanging;
            
            public event treasurerRowChangeEventHandler treasurerRowChanged;
            
            public event treasurerRowChangeEventHandler treasurerRowDeleting;
            
            public event treasurerRowChangeEventHandler treasurerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtreasurerRow(treasurerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public treasurerRow AddtreasurerRow(
                        int idtreasurer, 
                        string description, 
                        string flagdefault, 
                        string cin, 
                        string idbank, 
                        string idcab, 
                        string cc, 
                        string address, 
                        string cap, 
                        string city, 
                        string country, 
                        string phoneprefix, 
                        string phonenumber, 
                        string faxprefix, 
                        string faxnumber, 
                        int idsor01, 
                        int idsor02, 
                        int idsor03, 
                        int idsor04, 
                        int idsor05, 
                        string cu, 
                        System.DateTime ct, 
                        string lu, 
                        System.DateTime lt) {
                treasurerRow rowtreasurerRow = ((treasurerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        idtreasurer,
                        description,
                        flagdefault,
                        cin,
                        idbank,
                        idcab,
                        cc,
                        address,
                        cap,
                        city,
                        country,
                        phoneprefix,
                        phonenumber,
                        faxprefix,
                        faxnumber,
                        idsor01,
                        idsor02,
                        idsor03,
                        idsor04,
                        idsor05,
                        cu,
                        ct,
                        lu,
                        lt};
                rowtreasurerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtreasurerRow);
                return rowtreasurerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public treasurerRow FindByidtreasurer(int idtreasurer) {
                return ((treasurerRow)(this.Rows.Find(new object[] {
                            idtreasurer})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                treasurerDataTable cln = ((treasurerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new treasurerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidtreasurer = base.Columns["idtreasurer"];
                this.columndescription = base.Columns["description"];
                this.columnflagdefault = base.Columns["flagdefault"];
                this.columncin = base.Columns["cin"];
                this.columnidbank = base.Columns["idbank"];
                this.columnidcab = base.Columns["idcab"];
                this.columncc = base.Columns["cc"];
                this.columnaddress = base.Columns["address"];
                this.columncap = base.Columns["cap"];
                this.columncity = base.Columns["city"];
                this.columncountry = base.Columns["country"];
                this.columnphoneprefix = base.Columns["phoneprefix"];
                this.columnphonenumber = base.Columns["phonenumber"];
                this.columnfaxprefix = base.Columns["faxprefix"];
                this.columnfaxnumber = base.Columns["faxnumber"];
                this.columnidsor01 = base.Columns["idsor01"];
                this.columnidsor02 = base.Columns["idsor02"];
                this.columnidsor03 = base.Columns["idsor03"];
                this.columnidsor04 = base.Columns["idsor04"];
                this.columnidsor05 = base.Columns["idsor05"];
                this.columncu = base.Columns["cu"];
                this.columnct = base.Columns["ct"];
                this.columnlu = base.Columns["lu"];
                this.columnlt = base.Columns["lt"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidtreasurer = new global::System.Data.DataColumn("idtreasurer", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidtreasurer);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnflagdefault = new global::System.Data.DataColumn("flagdefault", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflagdefault);
                this.columncin = new global::System.Data.DataColumn("cin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncin);
                this.columnidbank = new global::System.Data.DataColumn("idbank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidbank);
                this.columnidcab = new global::System.Data.DataColumn("idcab", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcab);
                this.columncc = new global::System.Data.DataColumn("cc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncc);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columncap = new global::System.Data.DataColumn("cap", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncap);
                this.columncity = new global::System.Data.DataColumn("city", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncity);
                this.columncountry = new global::System.Data.DataColumn("country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncountry);
                this.columnphoneprefix = new global::System.Data.DataColumn("phoneprefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphoneprefix);
                this.columnphonenumber = new global::System.Data.DataColumn("phonenumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphonenumber);
                this.columnfaxprefix = new global::System.Data.DataColumn("faxprefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfaxprefix);
                this.columnfaxnumber = new global::System.Data.DataColumn("faxnumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfaxnumber);
                this.columnidsor01 = new global::System.Data.DataColumn("idsor01", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidsor01);
                this.columnidsor02 = new global::System.Data.DataColumn("idsor02", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidsor02);
                this.columnidsor03 = new global::System.Data.DataColumn("idsor03", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidsor03);
                this.columnidsor04 = new global::System.Data.DataColumn("idsor04", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidsor04);
                this.columnidsor05 = new global::System.Data.DataColumn("idsor05", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidsor05);
                this.columncu = new global::System.Data.DataColumn("cu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnct = new global::System.Data.DataColumn("ct", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlu = new global::System.Data.DataColumn("lu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnlt = new global::System.Data.DataColumn("lt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidtreasurer}, true));
                this.columnidtreasurer.AllowDBNull = false;
                this.columnidtreasurer.Unique = true;
                this.columnflagdefault.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlt.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public treasurerRow NewtreasurerRow() {
                return ((treasurerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new treasurerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(treasurerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.treasurerRowChanged != null)) {
                    this.treasurerRowChanged(this, new treasurerRowChangeEvent(((treasurerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.treasurerRowChanging != null)) {
                    this.treasurerRowChanging(this, new treasurerRowChangeEvent(((treasurerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.treasurerRowDeleted != null)) {
                    this.treasurerRowDeleted(this, new treasurerRowChangeEvent(((treasurerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.treasurerRowDeleting != null)) {
                    this.treasurerRowDeleting(this, new treasurerRowChangeEvent(((treasurerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetreasurerRow(treasurerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "treasurerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class treasurerstartRow : global::System.Data.DataRow {
            
            private treasurerstartDataTable tabletreasurerstart;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal treasurerstartRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletreasurerstart = ((treasurerstartDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idtreasurer {
                get {
                    return ((int)(this[this.tabletreasurerstart.idtreasurerColumn]));
                }
                set {
                    this[this.tabletreasurerstart.idtreasurerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ayear {
                get {
                    return ((short)(this[this.tabletreasurerstart.ayearColumn]));
                }
                set {
                    this[this.tabletreasurerstart.ayearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string @__descrizione {
                get {
                    try {
                        return ((string)(this[this.tabletreasurerstart.@__descrizioneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'!descrizione\' nella tabella \'treasurerstart\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurerstart.@__descrizioneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal amount {
                get {
                    try {
                        return ((decimal)(this[this.tabletreasurerstart.amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'amount\' nella tabella \'treasurerstart\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurerstart.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cu {
                get {
                    return ((string)(this[this.tabletreasurerstart.cuColumn]));
                }
                set {
                    this[this.tabletreasurerstart.cuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ct {
                get {
                    return ((global::System.DateTime)(this[this.tabletreasurerstart.ctColumn]));
                }
                set {
                    this[this.tabletreasurerstart.ctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    return ((string)(this[this.tabletreasurerstart.luColumn]));
                }
                set {
                    this[this.tabletreasurerstart.luColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    return ((global::System.DateTime)(this[this.tabletreasurerstart.ltColumn]));
                }
                set {
                    this[this.tabletreasurerstart.ltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public treasurerRow treasurerRow {
                get {
                    return ((treasurerRow)(this.GetParentRow(this.Table.ParentRelations["treasurertreasurerstart"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["treasurertreasurerstart"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is__descrizioneNull() {
                return this.IsNull(this.tabletreasurerstart.@__descrizioneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set__descrizioneNull() {
                this[this.tabletreasurerstart.@__descrizioneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsamountNull() {
                return this.IsNull(this.tabletreasurerstart.amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetamountNull() {
                this[this.tabletreasurerstart.amountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class treasurerRow : global::System.Data.DataRow {
            
            private treasurerDataTable tabletreasurer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal treasurerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletreasurer = ((treasurerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idtreasurer {
                get {
                    return ((int)(this[this.tabletreasurer.idtreasurerColumn]));
                }
                set {
                    this[this.tabletreasurer.idtreasurerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    try {
                        return ((string)(this[this.tabletreasurer.descriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'description\' nella tabella \'treasurer\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurer.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flagdefault {
                get {
                    return ((string)(this[this.tabletreasurer.flagdefaultColumn]));
                }
                set {
                    this[this.tabletreasurer.flagdefaultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cin {
                get {
                    try {
                        return ((string)(this[this.tabletreasurer.cinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'cin\' nella tabella \'treasurer\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurer.cinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idbank {
                get {
                    try {
                        return ((string)(this[this.tabletreasurer.idbankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'idbank\' nella tabella \'treasurer\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurer.idbankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idcab {
                get {
                    try {
                        return ((string)(this[this.tabletreasurer.idcabColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'idcab\' nella tabella \'treasurer\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurer.idcabColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cc {
                get {
                    try {
                        return ((string)(this[this.tabletreasurer.ccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'cc\' nella tabella \'treasurer\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurer.ccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tabletreasurer.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'address\' nella tabella \'treasurer\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurer.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cap {
                get {
                    try {
                        return ((string)(this[this.tabletreasurer.capColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'cap\' nella tabella \'treasurer\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurer.capColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string city {
                get {
                    try {
                        return ((string)(this[this.tabletreasurer.cityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'city\' nella tabella \'treasurer\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurer.cityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string country {
                get {
                    try {
                        return ((string)(this[this.tabletreasurer.countryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'country\' nella tabella \'treasurer\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurer.countryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phoneprefix {
                get {
                    try {
                        return ((string)(this[this.tabletreasurer.phoneprefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'phoneprefix\' nella tabella \'treasurer\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurer.phoneprefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phonenumber {
                get {
                    try {
                        return ((string)(this[this.tabletreasurer.phonenumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'phonenumber\' nella tabella \'treasurer\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurer.phonenumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string faxprefix {
                get {
                    try {
                        return ((string)(this[this.tabletreasurer.faxprefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'faxprefix\' nella tabella \'treasurer\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurer.faxprefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string faxnumber {
                get {
                    try {
                        return ((string)(this[this.tabletreasurer.faxnumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'faxnumber\' nella tabella \'treasurer\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurer.faxnumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idsor01 {
                get {
                    try {
                        return ((int)(this[this.tabletreasurer.idsor01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'idsor01\' nella tabella \'treasurer\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurer.idsor01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idsor02 {
                get {
                    try {
                        return ((int)(this[this.tabletreasurer.idsor02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'idsor02\' nella tabella \'treasurer\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurer.idsor02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idsor03 {
                get {
                    try {
                        return ((int)(this[this.tabletreasurer.idsor03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'idsor03\' nella tabella \'treasurer\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurer.idsor03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idsor04 {
                get {
                    try {
                        return ((int)(this[this.tabletreasurer.idsor04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'idsor04\' nella tabella \'treasurer\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurer.idsor04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idsor05 {
                get {
                    try {
                        return ((int)(this[this.tabletreasurer.idsor05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'idsor05\' nella tabella \'treasurer\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletreasurer.idsor05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cu {
                get {
                    return ((string)(this[this.tabletreasurer.cuColumn]));
                }
                set {
                    this[this.tabletreasurer.cuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ct {
                get {
                    return ((global::System.DateTime)(this[this.tabletreasurer.ctColumn]));
                }
                set {
                    this[this.tabletreasurer.ctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    return ((string)(this[this.tabletreasurer.luColumn]));
                }
                set {
                    this[this.tabletreasurer.luColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    return ((global::System.DateTime)(this[this.tabletreasurer.ltColumn]));
                }
                set {
                    this[this.tabletreasurer.ltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescriptionNull() {
                return this.IsNull(this.tabletreasurer.descriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescriptionNull() {
                this[this.tabletreasurer.descriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscinNull() {
                return this.IsNull(this.tabletreasurer.cinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcinNull() {
                this[this.tabletreasurer.cinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidbankNull() {
                return this.IsNull(this.tabletreasurer.idbankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidbankNull() {
                this[this.tabletreasurer.idbankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidcabNull() {
                return this.IsNull(this.tabletreasurer.idcabColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidcabNull() {
                this[this.tabletreasurer.idcabColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsccNull() {
                return this.IsNull(this.tabletreasurer.ccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetccNull() {
                this[this.tabletreasurer.ccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaddressNull() {
                return this.IsNull(this.tabletreasurer.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaddressNull() {
                this[this.tabletreasurer.addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscapNull() {
                return this.IsNull(this.tabletreasurer.capColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcapNull() {
                this[this.tabletreasurer.capColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscityNull() {
                return this.IsNull(this.tabletreasurer.cityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcityNull() {
                this[this.tabletreasurer.cityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscountryNull() {
                return this.IsNull(this.tabletreasurer.countryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcountryNull() {
                this[this.tabletreasurer.countryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphoneprefixNull() {
                return this.IsNull(this.tabletreasurer.phoneprefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphoneprefixNull() {
                this[this.tabletreasurer.phoneprefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphonenumberNull() {
                return this.IsNull(this.tabletreasurer.phonenumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphonenumberNull() {
                this[this.tabletreasurer.phonenumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfaxprefixNull() {
                return this.IsNull(this.tabletreasurer.faxprefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfaxprefixNull() {
                this[this.tabletreasurer.faxprefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfaxnumberNull() {
                return this.IsNull(this.tabletreasurer.faxnumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfaxnumberNull() {
                this[this.tabletreasurer.faxnumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isidsor01Null() {
                return this.IsNull(this.tabletreasurer.idsor01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setidsor01Null() {
                this[this.tabletreasurer.idsor01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isidsor02Null() {
                return this.IsNull(this.tabletreasurer.idsor02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setidsor02Null() {
                this[this.tabletreasurer.idsor02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isidsor03Null() {
                return this.IsNull(this.tabletreasurer.idsor03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setidsor03Null() {
                this[this.tabletreasurer.idsor03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isidsor04Null() {
                return this.IsNull(this.tabletreasurer.idsor04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setidsor04Null() {
                this[this.tabletreasurer.idsor04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isidsor05Null() {
                return this.IsNull(this.tabletreasurer.idsor05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setidsor05Null() {
                this[this.tabletreasurer.idsor05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public treasurerstartRow[] GettreasurerstartRows() {
                if ((this.Table.ChildRelations["treasurertreasurerstart"] == null)) {
                    return new treasurerstartRow[0];
                }
                else {
                    return ((treasurerstartRow[])(base.GetChildRows(this.Table.ChildRelations["treasurertreasurerstart"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class treasurerstartRowChangeEvent : global::System.EventArgs {
            
            private treasurerstartRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public treasurerstartRowChangeEvent(treasurerstartRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public treasurerstartRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class treasurerRowChangeEvent : global::System.EventArgs {
            
            private treasurerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public treasurerRowChangeEvent(treasurerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public treasurerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591
