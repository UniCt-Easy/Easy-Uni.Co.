
/*
Easy
Copyright (C) 2022 Università degli Studi di Catania (www.unict.it)
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/



-- GENERAZIONE DATI PER audit --
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR001','','N',{ts '2008-02-08 10:54:54.627'},'NINO','I','ANAGR001 - Anagrafica già presente nel database')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR003','Il dato impostato con flag attivo disabilitato non verrà considerato negli inserimenti','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','ANAGR003 - L''oggetto selezionato non puo'' essere usato perché non è attivo.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR004','Il percipiente si ritroverà con due medesimi ruoli nello stesso periodo generando l''impossibilità di definire quale dei ruoli uguali utilizzare','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','ANAGR004 - Sovrapposizione vietata dei ruoli del percipiente')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR005','Ci saranno due schede anagrafiche differenti nell''archivio con la stessa denominazione.','N',{ts '2009-02-24 10:58:41.500'},'ASSISTENZA','W','ANAGR005 - Denominazione del percipiente/versante non univoca per persone fisiche')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR006','Nei controlli inerenti il codice fiscale il dato risulterà errato in quanto si fa riferimento ad un comune/stato estero non più esistente','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','ANAGR006 - Comune/Stato estero del percipiente/versante non attivo')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR007','Si creano problemi in fase di determinazione delle aliquote da applicare delle ritenute (add. regionale e comunale) nel calcolo delle prestazioni ','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','ANAGR007 - Indirizzo del percipiente/versante invalido')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR008','Saranno presenti due contatti predefiniti quando ne deve esistere solamente uno','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','ANAGR008 - Esiste già un contatto predefinito')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR009','In fase di redazione dell''EMENS, ai fini della determinazione della forma assicurativa del percipiente, non sarà selezionabile una classificazione, con conseguenti errori nella redazione del modello','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','ANAGR009 - Classificazione EMENS del percipiente duplicata')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR010','In fase di redazione dei modelli 770, EMENS ed eventuali altri i dati forniti del responsabile risulteranno incompleti','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','ANAGR010 - Responsabile della trasmissione dell''Emens con dati mancanti')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR011','La liquidazione delle ritenute potrebbe comunicare dati incompleti e non corretti','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','ANAGR011 - Non è stato inserito il domicilio fiscale del percipiente/versante')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR012','Ci saranno due schede nell''archivio anagrafico con lo stesso codice fiscale 
o la stessa partita IVA il che non è normalmente corretto in quanto tali informazioni dovrebbero 
essere univoche, a meno di casi particolari','S',{ts '2007-07-11 09:16:26.517'},'SARA','E','ANAGR012 - Codice Fiscale o Partita IVA del percipiente duplicati')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR013','In fase di trasmissione di mandati dove vi è la presenza del delegato non verrebbe comunicato il codice fiscale (dato indispensabile)','S',{ts '2006-01-18 10:59:27.627'},'Software and more','E','ANAGR013 - Il delegato deve avere il codice fiscale valorizzato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR014','Si trasmettono alla banca coordinate bancarie non corrette','N',{ts '2006-04-12 15:38:37.203'},'Software and more','W','ANAGR014 - Coordinate bancarie errate')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR016',null,'N',{ts '2007-06-18 15:50:43.093'},'''SA''','E','ANAGR016 - Non è possibile modificare la ragione sociale di un fornitore a cui è referenziato un buono di carico/scarico')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR017','','N',{ts '2008-02-19 10:18:39.577'},'SA','W','ANAGR017 - Modalità di pagamento errata')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR018','','N',{ts '2008-02-22 13:38:42.350'},'NINO','I','ANAGR018 - Modalità di pagamento incoerente con l''ABI+CAB del cassiere')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR019','','N',{ts '2012-09-27 15:29:29.897'},'sa','I','ANAGR019 - Modalità di pagamento incoerente con l''ABI del cassiere ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR020','','S',{ts '2008-06-16 11:08:47.250'},'SARA','E','ANAGR020 - Obbligatorietà dell''IBAN')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR021',null,'N',{ts '2008-07-10 11:32:49.590'},'NINO','E','ANAGR021 - Coerenza tra codice fiscale attuale e codici fiscali storici')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR022',null,'N',{ts '2008-07-10 11:32:36.670'},'NINO','E','ANAGR022 - Coerenza partita IVA attuale e partite IVA storiche')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR023',null,'N',{ts '2008-07-10 12:18:04.653'},'NINO','E','ANAGR023 - Partita IVA corrente unica')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR024',null,'S',{ts '2008-12-01 16:13:55.127'},'ASSISTENZA','E','ANAGR024 - Uso di ABI e/o CAB disattivi.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR025',null,'S',{ts '2009-01-10 15:09:52.127'},'SARA','E','ANAGR025 - Anagrafiche non utilizzabili')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR026',null,'N',{ts '2009-02-24 11:05:53.907'},'ASSISTENZA','E','ANAGR026 - Denominazione del percipiente/versante non univoca per anagrafiche che non siano persone fisiche')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR027',null,'S',{ts '2009-04-29 13:45:22.413'},'SARA','E','ANAGR027 - Anagrafiche unificate')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR028',null,'N',{ts '2009-11-04 12:14:27.863'},'SARA','E','ANAGR028 - Commissioni Bancarie')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR029',null,'N',{ts '2010-03-19 14:27:50.237'},'SARA','W','ANAGR029 -  Modalità pagamento Ente CSA')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANAGR030',null,'N',{ts '2010-11-19 11:36:22.127'},'sara','W','ANAGR030 -  Controllo validità del DURC sui buoni d''ordine')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANPRE001','Esisterebbe una Anagrafe delle Prestazioni senza il contratto di riferimento.','S',{ts '2006-09-29 12:40:10.343'},'''SARA''','E','ANPRE001 - Non è possibile cancellare il contratto se è stata generata la relativa Anagrafe delle Prestazioni.
')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANPRE002 ',null,'N',{ts '2006-09-29 13:37:29.390'},'''SARA''','W','ANPRE002 - Non è possibile cancellare il pagamento relativo all''incarico dell'' Anagrafe delle Prestazioni.')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANPRE003',null,'S',{ts '2009-01-23 10:26:31.607'},'SARA','E','ANPRE003 - Caratteri speciali non consentiti. ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANPRE004',null,'N',{ts '2009-04-20 15:30:46.540'},'SARA','W','ANPRE004 - Incoerenza tra tipo incaricato e indirizzo. ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANPRE005','La trasmissione del record sarà rifiutata dall''ente preposto.','S',{ts '2011-03-25 13:15:36.057'},'sa','E','ANPRE005 - L''anno di inizio della prestazione deve essere coerente con l''anno di riferimento per l''anagrafe prestazioni')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANPRE007',null,'S',{ts '2011-07-11 13:24:48.767'},'sa','E','ANPRE007 - Dati incoerenti')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANPRE008',null,'S',{ts '2012-01-24 15:29:43.187'},'sara','E','ANPRE008 - Codici attività economica')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ANPRE009',null,'N',{ts '2013-06-03 11:46:18.917'},'assistenza','E','ANPRE009 - Tipologia Incarico obbligatoria')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('BOLLE001',null,'S',{ts '2006-10-20 12:57:45.140'},'''SARA''','E','BOLLE001 - Somma dei movimenti di entrata / spesa collegati ad una bolletta maggiore dell''importo della bolletta stessa.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('BOLLE002',null,'N',{ts '2013-07-03 12:36:01.967'},'assistenza','W','BOLLE002 - UNICREDIT Somma dei movimenti collegati ad una bolletta minore dell''importo della bolletta stessa.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CASSA001','Sforamento della previsione in entrata','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CASSA001 - Previsione Insufficiente in Entrata')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CASSA002','Sforamento della previsione in spesa','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CASSA002 - Previsione Insufficiente in Spesa')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CASSA003','Sforamento della previsione in entrata','N',{ts '2013-05-17 09:46:53.880'},'sa','E','CASSA003 - Previsione Insufficiente in Entrata')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CASSA004','Sforamento della previsione in spesa','N',{ts '2005-08-10 12:57:36.953'},'''GIUSEPPE''','E','CASSA004 - Previsione Insufficiente in Spesa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI001','Viene assegnato un numero di inventario destinato a cespiti di nuova acquisizione per un cespite posseduto','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CESPI001 - Il numero di inventario non è compreso nell''intervallo riservato ai cespiti posseduti')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI002','Viene assegnato un numero di inventario destinato a cespiti posseduti per un cespite di nuova acquisizione','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CESPI002 - Il numero di inventario non è compreso nell''intervallo riservato ai cespiti di nuova acquisizione')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI003','Due cespiti hanno lo stesso numero di inventario!','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CESPI003 - Numero inventario duplicato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI004','Nel caso il buono è stato stampato ufficialmente viene ad essere modificata tale stampa!','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CESPI004 - Operazione di carico compresa in buono inventariale')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI005','Tutte le stampe in cui appare il cespite mostrano un valore errato','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CESPI005 - Valore attuale del cespite negativo')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI006','Nel caso il buono di scarico è stato stampato ufficialmente viene ad essere modificata tale stampa!','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CESPI006 - Cespite scaricato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI007','Il dettaglio del buono d''ordine non può essere collegato ad altri carichi','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CESPI007 - Disponibilità del buono d''ordine insufficiente')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI008','Può accadere che nelle stampe patrimoniali verranno considerati dati difformi dalla realtà','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','CESPI008 - Classificazione inventariale del carico cespite diversa da quella dell'' ordine generico associato')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI009','Non corrisponderà sequenza adottata nella numerazione dei buoni di carico/scarico con la data contabile degli stessi','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CESPI009 - La data contabile del documento deve rispettare la cronologia dei documenti esistenti')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI010','','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CESPI010 - Categoria della classificazione inventariale del carico cespite diversa da quella dei carichi parte accessori')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI011','','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CESPI011 - Tipo del buono di carico non coerente con il tipo inventario.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI012',null,'S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CESPI012 - Non è possibile annullare un dettaglio ordine già collegato ad un carico cespite o carico accessorio')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI013',null,'N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CESPI013 - Coerenza tra  Impon. e IVA dell'' ordine  e dei carichi cespite o accessori collegati, se la quantità dispon. è  = 0')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI014',null,'N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CESPI014 - Coerenza tra  Impon. e IVA dell''ordine  e dei carichi cespite o accessori collegati, se la quantità dispon. è > 0')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI015',null,'S',{ts '2007-04-05 13:37:39.063'},'''SA''','E','CESPI015 - Coerenza tra IVA unitaria e IVA totale del  carico cespite o accessorio.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI016 ',null,'N',{ts '2006-01-03 11:29:26.440'},'Software and more','E','CESPI016 - Coerenza tra IVA totale e IVA detraibile del  carico cespite o accessorio.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI017',null,'N',{ts '2006-04-10 16:55:05.860'},'''SARA''','E','CESPI017  - Buono d''ordine incompleto.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI018',null,'N',{ts '2006-05-11 13:52:05.377'},'Software and more','E','CESPI018  - Numerazione inventario non contigua.')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI019',null,'S',{ts '2007-02-16 14:04:29.063'},'''NINO''','E','CESPI019 - Esercizio della ratifica non può essere precedente all''esercizio del buono')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI020',null,'S',{ts '2007-02-22 16:36:45.730'},'''NINO''','E','CESPI020 - Non possono essere fatte ulteriori operazioni inventariali su beni scaricati')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI021',null,'S',{ts '2007-02-26 12:41:17.653'},'''NINO''','E','CESPI021 - Cespite non associato ad un buono di carico o cespite non posseduto. Necessario buono carico.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI022',null,'S',{ts '2007-02-23 10:25:54.313'},'''NINO''','E','CESPI022 - L''accessorio non può essere scaricato in quanto il cespite è stato già scaricato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI023',null,'S',{ts '2007-02-23 14:55:14.743'},'''SARA''','W','CESPI023 - Inserimento in un buono di carico di cespiti o accessorio caricati come nuovi o posseduti ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI024',null,'S',{ts '2007-03-05 13:59:54.860'},'''SARA''','E','CESPI024 - Coerenza tra la data di creazione di cespiti o accessori e il buono di carico')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI025',null,'S',{ts '2007-03-13 15:33:56.237'},'''SARA''','E','CESPI025 - Valore delle svalutazioni ufficiali superiore al valore attuale del cespite o dell''accessorio')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI026',null,'S',{ts '2007-04-02 12:21:15.157'},'''NINO''','I','CESPI026 - Operazione che viola l''integrità del consolidamento')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI028',null,'N',{ts '2007-04-18 15:11:27.233'},'''SA''','E','CESPI028 - Scarico ammortamenti cespite o accessori')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI029',null,'S',{ts '2007-04-13 10:16:11.687'},'''SA''','E','CESPI029 - L''ammortamento non può essere effettuato in quanto il cespite è stato già scaricato')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI030 ',null,'S',{ts '2007-04-17 10:29:39.750'},'''SA''','E','CESPI030 - L''ammortamento non può essere modificato in quanto è inserito in un buono di scarico')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI031',null,'S',{ts '2007-05-25 14:31:37.860'},'''SARA''','I','CESPI031 - Non è consentita la modifica della configurazione del Patrimonio')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI032',null,'S',{ts '2007-05-25 14:31:44.640'},'''SARA''','I','CESPI032 - Non è consentita la modifica della configurazione del Patrimonio')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI033',null,'S',{ts '2007-06-01 15:02:35.597'},'''SARA''','E','CESPI033 - Non è consentita la modifica di un''operazione sul Patrimonio che sia stata già trasmessa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI034',null,'S',{ts '2007-06-04 10:29:20.750'},'''SARA''','E','CESPI034 - Non è consentito impostare manualmente un''operazione sul Patrimonio come "Trasmessa"')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI035',null,'N',{ts '2007-11-07 09:44:50.717'},'SARA','E','CESPI035 - Esistenza di due Ubicazioni o Responsabili iniziali.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI037',null,'S',{ts '2008-01-29 12:35:00.203'},'NINO','E','CESPI037 - Congruenza carichi con situazione patrimoniale')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI038',null,'N',{ts '2008-04-02 16:44:35.360'},'SA','W','CESPI038 - Esercizio della ratifica non può essere successivo all''esercizio del buono')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI039',null,'N',{ts '2008-04-11 13:28:24.573'},'NINO','E','CESPI039 - Classificazione inventariale scelta non congrua con il tipo di inventario')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI040',null,'N',{ts '2008-06-12 13:41:39.280'},'SA','W','CESPI040 - Disallineamento tra il reponsabile dell''ubicazione e il responsabile del bene associato all''ubicazione. ')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI041',null,'N',{ts '2008-11-28 10:43:36.907'},'ASSISTENZA','W','CESPI041 - Mancato inserimento della ratifica all''interno del buono di scarico')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI042',null,'N',{ts '2009-02-12 13:42:13.030'},'SA','I','CESPI042 - E'' vietato inserire in un buono di carico cespiti di categorie inventariali diverse (REGGIO CALABRIA)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI043',null,'S',{ts '2010-01-20 12:07:19.530'},'SARA','E','CESPI043 - La classificazione inventariale richiede che siano digitati obbligatoriamente dei campi aggiuntivi')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI044',null,'N',{ts '2011-06-08 15:45:59.640'},'sa','I','CESPI044 - Mancato inseriento del Responsabile e/o Ubicazione')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CESPI045',null,'N',{ts '2013-04-04 14:50:54.890'},'sa','E','CESPI045 - Mancato inseriento data inizio esistenza cespite')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CLOSE001','Vengono inficiati i docuimenti ufficiali','S',{ts '2007-12-13 12:07:28.530'},'NINO','E','CLOSE001 - Esercizio Finanziario Chiuso')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CLOSE002','Vengono inficiati i docuimenti ufficiali','S',{ts '2007-12-13 12:07:31.780'},'NINO','E','CLOSE002 - Gestione Cespiti Chiusa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CLOSE003','Vengono inficiati i docuimenti ufficiali','S',{ts '2007-12-13 12:07:34.937'},'NINO','E','CLOSE003 - Gestione E/P Chiusa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CLOSE004','Vengono inficiati i documenti ufficiali','S',{ts '2008-03-10 09:49:56.377'},'SA','E','CLOSE004 - Gestione Chiusura per Ente dei Cespiti')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CLOSE005',null,'S',{ts '2009-02-24 10:08:14.937'},'SARA','E','CLOSE005 - Inserimento contratti occasionali e a dipendenti negli esercizi precedenti')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('COMPE001','Sforamento della previsione','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','COMPE001 - Previsione negativa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('COMPE002','Sforamento della previsione in entrata','N',{ts '2006-03-17 09:18:37.670'},'Software and more','W','COMPE002 - Previsione Insufficiente in Entrata')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('COMPE003','Sforamento della previsione in spesa','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','COMPE003 - Previsione Insufficiente in Spesa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('COMPE004','Sforamento della previsione rispetto ai crediti assegnati','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','COMPE004 - Previsione Inferiore alle assegnazioni crediti')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('COMPE005','Sforamento della previsione rispetto agli incassi assegnati','S',{ts '2006-01-01 00:00:00.000'},'Software and more','I','COMPE005 - Previsione Inferiore alle assegnazioni incassi')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('COMPE006','Sforamento della previsione rispetto ai crediti assegnati','S',{ts '2013-05-17 09:39:26.500'},'sa','E','COMPE006 - Previsione Inferiore alle assegnazioni crediti (Gestione finanziamenti)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('COMPE007','Sforamento della previsione rispetto agli incassi assegnati','N',{ts '2013-05-17 09:41:08.863'},'sa','W','COMPE007 - Previsione Inferiore alle assegnazioni incassi (Gestione finanziamenti)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('COMPE008','Sforamento della previsione','N',{ts '2013-05-17 09:47:21.910'},'sa','E','COMPE008 - Previsione negativa (Gestione finanziamenti)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('COMPE009','Sforamento della previsione in entrata','N',{ts '2013-05-13 17:56:11.077'},'sara','W','COMPE009 - Previsione Insufficiente in Entrata (Gestione finanziamenti)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('COMPE010','Sforamento della previsione in spesa','S',{ts '2013-05-17 09:48:05.697'},'sa','E','COMPE010 - Previsione Insufficiente in Spesa (Gestione finanziamenti)')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CONAN001','Sforamento della previsione della classificazione in spesa','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CONAN001 - Previsione della classificazione Insufficiente in Spesa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CONAN002','Sforamento della previsione della classificazione in entrata','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CONAN002 - Previsione della classificazione Insufficiente in Entrata')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CONAN005','Il movimento non sarà classificato','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CONAN005 - Classificazioni obbligatorie assenti')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CONAN006',null,'N',{ts '2008-01-11 10:49:42.593'},'SARA','W','CONAN006 - Classificazione obbligatoria rimossa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CONAN007',null,'S',{ts '2008-06-10 15:27:12.377'},'SARA','E','CONAN007 - Classificazione diversa dal movimento padre')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CONAN008',null,'N',{ts '2010-03-26 15:08:21.327'},'SARA','E','CONAN008 - Classificazione Macro SIOPE oltre il 100%.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CREDI001','I crediti assegnati risultano negativi','N',{ts '2012-09-04 10:44:23.177'},'sa','W','CREDI001 - Dotazione di crediti Negativa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CREDI002','Sforamento dei crediti assegnati','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','CREDI002 - Dotazione di crediti Inferiore ai movimenti di spesa (gest. di competenza)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CREDI004','Si assegnano più crediti di quelli che sono effettivamente entrati','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CREDI004 - Assegnazioni crediti superiori al movimento di entrata')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CREDI005','Si ha una doppia assegnazione del credito in un esercizio','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','CREDI005 - Assegnazione crediti sull''accertamento non corretta')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CREDI006','I crediti assegnati risultano negativi','N',{ts '2013-05-15 09:40:38.907'},'sara','W','CREDI006 - Dotazione di crediti Negativa (Gestione finanziamenti)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('CREDI007','Sforamento dei crediti assegnati','N',{ts '2013-05-13 17:57:54.083'},'sara','W','CREDI007 - Dotazione di crediti Inferiore ai movimenti di spesa (gest. di competenza con finanziamenti)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('DICHI001',null,'N',{ts '2008-06-26 12:00:42.807'},'NINO','E','DICHI001 - Non può essere prodotto l''F24EP in quanto la configurazione dellla competenza delle ritenute non è coerente')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('DIPEN001','In fase di redazione del modello 770 e del modello E-Mens i dati risulteranno incompleti','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','DIPEN001 - Esistenza del codice fiscale del dipendente')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('DIPEN002','In fase di redazione del modello 770 e del modello E-Mens i dati risulteranno incompleti','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','DIPEN002 - Esistenza dell''indirizzo di residenza e domicilio fiscale')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('DIPEN003','Non vengono generati gli automatismi inerenti le ritenute e i contributi','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','DIPEN003 - Contabilizzazione di un contratto dipendente impossibile se il movimento è pagato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('DIPEN004','La parte eccedente dei movimenti di spesa resta inutilizzata','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','DIPEN004 - Importo del contratto dipendente minore dei movimenti di spesa che lo contabilizzano')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('DIPEN005',null,'N',{ts '2008-10-09 11:27:24.187'},'SARA','W','DIPEN005 - Prestazioni non a stranieri svolte da soggetti stranieri.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('DIPEN006',null,'N',{ts '2011-04-08 11:02:04.407'},'sara','E','DIPEN006- Modifica a compenso già contabilzzato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ECOPA001','Sarebbe generata una scrittura in partita doppia in cui la somma delle voci in DARE non è uguale alla somma delle voci in AVERE','S',{ts '2006-05-19 12:33:37.250'},'''NINO''','E','ECOPA001 - Una scrittura in partita doppia deve pareggiare.')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ECOPA003',null,'N',{ts '2006-05-30 15:01:58.063'},'Software and more','E','ECOPA003 - Le classificazioni dell''impegno di budget possono essere una di tipo normale e le altre di tipo variazione ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ECOPA004',null,'N',{ts '2006-05-31 11:53:10.587'},'Software and more','E','ECOPA004 - Cronologia dei dettagli classificazione di tipo variazione rispetto ai dettagli di tipo normale')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ECOPA005',null,'N',{ts '2006-05-30 15:02:55.670'},'Software and more','E','ECOPA005 - La somma degli importi delle classificazioni dell''impegno di budget non può essere negativa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ECOPA006',null,'S',{ts '2007-02-08 11:25:09.557'},'''NINO''','E','Una scrittura in partita doppia può essere modificata solo nel suo esercizio di creazione.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ECOPA007',null,'S',{ts '2007-02-08 12:41:41.167'},'''NINO''','E','Il conto è una informazione necessaria in una scrittura in partita doppia.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ECOPA009',null,'S',{ts '2007-10-18 18:42:24.733'},'NINO','E','ECOPA009 - Non è possibile modificare o cancellare una scrittura bloccata.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ECOPA010',null,'N',{ts '2008-11-11 17:11:16.110'},'SARA','E','ECOPA010 - Previsione di Budget non sufficiente.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ECOPA011','Se si modifica il piano dei conti, nell''anno successivo le modifiche non saranno riportate a meno che non lo si faccia manulamente.','N',{ts '2011-03-30 14:40:51.727'},'sa','W','ECOPA011 - Piano dei conti già trasferito nell''anno successivo')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ECOPA012',null,'N',{ts '2011-05-12 10:49:59.077'},'sa','W','ECOPA012 - Scritture Rettifica dei costi e ricavi in risconti.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ECOPA013',null,'N',{ts '2012-07-23 16:15:46.397'},'sara','I','ECOPA013 - Periodo competenza in dettagli fattura')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ECOPA014',null,'N',{ts '2012-10-22 11:32:22.720'},'sa','W','ECOPA014 - Obbligatorietà UPB e Creditore su dettagli scritture')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ESTIM001','','S',{ts '2006-12-12 15:12:51.250'},'''SARA''','E','ESTIM001 - Importo del movimento di entrata  diverso dalla somma dei dettagli del contratto attivo associati')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ESTIM003','Si creano delle incongruenze nel movimento di entrata che contabilizza il contratto','N',{ts '2006-09-19 11:49:25.407'},'Software and more','E','ESTIM003 - I dettagli di un contratto associati ad un movimento di entrata non possono essere modificati')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ESTIM004','','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','ESTIM004 - La quantità di un dettaglio  contratto associato a dettagli fatture non può essere diminuita')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ESTIM005','','N',{ts '2006-09-19 11:55:32.343'},'Software and more','W','ESTIM005 - I dettagli di un contratto associati ad una fattura non possono essere modificati')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ESTIM007','','S',{ts '2007-03-08 14:22:54.127'},'''SARA''','E','ESTIM007 - Il tipo del contratto attivo prevede che l''anagrafica sia impostata nei dettagli')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ESTIM008',null,'N',{ts '2007-03-28 11:03:24.437'},'''SARA''','W','ESTIM008 - Numerazione Contratto Attivo non contigua.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ESTIM009',null,'S',{ts '2008-01-21 09:52:16.823'},'NINO','E','ESTIM009 - Dettagli contabilizzati in accertamenti residui')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ESTIM010',null,'S',{ts '2008-01-31 10:31:21.313'},'SARA','E','ESTIM010 - Coerenza delle causali EP per i dettagli dei contratti attivi')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ESTIM011',null,'S',{ts '2008-04-04 11:28:28.437'},'SARA','E','ESTIM011 - Rimozione della contabilizzazione da accertamenti residui')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ESTIM012',null,'S',{ts '2009-09-14 14:57:43.327'},'SARA','E','ESTIM012 - Se il contratto attivo è intracomunitario, l''IVA nei dettagli deve essere pari a 0.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO001','Nelle stampe inerenti il fondo economale si evinceranno situazioni non veritiere','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','FOECO001 - L''importo dell''operazione di apertura è diverso dal movimento di spesa collegato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO002','Nelle stampe inerenti il fondo economale si evinceranno situazioni non veritiere','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','FOECO002 - L''importo dell''operazione di chiusura è diverso dal movimento di entrata collegato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO003','Nelle stampe inerenti il fondo economale si evinceranno situazioni non veritiere','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','FOECO003 - Importo dell''operazione di reintegro diverso dalle operazioni rendicontate')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO004','Nelle stampe inerenti il fondo economale si evinceranno situazioni non veritiere','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','FOECO004 - Importo dell''operazione di reintegro diverso dai movimenti di spesa collegati')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO005','Il fondo economale non è considerato aperto!','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','FOECO005 - L''apertura del fondo economale è collegata a movimenti di spesa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO006','Il fondo economale non è considerato chiuso!','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','FOECO006 - La chiusura del fondo economale è collegata a movimenti di entrata')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO007','Le operazioni non risultano rendicontate!','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','FOECO007 - Il reintegro del fondo economale è collegato a movimenti di spesa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO008','Non possono essere inserite altre operazioni dopo la chiusura del fondo economale all''interno di un esercizio','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','FOECO008 - Fondo economale chiuso')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO009','Sforamento della previsione in spesa','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','FOECO009 - Previsione Insufficiente in Spesa (gest. di competenza)')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO010','Sforamento della previsione in spesa','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','FOECO010 - Previsione Insufficiente in Spesa (gest. di cassa)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO011','Sforamento dei crediti assegnati','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','FOECO011 - Dotazione di crediti Inferiore ai movimenti di spesa (gest. di competenza)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO012','Sforamento degli incassi assegnati','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','FOECO012 - Dotazione incassi inferiore ai movimenti di spesa ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO017','Sforamento del fondo economale','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','FOECO017 - Disponibilità del fondo economale insufficiente')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO020','Sforamento della previsione di cassa','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','FOECO020 - Previsione di cassa INSUFFICIENTE (per gestioni di competenza e cassa)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO021','Il fondo non può essere chiuso','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','FOECO021 - Il Fondo Economale non può essere chiuso in quanto non sono state rendicontate tutte le operazioni')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO022','Paradossalmente avremmo, per esempio, un impegno con importo inferiore rispetto alla sua liquidazione!','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','FOECO022 - La disponibilità del movimento di spesa è INSUFFICIENTE')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO023','I movimenti di spesa negli esercizi futuri avranno disponibilità negativa!','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','FOECO023 - Disponibilità del movimento di spesa attraverso gli esercizi')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO024','L''imputazione dell''operazione risulta incompleta e non potrà essere reintegrata','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','FOECO024 - Imputazione dell''operazione incompleta')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO025','Il fondo economale non risulta aperto!','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','FOECO025 - Apertura del Fondo Economale')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO026',null,'N',{ts '2007-03-28 12:30:08.687'},'''SA''','E','FOECO026 - L''importo delle operazioni è maggiore del contabilizzabile della prestazione ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO027',null,'N',{ts '2007-03-30 10:13:35.577'},'''SARA''','E','FOECO027 - Valorizzazione codice fondo e causale nelle contabilizzazioni')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO028',null,'S',{ts '2007-10-04 11:08:57.360'},'SA','E','FOECO028 - Non è possibile cancellare o modificare l''importo di un''operazione già reintegrata')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO029',null,'N',{ts '2010-09-23 15:30:55.407'},'sara','W','FOECO029 - Non si può associare all''operazione di Reintegro un movimento che contabilizza un contratto.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO030',null,'S',{ts '2008-02-04 11:28:17.877'},'SARA','E','FOECO030 - Operazione Impossibile.Per  la fattura contabilizzata col Fondo Economale è stata fatta la liquidaziona IVA.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO032',null,'N',{ts '2010-10-01 15:53:44.313'},'sa','W','FOECO032 - Non è stata inserita la classificazione SIOPE')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO034','Sforamento dei crediti assegnati','N',{ts '2013-05-17 09:41:45.437'},'sa','E','FOECO034 - Dotazione di crediti Inferiore ai movimenti di spesa (gest. di competenza con finanziamenti)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO035','Sforamento degli incassi assegnati','N',{ts '2013-05-13 17:58:43.093'},'sara','W','FOECO035 - Dotazione incassi inferiore ai movimenti di spesa  (Gestione finanziamenti)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO036','Sforamento della previsione in spesa','S',{ts '2013-05-17 09:49:24.837'},'sa','E','FOECO036 - Previsione Insufficiente in Spesa (gest. di competenza - Finanziamenti)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO037','Sforamento della previsione in spesa','N',{ts '2013-05-17 09:49:54.890'},'sa','E','FOECO037 - Previsione Insufficiente in Spesa (gest. di cassa-Finanziamenti)')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('FOECO038','Sforamento della previsione di cassa','N',{ts '2013-05-17 09:50:10.527'},'sa','E','FOECO038 - Previsione di cassa INSUFFICIENTE (per gestioni di competenza e cassa-Finanziamenti)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA001','La parte eccedente dei movimenti di finanziari resta inutilizzata','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','GEIVA001 - Importo del documento IVA minore dei movimenti finanziari che lo contabilizzano')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA002','Può accadere che la liquidazione non considerata correttamente','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','GEIVA002 - Periodo della liquidazione IVA parzialmente o completamente sovrapposto')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA003','Non corrisponderà sequenza adottata nella numerazione del documento IVA con la data contabile degli stessi','N',{ts '2006-01-16 13:19:10.623'},'Software and more','W','GEIVA003 - Il documento IVA non deve violare la sequenza cronologica')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA004','I movimenti farebbero riferimento ad una liquidazione inesistente o errata','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','GEIVA004 - Liquidazione periodica IVA collegata a movimenti finanziari')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA005','','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','GEIVA005 - IVA liquidata - (gestione IVA differita)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA006','Si avrebbe un documento IVA senza operazioni','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','GEIVA006 - Righe di dettaglio assenti nel documento IVA')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA007','','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','GEIVA007 - Data inizio e fine competenza obbligatorie nei dettagli fatture associati a dettagli ordine di tipo "servizio"')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA008','','S',{ts '2006-09-19 09:19:26.170'},'Software and more','E','GEIVA008 - Quantità della riga ordine o contratto minore della somma delle quantità dei dettagli fatture collegati')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA009','','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','GEIVA009 - Variazioni sui movimenti che contabilizzano documenti IVA')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA010','Incongruenza nei dati delle liquidazioni','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','GEIVA010 - Impossibile modificare l''IVA, legata al documento, da immediata a differita e viceversa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA011',null,'S',{ts '2006-07-26 16:30:03.723'},'''NINO''','E','GEIVA011 - IVA liquidata - (gestione IVA immediata)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA012',null,'N',{ts '2006-09-19 12:04:35.047'},'Software and more','E','GEIVA012 - Per ordini, contratti e fatture in valuta diversa dall''Euro l''importo dell''IVA deve essere pari a zero.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA013',null,'S',{ts '2009-02-17 12:17:50.657'},'NINO','E','GEIVA013 - Esistono vincoli su fattura relativa a contratto professionale')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA014','Si hanno due documenti IVA differenti basati sullo stesso documento cartaceo','N',{ts '2006-03-13 16:45:39.843'},'Software and more','W','GEIVA014 - Esiste un''altra fattura di acquisto con identico fornitore, data e documento')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA015','Si creano dei buchi di numerazione nei documenti IVA, il che non è consentito per la normativa vigente','S',{ts '2006-07-13 09:54:21.017'},'''NINO''','E','GEIVA015 - Non può essere cancellato un documento IVA ove sono presenti documenti successivi')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA016','La nota di credito/debito non verrà correttamente considerata nella liquidazione IVA e nelle stampe dei registri','S',{ts '2006-10-18 15:22:58.047'},'''SA''','E','GEIVA016 - Non può essere salvata una nota di credito/debito senza aver selezionato la causale')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA017',null,'S',{ts '2006-11-09 09:17:23.130'},'''SARA''','E','GEIVA017 - Le q.tà dei dettagli fatture collegati a righe di contratto attivo/passivo  con lo stesso gruppo devo essere uguali.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA018',null,'S',{ts '2006-11-16 13:48:26.703'},'''SARA''','E','GEIVA018 - La fattura deve avere la stessa causale di contabilizzazione dell''ordine a cui è associata.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA019','','S',{ts '2006-12-13 10:54:55.937'},'''SARA''','E','GEIVA019 - Importo del movimento di entrata o di spesa è diverso dalla somma dei dettagli della fattura associati')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA020','','N',{ts '2006-12-18 09:51:28.547'},'''SARA''','E','GEIVA020 - Il documento IVA ha già una contabilizzazione generica associata. Non si può aggiungere una contabilizzazione ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA021',null,'S',{ts '2007-04-13 12:40:52.127'},'''SA''','E','GEIVA021 - Una variazione non può contabilizzare una nota di credito ed essere anche di annullamento')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA022',null,'S',{ts '2007-04-17 14:56:49.517'},'''NINO''','E','GEIVA022 - La causale di contabilizzazione del dettaglio fattura deve essere congrua con quella del dettaglio contratto')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA024',null,'S',{ts '2008-01-07 10:21:37.063'},'SARA','E','GEIVA024 - La fattura di vendita deve riportare la data del documento')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA025','','S',{ts '2008-01-31 15:54:21.967'},'SARA','W','GEIVA025 - Quantità della riga ordine o contratto maggiore della somma delle quantità dei dettagli fatture collegati')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA026',null,'S',{ts '2009-02-17 12:15:49.577'},'NINO','E','GEIVA026 - Non si può modificare una fattura conatbilizzata col Fondo Economale')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA027',null,'N',{ts '2009-02-02 13:22:37.317'},'SA','E','GEIVA027 - Non è possibile inserire nuovi documenti iva relativi ad un periodo di cui è stata già effettuata la liquidazione.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA028',null,'S',{ts '2009-02-12 09:17:57.483'},'SARA','E','GEIVA028 - Non si può contabilizzare la fattura a iva differita se il periodo è già trascorso.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA029',null,'S',{ts '2009-07-31 10:35:08.047'},'SARA','E','GEIVA029 - Cancellazione liquidazione iva impossibile ove ne esistano altre di periodi successivi')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA030',null,'N',{ts '2009-02-17 12:29:11.233'},'NINO','E','GEIVA030 - Cancellando o modificando il mov. di spesa si determinerà un importo incoerente nella liquidazione iva')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA031',null,'N',{ts '2011-11-07 15:19:59.890'},'sa','E','GEIVA031 - Liquidazione IVA non modificabile.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA032',null,'S',{ts '2009-06-12 16:06:32.593'},'SARA','E','GEIVA032 - Non è possibile modificare  la configurazione IVA')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA033',null,'S',{ts '2009-05-25 10:46:51.703'},'SARA','I','GEIVA033 - La data documento della fattura di vendita deve essere uguale alla data di registrazione.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA034',null,'S',{ts '2010-01-26 12:21:34.437'},'SARA','E','GEIVA034 - Liquidazione IVA consolidata esistente.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA035',null,'S',{ts '2010-01-26 12:21:49.047'},'SARA','E','GEIVA035 - Liquidazione Consolidata periodica IVA collegata a movimenti finanziari')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA036',null,'S',{ts '2010-01-26 12:22:01.017'},'SARA','E','GEIVA036 - Cancellazione liquidazione iva consolidata impossibile ove ne esistano altre di periodi successivi')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA037',null,'N',{ts '2010-02-15 10:49:54.183'},'SA','E','GEIVA037 - Informazioni quadro VF24 obbligatorio')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA038',null,'N',{ts '2010-09-27 16:25:32.127'},'sara','W','GEIVA038 - Informazioni comunicazione delle operazioni con paesi a fiscalità agevolata')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA039',null,'N',{ts '2011-02-11 15:09:50.233'},'assistenza','E','GEIVA039 -  Partita IVA del percipiente obbligatori')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA040',null,'N',{ts '2011-02-16 13:52:56.920'},'sara','E','GEIVA040 - Fatture Intra priva di dati essenziali nel modello INTRA')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA041',null,'S',{ts '2011-03-09 15:50:37.157'},'sara','S','GEIVA041 - Coerenza nella modalità di liquidazione dell''IVA tra Dipartimenti e Amministrazione')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA042',null,'S',{ts '2011-03-28 16:54:09.907'},'sa','E','GEIVA042 - Dettagli fattura non coerenti con UPB e casuale selezionati.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA043',null,'S',{ts '2011-03-31 11:59:00.563'},'sa','E','GEIVA043 - Fattura e Autofattura')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('GEIVA045',null,'S',{ts '2013-07-05 13:06:53.767'},'sa','W','GEIVA045 - Data registrazione o data documento errato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('INCAS001','Gli incassi assegnati risultano negativi','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','INCAS001 - Dotazione degli incassi Negativa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('INCAS002','Sforamento degli incassi assegnati','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','INCAS002 - Dotazione degli incassi inferiore ai movimenti di spesa ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('INCAS004','Si assegnano più incassi di quelli che sono effettivamente entrati','N',{ts '2012-09-03 15:50:34.787'},'sa','W','INCAS004 - Assegnazioni incassi superiore al movimento di entrata')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('INCAS005','Si hanno crediti assegnati ad una voce di bilancio e incassi assegnati ad altra voce. In fase di redazione del bilancio di previsione non si riscontreranno incongruenze!','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','INCAS005 - Congruità dell''assegnazione degli incassi rispetto all''assegnazione crediti')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('INCAS006','Gli incassi assegnati risultano negativi','N',{ts '2013-05-13 17:59:34.920'},'sara','W','INCAS006 - Dotazione degli incassi Negativa (Gestione finanziamenti)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('INCAS007','Sforamento degli incassi assegnati','N',{ts '2013-05-13 17:59:39.493'},'sara','W','INCAS007 - Dotazione degli incassi inferiore ai movimenti di spesa  (Gestione finanziamenti)')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('LE_COMPE003','Sforamento della previsione in spesa','S',{ts '2012-02-24 16:20:33.017'},'sa','I','LE_COMPE003 - Previsione Insufficiente in Spesa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ001',null,'S',{ts '2010-07-05 16:07:16.047'},'SA','E','MAGAZ001 - Buono d''ordine senza magazzino con dett. associati a listino. ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ002',null,'S',{ts '2010-07-14 11:01:48.313'},'SA','E','MAGAZ002 - Operazioni non consentite al dettaglio contratto Passivo o Fattura  inserito nel Magazzino')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ003',null,'S',{ts '2010-07-05 13:18:37.360'},'SA','E','MAGAZ003 - La q.tà scaricata non può superare la q.tà prenotata.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ004',null,'N',{ts '2010-07-06 16:43:46.797'},'SA','E','MAGAZ004 - La merce inventariabile deve avere coeff. di conversione pari a uno.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ005',null,'N',{ts '2010-07-14 12:11:28.907'},'SA','E','MAGAZ005 - La q.ta dei dettagli della bolla d''accompagnamento non può superare la q.ta del dettaglio dell''ordine relativo')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ006',null,'N',{ts '2010-07-09 16:31:25.297'},'SA','E','MAGAZ006 - Non è possibile inserire una Bolla d''accompagnamento con stesso numero / fornitore / tipo magazzino di una esistente')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ007',null,'N',{ts '2010-07-09 16:39:57.687'},'SA','E','MAGAZ007 - Dettagli fattura senza Tipo iva o Imponibile.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ008',null,'N',{ts '2010-07-14 12:11:37.030'},'SA','E','MAGAZ008 - Fattura Accompagnatoria ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ009',null,'N',{ts '2010-07-27 16:25:25.757'},'SA','E','MAGAZ009 - Q.tà da scaricare fuori dai valori consentiti.')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ010',null,'N',{ts '2010-07-27 13:00:22.680'},'SA','E','MAGAZ010 - Autorizzazione non modificabile.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ011',null,'N',{ts '2010-07-21 10:10:56.170'},'SA','E','MAGAZ011 - Non è possibile avere due Listini identici')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ012',null,'N',{ts '2010-07-28 15:12:42.967'},'SARA','E','MAGAZ012 - Articolo con data scadenza obbligatoria')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ013',null,'N',{ts '2010-07-29 11:27:14.017'},'SARA','E','MAGAZ013 - Voce di Listino imputata a classificazione merceologica con livelli sottostanti')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ014',null,'N',{ts '2011-04-12 14:18:18.917'},'assistenza','W','MAGAZ014 - Prenotazione / Ordine non ancora evaso')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ016',null,'N',{ts '2011-05-09 09:48:45.703'},'sa','E','MAGAZ016 - La giacenza non può essere negativa. ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ017',null,'N',{ts '2011-05-09 10:04:57.250'},'sa','E','MAGAZ071 - Q.tà prenotata non modificabile se il dettaglio è già stato autorizzato.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ018',null,'N',{ts '2011-06-23 11:53:10.937'},'sa','E','MAGAZ018 - Non è possibile autorizzare prenotazioni di merci inattive.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ019',null,'S',{ts '2011-09-27 13:54:00.077'},'sara','E','MAGAZ019 - Importo della Card non può essere negativo')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ020',null,'S',{ts '2011-12-16 09:24:37.767'},'sara','E','MAGAZ020- Importo della Prenotazione non può essere aumentato in presenza di quantità allocata')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MAGAZ021',null,'S',{ts '2013-07-18 10:36:42.320'},'sa','E','MAGAZ021- La quantità della Prenotazione non può superare il limite previsto dalla voce di Listino')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM001','Si hanno movimenti non imputati ad alcuna voce di bilancio!','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM001 - Voce di bilancio annuale obbligatoria')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM002','Si hanno movimenti senza un percipiente/versante','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM002 - Percipiente/versante obbligatorio')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM003','Paradossalmente si ha, per esempio, un impegno con importo inferiore della sua liquidazione','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM003 - Importo attuale del movimento minore dei movimenti dipendenti')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM004','Si ha un movimento con importo NEGATIVO!','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM004 - Importo attuale di un movimento negativo')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM005','Si modificano documenti trasmessi in banca contra lex!','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM005 - Documento trasmesso non può essere corretto o annullato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM006','La ripartizione delle assegnazioni automatiche eccedono il 100%!','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM006 - Ripartizione assegnazioni maggiore del 100%')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM007','Si modificano documenti trasmessi in banca contra lex!','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM007 - Movimento finanziario incluso in un documento trasmesso non può essere corretto o annullato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM008','Si hanno movimenti con esercizi di competenza differenti da quello corrente!','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM008 - Esercizio di competenza del movimento errato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM009','Si hanno due documenti differenti con lo stesso numero','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','MOVIM009 - Numero documento duplicato')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM010','Si ha un movimento incluso in un documento finanziario che ha riferimenti espliciti alla voce di bilancio. Incogruenza nei dati','N',{ts '2012-07-12 11:25:28.687'},'sa','W','MOVIM010 - Voce di bilancio di imputazione non modificabile')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM011','Si ha un movimento incluso in un documento finanziario che ha riferimenti espliciti al percipiente/versante. Incogruenza nei dati','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM011 - Percipiente/versante non modificabile')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM012','Si ha un movimento incluso in un documento finanziario che ha riferimenti espliciti al responsabile Incogruenza nei dati','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM012 - Responsabile del movimento non modificabile')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM013','Si hanno dei movimenti automatici che non sarebbero più collegati ad alcun movimento o collegati ad un movimento errato','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM013 - Movimenti automatici collegati al movimento')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM015','Si ha una incongruenza nei dati tra il documento contabilizzato e il movimento che lo contabilizza','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM015 - Percipiente/versante non modificabile in documento contabilizzato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM016','Si ha che le classificazioni associate al movimento sono superiori all''importo del movimento stesso','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM016 - Importo delle classificazioni superiore all''importo del movimento')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM017','Non corrisponderà sequenza adottata nella numerazione dei mandati/reversali con la data contabile degli stessi','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','MOVIM017 - La data contabile del documento deve rispettare la cronologia dei documenti esistenti')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM018','Si ha una incongruenza nei dati tra il documento contabilizzato e il movimento che lo contabilizza','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM018 - Il percipiente/versante del documento incoerente con movimento finanziario')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM019','Si ha una errata imputazione del movimento di spesa/entrata','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM019 - Voce di Bilancio Annuale/Centro Spesa/Bil Pluriennale non modificabile')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM020','Si ha un movimento con disponibilità negativa negli esercizi futuri','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM020 - Disponibilità del movimento attraverso gli esercizi')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM021','La banca non potrebbe accettare l''invio dei mandati','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM021 - Integrità della cassa corrotta')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM022','Si hanno dettagli ritenute non legati a nessuna prestazione!','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM022 - Dettagli delle ritenute della prestazione da liquidare non modificabili')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM023','Si ha una duplicazione degli automatismi collegati al movimento principale','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM023 - Automatismi già collegati al movimento corrente')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM024','Si ha l''assegnazione dei crediti/incassi superiori all''importo del movimento di entrata','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM024 - Impossibile rimuovere e/o modificare la variazione del movimento di entrata')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM025','Si modificano documenti trasmessi in banca (illegale)','S',{ts '2006-01-10 08:57:28.250'},'Software and more','E','MOVIM025 - Un movimento inserito in un documento non può essere modificato o cancellato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM026','Si ha un residuo con una variazione in aumento','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM026 - Variazione in aumento di un movimento spesa/entrata residuo non inseribile')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM027','Si ha un residuo in entrata con una variazione in diminuzione','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','MOVIM027 - Variazione in diminuzione di un movimento di entrata residuo non inseribile')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM028','Si hanno imputazioni differenti attraverso gli esercizi','N',{ts '2012-07-12 11:21:56.733'},'sa','W','MOVIM028 - Voce di bilancio non modificabile per movimenti di spesa residui negli esercizi sucessivi')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM029','Si hanno in un mandato/reversale movimenti che regolarizzano una disposizione di incasso/pagamento già effettuata e movimenti normali','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM029 - Movimenti finanziari a regolarizzazione di disposizione già effettuato in documento di incasso/pagamento')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM030','Si hanno movimento con importo pari a zero!','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','MOVIM030 - Importo originale del movimento di entrata/spesa nullo')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM031','L''importo del movimento di spesa non è sufficiente a pagare tutte le ritenute c/dipendente','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM031 - Importo di spesa minore dell''importo delle ritenute c/dipendente')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM032','Si hanno i movimenti automatici collegati ad un movimento nullo','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM032 - Non è normalmente corretto annullare il pagamento di una prestazione')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM033','Si ha un movimento imputato su una voce di bilancio inesistente','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM033 - Voce di bilancio inesistente nell''esercizio successivo')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM034','La banca non conosce come pagare il percipiente senza una modalità di pagamento specificata','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM034 - Modalità di pagamento non scelta nel movimento di spesa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM035','Si hanno delle ritenute non congrue con la prestazione che si vuole impostare','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM035 - Prestazione contabilizzata e liquidata')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM036','Si crea una incongruenza nei dati in quanto sono stati contabilizzati documenti in un''altra fase di spesa','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','MOVIM036 - Configurazione delle spese non modificabile')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM037',null,'N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','MOVIM037 - Controlli sulle classificazioni Siope/Miur.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM038','Viene sforata la previsione dell''U.P.B.','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','MOVIM038 - Il totale dell''accertato è inferiore al totale dell''impegnato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM039',null,'N',{ts '2006-03-27 13:07:43.047'},'''SARA''','E','MOVIM039 - Il responsabile scelto è differente da quello dell''UPB')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM040','La concordanza di cassa non quadra','S',{ts '2006-01-09 16:10:11.750'},'Software and more','E','MOVIM040 - La data della transazione deve essere coerente con l''esercizio della stessa')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM041','Avremmo un mandato o reversale di importo INFERIORE all''esitato in banca. ','S',{ts '2006-01-10 09:03:13.797'},'Software and more','E','MOVIM041 - L''esitato supera il totale mandato/reversale')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM042','Le ritenute inserite manualmente non saranno gestite dalle stampe delle certificazioni ufficiali, trasmissioni EMENS, modello 770 ecc.','N',{ts '2006-03-02 16:25:22.203'},'''PINO''','W','MOVIM042 - La prestazione selezionata consente l''inserimento manuale delle ritenute')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM044',null,'S',{ts '2006-04-28 15:05:09.907'},'''NINO''','E','MOVIM044 - Non può essere salvato un movimento finanziario con una voce di bilancio riferita ad altro esercizio')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM045',null,'S',{ts '2006-05-23 13:34:10.843'},'Software and more','E','MOVIM045 - Un movimento di spesa marcato come recupero non può avere altri recuperi associati')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM046','Non potrà più essere ricontabilizzato il mov. di spesa','S',{ts '2006-07-13 09:59:05.767'},'''NINO''','E','MOVIM046 - Non è normalmente corretto rimuovere la contabilizzazione di un documento il cui mov. di spesa è portato a pagamento')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM047',null,'S',{ts '2006-07-14 11:17:22.907'},'''NINO''','E','MOVIM047 - FIN - Non può essere inserita una variazione in un mov. di spesa che contabilizza un documento e portato a pagamento')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM048',null,'S',{ts '2006-10-13 10:20:51.750'},'''SARA''','E','MOVIM048 - Non si può modificare il percipiente perchè esiste un movimento figlio inserito in mandato/reversale  già trasmesso')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM049',null,'S',{ts '2006-10-19 09:23:56.170'},'''SA''','E','MOVIM049 - Non si può rimuovere il movimento finanziario dal mandato/reversale   perchè già esitato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM050',null,'N',{ts '2006-10-19 11:45:13.500'},'''SA''','E','MOVIM050 - Non può essere cancellata una variazione che contabilizza una nota di credito/debito')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM051','Si creano dei buchi di numerazione nei Mandati di pagamento / Reversale di Incasso, il che non è consentito per la normativa vigente','S',{ts '2007-01-10 14:51:46.797'},'''SARA''','E','MOVIM051 - Non può essere cancellato un Mandato di pagamento / Reversale di Incasso ove sono presenti documenti successivi')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM052',null,'S',{ts '2007-01-11 13:26:08.310'},'''SA''','E','MOVIM052 - Controlli sulle classificazioni SIOPE')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM053',null,'S',{ts '2007-01-19 15:33:32.063'},'''SARA''','E','MOVIM053 - Controlli sulle variazioni .')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM054',null,'N',{ts '2007-02-28 16:24:35.343'},'''NINO''','E','MOVIM054 - Non si può esitare un mandato/reversale non ancora trasmessi')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM055','Si avrebbero due variazioni con lo stesso numero ufficiale','S',{ts '2007-03-08 09:35:51.913'},'''MLUISAS''','E','MOVIM055 - Numero ufficiale variazione duplicato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM056',null,'N',{ts '2007-04-04 10:21:44.530'},'''NINO''','W','MOVIM056 - Assegnazione al credito e/o all''incasso mancante o incompleta')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM057',null,'S',{ts '2007-05-24 15:39:22.813'},'''NINO''','E','MOVIM057 - Un movimento esitato non può essere modificato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM058',null,'S',{ts '2007-06-11 13:54:09.077'},'''NINO''','E','MOVIM058 - La prestazione può essere pagata solo se il rispettivo contratto è stato marcato come "Eseguibile"')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM059',null,'S',{ts '2007-10-10 12:05:28.690'},'SARA','E','MOVIM059 - Esistono delle coppie UPB - Voce di Bilancio per le quali la previsione disponibile di spesa è negativa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM060',null,'S',{ts '2007-10-17 11:32:48.733'},'NINO','E','MOVIM060 - Il documento finanziario non è coerente con i movimenti inseriti in esso')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM062','Non verranno generati i movimenti bancari dei mandati e delle reversali, le trasmissioni verso le banche saranno errate','S',{ts '2008-01-14 11:27:02.563'},'NINO','E','MOVIM062 - Non possono essere generati mandati e reversali se non è stata trasferita la configurazione del bilancio')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM063 ',null,'S',{ts '2008-02-08 15:30:09.367'},'SARA','E','MOVIM063 - Non modifcare esercizio inizio/fine della classificazione perchè mov. finanziari  sono imputati ad essa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM064',null,'N',{ts '2008-02-14 12:14:28.053'},'NINO','E','MOVIM064 - Non possono essere emessi documenti finanziari di anni precedenti al corrente.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM065',null,'S',{ts '2008-03-12 10:00:13.750'},'SARA','E','MOVIM065 - Un mandato può essere associato al più ad una sola disposizione di pagamento.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM066',null,'N',{ts '2008-03-13 09:55:54.627'},'SARA','E','MOVIM066 - Deve essere ricalcolata la Situazione Finanziaria effettiva relativa all''esercizio precedente ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM067',null,'S',{ts '2008-03-14 16:28:24.827'},'NINO','E','MOVIM067 - Totale disposizioni pagamento non coerente con totale mandato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM068',null,'N',{ts '2008-03-31 11:19:27.593'},'NINO','W','MOVIM068 - Il saldo di una variazione di bilancio normale e/o storno deve essere pari a zero')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM069','Si infrangerebbe l''art. 48-bis del DPR. n. 602/73','N',{ts '2008-04-15 12:36:56.703'},'NINO','E','MOVIM069 - Il pagamento di somme superiori a 10000 euro deve essere preventivamente autorizzato da EQUITALIA')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM070',null,'N',{ts '2008-06-23 11:44:51.953'},'SARA','E','MOVIM070 - La ritenuta non quadra con il suo riepilogo')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM071',null,'S',{ts '2008-07-16 10:51:58.530'},'NINO','E','MOVIM071 - Decontabilizzazione del cedolino impossibile')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM072','Se si trattasse di un frazionamento del pagamento di uno stesso contratto, si potrebbe infrangere l''art. 48-bis del DPR. n. 602/73. Non è richiesta l''autorizzazione se i pagamenti si riferiscono invece a contratti diversi.','N',{ts '2008-09-03 14:05:49.517'},'SARA','W','MOVIM072 - In caso di più pagamenti per lo stesso percipiente con somma >10000 euro, potrebbe essere richiesta l''aut. EQUITALIA ')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM073',null,'N',{ts '2008-10-16 13:53:02.280'},'NINO','E','MOVIM073 - Esistenza di un indirizzo valido')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM074',null,'N',{ts '2008-11-05 10:18:09.767'},'SARA','W','MOVIM074 - Modifica di una stampa ufficiale')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM075',null,'N',{ts '2008-11-10 14:26:03.563'},'SARA','E','MOVIM075 - Modifica del Cassiere di un documento trasmesso.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM076',null,'S',{ts '2008-11-25 13:23:23.017'},'NINO','E','MOVIM076 - Informazioni gerarchiche incorerenti nei movimenti finanziari.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM077',null,'S',{ts '2009-02-26 12:06:11.813'},'ASSISTENZA','E','MOVIM077 - Applicazione del principio di cassa allargata')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM078',null,'S',{ts '2009-02-27 13:46:05.780'},'ASSISTENZA','W','MOVIM078 - Pagamenti di prestazioni su impegni residui')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM079',null,'N',{ts '2009-03-25 14:30:31.063'},'SARA','W','MOVIM079 - La modifca dell''UPB comporta il controllo da parte dell''utente di documenti associati')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM080',null,'S',{ts '2011-05-12 15:53:11.157'},'sara','E','MOVIM080 - I mandati associati a disposizioni di pagamento devono avere un solo movimento finanziario associato (MPS e CARIME)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM081',null,'S',{ts '2009-09-14 09:26:06.390'},'SA','E','MOVIM081 - Mandato con movimenti di spesa aventi ritenute già raccolte.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM082',null,'S',{ts '2009-09-14 09:12:20.547'},'SA','E','MOVIM082 - Mandati /Reversali in elenchi di trasmissione con date inferiori agli stessi.')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM083',null,'S',{ts '2009-09-22 16:55:46.610'},'SARA','E','MOVIM083 - Generazione e Trasmissione di Mandati con Anagrafiche incomplete o errate')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM084',null,'S',{ts '2009-09-22 15:43:08.717'},'SA','E','MOVIM084 - Mandati/Reversali con mov. finanziari che contabilizzano dettagli fattura a IVA differita. ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM085',null,'S',{ts '2009-10-16 10:16:18.957'},'SA','E','MOVIM085 - Il cambio della data dell''elenco di trasmissione non è ammesso')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM086',null,'S',{ts '2009-10-20 16:06:40.047'},'SARA','W','MOVIM086 - Il cambio della causale contabile di debito o credito sull''ultima fase di spesa/entrata non è ammesso')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM087',null,'N',{ts '2010-03-25 09:49:51.387'},'SARA','E','MOVIM087 - Controllo sulla cronologia delle date contabili dei movimenti finanziari')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM088',null,'N',{ts '2010-09-14 09:43:19.327'},'sara','W','MOVIM088 - Controllo su voci di bilancio trasferite al nuovo esercizio')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM089',null,'S',{ts '2010-09-24 14:23:25.530'},'sara','E','MOVIM089 - Controllo su codice CUP')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM090',null,'N',{ts '2012-07-18 16:16:44.877'},'sa','I','MOVIM090- Controllo presenza codici CUP e CIG sull''impegno')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM091',null,'N',{ts '2011-05-26 10:02:42.203'},'sa','W','MOVIM091 - IBAN obbligatorio per i bonifici')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM092',null,'N',{ts '2011-05-30 09:29:40.420'},'sa','E','MOVIM092 - Trattamento Bollo obbligatorio per le Reversali Banca Carime')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM093',null,'N',{ts '2011-06-06 11:23:10.843'},'sara','E','MOVIM093 -  Modalità di pagamento con disposizione cartacea Banca Carime')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM094',null,'N',{ts '2011-07-12 11:31:30.483'},'sa','W','MOVIM094 - Disposizioni di pagamento con nominativi duplicati')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM095','Si potrebbero avere errori in fase di trasmissione elettronica','N',{ts '2011-07-28 10:36:27.077'},'sara','W','MOVIM095 - Coerenza tesoriere tra distinta e documenti trasmessi')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM096','Si potrebbero avere mandati e reversali con dati differenti da quelli trasmessi ed elaborati dalla banca.','N',{ts '2012-09-10 10:21:43.523'},'sa','W','MOVIM096 - Variazioni di annullamento e modifica dati in presenza di mandato informatico')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM097',null,'S',{ts '2011-09-22 16:50:24.943'},'sa','E','MOVIM097 - Rimozione di mandati/reversali esitati dalla distinta')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM098',null,'N',{ts '2012-07-18 16:46:01.547'},'sa','E','MOVIM098 - Correzione CIG e CUP su movimenti finanziari trasmessi')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM099',null,'S',{ts '2011-10-12 10:37:00.890'},'sara','E','MOVIM099 - Controllo su disposizioni duplicate')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM100',null,'N',{ts '2012-05-11 10:36:45.203'},'sa','W','MOVIM100 - Controllo su pagamenti in contanti')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM101',null,'S',{ts '2012-03-05 13:06:04.873'},'assistenza','W','MOVIM101 - Controllo su limite codici SIOPE distinti per Unicredit')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM102',null,'N',{ts '2012-07-18 16:15:59.877'},'sa','W','MOVIM102 - Controllo CIG')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM103',null,'N',{ts '2012-09-17 13:23:17.043'},'sa','E','MOVIM103 - Controllo Finanziamento su Spese in C/Competenza')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM104',null,'S',{ts '2013-01-25 11:39:24.420'},'sa','E','MOVIM104 - Coerenza assegnazioni Spese ai Finanziamenti (  c/Residuo )')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM105',null,'S',{ts '2012-09-20 11:05:51.413'},'sa','E','MOVIM105 - Modificabilità dati UPB')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM106',null,'S',{ts '2012-09-28 11:00:20.923'},'sa','E','MOVIM106 - Pagamenti con ritenute e netto pari a zero')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM107',null,'N',{ts '2012-11-19 10:50:57.253'},'sa','I','MOVIM107 - Saldo Cassiere corrotto')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM108',null,'S',{ts '2012-11-30 11:06:12.947'},'sa','E','MOVIM108 - Coerenza tra assegnazioni e Girofondi.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM109',null,'N',{ts '2013-01-22 09:55:09.677'},'sa','I','MOVIM109 - Mancata attribuzione del Finanziamento')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM110',null,'N',{ts '2013-05-16 18:10:51.677'},'sa','E','MOVIM110 - Previsione sul finanziamento insufficiente!')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM111',null,'S',{ts '2013-01-25 11:39:24.420'},'sa','E','MOVIM111 - Coerenza assegnazioni Spese ai Finanziamenti (  c/Compenza )')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM112',null,'N',{ts '2013-02-11 09:56:00.067'},'sa','E','MOVIM112 - Non è possibile modificare/eliminare un girofondo in data diversa dalla sua creazione.')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM113',null,'S',{ts '2013-03-19 09:47:00.177'},'sa','E','MOVIM113 - Mandato di pagamento/Reversale di incasso senza Cassiere.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM115',null,'N',{ts '2013-06-19 10:20:45.063'},'nino','E','MOVIM115 - Coerenza tipo variazione bilancio con relativi flag')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM116',null,'N',{ts '2013-07-02 09:29:29.643'},'assistenza','E','MOVIM116 - Blocco pagamento in presenza di Fermo Amministrativo')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('MOVIM117',null,'N',{ts '2013-07-16 15:17:03.843'},'sa','E','MOVIM117 - Modifica variazione associata a girofondo')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS001','Il lordo al beneficiario è inferiore alle spese sostenute per svolgere la prestazione','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','OCCAS001 - L''importo delle spese deducibili è superiore al compenso lordo al beneficiario')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS002','In fase di redazione del modello 770 e del modello E-Mens i dati risulteranno incompleti','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','OCCAS002 - Esistenza del codice fiscale del collaboratore')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS003','La parte eccedente dei movimenti di spesa resta inutilizzata','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','OCCAS003 - Importo contratto occasionale minore dei movimenti di spesa che lo contabilizzano')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS004','Non vengono generati gli automatismi inerenti le ritenute e i contributi','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','OCCAS004 - Contabilizzazione di un contratto occasionale impossibile se il movimento è pagato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS005','Potrebbe mancare le scritture in partita doppia per una corretta gestione e/p','N',{ts '2006-01-13 09:59:01.517'},'Software and more','I','OCCAS005 - Non è possibile pagare una prestazione occasionale fin quando non è stata eseguita.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS006',null,'S',{ts '2008-09-27 10:10:32.670'},'NINO','E','OCCAS006 - Controllo liquidazione sui contratti occasionali')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS007',null,'N',{ts '2006-04-20 11:56:35.953'},'''SA''','W','OCCAS007 - Contemporaneità contratti occasionali per lo stesso percipiente')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS008',null,'S',{ts '2007-03-07 14:30:23.657'},'''SARA''','I','OCCAS008 - Non è possibile modificare l''importo lordo di una prestazione occasionale contabilizzata.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS009',null,'N',{ts '2007-03-12 12:12:08.547'},'''SA''','I','OCCAS009 - Controllo sull''esistenza di un contratto occasionale successivo al corrente.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS010',null,'S',{ts '2008-04-17 14:30:31.187'},'SARA','E','OCCAS010 - Residenza all''estero in presenza di prestazioni riservate a stranieri.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS011',null,'N',{ts '2008-05-19 09:50:45.547'},'SA','W','OCCAS011 - Controllo di coerenza fra il contratto corrente ed i precedenti inseriti per lo stesso percepiente,')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS012',null,'S',{ts '2008-07-11 11:44:42.813'},'NINO','I','OCCAS012 - Imponibile derivante da altri contratti dello stesso dipartimento è errato (Gestione Mono Dipartimento)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS013',null,'N',{ts '2008-07-11 11:40:06.517'},'NINO','I','OCCAS013 - Imponibile derivante da altri contratti dello stesso dipartimento è errato (Gestione Multi Dipartimento)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS014','Si avrebbero dati incoerenti nel pagamento.','S',{ts '2008-09-27 09:53:51.437'},'NINO','E','OCCAS014 - Modifica di un compenso occasionale già pagato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS015',null,'N',{ts '2008-10-01 12:42:43.487'},'SA','W','OCCAS015- Pagamento di un professionista con una prestazione occasionale')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS016',null,'S',{ts '2008-10-01 17:34:03.127'},'NINO','E','OCCAS016 - Prestazione in convenzione non possibile')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS017',null,'N',{ts '2008-10-08 14:01:58.937'},'SARA','W','OCCAS017  - Prestazioni non a stranieri svolte da soggetti stranieri.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS018',null,'N',{ts '2008-10-09 13:05:54.723'},'NINO','W','OCCAS018 - Il percipiente ha richiesto, nell''anno, l''applicazione di un aliquota marginale.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS019',null,'N',{ts '2009-03-21 10:16:23.913'},'SARA','W','OCCAS019 - Aliquota marginale a zero per prestazioni minime. [Art. 25 DPR 600/73]')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS020',null,'N',{ts '2009-09-18 11:38:17.327'},'SARA','I','OCCAS020 - Prestazioni  occasionali pagate parzialmente con spese')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('OCCAS021',null,'S',{ts '2009-10-14 11:46:31.843'},'SARA','W','OCCAS021 - Prestazioni  occasionali pagate con fondo economale')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ORDIN001','','S',{ts '2006-12-12 12:32:02.937'},'''SARA''','E','ORDIN001 - Importo del movimento di spesa è diverso dalla somma dei dettagli del contratto passivo associati')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ORDIN003','Si creano delle incongruenze nel movimento di spesa che contabilizza l''ordine','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','ORDIN003 - I dettagli di un ordine associati ad un movimento di spesa non possono essere modificati')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ORDIN004','','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','ORDIN004 - La quantità di un dettaglio  ordine associato a dettagli fatture non può essere diminuita')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ORDIN005','','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','ORDIN005 - I dettagli di un ordine associati ad un movimento di spesa non possono essere modificati')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ORDIN006','','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','ORDIN006 - Il tipo bene di un dettaglio  ordine associato a dettagli fatture non può essere modificato')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ORDIN007','','N',{ts '2006-12-11 11:29:53.467'},'''SARA''','E','ORDIN007 - Il contratto ha già una contabilizzazione generica associata. Non si può aggiungere una contabilizzazione specifica  ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ORDIN008','','S',{ts '2007-03-08 14:10:52.937'},'''SARA''','E','ORDIN008 - Il tipo di contratto passivo prevede che l''anagrafica sia impostata sui dettagli')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ORDIN009','','N',{ts '2007-03-28 10:31:33.327'},'''SARA''','W','ORDIN009 -- Numerazione Contratto Passivo non contigua.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ORDIN010',null,'S',{ts '2008-01-22 14:58:55.563'},'NINO','E','ORDIN010 - Dettagli contabilizzati in impegni residui')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ORDIN011',null,'S',{ts '2008-01-31 14:55:09.890'},'SARA','E','ORDIN011 - Coerenza delle causali EP sui dettagli dei contratti passivi')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ORDIN012',null,'N',{ts '2011-09-19 16:51:38.660'},'sa','W','ORDIN012 - Rimozione della contabilizzazione da impegni residui')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ORDIN013',null,'S',{ts '2009-09-14 15:22:51.627'},'SARA','E','ORDIN013 - Se il contratto passivo è intracomunitario, l''IVA nei dettagli deve essere pari a 0.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('ORDIN014',null,'N',{ts '2012-11-27 14:58:24.870'},'sa','E','ORDIN014 - Compatibilità del Tipo Bene con il la Natura del Contratto Passivo')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS001','Si ha un contratto che comincia dopo l''erogazione dei cedolini','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','PARAS001 - Data di inizio del contratto non modificabile')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS003','Si ha un contratto che termina prima rispetto ai mesi già erogati','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','PARAS003 - Data di fine del contratto non modificabile')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS004','Restano dei cedolini erogati che non hanno un contratto a cui riferirsi','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','PARAS004 - In presenza di cedolini erogati il contratto non può essere rimosso')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS005','Si causa una incongruità con ciò che è stato già pagato al percipiente e su quello che è memorizzato in archivio','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','PARAS005 - Non può essere rimosso e/o modificato un cedolino già erogato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS006','Si versano meno ritenute allo Stato nel pagamento del cedolino rischiando di avere un conguaglio incapiente al termine del contratto','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','PARAS006 - Aliquota marginale inferiore rispetto a quella applicata sull''imponibile presunto annuo')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS007','Si crea una incongruità tra ciò che è stato dichiarato in fase di conguaglio e ciò che è presente nell''archivio','N',{ts '2007-03-09 10:57:57.077'},'''SA''','E','PARAS007 - Non possono essere inseriti/modificati/cancellati CUD nell''anno in cui il cedolino di conguaglio è stato calcolato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS008','In fase di redazione del modello 770 e del modello E-Mens i dati risulteranno incompleti','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','PARAS008 - Esistenza dell''indirizzo di residenza e domicilio fiscale del collaboratore')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS009','In fase di redazione del modello 770 e del modello E-Mens i dati risulteranno incompleti','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','PARAS009 - Esistenza del codice fiscale del collaboratore')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS010','Non vengono generati gli automatismi inerenti le ritenute e i contributi','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','PARAS010 - Contabilizzazione di un cedolino impossibile se il movimento è pagato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS011','Il CAF comunica una sola comunicazione ordinaria, le eventuali successive sono integrative e/o rettificative','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','PARAS011 - Non possono essere inserite più comunicazioni ordinarie')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS012','La prima comunicazione del CAF deve essere ordinaria','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','PARAS012 - Non può essere inserita una comunicazione da CAF intergrativa/rettificativa senza una ordinaria')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS013',null,'S',{ts '2006-05-22 15:39:58.733'},'Software and more','E','PARAS013 - Un impegno che contabilizza un cedolino non può essere pagato parzialmente')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS014',null,'S',{ts '2007-02-23 15:57:27.717'},'''NINO''','E','PARAS014 - Il compenso lordo del contratto parasubordinato non può essere inferiore al compenso erogato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS015',null,'S',{ts '2007-03-06 11:18:33.140'},'''SA''','E','PARAS015 - Esiste un cedolino di conguaglio erogato di un altro contratto che non è diventato CUD.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS016','Occorre trasferire tale cedolino all''anno corrente','S',{ts '2008-01-28 14:16:32.127'},'SA','E','PARAS016 - Dopo il 12 gennaio non è più possibile trasmettere in banca il pagamento di un cedolino relativo all''anno precedente')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS017',null,'N',{ts '2008-02-27 10:28:45.140'},'SA','E','PARAS017 - La quota parte dell''imponibile assicurativo deve coincidere con la quota parte dell''imponibile fiscale')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS018','In fase di redazione delle dichiarazioni fiscali i dati relativi al comune o regione di riferimento per le addizionali comunali o regionali potrebbero risultare errati','S',{ts '2008-04-11 13:54:43.030'},'SARA','E','PARAS018 - Invariabilità del domicilio fiscale in presenza di cedolini erogati con addizionali comunali o regionali')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS019',null,'S',{ts '2008-04-17 14:30:22.767'},'SARA','E','PARAS019 - Residenza all''estero in presenza di prestazioni riservate a stranieri.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS020 ','In fase di redazione delle dichiarazioni fiscali i dati potrebbero risultare errati.','S',{ts '2008-04-24 14:45:19.610'},'SARA','E','PARAS020 - Coerenza tra contratti parasubordinati inseriti come CUD e prestazioni ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS021','In fase di redazione delle dichiarazioni fiscali i dati potrebbero risultare errati.','S',{ts '2008-04-24 14:46:06.907'},'SARA','W','PARAS021 - Coerenza tra contratti parasubordinati non inseriti come CUD e prestazioni ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS022',null,'S',{ts '2008-05-12 15:03:50.770'},'SA','E','PARAS022 - Coerenza tra esercizio di data inizio e data fine cedolino')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS023',null,'N',{ts '2008-06-03 17:46:19.050'},'NINO','E','PARAS023 - Incongruenza dati da C.A.F.')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS024',null,'N',{ts '2008-07-16 11:01:37.110'},'NINO','W','PARAS024 - Il cedolino di conguaglio non è stato trasmesso')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS025',null,'N',{ts '2008-07-16 12:33:22.967'},'NINO','E','PARAS025 - Vietato cambiare certificazione')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS026',null,'S',{ts '2008-10-01 17:33:25.643'},'NINO','E','PARAS026 - Prestazione in convenzione non possibile')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS027',null,'S',{ts '2008-10-07 16:47:51.473'},'SA','E','PARAS027 - Aliquota marginale inadeguata ai redditi del percipiente')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS028',null,'N',{ts '2008-10-09 10:38:12.627'},'SARA','W','PARAS028 - Prestazioni non a stranieri svolte da soggetti stranieri.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PARAS029',null,'N',{ts '2008-10-09 13:21:10.910'},'NINO','W','PARAS029 - Il percipiente ha richiesto, nell''anno, l''applicazione di un aliquota marginale.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PRINC001','Paradossalmente si ha, per esempio, che il capitolo ha previsione inferiore rispetto all''articolo','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','PRINC001 - La previsione corrente è minore della previsione corrente del livello inferiore ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PRINC002','Paradossalmente si ha, per esempio, che il capitolo ha previsione inferiore rispetto all''articolo','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','PRINC002 - La previsione precedente è minore della previsione precedente del livello inferiore (')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PRINC003','Paradossalmente si ha, per esempio, che il capitolo ha residui inferiori rispetto all''articolo','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','PRINC003 - I residui presunti sono minori dei residui presunti del livello inferiore ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PRINC004','Paradossalmente si ha, per esempio, che il capitolo ha residui inferiori rispetto all''articolo','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','PRINC004 - I residui effettivi sono minori dei residui effettivi del livello inferiore (DEVE ')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PRINC005','Si ha una incogruenza tra il bilancio di previsione ed il dato presente nell''archivio','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','PRINC005 - Impossibile modificare/inserire la previsione iniziale')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PRINC006',null,'N',{ts '2007-12-17 09:54:32.593'},'PINO','E','PRINC006 - I residui presunti non possono essere negativi')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PRINC007','Si ha una incogruenza tra il bilancio di previsione ed il dato presente nell''archivio','S',{ts '2012-10-10 15:02:02.463'},'sa','E','PRINC007- Impossibile modificare/inserire la previsione iniziale')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PROFE001','In fase di redazione del modello 770 e del modello E-Mens i dati risulteranno incompleti','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','PROFE001 - Codice fiscale e partita IVA del percipiente obbligatori')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PROFE002','La parte eccedente dei movimenti di spesa resta inutilizzata','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','PROFE002 - Importo contratto professionale minore dei movimenti di spesa che lo contabilizzano')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PROFE003','Non vengono generati gli automatismi inerenti le ritenute e i contributi','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','PROFE003 - Contabilizzazione sul totale o sull''imponibile della fattura impossibile se il movimento è pagato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PROFE004','','N',{ts '2006-04-04 15:50:29.377'},'Software and more','W','PROFE004 - Il contratto di prestazione professionale non ha ritenute associate')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PROFE005',null,'N',{ts '2008-10-01 12:41:51.893'},'SA','W','PROFE005 - Pagamento di un professionista che ha svolto anche prestazioni occasionali nell''anno')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PROFE006',null,'N',{ts '2008-10-09 10:39:04.437'},'SARA','W','PROFE006 - Prestazioni non a stranieri svolte da soggetti stranieri.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PROFE007',null,'N',{ts '2009-09-18 10:56:26.063'},'SARA','W','PROFE007 - Prestazioni  professionali  pagate parzialmente con spese')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('PROFE008',null,'N',{ts '2009-09-21 16:21:34.483'},'SARA','W','PROFE008 - Prestazioni  professionali  pagate parzialmente ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN001','Viene liquidato un importo differente rispetto a ciò che si vuole realmente liquidare','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','RITEN001 - Importo liquidazione ritenuta diverso dai movimenti di spesa collegati')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN002','Resteranno parzialmente non liquidate le ritenute','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','RITEN002 - Importo liquidazione ritenuta diverso da somma importo ritenute')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN003','Si ha una incongruenza tra ciò che è stato liquidato e ciò che è presente in archivio','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','RITEN003 - Ritenuta liquidata')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN004','Si creano dei movimenti di spesa con importi errati che influenzano erroneamente le scritture contabili','N',{ts '2007-03-14 15:22:09.970'},'''NINO''','I','RITEN004 - Annullamento o rimborso ritenuta errato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN005','Gli automatismi non saranno generati correttamente','N',{ts '2007-03-14 10:49:09.437'},'''NINO''','E','RITEN005 - La ritenuta non è stata configurata')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN006','Verrà cancellata, insieme ai movimenti, anche la liquidazione della ritenuta','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','RITEN006 - Cancellazione di movimenti legati alla liquidazione delle ritenute')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN007','Una parte della ritenuta selezionata non sarà liquidata','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','RITEN007 - Impossibile liquidare la ritenuta')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN008','Non vengono generati gli automatismi legati a tale ritenuta','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','RITEN008 - Ritenuta Negativa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN009','Non vengono generati gli automatismi legati a tale ritenuta. Si dovranno creare manualmente i movimenti di spesa sulle partite di giro','N',{ts '2007-03-14 09:19:35.640'},'''NINO''','I','RITEN009 - Ritenuta negativa a carico del percipiente')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN010',null,'N',{ts '2006-04-07 15:29:38.517'},'''PINO''','E','FIN - Il movimento automatico collegato alla ritenuta ha un importo diverso dal dettaglio della ritenuta stessa.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN011',null,'S',{ts '2006-04-10 08:43:21.327'},'''PINO''','E','RITEN011 - Non si possono cancellare i dettagli ritenuta se esistono movimenti automatici collegati')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN012',null,'N',{ts '2007-04-02 09:16:57.063'},'''NINO''','W','RITEN012 - Ritenuta liquidata fuori del periodo di competenza')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN013',null,'S',{ts '2007-06-27 11:15:01.437'},'''SARA''','E','RITEN013 -  Configurazione ritenute  raggruppate ai fini della liquidazione')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN014',null,'S',{ts '2007-06-27 11:14:45.017'},'''SARA''','W','RITEN014 - Configurazione ritenute  raggruppate ai fini della liquidazione in caso di ripartizione geografica o percentuale')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN015',null,'N',{ts '2008-06-12 17:45:05.627'},'NINO','E','RITEN015 - La somma delle ritenute è superiore al movimento finanziario associato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN016',null,'N',{ts '2008-06-26 12:30:30.523'},'NINO','E','RITEN016 - Cambio di configurazione non coerente con dettagli ritenuta esistenti')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN017',null,'N',{ts '2008-07-01 10:34:25.000'},'NINO','E','RITEN017 - Correzione della ritenuta antecedente alla competenza della ritenuta principale')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN018',null,'S',{ts '2009-03-02 16:17:51.850'},'SARA','W','RITEN018 - Coerenza tra istituto cassiere del mandato principale e degli automatismi ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN019',null,'S',{ts '2009-03-03 10:58:52.740'},'SARA','E','RITEN019 - Impossibile cancellare o modificare un dettaglio ritenute')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN020',null,'S',{ts '2009-03-05 14:46:05.983'},'SARA','E','RITEN020 - Impossibile cancellare un dettaglio ritenuta centralizzato se è stato generato l''F24EP')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN021',null,'S',{ts '2009-03-30 12:06:00.920'},'SARA','E','RITEN021 - Gli importi delle ritenute del pagamento di un compenso non devono differire da quelli del relativo contratto')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RITEN022',null,'N',{ts '2011-02-18 10:43:11.267'},'sara','E','RITEN022 - Configurazione degli automatismi incompleta')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('RO_CESPI044',null,'N',{ts '2011-02-15 16:18:20.500'},'sara','I','RO_CESPI044 - Non si possono inserire buoni di carico senza Documento e data')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SECON001','Paradossalmente si ha, per esempio, che il capitolo ha previsione inferiore rispetto all''articolo','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','SECON001 - La previsione corrente è minore della previsione corrente del livello inferiore')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SECON002','Paradossalmente si ha, per esempio, che il capitolo ha previsione inferiore rispetto all''articolo','N',{ts '2006-01-01 00:00:00.000'},'Software and more','E','SECON002 - La previsione precedente è minore della previsione precedente del livello inferiore')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SECON003','Sforamento della previsione in entrata','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','SECON003 - Previsione inferiore alle righe di reversale')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SECON004','Sforamento della previsione in spesa','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','SECON004 - Previsione inferiore alle righe di mandato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SECON005','Previsione insufficiente rispetto agli incassi assegnati','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','SECON005 - Previsione inferiore delle assegnazioni di incassi')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SECON006','Previsione insufficiente rispetto agli incassi assegnati','S',{ts '2013-05-17 09:45:54.553'},'sa','E','SECON006 - Previsione inferiore delle assegnazioni di incassi (Gestione finanziamenti)')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SECON007','Sforamento della previsione in entrata','N',{ts '2013-05-17 09:50:41.277'},'sa','E','SECON007 - Previsione inferiore alle righe di reversale')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SECON008','Sforamento della previsione in spesa','N',{ts '2013-05-17 09:50:46.500'},'sa','E','SECON008 - Previsione inferiore alle righe di mandato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SICUR001',null,'N',{ts '2007-06-28 12:09:43.687'},'''NINO''','E','SICUR001 - Il nodo non può essere modificato dall''utente corrente')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SICUR002',null,'S',{ts '2009-03-31 15:33:04.093'},'PROVA','E','SICUR002 - L''utente non può aggiungere funzionalità in quanto lui stesso non ha accesso alla stessa.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SICUR003',null,'S',{ts '2007-07-09 09:39:29.203'},'''NINO''','E','SICUR003 - Non si posso avere più nodi di default per lo stesso utente')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SICUR004',null,'S',{ts '2009-03-31 15:32:57.670'},'PROVA','E','SICUR004 - Documento finanziario non modificabile')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SICUR005',null,'N',{ts '2008-04-08 10:44:23.627'},'PINO','E','SICUR005 - Buono d''ordine di importo superiore a 5.000 euro')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SICUR006',null,'N',{ts '2008-03-05 12:31:34.813'},'NINO','E','SICUR006 - Contratto Attivo di importo superiore a 5.000 euro')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SICUR007',null,'S',{ts '2008-07-30 10:31:38.467'},'NINO','E','SICUR007 - Operazione non eseguibile')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SICUR008',null,'S',{ts '2010-11-04 14:46:04.293'},'sa','E','SICUR008 - Login duplicata')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SICUR009',null,'S',{ts '2010-11-08 10:37:45.000'},'sa','E','SICUR009 - L''utente è abilitato solo alla gestione di talune fasi finanziarie.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SICUR010',null,'N',{ts '2012-11-27 16:17:09.877'},'sa','E','SICUR010 - L''utente non è abilitato ad impostare l''istituto cassiere delle partite pendenti')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SICUR011',null,'N',{ts '2012-12-19 13:03:57.583'},'sa','E','SICUR011 - L''utente non è abilitato a modificare i dati delle partite pendenti')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SICUR012',null,'N',{ts '2013-01-22 11:48:06.823'},'sa','W','SICUR012 - L''utente non è abilitato a operare su voci di bilancio a movimentazione protetta')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SICUR013',null,'N',{ts '2013-01-29 15:24:59.303'},'sa','I','SICUR013 - L''utente non è abilitato ad approvare variazioni di bilancio o modificare variazioni approvate.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SICUR014',null,'N',{ts '2013-03-07 17:44:15.017'},'sa','I','SICUR014 - L''utente non è abilitato ad approvare variazioni di bilancio o modificare variazioni inserite o approvate')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SICUR015',null,'S',{ts '2013-06-12 16:29:34.637'},'assistenza','E','SICUR015 - Non è possibile modificare una variazione di bilancio inserita in in atto')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SICUR016',null,'N',{ts '2013-06-13 16:43:46.233'},'assistenza','I','SICUR016 - L''utente non è abilitato ad approvare storni (variazioni di tipo storno, su un''unica voce di bilancio, non ufficiali)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SICUR017',null,'N',{ts '2013-06-13 16:44:04.157'},'assistenza','I','SICUR017 - L''utente non è abilitato ad approvare storni (variazioni di tipo storno, su un''unica voce di bilancio, non ufficiali)')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('STIPE001',null,'S',{ts '2007-10-17 15:50:37.703'},'NINO','E','STIPE001 - Il meta movimento deve avere la stessa anagrafica del meta impegno')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('STIPE002',null,'S',{ts '2007-10-17 15:50:55.967'},'NINO','E','STIPE002 - Il meta movimento deve avere la stessa anagrafica del meta accertamento')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('STIPE003',null,'S',{ts '2010-05-04 09:37:11.280'},'SA','E','STIPE003 - Configurazione Importazione Stipendi CSA')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SYSTM001','Si hanno due dati identici','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','SYSTM001 - Dato duplicato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SYSTM002','Si creano incongruenze tra i dati collegati tra loro, rendendoli praticamente SCOLLEGATI','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','SYSTM002 - Dati collegati incoerenti')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SYSTM003','I movimenti di entrata/spesa con tale errore non saranno più rintracciabili','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','SYSTM003 - Errore di programma')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SYSTM004','Cancellazione di tutti i dati collegati al dato che si vuole cancellare','N',{ts '2008-07-28 15:40:54.353'},'SARA','I','SYSTM004 - Cancellazione dei dati dipendenti')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SYSTM005','Ci sarebbero sul db dei dati incoerenti','S',{ts '2007-02-23 23:05:36.670'},'''NINO''','E','SYSTM005 - Errore di programma')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SYSTM006',null,'S',{ts '2007-03-28 14:10:09.467'},'''NINO''','E','SYSTM006 - Errore di programma')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SYSTM007',null,'S',{ts '2007-03-28 14:50:05.000'},'''NINO''','W','SYSTM007 - Esistono mandati e/o reversali vuote')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SYSTM008',null,'S',{ts '2007-04-03 13:41:52.593'},'''SA''','E','SYSTM008 - Operazione non consentita dopo il trasferimento del Bilancio nell''esercizio successivo')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SYSTM010',null,'N',{ts '2008-01-11 16:28:27.343'},'SA','E','SYSTM010 -  Cancellazione di una voce di Bilancio con valori di previsione.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SYSTM011',null,'N',{ts '2008-01-11 16:28:03.920'},'SA','W','SYSTM011 - Cancellazione di una voce di Bilancio con valori di previsione zero.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SYSTM012',null,'N',{ts '2008-07-24 16:52:57.517'},'SA','W','SYSTM012 - Dato duplicato su possibili chiavi alternative')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SYSTM013',null,'S',{ts '2008-07-28 15:07:04.853'},'SARA','E','SYSTM013 -  Cancellazione dei dati dipendenti non consentita')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SYSTM014',null,'S',{ts '2009-02-26 15:24:56.750'},'ASSISTENZA','E','SYSTM014 - Salvataggio con numerazione negativa')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SYSTM015',null,'N',{ts '2009-03-19 15:33:15.157'},'ASSISTENZA','W','SYSTM015 - Cancellazione organigramma')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SYSTM016',null,'S',{ts '2010-04-30 13:37:27.453'},'SA','E','SYSTM016 - Cancellazione campi aggiuntivi per cespiti')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('SYSTM017',null,'S',{ts '2011-04-05 16:19:36.610'},'sara','E','SYSTM017 - Lunghezze codici classificazione ')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF001','La parte eccedente dei movimenti di spesa resta inutilizzata','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','TRASF001 - Importo dell''anticipo missione minore dei movimenti di spesa che lo contabilizzano')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF002','La parte eccedente dei movimenti di spesa resta inutilizzata','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','TRASF002 - Importo della missione minore dei movimenti di spesa che la contabilizzano')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF003','Gli automatismi collegati alla liquidazione del saldo vengono scollegate dal movimento principale','N',{ts '2006-01-01 00:00:00.000'},'Software and more','W','TRASF003 - Liquidazioni del saldo di una missione e delle partite di giro')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF004','Non vengono generati gli automatismi inerenti le ritenute e i contributi','S',{ts '2006-01-01 00:00:00.000'},'Software and more','E','TRASF004 - Contabilizzazione del saldo della missione impossibile se movimento pagato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF005',null,'N',{ts '2009-01-20 13:33:20.187'},'SARA','E','TRASF005 - Contemporaneità missioni per lo stesso incaricato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF006',null,'N',{ts '2008-07-17 16:18:23.093'},'SARA','E','TRASF006 - Numero giorni missione coerente con la somma delle tappe')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF007',null,'S',{ts '2009-01-20 13:38:24.217'},'SARA','E','TRASF007 - Operazioni su missioni già contabilizzate come saldo')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF008',null,'N',{ts '2009-10-21 15:25:00.767'},'SA','E','TRASF008 - Percentuale di anticipo missione')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF009',null,'N',{ts '2009-10-21 15:24:55.610'},'SA','E','TRASF009 - Tetto massimo di diaria concedibile')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF010',null,'N',{ts '2009-10-19 15:57:08.000'},'SA','E','TRASF010 - Compatibilità tra tipi riduzione e spese inserite')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF011',null,'N',{ts '2009-10-21 15:24:48.750'},'SA','E','TRASF011 - Regole Spese per la missione')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF012','Impedisce il salvataggio nel caso in cui le date della tappa non siano coerenti con le date della missione','N',{ts '2010-05-06 09:37:49.280'},'SA','E','TRASF012 - Coerenza tra date della missione e date delle tappe')
GO

INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF013',null,'N',{ts '2010-11-16 16:28:55.640'},'sara','E','TRASF013 - Regole per missioni WEB')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF014',null,'N',{ts '2010-11-16 16:37:11.263'},'sara','E','TRASF014 - Obbligatorietà appunti per il pagamento per missioni WEB')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF015',null,'N',{ts '2010-11-17 15:58:06.297'},'sara','W','TRASF015 - Coerenza tra spese anticipo e spese saldo per le missioni')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF016','Blocca il salvataggio della missione','N',{ts '2011-01-04 10:18:22.593'},'sa','E','TRASF016 - Le tipologie di spesa presenti non sono coerenti con il modello autorizzativo selezionato')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF017',null,'N',{ts '2011-01-12 11:56:54.170'},'sara','E','TRASF017 - Controllo sulle spese di anticipo per missioni già approvate')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF018',null,'N',{ts '2011-01-13 11:53:38.483'},'sara','E','TRASF018 - Controllo sull''opzione "Considera eseguita quindi pagabile" per le missioni')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF019',null,'N',{ts '2011-07-19 12:18:56.467'},'sa','E','TRASF019 - Coerenza tra Data Inizio/Fine spesa e Data Inizio/Fine missione.')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF020',null,'N',{ts '2011-10-21 09:13:11.343'},'sa','W','TRASF019 - Coerenza tra Data Inizio/Fine missione e Data Contabile Esercizio')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF021',null,'S',{ts '2011-11-02 14:11:30.563'},'sa','E','TRASF021 - Rimborso Forfettario')
INSERT INTO [audit] (idaudit,consequence,flagsystem,lt,lu,severity,title) VALUES ('TRASF022',null,'N',{ts '2011-11-25 18:13:39.077'},'sa','E','TRASF022 - Spese per Vitto')
GO


-- GENERAZIONE DATI PER auditparameter --
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','accmotive','N','idaccmotive','accmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','accmotive','N','idaccmotive','accmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','accmotive','N','title','accmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','accmotive','N','codemotive','accmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','accmotive','S','title','accmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','accmotive','N','title','accmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','accmotive','N','idaccmotive','accmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','accmotive','S','codemotive','accmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','accmotive','N','codemotive','accmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','accmotivedetail','N','ayear','account')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','accmotivedetail','N','ayear','account')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','accmotivedetail','N','ayear','account')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','account','N','ayear','account')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','account','N','idacc','account')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','account','N','ayear','account')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','account','N','title','account')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','account','N','codeacc','account')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','account','N','printingorder','account')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','account','N','ayear','account')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','account','N','title','account')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','account','N','idacc','account')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','account','N','printingorder','account')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','accountkind','N','idaccountkind','accountkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','accountkind','N','description','accountkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','accountkind','N','description','accountkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','accountkind','N','idaccountkind','accountkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','accountlevel','N','ayear','accountlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','accountlevel','N','nlevel','accountlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','accountlevel','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','accountlevel','N','description','accountlevel')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','accountlevel','N','flagusable','accountlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','accountlevel','N','ayear','accountlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','accountlevel','N','nlevel','accountlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','accountlevel','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','accountlevel','N','description','accountlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','accountlevel','N','nlevel','accountlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','accountlevel','N','flagusable','accountlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','accountlevel','N','ayear','accountlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','accountlookup','N','oldidacc','accountlookup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','accountvardetail','N','idacc','accountvardetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','accountvardetail','N','idsor','accountvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','accountvardetail','N','amount','accountvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','accountvardetail','N','idacc','accountvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','accountvardetail','N','idsor','accountvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','accountvardetail','N','amount','accountvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','accountvardetail','S','amount','accountvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','accountvardetail','N','idacc','accountvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','accountvardetail','N','idsor','accountvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','accountvardetail','N','amount','accountvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','accountyear','S','prevision','accountyear')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','accountyear','N','prevision','accountyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','accountyear','N','idacc','accountyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','accountyear','N','idsor','accountyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','acquirekind','N','idacquirekind','acquirekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','address','N','idaddress','address')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','address','N','description','address')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','address','N','codeaddress','address')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','address','N','idaddress','address')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','address','N','description','address')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','admpay_expense','N','nappropriation','admpay_expense')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','admpay_expense','N','yadmpay','admpay_expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','admpay_expense','N','nadmpay','admpay_expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','admpay_expense','N','idreg','admpay_expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','admpay_expense','N','nappropriation','admpay_expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','admpay_expense','N','yadmpay','admpay_expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','admpay_expense','N','nadmpay','admpay_expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','admpay_expense','N','idreg','admpay_expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','admpay_income','N','nassessment','admpay_income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','admpay_income','N','yadmpay','admpay_income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','admpay_income','N','nadmpay','admpay_income')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','admpay_income','N','idreg','admpay_income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','admpay_income','N','nassessment','admpay_income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','admpay_income','N','yadmpay','admpay_income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','admpay_income','N','nadmpay','admpay_income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','admpay_income','N','idreg','admpay_income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','advice','N','title','advice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','advice','N','codeadvice','advice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','alert','N','description','alert')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','alert','N','alertcode','alert')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','allowancededuction','N','idposition','allowancededuction')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','allowancededuction','N','incomeclass','allowancededuction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','allowancededuction','N','idreduction','allowancededuction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','allowancededuction','N','start','allowancededuction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','asset','N','idasset','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','asset','N','idpiece','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','asset','N','idassetunload','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','asset','N','idasset','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','asset','N','idpiece','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','asset','N','nassetacquire','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','asset','N','ninventory','asset')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','asset','N','idpiece','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','asset','N','idasset','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','asset','N','lifestart','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','asset','N','multifield','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','asset','S','idassetunload','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','asset','N','nassetacquire','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','asset','N','ninventory','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','asset','N','idassetunload','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','asset','N','idpiece','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','asset','N','idasset','asset')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','asset','N','lifestart','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','asset','S','idlocation','assetview')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','asset','S','idman','assetview')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','asset','S','nassetacquire','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','asset','S','ninventory','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','asset','S','flag','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','13','asset','S','lifestart','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','14','asset','N','transmitted','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','15','asset','N','idlocation','assetview')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','16','asset','N','idman','assetview')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','17','asset','N','flag','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','18','asset','S','multifield','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','19','asset','N','multifield','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','asset','S','lifestart','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','asset','S','idlocation','assetview')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','asset','S','idman','assetview')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','asset','S','nassetacquire','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','asset','S','ninventory','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','asset','N','nassetacquire','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','asset','N','lifestart','asset')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','asset','N','idlocation','assetview')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','asset','N','idman','assetview')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','asset','N','ninventory','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','asset','S','idassetunload','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','asset','N','idassetunload','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','asset','N','idasset','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','asset','N','idpiece','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','15','asset','S','transmitted','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','16','asset','N','transmitted','asset')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','17','asset','N','flag','asset')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','assetacquire','N','nassetacquire','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','assetacquire','N','nassetacquire','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','assetacquire','N','flag','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','assetacquire','N','idinventory','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','assetacquire','N','nassetacquire','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','assetacquire','N','idmankind','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','assetacquire','N','yman','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','assetacquire','N','nman','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','assetacquire','N','rownum','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','8','assetacquire','-','sys_esercizio','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','9','assetacquire','N','idinv','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','assetacquire','N','idmankind','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','assetacquire','N','yman','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','assetacquire','N','nman','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','assetacquire','N','rownum','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','assetacquire','N','number','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','assetacquire','N','idinv','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','7','assetacquire','N','idassetload','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','8','assetacquire','N','idinventory','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','9','assetacquire','N','tax','assetacquire')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','10','assetacquire','N','abatable','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','11','assetacquire','N','flag','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','assetacquire','N','flag','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','assetacquire','N','idinventory','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','assetacquire','N','nassetacquire','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','assetacquire','S','idinv','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','assetacquire','N','idinv','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','assetacquire','S','number','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','assetacquire','S','tax','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','assetacquire','N','number','assetacquire')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','assetacquire','N','tax','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','assetacquire','N','idmankind','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','assetacquire','N','yman','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','assetacquire','N','nman','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','13','assetacquire','N','rownum','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','14','assetacquire','S','taxable','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','15','assetacquire','N','taxable','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','16','assetacquire','S','abatable','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','17','assetacquire','N','abatable','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','18','assetacquire','-','sys_esercizio','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','19','assetacquire','N','startnumber','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','20','assetacquire','N','idassetload','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','21','assetacquire','S','adate','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','22','assetacquire','S','description','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','23','assetacquire','S','discount','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','24','assetacquire','S','flag','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','25','assetacquire','S','idinventory','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','26','assetacquire','S','idmankind','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','27','assetacquire','S','idmot','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','28','assetacquire','S','idreg','assetacquire')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','29','assetacquire','S','nman','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','30','assetacquire','S','rownum','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','31','assetacquire','S','startnumber','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','32','assetacquire','S','taxrate','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','33','assetacquire','S','yman','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','34','assetacquire','N','transmitted','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','35','assetacquire','N','adate','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','36','assetacquire','N','description','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','37','assetacquire','N','discount','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','38','assetacquire','N','idmot','assetacquire')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','39','assetacquire','N','idreg','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','40','assetacquire','N','taxrate','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','41','assetacquire','S','idassetload','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','assetacquire','S','flag','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','assetacquire','S','adate','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','assetacquire','S','idreg','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','assetacquire','S','description','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','assetacquire','S','idmot','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','assetacquire','S','idinventory','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','assetacquire','S','startnumber','assetacquire')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','assetacquire','S','number','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','assetacquire','S','idinv','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','assetacquire','S','taxable','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','assetacquire','S','taxrate','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','assetacquire','S','discount','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','assetacquire','S','tax','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','assetacquire','S','abatable','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','15','assetacquire','N','idassetload','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','16','assetacquire','N','flag','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','17','assetacquire','N','adate','assetacquire')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','18','assetacquire','N','idreg','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','19','assetacquire','N','description','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','20','assetacquire','N','idmot','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','21','assetacquire','N','idinventory','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','22','assetacquire','N','startnumber','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','23','assetacquire','N','number','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','24','assetacquire','N','idinv','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','25','assetacquire','N','taxable','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','26','assetacquire','N','taxrate','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','27','assetacquire','N','discount','assetacquire')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','28','assetacquire','N','tax','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','29','assetacquire','N','abatable','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','30','assetacquire','S','idmankind','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','31','assetacquire','S','yman','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','32','assetacquire','S','nman','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','33','assetacquire','S','rownum','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','34','assetacquire','S','idassetload','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','35','assetacquire','N','nassetacquire','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','36','assetacquire','N','idmankind','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','37','assetacquire','N','yman','assetacquire')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','38','assetacquire','N','nman','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','39','assetacquire','N','rownum','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','40','assetacquire','S','transmitted','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','41','assetacquire','N','transmitted','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','assetamortization','N','idinventoryamortization','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','assetamortization','N','idasset','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','assetamortization','N','idpiece','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','assetamortization','N','assetvalue','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','5','assetamortization','N','amortizationquota','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','6','assetamortization','N','idassetload','assetamortization')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','7','assetamortization','N','idassetunload','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','assetamortization','N','idasset','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','assetamortization','N','idpiece','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','assetamortization','N','idinventoryamortization','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','assetamortization','N','idasset','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','assetamortization','N','idpiece','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','assetamortization','S','idassetunload','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','assetamortization','N','idassetunload','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','assetamortization','N','idasset','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','assetamortization','N','idpiece','assetamortization')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','assetamortization','N','transmitted','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','assetamortization','S','flag','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','assetamortization','N','flag','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','assetamortization','S','idassetload','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','assetamortization','N','idassetload','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','assetamortization','S','adate','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','assetamortization','N','adate','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','assetamortization','S','assetvalue','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','assetamortization','S','amortizationquota','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','assetamortization','N','idinventoryamortization','assetamortization')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','assetamortization','N','idasset','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','assetamortization','N','idpiece','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','assetamortization','N','assetvalue','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','assetamortization','N','amortizationquota','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','assetamortization','S','idassetunload','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','assetamortization','N','idassetunload','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','assetamortization','N','flag','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','assetamortization','S','transmitted','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','assetamortization','N','transmitted','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','assetamortization','S','flag','assetamortization')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','assetamortization','N','adate','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','15','assetamortization','S','adate','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','16','assetamortization','S','idassetload','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','17','assetamortization','N','idassetload','assetamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','assetdivestmotive','N','idmot','assetdivestmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','assetdivestmotive','N','idmot','assetdivestmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','assetdivestmotive','N','description','assetdivestmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','assetdivestmotive','N','idmot','assetdivestmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','assetdivestmotive','N','description','assetdivestmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','assetload','N','idassetload','assetload')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','assetload','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','assetload','N','adate','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','assetload','N','nassetload','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','assetload','N','yassetload','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','assetload','N','idassetloadkind','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','assetload','N','ratificationdate','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','assetload','N','idassetload','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','assetload','N','idassetloadkind','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','assetload','N','yassetload','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','assetload','N','nassetload','assetload')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','assetload','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','assetload','N','adate','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','assetload','N','nassetload','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','assetload','N','yassetload','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','assetload','N','idassetloadkind','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','assetload','N','transmitted','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','assetload','S','ratificationdate','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','assetload','N','ratificationdate','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','assetload','N','idassetload','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','assetload','N','ratificationdate','assetload')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','assetload','N','yassetload','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','assetload','S','transmitted','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','assetload','N','transmitted','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','assetload','S','adate','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','assetload','N','adate','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','assetload','N','idassetload','assetload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','assetloadexpense','N','idexp','assetloadexpense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','assetloadexpense','N','idassetload','assetloadexpense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','assetloadkind','N','idassetloadkind','assetloadkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','assetloadkind','N','codeassetloadkind','assetloadkind')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','assetloadkind','N','description','assetloadkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','assetloadkind','N','idassetloadkind','assetloadkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','assetloadkind','N','description','assetloadkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','assetloadmotive','N','idmot','assetloadmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','assetloadmotive','N','idmot','assetloadmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','assetloadmotive','N','description','assetloadmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','assetloadmotive','N','idmot','assetloadmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','assetloadmotive','N','description','assetloadmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','assetlocation','N','idasset','assetlocation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','assetlocation','N','idasset','assetlocation')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','assetlocation','N','start','assetlocation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','assetlocation','N','idasset','assetlocation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','assetlocation','S','start','assetlocation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','assetlocation','N','idasset','assetlocation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','assetlocation','N','start','assetlocation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','assetlocation','S','idlocation','assetlocation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','assetlocation','S','start','assetlocation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','assetlocation','N','idasset','assetlocation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','assetlocation','N','idlocation','assetlocation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','assetlocation','N','start','assetlocation')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','assetmanager','N','idasset','assetmanager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','assetmanager','N','idasset','assetmanager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','assetmanager','N','start','assetmanager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','assetmanager','N','idasset','assetmanager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','assetmanager','S','start','assetmanager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','assetmanager','N','idasset','assetmanager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','assetmanager','N','start','assetmanager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','assetmanager','S','idman','assetmanager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','assetmanager','S','start','assetmanager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','assetmanager','N','idasset','assetmanager')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','assetmanager','N','idman','assetmanager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','assetmanager','N','start','assetmanager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','assetunload','N','idassetunload','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','assetunload','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','assetunload','N','adate','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','assetunload','N','nassetunload','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','assetunload','N','yassetunload','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','assetunload','N','idassetunloadkind','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','assetunload','N','ratificationdate','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','assetunload','N','idassetunload','assetunload')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','assetunload','N','idassetunloadkind','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','assetunload','N','yassetunload','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','assetunload','N','nassetunload','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','assetunload','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','assetunload','N','adate','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','assetunload','N','nassetunload','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','assetunload','N','yassetunload','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','assetunload','N','idassetunloadkind','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','assetunload','N','transmitted','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','assetunload','N','ratificationdate','assetunload')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','assetunload','N','idassetunload','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','assetunload','N','ratificationdate','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','assetunload','N','yassetunload','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','assetunload','S','transmitted','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','assetunload','N','transmitted','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','assetunload','S','adate','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','assetunload','N','adate','assetunload')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','assetunloadincome','S','idassetunload','assetunloadincome')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','assetunloadincome','N','idassetunload','assetunloadincome')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','assetunloadincome','N','idinc','assetunloadincome')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','assetunloadincome','N','idassetunload','assetunloadincome')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','assetunloadkind','N','idassetunloadkind','assetunloadkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','assetunloadkind','N','idassetunloadkind','assetunloadkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','assetunloadkind','N','description','assetunloadkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','assetunloadkind','N','idassetunloadkind','assetunloadkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','assetunloadkind','N','description','assetunloadkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','assetunloadmotive','N','idmot','assetunloadmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','assetunloadmotive','N','idmot','assetunloadmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','assetunloadmotive','N','description','assetunloadmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','assetunloadmotive','N','idmot','assetunloadmotive')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','assetunloadmotive','N','description','assetunloadmotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','assetusage','N','transmitted','assetusage')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','assetusage','S','transmitted','assetusage')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','assetusage','N','transmitted','assetusage')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','assetusagekind','N','idassetusagekind','assetusagekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','assetusagekind','N','codeassetusagekind','assetusagekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','assetusagekind','N','description','assetusagekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','assetusagekind','N','idassetusagekind','assetusagekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','assetusagekind','N','description','assetusagekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','assetvar','-','sys_esercizio','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','assetvar','N','idinventoryagency','assetvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','assetvar','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','assetvar','N','idinventoryagency','assetvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','assetvar','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','assetvar','N','idinventoryagency','assetvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','assetvardetail','N','idassetvar','assetvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','assetvardetail','N','idassetvar','assetvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','assetvardetail','N','idassetvar','assetvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','assetvardetail','N','idassetvar','assetvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','assetvardetail','N','idassetvar','assetvar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','assetvardetail','N','idassetvar','assetvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','authagency','N','idauthagency','authagency')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','authmodel','N','idauthmodel','authmodel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','bank','N','idbank','bank')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','bank','N','idbank','bank')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','bank','N','idbank','bank')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','bank','N','description','bank')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','banktransaction','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','banktransaction','N','kpay','banktransaction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','banktransaction','N','kpro','banktransaction')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','banktransaction','N','idexp','banktransaction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','banktransaction','N','idinc','banktransaction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','banktransaction','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','banktransaction','N','transactiondate','banktransaction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','banktransaction','N','yban','banktransaction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','banktransaction','N','kind','banktransaction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','banktransaction','N','kpay','banktransaction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','banktransaction','N','kpro','banktransaction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','banktransaction','S','amount','banktransaction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','banktransaction','N','kpay','banktransaction')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','banktransaction','N','amount','banktransaction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','banktransaction','N','kpro','banktransaction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','banktransaction','N','idexp','banktransaction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','banktransaction','N','idinc','banktransaction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','banktransaction','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','banktransaction','S','transactiondate','banktransaction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','banktransaction','N','transactiondate','banktransaction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','banktransaction','N','yban','banktransaction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','banktransaction','N','kind','banktransaction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','banktransaction','N','kpay','banktransaction')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','banktransaction','N','kpro','banktransaction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','bill','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','bill','N','idtreasurer','bill')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','bill','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','bill','S','idtreasurer','bill')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','bill','N','idtreasurer','bill')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','bill','S','registry','bill')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','bill','S','covered','bill')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','bill','S','total','bill')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','bill','S','adate','bill')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','bill','S','active','bill')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','bill','S','motive','bill')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','bill','N','registry','bill')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','bill','N','covered','bill')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','bill','N','total','bill')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','bill','N','adate','bill')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','bill','N','active','bill')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','15','bill','N','motive','bill')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','bookingdetail','N','number','bookingdetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','bookingdetail','N','idbooking','bookingdetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','bookingdetail','N','idlist','bookingdetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','bookingdetail','N','idstore','bookingdetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','bookingdetail','N','idstock','bookingdetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','bookingdetail','N','idlist','bookingdetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','bookingdetail','N','idbooking','bookingdetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','bookingdetail','N','idlist','bookingdetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','bookingdetail','N','number','bookingdetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','bookingdetail','S','number','bookingdetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','bookingdetail','N','number','bookingdetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','bookingdetail','N','idstock','bookingdetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','bookingdetail','S','authorized','bookingdetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','bookingdetail','N','authorized','bookingdetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','bookingdetail','N','idbooking','bookingdetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','bookingdetail','N','idlist','bookingdetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','bookingdetail','N','idstore','bookingdetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','bookingdetail','S','number','bookingdetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','bookingdetail','N','number','bookingdetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','bookingdetail','N','idbooking','bookingdetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','bookingdetail','N','idlist','bookingdetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','bookingdetail','N','idstore','bookingdetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','cab','N','idbank','cab')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','cab','N','idcab','cab')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','cab','N','idbank','cab')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','cab','N','idcab','cab')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','cab','N','idbank','cab')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','cab','N','idcab','cab')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','cab','N','description','cab')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','cafdocument','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','cafdocument','N','idcon','cafdocument')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','cafdocument','N','cafdocumentkind','cafdocument')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','cafdocument','N','idfiscaltaxregion','cafdocument')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','cafdocument','N','ayear','cafdocument')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','cafdocument','N','idcity','cafdocument')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','cafdocument','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','cafdocument','N','idcon','cafdocument')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','cafdocument','N','cafdocumentkind','cafdocument')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','cafdocument','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','cafdocument','N','idcon','cafdocument')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','cafdocument','N','cafdocumentkind','cafdocument')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','cafdocument','S','idfiscaltaxregion','cafdocument')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','cafdocument','N','idfiscaltaxregion','cafdocument')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','cafdocument','N','ayear','cafdocument')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','cafdocument','S','idcity','cafdocument')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','cafdocument','N','idcity','cafdocument')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','cafdocument','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','cafdocument','N','idcon','cafdocument')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','cafdocument','N','cafdocumentkind','cafdocument')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','casualcontract','N','ycon','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','casualcontract','N','ncon','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','casualcontract','N','ycon','casualcontract')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','casualcontract','N','ncon','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','casualcontract','N','idreg','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','casualcontract','N','stop','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','casualcontract','N','start','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','casualcontract','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','casualcontract','N','ycon','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','casualcontract','N','idreg','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','casualcontract','N','idser','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','casualcontract','N','start','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','casualcontract','N','stop','casualcontract')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','casualcontract','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','casualcontract','N','ycon','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','casualcontract','N','ncon','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','casualcontract','S','stop','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','casualcontract','S','start','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','casualcontract','N','stop','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','casualcontract','N','start','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','casualcontract','N','idreg','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','casualcontract','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','casualcontract','S','idreg','casualcontract')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','casualcontract','N','ycon','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','casualcontract','N','ncon','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','casualcontract','N','idreg','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','casualcontract','-','sys_maxexpensephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','casualcontract','S','idser','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','casualcontract','S','adate','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','casualcontract','N','idser','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','casualcontract','N','adate','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','casualcontract','-','sys_itinerationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','casualcontract','N','feegross','casualcontract')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','casualcontract','S','start','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','casualcontract','S','stop','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','casualcontract','N','start','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','15','casualcontract','N','stop','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','16','casualcontract','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','casualcontractrefund','N','ycon','casualcontractrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','casualcontractrefund','N','ncon','casualcontractrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','casualcontractrefund','N','ycon','casualcontractrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','casualcontractrefund','N','ncon','casualcontractrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','casualcontractrefund','N','ycon','casualcontractrefund')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','casualcontractrefund','N','ncon','casualcontractrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','casualcontractrefund','N','ycon','casualcontractrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','casualcontractrefund','N','ncon','casualcontractrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','casualcontractrefund','S','amount','casualcontractrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','casualcontractrefund','N','ycon','casualcontractrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','casualcontractrefund','N','ncon','casualcontractrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','casualcontractrefund','N','amount','casualcontractrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','casualcontractyear','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','casualcontractyear','N','flaghigherrate','casualcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','casualcontractyear','N','higherrate','casualcontractyear')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','casualcontractyear','N','ycon','casualcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','casualcontractyear','N','ncon','casualcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','casualcontractyear','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','casualcontractyear','S','flaghigherrate','casualcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','casualcontractyear','N','flaghigherrate','casualcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','casualcontractyear','N','higherrate','casualcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','casualcontractyear','N','ycon','casualcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','casualcontractyear','N','ncon','casualcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','casualcontractyear','S','higherrate','casualcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','casualcontractyear','S','feegross','casualcontract')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','casualcontractyear','N','feegross','casualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','casualcontractyear','S','higherrate','casualcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','casualcontractyear','S','flaghigherrate','casualcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','casualcontractyear','N','ayear','casualcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','casualcontractyear','N','ycon','casualcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','casualcontractyear','N','ncon','casualcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','casualcontractyear','N','higherrate','casualcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','casualcontractyear','N','flaghigherrate','casualcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','casualrefund','N','idlinkedrefund','casualrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','category','N','idcategory','category')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','category','N','description','category')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','category','N','idcategory','category')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','category','N','description','category')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','center','N','ayear','center')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','center','N','centercode','center')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','center','N','printingorder','center')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','center','N','ayear','center')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','center','N','printingorder','center')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','center','N','idcen','center')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','centerlevel','N','ayear','centerlevel')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','centerlevel','N','description','centerlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','centerlevel','N','ayear','centerlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','centerlevel','N','nlevel','centerlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','centerlevel','N','description','centerlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','centerlookup','N','oldidcenter','centerlookup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','centralizedcategory','N','idcentralizedcategory','centralizedcategory')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','centralizedcategory','N','description','centralizedcategory')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','centralizedcategory','N','idcentralizedcategory','centralizedcategory')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','centralizedcategory','N','description','centralizedcategory')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','clawback','N','idclawback','clawback')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','clawback','N','clawbackref','clawback')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','clawback','N','description','clawback')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','clawback','N','idclawback','clawback')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','clawback','N','description','clawback')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','clawbacksetup','N','idclawback','clawbacksetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','clawbacksetup','N','ayear','clawbacksetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','config','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','config','S','cashvaliditykind','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','config','S','fin_kind','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','config','S','flagcredit','config')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','config','S','flagproceeds','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','config','S','assessmentphasecode','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','config','S','appropriationphasecode','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','config','S','payment_finlevel','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','config','S','proceeds_finlevel','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','config','S','idfinincomesurplus','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','config','S','idfinexpensesurplus','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','config','N','cashvaliditykind','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','config','N','fin_kind','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','config','N','flagcredit','config')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','15','config','N','flagproceeds','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','16','config','N','assessmentphasecode','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','17','config','N','appropriationphasecode','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','18','config','N','payment_finlevel','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','19','config','N','proceeds_finlevel','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','20','config','N','idfinincomesurplus','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','21','config','N','idfinexpensesurplus','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','22','config','S','taxvaliditykind','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','23','config','N','ayear','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','24','config','N','taxvaliditykind','config')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','25','config','S','expensephase','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','26','config','N','expensephase','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','27','config','S','incomephase','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','28','config','N','incomephase','config')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','csa_agency','N','idcsa_agency','csa_agency')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','csa_agencypaymethod','N','idcsa_agency','csa_agencypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','csa_agencypaymethod','N','idreg','csa_agencypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','csa_agencypaymethod','N','vocecsa','csa_agencypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','csa_agencypaymethod','N','idcsa_agency','csa_agencypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','csa_agencypaymethod','N','vocecsa','csa_agencypaymethod')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','csa_contract','N','idcsa_contractkind','csa_contract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','csa_contract','N','idcsa_contract','csa_contract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','csa_contract','N','idexp_main','csa_contract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','csa_contract','N','idfin_main','csa_contract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','csa_contract','N','idupb','csa_contract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','csa_contract','N','idcsa_contract','csa_contract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','csa_contract','N','ayear','csa_contract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','csa_contract','N','idfin_main','csa_contract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','csa_contract','N','idupb','csa_contract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','csa_contract','N','idexp_main','csa_contract')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','csa_contract','N','idcsa_contract','csa_contract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','csa_contract','N','ayear','csa_contract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','csa_contractexpense','N','idcsa_contract','csa_contractexpense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','csa_contractexpense','N','ayear','csa_contractexpense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','csa_contractkind','N','idcsa_contractkind','csa_contractkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','csa_contractkindrules','N','capitolocsa','csa_contractkindrules')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','csa_contractkindrules','N','ruolocsa','csa_contractkindrules')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','csa_contractkindrules','N','ayear','csa_contractkindrules')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','csa_contractkindrules','N','idcsa_contractkind','csa_contractkindrules')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','csa_contractkindrules','N','capitolocsa','csa_contractkindrules')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','csa_contractkindrules','N','ruolocsa','csa_contractkindrules')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','csa_contractkindrules','N','ayear','csa_contractkindrules')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','csa_contractkindrules','N','idcsa_contractkind','csa_contractkindrules')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','csa_contractregistry','S','extmatricula','csa_contractregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','csa_contractregistry','N','extmatricula','csa_contractregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','csa_contractregistry','N','idcsa_contract','csa_contractregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','csa_contractregistry','N','ayear','csa_contractregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','csa_contractregistry','S','extmatricula','csa_contractregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','csa_contractregistry','N','extmatricula','csa_contractregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','csa_contractregistry','N','idcsa_contract','csa_contractregistry')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','csa_contractregistry','N','ayear','csa_contractregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','csa_contracttax','N','idfin','csa_contracttax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','csa_contracttax','N','idupb','csa_contracttax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','csa_contracttax','N','idexp','csa_contracttax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','csa_contracttax','N','idcsa_contract','csa_contracttax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','csa_contracttax','N','idcsa_contracttax','csa_contracttax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','csa_contracttax','N','ayear','csa_contracttax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','csa_contracttax','N','idfin','csa_contracttax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','csa_contracttax','N','idupb','csa_contracttax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','csa_contracttax','N','idexp','csa_contracttax')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','csa_contracttax','N','idcsa_contract','csa_contracttax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','csa_contracttax','N','idcsa_contracttax','csa_contracttax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','csa_contracttax','N','ayear','csa_contracttax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','csa_contracttaxexpense','N','idcsa_contract','csa_contracttax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','csa_contracttaxexpense','N','idcsa_contracttax','csa_contracttax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','csa_contracttaxexpense','N','ayear','csa_contracttax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','csa_contracttaxexpense','N','idfin','csa_contracttax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','csa_contracttaxexpense','N','idupb','csa_contracttax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','csa_contracttaxexpense','N','idexp','csa_contracttax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','csa_import','N','idcsa_import','csa_import')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','csa_importriep','N','idcsa_import','csa_importriep')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','csa_importriep','N','idcsa_import','csa_importriep')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','csa_importver','N','idcsa_import','csa_importver')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','csa_importver','N','idcsa_import','csa_importver')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','csa_incomesetup','N','vocecsa','csa_incomesetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','csa_incomesetup','N','ayear','csa_incomesetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','csa_incomesetup','N','vocecsa','csa_incomesetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','csa_incomesetup','N','ayear','csa_incomesetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','currency','N','idcurrency','currency')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','currency','N','codecurrency','currency')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','currency','N','description','currency')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','currency','N','idcurrency','currency')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','currency','N','description','currency')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','ddt_in','N','idreg','ddt_in')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','ddt_in','N','yddt_in','ddt_in')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','ddt_in','N','nddt_in','ddt_in')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','ddt_in','N','idreg','ddt_in')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','ddt_in','N','yddt_in','ddt_in')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','ddt_in','N','nddt_in','ddt_in')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','DELETE_automatismiregione','N','delete_codiceritenuta','delete_automatismiregione')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','DELETE_automatismiregione','N','delete_esercizio','delete_automatismiregione')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','DELETE_automatismiregione','N','delete_codiceregione','delete_automatismiregione')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','delete_itinerationkind','N','delete_codiceclass','delete_itinerationkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','delete_itinerationkind','N','delete_codiceclass','delete_itinerationkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','delete_itinerationkind','N','delete_descrizione','delete_itinerationkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','division','N','iddivision','division')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','division','N','iddivision','division')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','division','N','description','division')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','division','N','codedivision','division')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','division','N','iddivision','division')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','division','N','description','division')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','division','N','codedivision','division')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','entry','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','entry','S','yentry','entry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','entry','S','locked','entry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','entry','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','entry','N','yentry','entry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','entry','N','identrykind','entry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','entry','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','entry','S','yentry','entry')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','entry','S','locked','entry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','entry','N','locked','entry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','entrydetail','N','yentry','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','entrydetail','N','nentry','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','entrydetail','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','entrydetail','S','yentry','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','entrydetail','N','yentry','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','entrydetail','N','nentry','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','entrydetail','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','entrydetail','N','yentry','entrydetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','entrydetail','N','idacc','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','entrydetail','N','nentry','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','entrydetail','N','idupb','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','entrydetail','N','idreg','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','entrydetail','S','amount','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','entrydetail','N','yentry','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','entrydetail','N','nentry','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','entrydetail','N','amount','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','entrydetail','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','entrydetail','S','yentry','entrydetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','entrydetail','N','idacc','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','entrydetail','N','yentry','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','entrydetail','N','nentry','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','entrydetail','S','idupb','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','entrydetail','N','idupb','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','entrydetail','S','idreg','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','entrydetail','N','idreg','entrydetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','entrydetailaccrual','N','yentry','entrydetailaccrual')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','entrydetailaccrual','N','nentry','entrydetailaccrual')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','entrydetailaccrual','N','yentry','entrydetailaccrual')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','entrydetailaccrual','N','nentry','entrydetailaccrual')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','entrydetailaccrual','N','yentry','entrydetailaccrual')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','entrydetailaccrual','N','nentry','entrydetailaccrual')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','epexpsorting','N','nepexp','epexpsorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','epexpsorting','N','yepexp','epexpsorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','epexpsorting','N','idsor','epexpsorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','epexpsorting','N','idacc','epexpsorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','epexpsorting','S','kind','epexpsorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','epexpsorting','N','kind','epexpsorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','epexpsorting','N','nepexp','epexpsorting')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','epexpsorting','N','yepexp','epexpsorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','epexpsorting','N','idsor','epexpsorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','epexpsorting','S','adate','epexpsorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','epexpsorting','N','adate','epexpsorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','epexpsorting','S','amount','epexpsorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','epexpsorting','N','amount','epexpsorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','epexpsorting','N','idacc','epexpsorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','estimate','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','estimate','N','idestimkind','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','estimate','N','yestim','estimate')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','estimate','N','nestim','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','estimate','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','estimate','N','yestim','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','estimate','N','idestimkind','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','estimate','N','nestim','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','estimate','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','estimate','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','estimate','N','flagintracom','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','estimate','N','idestimkind','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','estimate','N','yestim','estimate')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','estimate','N','nestim','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','estimate','S','idcurrency','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','estimate','N','idcurrency','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','estimate','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','estimate','S','idreg','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','estimate','N','idestimkind','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','estimate','N','yestim','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','estimate','N','nestim','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','estimate','N','idreg','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','estimate','-','sys_idflowchart','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','estimatedetail','N','idinc_iva','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','estimatedetail','N','idinc_taxable','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','3','estimatedetail','N','idestimkind','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','4','estimatedetail','N','yestim','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','5','estimatedetail','N','nestim','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','estimatedetail','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','estimatedetail','N','idestimkind','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','estimatedetail','N','yestim','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','estimatedetail','N','nestim','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','5','estimatedetail','N','idestimkind','estimatedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','6','estimatedetail','N','yestim','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','7','estimatedetail','N','nestim','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','8','estimatedetail','N','rownum','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','estimatedetail','N','idinc_iva','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','estimatedetail','N','idinc_taxable','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','estimatedetail','N','idestimkind','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','estimatedetail','N','yestim','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','estimatedetail','N','nestim','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','estimatedetail','N','idreg','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','estimatedetail','N','idgroup','estimatedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','8','estimatedetail','N','tax','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','9','estimatedetail','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','10','estimatedetail','N','idestimkind','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','11','estimatedetail','N','yestim','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','12','estimatedetail','N','nestim','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','estimatedetail','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','estimatedetail','S','idinc_taxable','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','estimatedetail','S','idinc_iva','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','estimatedetail','N','idinc_taxable','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','estimatedetail','N','idinc_iva','estimatedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','estimatedetail','N','idestimkind','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','estimatedetail','N','yestim','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','estimatedetail','N','nestim','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','estimatedetail','N','idreg','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','estimatedetail','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','estimatedetail','S','number','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','estimatedetail','S','taxable','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','estimatedetail','S','taxrate','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','13','estimatedetail','S','discount','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','14','estimatedetail','S','idupb','estimatedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','15','estimatedetail','S','idreg','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','16','estimatedetail','S','start','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','17','estimatedetail','S','stop','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','18','estimatedetail','N','number','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','19','estimatedetail','N','taxable','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','20','estimatedetail','N','taxrate','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','21','estimatedetail','N','discount','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','22','estimatedetail','N','idupb','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','23','estimatedetail','N','start','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','24','estimatedetail','N','stop','estimatedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','25','estimatedetail','N','rownum','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','26','estimatedetail','S','idaccmotive','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','27','estimatedetail','N','idgroup','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','28','estimatedetail','N','idaccmotive','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','29','estimatedetail','S','idaccmotiveannulment','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','30','estimatedetail','N','idaccmotiveannulment','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','31','estimatedetail','N','tax','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','32','estimatedetail','S','tax','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','33','estimatedetail','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','34','estimatedetail','N','idestimkind','estimate')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','35','estimatedetail','N','yestim','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','36','estimatedetail','N','nestim','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','estimatedetail','S','number','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','estimatedetail','S','taxable','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','estimatedetail','S','taxrate','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','estimatedetail','S','discount','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','estimatedetail','S','idupb','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','estimatedetail','S','idreg','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','estimatedetail','N','number','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','estimatedetail','N','taxable','estimatedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','estimatedetail','N','taxrate','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','estimatedetail','N','discount','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','estimatedetail','N','idupb','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','estimatedetail','N','idreg','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','estimatedetail','N','idinc_iva','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','estimatedetail','N','idinc_taxable','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','15','estimatedetail','N','idestimkind','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','16','estimatedetail','N','yestim','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','17','estimatedetail','N','nestim','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','18','estimatedetail','N','rownum','estimatedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','19','estimatedetail','S','idinc_iva','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','20','estimatedetail','S','idinc_taxable','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','21','estimatedetail','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','22','estimatedetail','S','stop','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','23','estimatedetail','N','stop','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','24','estimatedetail','S','start','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','25','estimatedetail','N','start','estimatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','26','estimatedetail','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','27','estimatedetail','N','idestimkind','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','28','estimatedetail','N','yestim','estimate')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','29','estimatedetail','N','nestim','estimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','estimatekind','N','idestimkind','estimatekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','estimatekind','N','description','estimatekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','estimatekind','N','idestimkind','estimatekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','estimatekind','N','description','estimatekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','exhibitedcud','N','idcon','exhibitedcud')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','exhibitedcud','N','fiscalyear','exhibitedcud')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','exhibitedcud','N','idlinkedcon','exhibitedcud')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','exhibitedcud','N','fiscalyear','exhibitedcud')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','exhibitedcud','N','idlinkeddbdepartment','exhibitedcud')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','exhibitedcud','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','exhibitedcud','N','idcon','exhibitedcud')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','exhibitedcud','N','cfotherdeputy','exhibitedcud')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','exhibitedcud','N','idcon','exhibitedcud')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','exhibitedcud','N','fiscalyear','exhibitedcud')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','exhibitedcud','S','idlinkedcon','exhibitedcud')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','exhibitedcud','N','idlinkedcon','exhibitedcud')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','exhibitedcud','N','fiscalyear','exhibitedcud')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','exhibitedcud','N','idlinkeddbdepartment','exhibitedcud')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','exhibitedcud','-','sys_esercizio','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','exhibitedcud','S','taxablegross','exhibitedcud')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','exhibitedcud','N','taxablegross','exhibitedcud')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','exhibitedcud','N','idcon','exhibitedcud')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','exhibitedcud','N','cfotherdeputy','exhibitedcud')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','exhibitedcud','S','fiscalyear','exhibitedcud')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','exhibitedcud','N','idcon','exhibitedcud')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','exhibitedcud','N','fiscalyear','exhibitedcud')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','expense','N','idexp','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','expense','N','parentidexp','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','3','expense','-','sys_idflowchart','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','4','expense','-','sys_appropriationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','5','expense','N','nphase','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','expense','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','expense','N','idexp','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','expense','N','parentidexp','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','expense','N','autokind','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','expense','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','expense','N','nphase','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','expense','N','idexp','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','expense','N','parentidexp','expense')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','expense','N','idman','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','expense','-','sys_expenseregphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','expense','N','idreg','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','8','expense','N','adate','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','9','expense','N','cigcode','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','10','expense','-','sys_maxexpensephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','11','expense','-','sys_itinerationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','12','expense','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','13','expense','-','sys_appropriationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','14','expense','N','nmov','expense')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','expense','N','idreg','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','expense','-','sys_expenseregphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','expense','N','nphase','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','expense','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','expense','N','ymov','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','expense','N','doc','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','7','expense','N','docdate','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','8','expense','N','idpayment','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','9','expense','N','autokind','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','10','expense','N','parentidexp','expense')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','11','expense','-','sys_maxexpensephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','12','expense','N','adate','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','expense','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','expense','N','nphase','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','expense','N','idexp','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','expense','-','sys_maxexpensephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','expense','S','adate','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','expense','S','expiration','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','expense','S','idreg','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','expense','S','description','expense')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','expense','N','adate','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','expense','N','expiration','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','expense','N','idreg','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','expense','N','description','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','13','expense','S','idman','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','14','expense','N','idman','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','15','expense','S','doc','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','16','expense','S','docdate','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','17','expense','N','doc','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','18','expense','N','docdate','expense')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','19','expense','-','sys_expenseregphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','20','expense','N','parentidexp','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','21','expense','N','cigcode','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','22','expense','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','23','expense','-','sys_appropriationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','expense','N','idreg','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','expense','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','expense','S','adate','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','expense','S','expiration','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','expense','N','adate','expense')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','expense','N','expiration','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','expense','-','sys_expenseregphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','expense','N','nphase','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','expense','N','doc','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','expense','N','docdate','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','expense','N','idexp','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','expense','S','idreg','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','expense','S','idman','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','expense','N','idman','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','15','expense','S','idclawback','expense')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','16','expense','N','idclawback','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','17','expense','-','sys_maxexpensephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','18','expense','S','description','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','19','expense','N','description','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','20','expense','S','cigcode','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','21','expense','N','cigcode','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','22','expense','S','cupcode','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','23','expense','N','cupcode','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','expensecasualcontract','N','idexp','expensecasualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','expensecasualcontract','N','ycon','expensecasualcontract')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','expensecasualcontract','N','ncon','expensecasualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','expensecasualcontract','N','idexp','expensecasualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','expensecasualcontract','N','ncon','expensecasualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','expensecasualcontract','N','ycon','expensecasualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','expenseclawback','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','expenseclawback','N','idexp','expenseclawback')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','expenseclawback','N','idexp','expenseclawback')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','expenseclawback','N','idexp','expenseclawback')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','expenseclawback','N','idexp','expenseclawback')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','expenseclawback','S','amount','expenseclawback')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','expenseclawback','N','amount','expenseclawback')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','expenseclawback','N','idexp','expenseclawback')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','expenseclawback','S','amount','expenseclawback')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','expenseclawback','N','idexp','expenseclawback')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','expenseclawback','N','amount','expenseclawback')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','expenseinvoice','N','yinv','expenseinvoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','expenseinvoice','N','ninv','expenseinvoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','expenseinvoice','N','idinvkind','expenseinvoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','expenseinvoice','N','movkind','expenseinvoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','expenseinvoice','N','idexp','expenseinvoice')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','expenseinvoice','N','idexp','expenseinvoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','expenseinvoice','N','idinvkind','expenseinvoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','expenseinvoice','N','ninv','expenseinvoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','expenseinvoice','N','yinv','expenseinvoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','expenseitineration','N','idexp','expenseitineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','expenseitineration','-','sys_itinerationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','expenseitineration','N','iditineration','expenseitineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','expenseitineration','N','idexp','expenseitineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','expenseitineration','N','movkind','expenseitineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','expenseitineration','N','idexp','expenseitineration')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','expenseitineration','N','iditineration','expenseitineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','expenseitineration','N','movkind','expenseitineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','expenselast','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','expenselast','N','kpay','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','expenselast','N','idexp','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','expenselast','N','servicestart','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','expenselast','N','idexp','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','expenselast','N','idpaymethod','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','expenselast','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','expenselast','N','nbill','expenselast')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','expenselast','N','kpay','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','expenselast','N','ypay','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','8','expenselast','-','sys_itinerationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','expenselast','N','cin','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','expenselast','N','idbank','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','expenselast','N','idcab','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','expenselast','N','idpaymethod','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','expenselast','N','cc','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','expenselast','N','iban','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','7','expenselast','N','idser','expenselast')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','8','expenselast','N','paymentdescr','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','expenselast','N','servicestart','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','expenselast','N','idexp','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','expenselast','N','idpaymethod','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','expenselast','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','expenselast','N','nbill','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','expenselast','S','kpay','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','expenselast','N','kpay','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','expenselast','S','idser','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','expenselast','N','idser','expenselast')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','expenselast','N','flag','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','expenselast','N','ypay','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','expenselast','S','idregistrypaymethod','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','13','expenselast','N','idregistrypaymethod','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','expenselast','S','cc','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','expenselast','N','idpaymethod','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','expenselast','N','cc','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','expenselast','N','cin','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','expenselast','N','idbank','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','expenselast','N','idcab','expenselast')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','expenselast','S','cin','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','expenselast','S','idbank','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','expenselast','S','idcab','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','expenselast','N','iban','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','expenselast','S','idpaymethod','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','expenselast','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','expenselast','S','idser','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','expenselast','N','idser','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','15','expenselast','S','kpay','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','16','expenselast','N','idexp','expenselast')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','17','expenselast','N','kpay','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','18','expenselast','S','idaccdebit','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','19','expenselast','N','idaccdebit','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','20','expenselast','S','paymentdescr','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','21','expenselast','N','paymentdescr','expenselast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','expenselinkedpayment','N','idexp','expenselinkedpayment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','expenselinkedpayment','N','idexp','expenselinkedpayment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','expenselinkedproceeds','N','idinc','expenselinkedproceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','expenselinkedproceeds','N','idinc','expenselinkedproceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','expensemandate','N','idexp','expensemandate')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','expensemandate','N','idmankind','expensemandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','expensemandate','N','yman','expensemandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','expensemandate','N','nman','expensemandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','expensemandate','N','idexp','expensemandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','expensemandate','N','idexp','expensemandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','expensemandate','N','idexp','expensemandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','expensemandate','N','idmankind','expensemandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','expensemandate','N','nman','expensemandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','expensemandate','N','yman','expensemandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','expensepayroll','N','idexp','expensepayroll')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','expensepayroll','N','idpayroll','expensepayroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','expensepayroll','N','idexp','expensepayroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','expensepayroll','N','idpayroll','expensepayroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','expensepayroll','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','expensepayroll','N','idexp','expensepayroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','expensepayroll','N','idpayroll','expensepayroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','expensephase','N','nphase','expensephase')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','expensephase','N','description','expensephase')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','expensephase','N','nphase','expensephase')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','expensephase','N','description','expensephase')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','expenseprofservice','N','idexp','expenseprofservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','expenseprofservice','N','ycon','expenseprofservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','expenseprofservice','N','ncon','expenseprofservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','expenseprofservice','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','expenseprofservice','N','movkind','expenseprofservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','expenseprofservice','N','idexp','expenseprofservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','expenseprofservice','N','ncon','expenseprofservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','expenseprofservice','N','ycon','expenseprofservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','expenseprofservice','N','movkind','expenseprofservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','expensesetup','-','sys_esercizio','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','expensesetup','S','expensephase','expensesetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','expensesetup','N','expensephase','expensesetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','expensesorted','N','idsor','expensesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','expensesorted','N','ayear','expensesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','3','expensesorted','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','4','expensesorted','N','idexp','expensesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','expensesorted','N','idexp','expensesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','expensesorted','N','idsor','expensesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','expensesorted','N','idsor','expensesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','expensesorted','N','ayear','expensesorted')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','expensesorted','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','expensesorted','N','idexp','expensesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','expensesorted','N','idexp','expensesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','expensesorted','N','idsor','expensesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','expensesorted','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','expensesorted','N','idsor','expensesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','expensesorted','N','idexp','expensesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','expensesorted','N','ayear','expensesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','expensesorted','S','amount','expensesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','expensesorted','N','amount','expensesorted')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','expensesorted','S','idexp','expensesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','expensesorted','N','idsor','expensesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','expensesorted','N','ayear','expensesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','expensesorted','S','amount','expensesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','expensesorted','N','idexp','expensesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','expensesorted','N','amount','expensesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','expensetax','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','expensetax','N','idexp','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','3','expensetax','N','taxcode','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','4','expensetax','S','employtax','expensetax')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','expensetax','N','ytaxpay','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','expensetax','N','idinc','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','expensetax','N','idexp','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','expensetax','N','taxcode','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','5','expensetax','N','nbracket','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','expensetax','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','expensetax','N','taxcode','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','expensetax','N','idexp','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','expensetax','N','ayear','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','expensetax','N','idcity','expensetax')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','expensetax','N','idfiscaltaxregion','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','expensetax','N','idexp','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','expensetax','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','expensetax','N','taxcode','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','expensetax','N','admintax','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','expensetax','N','employtax','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','expensetax','N','idexp','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','expensetax','N','taxcode','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','expensetax','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','expensetax','S','employtax','expensetax')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','expensetax','N','employtax','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','expensetax','-','sys_maxexpensephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','expensetax','-','sys_maxincomephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','expensetax','S','ytaxpay','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','expensetax','N','ytaxpay','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','expensetax','N','ntaxpay','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','expensetax','S','idexp','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','expensetax','S','taxcode','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','expensetax','S','employtax','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','expensetax','S','admintax','expensetax')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','expensetax','S','ytaxpay','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','expensetax','S','ntaxpay','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','expensetax','S','idinc','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','expensetax','N','idexp','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','expensetax','N','ytaxpay','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','expensetax','N','ntaxpay','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','expensetax','N','idinc','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','expensetax','S','competencydate','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','expensetax','S','taxablegross','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','expensetax','S','taxablenet','expensetax')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','15','expensetax','S','idcity','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','16','expensetax','S','idfiscaltaxregion','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','17','expensetax','S','ayear','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','18','expensetax','N','competencydate','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','19','expensetax','N','employtax','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','20','expensetax','N','admintax','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','21','expensetax','N','taxablegross','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','22','expensetax','N','taxablenet','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','23','expensetax','N','idcity','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','24','expensetax','N','idfiscaltaxregion','expensetax')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','25','expensetax','N','ayear','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','26','expensetax','N','taxcode','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','27','expensetax','N','nbracket','expensetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','expensetaxcorrige','N','idexp','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','expensetaxcorrige','N','taxcode','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','3','expensetaxcorrige','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','4','expensetaxcorrige','N','linkedidexp','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','expensetaxcorrige','N','ytaxpay','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','expensetaxcorrige','N','employamount','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','expensetaxcorrige','N','adminamount','expensetaxcorrige')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','expensetaxcorrige','N','linkedidinc','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','5','expensetaxcorrige','N','idexp','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','6','expensetaxcorrige','N','idexpensetaxcorrige','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','expensetaxcorrige','N','idexp','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','expensetaxcorrige','N','taxcode','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','expensetaxcorrige','-','sys_datacontabile','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','expensetaxcorrige','N','adate','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','expensetaxcorrige','N','employamount','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','expensetaxcorrige','N','idcity','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','expensetaxcorrige','N','idfiscaltaxregion','expensetaxcorrige')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','expensetaxcorrige','N','idexp','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','expensetaxcorrige','N','taxcode','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','expensetaxcorrige','S','ytaxpay','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','expensetaxcorrige','N','ytaxpay','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','expensetaxcorrige','N','adate','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','expensetaxcorrige','N','ntaxpay','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','expensetaxcorrige','-','sys_datacontabile','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','expensetaxcorrige','S','adate','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','expensetaxcorrige','N','employamount','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','expensetaxcorrige','N','idcity','expensetaxcorrige')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','expensetaxcorrige','N','idfiscaltaxregion','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','expensetaxcorrige','N','idexp','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','expensetaxcorrige','S','adate','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','expensetaxcorrige','S','employamount','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','expensetaxcorrige','S','adminamount','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','expensetaxcorrige','S','idcity','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','expensetaxcorrige','S','idfiscaltaxregion','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','expensetaxcorrige','S','ayear','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','expensetaxcorrige','N','ytaxpay','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','expensetaxcorrige','N','employamount','expensetaxcorrige')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','expensetaxcorrige','N','adminamount','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','expensetaxcorrige','N','adate','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','expensetaxcorrige','N','idcity','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','expensetaxcorrige','N','idfiscaltaxregion','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','expensetaxcorrige','N','ayear','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','15','expensetaxcorrige','N','linkedidinc','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','16','expensetaxcorrige','S','linkedidinc','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','17','expensetaxcorrige','S','linkedidexp','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','18','expensetaxcorrige','N','linkedidexp','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','19','expensetaxcorrige','S','ytaxpay','expensetaxcorrige')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','20','expensetaxcorrige','S','ntaxpay','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','21','expensetaxcorrige','N','ntaxpay','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','22','expensetaxcorrige','N','idexpensetaxcorrige','expensetaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','expensetaxofficial','N','idexp','expensetaxofficial')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','expensetaxofficial','N','taxcode','expensetaxofficial')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','3','expensetaxofficial','N','stop','expensetaxofficial')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','expensetaxofficial','N','idexp','expensetaxofficial')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','expensetaxofficial','N','taxcode','expensetaxofficial')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','expensetaxofficial','N','stop','expensetaxofficial')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','expensetaxofficial','N','idexp','expensetaxofficial')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','expensetaxofficial','N','taxcode','expensetaxofficial')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','expensetaxofficial','S','employtax','expensetaxofficial')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','expensetaxofficial','N','employtax','expensetaxofficial')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','expensetaxofficial','S','admintax','expensetaxofficial')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','expensetaxofficial','N','admintax','expensetaxofficial')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','expensetaxofficial','N','idexp','expensetaxofficial')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','expensevar','-','sys_maxexpensephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','expensevar','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','3','expensevar','N','idexp','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','4','expensevar','N','amount','expensevar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','5','expensevar','N','autokind','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','6','expensevar','N','yvar','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','7','expensevar','N','nvar','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','8','expensevar','S','amount','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','9','expensevar','-','sys_itinerationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','10','expensevar','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','11','expensevar','-','sys_appropriationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','expensevar','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','expensevar','-','sys_expensefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','expensevar','N','idexp','expensevar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','expensevar','N','yvar','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','5','expensevar','N','amount','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','6','expensevar','N','idunderwriting','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','7','expensevar','N','autokind','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','8','expensevar','N','nvar','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','9','expensevar','-','sys_maxexpensephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','10','expensevar','N','kpaymenttransmission','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','expensevar','-','sys_maxexpensephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','expensevar','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','expensevar','N','idexp','expensevar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','expensevar','-','sys_expensefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','expensevar','N','yvar','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','expensevar','N','amount','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','expensevar','N','idunderwriting','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','8','expensevar','N','autokind','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','9','expensevar','N','idpayment','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','10','expensevar','N','idinvkind','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','11','expensevar','N','yinv','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','12','expensevar','N','ninv','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','13','expensevar','N','movkind','expensevar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','14','expensevar','N','nvar','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','15','expensevar','-','sys_itinerationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','16','expensevar','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','17','expensevar','-','sys_appropriationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','expensevar','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','expensevar','N','idinvkind','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','expensevar','N','movkind','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','expensevar','N','autokind','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','expensevar','N','idexp','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','expensevar','N','amount','expensevar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','7','expensevar','N','yvar','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','8','expensevar','-','sys_maxexpensephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','9','expensevar','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','expensevar','-','sys_maxexpensephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','expensevar','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','expensevar','S','amount','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','expensevar','N','idexp','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','expensevar','N','amount','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','expensevar','N','yvar','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','expensevar','N','autokind','expensevar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','expensevar','N','idinvkind','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','expensevar','N','ninv','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','expensevar','N','yinv','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','expensevar','S','autokind','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','expensevar','N','movkind','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','13','expensevar','N','nvar','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','14','expensevar','N','kpaymenttransmission','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','15','expensevar','S','kpaymenttransmission','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','16','expensevar','-','sys_itinerationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','17','expensevar','-','sys_idflowchart','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','18','expensevar','-','sys_appropriationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','expensevar','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','expensevar','-','sys_expensefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','expensevar','S','amount','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','expensevar','N','idexp','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','expensevar','N','yvar','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','expensevar','N','amount','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','expensevar','N','idunderwriting','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','expensevar','N','autokind','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','expensevar','N','nvar','expensevar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','expensevar','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','expensevar','S','autokind','expensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','expensewageaddition','N','idexp','expensewageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','expensewageaddition','N','ycon','expensewageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','expensewageaddition','N','ncon','expensewageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','expensewageaddition','N','idexp','expensewageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','expenseyear','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','expenseyear','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','expenseyear','N','idfin','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','expenseyear','-','sys_esercizio','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','expenseyear','N','idexp','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','expenseyear','-','sys_expensefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','expenseyear','N','idfin','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','expenseyear','N','idupb','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','expenseyear','-','sys_expenseregphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','expenseyear','N','ayear','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','8','expenseyear','-','sys_maxexpensephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','9','expenseyear','N','amount','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','10','expenseyear','-','sys_itinerationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','expenseyear','-','sys_esercizio','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','expenseyear','N','idfin','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','expenseyear','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','expenseyear','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','expenseyear','S','amount','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','expenseyear','N','idexp','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','expenseyear','N','amount','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','expenseyear','N','ayear','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','expenseyear','-','sys_maxexpensephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','expenseyear','S','idfin','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','expenseyear','N','idfin','expenseyear')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','expenseyear','S','idupb','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','expenseyear','N','idupb','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','expenseyear','-','sys_itinerationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','expenseyear','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','13','expenseyear','-','sys_appropriationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','14','expenseyear','N','nphase','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','expenseyear','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','expenseyear','-','sys_expensefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','expenseyear','S','amount','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','expenseyear','S','idfin','expenseyear')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','expenseyear','S','idupb','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','expenseyear','N','idfin','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','expenseyear','N','idupb','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','expenseyear','N','idexp','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','expenseyear','N','amount','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','expenseyear','N','idexp','expense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','expenseyear','-','sys_maxexpensephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','expenseyear','N','ayear','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','expenseyear','-','sys_itinerationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','expenseyear','-','sys_idflowchart','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','expirationkind','N','description','expirationkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','expirationkind','N','idexpirationkind','expirationkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','expirationkind','N','description','expirationkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','f24ep','N','ayear','f24ep')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','fin','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','fin','N','idfin','fin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','fin','N','nlevel','fin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','fin','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','fin','N','idfin','fin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','fin','-','sys_esercizio','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','fin','N','ayear','fin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','fin','N','flag','fin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','fin','N','codefin','fin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','fin','N','printingorder','fin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','fin','N','paridfin','fin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','7','fin','N','nlevel','fin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','fin','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','fin','S','flag','fin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','fin','N','flag','fin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','fin','N','ayear','fin')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','fin','N','printingorder','fin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','fin','N','idfin','fin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','fin','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','finlast','S','idman','finlast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','finlast','N','idfin','finlast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','finlast','N','idman','finlast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','finlevel','N','ayear','finlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','finlevel','N','nlevel','finlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','finlevel','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','finlevel','N','flag','finlevel')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','finlevel','N','ayear','finlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','finlevel','N','nlevel','finlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','finlevel','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','finlevel','N','ayear','finlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','finlevel','N','description','finlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','finlevel','N','ayear','finlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','finlevel','N','nlevel','finlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','finlevel','N','description','finlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','finlevel','N','flag','finlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','finlevel','-','sys_esercizio','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','finlookup','N','oldidfin','finlookup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','finlookup','N','oldidfin','finlookup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','finsorting','N','idsor','finsorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','finsorting','N','idfin','finsorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','finsorting','N','idsor','finsorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','finsorting','N','idfin','finsorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','finvar','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','finvar','N','variationkind','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','finvar','N','yvar','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','finvar','N','idenactment','finvar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','finvar','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','finvar','N','nofficial','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','finvar','N','yvar','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','finvar','N','nvar','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','finvar','N','moneytransfer','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','finvar','N','flagprevision','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','finvar','N','flagsecondaryprev','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','finvar','N','flagcredit','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','finvar','N','flagproceeds','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','finvar','N','variationkind','finvar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','finvar','N','yvar','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','7','finvar','N','idenactment','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','finvar','S','flagprevision','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','finvar','S','idfinvarstatus','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','finvar','N','variationkind','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','finvar','N','flagprevision','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','finvar','N','idfinvarstatus','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','finvar','N','yvar','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','finvar','N','nvar','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','finvar','-','sys_incomefinphase','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','finvar','-','sys_expensefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','finvar','N','nofficial','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','finvar','S','moneytransfer','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','finvar','N','moneytransfer','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','finvar','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','finvar','N','flagprevision','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','finvar','N','flagsecondaryprev','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','finvar','N','flagcredit','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','finvar','N','flagproceeds','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','finvar','N','variationkind','finvar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','finvar','S','idenactment','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','finvar','S','flagcredit','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','finvar','S','flagprevision','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','finvar','S','flagproceeds','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','finvar','S','flagsecondaryprev','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','finvar','S','variationkind','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','finvar','N','idenactment','finvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','finvardetail','N','yvar','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','finvardetail','N','nvar','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','finvardetail','-','sys_esercizio','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','finvardetail','N','yvar','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','finvardetail','N','nvar','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','finvardetail','N','idfin','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','5','finvardetail','N','idupb','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','6','finvardetail','N','amount','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','7','finvardetail','-','sys_incomefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','8','finvardetail','-','sys_expensefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','9','finvardetail','N','idunderwriting','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','10','finvardetail','N','rownum','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','finvardetail','-','sys_esercizio','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','finvardetail','N','yvar','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','finvardetail','N','nvar','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','finvardetail','N','idfin','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','finvardetail','N','idupb','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','finvardetail','N','amount','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','finvardetail','-','sys_incomefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','8','finvardetail','-','sys_expensefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','9','finvardetail','N','idunderwriting','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','10','finvardetail','N','idlcard','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','finvardetail','N','yvar','finvardetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','finvardetail','N','nvar','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','finvardetail','S','amount','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','finvardetail','N','yvar','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','finvardetail','N','nvar','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','finvardetail','N','idfin','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','finvardetail','N','idupb','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','finvardetail','N','amount','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','finvardetail','N','idunderwriting','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','finvardetail','N','idlcard','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','finvardetail','N','rownum','finvardetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','finvardetail','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','finvardetail','-','sys_incomefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','finvardetail','S','amount','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','finvardetail','N','yvar','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','finvardetail','N','nvar','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','finvardetail','N','idfin','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','finvardetail','N','idupb','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','finvardetail','N','amount','finvardetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','finvardetail','-','sys_expensefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','finvardetail','N','idunderwriting','finvardetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','finyear','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','finyear','N','idfin','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','finyear','N','idupb','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','finyear','N','prevision','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','finyear','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','finyear','N','idfin','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','finyear','N','idupb','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','finyear','N','prevision','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','finyear','N','previousprevision','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','finyear','N','currentarrears','finyear')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','finyear','N','previousarrears','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','8','finyear','N','ayear','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','9','finyear','N','secondaryprev','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','finyear','N','currentarrears','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','finyear','N','previousarrears','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','finyear','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','finyear','S','prevision','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','finyear','N','idfin','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','finyear','N','idupb','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','finyear','N','prevision','finyear')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','finyear','N','ayear','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','finyear','S','previousprevision','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','finyear','N','previousprevision','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','finyear','S','currentarrears','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','finyear','N','currentarrears','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','finyear','S','previousarrears','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','finyear','N','previousarrears','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','finyear','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','finyear','-','sys_incomefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','finyear','S','prevision','finyear')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','finyear','N','prevision','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','finyear','N','idfin','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','finyear','N','idupb','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','finyear','-','sys_expensefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','finyear','S','secondaryprev','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','finyear','N','ayear','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','finyear','N','secondaryprev','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','finyear','N','currentarrears','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','finyear','N','previousarrears','finyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','flowchart','N','idflowchart','flowchart')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','flowchart','N','idflowchart','flowchart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','flowchart','-','sys_idcustomuser','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','flowchart','S','title','flowchart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','flowchart','S','printingorder','flowchart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','flowchart','S','idcity','flowchart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','flowchart','S','address','flowchart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','flowchart','S','phone','flowchart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','flowchart','S','fax','flowchart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','flowchart','N','idflowchart','flowchart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','flowchart','N','title','flowchart')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','flowchart','N','printingorder','flowchart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','flowchart','N','idcity','flowchart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','flowchart','N','location','flowchart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','flowchart','N','address','flowchart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','flowchart','N','phone','flowchart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','15','flowchart','N','fax','flowchart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','flowchartfin','-','sys_idcustomuser','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','flowchartfin','N','idflowchart','flowchartfin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','flowchartfin','-','sys_idcustomuser','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','flowchartfin','N','idflowchart','flowchartfin')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','flowchartfin','N','idfin','flowchartfin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','flowchartmanager','-','sys_idcustomuser','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','flowchartmanager','N','idflowchart','flowchartmanager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','flowchartmanager','-','sys_idcustomuser','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','flowchartmanager','N','idflowchart','flowchartmanager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','flowchartmanager','N','idman','flowchartmanager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','flowchartrestrictedfunction','-','sys_idcustomuser','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','flowchartrestrictedfunction','N','idrestrictedfunction','flowchartrestrictedfunction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','flowchartupb','-','sys_idcustomuser','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','flowchartupb','N','idflowchart','flowchartupb')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','flowchartupb','-','sys_idcustomuser','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','flowchartupb','N','idflowchart','flowchartupb')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','flowchartupb','N','idupb','flowchartupb')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','flowchartuser','-','sys_idcustomuser','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','flowchartuser','N','idflowchart','flowchartuser')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','flowchartuser','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','flowchartuser','N','idcustomuser','flowchartuser')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','flowchartuser','N','flagdefault','flowchartuser')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','flowchartuser','-','sys_idcustomuser','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','flowchartuser','N','idflowchart','flowchartuser')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','flowchartuser','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','flowchartuser','N','idcustomuser','flowchartuser')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','flowchartuser','N','idflowchart','flowchartuser')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','flowchartuser','N','flagdefault','flowchartuser')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','foreigncountry','N','idforeigncountry','foreigncountry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','foreigncountry','N','idforeigncountry','foreigncountry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','foreigncountry','N','description','foreigncountry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','foreigncountry','N','description','foreigncountry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','foreigncountry','N','idforeigncountry','foreigncountry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','foreigngroup','N','start','foreigngroup')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','foreigngroup','N','foreigngroupnumber','foreigngroup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','income','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','income','-','sys_assessmentphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','3','income','N','nphase','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','4','income','N','idinc','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','income','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','income','N','idinc','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','income','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','income','N','nphase','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','income','N','idinc','income')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','income','N','idman','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','income','-','sys_incomeregphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','income','N','idreg','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','income','N','parentidinc','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','8','income','N','adate','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','9','income','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','10','income','-','sys_assessmentphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','11','income','-','sys_maxincomephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','12','income','N','nmov','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','income','N','idreg','income')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','income','-','sys_incomeregphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','income','N','nphase','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','income','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','income','N','ymov','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','income','N','doc','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','7','income','N','docdate','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','8','income','N','idpayment','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','9','income','N','autokind','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','10','income','N','parentidinc','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','income','-','sys_esercizio','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','income','N','nphase','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','income','N','idinc','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','income','S','idman','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','income','N','idman','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','income','-','sys_incomeregphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','income','S','idreg','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','income','N','idreg','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','income','N','parentidinc','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','income','S','adate','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','income','N','adate','income')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','income','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','13','income','-','sys_assessmentphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','income','N','idreg','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','income','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','income','S','adate','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','income','S','expiration','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','income','N','adate','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','income','N','expiration','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','income','-','sys_incomeregphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','income','N','nphase','income')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','income','-','sys_maxincomephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','income','S','idreg','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','income','S','description','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','income','N','description','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','income','N','idinc','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','income','N','doc','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','15','income','N','docdate','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','16','income','S','idman','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','17','income','N','idman','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','18','income','S','cupcode','income')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','19','income','N','cupcode','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','incomeestimate','N','idinc','incomeestimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','incomeestimate','N','idestimkind','incomeestimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','incomeestimate','N','yestim','incomeestimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','incomeestimate','N','nestim','incomeestimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','incomeestimate','N','idinc','incomeestimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','incomeestimate','N','idinc','incomeestimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','incomeestimate','N','idinc','incomeestimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','incomeestimate','N','idestimkind','incomeestimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','incomeestimate','N','nestim','incomeestimate')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','incomeestimate','N','yestim','incomeestimate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','incomeinvoice','N','yinv','incomeinvoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','incomeinvoice','N','ninv','incomeinvoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','incomeinvoice','N','idinvkind','incomeinvoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','incomeinvoice','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','incomeinvoice','N','movkind','incomeinvoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','incomeinvoice','N','idinc','incomeinvoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','incomeinvoice','N','idinc','incomeinvoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','incomeinvoice','N','idinvkind','incomeinvoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','incomeinvoice','N','ninv','incomeinvoice')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','incomeinvoice','N','yinv','incomeinvoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','incomelast','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','incomelast','N','kpro','incomelast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','incomelast','N','idinc','incomelast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','incomelast','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','incomelast','N','nbill','incomelast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','incomelast','N','idinc','incomelast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','incomelast','N','kpro','incomelast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','incomelast','N','ypro','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','incomelast','-','sys_esercizio','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','incomelast','N','nbill','incomelast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','incomelast','N','kpro','incomelast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','incomelast','N','flag','incomelast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','incomelast','S','kpro','incomelast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','incomelast','N','idinc','incomelast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','incomelast','N','ypro','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','incomelast','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','incomelast','S','kpro','incomelast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','incomelast','N','idinc','incomelast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','incomelast','N','kpro','incomelast')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','incomelast','S','idacccredit','incomelast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','incomelast','N','idacccredit','incomelast')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','incomelinkedpayment','N','idexp','incomelinkedpayment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','incomelinkedpayment','N','idexp','incomelinkedpayment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','incomelinkedproceeds','N','idinc','incomelinkedproceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','incomelinkedproceeds','N','idinc','incomelinkedproceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','incomephase','N','nphase','incomephase')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','incomephase','N','description','incomephase')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','incomephase','N','nphase','incomephase')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','incomephase','N','description','incomephase')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','incomesetup','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','incomesetup','S','incomephase','incomesetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','incomesetup','N','incomephase','incomesetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','incomesorted','N','idsor','incomesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','incomesorted','N','ayear','incomesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','3','incomesorted','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','4','incomesorted','N','idinc','incomesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','incomesorted','N','idinc','incomesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','incomesorted','N','idsor','incomesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','incomesorted','N','idsor','incomesorted')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','incomesorted','N','ayear','incomesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','incomesorted','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','incomesorted','N','idinc','incomesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','incomesorted','N','idinc','incomesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','incomesorted','N','idsor','incomesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','incomesorted','N','idsor','incomesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','incomesorted','N','ayear','incomesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','incomesorted','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','incomesorted','N','idinc','incomesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','incomesorted','S','amount','incomesorted')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','incomesorted','N','amount','incomesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','incomesorted','S','idinc','incomesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','incomesorted','S','amount','incomesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','incomesorted','N','idinc','incomesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','incomesorted','N','amount','incomesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','incomesorted','N','idsor','incomesorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','incomevar','-','sys_maxincomephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','incomevar','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','3','incomevar','N','idinc','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','4','incomevar','S','amount','incomevar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','5','incomevar','N','yvar','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','6','incomevar','N','amount','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','7','incomevar','N','nvar','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','8','incomevar','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','9','incomevar','-','sys_assessmentphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','incomevar','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','incomevar','-','sys_incomefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','incomevar','N','idinc','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','incomevar','N','yvar','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','5','incomevar','N','amount','incomevar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','6','incomevar','N','autokind','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','7','incomevar','N','nvar','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','8','incomevar','-','sys_maxincomephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','9','incomevar','N','kproceedstransmission','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','incomevar','-','sys_maxincomephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','incomevar','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','incomevar','N','idinc','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','incomevar','-','sys_incomefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','incomevar','N','yvar','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','incomevar','N','amount','incomevar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','incomevar','N','idinvkind','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','8','incomevar','N','yinv','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','9','incomevar','N','ninv','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','10','incomevar','N','autokind','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','11','incomevar','N','movkind','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','12','incomevar','N','nvar','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','13','incomevar','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','14','incomevar','-','sys_assessmentphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','incomevar','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','incomevar','N','idinvkind','incomevar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','incomevar','N','movkind','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','incomevar','N','autokind','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','incomevar','N','amount','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','incomevar','N','idinc','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','7','incomevar','N','yvar','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','8','incomevar','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','incomevar','-','sys_maxincomephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','incomevar','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','incomevar','S','amount','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','incomevar','N','idinc','incomevar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','incomevar','N','amount','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','incomevar','N','idinvkind','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','incomevar','N','ninv','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','incomevar','N','yinv','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','incomevar','S','autokind','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','incomevar','N','autokind','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','incomevar','N','movkind','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','incomevar','N','yvar','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','13','incomevar','N','nvar','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','14','incomevar','N','kproceedstransmission','incomevar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','15','incomevar','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','16','incomevar','-','sys_assessmentphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','incomevar','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','incomevar','-','sys_incomefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','incomevar','S','amount','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','incomevar','N','idinc','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','incomevar','N','yvar','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','incomevar','N','amount','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','incomevar','S','autokind','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','incomevar','N','idinvkind','incomevar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','incomevar','N','autokind','incomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','incomevar','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','incomeyear','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','incomeyear','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','incomeyear','N','idfin','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','incomeyear','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','incomeyear','N','idinc','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','incomeyear','-','sys_incomefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','incomeyear','N','idfin','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','incomeyear','N','idupb','incomeyear')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','incomeyear','N','ayear','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','incomeyear','N','amount','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','incomeyear','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','incomeyear','N','idfin','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','incomeyear','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','incomeyear','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','incomeyear','S','amount','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','incomeyear','N','idinc','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','incomeyear','N','amount','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','incomeyear','N','ayear','incomeyear')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','incomeyear','S','idfin','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','incomeyear','N','idfin','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','incomeyear','S','idupb','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','incomeyear','N','idupb','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','incomeyear','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','incomeyear','-','sys_assessmentphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','incomeyear','N','nphase','income')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','incomeyear','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','incomeyear','-','sys_incomefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','incomeyear','S','amount','incomeyear')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','incomeyear','S','idfin','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','incomeyear','S','idupb','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','incomeyear','N','idfin','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','incomeyear','N','idupb','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','incomeyear','N','idinc','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','incomeyear','N','amount','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','incomeyear','-','sys_maxincomephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','incomeyear','N','ayear','incomeyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','incomeyear','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','inventory','N','idinventory','inventory')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','inventory','N','codeinventory','inventory')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','inventory','N','description','inventory')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','inventory','N','startnumber','inventory')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','inventory','N','idinventory','inventory')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','inventory','N','description','inventory')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','inventoryagency','N','idinventoryagency','inventoryagency')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','inventoryagency','N','idinventoryagency','inventoryagency')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','inventoryagency','N','description','inventoryagency')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','inventoryagency','N','idinventoryagency','inventoryagency')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','inventoryagency','N','description','inventoryagency')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','inventoryamortization','N','idinventoryamortization','inventoryamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','inventoryamortization','N','idinventoryamortization','inventoryamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','inventoryamortization','N','description','inventoryamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','inventoryamortization','N','idinventoryamortization','inventoryamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','inventoryamortization','N','description','inventoryamortization')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','inventorykind','N','idinventorykind','inventorykind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','inventorykind','N','idinventorykind','inventorykind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','inventorykind','N','description','inventorykind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','inventorykind','N','idinventorykind','inventorykind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','inventorykind','N','description','inventorykind')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','inventorysortinglevel','N','nlevel','inventorysortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','inventorysortinglevel','N','description','inventorysortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','inventorysortinglevel','N','flag','inventorysortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','inventorysortinglevel','N','nlevel','inventorysortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','inventorysortinglevel','N','nlevel','inventorysortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','inventorysortinglevel','N','description','inventorysortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','inventorysortinglevel','N','flag','inventorysortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','inventorysortinglevel','N','codelen','inventorysortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','inventorytree','N','idinv','inventorytree')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','inventorytree','N','codeinv','inventorytree')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','inventorytree','N','paridinv','inventorytree')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','invoice','N','flagdeferred','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','invoice','N','idinvkind','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','invoice','N','yinv','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','invoice','N','ninv','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','invoice','N','idinvkind','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','invoice','N','yinv','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','invoice','N','ninv','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','invoice','N','idinvkind_real','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','invoice','N','active','invoice')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','invoice','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','invoice','N','flag','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','8','invoice','N','idblacklist','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','9','invoice','N','yinv_real','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','10','invoice','N','ninv_real','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','11','invoice','N','adate','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','12','invoice','N','idreg','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','13','invoice','N','flagdeferred','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','14','invoice','N','flagintracom','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','invoice','N','idinvkind','invoice')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','invoice','N','yinv','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','invoice','N','adate','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','invoice','N','ninv','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','invoice','N','flagdeferred','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','invoice','N','idreg','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','7','invoice','N','doc','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','8','invoice','N','docdate','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','9','invoice','N','flagintracom','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','10','invoice','N','idtreasurer','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','invoice','S','exchangerate','invoice')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','invoice','N','idinvkind','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','invoice','N','ninv','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','invoice','N','yinv','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','invoice','N','exchangerate','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','invoice','N','adate','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','invoice','S','idcurrency','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','invoice','N','idcurrency','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','invoice','N','flagintracom','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','invoice','S','active','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','invoice','N','active','invoice')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','invoice','S','flag','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','13','invoice','S','idreg','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','14','invoice','S','adate','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','15','invoice','S','idblacklist','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','16','invoice','N','flag','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','17','invoice','N','idreg','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','18','invoice','N','idblacklist','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','19','invoice','N','autoinvoice','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','20','invoice','N','idinvkind_real','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','21','invoice','N','yinv_real','invoice')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','22','invoice','N','ninv_real','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','23','invoice','N','flagdeferred','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','24','invoice','S','idtreasurer','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','25','invoice','N','idtreasurer','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','invoice','S','flagdeferred','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','invoice','N','idinvkind','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','invoice','N','yinv','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','invoice','N','ninv','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','invoice','N','flagdeferred','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','invoice','N','adate','invoice')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','invoice','S','exchangerate','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','invoice','S','idreg','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','invoice','S','description','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','invoice','S','doc','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','invoice','N','exchangerate','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','invoice','N','idreg','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','invoice','N','description','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','invoice','N','doc','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','15','invoice','N','idinvkind','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','16','invoice','N','yinv','invoicedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','17','invoice','N','ninv','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','18','invoice','S','docdate','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','19','invoice','N','docdate','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','20','invoice','S','adate','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','21','invoice','N','flagintracom','invoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','invoicedetail','N','idinvkind','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','invoicedetail','N','ninv','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','3','invoicedetail','N','yinv','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','4','invoicedetail','N','idinc_iva','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','5','invoicedetail','N','idinc_taxable','invoicedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','6','invoicedetail','N','idexp_iva','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','7','invoicedetail','N','idexp_taxable','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','invoicedetail','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','invoicedetail','S','idexp_taxable','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','invoicedetail','N','idinvkind','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','invoicedetail','S','idexp_iva','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','5','invoicedetail','S','idinc_taxable','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','6','invoicedetail','S','idinc_iva','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','invoicedetail','N','idmankind','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','invoicedetail','N','yman','invoicedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','invoicedetail','N','nman','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','invoicedetail','N','manrownum','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','invoicedetail','N','idestimkind','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','invoicedetail','N','estimrownum','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','invoicedetail','N','yestim','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','8','invoicedetail','N','nestim','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','9','invoicedetail','N','idinvkind','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','10','invoicedetail','N','yinv','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','11','invoicedetail','N','ninv','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','12','invoicedetail','N','idgroup','invoicedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','13','invoicedetail','N','tax','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','14','invoicedetail','N','unabatable','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','15','invoicedetail','N','number','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','16','invoicedetail','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','17','invoicedetail','N','idexp_iva','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','18','invoicedetail','N','idexp_taxable','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','19','invoicedetail','N','idinc_iva','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','20','invoicedetail','N','idinc_taxable','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','21','invoicedetail','N','flag','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','22','invoicedetail','N','idivakind','invoicedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','23','invoicedetail','N','intra12operationkind','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','24','invoicedetail','N','intrastatoperationkind','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','25','invoicedetail','N','idlist','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','26','invoicedetail','N','npackage','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','27','invoicedetail','N','taxable','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','invoicedetail','N','idmankind','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','invoicedetail','N','manrownum','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','invoicedetail','N','yman','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','invoicedetail','N','nman','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','invoicedetail','N','competencystart','invoicedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','invoicedetail','N','competencystop','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','7','invoicedetail','N','idinvkind','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','8','invoicedetail','N','yinv','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','9','invoicedetail','N','ninv','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','10','invoicedetail','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','11','invoicedetail','N','va3type','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','12','invoicedetail','N','idivakind','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','invoicedetail','S','tax','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','invoicedetail','S','unabatable','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','invoicedetail','S','number','invoicedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','invoicedetail','N','idmankind','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','invoicedetail','N','tax','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','invoicedetail','N','unabatable','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','invoicedetail','N','number','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','invoicedetail','N','yman','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','invoicedetail','N','nman','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','invoicedetail','N','manrownum','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','invoicedetail','N','idinvkind','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','invoicedetail','N','ninv','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','13','invoicedetail','N','yinv','invoicedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','14','invoicedetail','N','idestimkind','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','15','invoicedetail','N','estimrownum','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','16','invoicedetail','N','yestim','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','17','invoicedetail','N','nestim','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','18','invoicedetail','S','taxable','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','19','invoicedetail','S','idivakind','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','20','invoicedetail','N','taxable','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','21','invoicedetail','N','idivakind','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','22','invoicedetail','N','idgroup','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','23','invoicedetail','S','idexp_taxable','invoicedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','24','invoicedetail','S','idexp_iva','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','25','invoicedetail','N','idexp_taxable','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','26','invoicedetail','N','idexp_iva','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','27','invoicedetail','S','idinc_taxable','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','28','invoicedetail','S','idinc_iva','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','29','invoicedetail','N','idinc_taxable','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','30','invoicedetail','N','idinc_iva','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','31','invoicedetail','-','sys_mandatephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','32','invoicedetail','-','sys_estimatephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','33','invoicedetail','-','sys_esercizio','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','34','invoicedetail','S','flag','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','35','invoicedetail','N','flag','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','36','invoicedetail','S','idlist','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','37','invoicedetail','N','idlist','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','invoicedetail','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','invoicedetail','N','va3type','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','invoicedetail','N','idinvkind','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','invoicedetail','N','idivakind','invoicedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','invoicekind','N','idinvkind','invoicekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','invoicekind','N','codeinvkind','invoicekind')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','invoicekind','N','description','invoicekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','invoicekind','N','idinvkind_auto','invoicekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','invoicekind','N','idinvkind','invoicekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','invoicekind','N','idinvkind','invoicekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','invoicekind','N','description','invoicekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','invoicekindregisterkind','N','idinvkind','invoicekindregisterkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','invoicekindregisterkind','N','idivaregisterkind','invoicekindregisterkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','invoicekindregisterkind','N','idinvkind','invoicekindregisterkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','itineration','N','yitineration','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','itineration','N','nitineration','itineration')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','itineration','N','iditineration','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','itineration','N','nitineration','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','itineration','N','idreg','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','itineration','N','iditineration','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','itineration','N','stop','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','itineration','N','start','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','itineration','N','completed','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','itineration','N','iditinerationstatus','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','8','itineration','-','sys_datacontabile','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','9','itineration','N','flagweb','itineration')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','itineration','S','start','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','itineration','S','stop','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','itineration','N','start','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','itineration','N','stop','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','itineration','N','idreg','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','itineration','N','iditineration','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','itineration','N','flagweb','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','itineration','N','iditinerationstatus','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','itineration','N','idauthmodel','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','itineration','N','totalgross','itineration')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','itineration','N','applierannotations','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','itineration','N','completed','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','13','itineration','-','sys_datacontabile','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','itineration','S','idreg','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','itineration','N','iditineration','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','itineration','N','idreg','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','itineration','S','idser','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','itineration','S','adate','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','itineration','N','idser','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','itineration','N','adate','itineration')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','itineration','N','totadvance','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','itineration','N','totalgross','itineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','itinerationlap','N','iditineration','itinerationlap')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','itinerationlap','N','starttime','itinerationlap')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','itinerationlap','N','stoptime','itinerationlap')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','itinerationlap','N','advancepercentage','itinerationlap')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','itinerationlap','N','flagitalian','itinerationlap')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','itinerationlap','N','idforeigncountry','itinerationlap')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','itinerationlap','N','allowance','itinerationlap')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','itinerationlap','S','starttime','itinerationlap')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','itinerationlap','S','stoptime','itinerationlap')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','itinerationlap','N','starttime','itinerationlap')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','itinerationlap','N','stoptime','itinerationlap')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','itinerationlap','N','iditineration','itinerationlap')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','itinerationlap','S','days','itinerationlap')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','itinerationlap','N','days','itinerationlap')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','itinerationlap','S','advancepercentage','itinerationlap')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','itinerationlap','N','advancepercentage','itinerationlap')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','itinerationlap','N','flagitalian','itinerationlap')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','itinerationlap','N','idforeigncountry','itinerationlap')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','itinerationlap','S','allowance','itinerationlap')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','13','itinerationlap','N','allowance','itinerationlap')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','itinerationparameter','N','start','itinerationparameter')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','itinerationrefund','N','flagadvancebalance','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','itinerationrefund','N','iditineration','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','itinerationrefund','N','flag_geo','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','itinerationrefund','N','iditinerationrefundkind','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','itinerationrefund','N','iditineration','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','itinerationrefund','N','starttime','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','itinerationrefund','N','nrefund','itinerationrefund')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','itinerationrefund','N','stoptime','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','itinerationrefund','N','advancepercentage','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','8','itinerationrefund','N','flagadvancebalance','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','9','itinerationrefund','N','amount','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','10','itinerationrefund','N','idforeigncountry','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','itinerationrefund','S','iditinerationrefundkind','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','itinerationrefund','S','flag_geo','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','itinerationrefund','N','iditinerationrefundkind','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','itinerationrefund','N','flag_geo','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','itinerationrefund','N','iditineration','itinerationrefund')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','itinerationrefund','N','starttime','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','itinerationrefund','N','nrefund','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','itinerationrefund','N','stoptime','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','itinerationrefund','S','advancepercentage','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','itinerationrefund','N','advancepercentage','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','itinerationrefund','S','amount','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','itinerationrefund','N','amount','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','13','itinerationrefund','N','flagadvancebalance','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','14','itinerationrefund','S','starttime','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','15','itinerationrefund','S','stoptime','itinerationrefund')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','16','itinerationrefund','N','idforeigncountry','itinerationrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','itinerationrefundkind','N','iditinerationrefundkind','itinerationrefundkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','itinerationrefundkind','N','iditinerationrefundkind','itinerationrefundkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','itinerationrefundkind','N','description','itinerationrefundkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','itinerationrefundkind','N','codeitinerationrefundkind','itinerationrefundkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','itinerationrefundkind','N','description','itinerationrefundkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','itinerationrefundkind','N','iditinerationrefundkind','itinerationrefundkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','ivakind','N','idivakind','ivakind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','ivakind','N','codeivakind','ivakind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','ivakind','N','description','ivakind')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','ivakind','N','idivakind','ivakind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','ivakind','N','description','ivakind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','ivaoperation','N','idinvoiceoperation','ivaoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','ivaoperation','N','idinvoiceoperation','ivaoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','ivaoperation','N','description','ivaoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','ivaoperation','N','idinvoiceoperation','ivaoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','ivaoperation','N','description','ivaoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','ivapay','N','yivapay','ivapay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','ivapay','N','nivapay','ivapay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','ivapay','N','stop','ivapay')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','ivapay','N','flag','ivapay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','ivapay','N','start','ivapay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','ivapay','N','stop','ivapay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','ivapay','N','flag','ivapay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','ivapay','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','ivapayperiodicity','N','idivapayperiodicity','ivapayperiodicity')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','ivapayperiodicity','N','description','ivapayperiodicity')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','ivapayperiodicity','N','idivapayperiodicity','ivapayperiodicity')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','ivapayperiodicity','N','description','ivapayperiodicity')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','ivaregister','N','idivaregisterkind','ivaregister')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','ivaregister','N','yivaregister','ivaregister')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','3','ivaregister','N','nivaregister','ivaregister')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','ivaregister','N','idivaregisterkind','ivaregister')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','ivaregister','N','yivaregister','ivaregister')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','ivaregister','N','nivaregister','ivaregister')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','ivaregisterkind','N','idivaregisterkind','ivaregisterkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','ivaregisterkind','N','codeivaregisterkind','ivaregisterkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','ivaregisterkind','N','description','ivaregisterkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','ivaregisterkind','N','idivaregisterkind','ivaregisterkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','ivaregisterkind','N','description','ivaregisterkind')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','lcard','N','idlcard','lcard')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','lcardvar','N','yvar','lcardvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','lcardvar','N','nvar','lcardvar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','linkedexpense','N','idlinkedexpense','linkedexpense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','linkedexpense','N','idlinkedexpense','linkedexpense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','linkedexpense','N','description','linkedexpense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','linkedincome','N','idlinkedincome','linkedincome')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','linkedincome','N','idlinkedincome','linkedincome')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','linkedincome','N','description','linkedincome')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','list','N','idlist','list')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','list','N','idlistclass','list')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','list','S','unitsforpackage','list')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','list','N','unitsforpackage','list')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','list','N','idlist','list')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','list','S','idlistclass','list')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','list','N','idlistclass','list')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','listclass','N','idlistclass','listclass')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','listclass','N','codelistclass','listclass')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','location','N','idlocation','location')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','location','N','locationcode','location')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','location','N','paridlocation','location')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','location','S','idman','location')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','location','N','idman','location')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','location','N','idlocation','location')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','locationlevel','N','nlevel','locationlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','locationlevel','N','flag','locationlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','locationlevel','N','nlevel','locationlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','locationlevel','N','description','locationlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','locationlevel','N','nlevel','locationlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','locationlevel','N','description','locationlevel')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','locationlevel','N','flag','locationlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','locationlevel','N','codelen','locationlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','mainivapay','N','ymainivapay','mainivapay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','mainivapay','N','nmainivapay','mainivapay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','mainivapay','N','referenceyear','mainivapay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','mainivapay','N','nmonth','mainivapay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','5','mainivapay','N','flag','mainivapay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','mainivapay','N','nmonth','mainivapay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','mainivapay','N','ymainivapay','mainivapay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','mainivapay','N','flag','mainivapay')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','mainivapay','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','maintenance','N','idasset','maintenance')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','maintenance','N','idpiece','maintenance')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','maintenancekind','N','idmaintenancekind','maintenancekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','maintenancekind','N','idmaintenancekind','maintenancekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','maintenancekind','N','description','maintenancekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','maintenancekind','N','idmaintenancekind','maintenancekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','maintenancekind','N','description','maintenancekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','manager','N','idman','manager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','manager','N','userweb','manager')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','manager','N','idman','manager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','manager','N','title','manager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','manager','N','userweb','manager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','manager','N','idman','manager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','manager','N','title','manager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','mandate','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','mandate','N','idmankind','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','mandate','N','yman','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','mandate','N','nman','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','mandate','N','idstore','mandate')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','mandate','N','idmankind','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','mandate','N','yman','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','mandate','N','nman','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','mandate','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','mandate','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','mandate','-','sys_datacontabile','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','mandate','N','idreg','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','mandate','N','idmankind','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','mandate','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','mandate','S','idcurrency','mandate')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','mandate','N','idcurrency','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','mandate','N','idmankind','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','mandate','N','yman','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','mandate','N','nman','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','mandate','N','flagintracom','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','mandate','N','idstore','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','mandate','S','idstore','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','mandate','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','mandate','S','idreg','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','mandate','N','idmankind','mandate')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','mandate','N','yman','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','mandate','N','nman','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','mandate','N','idreg','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','mandate','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','mandatedetail','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','mandatedetail','N','idexp_iva','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','3','mandatedetail','N','idexp_taxable','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','4','mandatedetail','N','idmankind','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','5','mandatedetail','N','yman','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','6','mandatedetail','N','nman','mandatedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','7','mandatedetail','N','idgroup','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','mandatedetail','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','mandatedetail','N','idmankind','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','mandatedetail','N','yman','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','mandatedetail','N','nman','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','5','mandatedetail','N','idlist','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','6','mandatedetail','N','idmankind','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','7','mandatedetail','N','yman','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','8','mandatedetail','N','nman','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','9','mandatedetail','N','rownum','mandatedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','mandatedetail','N','idmankind','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','mandatedetail','N','yman','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','mandatedetail','N','nman','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','mandatedetail','N','tax','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','mandatedetail','N','npackage','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','mandatedetail','N','idinv','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','mandatedetail','N','number','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','8','mandatedetail','N','idlist','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','9','mandatedetail','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','10','mandatedetail','N','idexp_iva','mandatedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','11','mandatedetail','N','idexp_taxable','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','12','mandatedetail','N','idreg','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','13','mandatedetail','N','idgroup','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','14','mandatedetail','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','15','mandatedetail','N','idmankind','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','16','mandatedetail','N','yman','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','17','mandatedetail','N','nman','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','mandatedetail','-','sys_datacontabile','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','mandatedetail','N','idreg','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','mandatedetail','N','idmankind','mandatedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','mandatedetail','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','mandatedetail','N','va3type','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','mandatedetail','N','idivakind','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','7','mandatedetail','N','assetkind','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','8','mandatedetail','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','9','mandatedetail','N','idlist','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','mandatedetail','S','number','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','mandatedetail','N','idmankind','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','mandatedetail','N','yman','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','mandatedetail','N','nman','mandatedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','mandatedetail','N','idgroup','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','mandatedetail','N','number','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','mandatedetail','N','assetkind','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','mandatedetail','S','taxable','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','mandatedetail','N','taxable','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','mandatedetail','N','idmankind','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','mandatedetail','N','yman','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','mandatedetail','N','nman','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','13','mandatedetail','N','rownum','assetacquire')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','14','mandatedetail','S','tax','mandatedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','15','mandatedetail','N','tax','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','16','mandatedetail','S','idlist','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','17','mandatedetail','N','idlist','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','18','mandatedetail','N','idinv','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','19','mandatedetail','N','npackage','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','20','mandatedetail','S','cupcode','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','21','mandatedetail','N','cupcode','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','22','mandatedetail','N','idexp_iva','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','23','mandatedetail','N','idexp_taxable','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','24','mandatedetail','-','sys_esercizio','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','25','mandatedetail','S','idexp_taxable','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','26','mandatedetail','S','idexp_iva','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','27','mandatedetail','N','idreg','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','28','mandatedetail','S','taxrate','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','29','mandatedetail','S','discount','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','30','mandatedetail','S','idupb','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','31','mandatedetail','S','idreg','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','32','mandatedetail','S','start','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','33','mandatedetail','S','stop','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','34','mandatedetail','N','taxrate','mandatedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','35','mandatedetail','N','discount','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','36','mandatedetail','N','idupb','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','37','mandatedetail','N','start','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','38','mandatedetail','N','stop','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','39','mandatedetail','N','rownum','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','40','mandatedetail','S','idaccmotive','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','41','mandatedetail','N','idaccmotive','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','42','mandatedetail','S','idaccmotiveannulment','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','43','mandatedetail','N','idaccmotiveannulment','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','44','mandatedetail','-','sys_idflowchart','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','45','mandatedetail','N','idmankind','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','46','mandatedetail','N','yman','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','47','mandatedetail','N','nman','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','mandatedetail','S','idinv','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','mandatedetail','N','idmankind','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','mandatedetail','N','yman','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','mandatedetail','N','nman','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','mandatedetail','N','idgroup','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','mandatedetail','N','idinv','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','mandatedetail','N','assetkind','mandatedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','mandatedetail','N','stop','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','mandatedetail','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','mandatedetail','N','va3type','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','mandatedetail','N','idivakind','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','mandatedetail','S','number','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','mandatedetail','S','taxable','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','mandatedetail','S','taxrate','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','15','mandatedetail','S','discount','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','16','mandatedetail','S','idupb','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','17','mandatedetail','S','idreg','mandatedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','18','mandatedetail','S','idexp_iva','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','19','mandatedetail','S','idexp_taxable','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','20','mandatedetail','N','number','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','21','mandatedetail','N','taxable','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','22','mandatedetail','N','taxrate','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','23','mandatedetail','N','discount','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','24','mandatedetail','N','idupb','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','25','mandatedetail','N','idreg','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','26','mandatedetail','N','idexp_iva','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','27','mandatedetail','N','idexp_taxable','mandatedetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','28','mandatedetail','N','rownum','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','29','mandatedetail','S','flagmixed','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','30','mandatedetail','N','flagmixed','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','31','mandatedetail','S','assetkind','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','32','mandatedetail','S','stop','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','33','mandatedetail','S','start','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','34','mandatedetail','N','start','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','35','mandatedetail','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','36','mandatedetail','N','idmankind','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','37','mandatedetail','N','yman','mandate')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','38','mandatedetail','N','nman','mandate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','39','mandatedetail','S','idlist','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','40','mandatedetail','N','idlist','mandatedetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','mandatekind','N','idmankind','mandatekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','mandatekind','N','description','mandatekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','mandatekind','N','idmankind','mandatekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','mandatekind','N','description','mandatekind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','maritalstatus','N','idmaritalstatus','maritalstatus')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','maritalstatus','N','description','maritalstatus')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','maritalstatus','N','idmaritalstatus','maritalstatus')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','maritalstatus','N','description','maritalstatus')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','moneytransfer','N','adate','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','moneytransfer','N','nproceedspart','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','moneytransfer','N','yproceedspart','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','moneytransfer','N','nvar','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','moneytransfer','N','yvar','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','moneytransfer','N','rownum','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','moneytransfer','N','nproceedspart','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','moneytransfer','N','idtreasurersource','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','moneytransfer','N','yproceedspart','moneytransfer')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','moneytransfer','N','idtreasurerdest','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','moneytransfer','N','nproceedspart','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','moneytransfer','N','yproceedspart','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','moneytransfer','N','nvar','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','moneytransfer','N','yvar','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','moneytransfer','N','rownum','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','moneytransfer','S','amount','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','moneytransfer','N','amount','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','moneytransfer','N','adate','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','moneytransfer','S','amount','moneytransfer')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','moneytransfer','N','amount','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','moneytransfer','N','yproceedspart','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','moneytransfer','N','yvar','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','moneytransfer','N','nproceedspart','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','moneytransfer','N','nvar','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','moneytransfer','N','rownum','moneytransfer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','mulfin','N','idfin','mulfin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','mulfin','N','paridfin','mulfin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','mulfin','N','prevision','mulfin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','mulfin','N','prevision1','mulfin')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','mulfin','N','prevision2','mulfin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','mulfin','N','prevision3','mulfin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','mulfin','N','prevision4','mulfin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','7','mulfin','N','prevision5','mulfin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','8','mulfin','N','ayear','mulfin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','9','mulfin','N','finpart','mulfin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','10','mulfin','N','codefin','mulfin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','11','mulfin','N','printingorder','mulfin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','mulfin','N','ayear','mulfin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','mulfin','N','finpart','mulfin')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','mulfin','N','printingorder','mulfin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','mulfin','N','idfin','mulfin')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','mulfinlevel','N','ayear','mulfinlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','mulfinlevel','N','nlevel','mulfinlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','mulfinlevel','N','ayear','mulfinlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','mulfinlevel','N','description','mulfinlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','mulfinlevel','N','flagusable','mulfinlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','mulfinlevel','N','nlevel','mulfinlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','mulfinlevel','N','ayear','mulfinlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','mulfinlevel','N','nlevel','mulfinlevel')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','mulfinlevel','N','description','mulfinlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','mulfinlevel','N','flagusable','mulfinlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','mulfinlevel','N','flagrestart','mulfinlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','mulfinlevel','N','codelen','mulfinlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','mulfinlevel','N','codekind','mulfinlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','mulfinlookup','N','oldidfin','mulfinlookup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','package','N','idpackage','package')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','parasubcontract','N','idcon','parasubcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','parasubcontract','N','ncon','parasubcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','parasubcontract','N','ycon','parasubcontract')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','parasubcontract','N','start','parasubcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','parasubcontract','N','idreg','parasubcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','parasubcontract','N','idser','parasubcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','parasubcontract','N','stop','parasubcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','parasubcontract','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','parasubcontract','N','idcon','parasubcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','parasubcontract','N','idreg','parasubcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','parasubcontract','S','idreg','parasubcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','parasubcontract','N','idcon','parasubcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','parasubcontract','N','idreg','parasubcontract')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','parasubcontract','-','sys_maxexpensephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','parasubcontract','S','idser','parasubcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','parasubcontract','N','idser','parasubcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','parasubcontract','N','start','parasubcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','parasubcontract','N','ycon','parasubcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','parasubcontract','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','parasubcontract','N','stop','parasubcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','parasubcontract','S','grossamount','parasubcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','parasubcontract','N','grossamount','parasubcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','parasubcontract','S','start','parasubcontract')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','parasubcontract','S','stop','parasubcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','parasubcontractyear','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','parasubcontractyear','N','applybrackets','parasubcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','parasubcontractyear','N','highertax','parasubcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','parasubcontractyear','N','idcon','parasubcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','parasubcontractyear','N','ayear','parasubcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','parasubcontractyear','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','parasubcontractyear','N','highertax','parasubcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','parasubcontractyear','N','applybrackets','parasubcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','parasubcontractyear','N','idcon','parasubcontractyear')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','parasubcontractyear','N','taxablepension','parasubcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','parasubcontractyear','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','parasubcontractyear','N','applybrackets','parasubcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','parasubcontractyear','N','highertax','parasubcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','parasubcontractyear','N','idcon','parasubcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','parasubcontractyear','N','ayear','parasubcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','parasubcontractyear','S','highertax','parasubcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','parasubcontractyear','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','parasubcontractyear','S','highertax','parasubcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','parasubcontractyear','N','highertax','parasubcontractyear')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','parasubcontractyear','N','applybrackets','parasubcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','parasubcontractyear','N','idcon','parasubcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','parasubcontractyear','N','taxablepension','parasubcontractyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','partincomesetup','N','idfinincome','partincomesetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','partincomesetup','N','percentage','partincomesetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','partincomesetup','N','idfinexpense','partincomesetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','partincomesetup','N','idfinincome','partincomesetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','partincomesetup','N','percentage','partincomesetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','patrimony','N','idpatrimony','patrimony')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','patrimonylookup','N','oldidpatrimony','patrimonylookup')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','paydisposition','N','kpay','paydisposition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','paydisposition','N','idpaydisposition','paydisposition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','paydisposition','S','kpay','paydisposition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','paydisposition','N','kpay','paydisposition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','paydisposition','N','idpaydisposition','paydisposition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','paydispositiondetail','S','idpaydisposition','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','paydispositiondetail','N','idpaydisposition','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','paydispositiondetail','N','iban','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','paydispositiondetail','N','cin','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','paydispositiondetail','N','abi','paydispositiondetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','paydispositiondetail','N','cab','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','paydispositiondetail','N','cc','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','paydispositiondetail','N','title','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','8','paydispositiondetail','N','surname','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','9','paydispositiondetail','N','forename','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','10','paydispositiondetail','N','cf','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','11','paydispositiondetail','N','amount','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','paydispositiondetail','N','amount','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','paydispositiondetail','N','cf','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','paydispositiondetail','N','paymentcode','paydispositiondetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','paydispositiondetail','N','idpaydisposition','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','paydispositiondetail','N','iban','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','paydispositiondetail','N','cin','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','paydispositiondetail','N','abi','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','paydispositiondetail','N','cab','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','paydispositiondetail','N','cc','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','paydispositiondetail','N','title','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','paydispositiondetail','N','surname','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','paydispositiondetail','N','forename','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','paydispositiondetail','N','cf','paydispositiondetail')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','paydispositiondetail','N','amount','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','paydispositiondetail','N','amount','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','paydispositiondetail','S','paymentcode','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','paydispositiondetail','S','cf','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','paydispositiondetail','N','paymentcode','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','paydispositiondetail','N','cf','paydispositiondetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','payment','S','kpaymenttransmission','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','payment','N','kpay','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','3','payment','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','payment','-','sys_esercizio','sys')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','payment','N','kpaymenttransmission','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','payment','N','ypay','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','payment','N','npay','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','5','payment','S','kpaymenttransmission','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','6','payment','S','kpay','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','7','payment','N','kpay','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','payment','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','payment','N','adate','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','payment','N','ypay','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','payment','N','kpay','payment')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','payment','N','flag','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','payment','N','idtreasurer','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','payment','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','payment','N','ypay','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','payment','N','kpaymenttransmission','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','payment','N','kpay','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','payment','N','idtreasurer','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','payment','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','7','payment','N','printdate','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','payment','S','kpaymenttransmission','payment')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','payment','N','kpaymenttransmission','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','payment','N','kpay','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','payment','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','payment','N','adate','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','payment','N','npay','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','payment','N','ypay','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','payment','-','sys_datacontabile','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','payment','S','kpay','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','payment','N','idtreasurer','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','payment','S','idtreasurer','payment')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','payment','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','payment','S','kpaymenttransmission','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','payment','N','kpaymenttransmission','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','payment','S','annulmentdate','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','payment','N','annulmentdate','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','payment','N','kpay','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','payment','N','ypay','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','payment','S','idtreasurer','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','payment','N','idtreasurer','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','payment','S','adate','payment')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','payment','N','adate','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','payment','S','printdate','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','payment','N','printdate','payment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','payment','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','paymenttransmission','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','paymenttransmission','N','transmissiondate','paymenttransmission')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','paymenttransmission','N','kpaymenttransmission','paymenttransmission')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','paymenttransmission','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','paymenttransmission','N','transmissiondate','paymenttransmission')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','paymenttransmission','N','kpaymenttransmission','paymenttransmission')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','paymenttransmission','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','paymenttransmission','S','transmissiondate','paymenttransmission')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','paymenttransmission','N','kpaymenttransmission','paymenttransmission')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','paymenttransmission','N','transmissiondate','paymenttransmission')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','paymenttransmission','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','paymenttransmission','S','transmissiondate','paymenttransmission')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','paymenttransmission','N','transmissiondate','paymenttransmission')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','paymenttransmission','N','kpaymenttransmission','paymenttransmission')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','paymenttransmission','S','idtreasurer','paymenttransmission')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','paymenttransmission','N','idtreasurer','paymenttransmission')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','paymethod','N','idpaymethod','paymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','paymethod','N','idpaymethod','paymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','paymethod','N','description','paymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','paymethod','N','idpaymethod','paymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','paymethod','N','description','paymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','payroll','N','disbursementdate','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','payroll','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','payroll','N','start','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','payroll','N','stop','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','payroll','N','flagbalance','payroll')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','payroll','N','idcon','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','payroll','N','fiscalyear','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','payroll','N','flagcomputed','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','payroll','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','payroll','N','start','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','payroll','N','stop','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','payroll','N','flagbalance','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','payroll','N','idcon','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','payroll','N','fiscalyear','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','payroll','N','flagcomputed','payroll')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','payroll','S','disbursementdate','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','payroll','S','fiscalyear','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','payroll','S','netfee','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','payroll','S','feegross','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','payroll','S','flagcomputed','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','payroll','N','fiscalyear','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','payroll','N','netfee','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','payroll','N','feegross','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','payroll','N','flagcomputed','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','payroll','N','idcon','payroll')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','payroll','N','stop','payroll')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','payrollabatement','N','idpayroll','payrollabatement')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','payrollabatement','S','annualamount','payrollabatement')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','payrollabatement','S','curramount','payrollabatement')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','payrollabatement','N','idpayroll','payrollabatement')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','payrollabatement','N','annualamount','payrollabatement')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','payrollabatement','N','curramount','payrollabatement')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','payrolldeduction','N','idpayroll','payrolldeduction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','payrolldeduction','S','annualamount','payrolldeduction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','payrolldeduction','S','curramount','payrolldeduction')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','payrolldeduction','N','idpayroll','payrolldeduction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','payrolldeduction','N','annualamount','payrolldeduction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','payrolldeduction','N','curramount','payrolldeduction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','payrolltax','N','idpayroll','payrolltax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','payrolltax','N','taxcode','payrolltax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','payrolltax','N','idpayroll','payrolltax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','payrolltax','N','taxablenumerator','payrolltax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','payrolltax','N','taxabledenominator','payrolltax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','payrolltax','N','taxcode','payrolltax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','payrolltax','N','idpayroll','payrolltax')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','payrolltax','N','taxablenumerator','payrolltax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','payrolltax','N','taxabledenominator','payrolltax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','payrolltax','S','employtax','payrolltax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','payrolltax','S','admintax','payrolltax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','payrolltax','S','employtaxgross','payrolltax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','payrolltax','S','employrate','payrolltax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','payrolltax','S','adminrate','payrolltax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','payrolltax','N','idpayroll','payrolltax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','payrolltax','N','employtax','payrolltax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','payrolltax','N','admintax','payrolltax')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','payrolltax','N','employtaxgross','payrolltax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','payrolltax','N','employrate','payrolltax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','payrolltax','N','adminrate','payrolltax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','payrolltaxbracket','N','idpayroll','payrolltaxbracket')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','payrolltaxbracket','S','adminrate','payrolltaxbracket')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','payrolltaxbracket','S','admintax','payrolltaxbracket')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','payrolltaxbracket','S','employrate','payrolltaxbracket')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','payrolltaxbracket','S','employtax','payrolltaxbracket')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','payrolltaxbracket','S','taxable','payrolltaxbracket')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','payrolltaxbracket','N','idpayroll','payrolltaxbracket')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','payrolltaxbracket','N','adminrate','payrolltaxbracket')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','payrolltaxbracket','N','admintax','payrolltaxbracket')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','payrolltaxbracket','N','employrate','payrolltaxbracket')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','payrolltaxbracket','N','employtax','payrolltaxbracket')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','payrolltaxbracket','N','taxable','payrolltaxbracket')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','pettycash','N','idpettycash','pettycash')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','pettycash','N','idpettycash','pettycash')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','pettycash','N','description','pettycash')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','pettycash','N','idpettycash','pettycash')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','pettycash','N','description','pettycash')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','pettycashexpense','N','idexp','pettycashexpense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','pettycashexpense','N','idpettycash','pettycashexpense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','pettycashexpense','N','noperation','pettycashexpense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','pettycashexpense','N','yoperation','pettycashexpense')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','pettycashoperation','N','yoperation','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','pettycashoperation','N','noperation','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','pettycashoperation','N','idpettycash','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','pettycashoperation','N','flag','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','5','pettycashoperation','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','6','pettycashoperation','N','amount','pettycashoperation')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','7','pettycashoperation','N','yrestore','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','8','pettycashoperation','N','nrestore','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','9','pettycashoperation','S','yoperation','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','10','pettycashoperation','S','noperation','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','11','pettycashoperation','S','idpettycash','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','12','pettycashoperation','S','adate','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','pettycashoperation','N','idpettycash','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','pettycashoperation','N','yoperation','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','pettycashoperation','N','noperation','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','pettycashoperation','N','idpettycash','pettycashoperation')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','pettycashoperation','N','yoperation','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','pettycashoperation','-','sys_expensefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','pettycashoperation','N','idfin','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','pettycashoperation','N','idupb','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','pettycashoperation','N','amount','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','7','pettycashoperation','N','flag','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','8','pettycashoperation','N','yrestore','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','9','pettycashoperation','N','nrestore','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','10','pettycashoperation','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','11','pettycashoperation','N','idexp','pettycashoperation')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','pettycashoperation','S','adate','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','pettycashoperation','N','adate','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','pettycashoperation','N','idpettycash','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','pettycashoperation','N','yoperation','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','pettycashoperation','N','noperation','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','pettycashoperation','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','pettycashoperation','S','yoperation','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','pettycashoperation','S','noperation','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','pettycashoperation','S','idpettycash','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','pettycashoperation','N','yoperation','pettycashoperation')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','pettycashoperation','N','noperation','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','pettycashoperation','N','idpettycash','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','pettycashoperation','N','amount','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','pettycashoperation','N','flag','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','pettycashoperation','-','sys_expensefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','pettycashoperation','S','amount','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','pettycashoperation','S','idfin','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','pettycashoperation','N','idfin','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','pettycashoperation','N','idupb','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','pettycashoperation','N','yrestore','pettycashoperation')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','pettycashoperation','N','nrestore','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','pettycashoperation','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','pettycashoperation','S','idexp','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','15','pettycashoperation','N','idexp','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','16','pettycashoperation','S','idupb','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','pettycashoperationcasualcontract','N','idpettycash','pettycashoperationcasualcontract')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','pettycashoperationinvoice','N','idpettycash','pettycashoperationinvoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','pettycashoperationinvoice','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','pettycashoperationinvoice','N','idinvkind','pettycashoperationinvoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','pettycashoperationinvoice','N','yoperation','pettycashoperationinvoice')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','pettycashoperationinvoice','N','noperation','pettycashoperationinvoice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','pettycashoperationitineration','N','idpettycash','pettycashoperationitineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','pettycashoperationitineration','N','movkind','pettycashoperationitineration')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','pettycashoperationprofservice','N','ycon','pettycashoperationprofservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','pettycashoperationprofservice','N','ncon','pettycashoperationprofservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','pettycashoperationprofservice','N','idpettycash','pettycashoperationprofservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','pettycashoperationunderwriting','-','sys_expensefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','pettycashoperationunderwriting','N','idpettycash','pettycashoperationunderwriting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','pettycashoperationunderwriting','N','noperation','pettycashoperationunderwriting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','pettycashoperationunderwriting','N','yoperation','pettycashoperationunderwriting')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','pettycashoperationunderwriting','N','idunderwriting','pettycashoperationunderwriting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','pettycashoperationunderwriting','N','yrestore','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','pettycashoperationunderwriting','-','sys_expensefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','pettycashoperationunderwriting','S','amount','pettycashoperationunderwriting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','pettycashoperationunderwriting','S','idunderwriting','pettycashoperationunderwriting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','pettycashoperationunderwriting','N','idpettycash','pettycashoperationunderwriting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','pettycashoperationunderwriting','N','noperation','pettycashoperationunderwriting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','pettycashoperationunderwriting','N','yoperation','pettycashoperationunderwriting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','pettycashoperationunderwriting','N','idunderwriting','pettycashoperationunderwriting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','pettycashoperationunderwriting','N','amount','pettycashoperationunderwriting')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','pettycashoperationunderwriting','N','flag','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','pettycashoperationunderwriting','N','yrestore','pettycashoperation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','pettycashsetup','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','pettycashsetup','N','idpettycash','pettycashsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','placcount','N','idplaccount','placcount')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','placcountlookup','N','oldidplaccount','placcountlookup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','position','N','idposition','position')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','position','N','codeposition','position')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','position','N','description','position')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','position','N','idposition','position')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','position','N','description','position')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','proceeds','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','proceeds','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','proceeds','N','kproceedstransmission','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','proceeds','N','ypro','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','proceeds','N','npro','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','5','proceeds','S','kproceedstransmission','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','6','proceeds','N','kpro','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','proceeds','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','proceeds','N','adate','proceeds')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','proceeds','N','ypro','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','proceeds','N','kpro','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','proceeds','N','flag','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','proceeds','N','idtreasurer','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','proceeds','N','idstamphandling','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','proceeds','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','proceeds','N','ypro','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','proceeds','N','kproceedstransmission','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','proceeds','N','kpro','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','proceeds','N','idtreasurer','proceeds')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','proceeds','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','7','proceeds','N','printdate','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','proceeds','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','proceeds','S','kproceedstransmission','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','proceeds','N','kproceedstransmission','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','proceeds','N','kpro','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','proceeds','N','adate','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','proceeds','N','npro','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','proceeds','N','ypro','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','proceeds','S','kpro','proceeds')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','proceeds','N','idtreasurer','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','proceeds','N','idstamphandling','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','proceeds','S','idtreasurer','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','proceeds','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','proceeds','S','adate','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','proceeds','N','adate','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','proceeds','N','kpro','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','proceeds','S','kproceedstransmission','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','proceeds','S','annulmentdate','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','proceeds','N','kproceedstransmission','proceeds')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','proceeds','N','annulmentdate','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','proceeds','N','ypro','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','proceeds','S','idtreasurer','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','proceeds','N','idtreasurer','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','proceeds','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','proceeds','S','printdate','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','proceeds','N','printdate','proceeds')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','proceedspart','N','yproceedspart','proceedspart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','proceedspart','N','nproceedspart','proceedspart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','proceedspart','S','amount','proceedspart')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','proceedspart','N','amount','proceedspart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','proceedspart','N','yproceedspart','proceedspart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','proceedspart','N','nproceedspart','proceedspart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','proceedspart','N','idinc','proceedspart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','proceedstransmission','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','proceedstransmission','N','transmissiondate','proceedstransmission')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','proceedstransmission','N','kproceedstransmission','proceedstransmission')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','proceedstransmission','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','proceedstransmission','N','transmissiondate','proceedstransmission')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','proceedstransmission','N','kproceedstransmission','proceedstransmission')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','proceedstransmission','S','transmissiondate','proceedstransmission')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','proceedstransmission','N','transmissiondate','proceedstransmission')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','proceedstransmission','N','kproceedstransmission','proceedstransmission')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','proceedstransmission','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','proceedstransmission','S','idtreasurer','proceedstransmission')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','proceedstransmission','N','idtreasurer','proceedstransmission')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','proceedstransmission','N','kproceedstransmission','proceedstransmission')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','profrefund','N','idlinkedrefund','profrefund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','profservice','N','ycon','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','profservice','N','ncon','profservice')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','profservice','N','ycon','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','profservice','N','ncon','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','profservice','N','idreg','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','profservice','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','profservice','N','idser','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','profservice','N','start','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','profservice','N','stop','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','profservice','S','idser','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','profservice','N','ycon','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','profservice','N','ncon','profservice')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','profservice','N','idser','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','profservice','S','feegross','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','profservice','N','feegross','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','profservice','N','ycon','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','profservice','N','ncon','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','profservice','S','idreg','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','profservice','N','idreg','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','profservice','S','idser','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','profservice','S','adate','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','profservice','N','idser','profservice')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','profservice','N','adate','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','profservice','N','totalcost','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','profservice','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','profservice','S','start','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','profservice','S','stop','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','15','profservice','N','start','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','16','profservice','N','stop','profservice')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','profservicetax','N','ycon','profservicetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','profservicetax','N','ncon','profservicetax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','ratebracket','N','taxcode','ratebracket')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','ratebracket','N','validitystart','ratebracket')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','ratebracket','N','nbracket','ratebracket')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','ratevalidity','N','taxcode','ratevalidity')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','ratevalidity','N','validitystart','ratevalidity')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','reduction','N','idreduction','reduction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','reduction','N','idreduction','reduction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','reduction','N','description','reduction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','reduction','N','description','reduction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','reduction','N','idreduction','reduction')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','region','N','regioncode','region')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','region','N','description','region')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','region','N','regioncode','region')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','region','N','description','region')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','registry','N','idreg','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','registry','N','active','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','registry','N','idregistryclass','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','registry','N','cf','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','registry','N','multi_cf','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','registry','N','idreg','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','registry','N','p_iva','registry')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','registry','N','idcentralizedcategory','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','registry','N','idregistryclass','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','registry','N','active','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','registry','N','title','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','registry','N','idcity','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','registry','N','cf','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','7','registry','N','idnation','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','8','registry','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','9','registry','N','multi_cf','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','registry','N','active','registry')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','registry','N','idregistryclass','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','registry','N','cf','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','registry','N','multi_cf','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','registry','N','idreg','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','registry','N','p_iva','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','registry','S','title','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','registry','N','title','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','registry','S','cf','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','registry','S','p_iva','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','registry','S','idcentralizedcategory','registry')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','registry','N','idcentralizedcategory','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','registry','S','idregistryclass','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','registry','N','idregistryclass','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','registry','S','title','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','registry','N','active','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','registry','N','title','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','registry','N','idcity','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','registry','N','cf','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','registry','N','idnation','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','registry','S','cf','registry')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','registry','N','idreg','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','registry','S','active','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','14','registry','S','p_iva','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','15','registry','N','p_iva','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','16','registry','-','sys_idflowchart','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','17','registry','S','multi_cf','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','18','registry','N','multi_cf','registry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','registryaddress','N','idaddresskind','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','registryaddress','N','idreg','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','registryaddress','N','start','registryaddress')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','4','registryaddress','N','stop','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','registryaddress','N','idaddresskind','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','registryaddress','N','idreg','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','registryaddress','N','start','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','registryaddress','N','stop','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','registryaddress','N','idcity','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','registryaddress','N','idnation','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','registryaddress','N','idaddresskind','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','registryaddress','N','idreg','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','registryaddress','N','start','registryaddress')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','registryaddress','N','stop','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','registryaddress','S','stop','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','registryaddress','S','idcity','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','registryaddress','N','idaddresskind','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','registryaddress','N','idreg','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','registryaddress','N','stop','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','registryaddress','N','idcity','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','registryaddress','N','start','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','registryaddress','N','idcity','registryaddress')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','registryaddress','N','idnation','registryaddress')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','registrycf','N','idreg','registrycf')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','registrycf','N','idreg','registrycf')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','registrycf','N','cf','registrycf')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','registrycf','N','stop','registrycf')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','registrycf','N','idreg','registrycf')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','registrycf','N','stop','registrycf')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','registryclass','N','idregistryclass','registryclass')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','registryclass','N','description','registryclass')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','registryclass','N','idregistryclass','registryclass')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','registryclass','N','description','registryclass')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','registrykind','N','description','registrykind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','registrykind','N','sortcode','registrykind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','registrykind','N','description','registrykind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','registrykind','N','idregistrykind','registrykind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','registrykind','N','sortcode','registrykind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','registrylegalstatus','N','idreg','registrylegalstatus')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','registrylegalstatus','N','idregistrylegalstatus','registrylegalstatus')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','registrypaymethod','N','idreg','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','registrypaymethod','N','idregistrypaymethod','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','registrypaymethod','N','idpaymethod','registrypaymethod')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','registrypaymethod','N','regmodcode','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','registrypaymethod','N','idreg','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','registrypaymethod','N','idregistrypaymethod','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','registrypaymethod','N','flagstandard','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','registrypaymethod','N','idpaymethod','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','registrypaymethod','N','iddeputy','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','registrypaymethod','N','iban','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','registrypaymethod','N','cin','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','registrypaymethod','N','idbank','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','registrypaymethod','N','idcab','registrypaymethod')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','7','registrypaymethod','N','cc','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','8','registrypaymethod','N','active','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','9','registrypaymethod','N','paymentdescr','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','registrypaymethod','N','idpaymethod','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','registrypaymethod','N','idregistrypaymethod','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','registrypaymethod','N','idreg','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','registrypaymethod','N','flagstandard','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','registrypaymethod','S','idpaymethod','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','registrypaymethod','N','idpaymethod','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','registrypaymethod','S','iddeputy','registrypaymethod')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','registrypaymethod','N','iddeputy','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','registrypaymethod','N','iban','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','registrypaymethod','N','cin','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','registrypaymethod','N','idbank','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','registrypaymethod','N','idcab','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','registrypaymethod','N','cc','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','registrypaymethod','N','active','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','registrypaymethod','S','paymentdescr','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','registrypaymethod','N','paymentdescr','registrypaymethod')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','registrypiva','N','stop','registrypiva')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','registrypiva','N','idreg','registrypiva')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','registrypiva','N','stop','registrypiva')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','registrypiva','N','idreg','registrypiva')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','registrypiva','N','p_iva','registrypiva')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','registrypiva','N','stop','registrypiva')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','registrypiva','N','idreg','registrypiva')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','registrypiva','N','p_iva','registrypiva')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','registryreference','N','idregistryreference','registryreference')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','registryreference','N','idreg','registryreference')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','registryreference','N','flagdefault','registryreference')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','registryreference','N','userweb','registryreference')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','registryreference','N','idregistryreference','registryreference')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','registryreference','N','idreg','registryreference')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','registryreference','N','idregistryreference','registryreference')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','registryreference','N','idreg','registryreference')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','registryreference','N','flagdefault','registryreference')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','registryreference','N','userweb','registryreference')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','registryrole','N','idreg','registryrole')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','registryrole','N','idrole','registryrole')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','registryrole','N','start','registryrole')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','registryrole','N','idrole','registryrole')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','registryrole','S','idrole','registryrole')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','registryrole','N','idreg','registryrole')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','registryrole','N','idrole','registryrole')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','registryrole','N','start','registryrole')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','registryrole','S','idrole','registryrole')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','registryrole','N','idrole','registryrole')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','registrysorting','N','idreg','registrysorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','registrysorting','N','idsor','registrysorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','registrysorting','N','idreg','registrysorting')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','registrysorting','N','idsor','registrysorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','registrytaxablestatus','N','start','registrytaxablestatus')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','registrytaxablestatus','N','idreg','registrytaxablestatus')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','resfund','N','idres','resfund')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','resfundpart','N','idres','resfundpart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','resfundpart','N','idpar','resfundpart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','resfundsorted','N','idres','resfundsorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','resfundsorted','N','idpar','resfundsorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','resfundsorted','N','idsorkind','resfundsorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','resfundsorted','N','percentage','resfundsorted')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','resfundsorted','N','idsor','resfundsorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','resfundsorted','N','idres','resfundsorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','resfundsorted','N','idpar','resfundsorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','resfundsorted','N','idsorkind','resfundsorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','resfundsorted','N','idsor','resfundsorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','resfundsorted','N','percentage','resfundsorted')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','residence','N','idresidence','residence')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','residence','N','description','residence')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','residence','N','idresidence','residence')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','residence','N','description','residence')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','role','N','idrole','role')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','role','N','description','role')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','role','N','idrole','role')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','role','N','description','role')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','service','N','idser','service')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','service','N','idser','service')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','service','N','description','service')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','service','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','service','S','certificatekind','service')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','service','N','certificatekind','service')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','service','N','idser','service')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','service','S','certificatekind','service')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','service','N','certificatekind','service')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','service','N','idser','service')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','service','N','description','service')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','servicemotive','N','idmotive','servicemotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','servicemotive','N','description','servicemotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','servicemotive','N','ayear','servicemotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','servicemotive','N','idmot','servicemotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','servicemotive','N','description','servicemotive')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','servicemotive','N','ayear','servicemotive')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','servicepayment','N','nservreg','servicepayment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','servicepayment','N','yservreg','servicepayment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','servicepayment','N','is_delivered','servicepayment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','serviceregistry','N','description','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','serviceregistry','N','annotation','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','serviceregistry','N','servicevariation','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','serviceregistry','N','forename','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','5','serviceregistry','N','employkind','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','6','serviceregistry','N','idreg','serviceregistry')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','7','serviceregistry','N','start','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','8','serviceregistry','N','payment','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','9','serviceregistry','N','yservreg','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','10','serviceregistry','N','nservreg','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','11','serviceregistry','N','expectationsdate','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','serviceregistry','N','yservreg','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','serviceregistry','N','start','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','serviceregistry','N','employkind','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','serviceregistry','N','expectationsdate','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','serviceregistry','N','idfinancialactivity','serviceregistry')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','6','serviceregistry','N','idapfinancialactivity','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','7','serviceregistry','N','idserviceregistrykind','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','serviceregistry','N','forename','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','serviceregistry','N','employkind','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','serviceregistry','N','idreg','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','serviceregistry','N','start','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','serviceregistry','S','payment','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','serviceregistry','N','payment','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','serviceregistry','N','yservreg','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','serviceregistry','N','nservreg','serviceregistry')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','serviceregistry','S','expectationsdate','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','serviceregistry','N','expectationsdate','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','serviceregistry','N','description','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','serviceregistry','N','annotation','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','serviceregistry','N','servicevariation','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','serviceregistry','N','yservreg','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','serviceregistry','N','start','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','serviceregistry','N','employkind','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','serviceregistry','N','expectationsdate','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','serviceregistry','N','idfinancialactivity','serviceregistry')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','serviceregistry','N','idapfinancialactivity','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','serviceregistrykind','N','idserviceregistrykind','serviceregistry')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','sorting','N','idsor','sorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','sorting','N','idsorkind','sorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','sorting','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','sorting','N','idsorkind','sorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','sorting','N','nlevel','sorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','sorting','N','sortcode','sorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','sorting','N','idsorkind','sorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','sorting','N','sortcode','sorting')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','sorting','N','paridsor','sorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','sorting','S','start','sorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','sorting','S','stop','sorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','sorting','N','idsor','sorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','sorting','N','start','sorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','sorting','N','stop','sorting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','sortingapplicability','N','idsorkind','sortingapplicability')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','sortingapplicability','N','tablename','sortingapplicability')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','sortingkind','N','idsorkind','sortingkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','sortingkind','N','codesorkind','sortingkind')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','sortingkind','N','description','sortingkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','sortingkind','S','flag','sortingkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','sortingkind','N','flag','sortingkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','sortingkind','N','idsorkind','sortingkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','sortingkind','N','description','sortingkind')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','sortinglevel','N','idsorkind','sortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','sortinglevel','N','nlevel','sortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','sortinglevel','N','flag','sortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','sortinglevel','N','idsorkind','sortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','sortinglevel','N','nlevel','sortinglevel')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','sortinglevel','N','idsorkind','sortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','sortinglevel','N','description','sortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','sortinglevel','N','flag','sortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','sortinglevel','N','idsorkind','sortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','sortinglevel','N','nlevel','sortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','sortinglevel','N','idsorkind','sortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','sortinglevel','N','nlevel','sortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','sortinglevel','N','description','sortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','sortinglevel','N','flag','sortinglevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','sortingprev','N','expenseprevision','sortingprev')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','sortingprev','N','idsor','sortingprev')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','sortingprev','N','ayear','sortingprev')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','sortingprev','N','incomeprevision','sortingprev')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','sortingprevexpensevar','N','idsor','sortingprevexpensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','sortingprevexpensevar','N','ayear','sortingprevexpensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','sortingprevexpensevar','N','amount','sortingprevexpensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','sortingprevexpensevar','N','idsor','sortingprevexpensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','sortingprevexpensevar','N','ayear','sortingprevexpensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','sortingprevexpensevar','N','amount','sortingprevexpensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','sortingprevexpensevar','S','amount','sortingprevexpensevar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','sortingprevexpensevar','S','idsor','sortingprevexpensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','sortingprevexpensevar','N','idsor','sortingprevexpensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','sortingprevexpensevar','N','ayear','sortingprevexpensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','sortingprevexpensevar','N','amount','sortingprevexpensevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','sortingprevincomevar','N','idsor','sortingprevincomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','sortingprevincomevar','N','ayear','sortingprevincomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','sortingprevincomevar','N','amount','sortingprevincomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','sortingprevincomevar','N','idsor','sortingprevincomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','sortingprevincomevar','N','ayear','sortingprevincomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','sortingprevincomevar','N','amount','sortingprevincomevar')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','sortingprevincomevar','S','amount','sortingprevincomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','sortingprevincomevar','S','idsor','sortingprevincomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','sortingprevincomevar','N','idsor','sortingprevincomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','sortingprevincomevar','N','ayear','sortingprevincomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','sortingprevincomevar','N','amount','sortingprevincomevar')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','stamphandling','N','idstamphandling','stamphandling')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','stamphandling','N','description','stamphandling')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','stamphandling','N','flagdefault','stamphandling')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','stamphandling','N','idstamphandling','stamphandling')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','stamphandling','N','description','stamphandling')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','stamphandling','N','flagdefault','stamphandling')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','stock','N','idstock','stock')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','stock','N','idinvkind','stock')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','stock','N','idmankind','stock')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','stock','N','yman','stock')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','stock','N','nman','stock')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','stock','N','man_idgroup','stock')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','stock','N','idlist','stock')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','stock','N','expiry','stock')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','stock','N','idmankind','stock')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','stock','N','yman','stock')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','stock','N','nman','stock')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','stock','N','man_idgroup','stock')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','stock','S','number','stock')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','stock','N','number','stock')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','stock','N','idstock','stock')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','stock','S','expiry','stock')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','stock','N','idlist','stock')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','stock','N','expiry','stock')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','stocklocation','N','idstocklocation','stocklocation')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','stocklocation','N','stocklocationcode','stocklocation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','stocklocation','N','paridstocklocation','stocklocation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','stocklocationlevel','N','nlevel','stocklocationlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','stocklocationlevel','N','flag','stocklocationlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','stocklocationlevel','N','nlevel','stocklocationlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','stocklocationlevel','N','description','stocklocationlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','stocklocationlevel','N','nlevel','stocklocationlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','stocklocationlevel','N','description','stocklocationlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','stocklocationlevel','N','flag','stocklocationlevel')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','stocklocationlevel','N','codelen','stocklocationlevel')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','storeunloaddetail','N','idstock','storeunloaddetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','storeunloaddetail','N','idbooking','storeunloaddetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','storeunloaddetail','S','number','storeunloaddetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','storeunloaddetail','N','number','storeunloaddetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','storeunloaddetail','N','idstock','storeunloaddetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','storeunloaddetail','N','idbooking','storeunloaddetail')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','surplus','N','ayear','surplus')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','tax','N','taxcode','tax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','tax','N','maintaxcode','tax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','tax','N','taxcode','tax')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','tax','N','taxcode','tax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','tax','N','description','tax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','tax','S','idaccmotive_pay','tax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','tax','N','idaccmotive_pay','tax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','tax','N','maintaxcode','tax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','tax','N','taxcode','tax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','tax','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','tax','S','maintaxcode','tax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','tax','N','taxcode','taxsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','tax','N','taxcode','tax')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','tax','N','description','tax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','taxableminmax','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','taxableminmax','N','taxablecode','taxableminmax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','taxableminmax','N','startmonth','taxableminmax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','taxpay','N','taxcode','taxpay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','taxpay','N','ytaxpay','taxpay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','3','taxpay','N','ntaxpay','taxpay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','taxpay','N','ytaxpay','taxpay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','taxpay','N','ntaxpay','taxpay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','taxpay','N','amount','taxpay')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','taxpay','-','sys_maxexpensephase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','taxpay','N','taxcode','taxpay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','taxpay','N','ytaxpay','taxpay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','taxpay','N','ntaxpay','taxpay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','taxpay','N','amount','taxpay')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','taxpaymentpartsetup','N','taxcode','taxpaymentpartsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','taxpaymentpartsetup','N','taxcode','taxpaymentpartsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','taxpaymentpartsetup','N','ayear','taxpaymentpartsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','taxpaymentpartsetup','N','idreg','taxpaymentpartsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','taxpaymentpartsetup','S','idreg','taxpaymentpartsetup')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','taxpaymentpartsetup','S','percentage','taxpaymentpartsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','taxpaymentpartsetup','N','idreg','taxpaymentpartsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','taxpaymentpartsetup','N','percentage','taxpaymentpartsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','taxpaymentpartsetup','N','taxcode','taxpaymentpartsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','taxrate','N','taxcode','taxrate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','taxrate','N','validitystart','taxrate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','taxrate','N','nbracket','taxrate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','taxrate','N','ratestart','taxrate')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','taxregionsetup','N','taxcode','taxregionsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','taxregionsetup','S','idplace','taxregionsetup')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','taxregionsetup','S','kind','taxregionsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','taxregionsetup','S','regionalagency','taxregionsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','taxregionsetup','N','idplace','taxregionsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','taxregionsetup','N','kind','taxregionsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','taxregionsetup','N','regionalagency','taxregionsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','taxregionsetup','N','taxcode','taxregionsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','taxsetup','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','taxsetup','N','taxcode','taxsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','taxsetup','N','taxcode','taxsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','taxsetup','N','ayear','taxsetup')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','taxsetup','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','taxsetup','S','expiringday','taxsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','taxsetup','S','flag','taxsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','taxsetup','S','idexpirationkind','taxsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','taxsetup','S','idfinadmintax','taxsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','taxsetup','S','idfinexpensecontra','taxsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','taxsetup','S','paymentagency','taxsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','taxsetup','N','expiringday','taxsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','taxsetup','N','flag','taxsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','taxsetup','N','idexpirationkind','taxsetup')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','taxsetup','N','idfinadmintax','taxsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','taxsetup','N','idfinexpensecontra','taxsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','13','taxsetup','N','paymentagency','taxsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','14','taxsetup','N','taxcode','taxsetup')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','title','N','idtitle','title')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','title','N','description','title')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','title','N','idtitle','title')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','title','N','description','title')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','trasmissionmanager','N','idtrasmissiondocument','trasmissionmanager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','trasmissionmanager','N','idreg','trasmissionmanager')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','trasmissionmanager','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','trasmissionmanager','N','idtrasmissiondocument','trasmissionmanager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','trasmissionmanager','N','idreg','trasmissionmanager')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','treasurer','N','idtreasurer','treasurer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','treasurer','N','codetreasurer','treasurer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','treasurer','N','flagdefault','treasurer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','treasurer','N','idtreasurer','treasurer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','treasurer','N','flagdefault','treasurer')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','treasurerstart','N','idtreasurer','treasurerstart')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','treasurerstart','N','ayear','treasurerstart')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','underwriter','N','idunderwriter','underwriter')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','underwriter','N','idunderwriter','underwriter')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','underwriter','N','description','underwriter')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','underwriter','N','idunderwriter','underwriter')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','underwriter','N','description','underwriter')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','underwriting','N','idunderwriting','underwriting')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','underwritingappropriation','-','sys_appropriationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','underwritingappropriation','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','3','underwritingappropriation','N','idexp','underwritingappropriation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','4','underwritingappropriation','N','idunderwriting','underwritingappropriation')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','underwritingappropriation','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','underwritingappropriation','N','idexp','underwritingappropriation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','underwritingappropriation','-','sys_expensefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','underwritingappropriation','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','underwritingappropriation','N','idexp','underwritingappropriation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','underwritingappropriation','N','idunderwriting','underwritingappropriation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','underwritingappropriation','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','underwritingappropriation','N','idexp','underwritingappropriation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','underwritingappropriation','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','underwritingappropriation','N','idexp','underwritingappropriation')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','underwritingappropriation','N','idunderwriting','underwritingappropriation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','underwritingappropriation','-','sys_expensefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','underwritingappropriation','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','underwritingappropriation','S','amount','underwritingappropriation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','underwritingappropriation','S','idunderwriting','underwritingappropriation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','underwritingappropriation','N','idfin','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','underwritingappropriation','N','idupb','expenseyear')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','underwritingappropriation','N','idunderwriting','underwritingappropriation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','underwritingappropriation','N','idexp','underwritingappropriation')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','underwritingappropriation','N','amount','underwritingappropriation')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','underwritingpayment','-','sys_appropriationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','underwritingpayment','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','3','underwritingpayment','N','idexp','underwritingpayment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','4','underwritingpayment','N','idunderwriting','underwritingpayment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','underwritingpayment','-','sys_appropriationphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','underwritingpayment','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','underwritingpayment','N','idexp','underwritingpayment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','underwritingpayment','N','idunderwriting','underwritingpayment')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','uniconfig','-','sys_expensefinphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','uniconfig','S','expensefinphase','uniconfig')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','uniconfig','N','expensefinphase','uniconfig')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','uniconfig','-','sys_expenseregphase','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','uniconfig','S','expenseregphase','uniconfig')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','uniconfig','N','expenseregphase','uniconfig')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','unifiedtax','N','idunifiedf24ep','unifiedtax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','unifiedtaxcorrige','N','idunifiedf24ep','unifiedtaxcorrige')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','unit','N','idunit','unit')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','upb','N','idupb','upb')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','upb','N','previousassessment','upb')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','upb','N','previousappropriation','upb')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','upb','N','assured','upb')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','upb','N','codeupb','upb')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','upb','N','printingorder','upb')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','upb','-','sys_esercizio','sys')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','upb','S','idman','upb')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','upb','N','idman','upb')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','upb','N','idupb','upb')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','upb','S','codeupb','upb')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','upb','S','printingorder','upb')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','upb','N','codeupb','upb')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','upb','N','printingorder','upb')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','upb','S','idtreasurer','upb')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','upb','N','idtreasurer','upb')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','1','wageaddition','N','ycon','wageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','D','2','wageaddition','N','ncon','wageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','wageaddition','N','ncon','wageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','1','wageaddition','N','ycon','wageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','2','wageaddition','N','idreg','wageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','3','wageaddition','N','start','wageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','4','wageaddition','N','idser','wageaddition')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','I','5','wageaddition','N','stop','wageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','1','wageaddition','N','idreg','wageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','2','wageaddition','N','start','wageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','3','wageaddition','N','feegross','wageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','4','wageaddition','N','ycon','wageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','5','wageaddition','N','ncon','wageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','6','wageaddition','S','idser','wageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','7','wageaddition','S','start','wageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','8','wageaddition','S','stop','wageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','9','wageaddition','S','idreg','wageaddition')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','10','wageaddition','N','idser','wageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','11','wageaddition','N','stop','wageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','12','wageaddition','S','adate','wageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('S','U','13','wageaddition','N','adate','wageaddition')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','1','wageadditiontax','N','ycon','wageadditiontax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','D','2','wageadditiontax','N','ncon','wageadditiontax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','1','wageadditiontax','N','ycon','wageadditiontax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','I','2','wageadditiontax','N','ncon','wageadditiontax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','1','wageadditiontax','S','employtax','wageadditiontax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','2','wageadditiontax','S','admintax','wageadditiontax')
GO

INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','3','wageadditiontax','S','taxable','wageadditiontax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','4','wageadditiontax','S','adminrate','wageadditiontax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','5','wageadditiontax','S','employrate','wageadditiontax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','6','wageadditiontax','N','ycon','wageadditiontax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','7','wageadditiontax','N','ncon','wageadditiontax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','8','wageadditiontax','N','employtax','wageadditiontax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','9','wageadditiontax','N','admintax','wageadditiontax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','10','wageadditiontax','N','taxable','wageadditiontax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','11','wageadditiontax','N','adminrate','wageadditiontax')
INSERT INTO [auditparameter] (isprecheck,opkind,parameterid,tablename,flagoldvalue,paramcolumn,paramtable) VALUES ('N','U','12','wageadditiontax','N','employrate','wageadditiontax')
GO


-- GENERAZIONE DATI PER auditcheck --
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','accmotive','S','S','S','N','N',{ts '2006-03-03 12:01:44.480'},'Software and more','Cancellazione Impossibile! Esistono associazioni tra causali e conti collegate alla causale %<accmotive.codemotive>%','N','[SELECT COUNT(*) FROM accmotivedetail
WHERE idaccmotive = %<accmotive.idaccmotive>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','accmotive','S','S','S','N','N',{ts '2009-10-20 09:29:52.827'},'SARA','Cancellazione Impossibile! Esistono rimborsi spesa per occasionali collegate alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''casualrefund'',''idaccmotive'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','accmotive','S','S','S','N','N',{ts '2009-10-20 09:30:14.530'},'SARA','Cancellazione Impossibile! Esistono dettagli di fatture collegati alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''invoicedetail'',''idaccmotive'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','accmotive','S','S','S','N','N',{ts '2009-10-20 09:30:59.047'},'SARA','Cancellazione Impossibile! Esistono rimborsi spesa per missioni collegati alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''itinerationrefundkind'',''idaccmotive'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','5','D','accmotive','S','S','S','N','N',{ts '2009-10-20 09:31:25.797'},'SARA','Cancellazione Impossibile! Esistono rimborsi spesa per professionali collegati alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''profrefund'',''idaccmotive'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','6','D','accmotive','S','S','S','N','N',{ts '2009-10-20 10:11:01.327'},'SARA','Cancellazione Impossibile! Esistono prestazioni professionali collegate alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''profservice'',''idaccmotive'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''profservice'',''idaccmotivedebit'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''profservice'',''idaccmotivedebit_crg'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0





')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','7','D','accmotive','S','S','S','N','N',{ts '2009-10-20 09:36:43.577'},'SARA','Cancellazione Impossibile! Esistono configurazioni dei tesorieri collegate alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''treasurer'',''idaccmotive_payment'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''treasurer'',''idaccmotive_proceeds'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','8','D','accmotive','N','N','N','N','N',{ts '2006-01-04 15:20:11.700'},'Software and more','Cancellazione impossibile! Esistono causali dipendenti dalla %<accmotive.codemotive>%','S','[SELECT COUNT(*) 
FROM accmotive
WHERE paridaccmotive = %<accmotive.idaccmotive>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','9','D','accmotive','N','N','N','N','N',{ts '2006-01-12 14:57:44.937'},'Software and more','Cancellazione impossibile! Esistono configurazioni sulle causali dipendenti dalla %<accmotive.codemotive>%','S','[SELECT COUNT(*) 
FROM accmotiveepoperation
WHERE idaccmotive = %<accmotive.idaccmotive>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','10','D','accmotive','S','S','S','N','N',{ts '2009-10-20 09:38:16.843'},'SARA','Cancellazione impossibile! Esistono operazioni di fondi economali collegate alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''pettycashoperation'',''idaccmotive_debit'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''pettycashoperation'',''idaccmotive_cost'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','11','D','accmotive','S','S','S','N','N',{ts '2009-10-20 09:38:56.250'},'SARA','Cancellazione Impossibile! Esistono causali di carico collegate alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''assetloadmotive'',''idaccmotive'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','12','D','accmotive','S','S','S','N','N',{ts '2009-10-20 09:42:35.267'},'SARA','Cancellazione Impossibile! Esistono prestazioni occasionali collegate alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''casualcontract'',''idaccmotivedebit'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''casualcontract'',''idaccmotivedebit_crg'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''casualcontract'',''idaccmotive'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','13','D','accmotive','S','S','S','N','N',{ts '2009-10-20 09:43:10.717'},'SARA','Cancellazione Impossibile! Esistono configurazioni di recuperi collegate alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''clawbacksetup'',''idaccmotive'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','14','D','accmotive','S','S','S','N','N',{ts '2009-10-20 09:45:21.123'},'SARA','Cancellazione Impossibile! Esistono configurazioni generali collegate alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''config'',''idaccmotive_admincar'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''config'',''idaccmotive_foot'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''config'',''idaccmotive_owncar'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','15','D','accmotive','S','S','S','N','N',{ts '2009-10-20 09:13:59.250'},'SARA','Cancellazione Impossibile! Esistono dettagli scritture collegati alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''entrydetail'',''idaccmotive'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','16','D','accmotive','S','S','S','N','N',{ts '2009-10-20 10:17:21.123'},'SARA','Cancellazione Impossibile! Esistono dettagli di contratti attivi collegati alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''estimatedetail'',''idaccmotive'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''estimatedetail'',''idaccmotiveannulment'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','17','D','accmotive','S','S','S','N','N',{ts '2009-10-20 09:15:57.000'},'SARA','Cancellazione Impossibile! Esistono associazioni class. inventariale - svalutazioni collegate alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''inventorysortingamortizationyear'',''idaccmotive'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
AND
[execute count_table_field ''inventorysortingamortizationyear'',''idaccmotiveunload'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','18','D','accmotive','S','S','S','N','N',{ts '2009-10-20 09:17:39.873'},'SARA','Cancellazione Impossibile! Esistono voci di classificazioni inventariali collegate alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''inventorytree'',''idaccmotiveload'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''inventorytree'',''idaccmotiveunload'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','19','D','accmotive','S','S','S','N','N',{ts '2009-10-20 10:08:01.483'},'SARA','Cancellazione Impossibile! Esistono missioni collegate alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''itineration'',''idaccmotive'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''itineration'',''idaccmotivedebit'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''itineration'',''idaccmotivedebit_crg'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','20','D','accmotive','S','S','S','N','N',{ts '2009-10-20 10:16:40.063'},'SARA','Cancellazione Impossibile! Esistono dettagli di contratti passivi collegati alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''mandatedetail'',''idaccmotive'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''mandatedetail'',''idaccmotiveannulment'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','21','D','accmotive','S','S','S','N','N',{ts '2009-10-20 10:10:01.890'},'SARA','Cancellazione Impossibile! Esistono contratti parasubordinati collegati alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''parasubcontract'',''idaccmotive'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''parasubcontract'',''idaccmotivedebit'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''parasubcontract'',''idaccmotivedebit_crg'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','22','D','accmotive','S','S','S','N','N',{ts '2009-10-20 09:23:17.420'},'SARA','Cancellazione Impossibile! Esistono ritenute collegate alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''tax'',''idaccmotive_cost'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''tax'',''idaccmotive_debit'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''tax'',''idaccmotive_pay'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','23','D','accmotive','S','S','S','N','N',{ts '2009-10-20 10:12:02.203'},'SARA','Cancellazione Impossibile! Esistono compensi a dipendenti collegati alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''wageaddition'',''idaccmotive'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''wageaddition'',''idaccmotivedebit'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','24','D','accmotive','S','S','S','N','N',{ts '2009-10-14 15:01:21.920'},'SARA','Cancellazione Impossibile! Esistono classificazioni di causali contabili collegate al conto %<accmotive.codemotive>%- %<accmotive.title>%','S','[execute count_table_field ''accmotivesorting'',''idaccmotive'',%<accmotive.idaccmotive>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','25','D','accmotive','S','S','S','N','N',{ts '2009-10-20 10:13:27.170'},'SARA','Cancellazione Impossibile! Esistono anagrafiche collegate alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''registry'',''idaccmotivecredit'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''registry'',''idaccmotivedebit'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','26','D','accmotive','S','S','S','N','N',{ts '2009-10-20 10:14:49.390'},'SARA','Cancellazione Impossibile! Esistono contratti passivi collegate alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''mandate'',''idaccmotivedebit'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''mandate'',''idaccmotivedebit_crg'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','27','D','accmotive','S','S','S','N','N',{ts '2009-10-20 10:15:42.373'},'SARA','Cancellazione Impossibile! Esistono contratti attivi collegati alla causale %<accmotive.codemotive>%','S','[execute count_table_field ''estimate'',''idaccmotivecredit'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
and
[execute count_table_field ''estimate'',''idaccmotivecredit_crg'',
%<accmotive.idaccmotive>%,@outvar output]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','accmotive','S','S','S','N','N',{ts '2006-01-03 11:20:49.187'},'Software and more','Descrizione della causale già esistente','S','[SELECT COUNT(*) 
FROM accmotive
WHERE title = %<accmotive.title>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','accmotive','S','S','S','N','N',{ts '2006-01-03 11:21:24.937'},'Software and more','Codice della causale già esistente','S','[SELECT COUNT(*) 
FROM accmotive
WHERE codemotive = %<accmotive.codemotive>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','accmotive','S','S','S','N','N',{ts '2006-01-04 15:22:05.327'},'Software and more','Descrizione della causale già esistente','S','[SELECT COUNT(*) 
FROM accmotive
WHERE title = %<accmotive.title>%
AND idaccmotive <> %<accmotive.idaccmotive>%]{I} = 0
OR
%<accmotive.title>%=&<accmotive.title>&
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','U','accmotive','S','S','S','N','N',{ts '2006-01-04 15:21:50.543'},'Software and more','Codice della causale già esistente','S','[SELECT COUNT(*) 
FROM accmotive
WHERE codemotive = %<accmotive.codemotive>%
AND idaccmotive <> %<accmotive.idaccmotive>%]{I} = 0
OR
%<accmotive.codemotive>%=&<accmotive.codemotive>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA011','1','D','accmotivedetail','S','S','S','N','N',{ts '2011-09-26 16:06:09.540'},'sa','Essendo già stato trasferito il piano dei conti, sarà necessario riportare le modifiche nell''anno successivo manualmente.','S','[select count(*) from account where ayear= %<account.ayear>%+1]{I} =0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA011','1','I','accmotivedetail','S','S','S','N','N',{ts '2011-09-26 16:06:40.197'},'sa','Essendo già stato trasferito il piano dei conti, sarà necessario riportare le modifiche nell''anno successivo manualmente.','S','[select count(*) from account where ayear= %<account.ayear>%+1]{I} =0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA011','1','U','accmotivedetail','S','S','S','N','N',{ts '2011-09-26 16:06:26.667'},'sa','Essendo già stato trasferito il piano dei conti, sarà necessario riportare le modifiche nell''anno successivo manualmente.','S','[select count(*) from account where ayear= %<account.ayear>%+1]{I} =0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA011','1','D','account','S','S','S','N','N',{ts '2011-03-30 14:42:52.930'},'sa','Essendo già stato trasferito il piano dei conti, sarà necessario riportare le modifiche nell''anno successivo manualmente.','S','[select count(*) from account where ayear= %<account.ayear>%+1]{I} =0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','account','S','S','S','N','N',{ts '2005-12-21 15:58:47.937'},'''INFORMATICA''','Cancellazione Impossibile! Esistono conti dipendenti dal conto %<codeacc>%','S','[SELECT COUNT(*) 
FROM account
WHERE paridacc = %<account.idacc>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','account','S','S','S','N','N',{ts '2008-02-22 11:15:34.143'},'SARA','Cancellazione Impossibile! Esistono dettagli di scritture in Partita Doppia collegati al conto %<codeacc>%','S','[execute count_table_field ''entrydetail'',''idacc'',
%<account.idacc>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','account','S','S','S','N','N',{ts '2008-07-18 15:28:31.780'},'SARA','Cancellazione Impossibile! Esistono causali associate al conto %<codeacc>%','S','[execute count_table_field ''accmotivedetail'',''idacc'',%<account.idacc>%,@outvar output]{I}=0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','account','S','S','S','N','N',{ts '2008-02-22 11:16:21.910'},'SARA','Cancellazione Impossibile! Esistono classificazioni associate al conto %<codeacc>%','S','[execute count_table_field ''accountsorting'',''idacc'',
%<account.idacc>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','5','D','account','S','S','S','N','N',{ts '2008-07-24 13:12:02.267'},'SARA','Cancellazione Impossibile! Esistono tipi di fattura associate al conto %<codeacc>%','S','[execute count_table_field ''invoicekindyear'',''idacc'',
	%<account.idacc>%,@outvar output]{I}=0
AND
[execute count_table_field ''invoicekindyear'',''idacc_discount'',
	%<account.idacc>%,@outvar output]{I}=0
AND
[execute count_table_field ''invoicekindyear'',''idacc_deferred'',
	%<account.idacc>%,@outvar output]{I}=0
AND
[execute count_table_field ''invoicekindyear'',''idacc_unabatable'',
	%<account.idacc>%,@outvar output]{I}=0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','6','D','account','S','S','S','N','N',{ts '2009-10-20 09:55:57.750'},'SARA','Cancellazione Impossibile! Esistono configurazioni delle scritture collegate al conto %<codeacc>%','S','[execute count_table_field ''config'',''idacc_accruedcost'',  %<account.idacc>%,@outvar output]{I}=0 
AND [execute count_table_field ''config'',''idacc_accruedrevenue'',  %<account.idacc>%,@outvar output]{I}=0 
AND [execute count_table_field ''config'',''idacc_customer'',  %<account.idacc>%,@outvar output]{I}=0 
AND [execute count_table_field ''config'',''idacc_deferredcost'',  %<account.idacc>%,@outvar output]{I}=0 
AND [execute count_table_field ''config'',''idacc_deferredcredit'',  %<account.idacc>%,@outvar output]{I}=0 
AND [execute count_table_field ''config'',''idacc_deferreddebit'',  %<account.idacc>%,@outvar output]{I}=0 
AND [execute count_table_field ''config'',''idacc_deferredrevenue'',  %<account.idacc>%,@outvar output]{I}=0 
AND [execute count_table_field ''config'',''idacc_ivapayment'',  %<account.idacc>%,@outvar output]{I}=0 
AND [execute count_table_field ''config'',''idacc_ivarefund'',  %<account.idacc>%,@outvar output]{I}=0 
AND [execute count_table_field ''config'',''idacc_patrimony'',  %<account.idacc>%,@outvar output]{I}=0 
AND [execute count_table_field ''config'',''idacc_pl'',  %<account.idacc>%,@outvar output]{I}=0 
AND [execute count_table_field ''config'',''idacc_supplier'',  %<account.idacc>%,@outvar output]{I}=0 
AND [execute count_table_field ''config'',''idacc_unabatable'',  %<account.idacc>%,@outvar output]{I}=0 
AND [execute count_table_field ''config'',''idacc_unabatable_refund'',  %<account.idacc>%,@outvar output]{I}=0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','7','D','account','S','S','S','N','N',{ts '2008-02-22 11:17:54.450'},'SARA','Cancellazione Impossibile! Esistono impegni di budget collegati al conto %<account.codeacc>%','S','[execute count_table_field ''epexp'',''idacc'',
	%<account.idacc>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','8','D','account','S','S','S','N','N',{ts '2008-02-22 11:18:22.280'},'SARA','Cancellazione Impossibile! Esistono classificazioni impegni di budget collegate al conto %<account.codeacc>%','S','[execute count_table_field ''epexpsorting'',''idacc'',
	%<account.idacc>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','9','D','account','S','S','S','N','N',{ts '2008-02-22 11:19:22.893'},'SARA','Cancellazione Impossibile! Esistono variazioni di budget collegate al conto %<account.codeacc>%','S','[execute count_table_field ''accountvardetail'',''idacc'',
	%<account.idacc>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','10','D','account','S','S','S','N','N',{ts '2008-02-22 11:19:48.660'},'SARA','Cancellazione Impossibile! Esistono previsioni di budget collegate al conto %<account.codeacc>%','S','[execute count_table_field ''accountyear'',''idacc'',
	%<account.idacc>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','11','D','account','S','S','S','N','N',{ts '2008-02-22 11:20:08.660'},'SARA','Cancellazione Impossibile! Esistono configurazioni dei fondi economali collegate al conto %<account.codeacc>%','S','[execute count_table_field ''pettycashsetup'',''idacc'',
	%<account.idacc>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','12','D','account','S','S','S','N','N',{ts '2008-07-22 13:10:39.123'},'SARA','Cancellazione Impossibile! Esistono classificazioni collegate al conto %<account.codeacc>%','S','[execute count_table_field ''sortingtotal'',''idacc'',
	%<account.idacc>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','13','D','account','S','S','S','N','N',{ts '2009-10-14 15:00:04.797'},'SARA','Cancellazione Impossibile! Esistono classificazioni di voci del piano dei conti collegati al conto %<account.codeacc>% - %<account.title>%','S','[execute count_table_field ''accountsorting'',''idacc'',%<account.idacc>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA011','1','I','account','S','S','S','N','N',{ts '2011-03-30 14:42:26.870'},'sa','Essendo già stato trasferito il piano dei conti, sarà necessario riportare le modifiche nell''anno successivo manualmente.','S','[select count(*) from account where ayear= %<account.ayear>%+1]{I} =0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','account','S','S','S','N','N',{ts '2007-06-27 10:36:45.877'},'''NINO''','Descrizione del conto già esistente','S','[SELECT COUNT(*) 
FROM account
WHERE title = %<account.title>%
AND ayear=%<account.ayear>%
]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','account','S','S','S','N','N',{ts '2007-06-27 10:36:56.877'},'''NINO''','Codice del conto già esistente','S','[SELECT COUNT(*) 
FROM account
WHERE codeacc = %<account.codeacc>%
AND ayear=%<account.ayear>%
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','3','I','account','S','S','S','N','N',{ts '2007-06-27 10:37:06.827'},'''NINO''','Ordine di stampa del conto già esistente','S','[SELECT COUNT(*) 
FROM account
WHERE printingorder = %<account.printingorder>%
AND ayear=%<account.ayear>%
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA011','1','U','account','S','S','S','N','N',{ts '2011-03-30 14:42:39.680'},'sa','Essendo già stato trasferito il piano dei conti, sarà necessario riportare le modifiche nell''anno successivo manualmente.','S','[select count(*) from account where ayear= %<account.ayear>%+1]{I} =0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','account','S','S','S','N','N',{ts '2007-06-27 10:37:14.093'},'''NINO''','Descrizione del conto già esistente','S','[SELECT COUNT(*) 
FROM account
WHERE title = %<account.title>%
AND ayear=%<account.ayear>%
AND idacc <> %<account.idacc>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','U','account','S','S','S','N','N',{ts '2007-06-27 10:37:22.860'},'''NINO''','Ordine di stampa del conto già esistente','S','[SELECT COUNT(*) 
FROM account
WHERE printingorder = %<account.printingorder>%
AND ayear=%<account.ayear>%
AND idacc <> %<account.idacc>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','accountkind','S','S','S','N','N',{ts '2006-01-03 11:14:32.077'},'Software and more','Cancellazione Impossibile! Esistono conti collegati al tipo conto %<idaccountkind>% - %<description>%','S','[SELECT COUNT(*) FROM account
WHERE idaccountkind = %<accountkind.idaccountkind>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','accountkind','S','S','S','N','N',{ts '2006-01-03 11:28:55.610'},'Software and more','Descrizione del tipo conto già esistente','S','[SELECT COUNT(*) 
FROM accountkind
WHERE description = %<accountkind.description>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','accountkind','S','S','S','N','N',{ts '2006-01-03 11:28:35.593'},'Software and more','Descrizione del tipo conto già esistente','S','[SELECT COUNT(*) 
FROM accountkind
WHERE description = %<accountkind.description>%
AND idaccountkind <> %<accountkind.idaccountkind>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','accountlevel','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono conti collegati al livello %<description>%','S','[SELECT COUNT(*) 
FROM account
WHERE ayear = %<accountlevel.ayear>% 
and nlevel = %<accountlevel.nlevel>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','accountlevel','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono livelli di conto dipendenti dal livello %<description>%','S','[SELECT COUNT(*) 
FROM accountlevel 
WHERE ayear = %<accountlevel.ayear>% 
AND nlevel > %<accountlevel.nlevel>%]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','accountlevel','S','S','S','N','N',{ts '2006-01-03 11:41:42.937'},'Software and more','Descrizione del livello del piano dei conti già esistente','S','[SELECT COUNT(*) 
FROM accountlevel
WHERE description = %<accountlevel.description>%
AND ayear = %<sys_esercizio>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','I','accountlevel','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il livello di conto padre di %<description>% è già operativo quindi %<description>% non può essere non operativo','S','(%<accountlevel.flagusable>% = ''S'')
OR 
(
[SELECT COUNT(*) 
from accountlevel 
where ayear = %<accountlevel.ayear>% 
and nlevel < %<accountlevel.nlevel>% 
and flagusable = ''S'']{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','accountlevel','S','S','S','N','N',{ts '2006-01-03 11:41:50.000'},'Software and more','Descrizione del livello del piano dei conti già esistente','S','[SELECT COUNT(*) 
FROM accountlevel
WHERE description = %<accountlevel.description>%
AND nlevel <> %<accountlevel.nlevel>%
AND ayear = %<sys_esercizio>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','U','accountlevel','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il livello di conto padre di %<description>% è già operativo quindi %<description>% non può essere non operativo','S','(%<accountlevel.flagusable>% = ''S'')
or 
(
[SELECT count(*) 
from accountlevel 
where ayear = %<accountlevel.ayear>% 
and nlevel < %<accountlevel.nlevel>% 
and flagusable = ''S'']{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','U','accountlevel','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il livello di conto padre di %<description>% è già operativo quindi %<description>% non può essere non operativo','S','(%<accountlevel.flagusable>% = ''S'')
or 
(
[SELECT count(*) 
from accountlevel 
where ayear = %<accountlevel.ayear>% 
and nlevel < %<accountlevel.nlevel>% 
and flagusable = ''S'']{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','accountlookup','S','S','S','N','N',{ts '2007-06-28 16:43:40.230'},'''SARA''','Voce di piano dei conti già convertita nell''esercizio %<esercizio>%','S','[(SELECT count(*) 
from accountlookup 
where oldidacc = %<accountlookup.oldidacc >%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA010','1','D','accountvardetail','S','S','S','N','N',{ts '2008-11-12 09:33:37.967'},'SARA','La previsione di Budget del conto %<account.codeacc>%  e  Classificazione %<sorting.sortcode>% è INSUFFICIENTE!','S','(
ISNULL(
	[SELECT ISNULL(currentprev,0) + ISNULL(previsionvariation,0)
	FROM sortingtotal	
	WHERE idacc = %<accountvardetail.idacc>%
	AND idsor= %<accountvardetail.idsor>%
]{V},0)
- 
ISNULL(
	[SELECT ISNULL(SUM(amount),0)
	FROM epexpsorting
	WHERE idacc =  %<accountvardetail.idacc>%
	AND idsor =  %<accountvardetail.idsor>%
]{V},0)
- 
ISNULL(%<accountvardetail.amount>%, 0)
)
>= 0 

OR
( %<accountvardetail.amount>%<0 )
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA010','1','I','accountvardetail','S','S','S','N','N',{ts '2008-11-12 09:33:10.877'},'SARA','La previsione di Budget del conto %<account.codeacc>%  e  Classificazione %<sorting.sortcode>% è INSUFFICIENTE!','N','(
ISNULL(
	[
	ISNULL(currentprev,0) + ISNULL(previsionvariation,0)
	FROM sortingtotal	
	WHERE idacc = %<accountvardetail.idacc>%
	AND idsor= %<accountvardetail.idsor>%
]{V},0)
- 
ISNULL(
	[SELECT ISNULL(SUM(amount),0)
	FROM epexpsorting
	WHERE idacc =  %<accountvardetail.idacc>%
	AND idsor =  %<accountvardetail.idsor>%
]{V},0)
)
>= 0 

OR

( %<accountvardetail.amount>%>0 )')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA010','1','U','accountvardetail','S','S','S','N','N',{ts '2008-11-12 09:33:46.157'},'SARA','La previsione di Budget del conto %<account.codeacc>%  e  Classificazione %<sorting.sortcode>% è INSUFFICIENTE!','S','(
ISNULL(
	[ISNULL(currentprev,0) + ISNULL(previsionvariation,0)
	FROM sortingtotal	
	WHERE idacc = %<accountvardetail.idacc>%
	AND idsor= %<accountvardetail.idsor>%
]{V},0)
- 
ISNULL(
	[SELECT ISNULL(SUM(amount),0)
	FROM epexpsorting
	WHERE idacc =  %<accountvardetail.idacc>%
	AND idsor =  %<accountvardetail.idsor>%
]{V},0)
- 
ISNULL(&<accountvardetail.amount>&, 0)
+ 
ISNULL(%<accountvardetail.amount>%, 0)
)
>= 0 

OR
(
%<accountvardetail.amount>%>&<accountvardetail.amount>&
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA010','1','U','accountyear','S','S','S','N','N',{ts '2008-11-12 09:33:55.640'},'SARA','La previsione di Budget del conto %<account.codeacc>%  e  Classificazione %<sorting.sortcode>% è INSUFFICIENTE!','S','(
ISNULL(%<accountyear.prevision>%,0)
+
ISNULL(
	[
	SELECT ISNULL(previsionvariation,0)
	FROM sortingtotal	
	WHERE idacc = %<accountyear.idacc>%
	AND idsor= %<accountyear.idsor>%
]{V},0)
- 
ISNULL(
	[SELECT ISNULL(SUM(amount),0)
	FROM epexpsorting
	WHERE idacc =  %<accountyear.idacc>%
	AND idsor =  %<accountyear.idsor>%
]{V},0)
)
>= 0 

OR
(
%<accountyear.prevision>% > &<accountyear.prevision>&
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','acquirekind','S','S','S','N','N',{ts '2008-07-22 14:00:54.687'},'SARA','Cancellazione Impossibile! Esistono anagrafi delle prestazioni collegati all''anagrafica %<registry.title>%','S','[execute count_table_field ''serviceregistry'',''idacquirekind'',%<acquirekind.idacquirekind>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','address','S','S','S','N','N',{ts '2008-02-22 11:21:13.980'},'SARA','Cancellazione Impossibile! Esistono indirizzi collegati al tipo di indirizzo %<description>%','S','[execute count_table_field ''registryaddress '',''idaddresskind'',
%<address.idaddress>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','address','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del tipo indirizzo già esistente','S','[SELECT COUNT(*) 
FROM address
WHERE description = %<address.description>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','address','S','S','S','N','N',{ts '2007-11-13 16:08:23.377'},'SARA','Codice del tipo di indirizzo %<codeaddress>% già esistente','S','[(SELECT count(*) 
from address 
where codeaddress = %<address.codeaddress>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','address','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del tipo indirizzo già esistente','S','[SELECT COUNT(*) 
FROM address
WHERE idaddress <> %<address.idaddress>%
and description = %<address.description>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE001','1','I','admpay_expense','S','S','S','N','N',{ts '2007-10-17 16:01:48.843'},'NINO','Il meta movimento di spesa n. %<admpay_expense.nexpense>% deve avere la stessa anagrafica dell''impegnativa a cui è associato','N','%<admpay_expense.nappropriation>% IS NULL
OR
[SELECT idexp FROM admpay_appropriation
WHERE admpay_appropriation.yadmpay = %<admpay_expense.yadmpay>%
AND admpay_appropriation.nadmpay = %<admpay_expense.nadmpay>%
AND admpay_appropriation.nappropriation = %<admpay_expense.nappropriation>%]{I} IS NULL
OR
ISNULL(
[SELECT idreg FROM expense
WHERE idexp = 
	[SELECT idexp FROM admpay_appropriation
	WHERE admpay_appropriation.yadmpay = %<admpay_expense.yadmpay>%
	AND admpay_appropriation.nadmpay = %<admpay_expense.nadmpay>%
	AND admpay_appropriation.nappropriation = %<admpay_expense.nappropriation>%]{I}
]{I}, %<admpay_expense.idreg>%) = %<admpay_expense.idreg>%
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE001','1','U','admpay_expense','S','S','S','N','N',{ts '2007-10-17 16:02:01.640'},'NINO','Il meta movimento di spesa n. %<admpay_expense.nexpense>% deve avere la stessa anagrafica dell''impegnativa a cui è associato','S','%<admpay_expense.nappropriation>% IS NULL
OR
[SELECT idexp FROM admpay_appropriation
WHERE admpay_appropriation.yadmpay = %<admpay_expense.yadmpay>%
AND admpay_appropriation.nadmpay = %<admpay_expense.nadmpay>%
AND admpay_appropriation.nappropriation = %<admpay_expense.nappropriation>%]{I} IS NULL
OR
ISNULL(
[SELECT idreg FROM expense
WHERE idexp = 
	[SELECT idexp FROM admpay_appropriation
	WHERE admpay_appropriation.yadmpay = %<admpay_expense.yadmpay>%
	AND admpay_appropriation.nadmpay = %<admpay_expense.nadmpay>%
	AND admpay_appropriation.nappropriation = %<admpay_expense.nappropriation>%]{I}
]{I}, %<admpay_expense.idreg>%) = %<admpay_expense.idreg>%
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE002','1','I','admpay_income','S','S','S','N','N',{ts '2007-10-17 16:01:18.467'},'NINO','Il meta movimento di entrata n. %<admpay_income.nincome>% deve avere la stessa anagrafica dell''accertamento a cui è associato','N','%<admpay_income.nassessment>% IS NULL
OR
[SELECT idinc FROM admpay_assessment
WHERE admpay_assessment.yadmpay = %<admpay_income.yadmpay>%
AND admpay_assessment.nadmpay = %<admpay_income.nadmpay>%
AND admpay_assessment.nassessment = %<admpay_income.nassessment>%]{I} IS NULL
OR
ISNULL(
[SELECT idreg FROM income
WHERE idinc = 
	[SELECT idinc FROM admpay_assessment
	WHERE admpay_assessment.yadmpay = %<admpay_income.yadmpay>%
	AND admpay_assessment.nadmpay = %<admpay_income.nadmpay>%
	AND admpay_assessment.nassessment = %<admpay_income.nassessment>%]{I}
]{I}, %<admpay_income.idreg>%) = %<admpay_income.idreg>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE002','1','U','admpay_income','S','S','S','N','N',{ts '2007-10-17 16:01:32.170'},'NINO','Il meta movimento di entrata n. %<admpay_income.nincome>% deve avere la stessa anagrafica dell''accertamento a cui è associato','S','%<admpay_income.nassessment>% IS NULL
OR
[SELECT idinc FROM admpay_assessment
WHERE admpay_assessment.yadmpay = %<admpay_income.yadmpay>%
AND admpay_assessment.nadmpay = %<admpay_income.nadmpay>%
AND admpay_assessment.nassessment = %<admpay_income.nassessment>%]{I} IS NULL
OR
ISNULL(
[SELECT idreg FROM income
WHERE idinc = 
	[SELECT idinc FROM admpay_assessment
	WHERE admpay_assessment.yadmpay = %<admpay_income.yadmpay>%
	AND admpay_assessment.nadmpay = %<admpay_income.nadmpay>%
	AND admpay_assessment.nassessment = %<admpay_income.nassessment>%]{I}
]{I}, %<admpay_income.idreg>%) = %<admpay_income.idreg>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','advice','S','S','S','N','N',{ts '2008-08-05 13:00:31.627'},'SARA','Descrizione della comunicazione già esistente','S','[SELECT COUNT(*) 
FROM advice
WHERE title = %<advice.title>%]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','advice','S','S','S','N','N',{ts '2008-08-05 13:01:29.910'},'SARA','Codice della comunicazione già esistente','S','[SELECT COUNT(*) 
FROM advice
WHERE codeadvice = %<advice.codeadvice>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','alert','S','S','S','N','N',{ts '2007-12-21 08:51:43.733'},'SA','Descrizione dell''avviso già esistente','S','[SELECT COUNT(*) 
FROM alert
WHERE description = %<alert.description>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','alert','S','S','S','N','N',{ts '2007-12-21 08:51:50.453'},'SA','Codice dell''avviso già esistente','S','[SELECT COUNT(*) 
FROM alert
WHERE alertcode = %<alert.alertcode>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI006','1','D','asset','S','S','S','N','N',{ts '2007-11-08 09:43:13.500'},'NINO','Impossibile effettuare l''operazione! Il cespite n. %<asset.ninventory>% risulta già scaricato','S','%<asset.idassetunload>% is null
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','asset','S','S','S','N','N',{ts '2008-12-09 16:20:43.060'},'ASSISTENZA','Cancellazione Impossibile! Esistono ammortamenti collegati al cespite %<assetview.codeinventory>% - %<ninventory>%','S','[(SELECT count(*) 
from assetamortization 
where idasset = %<asset.idasset>%
and idpiece = %<asset.idpiece>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','asset','S','S','S','N','N',{ts '2007-11-09 16:15:56.110'},'SA','Cancellazione Impossibile! Esistono manutenzioni collegate al cespite %<assetview.codeinventory>% - %<ninventory>%','S','[(SELECT count(*) 
from maintenance 
where idasset = %<asset.idasset>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','5','D','asset','S','S','S','N','N',{ts '2007-09-13 11:52:11.187'},'NINO','Il cespite n.%<asset.ninventory>% non può essere cancellato in quanto esistono degli accessori che lo referenziano.','S','(
%<asset.idpiece>% > 1
)
OR
(
[(SELECT count(*) 
FROM asset 
WHERE idasset = %<asset.idasset>% 
AND idpiece>1)]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM005','1','D','asset','S','S','S','N','N',{ts '2007-11-09 11:36:35.720'},'NINO','Ci sono righe di assegnazione responsabile / ubicazione o accessori che rimangono orfani','N','(
[SELECT COUNT(*) from assetmanager where 
 idasset = %<asset.idasset>%]{I} = 0
 AND

[SELECT COUNT(*) from assetlocation where 
 idasset = %<asset.idasset>%]{I} = 0
AND

[SELECT COUNT(*) from asset where 
 idasset = %<asset.idasset>%]{I} = 0

)
OR 
(%<asset.idpiece>%>1)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI001','1','I','asset','S','S','S','N','N',{ts '2007-11-09 15:22:47.190'},'NINO','Il numero di inventario %<ninventory>% non è compreso nell''intervallo riservato ai cespiti posseduti','N','--post
([select flag from assetacquire where nassetacquire= %<asset.nassetacquire>%]{I}
& 2 = 0 
)

or 
isnull([SELECT startnumber 
from inventory 
where idinventory= 
[select idinventory from assetacquire where nassetacquire= %<asset.nassetacquire>%]{I}
]{I},0)
 >= %<asset.ninventory>%
or 
%<asset.idpiece>%>1
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI002','1','I','asset','S','S','S','N','N',{ts '2007-11-09 15:30:17.720'},'NINO','Il numero di inventario %<asset.ninventory>%  non è compreso nell''intervallo riservato ai cespiti di nuova acquisizione','N','[select flag from assetacquire where nassetacquire= %<asset.nassetacquire>%]{C} 
& 2 <> 0
or 
(
ISNULL([SELECT startnumber 
from inventory 
where idinventory = 
[select idinventory from assetacquire where nassetacquire= %<asset.nassetacquire>%]{I}
]{I},0)
 < %<asset.ninventory>%
)
or 
%<asset.idpiece>%>1')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI003','1','I','asset','S','S','S','N','N',{ts '2012-02-10 10:22:12.073'},'sa','Il numero di inventario %<ninventory>%  è già stato assegnato all''inventario %<assetview.codeinventory>%','N','([SELECT COUNT(*) 
FROM asset 
JOIN assetacquire
ON assetacquire.nassetacquire = asset.nassetacquire 
WHERE asset.ninventory = %<asset.ninventory>% 
	and asset.idpiece=1
AND assetacquire.idinventory = 
[select idinventory from assetacquire where nassetacquire= %<asset.nassetacquire>%]{I}

]{I} = 1
)
OR
(%<asset.ninventory>%  is null)
OR
(%<asset.idpiece>%  > 1)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI021','1','I','asset','S','S','S','N','N',{ts '2007-11-06 15:37:06.297'},'SA','Non è possibile caricare l''accessorio poiché il cespite principale non risulta in carico. E'' necessario includere il cespite principale in un buono di carico o marcarlo come da non inserire in un buono carico (nel caso il buono sia stato fatto fuori dal programma)','N','[SELECT count(*) from asset A
join assetacquire AA on A.nassetacquire=AA.nassetacquire
where 
(
 A.idasset = %<asset.idasset>% AND
 A.idpiece= 1
)
AND
(
 AA.flag & 1 = 0 OR 
 AA.idassetload is not null
)
]{I} = 1

OR
(
%<asset.idpiece>% =1
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI024','1','I','asset','S','S','S','N','N',{ts '2008-06-27 12:17:48.530'},'ASSISTENZA','La data di creazione del cespite o dell''accessorio di tipo:  %<inventory.description>%, del carico cespite n. %<assetacquire.nassetacquire>%  di inventario  n. %<asset.ninventory>%  registrati come beni posseduti deve essere precedente all''esercizio  del buono di carico','N','-- non scatta su nuova acquisizione
[select flag from assetacquire
where  assetacquire.nassetacquire = %<asset.nassetacquire>%]{C}
& 2 = 0
OR
%<asset.lifestart>% IS NULL
OR 
[select idassetload from assetacquire
where  assetacquire.nassetacquire = 
%<asset.nassetacquire>%]{I} IS NULL 
OR 
YEAR(%<asset.lifestart>%)<=
[select yassetload from assetacquireview
where  assetacquireview.nassetacquire = 
%<asset.nassetacquire>%]{I}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI024','2','I','asset','S','S','S','N','N',{ts '2008-06-27 11:30:23.077'},'ASSISTENZA','La data di creazione del cespite o dell''accessorio di tipo:  %<inventory.description>%, del carico cespite n. %<assetacquire.nassetacquire>%  di inventario iniziale n. %<assetacquire.startnumber>% registrati come beni nuovi deve essere precedente alla data contabile  del buono di carico','N','-- caso bene nuovo
[select flag from assetacquire
where  assetacquire.nassetacquire = %<asset.nassetacquire>%]{I}
& 2 <> 0
OR
%<asset.lifestart>% IS NULL
OR
[select idassetload from assetacquire
where  assetacquire.nassetacquire = 
%<asset.nassetacquire>%
and flag&1 <> 0
]{I} IS NULL 
OR 
%<asset.lifestart>%<= 
[select assetload.adate from assetload
   join assetacquire 
     on assetload.idassetload= assetacquire.idassetload 
  where  assetacquire.nassetacquire = %<asset.nassetacquire>%
]{D}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI043','1','I','asset','S','S','S','N','N',{ts '2010-01-20 17:00:03.517'},'SARA','La classificazione inventariale scelta richiede che siano imputate delle informazioni aggiuntive obbligatorie sul cespite di inventario n° %<asset.ninventory>%.','N','NOT EXISTS 
(
SELECT M.fieldcode 
FROM  multifieldkind M
JOIN inventorytreemultifieldkind I
	ON I.idmultifieldkind = M.idmultifieldkind
JOIN assetacquire AC
	ON   AC.idinv = I.idinv
WHERE AC.nassetacquire = %<asset.nassetacquire>%
AND   PATINDEX(''%§''+M.fieldcode+''|%'', ''§''+ISNULL(%<asset.multifield>%,'''')) = 0
AND   ISNULL(M.allownull,''S'')= ''N''
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI045','3','I','asset','S','S','S','N','N',{ts '2013-04-04 16:27:09.000'},'sa','E'' necessario attribuire la data inizio esistenza al Cespite/Accessorio ''%<assetview.description>%''  n. %<asset.ninventory>% di tipo %<assetview.inventory>% , del carico cespite n. %<nassetacquire>%  ','N','%<asset.lifestart>% IS NOT NULL
 
	')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM005','1','I','asset','S','S','S','N','N',{ts '2007-11-09 11:23:55.720'},'NINO','Salvataggio di un cespite senza corrispondente carico','N','[select count(*) from assetacquire where 
  nassetacquire= %<asset.nassetacquire>%]{I}=1
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI001','1','U','asset','S','S','S','N','N',{ts '2009-09-15 11:35:22.733'},'SA','Il numero di inventario %<ninventory>% non è compreso nell''intervallo riservato ai cespiti posseduti','N','--post
(
[SELECT flag 
from assetacquire 
where nassetacquire = %<asset.nassetacquire>%]{I} & 2 = 0 
)
or 
(ISNULL([SELECT startnumber 
from inventory 
where idinventory = 
  [SELECT idinventory 
		from assetacquire 
		where nassetacquire = %<asset.nassetacquire>%]{I}
]{I},0)
 >= %<asset.ninventory>%
)
OR
(
&<asset.idassetunload>& IS NULL
AND %<asset.idassetunload>% IS NOT NULL
)
or 
%<asset.idpiece>%>1




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI002','1','U','asset','S','S','S','N','N',{ts '2007-11-09 15:30:24.707'},'NINO','Il numero di inventario %<ninventory>% non è compreso nell''intervallo riservato ai cespiti di nuova acquisizione','N','[(SELECT flag 
from assetacquire 
where nassetacquire = %<asset.nassetacquire>%)]{I} & 2 <> 0
or 
ISNULL([SELECT startnumber 
from inventory 
where idinventory = 
[SELECT idinventory 
from assetacquire 
where nassetacquire = %<asset.nassetacquire>%]{I}

]{I},0)
 < %<asset.ninventory>%
or
(
%<asset.idpiece>%>1
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI003','1','U','asset','S','S','S','N','N',{ts '2012-02-10 10:21:44.977'},'sa','Il numero di inventario %<ninventory>%  è già stato assegnato all''inventario %<assetview.codeinventory>%','N','( %<asset.idpiece>% > 1)
OR
( %<asset.ninventory>% is null)
OR
(


[SELECT COUNT(*) 
FROM asset 
JOIN assetacquire
ON assetacquire.nassetacquire = asset.nassetacquire 
WHERE asset.ninventory = %<asset.ninventory>% 
AND asset.idpiece=1
AND assetacquire.idinventory = 
	[SELECT idinventory 
		FROM assetacquire 
		WHERE nassetacquire = %<asset.nassetacquire>%
	]{I}
]{I} = 1

)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI004','1','U','asset','S','S','S','N','N',{ts '2007-11-08 16:34:23.610'},'SA','Il cespite  n. %<asset.ninventory>%  non può essere modificato in quanto è inserito in un buono di carico.','S','[(select count(*)
from assetacquire 
where nassetacquire=%<asset.nassetacquire>%
	and assetacquire.idassetload IS NULL)]{I}= 1
OR
(
     (ISNULL(&<asset.lifestart>&,{d ''1900-01-01''} )=ISNULL(%<asset.lifestart>%,{d ''1900-01-01''} ))
 AND (ISNULL(&<assetview.idlocation>&,0)=ISNULL(%<assetview.idlocation>%,0))
 AND (ISNULL(&<assetview.idman>&,0)=ISNULL(%<assetview.idman>%,0))
 AND (ISNULL(&<asset.nassetacquire>&,0)=ISNULL(%<asset.nassetacquire>%,0))
 AND (ISNULL(&<asset.ninventory>&,0)=ISNULL(%<asset.ninventory>%,0))
)







')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI005','1','U','asset','S','S','S','N','N',{ts '2007-11-06 16:16:25.797'},'SA','Scaricando un accessorio, il valore attuale del cespite principale n. %<asset.ninventory>%  diventa negativo.','N','(%<asset.idpiece>% = 1)
OR
(%<asset.idassetunload>% is null)
OR
([(select isnull(taxable, 0.0) * 
(1 - isnull(discount, 0.0)) * 
(1 + isnull(taxrate, 0.0)) 
from assetacquire 
where nassetacquire = 
(select nassetacquire 
from asset 
where idasset = %<asset.idasset>%
and   idpiece = 1 ))]{N} 
- 
[(select isnull(sum(isnull(taxable, 0.0) * 
(1 - isnull(discount, 0.0)) * 
(1 + isnull(taxrate, 0.0))), 0.0)
from assetacquire 
join asset 
on assetacquire.nassetacquire = asset.nassetacquire
where asset.idasset = %<asset.idasset>%
and   asset.idpiece >1 
and   assetacquire.idassetload is null
)]{N} 
>= 0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI006','1','U','asset','S','S','S','N','N',{ts '2007-11-08 16:35:30.343'},'SA','Impossibile effettuare l''operazione! Il cespite n. %<asset.ninventory>%  risulta già scaricato','S','&<asset.idassetunload>& IS NULL
OR
(
     (ISNULL(&<asset.lifestart>&,{d ''1900-01-01''} )=ISNULL(%<asset.lifestart>%,{d ''1900-01-01''} ))
 AND (ISNULL(&<assetview.idlocation>&,0)=ISNULL(%<assetview.idlocation>%,0))
 AND (ISNULL(&<assetview.idman>&,0)=ISNULL(%<assetview.idman>%,0))
 AND (ISNULL(&<asset.nassetacquire>&,0)=ISNULL(%<asset.nassetacquire>%,0))
 AND (ISNULL(&<asset.ninventory>&,0)=ISNULL(%<asset.ninventory>%,0))
)

or
%<asset.idassetunload>% IS NULL



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI006','2','U','asset','S','S','S','N','N',{ts '2007-11-08 11:21:36.237'},'NINO','Non è possibile scaricare il cespite n. %<asset.ninventory>%  senza scaricare i relativi accessori.','N','(%<asset.idassetunload>% is null)
OR
(%<asset.idpiece>% >1)
OR
([SELECT count(*)
from asset
where idasset = %<asset.idasset>%
and   idpiece > 1 
and   idassetunload is null]{I} = 0)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI006','3','U','asset','S','S','S','N','N',{ts '2007-11-08 11:21:51.777'},'NINO','Non è possibile rimuovere un accessorio dal buono di scarico finchè il relativo cespite principale  n. %<asset.ninventory>%  risulta scaricato.','N','(%<asset.idassetunload>% is not null) 
OR 
([SELECT count(*)
from  asset
where idasset = %<asset.idasset>%
and   idpiece = 1 
and   idassetunload is not null]{I} = 0)

OR

(%<asset.idpiece>% = 1)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI006','4','U','asset','S','S','S','N','N',{ts '2007-11-08 11:22:09.880'},'NINO','Non è possibile scaricare il cespite n. %<asset.ninventory>%  perchè non è inserito in un buono di carico.','N','(%<asset.idassetunload>% is null)
OR
(%<asset.idpiece>% >1)
OR
([(SELECT count(*)
from  assetacquire
where nassetacquire = %<asset.nassetacquire>%
and   idassetload is null
and 	((flag & 2) = 0)
)]{I} = 0)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI006','5','U','asset','S','S','S','N','N',{ts '2007-11-08 11:22:27.823'},'NINO','Non è possibile scaricare l''accessorio perchè non è inserito in un buono di carico.','N','(%<asset.idassetunload>% is null)
OR
(%<asset.idpiece>% =1)
OR
([SELECT count(*)
from  assetacquire
where nassetacquire = %<asset.nassetacquire>%
and   idassetload is null
and 	((flag&2) = 0)
]{I} = 0)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI006','6','U','asset','S','S','S','N','N',{ts '2007-11-08 11:22:37.227'},'NINO','Non è possibile scaricare il cespite n. %<asset.ninventory>%  senza scaricare i relativi ammortamenti','N','(%<asset.idassetunload>% is null)
 OR
(
[(SELECT count(*) 
from assetamortization
where idasset = %<asset.idasset>%
and   idpiece = %<asset.idpiece>%
and   amortizationquota < 0
and   idassetunload is null  
and   ((flag&1) <> 0) 
)]{I} = 0
)



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI021','1','U','asset','S','S','S','N','N',{ts '2007-11-08 11:11:29.177'},'NINO','Il cespite non può essere inserito nel buono di scarico in quanto manca il buono di carico ed è marcato ''inserire in buono carico''.','S','-- Cespite in buono di carico
(
[SELECT COUNT(*) FROM assetacquire
WHERE nassetacquire = %<asset.nassetacquire>%
AND idassetload IS NOT NULL] {I} > 0
)
OR
-- Cespite che non deve essere presente in buono di carico
(
[SELECT flag
FROM assetacquire
WHERE nassetacquire = %<asset.nassetacquire>%] {I}
& 1 = 0
)
OR
-- Non sto inserendo il cespite in un buono di scarico
%<asset.idassetunload>% IS NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI022','1','U','asset','S','S','S','N','N',{ts '2007-11-08 11:12:42.910'},'NINO','L''accessorio %<asset.idpiece>% non può essere scaricato in quanto il cespite di riferimento %<asset.idasset>% è stato già scaricato','S','[SELECT COUNT(*)
FROM asset
WHERE idasset = %<asset.idasset>%
AND idpiece = 1
AND (idassetunload IS NOT NULL OR ((flag&1) = 0) )
]{I} = 0
OR %<asset.idpiece>% = 1')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI024','1','U','asset','S','S','S','N','N',{ts '2008-06-27 11:30:15.610'},'ASSISTENZA','La data di creazione del cespite o dell''accessorio   ''%<assetview.description>%''  n. %<asset.ninventory>% di tipo %<assetview.inventory>% , del carico cespite n. %<nassetacquire>%   registrati come beni posseduti deve essere precedente all''esercizio  del buono di carico','N','-- nuova acquisizione
(
[select flag from assetacquire
where  assetacquire.nassetacquire = %<asset.nassetacquire>%]{I}
& 2 = 0
)
OR
%<asset.lifestart>% IS NULL
OR
[select idassetload from assetacquire
where  assetacquire.nassetacquire = 
%<asset.nassetacquire>%
]{I} IS NULL
OR 
YEAR(%<asset.lifestart>%)<= 
	[select yassetload from assetacquireview
	where  assetacquireview.nassetacquire = 
	%<asset.nassetacquire>%]{I}

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI024','2','U','asset','S','S','S','N','N',{ts '2008-06-27 12:18:19.483'},'ASSISTENZA','La data di creazione del cespite o dell''accessorio   ''%<assetview.description>%''  n. %<asset.ninventory>% di tipo %<assetview.inventory>% , del carico cespite n. %<nassetacquire>%    registrati come beni nuovi deve essere precedente alla data contabile  del buono di carico','N','-- caso bene nuovo
[select flag from assetacquire
where  assetacquire.nassetacquire = %<asset.nassetacquire>%]{I}
& 2 <> 0
OR
%<asset.lifestart>% IS NULL
OR
[select idassetload from assetacquire
where  assetacquire.nassetacquire = 
%<asset.nassetacquire>%
and (flag&1 <> 0)
]{I} IS NULL 
OR 
%<asset.lifestart>%<= 
[select assetload.adate from assetload
   join assetacquire 
     on assetload.idassetload = assetacquire.idassetload
  where  assetacquire.nassetacquire = %<asset.nassetacquire>%
]{D}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI028','6','U','asset','S','S','S','N','N',{ts '2007-11-08 11:16:07.633'},'NINO','Non è possibile scaricare il cespite o l''accessorio collegato al cespite n. %<asset.ninventory>%  senza scaricare i relativi ammortamenti.','N','(%<asset.idassetunload>% is null)
OR
([SELECT count(*)
from assetamortization
where idasset = %<asset.idasset>%
and idpiece = %<asset.idpiece>%
and amortizationquota < 0
and idassetunload is null 
and ((flag&1) <> 0)
]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI033','2','U','asset','S','S','S','N','N',{ts '2007-11-08 16:36:11.280'},'SA','Non è consentito modificare il Cespite o l''Accessorio in quanto è già trasmesso','N','ISNULL(%<asset.transmitted>%,''N'') <> ''S''
OR
(
 ISNULL(&<assetview.idlocation>&,0) = 
 ISNULL(%<assetview.idlocation>%,0) 
 AND
 ISNULL(&<assetview.idman>&,0) = 
 ISNULL(%<assetview.idman>%,0) 
 AND 
 ISNULL(&<asset.nassetacquire>&,0) = 
 ISNULL(%<asset.nassetacquire>%,0) 
 AND 
 ISNULL(&<asset.ninventory>&,0) = 
 ISNULL(%<asset.ninventory>%,0) 
 AND 
 (ISNULL(&<asset.flag>&,0) & 2) = 
 (ISNULL(%<asset.flag>%,0) & 2)
 AND 
 ISNULL(&<asset.lifestart>&,{d ''1900-01-01''})  = 
 ISNULL(%<asset.lifestart>%,{d ''1900-01-01''}) 
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI033','3','U','asset','S','S','S','N','N',{ts '2007-11-06 16:13:24.890'},'SA','Non è consentito marcare il Cespite/Accessorio come "Da Includere in un Buono di Scarico" in quanto il Cespite/Accessorio è stato già trasmesso','N','(
 ISNULL(&<asset.flag>&,0) & 1 = 
 ISNULL(%<asset.flag>%,0) & 1
)
OR
(%<asset.flag>% & 1 = 0) 
OR
(ISNULL(%<asset.transmitted>%,''N'') <> ''S'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI034','1','U','asset','S','S','S','N','N',{ts '2007-06-04 10:58:52.640'},'''SARA''','Non è consentito impostare manualmente un Cespite o Accessorio come "Trasmesso"','S','(
 ISNULL(&<asset.transmitted>&,''N'') = 
 ISNULL(%<asset.transmitted>%,''N'') 
)
OR
(ISNULL(%<asset.transmitted>%,''N'') <> ''S'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI043','1','U','asset','S','S','S','N','N',{ts '2010-01-21 16:49:33.170'},'SARA','La classificazione inventariale scelta richiede che siano imputate delle informazioni aggiuntive obbligatorie sul cespite di inventario n° %<asset.ninventory>%. ','N','( ISNULL(%<asset.multifield>%, '''') = 
  ISNULL(&<asset.multifield>&,''''))
OR
NOT EXISTS 
(
SELECT M.fieldcode 
FROM  multifieldkind M
JOIN inventorytreemultifieldkind I
	ON I.idmultifieldkind = M.idmultifieldkind
JOIN assetacquire AC
	ON   AC.idinv = I.idinv
WHERE AC.nassetacquire = %<asset.nassetacquire>%
AND   PATINDEX(''%§''+M.fieldcode+''|%'', ''§''+ISNULL(%<asset.multifield>%,'''')) = 0
AND   ISNULL(M.allownull,''S'')= ''N''
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI045','3','U','asset','S','S','S','N','N',{ts '2013-04-04 16:27:01.477'},'sa','E'' necessario attribuire la data inizio esistenza al Cespite/Accessorio ''%<assetview.description>%''  n. %<asset.ninventory>% di tipo %<assetview.inventory>% , del carico cespite n. %<nassetacquire>%  ','N','%<asset.lifestart>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','1','U','asset','S','S','S','N','N',{ts '2013-05-04 15:07:27.177'},'assistenza','Il cespite non può essere inserito in buono di scarico. Esiste già la variazione iniziale nell''anno successivo.','N','ISNULL(%<asset.idassetunload>%, 0)=0
OR
(ISNULL(%<asset.idassetunload>%, 0) = ISNULL(&<asset.idassetunload>&, 0))
OR
[SELECT count(*) from assetvar
	WHERE yvar = 
	[select year(adate)from assetunload where idassetunload =
		%<asset.idassetunload>%]{I}+1
	and (flag&1)=0
]{I} 	 = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','2','U','asset','S','S','S','N','N',{ts '2013-05-04 15:09:05.833'},'assistenza','Il cespite non può essere rimpsso da un buono di scarico. Esiste già la variazione iniziale nell''anno successivo.','N','ISNULL(&<asset.idassetunload>&, 0)=0
OR
(ISNULL(%<asset.idassetunload>%, 0) = ISNULL(&<asset.idassetunload>&, 0))
OR
[SELECT count(*) from assetvar
	WHERE yvar = 
	[select year(adate)from assetunload where idassetunload =
		&<asset.idassetunload>&]{I}+1
	and (flag&1)=0
]{I} 	 = 0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','1','U','asset','S','S','S','N','N',{ts '2010-01-08 14:23:47.983'},'SA','Il carico cespite non può essere inserito in buono di scarico. ''%<asset.ninventory>%'' appartiene ad un ente considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','N','(%<asset.flag>% & 1 <> 1)
OR
(ISNULL(%<asset.idassetunload>%, 0) = ISNULL(&<asset.idassetunload>&, 0))
OR
 %<asset.idassetunload>% IS NULL
OR
 &<asset.idassetunload>&  IS NOT NULL
OR
[(select count(*) 
from assetvar
where assetvar.idinventoryagency = 
	[(select inventory.idinventoryagency
	from inventory 
	join assetacquire on assetacquire.idinventory = inventory.idinventory
	where assetacquire.nassetacquire = %<asset.nassetacquire>%
	)]{I}

and assetvar.yvar =
	1 + 	[(select assetunload.yassetunload from assetunload 
		where assetunload.idassetunload = %<asset.idassetunload>%
		)]{I}
and (assetvar.flag & 1)=0)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','2','U','asset','S','S','S','N','N',{ts '2010-01-08 14:23:10.187'},'SA','Il carico cespite non può essere scollegato dal buono di scarico. ''%<asset.ninventory>%'' appartiene ad un ente considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','S','(%<asset.flag>% & 1 <> 1)
OR
(ISNULL(%<asset.idassetunload>%, 0) = ISNULL(&<asset.idassetunload>&, 0))
OR
 %<asset.idassetunload>% IS NOT NULL
OR
 &<asset.idassetunload>&  IS NULL
OR
[(select count(*) 
from assetvar
where assetvar.idinventoryagency = 
	[(select inventory.idinventoryagency
	from inventory 
	join assetacquire on assetacquire.idinventory = inventory.idinventory
	where assetacquire.nassetacquire = %<asset.nassetacquire>%
	)]{I}
and assetvar.yvar =
	1 + 	[(select assetunload.yassetunload from assetunload 
		where assetunload.idassetunload = &<asset.idassetunload>&
		)]{I}
and (assetvar.flag & 1)=0)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI004','1','D','assetacquire','S','S','S','N','N',{ts '2007-11-09 16:24:39.250'},'SA','Il carico di cespiti n. %<nassetacquire>% non può essere eliminato in quanto è incluso nel buono di carico %<assetacquireview.codeassetloadkind>% n. %<assetacquireview.nassetload>%','S','[SELECT count(*)
from assetacquire
where nassetacquire = %<assetacquire.nassetacquire>%
and idassetload is not null]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM005','1','D','assetacquire','S','S','S','N','N',{ts '2007-11-09 11:25:03.987'},'NINO','Ci sono dei cespiti che rimangono senza carico','N','[SELECT COUNT(*) from asset where nassetacquire=
 %<assetacquire.nassetacquire>%]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI003','1','I','assetacquire','S','S','S','N','N',{ts '2007-11-12 10:31:05.703'},'SA','Il numero di inventario tra %<assetacquire.startnumber>%  e %<assetacquire.startnumber>%   + %<assetacquire.number>% è già stato assegnato all''inventario %<assetacquireview.codeinventory>%','N','(%<assetacquire.flag>%&4)<>0
OR
(
[SELECT count(*) from asset 
 join assetacquire
 on assetacquire.nassetacquire= asset.nassetacquire
 where assetacquire.idinventory = %<assetacquire.idinventory>%
	and asset.idpiece=1
	]{I} =
[SELECT count (distinct ninventory) from asset 
 join assetacquire
 on assetacquire.nassetacquire= asset.nassetacquire
 where assetacquire.idinventory = %<assetacquire.idinventory>%
	and asset.idpiece=1 ]{I}
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI007','1','I','assetacquire','S','S','S','N','N',{ts '2006-10-25 16:20:41.953'},'''SA''','La quantità di cespiti disponibili nel buono d''ordine è INSUFFICIENTE!','S','(%<assetacquire.idmankind>% IS NULL
OR %<assetacquire.yman>% IS NULL
OR %<assetacquire.nman>% IS NULL
OR %<assetacquire.rownum>% IS NULL)
OR
(
[SELECT ISNULL(residual,0)
FROM mandatedetailavailable
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N} >= %<assetacquire.number>%
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI008','1','I','assetacquire','S','S','S','N','N',{ts '2006-10-26 10:58:56.740'},'''SA''','La classificazione inventariale del carico cespite N. %<assetacquire.nassetacquire>% è differente da quella del buono d''ordine','S','(%<assetacquire.idmankind>% IS NULL
OR %<assetacquire.yman>% IS NULL
OR %<assetacquire.nman>% IS NULL
OR %<assetacquire.rownum>% IS NULL)
OR
(
[SELECT MAX(ISNULL(idinv,''''))
FROM mandatedetail
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{C} 
= %<assetacquire.idinv>%
)




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI010','1','I','assetacquire','S','S','S','N','N',{ts '2007-11-08 15:02:10.843'},'SA','La categoria della classificazione inventariale del carico cespite è differente da quella dei carichi parte accessori.','N','%<assetacquire.flag>% & 4 = 0

OR



([SELECT COUNT(DISTINCT assetview.codeinv_lev1) 
  FROM assetview
  WHERE assetview.nassetacquire =  %<assetacquire.nassetacquire>%
   ]{I} 
  = 1
)







')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI011','1','I','assetacquire','S','S','S','N','N',{ts '2007-11-08 16:54:20.183'},'NINO','Il tipo del buono di carico  non è coerente con il tipo inventario del carico cespite.','S','(%<assetacquire.idassetload>% IS NULL)
OR
(
[select inventory.flag from assetloadkind 
  join inventory
   on  assetloadkind.idinventory = inventory.idinventory
where  assetloadkind.idassetloadkind = 
[select idassetloadkind from assetload where idassetload= %<assetacquire.idassetload>%]{I}
]{I} & 1 <> 0
)
OR
(
[select idinventory from assetloadkind 
where  idassetloadkind = 
[select idassetloadkind from assetload where idassetload= %<assetacquire.idassetload>%]{I}
]{I}= 
%<assetacquire.idinventory>% 
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI013','1','I','assetacquire','S','S','S','N','N',{ts '2008-05-08 17:11:36.817'},'NINO','L''imponibile del dettaglio dell''ordine %<assetacquire.idmankind>%,  %<assetacquire.yman>% / %<assetacquire.nman>%, deve essere uguale all''imponibile totale dei carichi cespite/accessori ad esso collegati.','N','(%<assetacquire.idmankind>% IS NULL
)
OR
(
[SELECT ISNULL(residual,0)
FROM mandatedetailavailable
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N} >0
)
OR
(
[SELECT SUM(
	ROUND(ISNULL(taxable,0) * ISNULL(number,0) * (1- CONVERT(DECIMAL(19,6),ISNULL(discount,0)))
	,2))
FROM assetacquire
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND rownum = %<assetacquire.rownum>%]{N}
=
ISNULL([SELECT SUM(taxable_euro)
FROM mandatedetailgroupview
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N},0)
)



 ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI013','2','I','assetacquire','S','S','S','N','N',{ts '2008-01-10 16:10:50.367'},'SARA','L''IVA del dettaglio dell''ordine %<assetacquire.idmankind>%,  %<assetacquire.yman>% / %<assetacquire.nman>%,  deve essere uguale all''IVA totale dei carichi cespite/accessori ad esso collegati.','N','(%<assetacquire.idmankind>% IS NULL
)
OR
(
[SELECT ISNULL(residual,0)
FROM mandatedetailavailable
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N} 
> 0
)
OR
(
[SELECT SUM(ISNULL(tax,0))
FROM assetacquire
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND rownum = %<assetacquire.rownum>%]{N} 
=
ISNULL([SELECT SUM(iva_euro)
FROM mandatedetailview
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N},0)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI013','3','I','assetacquire','S','S','S','N','N',{ts '2006-10-27 10:07:48.390'},'''SA''','L''IVA detraibile  dei dettagli fatture associati al dettaglio  n. %<assetacquire.rownum>% dell''ordine %<assetacquire.idmankind>%,  %<assetacquire.yman>% / %<assetacquire.nman>%,  deve essere uguale all''IVA detraibile  totale dei carichi cespite/accessori ad esso collegati.','N','(%<assetacquire.idmankind>% IS NULL
)
OR
(
[SELECT ISNULL(residual,0)
FROM mandatedetailavailable
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N} >0
)
OR
(
[SELECT COUNT(*)
FROM invoicedetail
join mandatedetail
	ON invoicedetail.idmankind = mandatedetail.idmankind
	AND invoicedetail.yman = mandatedetail.yman
	AND invoicedetail.nman = mandatedetail.nman
	and invoicedetail.manrownum = mandatedetail.rownum
WHERE invoicedetail.idmankind = %<assetacquire.idmankind>%
AND invoicedetail.yman = %<assetacquire.yman>%
AND invoicedetail.nman = %<assetacquire.nman>%
AND mandatedetail.idgroup = %<assetacquire.rownum>%
--AND manrownum = %<assetacquire.rownum>%
]{I} = 0
)
OR
(
[SELECT SUM( ISNULL(abatable,0))
FROM assetacquire
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND rownum = %<assetacquire.rownum>%]{N} 
=
[SELECT SUM(
	ROUND((ISNULL(invoicedetail.tax,0) - ISNULL(invoicedetail.unabatable,0))
		* invoicekindyearview.abatablerate,2))
FROM invoicedetail
JOIN invoicekindyearview
	ON invoicedetail.idinvkind = invoicekindyearview.idinvkind
	AND invoicedetail.yinv = invoicekindyearview.ayear
join mandatedetail
	ON invoicedetail.idmankind = mandatedetail.idmankind
	AND invoicedetail.yman = mandatedetail.yman
	AND invoicedetail.nman = mandatedetail.nman
	and invoicedetail.manrownum = mandatedetail.rownum
WHERE invoicedetail.idmankind = %<assetacquire.idmankind>%
	AND invoicedetail.yman = %<assetacquire.yman>%
	AND invoicedetail.nman = %<assetacquire.nman>%
--AND manrownum = %<assetacquire.rownum>%
	AND mandatedetail.idgroup = %<assetacquire.rownum>%

]{N}
)





')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI014','1','I','assetacquire','S','S','S','N','N',{ts '2006-10-30 12:10:21.267'},'Nino07032012','L''imponibile del dettaglio dell''ordine %<assetacquire.idmankind>%,  %<assetacquire.yman>% / %<assetacquire.nman>%, deve essere maggiore o uguale dell''imponibile totale dei carichi cespite/accessori ad esso collegati.','N','(%<assetacquire.idmankind>% IS NULL
)
OR
(
[SELECT ISNULL(residual,0)
FROM mandatedetailavailable
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{V} = 0
)
OR
(
[SELECT SUM(ROUND(ISNULL(taxable,0) * ISNULL(number,0)*(1-ISNULL(discount,0)),2))
FROM assetacquire
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND rownum = %<assetacquire.rownum>%]{V}
 <=
ISNULL([SELECT SUM(taxable_euro)
FROM mandatedetailview
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{V},0)
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI014','2','I','assetacquire','S','S','S','N','N',{ts '2006-10-30 12:10:30.627'},'Nino07032012','L''IVA del dettaglio dell''ordine %<assetacquire.idmankind>%,  %<assetacquire.yman>% / %<assetacquire.nman>%,  deve essere maggiore o uguale all''IVA totale dei carichi cespite/accessori ad esso collegati.','N','(%<assetacquire.idmankind>% IS NULL
)
OR
(
[SELECT ISNULL(residual,0)
FROM mandatedetailavailable
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{V} = 0
)
OR
(
[SELECT SUM(ISNULL(tax,0))
FROM assetacquire
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND rownum = %<assetacquire.rownum>%]{V} 
<=
ISNULL([SELECT SUM(iva_euro)
FROM mandatedetailview
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{V},0)
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI014','3','I','assetacquire','S','S','S','N','N',{ts '2006-10-30 12:11:04.030'},'Nino07032012','L''IVA detraibile  dei dettagli fatture associati al dettaglio dell''ordine %<assetacquire.idmankind>%,  %<assetacquire.yman>% / %<assetacquire.nman>%,  deve essere maggiore o uguale dell''IVA detraibile  totale dei carichi cespite/accessori ad esso collegati.','N','(%<assetacquire.idmankind>% IS NULL
)
OR
(
[SELECT ISNULL(residual,0)
FROM mandatedetailavailable
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N} =0
)
OR
(
[SELECT COUNT(*)
FROM invoicedetail
join mandatedetail
	on invoicedetail.idmankind = mandatedetail.idmankind
	and invoicedetail.yman = mandatedetail.yman
	and invoicedetail.nman = mandatedetail.nman
	and invoicedetail.manrownum = mandatedetail.rownum
WHERE invoicedetail.idmankind = %<assetacquire.idmankind>%
AND invoicedetail.yman = %<assetacquire.yman>%
AND invoicedetail.nman = %<assetacquire.nman>%
AND mandatedetail.idgroup = %<assetacquire.rownum>%]{I} = 0
)
OR
(
[SELECT SUM(ISNULL(abatable,0))
FROM assetacquire
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND rownum = %<assetacquire.rownum>%]{V} 
<=
[SELECT SUM(
	ROUND((ISNULL(invoicedetail.tax,0) - ISNULL(invoicedetail.unabatable,0))
		* invoicekindyearview.abatablerate,2))
FROM invoicedetail
JOIN invoicekindyearview
	ON invoicedetail.idinvkind = invoicekindyearview.idinvkind
	AND invoicedetail.yinv = invoicekindyearview.ayear
join mandatedetail
	on invoicedetail.idmankind = mandatedetail.idmankind
	and invoicedetail.yman = mandatedetail.yman
	and invoicedetail.nman = mandatedetail.nman
	and invoicedetail.manrownum = mandatedetail.rownum
WHERE invoicedetail.idmankind = %<assetacquire.idmankind>%
AND invoicedetail.yman = %<assetacquire.yman>%
AND invoicedetail.nman = %<assetacquire.nman>%
AND mandatedetail.idgroup = %<assetacquire.rownum>%]{V}
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI014','4','I','assetacquire','S','S','S','N','N',{ts '2008-07-28 10:33:48.280'},'Nino07032012','In presenza di dettagli fatture associati al dettaglio dell''ordine %<assetacquire.idmankind>%,  %<assetacquire.yman>% / %<assetacquire.nman>%, deve essere selezionata l''opzione "Calcola IVA detraibile da fattura"  nella scheda Cespiti in Configurazione-->Configurazione','N','(%<assetacquire.idmankind>% IS NULL
)
OR
(
[SELECT COUNT(*)
FROM invoicedetail
join mandatedetail
	on invoicedetail.idmankind = mandatedetail.idmankind
	and invoicedetail.yman = mandatedetail.yman
	and invoicedetail.nman = mandatedetail.nman
	and invoicedetail.manrownum = mandatedetail.rownum
WHERE invoicedetail.idmankind = %<assetacquire.idmankind>%
AND invoicedetail.yman = %<assetacquire.yman>%
AND invoicedetail.nman = %<assetacquire.nman>%
AND mandatedetail.idgroup = %<assetacquire.rownum>%]{I} = 0
)
OR
(
[SELECT ISNULL(linktoinvoice,''N'')
FROM config
WHERE ayear = %<sys_esercizio>%
]{C} = ''S''
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI015','1','I','assetacquire','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','L''importo unitario dell''IVA moltiplicato per la quantità non corrisponde a quello dell''IVA totale','S','(
ISNULL(ROUND(ROUND((%<assetacquire.tax>%/%<assetacquire.number>%),2) * %<assetacquire.number>%,2),0)
= ROUND(%<assetacquire.tax>%,2)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI015','2','I','assetacquire','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','L''importo unitario  dell''IVA detraibile moltiplicato per la quantità non corrisponde a quello dell''IVA detraibile totale','S','(
ISNULL(ROUND(ROUND((%<assetacquire.abatable>%/%<assetacquire.number>%),2) * %<assetacquire.number>%,2),0)
= ROUND(%<assetacquire.abatable>%,2)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI016 ','1','I','assetacquire','S','S','S','N','N',{ts '2006-01-03 11:46:46.127'},'Software and more','L''importo  dell''IVA totale  deve essere maggiore o  uguale dell''importo dell''IVA detraibile del carico cespite/accessori.','S','(
ISNULL(%<assetacquire.tax>%,0) -ISNULL(%<assetacquire.abatable>%,0) >= 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI017','1','I','assetacquire','S','S','S','N','N',{ts '2008-05-23 15:28:25.827'},'NINO','Non è possibile scegliere un buono d''ordine se non sono stati specificati i valori di : Esercizio, Numero e Dettaglio.','N','(
%<assetacquire.idmankind>% is null 
and %<assetacquire.nman>% is null 
and %<assetacquire.yman>% is null 
and %<assetacquire.rownum>%  is null) 
OR 
(
%<assetacquire.idmankind>% is not null 
and %<assetacquire.nman>% is not null 
and %<assetacquire.yman>% is not null 
and %<assetacquire.rownum>% is not null)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI018','1','I','assetacquire','S','S','S','N','N',{ts '2008-05-29 12:29:04.997'},'NINO','Il carico bene crea un SALTO nella numerazione inventario. Non esiste il bene di numero precedente al %<assetacquire.startnumber>% dell''inventario %<assetacquireview.inventory>%','N','--post
%<assetacquire.flag>% & 4 <> 0
or
[select count(*) from asset  B 
	join assetacquire C on B.nassetacquire=C.nassetacquire
	where B.ninventory = 
	[SELECT MIN(ninventory) FROM asset where 
		nassetacquire=%<assetacquire.nassetacquire>%
		]{I}	-1
	and C.idinventory= %<assetacquire.idinventory>%
	
]{I}
>0
or
[SELECT MIN(ninventory) FROM asset where 
		nassetacquire=%<assetacquire.nassetacquire>%
		]{I}	= 1
or
%<assetacquire.flag>% & 2 <> 0
or
[SELECT MIN(ninventory) FROM asset where 
		nassetacquire=%<assetacquire.nassetacquire>%
		]{I}	=
isnull([select startnumber from inventory where idinventory=
  %<assetacquire.idinventory>%]{I},0)+1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI023','2','I','assetacquire','S','S','S','N','N',{ts '2007-11-08 15:07:36.640'},'SA','I cespiti o gli accessori caricati come nuovi dovranno essere inclusi in un buono di carico.','S','%<assetacquire.flag>% & 2 <> 0
OR
%<assetacquire.flag>% & 1 <> 0




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI039','1','I','assetacquire','S','S','S','N','N',{ts '2008-04-11 13:38:09.527'},'NINO','La classificazione inventariale scelta non è congrua con il tipo di inventario associato al carico','N','-- Controllo che scatta solo su idinv_allow
[SELECT idinv_allow
FROM inventorykind
JOIN inventory
	ON inventorykind.idinventorykind = inventory.idinventorykind
WHERE inventory.idinventory = %<assetacquire.idinventory>%
]{I} IS NULL
OR
[SELECT idinv_allow
FROM inventorykind
JOIN inventory
	ON inventorykind.idinventorykind = inventory.idinventorykind
WHERE inventory.idinventory = %<assetacquire.idinventory>%
]{I} in (SELECT idparent
FROM inventorytreelink
WHERE idchild = %<assetacquire.idinv>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI039','2','I','assetacquire','S','S','S','N','N',{ts '2008-04-11 14:05:47.227'},'NINO','La classificazione inventariale scelta non è congrua con il tipo di inventario associato al carico','N','-- Controllo che scatta solo su idinv_deny
[SELECT idinv_deny
FROM inventorykind
JOIN inventory
	ON inventorykind.idinventorykind = inventory.idinventorykind
WHERE inventory.idinventory = %<assetacquire.idinventory>%
]{I} IS NULL
OR
[SELECT idinv_deny
FROM inventorykind
JOIN inventory
	ON inventorykind.idinventorykind = inventory.idinventorykind
WHERE inventory.idinventory = %<assetacquire.idinventory>%
]{I} not in (SELECT idparent
FROM inventorytreelink
WHERE idchild = %<assetacquire.idinv>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI042','1','I','assetacquire','S','S','S','N','N',{ts '2009-02-18 13:33:09.390'},'SA','Si stanno inserendo nello stesso buono di carico cespiti di categorie inventariali diverse','N','
([SELECT COUNT(DISTINCT assetview.codeinv_lev1) 
  FROM assetview
  WHERE assetview.idassetloadkind=  %<assetacquire.idassetloadkind>%
	and assetview.yassetload=  %<assetacquire.yassetload>%
	and assetview.nassetload=  %<assetacquire.nassetload>%
   ]{I} 
  <= 1
)
OR
  %<assetacquire.idassetloadkind>% is null
OR
 %<assetacquire.yassetload>% is null
OR
 %<assetacquire.nassetload>% is null


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI044','1','I','assetacquire','S','S','S','N','N',{ts '2011-06-20 16:14:38.937'},'assistenza','E'' necessario attribuire il Codice Ubicazione per ogni Cespite','N','[SELECT idpiece FROM asset WHERE 
	asset.nassetacquire = %<assetacquire.nassetacquire>%]{I} > 1

OR

[SELECT count(*)  FROM assetlocation WHERE
	idasset = [SELECT idasset from asset
		   WHERE nassetacquire = %<assetacquire.nassetacquire>%]{I}
]{I} > 0
	')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI044','2','I','assetacquire','S','S','S','N','N',{ts '2011-06-20 16:15:00.500'},'assistenza','E'' necessario attribuire il Codice del Responsabile per ogni Cespite','N','[SELECT idpiece FROM asset WHERE 
	asset.nassetacquire = %<assetacquire.nassetacquire>%]{I} > 1

OR

[SELECT count(*)  FROM assetmanager WHERE
	idasset = [SELECT idasset from asset
		   WHERE nassetacquire = %<assetacquire.nassetacquire>%]{I}
]{I} > 0
	')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI001','1','U','assetacquire','S','S','S','N','N',{ts '2007-11-09 15:24:05.470'},'NINO','Il numero di inventario non è compreso nell''intervallo riservato ai cespiti posseduti','N','((%<assetacquire.flag>%&2)=0)
or
((%<assetacquire.flag>%&4)<>0)
or 
[SELECT startnumber 
from inventory 
where idinventory= %<assetacquire.idinventory>%]{I} >= 
[SELECT ISNULL(MAX(ninventory),0) FROM asset where 
	idpiece = 1 and
	nassetacquire=%<assetacquire.nassetacquire>%
]{I}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI002','1','U','assetacquire','S','S','S','N','N',{ts '2007-11-09 15:30:37.143'},'NINO','Il numero di inventario  non è compreso nell''intervallo riservato ai cespiti di nuova acquisizione.','N','--post
((%<assetacquire.flag>%&2)<>0)
or
((%<assetacquire.flag>%&4)<>0)
or 
[SELECT startnumber 
from inventory 
where idinventory= %<assetacquire.idinventory>%]{I}< 
[SELECT ISNULL(MIN(ninventory),0) FROM asset where 
	  idpiece = 1 and
	  nassetacquire=%<assetacquire.nassetacquire>%
]{I}






')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI003','1','U','assetacquire','S','S','S','N','N',{ts '2007-11-12 10:32:13.437'},'SA','Il numero di inventario %<assetview.ninventory>%  è già stato assegnato all''inventario %<assetacquireview.codeinventory>%','N','--post
[select count(*) from asset 
 join assetacquire
 on assetacquire.nassetacquire= asset.nassetacquire
	where assetacquire.idinventory = %<assetacquire.idinventory>%
		and idpiece=1]{I} =
[select count (distinct ninventory) from asset 
 join assetacquire
 on assetacquire.nassetacquire= asset.nassetacquire
	where assetacquire.idinventory = %<assetacquire.idinventory>%
	and idpiece=1
	]{I} 
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI004','1','U','assetacquire','S','S','S','N','N',{ts '2008-07-30 11:12:44.827'},'SARA','Il carico di cespiti n. %<nassetacquire>% non può essere modificato in quanto è incluso nel buono di carico %<assetacquireview.codeassetloadkind>% n. %<assetacquireview.nassetload>%','S','(%<assetacquire.idassetload>% is null)
OR
(
	(%<assetacquire.flag>% & 1 = &<assetacquire.flag>& & 1)
AND
	(ISNULL(%<assetacquire.adate>% , {d ''1900-01-01''} )=ISNULL( &<assetacquire.adate>&, {d ''1900-01-01''} ))
AND
	(ISNULL(%<assetacquire.idreg>% ,'''') = ISNULL(&<assetacquire.idreg>&,''''))
AND
	(ISNULL(%<assetacquire.description>%,'''') = ISNULL(&<assetacquire.description>&,''''))
AND
	(ISNULL(%<assetacquire.idmot>%,'''') = ISNULL(&<assetacquire.idmot>&,''''))
AND
	(ISNULL(%<assetacquire.idinventory>%,'''') =ISNULL(&<assetacquire.idinventory>&,''''))
AND
	(%<assetacquire.startnumber>% = &<assetacquire.startnumber>&)
AND
	(ISNULL(%<assetacquire.number>%,0) = ISNULL(&<assetacquire.number>&,0))
AND
	(ISNULL(%<assetacquire.idinv>%,'''') = ISNULL(&<assetacquire.idinv>&,''''))
AND
	(ISNULL(%<assetacquire.taxable>%,0) = ISNULL(&<assetacquire.taxable>&,0))
AND
	(ISNULL(%<assetacquire.taxrate>%,0) = ISNULL(&<assetacquire.taxrate>&,0))
AND
	(ISNULL(%<assetacquire.discount>%,0) = ISNULL(&<assetacquire.discount>&,0))
AND
	(ISNULL(%<assetacquire.tax>%,0) = ISNULL(&<assetacquire.tax>&,0))
AND
	(ISNULL(%<assetacquire.abatable>%,0) = ISNULL(&<assetacquire.abatable>&,0))
)
OR
(%<assetacquire.flag>% & 2 <> 0)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI006','1','U','assetacquire','S','S','S','N','N',{ts '2007-11-08 15:18:25.750'},'SA','Impossibile effettuare l''operazione! I cespiti inseriti nel carico bene n. %<assetacquire.nassetacquire>%  risultano già scaricati.','S','([select count(*) from asset 
 join assetacquire
 on assetacquire.nassetacquire= asset.nassetacquire
 where assetacquire.nassetacquire = %<assetacquire.nassetacquire>%
 and asset.idassetunload is not null]{N} = [0.0])
OR
(
	(%<assetacquire.flag>% & 1 = &<assetacquire.flag>& & 1)
AND
	(ISNULL(%<assetacquire.adate>% , {d ''1900-01-01''} )=ISNULL( &<assetacquire.adate>&, {d ''1900-01-01''} ))
AND
	(ISNULL(%<assetacquire.idreg>% ,'''') = ISNULL(&<assetacquire.idreg>&,''''))
AND
	(ISNULL(%<assetacquire.idmot>%,'''') = ISNULL(&<assetacquire.idmot>&,''''))
AND
	(ISNULL(%<assetacquire.idinventory>%,'''') =ISNULL(&<assetacquire.idinventory>&,''''))
AND
	(%<assetacquire.startnumber>% = &<assetacquire.startnumber>&)
AND
	(ISNULL(%<assetacquire.number>%,0) = ISNULL(&<assetacquire.number>&,0))
AND
	(ISNULL(%<assetacquire.idinv>%,'''') = ISNULL(&<assetacquire.idinv>&,''''))
AND
	(ISNULL(%<assetacquire.taxable>%,0) = ISNULL(&<assetacquire.taxable>&,0))
AND
	(ISNULL(%<assetacquire.taxrate>%,0) = ISNULL(&<assetacquire.taxrate>&,0))
AND
	(ISNULL(%<assetacquire.discount>%,0) = ISNULL(&<assetacquire.discount>&,0))
AND
	(ISNULL(%<assetacquire.idmankind>%,'''') = ISNULL(&<assetacquire.idmankind>&,''''))
AND
	(ISNULL(%<assetacquire.yman>%,1900) = ISNULL(&<assetacquire.yman>&,1900))
AND
	(ISNULL(%<assetacquire.nman>% ,0) =ISNULL(&<assetacquire.nman>&,0))
AND
	(ISNULL(%<assetacquire.rownum>%,0) = ISNULL(&<assetacquire.rownum>&,0))
AND
	(ISNULL(%<assetacquire.description>%,'''') = ISNULL(&<assetacquire.description>&,''''))
AND  
      (ISNULL(%<assetacquire.idassetload>%,'''') = ISNULL(&<assetacquire.idassetload>&,''''))
AND
	(ISNULL(%<assetacquire.tax>%,0) = ISNULL(&<assetacquire.tax>&,0))
AND
	(ISNULL(%<assetacquire.abatable>%,0) = ISNULL(&<assetacquire.abatable>&,0))

)




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI007','1','U','assetacquire','S','S','S','N','N',{ts '2006-10-25 16:26:41.703'},'''SA''','La quantità di cespiti disponibili nel buono d''ordine è INSUFFICIENTE!
','S','(
ISNULL(&<assetacquire.idmankind>&,'''') <> ISNULL(%<assetacquire.idmankind>%,'''')
OR ISNULL(&<assetacquire.yman>&,0) <> ISNULL(%<assetacquire.yman>%,0)
OR ISNULL(&<assetacquire.nman>&,0) <> ISNULL(%<assetacquire.nman>%,0)
OR ISNULL(&<assetacquire.rownum>&,0) <> ISNULL(%<assetacquire.rownum>%,0)
)
OR
(
%<assetacquire.idmankind>% IS NULL
OR %<assetacquire.yman>% IS NULL
OR %<assetacquire.nman>% IS NULL
OR %<assetacquire.rownum>% IS NULL
)
OR
(
[SELECT ISNULL(residual,0)
FROM mandatedetailavailable
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N} 
+ &<assetacquire.number>&
- %<assetacquire.number>%
>= 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI007','2','U','assetacquire','S','S','S','N','N',{ts '2006-10-26 10:49:22.897'},'''SA''','La quantità di cespiti disponibili nel buono d''ordine è INSUFFICIENTE!','S','(
ISNULL(&<assetacquire.idmankind>&,'''') = ISNULL(%<assetacquire.idmankind>%,'''')
AND ISNULL(&<assetacquire.yman>&,0)  = ISNULL(%<assetacquire.yman>%,0)
AND ISNULL(&<assetacquire.nman>&,0) = ISNULL(%<assetacquire.nman>%,0)
AND ISNULL(&<assetacquire.rownum>&,0) = ISNULL(%<assetacquire.rownum>%,0)
)
OR
(
%<assetacquire.idmankind>% IS NULL
OR %<assetacquire.yman>% IS NULL
OR %<assetacquire.nman>% IS NULL
OR %<assetacquire.rownum>% IS NULL
)
OR
(
[SELECT ISNULL(residual,0)
FROM mandatedetailavailable
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N} 
- %<assetacquire.number>%
>= 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI008','1','U','assetacquire','S','S','S','N','N',{ts '2006-10-26 10:59:37.287'},'''SA''','La classificazione inventariale del carico cespite N. %<assetacquire.nassetacquire>% è differente da quella del buono d''ordine','S','(%<assetacquire.idmankind>% IS NULL
OR %<assetacquire.yman>% IS NULL
OR %<assetacquire.nman>% IS NULL
OR %<assetacquire.rownum>% IS NULL)
OR
(
[SELECT MAX(ISNULL(idinv,''''))
FROM mandatedetail
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{C} = %<assetacquire.idinv>%
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI010','1','U','assetacquire','S','S','S','N','N',{ts '2007-11-07 10:22:57.610'},'SA','La categoria della classificazione inventariale del carico cespite è differente da quella dei carichi parte accessori.','N','(ISNULL(%<assetacquire.idinv>%,'''') = ISNULL(&<assetacquire.idinv>&,''''))

OR

([SELECT COUNT(DISTINCT codeinv_lev1) 
  FROM assetview
  WHERE assetview.nassetacquire =  %<assetacquire.nassetacquire>%
   ]{I} 
  = 1
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI011','1','U','assetacquire','S','S','S','N','N',{ts '2007-11-09 10:43:04.703'},'SARA','Il tipo del buono di carico  non è coerente con il tipo inventario del carico cespite.','S','%<assetacquire.idassetload>% IS NULL
OR
([select idassetloadkind from assetload where idassetload= %<assetacquire.idassetload>%]{I} IS NULL)
OR
(
[select inventory.flag from assetloadkind 
  join inventory
   on  assetloadkind.idinventory = inventory.idinventory
where  assetloadkind.idassetloadkind = 
[select idassetloadkind from assetload where idassetload= %<assetacquire.idassetload>%]{I}
]{I} & 1 <> 0
)
OR
(
[select idinventory from assetloadkind 
	where  idassetloadkind = 
[select idassetloadkind from assetload where idassetload= %<assetacquire.idassetload>%]{I}
]{I}= %<assetacquire.idinventory>% 
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI013','1','U','assetacquire','S','S','S','N','N',{ts '2008-01-10 16:11:33.943'},'SARA','L''IVA del dettaglio dell''ordine %<assetacquire.idmankind>%,  %<assetacquire.yman>% / %<assetacquire.nman>%,  deve essere uguale all''IVA totale dei carichi cespite/accessori ad esso collegati.','N','((%<assetacquire.number>% = &<assetacquire.number>&)
AND
(%<assetacquire.tax>% = &<assetacquire.tax>&))
OR
(%<assetacquire.idmankind>% IS NULL
)
OR
(
[SELECT ISNULL(residual,0)
FROM mandatedetailavailable
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N}
> 0
)
OR
(
[SELECT SUM(ISNULL(tax,0))
FROM assetacquire
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND rownum = %<assetacquire.rownum>%]{N} 
= 
ISNULL([SELECT SUM(iva_euro)
FROM mandatedetailview
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N},0)
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI013','2','U','assetacquire','S','S','S','N','N',{ts '2008-05-08 17:11:47.067'},'NINO','L''imponibile del dettaglio dell''ordine %<assetacquire.idmankind>%,  %<assetacquire.yman>% / %<assetacquire.nman>%,  deve essere uguale all''imponibile totale dei carichi cespite/accessori ad esso collegati.','N','((%<assetacquire.number>% = &<assetacquire.number>&)
AND
(%<assetacquire.taxable>% = &<assetacquire.taxable>&))
OR
(%<assetacquire.idmankind>% IS NULL
)
OR
(
[SELECT ISNULL(residual,0)
FROM mandatedetailavailable
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N} > 0
)
OR
(
[SELECT SUM(ROUND(ISNULL(taxable,0)* ISNULL(number,0)*(1-CONVERT(DECIMAL(19,6),ISNULL(discount,0)))
		,2))
FROM assetacquire
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND rownum = %<assetacquire.rownum>%]{N} 
= 
ISNULL([SELECT  SUM(taxable_euro) FROM mandatedetailgroupview
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N},0)
)


 




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI013','3','U','assetacquire','S','S','S','N','N',{ts '2008-07-22 13:55:52.407'},'NINO','L''IVA detraibile  dei dettagli fatture associati al dettaglio  n. %<assetacquire.rownum>% dell''ordine %<assetacquire.idmankind>%,  %<assetacquire.yman>% / %<assetacquire.nman>%,  deve essere uguale all''IVA detraibile  totale dei carichi cespite/accessori ad esso collegati.','N','((%<assetacquire.number>% = &<assetacquire.number>&)
AND
(%<assetacquire.abatable>% = &<assetacquire.abatable>&))
OR
(%<assetacquire.idmankind>% IS NULL
)
OR
(
[SELECT ISNULL(residual,0)
FROM mandatedetailavailable
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N}
> 0
)
OR
(
[SELECT COUNT(*)
FROM invoicedetail
join mandatedetail
	on invoicedetail.idmankind = mandatedetail.idmankind
	and invoicedetail.yman = mandatedetail.yman
	and invoicedetail.nman = mandatedetail.nman
	and invoicedetail.manrownum = mandatedetail.rownum
WHERE invoicedetail.idmankind = %<assetacquire.idmankind>%
AND invoicedetail.yman = %<assetacquire.yman>%
AND invoicedetail.nman = %<assetacquire.nman>%
AND mandatedetail.idgroup = %<assetacquire.rownum>%
--AND manrownum = %<assetacquire.rownum>%
]{I} = 0
)
OR
(
[SELECT SUM(ISNULL(abatable,0))
FROM assetacquire
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND rownum = %<assetacquire.rownum>%]{N} =
[SELECT SUM(
	ROUND((ISNULL(invoicedetail.tax,0) - ISNULL(invoicedetail.unabatable,0))
		* invoicekindyearview.abatablerate,2))
FROM invoicedetail
JOIN invoicekindyearview
	ON invoicedetail.idinvkind = invoicekindyearview.idinvkind
	AND invoicedetail.yinv = invoicekindyearview.ayear
join mandatedetail
	on invoicedetail.idmankind = mandatedetail.idmankind
	and invoicedetail.yman = mandatedetail.yman
	and invoicedetail.nman = mandatedetail.nman
	and invoicedetail.manrownum = mandatedetail.rownum
WHERE invoicedetail.idmankind = %<assetacquire.idmankind>%
AND invoicedetail.yman = %<assetacquire.yman>%
AND invoicedetail.nman = %<assetacquire.nman>%
--AND invoicedetail.manrownum = %<assetacquire.rownum>%
AND mandatedetail.idgroup = %<assetacquire.rownum>%
]{N}
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI014','1','U','assetacquire','S','S','S','N','N',{ts '2006-10-30 12:11:12.110'},'''SA''','L''IVA del dettaglio dell''ordine %<assetacquire.idmankind>%,  %<assetacquire.yman>% / %<assetacquire.nman>%,  deve essere maggiore o uguale dell''IVA totale dei carichi cespite/accessori ad esso collegati.','N','((%<assetacquire.number>% = &<assetacquire.number>&)
AND
(%<assetacquire.tax>% = &<assetacquire.tax>&))
OR
(%<assetacquire.idmankind>% IS NULL
)
OR
(
[SELECT ISNULL(residual,0)
FROM mandatedetailavailable
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N} = 0
)
OR
(
[SELECT SUM(ISNULL(tax,0))
FROM assetacquire
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND rownum = %<assetacquire.rownum>%]{N} <=
ISNULL([SELECT SUM(tax)
FROM mandatedetail
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N},0)
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI014','2','U','assetacquire','S','S','S','N','N',{ts '2006-10-30 12:11:28.577'},'''SA''','L''imponibile del dettaglio dell''ordine %<assetacquire.idmankind>%,  %<assetacquire.yman>% / %<assetacquire.nman>%,  deve essere maggiore o  uguale dell''imponibile totale dei carichi cespite/accessori ad esso collegati.','N','((%<assetacquire.number>% = &<assetacquire.number>&)
AND
(%<assetacquire.taxable>% = &<assetacquire.taxable>&))
OR
(%<assetacquire.idmankind>% IS NULL
)
OR
(
[SELECT ISNULL(residual,0)
FROM mandatedetailavailable
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N} = 0
)
OR
(
[SELECT SUM(ROUND(ISNULL(taxable,0) * ISNULL(number,0)*(1-ISNULL(discount,0)),2))
FROM assetacquire
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND rownum = %<assetacquire.rownum>%]{N} <=
ISNULL([SELECT SUM(taxable_euro)
FROM mandatedetailview
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N},0)
)



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI014','3','U','assetacquire','S','S','S','N','N',{ts '2006-10-30 12:11:52.937'},'''SA''','L''IVA detraibile dei dettagli fatture associati al dettaglio dell''ordine %<assetacquire.idmankind>%,  %<assetacquire.yman>% / %<assetacquire.nman>%,  deve essere maggiore o uguale dell''IVA detraibile  totale dei carichi cespite/accessori ad esso collegati.','N','((%<assetacquire.number>% = &<assetacquire.number>&)
AND
(%<assetacquire.abatable>% = &<assetacquire.abatable>&))
OR
(%<assetacquire.idmankind>% IS NULL
)
OR
(
[SELECT ISNULL(residual,0)
FROM mandatedetailavailable
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N} = 0
)
OR
(
[SELECT COUNT(*)
FROM invoicedetail
join mandatedetail
	on invoicedetail.idmankind = mandatedetail.idmankind
	and invoicedetail.yman = mandatedetail.yman
	and invoicedetail.nman = mandatedetail.nman
	and invoicedetail.manrownum = mandatedetail.rownum
WHERE invoicedetail.idmankind = %<assetacquire.idmankind>%
AND invoicedetail.yman = %<assetacquire.yman>%
AND invoicedetail.nman = %<assetacquire.nman>%
AND mandatedetail.idgroup = %<assetacquire.rownum>%]{I} = 0
)
OR
(
[SELECT SUM(ISNULL(abatable,0))
FROM assetacquire
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND rownum = %<assetacquire.rownum>%]{N} <=
[SELECT SUM(
	ROUND((ISNULL(invoicedetail.tax,0) - ISNULL(invoicedetail.unabatable,0))
		* invoicekindyearview.abatablerate,2))
FROM invoicedetail
JOIN invoicekindyearview
	ON invoicedetail.idinvkind = invoicekindyearview.idinvkind
	AND invoicedetail.yinv = invoicekindyearview.ayear
join mandatedetail
	on invoicedetail.idmankind = mandatedetail.idmankind
	and invoicedetail.yman = mandatedetail.yman
	and invoicedetail.nman = mandatedetail.nman
	and invoicedetail.manrownum = mandatedetail.rownum
WHERE invoicedetail.idmankind = %<assetacquire.idmankind>%
AND invoicedetail.yman = %<assetacquire.yman>%
AND invoicedetail.nman = %<assetacquire.nman>%
AND mandatedetail.idgroup = %<assetacquire.rownum>%]{N}
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI014','4','U','assetacquire','S','S','S','N','N',{ts '2008-07-28 10:33:58.890'},'SARA','In presenza di dettagli fatture associati al dettaglio dell''ordine %<assetacquire.idmankind>%,  %<assetacquire.yman>% / %<assetacquire.nman>%, deve essere selezionata l''opzione "Calcola IVA detraibile da fattura"  nella scheda Cespiti in Configurazione-->Configurazione','N','((%<assetacquire.number>% = &<assetacquire.number>&)
AND
(%<assetacquire.abatable>% = &<assetacquire.abatable>&))
OR
(%<assetacquire.idmankind>% IS NULL
)
OR
(
[SELECT COUNT(*)
FROM invoicedetail
join mandatedetail
	on invoicedetail.idmankind = mandatedetail.idmankind
	and invoicedetail.yman = mandatedetail.yman
	and invoicedetail.nman = mandatedetail.nman
	and invoicedetail.manrownum = mandatedetail.rownum
WHERE invoicedetail.idmankind = %<assetacquire.idmankind>%
AND invoicedetail.yman = %<assetacquire.yman>%
AND invoicedetail.nman = %<assetacquire.nman>%
AND mandatedetail.idgroup = %<assetacquire.rownum>%]{I} = 0
)
OR
(
[SELECT ISNULL(linktoinvoice,''N'')
FROM config
WHERE ayear = %<sys_esercizio>%
]{C} = ''S''
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI015','1','U','assetacquire','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','L''importo unitario dell''IVA moltiplicato per la quantità non corrisponde a quello dell''IVA totale','N','

((%<assetacquire.number>% = &<assetacquire.number>&)
AND
(%<assetacquire.tax>% = &<assetacquire.tax>&))

OR
(
ISNULL(ROUND(ROUND((%<assetacquire.tax>%/%<assetacquire.number>%),2) * %<assetacquire.number>%,2),0)
= ROUND(%<assetacquire.tax>%,2)
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI015','2','U','assetacquire','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','L''importo unitario  dell''IVA detraibile moltiplicato per la quantità non corrisponde a quello dell''IVA detraibile totale','N','
((%<assetacquire.number>% = &<assetacquire.number>&)
AND
(%<assetacquire.abatable>% = &<assetacquire.abatable>&))
OR
(
ISNULL(ROUND(ROUND((%<assetacquire.abatable>%/%<assetacquire.number>%),2) * %<assetacquire.number>%,2),0)
= ROUND(%<assetacquire.abatable>%,2)
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI016 ','1','U','assetacquire','S','S','S','N','N',{ts '2006-01-03 11:56:22.627'},'Software and more','L''importo  dell''IVA totale  deve essere maggiore o  uguale dell''importo dell''IVA detraibile del carico cespite/accessori.','S','(%<assetacquire.tax>% = &<assetacquire.tax>&
AND
%<assetacquire.abatable>% = &<assetacquire.abatable>&)
OR
(
ISNULL(%<assetacquire.tax>%,0) -ISNULL(%<assetacquire.abatable>%,0) >= 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI017','1','U','assetacquire','S','S','S','N','N',{ts '2008-05-23 15:28:38.047'},'NINO','Non è possibile scegliere un buono d''ordine se non sono stati specificati i valori di : Esercizio, Numero e Dettaglio.','N','(
%<assetacquire.idmankind>% is null 
and %<assetacquire.nman>% is null 
and %<assetacquire.yman>% is null 
and %<assetacquire.rownum>%  is null) 
OR 
(
%<assetacquire.idmankind>% is not null 
and %<assetacquire.nman>% is not null 
and %<assetacquire.yman>% is not null 
and %<assetacquire.rownum>% is not null)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI018','1','U','assetacquire','S','S','S','N','N',{ts '2007-11-09 16:10:35.953'},'SARA','Il carico bene crea un SALTO nella numerazione inventario. Non esiste il bene di numero precedente al %<assetacquire.startnumber>% dell''inventario %<assetacquireview.inventory>%','N','--post
%<assetacquire.flag>% & 4 <> 0
or
[select count(*) from asset  B 
	join assetacquire C on B.nassetacquire=C.nassetacquire
	where B.ninventory = 
	%<assetacquire.startnumber>%	-1
	and C.idinventory= %<assetacquire.idinventory>%
	
]{I}
>0
or
%<assetacquire.startnumber>%=1
or
%<assetacquire.flag>% & 2 <> 0
or
%<assetacquire.startnumber>%=
isnull([select startnumber from inventory where idinventory=
  %<assetacquire.idinventory>%]{I},0)+1
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI023','2','U','assetacquire','S','S','S','N','N',{ts '2007-11-08 15:14:46.937'},'SA','I cespiti o gli accessori caricati come nuovi dovranno essere inclusi in un buono di carico.','S','%<assetacquire.flag>% & 2 <> 0
OR
%<assetacquire.flag>% & 1 <> 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI024','1','U','assetacquire','S','S','S','N','N',{ts '2008-06-27 11:29:58.063'},'ASSISTENZA','La data di creazione del cespite o dell''accessorio di tipo:  %<inventory.description>%, del carico cespite n. %<assetacquire.nassetacquire>%  di inventario iniziale n. %<assetacquire.startnumber>% registrati come beni posseduti deve essere precedente all''esercizio  del buono di carico','N','-- caso bene posseduto
%<assetacquire.flag>% & 2 = 0
OR
%<assetacquire.idassetload>% IS NULL
OR
%<assetacquire.flag>% & 1 = 0
OR 
[SELECT COUNT(*) 
 FROM   asset
 WHERE  nassetacquire = %<assetacquire.nassetacquire>%
   AND  lifestart IS NOT NULL
   AND  YEAR(lifestart) > 
[select yassetload from assetload 
	where idassetload= %<assetacquire.idassetload>%]{I}
]{I}= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI024','2','U','assetacquire','S','S','S','N','N',{ts '2011-09-21 10:23:45.253'},'sa','La data di creazione del cespite o dell''accessorio di tipo: %<inventory.description>%, del carico cespite n. %<assetacquire.nassetacquire>%  di inventario iniziale n. %<assetacquire.startnumber>% , registrati come beni nuovi, deve essere precedente alla data contabile del buono di carico','N','-- caso bene nuovo
%<assetacquire.flag>% & 2 <> 0
OR
%<assetacquire.idassetload>% IS NULL
OR 
%<assetacquire.flag>% & 1 = 0
OR 

[(SELECT COUNT(*) 
 FROM   asset
 WHERE  nassetacquire = %<assetacquire.nassetacquire>%
   AND  lifestart IS NOT NULL 
   AND DATEDIFF(d,lifestart, (SELECT adate FROM assetload
			    WHERE idassetload = %<assetacquire.idassetload>%)) < 0
)]{I}= 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI033','1','U','assetacquire','S','S','S','N','N',{ts '2007-11-08 15:37:34.140'},'SA','Non è consentito modificare il Carico Cespite/Accessorio in quanto già trasmesso ','N','(ISNULL(%<assetacquire.transmitted>%,''N'') <> ''S'')
OR
(
 ISNULL(&<assetacquire.abatable>&,0) = 
 ISNULL(%<assetacquire.abatable>%,0) 
 AND 
 ISNULL(&<assetacquire.adate>&,{d ''1900-01-01''}) = 
 ISNULL(%<assetacquire.adate>%,{d ''1900-01-01''}) 
 AND 
 ISNULL(&<assetacquire.description>&,'''') = 
 ISNULL(%<assetacquire.description>%,'''') 
 AND 
 ISNULL(&<assetacquire.discount>&,0) = 
 ISNULL(%<assetacquire.discount>%,0) 
 AND 
 ISNULL(&<assetacquire.flag>&, 1) & 1 = 
 ISNULL(%<assetacquire.flag>%, 1) & 1
 AND 
 ISNULL(&<assetacquire.idinv>&,''S'') = 
 ISNULL(%<assetacquire.idinv>%,''S'') 
 AND 
 ISNULL(&<assetacquire.idinventory>&,''S'') = 
 ISNULL(%<assetacquire.idinventory>%,''S'') 
 AND 
 ISNULL(&<assetacquire.idmankind>&,''S'') = 
 ISNULL(%<assetacquire.idmankind>%,''S'') 
 AND 
 ISNULL(&<assetacquire.idmot>&,''S'') = 
 ISNULL(%<assetacquire.idmot>%,''S'') 
 AND 
 ISNULL(&<assetacquire.idreg>&,0) = 
 ISNULL(%<assetacquire.idreg>%,0) 
 AND 
 ISNULL(&<assetacquire.flag>&, 4) & 4 = 
 ISNULL(%<assetacquire.flag>%, 4) & 4
 AND 
 ISNULL(&<assetacquire.flag>&, 2) & 2 = 
 ISNULL(%<assetacquire.flag>%, 2) & 2
 AND 
 ISNULL(&<assetacquire.nman>&,0) = 
 ISNULL(%<assetacquire.nman>%,0)
 AND 
 ISNULL(&<assetacquire.number>&,0) = 
 ISNULL(%<assetacquire.number>%,0)
 AND 
 ISNULL(&<assetacquire.rownum>&,0) = 
 ISNULL(%<assetacquire.rownum>%,0)
 AND 
 ISNULL(&<assetacquire.startnumber>&,0) = 
 ISNULL(%<assetacquire.startnumber>%,0)
 AND 
 ISNULL(&<assetacquire.tax>&,0) = 
 ISNULL(%<assetacquire.tax>%,0)
 AND 
 ISNULL(&<assetacquire.taxable>&,0) = 
 ISNULL(%<assetacquire.taxable>%,0)
 AND 
 ISNULL(&<assetacquire.taxrate>&,0) = 
 ISNULL(%<assetacquire.taxrate>%,0)
 AND 
 ISNULL(&<assetacquire.yman>&,0) = 
 ISNULL(%<assetacquire.yman>%,0)
)



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI033','2','U','assetacquire','S','S','S','N','N',{ts '2007-11-08 15:29:07.953'},'SA','Non è consentito aggiungere o rimuovere un Carico da un Buono di Carico in quanto il Carico è stato già trasmesso','N','(
 ISNULL(&<assetacquire.idassetload>&, 0) = 
 ISNULL(%<assetacquire.idassetload>%, 0) 
)
OR
(
ISNULL(%<assetacquire.transmitted>%,''N'') <> ''S''
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI033','3','U','assetacquire','S','S','S','N','N',{ts '2007-11-08 15:30:01.017'},'SA','Non è consentito aggiungere o rimuovere l''opzione "Da Includere in un Buono di Carico" in quanto il Carico è stato già trasmesso','N','(
 ISNULL(&<assetacquire.flag>&, 1) & 1 = 
 ISNULL(%<assetacquire.flag>%, 1) & 1
)
OR
(
ISNULL(%<assetacquire.transmitted>%,''N'') <> ''S''
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI034','1','U','assetacquire','S','S','S','N','N',{ts '2007-06-04 10:58:37.767'},'''SARA''','Non è consentito impostare manualmente un Carico Cespite o Accessorio come "Trasmesso"','S','(
 ISNULL(&<assetacquire.transmitted>&,''N'') = 
 ISNULL(%<assetacquire.transmitted>%,''N'') 
)
OR
(ISNULL(%<assetacquire.transmitted>%,''N'') <> ''S'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI037','1','U','assetacquire','S','S','S','N','N',{ts '2008-07-30 11:07:39.920'},'SARA','Il carico cespite può essere associato solo ad un buono di carico di esercizio precedente essendo un cespite posseduto.','N','-- Se carico cespite è posseduto l''esercizio del buono deve
-- essere precedente all''ultimo dove è stata inserita la sit. patrimoniale iniziale
%<assetacquire.idassetload>% IS NULL
OR
(%<assetacquire.flag>% & 2) = 0
OR 
[SELECT yassetload
FROM assetload
WHERE idassetload = %<assetacquire.idassetload>%]{I}
<
[SELECT MAX(yvar)
FROM assetvar
WHERE (flag & 1) = 0
]{I}
OR
[SELECT COUNT(*)
FROM assetvar
WHERE (flag & 1) = 0
]{I} = 0
OR
(
--flagload
	(%<assetacquire.flag>% & 1 = &<assetacquire.flag>& & 1)
AND
	(ISNULL(%<assetacquire.idassetload>%,0) =ISNULL( &<assetacquire.idassetload>&,0))
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI037','2','U','assetacquire','S','S','S','N','N',{ts '2008-07-30 11:08:01.127'},'SARA','Il carico cespite può essere associato solo ad un buono di carico di esercizio corrente essendo un cespite nuovo.','N','-- Se carico cespite è nuovo l''esercizio del buono deve
-- essere uguale all''ultimo dove è stata inserita la sit. patrimoniale iniziale
%<assetacquire.idassetload>% IS NULL
OR
(%<assetacquire.flag>% & 2) <> 0
OR 
[SELECT yassetload
FROM assetload
WHERE idassetload = %<assetacquire.idassetload>%]{I}
>=
[SELECT MAX(yvar)
FROM assetvar
WHERE (flag & 1) = 0
]{I}
OR
[SELECT COUNT(*)
FROM assetvar
WHERE (flag & 1) = 0
]{I} = 0
OR
(	
--           flagload
	(%<assetacquire.flag>% & 1 = &<assetacquire.flag>& & 1) 
AND
	(ISNULL(%<assetacquire.idassetload>%,0) =ISNULL( &<assetacquire.idassetload>&,0))
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI039','1','U','assetacquire','S','S','S','N','N',{ts '2008-04-11 13:57:30.073'},'NINO','La classificazione inventariale scelta non è congrua con il tipo di inventario associato al carico','S','-- Controllo che scatta solo su idinv_allow
[SELECT idinv_allow
FROM inventorykind
JOIN inventory
	ON inventorykind.idinventorykind = inventory.idinventorykind
WHERE inventory.idinventory = %<assetacquire.idinventory>%
]{I} IS NULL
OR
[SELECT idinv_allow
FROM inventorykind
JOIN inventory
	ON inventorykind.idinventorykind = inventory.idinventorykind
WHERE inventory.idinventory = %<assetacquire.idinventory>%
]{I} in (SELECT idparent
FROM inventorytreelink
WHERE idchild = %<assetacquire.idinv>%)
OR
(
&<assetacquire.idinv>& = %<assetacquire.idinv>%
AND 
&<assetacquire.idinventory>& = %<assetacquire.idinventory>%
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI039','2','U','assetacquire','S','S','S','N','N',{ts '2008-04-11 14:05:56.133'},'NINO','La classificazione inventariale scelta non è congrua con il tipo di inventario associato al carico','S','-- Controllo che scatta solo su idinv_deny
[SELECT idinv_deny
FROM inventorykind
JOIN inventory
	ON inventorykind.idinventorykind = inventory.idinventorykind
WHERE inventory.idinventory = %<assetacquire.idinventory>%
]{I} IS NULL
OR
[SELECT idinv_deny
FROM inventorykind
JOIN inventory
	ON inventorykind.idinventorykind = inventory.idinventorykind
WHERE inventory.idinventory = %<assetacquire.idinventory>%
]{I} not in (SELECT idparent
FROM inventorytreelink
WHERE idchild = %<assetacquire.idinv>%)
OR
(
&<assetacquire.idinv>& = %<assetacquire.idinv>%
AND 
&<assetacquire.idinventory>& = %<assetacquire.idinventory>%
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI042','1','U','assetacquire','S','S','S','N','N',{ts '2009-02-18 13:32:58.453'},'SA','Si stanno inserendo nello stesso buono di carico cespiti di categorie inventariali diverse','N','
([SELECT COUNT(DISTINCT assetview.codeinv_lev1) 
  FROM assetview
  WHERE assetview.idassetloadkind=  %<assetacquire.idassetloadkind>%
	and assetview.yassetload=  %<assetacquire.yassetload>%
	and assetview.nassetload=  %<assetacquire.nassetload>%
   ]{I} 
  <= 1
)
OR
  %<assetacquire.idassetloadkind>% is null
OR
 %<assetacquire.yassetload>% is null
OR
 %<assetacquire.nassetload>% is null


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI043','1','U','assetacquire','S','S','S','N','N',{ts '2010-01-21 17:02:03.030'},'SARA','La classificazione inventariale scelta richiede che siano imputate delle informazioni aggiuntive obbligatorie sui cespiti del carico n° %<assetacquire.nassetacquire>% .','N','(
&<assetacquire.idinv>& = %<assetacquire.idinv>%
)
OR
NOT EXISTS 
(
SELECT M.fieldcode 
FROM   multifieldkind M
JOIN   inventorytreemultifieldkind I
ON     I.idmultifieldkind = M.idmultifieldkind
AND    I.idinv = %<assetacquire.idinv>%
JOIN   asset A
ON A.nassetacquire = %<assetacquire.nassetacquire>%
WHERE PATINDEX(''%§''+M.fieldcode+''|%'', ''§''+ISNULL(A.multifield,'''')) = 0
AND ISNULL(M.allownull,''S'')= ''N''
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI044','1','U','assetacquire','S','S','S','N','N',{ts '2011-06-20 16:15:10.420'},'assistenza','E'' necessario attribuire il Codice Ubicazione per ogni Cespite','N','[SELECT idpiece FROM asset WHERE 
	asset.nassetacquire = %<assetacquire.nassetacquire>%]{I} > 1

OR

[SELECT count(*)  FROM assetlocation WHERE
	idasset = [SELECT idasset from asset
		   WHERE nassetacquire = %<assetacquire.nassetacquire>%]{I}
]{I} > 0
	')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI044','2','U','assetacquire','S','S','S','N','N',{ts '2011-06-20 16:15:20.127'},'assistenza','E'' necessario attribuire il Responsabile ad ogni Cespite','N','[SELECT idpiece FROM asset WHERE 
	asset.nassetacquire = %<assetacquire.nassetacquire>%]{I} > 1

OR

[SELECT count(*)  FROM assetmanager WHERE
	idasset = [SELECT idasset from asset
		   WHERE nassetacquire = %<assetacquire.nassetacquire>%]{I}
]{I} > 0
	')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','1','U','assetacquire','S','S','S','N','N',{ts '2013-05-04 15:10:37.330'},'assistenza','Il carico cespite non può essere inserito in un buono di carico. Esiste una variazione iniziale nell''anno successivo.','N','ISNULL(%<assetacquire.idassetload>%, 0) =0
OR
ISNULL(%<assetacquire.idassetload>%, 0) =ISNULL(&<assetacquire.idassetload>&, 0) 
OR
[SELECT count(*) from assetvar
	WHERE yvar = 
	[select year(ratificationdate)from assetload where idassetload =
		%<assetacquire.idassetload>%]{I}+1
	and (flag&1)=0
]{I} 	 = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','2','U','assetacquire','S','S','S','N','N',{ts '2013-05-04 15:11:18.743'},'assistenza','Il carico cespite non può essere rimosso da un buono di carico. Esiste una variazione iniziale nell''anno successivo.','N','ISNULL(&<assetacquire.idassetload>&, 0) =0
OR
ISNULL(%<assetacquire.idassetload>%, 0) =ISNULL(&<assetacquire.idassetload>&, 0) 
OR
[SELECT count(*) from assetvar
	WHERE yvar = 
	[select year(ratificationdate)from assetload where idassetload =
		&<assetacquire.idassetload>&]{I}+1
	and (flag&1)=0
]{I} 	 = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','2','U','assetacquire','S','S','S','N','N',{ts '2012-04-18 08:51:13.227'},'sa','Il carico cespite non può essere inserito in buono di carico. ''%<assetacquireview.inventory>%'' appartiene ad un ente considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','N','(%<assetacquire.flag>% & 2 <> 0)
OR
(ISNULL(%<assetacquire.idassetload>%, 0) = ISNULL(&<assetacquire.idassetload>&, 0))
OR
 %<assetacquire.idassetload>% IS NULL

OR
[(select count(*) 
from assetvar
where assetvar.idinventoryagency = 
	[(select inventory.idinventoryagency
	from inventory 
	where inventory.idinventory = %<assetacquire.idinventory>%
	)]{I}
and assetvar.yvar =
	1 + 	[(select isnull(year(ratificationdate),0) from assetload 
		where idassetload = %<assetacquire.idassetload>%
		)]{I}
and (assetvar.flag & 1)=0)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','3','U','assetacquire','S','S','S','N','N',{ts '2008-03-07 12:46:28.093'},'SA','Il carico cespite non può essere marcato come nuovo.
''%<assetacquireview.inventory>%'' appartiene ad un ente considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','S','(%<assetacquire.flag>% = &<assetacquire.flag>&)
OR
((%<assetacquire.flag>% & 2) <> 0)
OR
[(select count(*) 
from assetvar
where assetvar.idinventoryagency = 
	[(select inventory.idinventoryagency
	from inventory 
	where inventory.idinventory = %<assetacquire.idinventory>%
	)]{I}
and assetvar.yvar = 1+year(%<assetacquire.adate>%)
and (assetvar.flag & 1)=0)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','4','U','assetacquire','S','S','S','N','N',{ts '2012-04-18 08:54:28.430'},'sa','Il carico cespite non può essere scollegato dal buono di carico. ''%<assetacquireview.inventory>%'' appartiene ad un ente considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','S','(%<assetacquire.flag>% & 2 <> 0)
OR
(ISNULL(%<assetacquire.idassetload>%, 0) = ISNULL(&<assetacquire.idassetload>&, 0))
OR
 &<assetacquire.idassetload>&  IS NULL
OR
[(select count(*) 
from assetvar
where assetvar.idinventoryagency = 
	[(select inventory.idinventoryagency
	from inventory 
	where inventory.idinventory = %<assetacquire.idinventory>%
	)]{I}
and assetvar.yvar =
	1 + 	[(select isnull(year(ratificationdate),0) from assetload 
		where idassetload = &<assetacquire.idassetload>&
		)]{I}
and (assetvar.flag & 1)=0)]{I} = 0



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI025','1','D','assetamortization','S','S','S','N','N',{ts '2013-05-10 09:55:38.127'},'assistenza','Non è possibile eliminare la rivalutazione  ufficiale perchè il valore attuale del cespite / accessorio diventerebbe negativo.','S','(
[(SELECT flag
    FROM inventoryamortization
   WHERE idinventoryamortization = 
	   %<assetamortization.idinventoryamortization>%)
]{I} & 2 = 0
)
OR
(
[EXECUTE GetAssetValue %<assetamortization.idasset>%,%<assetamortization.idpiece>%, @outvar OUT]{N} 
-
ISNULL(ROUND(ISNULL(%<assetamortization.assetvalue>%, 0.0) *
	       ISNULL(%<assetamortization.amortizationquota>%,0.0)
					,2),0.0)>= 0
)
OR
(
[SELECT count(*) from asset A
join assetacquire AA on A.nassetacquire=AA.nassetacquire
where 
(
 A.idasset = %<assetamortization.idasset>% AND
 A.idpiece= %<assetamortization.idpiece>%
)
AND
(
 AA.flag & 1 = 0 OR 
 AA.idassetload is not null
)
]{I} = 0
)

OR
(
ISNULL(ROUND(ISNULL(%<assetamortization.assetvalue>%, 0.0) *
	       ISNULL(%<assetamortization.amortizationquota>%,0.0)
					,2),0.0)< 0
)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','1','D','assetamortization','S','S','S','N','N',{ts '2012-04-18 09:05:30.370'},'sa','Non è possibile eliminare la rivalutazione in quanto inclusa in un buono di carico ','S','[(SELECT COUNT(*) from assetvar where
assetvar.yvar = 1+[(select year(ratificationdate) from assetload where idassetload = %<assetamortization.idassetload>%)]{I}
and (assetvar.flag & 1)=0
)]{I} = 0
or 
%<assetamortization.idassetload>% is null')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','2','D','assetamortization','S','S','S','N','N',{ts '2012-04-18 09:04:52.620'},'sa','Non è possibile eliminare l''ammortamento in quanto inclusa in un buono di scarico ','S','[(SELECT COUNT(*) from assetvar where
assetvar.yvar = 1+[(select yassetunload from assetunload where idassetunload = %<assetamortization.idassetunload>%)]{I}
and (assetvar.flag & 1)=0
)]{I} = 0
or 
%<assetamortization.idassetunload>% is null')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI020','1','I','assetamortization','S','S','S','N','N',{ts '2007-11-07 11:06:58.483'},'SA','Non è possibile svalutare e/o rivalutare il cespite %<assetamortization.idasset>% (o parte di esso) in quanto è già incluso in un buono di scarico','N','[SELECT COUNT(*)
FROM asset
WHERE idasset = %<assetamortization.idasset>%
AND idpiece = %<assetamortization.idpiece>%
AND (idassetunload IS NOT NULL OR flag&1 = 0)]{I} = 0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI020','2','I','assetamortization','S','S','S','N','N',{ts '2007-11-07 11:07:19.420'},'SA','Non è possibile svalutare e/o rivalutare l''accessorio %<assetamortization.idasset>% in quanto il cespite principale è già incluso in un buono di scarico.','N','%<assetamortization.idpiece>% = 1

OR

[SELECT COUNT(*)
FROM asset
WHERE idasset = %<assetamortization.idasset>%
AND idpiece = 1
AND (idassetunload IS NOT NULL OR flag&1 = 0)]{I} = 0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI021','1','I','assetamortization','S','S','S','N','N',{ts '2007-11-07 10:55:24.813'},'SA','Non è possibile rivalutare l''accessorio poiché è stato inserito come ''posseduto'' inglobato in un altro cespite. Di questo accessorio si può fare solo lo scarico.','S','[SELECT count(*) from asset A
join assetacquire AA on A.nassetacquire=AA.nassetacquire
where
(
 A.idasset = %<assetamortization.idasset>% AND
 A.idpiece= %<assetamortization.idpiece>%
)
AND
( AA.flag & 2 <> 0 and AA.idassetload is null)

]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI021','2','I','assetamortization','S','S','S','N','N',{ts '2009-09-11 14:05:18.967'},'Nino07032012','Non è possibile rivalutare l''accessorio poiché non risulta in carico. E'' necessario includerlo in un buono di carico o marcarlo come da non inserire in un buono carico (nel caso il buono sia stato fatto fuori dal programma)','N','[SELECT count(*) from asset A
join assetacquire AA on A.nassetacquire=AA.nassetacquire
where 
(
 A.idasset = %<assetamortization.idasset>% AND
 A.idpiece= %<assetamortization.idpiece>%
)
AND
(
 AA.flag&1 = 0 OR 
 AA.idassetload is not null
)
]{I} = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI025','1','I','assetamortization','S','S','S','N','N',{ts '2013-05-10 09:56:37.000'},'assistenza','Non è possibile inserire ulteriori svalutazioni/ammortamenti ufficiali perchè il valore attuale del cespite / accessorio diventerebbe negativo.','N','(
[(SELECT flag
    FROM inventoryamortization
   WHERE idinventoryamortization = 
	   %<assetamortization.idinventoryamortization>%)]{I} & 2 = 0
)
OR
(
[EXECUTE GetAssetValue %<assetamortization.idasset>%,%<assetamortization.idpiece>%, @outvar OUT]{N} 
>=0
)
OR
(
[SELECT count(*) from asset A
join assetacquire AA on A.nassetacquire=AA.nassetacquire
where 
(
 A.idasset = %<assetamortization.idasset>% AND
 A.idpiece= %<assetamortization.idpiece>%
)
AND
(
 AA.flag&1 = 0 OR 
 AA.idassetload is not null
)
]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI025','1','U','assetamortization','S','S','S','N','N',{ts '2013-05-10 09:54:51.170'},'assistenza','Non è possibile modificare l''importo della rivalutazione / svalutazione ufficiale perchè il valore attuale del cespite / accessorio diventerebbe negativo.','S','(
[(SELECT flag
    FROM inventoryamortization
   WHERE idinventoryamortization = 
	   %<assetamortization.idinventoryamortization>%)
]{I} & 2 = 0
)
OR
(
[EXECUTE GetAssetValue %<assetamortization.idasset>%,%<assetamortization.idpiece>%, @outvar OUT]{N} 
-
ISNULL(ROUND(ISNULL(&<assetamortization.assetvalue>&, 0.0) *
	       ISNULL(&<assetamortization.amortizationquota>&,0.0)
					,2),0.0)
+
ISNULL(ROUND(ISNULL(%<assetamortization.assetvalue>%, 0.0) *
	       ISNULL(%<assetamortization.amortizationquota>%,0.0)
					,2),0.0)>= 0
)
OR
(
[SELECT count(*) from asset A
join assetacquire AA on A.nassetacquire=AA.nassetacquire
where 
(
 A.idasset = %<assetamortization.idasset>% AND
 A.idpiece= %<assetamortization.idpiece>%
)
AND
(
 AA.flag & 1 = 0 OR 
 AA.idassetload is not null
)
]{I} = 0
)
OR
(
ISNULL(ROUND(ISNULL(&<assetamortization.assetvalue>&, 0.0) *
	       ISNULL(&<assetamortization.amortizationquota>&,0.0)
					,2),0.0)
<
ISNULL(ROUND(ISNULL(%<assetamortization.assetvalue>%, 0.0) *
	       ISNULL(%<assetamortization.amortizationquota>%,0.0)
					,2),0.0)


)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI028','1','U','assetamortization','S','S','S','N','N',{ts '2007-11-08 13:23:01.317'},'NINO','Non è possibile rimuovere l'' ammortamento %<assetamortization.namortization>%  dal buono di scarico finchè il relativo cespite principale  o accessorio risulta scaricato.','N','(%<assetamortization.idassetunload>% is not null) 
OR
(ISNULL(%<assetamortization.idassetunload>%,0) = 
 ISNULL(&<assetamortization.idassetunload>&,0))
OR 
([(SELECT count(*)
from  asset
where idasset = %<assetamortization.idasset>%
and   idpiece = %<assetamortization.idpiece>%
and   (idassetunload is not null or ((flag & 1) = 0) )
)]{N} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI029','1','U','assetamortization','S','S','S','N','N',{ts '2007-11-08 15:39:20.420'},'SA','L''ammortamento %<assetamortization.namortization>% non può essere incluso in un buono di scarico in quanto il cespite di riferimento è stato già scaricato','S','(%<assetamortization.idassetunload>% is null) 
OR
(ISNULL(%<assetamortization.idassetunload>%,0) = 
 ISNULL(&<assetamortization.idassetunload>&,0))
OR 
[SELECT COUNT(*)
FROM asset
WHERE idasset = %<assetamortization.idasset>% 
AND idpiece = %<assetamortization.idpiece>% 
AND (idassetunload IS NOT NULL OR ((flag & 1) = 0) )]{I} = 0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI030 ','1','U','assetamortization','S','S','S','N','N',{ts '2007-11-08 17:03:02.733'},'NINO','L''ammortamento non può essere modificato in quanto è già inserito in un buono di scarico o marcato come da non inserire in un buono di scarico','S','(ISNULL(%<assetamortization.amortizationquota>%,0) =
ISNULL(&<assetamortization.amortizationquota>&,0)) 
OR
(%<assetamortization.idassetunload>% IS NULL AND 
%<assetamortization.flag>% & 1 <> 0)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI033','1','U','assetamortization','S','S','S','N','N',{ts '2007-11-08 13:25:06.277'},'NINO','Non è consentito modificare l''Ammortamento in quanto già trasmesso','N','ISNULL(%<assetamortization.transmitted>%,''N'') <> ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI033','2','U','assetamortization','S','S','S','N','N',{ts '2007-11-07 11:37:36.627'},'SA','Non è consentito rimuovere l''Ammortamento dal Buono di Scarico in quanto l''Ammortamento risulta già trasmesso','N','(
 ISNULL(&<assetamortization.idassetunload>&,0) = 
 ISNULL(%<assetamortization.idassetunload>%,0) 
)
OR
(%<assetamortization.idassetunload>% is not null) 
OR
(ISNULL(%<assetamortization.transmitted>%,''N'') <> ''S'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI033','3','U','assetamortization','S','S','S','N','N',{ts '2007-11-08 13:28:49.803'},'NINO','Non è consentito rimuovere l''Opzione "Includi in Buono di Scarico" in quanto l''Ammortamento risulta già trasmesso','N','(
 ISNULL(&<assetamortization.flag>&, 1) & 1 = 
 ISNULL(%<assetamortization.flag>%, 1) & 1 
)
OR
((ISNULL(%<assetamortization.flag>%,1) & 1) <> 0) 
OR
(ISNULL(%<assetamortization.transmitted>%,''N'') <> ''S'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI034','1','U','assetamortization','S','S','S','N','N',{ts '2007-06-04 10:59:06.467'},'''SARA''','Non è consentito impostare manualmente un Ammortamento Cespite o Accessorio come "Trasmesso"','S','(
 ISNULL(&<assetamortization.transmitted>&,''N'') = 
 ISNULL(%<assetamortization.transmitted>%,''N'') 
)
OR
(ISNULL(%<assetamortization.transmitted>%,''N'') <> ''S'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','1','U','assetamortization','S','S','S','N','N',{ts '2013-05-04 15:02:34.843'},'assistenza','La rivalutazione non può essere inserita in buono di carico. Esiste una variazione iniziale nell''anno successivo.','N','(ISNULL(%<assetamortization.idassetload>%, 0) = ISNULL(&<assetamortization.idassetload>&, 0))
OR
ISNULL(%<assetamortization.idassetload>%, 0)  = 0
OR
[SELECT count(*) from assetvar
	WHERE yvar = 
	[select year(adate)from assetload where idassetload =
		%<assetamortization.idassetload>%]{I}+1
	and (flag&1)=0
]{I} 	 = 0
OR 
%<assetamortization.flag>% & 1 = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','2','U','assetamortization','S','S','S','N','N',{ts '2013-05-04 15:02:37.193'},'assistenza','La rivalutazione non può essere tolta dal buono di carico. Esiste una variazione iniziale nell''anno successivo.','N','(ISNULL(%<assetamortization.idassetload>%, 0) = ISNULL(&<assetamortization.idassetload>&, 0))
OR
ISNULL(&<assetamortization.idassetload>&, 0)  = 0
OR
[SELECT count(*) from assetvar
	WHERE yvar = 
	[select year(adate)from assetload where idassetload =
		&<assetamortization.idassetload>&]{I}+1
	and (flag&1)=0
]{I} 	 = 0
OR 
&<assetamortization.flag>& & 1 = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','3','U','assetamortization','S','S','S','N','N',{ts '2013-05-04 15:02:39.537'},'assistenza','L''ammortamento non può essere inserito in buono di scarico. Esiste una variazione iniziale nell''anno successivo.','N','(ISNULL(%<assetamortization.idassetunload>%, 0) = ISNULL(&<assetamortization.idassetunload>&, 0))
OR
ISNULL(%<assetamortization.idassetunload>%, 0)  = 0
OR
[SELECT count(*) from assetvar
	WHERE yvar = 
	[select year(adate)from assetunload where idassetunload=
		%<assetamortization.idassetunload>%]{I}+1
	and (flag&1)=0
]{I} 	 = 0
OR 
%<assetamortization.flag>% & 1 = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','4','U','assetamortization','S','S','S','N','N',{ts '2013-05-04 15:11:53.967'},'assistenza','L''ammortamento non può essere tolto da un buono di scarico. Esiste una variazione iniziale nell''anno successivo.','N','(ISNULL(%<assetamortization.idassetunload>%, 0) = ISNULL(&<assetamortization.idassetunload>&, 0))
OR
ISNULL(&<assetamortization.idassetunload>&, 0)  = 0
OR
[SELECT count(*) from assetvar
	WHERE yvar = 
	[select year(adate)from assetunload where idassetunload=
		&<assetamortization.idassetunload>&]{I}+1
	and (flag&1)=0
]{I} 	 = 0
OR 
&<assetamortization.flag>&  & 1 = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','5','U','assetamortization','S','S','S','N','N',{ts '2013-05-04 15:15:40.163'},'assistenza','Non è possibile cambiare la data contabile della rivalutazione o ammortamento. Esiste una variazione iniziale nell''anno successivo.','N','(ISNULL(year(%<assetamortization.adate>%), 0) = ISNULL(year(&<assetamortization.adate>&), 0))
OR
[SELECT count(*) from assetvar
	WHERE yvar = 
	[select year(adate)from assetload where idassetload =
		year(%<assetamortization.adate>%)]{I}+1
	and (flag&1)=0
]{I} 	 = 0
OR 
%<assetamortization.flag>% & 1 <> 0


')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','6','U','assetamortization','S','S','S','N','N',{ts '2013-05-04 15:16:59.863'},'assistenza','Non è possibile cambiare la data contabile della rivalutazione o ammortamento. Esiste una variazione iniziale nell''anno successivo.','N','(ISNULL(year(%<assetamortization.adate>%), 0) = ISNULL(year(&<assetamortization.adate>&), 0))
OR
[SELECT count(*) from assetvar
	WHERE yvar = 
	[select year(adate)from assetload where idassetload =
		year(&<assetamortization.adate>&)]{I}+1
	and (flag&1)=0
]{I} 	 = 0
OR 
&<assetamortization.flag>& & 1 <> 0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','1','U','assetamortization','S','S','S','N','N',{ts '2012-04-05 16:59:12.060'},'sa','L''ammortamento (svalutazione) non può essere inserita in buono di scarico. %<assetamortizationunloadview.inventory>%'' appartiene ad un ente considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','S','--idassetunload da null a not null
--il nuovo eserc. deve essere aperto
--not null---> assetunload --> yassetunload
--il yassetunload+1 non deve esser chiuso

&<assetamortization.idassetunload>& is not null 
or %<assetamortization.idassetunload>% is null
or
[(SELECT COUNT(*) from assetvar where
assetvar.idinventoryagency = 
	[(select inventory.idinventoryagency
	from asset
	join assetacquire on assetacquire.nassetacquire = asset.nassetacquire
	join inventory on inventory.idinventory = assetacquire.idinventory
	where asset.idasset = %<assetamortization.idasset>%
	and asset.idpiece = %<assetamortization.idpiece>%
	)]{I}
and assetvar.yvar = 1+[(select assetunload.yassetunload from assetunload where idassetunload = %<assetamortization.idassetunload>%)]{I}
and (assetvar.flag & 1)=0
)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','2','U','assetamortization','S','S','S','N','N',{ts '2012-04-05 16:43:57.877'},'sa','Non si può rimuovere l''ammortamento(svalutazione) dal buono di scarico perchè ''%<assetamortizationunloadview.inventory>%'' appartiene ad un ente considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','S','--controllo n° 2
&<assetamortization.idassetunload>& is null 
or %<assetamortization.idassetunload>% is not null
or
[(SELECT COUNT(*) from assetvar where
assetvar.idinventoryagency = 
	[(select inventory.idinventoryagency
	from asset
	join assetacquire on assetacquire.nassetacquire = asset.nassetacquire
	join inventory on inventory.idinventory = assetacquire.idinventory
	where asset.idasset = %<assetamortization.idasset>%
	and asset.idpiece = %<assetamortization.idpiece>%
	)]{I}
and assetvar.yvar = 1+ [(select assetunload.yassetunload 
			from assetunload 
			where idassetunload = &<assetamortization.idassetunload>&)]{I}
and (assetvar.flag & 1)=0
)]{I} = 0
OR
%<assetamortization.amortizationquota>%>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','3','U','assetamortization','S','S','S','N','N',{ts '2012-04-05 17:02:31.370'},'sa','Non si può marcare come "Non Includere" in un buono di scarico l''ammortamento(svalutazione) perchè nell''anno dell''ammortamento ''%<assetamortizationunloadview.inventory>%'' appartiene ad un ente considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','S','--controllo n° 3) flagunload da S a N (nuovoAnnoDataAmmortamento non chiuso)
(&<assetamortization.flag>& & 1) = 0
or (%<assetamortization.flag>% & 1) <> 0
or
[(SELECT COUNT(*) from assetvar where
assetvar.idinventoryagency = 
	[(select inventory.idinventoryagency
	from asset
	join assetacquire on assetacquire.nassetacquire = asset.nassetacquire
	join inventory on inventory.idinventory = assetacquire.idinventory
	where asset.idasset = %<assetamortization.idasset>%
	and asset.idpiece = %<assetamortization.idpiece>%
	)]{I}
and assetvar.yvar = 1+year(%<assetamortization.adate>%)
and (assetvar.flag & 1)=0
)]{I} = 0
OR 
%<assetamortization.amortizationquota>%>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','4','U','assetamortization','S','S','S','N','N',{ts '2012-04-05 16:36:16.030'},'sa','Non si può includere in un buono di scarico l''ammortamento(svalutazione) perchè nell''anno dell''ammortamento ''%<assetamortizationunloadview.inventory>%'' appartiene ad un ente considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','S','--controllo n° 4) flagunload da N a S deve essere (vecchioAnnoDataAmmortamento non chiuso)
(&<assetamortization.flag>& & 1) <> 0
or (%<assetamortization.flag>% & 1) = 0
or
[(SELECT COUNT(*) from assetvar where
assetvar.idinventoryagency = 
	[(select inventory.idinventoryagency
	from asset
	join assetacquire on assetacquire.nassetacquire = asset.nassetacquire
	join inventory on inventory.idinventory = assetacquire.idinventory
	where asset.idasset = %<assetamortization.idasset>%
	and asset.idpiece = %<assetamortization.idpiece>%
	)]{I}
and assetvar.yvar = 1+year(&<assetamortization.adate>&)
and (assetvar.flag & 1)=0
)]{I} = 0
OR
%<assetamortization.amortizationquota>%>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','5','U','assetamortization','S','S','S','N','N',{ts '2008-03-11 14:49:37.610'},'SA','Nel nuovo anno dell''ammortamento(svalutazione) ''%<assetamortizationunloadview.inventory>%'' appartiene ad un ente considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','S','--controllo n° 5) flagunload rimane N
-- deve essere (vecchioAnnoDataAmmortamento non chiuso) and (nuovoAnnoDataAmmortamento non chiuso) OR vecchio anno = nuovo anno
(&<assetamortization.flag>& & 1) <> 0
or (%<assetamortization.flag>% & 1) <> 0
or year(&<assetamortization.adate>&) = year(%<assetamortization.adate>%)
or
([(SELECT COUNT(*) from assetvar where
assetvar.idinventoryagency = 
	[(select inventory.idinventoryagency
	from asset
	join assetacquire on assetacquire.nassetacquire = asset.nassetacquire
	join inventory on inventory.idinventory = assetacquire.idinventory
	where asset.idasset = %<assetamortization.idasset>%
	and asset.idpiece = %<assetamortization.idpiece>%
	)]{I}
and assetvar.yvar-1 in (year(&<assetamortization.adate>&), year(%<assetamortization.adate>%))
and (assetvar.flag & 1)=0
)]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','6','U','assetamortization','S','S','S','N','N',{ts '2012-04-18 09:02:23.963'},'sa','La rivalutazione non può essere inserita in buono di carico. %<assetamortizationunloadview.inventory>%'' appartiene ad un ente considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','S','--idassetunload da null a not null
--il nuovo eserc. deve essere aperto
--not null---> assetunload --> yassetunload
--il yassetunload+1 non deve esser chiuso

&<assetamortization.idassetload>& is not null 
or %<assetamortization.idassetload>% is null
or
[(SELECT COUNT(*) from assetvar where
assetvar.idinventoryagency = 
	[(select inventory.idinventoryagency
	from asset
	join assetacquire on assetacquire.nassetacquire = asset.nassetacquire
	join inventory on inventory.idinventory = assetacquire.idinventory
	where asset.idasset = %<assetamortization.idasset>%
	and asset.idpiece = %<assetamortization.idpiece>%
	)]{I}
and assetvar.yvar = 1+[(select year(ratificationdate) from assetload where idassetload = %<assetamortization.idassetload>%)]{I}
and (assetvar.flag & 1)=0
)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','7','U','assetamortization','S','S','S','N','N',{ts '2012-04-05 16:38:00.263'},'sa','Non si può includere in un buono di carico la rivalutazione perchè  ''%<assetamortizationunloadview.inventory>%'' appartiene ad un ente considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','S','--controllo n° 4) flagunload da N a S deve essere (vecchioAnnoDataAmmortamento non chiuso)
(&<assetamortization.flag>& & 1) <> 0
or (%<assetamortization.flag>% & 1) = 0
or
[(SELECT COUNT(*) from assetvar where
assetvar.idinventoryagency = 
	[(select inventory.idinventoryagency
	from asset
	join assetacquire on assetacquire.nassetacquire = asset.nassetacquire
	join inventory on inventory.idinventory = assetacquire.idinventory
	where asset.idasset = %<assetamortization.idasset>%
	and asset.idpiece = %<assetamortization.idpiece>%
	)]{I}
and assetvar.yvar = 1+year(&<assetamortization.adate>&)
and (assetvar.flag & 1)=0
)]{I} = 0
OR
%<assetamortization.amortizationquota>%<0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','8','U','assetamortization','S','S','S','N','N',{ts '2012-04-05 16:45:45.330'},'sa','Non si può rimuovere la rivalutazione dal buono di carico perchè ''%<assetamortizationunloadview.inventory>%'' appartiene ad un ente considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','S','--controllo n° 2
&<assetamortization.idassetload>& is null 
or %<assetamortization.idassetload>% is not null
or
[(SELECT COUNT(*) from assetvar where
assetvar.idinventoryagency = 
	[(select inventory.idinventoryagency
	from asset
	join assetacquire on assetacquire.nassetacquire = asset.nassetacquire
	join inventory on inventory.idinventory = assetacquire.idinventory
	where asset.idasset = %<assetamortization.idasset>%
	and asset.idpiece = %<assetamortization.idpiece>%
	)]{I}
and assetvar.yvar = 1+ [(select assetunload.yassetunload 
			from assetunload 
			where idassetunload = &<assetamortization.idassetunload>&)]{I}
and (assetvar.flag & 1)=0
)]{I} = 0
OR
%<assetamortization.amortizationquota>%<0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','9','U','assetamortization','S','S','S','N','N',{ts '2012-04-05 17:03:25.723'},'sa','Non si può marcare come "Non Includere" in un buono di carico la rivalutazione perchè nell''anno dell''ammortamento ''%<assetamortizationunloadview.inventory>%'' appartiene ad un ente considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','S','--controllo n° 3) flagunload da S a N (nuovoAnnoDataAmmortamento non chiuso)
(&<assetamortization.flag>& & 1) = 0
or (%<assetamortization.flag>% & 1) <> 0
or
[(SELECT COUNT(*) from assetvar where
assetvar.idinventoryagency = 
	[(select inventory.idinventoryagency
	from asset
	join assetacquire on assetacquire.nassetacquire = asset.nassetacquire
	join inventory on inventory.idinventory = assetacquire.idinventory
	where asset.idasset = %<assetamortization.idasset>%
	and asset.idpiece = %<assetamortization.idpiece>%
	)]{I}
and assetvar.yvar = 1+year(%<assetamortization.adate>%)
and (assetvar.flag & 1)=0
)]{I} = 0
OR 
%<assetamortization.amortizationquota>%<0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','10','U','assetamortization','S','S','S','N','N',{ts '2012-04-18 08:49:37.370'},'sa','La rivalutazione non può essere inserita in buono di carico. ''%<assetacquireview.inventory>%'' appartiene ad un ente considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','N','
(ISNULL(%<assetamortization.idassetload>%, 0) = ISNULL(&<assetamortization.idassetload>&, 0))
OR
 %<assetamortization.idassetload>% IS NULL
OR
[(select count(*) 
from assetvar
where assetvar.yvar =
	1 + 	[(select isnull(year(ratificationdate),0) from assetload 
		where idassetload = %<assetamortization.idassetload>%
		)]{I}
and (assetvar.flag & 1)=0)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','11','U','assetamortization','S','S','S','N','N',{ts '2012-04-18 08:56:20.073'},'sa','La rivalutazione non può essere scollegata dal buono di carico. ''%<assetacquireview.inventory>%'' appartiene ad un ente considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','S','
(ISNULL(%<assetamortization.idassetload>%, 0) = ISNULL(&<assetamortization.idassetload>&, 0))
OR
 &<assetamortization.idassetload>&  IS NULL
OR
[(select count(*) 
from assetvar
where assetvar.yvar =
	1 + 	[(select isnull(year(ratificationdate),0) from assetload 
		where idassetload = &<assetamortization.idassetload>&
		)]{I}
and (assetvar.flag & 1)=0)]{I} = 0



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','D','assetconsignee','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI032','1','D','assetconsignee','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','I','assetconsignee','S','S','S','N','N',{ts '2007-05-25 13:05:31.327'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','U','assetconsignee','S','S','S','N','N',{ts '2007-05-25 13:05:43.627'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','assetload','S','S','S','N','N',{ts '2007-11-12 10:57:57.670'},'SA','Cancellazione Impossibile! Esistono carichi di cespiti inventariabili collegati al buono di carico %<assetloadview.codeassetloadkind>% - %<nassetload>% / %<yassetload>%','S','[(SELECT count(*) 
from assetacquire 
where idassetload = %<assetload.idassetload>% 
)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','assetload','S','S','S','N','N',{ts '2012-04-18 08:41:40.620'},'sa','Cancellazione Impossibile! Esistono rivalutazioni  al buono di carico %<assetloadview.codeassetloadkind>% - %<nassetload>% / %<yassetload>%','S','[SELECT COUNT(*) FROM assetamortization
WHERE idassetload = %<assetload.idassetload>%
]{I} = 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI009','1','I','assetload','S','S','S','N','N',{ts '2008-06-16 15:12:38.687'},'ASSISTENZA','La data contabile del buono di carico %<assetloadkind.description>%  %<yassetload>%/%<nassetload>% deve rispettare la cronologia dei documenti esistenti (numerazione unica tra buoni di carico e di scarico)','N','--post
--Numerazione unica tra buoni di carico e di scarico
(
[select asset_flagnumbering
from config 
where ayear = %<esercizio>%]{C} <> ''U'')
OR
(
%<assetload.adate>% >= 
(ISNULL(
	[select MAX(adate)
	from assetload 
	where nassetload < %<assetload.nassetload>% 
	AND yassetload = %<assetload.yassetload>%]{D},
%<assetload.adate>%))
AND

%<assetload.adate>% <= 
(ISNULL( [select MIN(adate) from assetload 
where nassetload > %<assetload.nassetload>% 
AND yassetload = %<assetload.yassetload>%]{D},
%<assetload.adate>%))

AND
%<assetload.adate>% >= 
(ISNULL([select MAX(adate) from assetunload 
where nassetunload < %<assetload.nassetload>% 
AND yassetunload = %<assetload.yassetload>%]{D},
%<assetload.adate>%))
AND

%<assetload.adate>% <= 
(ISNULL( [select MIN(adate) from assetunload where 
nassetunload > %<assetload.nassetload>% 
AND yassetunload = %<assetload.yassetload>%]{D},
%<assetload.adate>%))
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI009','2','I','assetload','S','S','S','N','N',{ts '2008-06-16 14:53:40.687'},'ASSISTENZA','La data contabile del buono di carico %<assetloadkind.description>%  %<yassetload>%/%<nassetload>% deve rispettare la cronologia dei documenti esistenti (numerazione unica tra buoni di carico e scarico, distinta per tipo inventario)','N','--post
--Numerazione unica tra buoni di carico e di scarico, distinta per 
--tipo inventario di codice tipo buono,
(
[select asset_flagnumbering
from config 
where ayear = %<esercizio>%]{C} <> ''T'')

OR
(
%<assetload.adate>% >= 
(ISNULL([select MAX(adate) 
FROM assetload b 
INNER JOIN assetloadkind t on b.idassetloadkind=t.idassetloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory 
where nassetload < %<assetload.nassetload>%
and     yassetload = %<assetload.yassetload>% 
and     i.idinventorykind = 
		[select i1.idinventorykind FROM assetloadkind t1
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE  t1.idassetloadkind= %<assetload.idassetloadkind>%]{I} 

]{D} , %<assetload.adate>%))

AND

%<assetload.adate>% <= 
(ISNULL( [select MIN(adate) 
FROM assetload b 
INNER JOIN assetloadkind t on b.idassetloadkind=t.idassetloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory 
where nassetload > %<assetload.nassetload>%
and yassetload = %<assetload.yassetload>% 
and  i.idinventorykind = 
	[select i1.idinventorykind FROM assetloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetloadkind=%<assetload.idassetloadkind>%]{I}

]{D} ,%<assetload.adate>%))

AND

%<assetload.adate>% >= 
(ISNULL([select MAX(adate) 
FROM assetunload b 
INNER JOIN assetunloadkind t on b.idassetunloadkind=t.idassetunloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory  
where nassetunload < %<assetload.nassetload>%
and yassetunload = %<assetload.yassetload>% 
and  i.idinventorykind =  
		[select i1.idinventorykind FROM assetloadkind t1
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE  t1.idassetloadkind= %<assetload.idassetloadkind>%]{I}
]{D} ,%<assetload.adate>%))


AND
%<assetload.adate>% <= 

(ISNULL( [select MIN(adate) 
FROM assetunload b 
INNER JOIN assetunloadkind t on b.idassetunloadkind=t.idassetunloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory  
where nassetunload >%<assetload.nassetload>%
and yassetunload = %<assetload.yassetload>% 
and  i.idinventorykind=  
		[select i1.idinventorykind FROM assetloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetloadkind=%<assetload.idassetloadkind>%]{I}
]{D} ,
%<assetload.adate>%))
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI009','3','I','assetload','S','S','S','N','N',{ts '2008-06-16 15:44:28.360'},'SA','La data contabile del buono di carico %<assetloadkind.description>%  %<yassetload>%/%<nassetload>% deve rispettare la cronologia dei documenti esistenti (numerazione unica tra buoni di carico e di scarico, distinta per ente inventariale)','N','--post
--Numerazione unica tra buoni di carico e di scarico, distinta per 
--Ente inventariale di codice tipo buono,

(

[select asset_flagnumbering
from config 
where ayear = %<esercizio>%]{C} <> ''E'')
OR
(
%<assetload.adate>% >= 
(ISNULL([select MAX(adate) 
FROM assetload b 
INNER JOIN assetloadkind t on b.idassetloadkind=t.idassetloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory 
where nassetload < %<assetload.nassetload>%
and     yassetload = %<assetload.yassetload>% 
and     i.idinventoryagency = 
		[select i1.idinventoryagency FROM assetloadkind t1
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE  t1.idassetloadkind= %<assetload.idassetloadkind>%]{I} 

]{D} , %<assetload.adate>%))

AND
%<assetload.adate>% <= 
(ISNULL( [select MIN(adate) 
FROM assetload b 
INNER JOIN assetloadkind t on b.idassetloadkind=t.idassetloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory 
where nassetload > %<assetload.nassetload>%
and yassetload = %<assetload.yassetload>% 
and  i.idinventoryagency = 
		[select i1.idinventoryagency FROM assetloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetloadkind=%<assetload.idassetloadkind>%]{I}
]{D} ,
%<assetload.adate>%))

AND
%<assetload.adate>% >= 

(ISNULL([select MAX(adate) 
FROM assetunload b 
INNER JOIN assetunloadkind t on b.idassetunloadkind=t.idassetunloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory  
where nassetunload < %<assetload.nassetload>%
and yassetunload = %<assetload.yassetload>% 
and  i.idinventoryagency =  
		[select i1.idinventoryagency FROM assetloadkind t1
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE  t1.idassetloadkind= %<assetload.idassetloadkind>%]{I} 


]{D} ,
%<assetload.adate>%))

AND
%<assetload.adate>% <= 
(ISNULL( [select MIN(adate) 
FROM assetunload b 
INNER JOIN assetunloadkind t on b.idassetunloadkind=t.idassetunloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory  
where nassetunload >%<assetload.nassetload>%
and yassetunload = %<assetload.yassetload>% 
and  i.idinventoryagency=  
		[select i1.idinventoryagency FROM assetloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetloadkind=%<assetload.idassetloadkind>%]{I}
]{D} ,
%<assetload.adate>%))
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI009','4','I','assetload','S','S','S','N','N',{ts '2008-06-16 14:55:49.937'},'ASSISTENZA','La data contabile del buono di carico %<assetloadkind.description>%  %<yassetload>%/%<nassetload>% deve rispettare la cronologia dei documenti esistenti (numerazione distinta per tipo buono carico)','N','--post
--Numerazione distinta tra buoni di carico e di scarico, distinta per 
--Codice tipo buono
(
[select asset_flagnumbering
from config 
where ayear = %<esercizio>%]{C} <> ''B'')
OR
(
%<assetload.adate>% >= 
(ISNULL([select MAX(adate) from 
assetload 
where nassetload < %<assetload.nassetload>% 
AND yassetload = %<assetload.yassetload>% 
AND  idassetloadkind =  %<assetload.idassetloadkind>%] {D},
%<assetload.adate>%))

AND

%<assetload.adate>% <= 
(ISNULL( [select MIN(adate) from assetload 
where nassetload > %<assetload.nassetload>% 
AND yassetload = %<assetload.yassetload>% 
AND idassetloadkind = %<assetload.idassetloadkind>%]{D},
%<assetload.adate>%))

)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI009','5','I','assetload','S','S','S','N','N',{ts '2008-06-16 16:19:45.687'},'SA','La data contabile del buono di carico %<assetloadkind.description>%  %<yassetload>%/%<nassetload>% deve rispettare la cronologia dei documenti esistenti (numerazione unica tra buoni di carico di tipologia differente, distinguendo i buoni di scarico)','N','--post
--Numerazione unica tra buoni di carico di tipo differente, (distinguendo i buoni di carico e i buoni di scarico)
(
[select asset_flagnumbering
from config 
where ayear = %<esercizio>%]{C} <> ''K'')
OR
(
%<assetload.adate>% >= 
(ISNULL(
	[select MAX(adate)
	from assetload 
	where nassetload < %<assetload.nassetload>% 
	AND yassetload = %<assetload.yassetload>%]{D},
%<assetload.adate>%))
AND

%<assetload.adate>% <= 
(ISNULL( [select MIN(adate) from assetload 
where nassetload > %<assetload.nassetload>% 
AND yassetload = %<assetload.yassetload>%]{D},
%<assetload.adate>%))

)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI019','1','I','assetload','S','S','S','N','N',{ts '2007-02-19 09:24:42.297'},'''NINO''','La data di ratifica del buono di carico %<assetload.yassetload>% / %<assetload.nassetload>% ha un esercizio precedente al buono','N','%<assetload.ratificationdate>% is null
or
YEAR(%<assetload.ratificationdate>%) >= %<assetload.yassetload>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI023','1','I','assetload','S','S','S','N','N',{ts '2012-04-10 11:57:22.177'},'sa','Non si può inserire un cespite marcato come posseduto in un buono di carico','N','[select count(*)
from assetacquire
where idassetload = %<assetload.idassetload>%
and (flag & 2 <> 0 )
]{I}
=0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI038','1','I','assetload','S','S','S','N','N',{ts '2008-04-02 16:38:11.437'},'SA','La data di ratifica del buono di carico %<assetload.yassetload>% / %<assetload.nassetload>% ha un esercizio successivo al buono','N','%<assetload.ratificationdate>% is null
or
YEAR(%<assetload.ratificationdate>%) <= %<assetload.yassetload>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','1','I','assetload','S','S','S','N','N',{ts '2012-04-18 08:38:18.323'},'sa','Il buono di carico non può essere inserito. Esercizio %<esercizio>% chiuso.','N','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 16) = 0
OR
([SELECT COUNT(*) FROM assetacquire
WHERE idassetload = %<assetload.idassetload>%
AND (flag & 2) = 0]{I} = 0
AND
[SELECT COUNT(*) FROM assetamortization
WHERE idassetload = %<assetload.idassetload>%
]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','1','I','assetload','S','S','S','N','N',{ts '2012-04-18 08:37:36.633'},'sa','Il buono di carico non può essere inserito.L''ente interessato dall''operazione è considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','N','([SELECT COUNT(*) FROM assetacquire
WHERE idassetload = %<assetload.idassetload>%
AND (flag & 2) = 0]{I} = 0
AND
[SELECT COUNT(*) FROM assetamortization
WHERE idassetload = %<assetload.idassetload>%
]{I} = 0
)

OR
[(select count(*) from assetvar
where assetvar.idinventoryagency = [(
	select inventory.idinventoryagency 
	from assetloadkind
	join inventory on inventory.idinventory = assetloadkind.idinventory
	where assetloadkind.idassetloadkind = %<assetload.idassetloadkind>%
	)]{I}
and assetvar.yvar = 1+year(%<assetload.ratificationdate>%)
and (assetvar.flag & 1)=0)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RO_CESPI044','1','I','assetload','S','S','S','N','N',{ts '2011-02-15 16:37:41.843'},'sara','Manca la Data  Documento.','N','%<assetload.docdate>% is not null')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RO_CESPI044','2','I','assetload','S','S','S','N','N',{ts '2011-02-15 16:38:46.953'},'sara','Specificare il Documento.','N','%<assetload.doc>%  is not  null
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','assetload','S','S','S','N','N',{ts '2007-11-12 10:05:07.877'},'NINO','Buono di carico %<assetloadkind.codeassetloadkind>% - %<assetload.nassetload>% / %<assetload.yassetload>% già esistente','S','[SELECT COUNT(*) 
FROM assetload
WHERE idassetloadkind = %<assetload.idassetloadkind>%
AND yassetload = %<assetload.yassetload>%
AND nassetload = %<assetload.nassetload>%
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI009','1','U','assetload','S','S','S','N','N',{ts '2007-09-01 15:03:24.000'},'NINO','La data contabile del buono di carico %<assetloadkind.description>%  %<yassetload>%/%<nassetload>% deve rispettare la cronologia dei documenti esistenti (numerazione unica tra buoni di carico e di scarico)','N','--post
--Numerazione unica tra buoni di carico e di scarico
(
[select asset_flagnumbering
from config 
where ayear = %<esercizio>%]{C} <> ''U'')

OR

(%<assetload.adate>% >= 
(ISNULL([select MAX(adate) from 
assetload 
where nassetload < %<assetload.nassetload>% 
AND yassetload = %<assetload.yassetload>%]{D},
%<assetload.adate>%))

AND

%<assetload.adate>% <= 
(ISNULL( [select MIN(adate) from assetload 
where nassetload > %<assetload.nassetload>% 
AND yassetload = %<assetload.yassetload>%]{D},
%<assetload.adate>%))


AND

%<assetload.adate>% >= 
(ISNULL([select MAX(adate) from assetunload 
where nassetunload < %<assetload.nassetload>% 
AND yassetunload = %<assetload.yassetload>%]{D},
%<assetload.adate>%))

AND

%<assetload.adate>% <= 
(ISNULL( [select MIN(adate) from assetunload where 
nassetunload > %<assetload.nassetload>% 
AND yassetunload = %<assetload.yassetload>%]{D},
%<assetload.adate>%))
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI009','2','U','assetload','S','S','S','N','N',{ts '2007-11-08 13:45:41.857'},'NINO','La data contabile del buono di carico %<assetloadkind.description>%  %<yassetload>%/%<nassetload>% deve rispettare la cronologia dei documenti esistenti (numerazione unica tra buoni di carico e scarico, distinta per tipo inventario)','N','--post
--Numerazione unica tra buoni di carico e di scarico, distinta per 
--tipo inventario di codice tipo buono,
(
[select asset_flagnumbering
from config 
where ayear = %<esercizio>%]{C} <> ''T'')
OR
(
%<assetload.adate>% >= 
(ISNULL([select MAX(adate) 
FROM assetload b 
INNER JOIN assetloadkind t on b.idassetloadkind=t.idassetloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory 
where nassetload < %<assetload.nassetload>%
and     yassetload = %<assetload.yassetload>% 
and     i.idinventorykind = 
		[select i1.idinventorykind FROM assetloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetloadkind=%<assetload.idassetloadkind>%]{I}
]{D} , %<assetload.adate>%))

AND

%<assetload.adate>% <= 
(ISNULL( [select MIN(adate) 
FROM assetload b 
INNER JOIN assetloadkind t on b.idassetloadkind=t.idassetloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory 
where nassetload > %<assetload.nassetload>%
and yassetload = %<assetload.yassetload>% 
and  i.idinventorykind = 
	[select i1.idinventorykind FROM assetloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetloadkind=%<assetload.idassetloadkind>%]{I}

]{D} ,
%<assetload.adate>%))

AND
%<assetload.adate>% >= 
(ISNULL([select MAX(adate) 
FROM assetunload b 
INNER JOIN assetunloadkind t on b.idassetunloadkind=t.idassetunloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory  
where nassetunload < %<assetload.nassetload>%
and yassetunload = %<assetload.yassetload>% 
and  i.idinventorykind =  
		[select i1.idinventorykind FROM assetloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetloadkind=%<assetload.idassetloadkind>%]{I}
]{D} ,
%<assetload.adate>%))
AND
%<assetload.adate>% <= 

(ISNULL( [select MIN(adate) 
FROM assetunload b 
INNER JOIN assetunloadkind t on b.idassetunloadkind=t.idassetunloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory  
where nassetunload >%<assetload.nassetload>%
and yassetunload = %<assetload.yassetload>% 
and  i.idinventorykind=  
		[select i1.idinventorykind FROM assetloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetloadkind=%<assetload.idassetloadkind>%]{I}
]{D} ,
%<assetload.adate>%))
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI009','3','U','assetload','S','S','S','N','N',{ts '2007-11-08 13:46:51.027'},'NINO','La data contabile del buono di carico %<assetloadkind.description>%  %<yassetload>%/%<nassetload>% deve rispettare la cronologia dei documenti esistenti (numerazione unica tra buoni di carico e di scarico, distinta per ente inventariale)','N','--POST
--Numerazione unica tra buoni di carico e di scarico, distinta per 
--Ente inventariale di codice tipo buono,
(
[select asset_flagnumbering
from config 
where ayear = %<esercizio>%]{C} <> ''E'')
OR
(
%<assetload.adate>% >= 
(ISNULL([select MAX(adate) 
FROM assetload b 
INNER JOIN assetloadkind t on b.idassetloadkind=t.idassetloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory 
where nassetload < %<assetload.nassetload>%
and     yassetload = %<assetload.yassetload>% 
and     i.idinventoryagency = 
		[select i1.idinventoryagency FROM assetloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetloadkind=%<assetload.idassetloadkind>%]{I}
]{D} , %<assetload.adate>%))
AND
%<assetload.adate>% <= 
(ISNULL( [select MIN(adate) 
FROM assetload b 
INNER JOIN assetloadkind t on b.idassetloadkind=t.idassetloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory 
where nassetload > %<assetload.nassetload>%
and yassetload = %<assetload.yassetload>% 
and  i.idinventoryagency = 
		[select i1.idinventoryagency FROM assetloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetloadkind=%<assetload.idassetloadkind>%]{I}
]{D} ,
%<assetload.adate>%))

AND
%<assetload.adate>% >= 
(ISNULL([select MAX(adate) 
FROM assetunload b 
INNER JOIN assetunloadkind t on b.idassetunloadkind=t.idassetunloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory  
where nassetunload < %<assetload.nassetload>%
and yassetunload = %<assetload.yassetload>% 
and  i.idinventoryagency =  
		[select i1.idinventoryagency FROM assetloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetloadkind=%<assetload.idassetloadkind>%]{I}
]{D} ,
%<assetload.adate>%))

AND

%<assetload.adate>% <= 
(ISNULL( [select MIN(adate) 
FROM assetunload b 
INNER JOIN assetunloadkind t on b.idassetunloadkind=t.idassetunloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory  
where nassetunload >%<assetload.nassetload>%
and yassetunload = %<assetload.yassetload>% 
and  i.idinventoryagency=  
		[select i1.idinventoryagency FROM assetloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetloadkind=%<assetload.idassetloadkind>%]{I}
]{D} ,
%<assetload.adate>%))
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI009','4','U','assetload','S','S','S','N','N',{ts '2007-09-01 15:03:50.047'},'NINO','La data contabile del buono di carico %<assetloadkind.description>%  %<yassetload>%/%<nassetload>% deve rispettare la cronologia dei documenti esistenti (numerazione distinta per tipo buono carico)','N','--POST
--Numerazione distinta tra buoni di carico e di scarico, distinta per 
--Codice tipo buono
(
[select asset_flagnumbering
from config 
where ayear = %<esercizio>%]{C} <> ''B'')
OR
(
%<assetload.adate>% >= 
(ISNULL([select MAX(adate) from 
assetload 
where nassetload < %<assetload.nassetload>% 
AND yassetload = %<assetload.yassetload>% 
AND  idassetloadkind =  %<assetload.idassetloadkind>%] {D},
%<assetload.adate>%))
AND
%<assetload.adate>% <= 
(ISNULL( [select MIN(adate) from assetload 
where nassetload > %<assetload.nassetload>% 
AND yassetload = %<assetload.yassetload>% 
AND idassetloadkind = %<assetload.idassetloadkind>%]{D},
%<assetload.adate>%))
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI019','1','U','assetload','S','S','S','N','N',{ts '2007-02-19 09:24:45.953'},'''NINO''','La data di ratifica del buono di carico %<assetload.yassetload>% / %<assetload.nassetload>% ha un esercizio precedente al buono','S','%<assetload.ratificationdate>% is null
or
YEAR(%<assetload.ratificationdate>%) >= %<assetload.yassetload>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI033','1','U','assetload','S','S','S','N','N',{ts '2007-11-08 13:47:19.920'},'NINO','Non è consentito modificare il Buono di Carico in quanto già trasmesso','N','ISNULL(%<assetload.transmitted>%,''N'') <> ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI034','1','U','assetload','S','S','S','N','N',{ts '2007-06-04 10:59:19.203'},'''SARA''','Non è consentito impostare manualmente un Buono di Carico come "Trasmesso"','S','(
 ISNULL(&<assetload.transmitted>&,''N'') = 
 ISNULL(%<assetload.transmitted>%,''N'') 
)
OR
(ISNULL(%<assetload.transmitted>%,''N'') <> ''S'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI038','1','U','assetload','S','S','S','N','N',{ts '2008-04-02 16:38:44.000'},'SA','La data di ratifica del buono di carico %<assetload.yassetload>% / %<assetload.nassetload>% ha un esercizio successivo al buono','S','%<assetload.ratificationdate>% is null
or
YEAR(%<assetload.ratificationdate>%) <= %<assetload.yassetload>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','1','U','assetload','S','S','S','N','N',{ts '2013-05-15 09:39:33.793'},'nino','Non è possibile cambiare la data di ratifica al buono. Esiste una var.iniziale nell''anno successivo.','N','(ISNULL(year(%<assetload.ratificationdate>%), 0) = ISNULL(year(&<assetload.ratificationdate>&), 0) )
OR
[SELECT count(*) from assetvar
	WHERE yvar = year(&<assetload.ratificationdate>&)+1
	and (flag&1)=0
]{I} 	 = 0
OR 
ISNULL(year(&<assetload.ratificationdate>&), 0)=0

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','2','U','assetload','S','S','S','N','N',{ts '2013-05-15 09:39:41.853'},'nino','Non è possibile cambiare la data di ratifica al buono. Esiste una var.iniziale nell''anno successivo.','N','(ISNULL(year(%<assetload.ratificationdate>%), 0) = ISNULL(year(&<assetload.ratificationdate>&), 0) )
OR
[SELECT count(*) from assetvar
	WHERE yvar = year(%<assetload.ratificationdate>%)+1
	and (flag&1)=0
]{I} 	 = 0
OR 
ISNULL(year(%<assetload.ratificationdate>%), 0)=0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','3','U','assetload','S','S','S','N','N',{ts '2013-05-15 09:39:50.887'},'nino','Non è possibile cambiare la data contabile al buono. Esiste una var.iniziale nell''anno successivo.','S','(ISNULL(year(%<assetload.adate>%), 0) = ISNULL(year(&<assetload.adate>&), 0) )
OR
[SELECT count(*) from assetvar
	WHERE yvar = year(%<assetload.adate>%)+1
	and (flag&1)=0
]{I} 	 = 0
OR 
ISNULL(year(%<assetload.adate>%), 0)=0
OR
[select count(*) from assetamortization where idassetload=%<assetload.idassetload>%]{I}
=0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','4','U','assetload','S','S','S','N','N',{ts '2013-05-15 09:39:58.073'},'nino','Non è possibile cambiare la data contabile al buono. Esiste una var.iniziale nell''anno successivo.','S','(ISNULL(year(%<assetload.adate>%), 0) = ISNULL(year(&<assetload.adate>&), 0) )
OR
[SELECT count(*) from assetvar
	WHERE yvar = year(&<assetload.adate>&)+1
	and (flag&1)=0
]{I} 	 = 0
OR 
ISNULL(year(&<assetload.adate>&), 0)=0
OR
[select count(*) from assetamortization where idassetload=%<assetload.idassetload>%]{I}
=0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','1','U','assetload','S','S','S','N','N',{ts '2012-04-18 08:38:31.853'},'sa','La data ratifica del  buono di carico non può essere modificata. L''ente interessato dall''operazione è considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','N','([SELECT COUNT(*) FROM assetacquire
WHERE idassetload = %<assetload.idassetload>%
AND (flag & 2) = 0]{I} = 0
AND
[SELECT COUNT(*) FROM assetamortization
WHERE idassetload = %<assetload.idassetload>%
]{I} = 0
)

OR
[(select count(*) from assetvar
where assetvar.idinventoryagency = [(
	select inventory.idinventoryagency 
	from assetloadkind
	join inventory on inventory.idinventory = assetloadkind.idinventory
	where assetloadkind.idassetloadkind = %<assetload.idassetloadkind>%
	)]{I}
and assetvar.yvar = 1+year(%<assetload.ratificationdate>%)
and (assetvar.flag & 1)=0)]{I} = 0
or
%<assetload.ratificationdate>% is null 
or
year(%<assetload.ratificationdate>%) = year(&<assetload.ratificationdate>&)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','2','U','assetload','S','S','S','N','N',{ts '2012-04-18 08:38:45.727'},'sa','La data ratifica del  buono di carico non può essere modificata. L''ente interessato dall''operazione è considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','N','([SELECT COUNT(*) FROM assetacquire
WHERE idassetload = %<assetload.idassetload>%
AND (flag & 2) = 0]{I} = 0
AND
[SELECT COUNT(*) FROM assetamortization
WHERE idassetload = %<assetload.idassetload>%
]{I} = 0
)

OR
[(select count(*) from assetvar
where assetvar.idinventoryagency = [(
	select inventory.idinventoryagency 
	from assetloadkind
	join inventory on inventory.idinventory = assetloadkind.idinventory
	where assetloadkind.idassetloadkind = %<assetload.idassetloadkind>%
	)]{I}
and assetvar.yvar = 1+year(&<assetload.ratificationdate>&)
and (assetvar.flag & 1)=0)]{I} = 0
or
&<assetload.ratificationdate>& is null 
or
year(%<assetload.ratificationdate>%) = year(&<assetload.ratificationdate>&)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RO_CESPI044','1','U','assetload','S','S','S','N','N',{ts '2011-02-15 16:42:25.890'},'sara','Specificare la Data Documento.','N','isnull(&<assetload.docdate>&,{d ''1900-01-01''}) = isnull( %<assetload.docdate>% ,{d ''2079-01-01''})

OR

%<assetload.docdate>% is not null

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RO_CESPI044','2','U','assetload','S','S','S','N','N',{ts '2011-02-15 16:39:21.890'},'sara','Specificare il Documento.
','N','isnull(&<assetload.doc>&,'''') =isnull(%<assetload.doc>%,'''') 
OR
%<assetload.doc>% is not null

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI019','1','I','assetloadexpense','S','S','S','N','N',{ts '2008-03-12 13:09:29.907'},'NINO','La data di competenza del mov. selezionato è di anno precedente al buono di carico','N','isnull([SELECT MAX(YEAR(competencydate))
FROM historypaymentview
WHERE idexp = %<assetloadexpense.idexp>%]{I},0)
 >=
[SELECT yassetload FROM assetload
WHERE idassetload = %<assetloadexpense.idassetload>%]{I}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI038','1','I','assetloadexpense','S','S','S','N','N',{ts '2008-04-02 17:08:05.627'},'SA','La data di competenza del mov. selezionato è di anno successivo al buono di carico','N','isnull([SELECT MAX(YEAR(competencydate))
FROM historypaymentview
WHERE idexp = %<assetloadexpense.idexp>%]{I},0)
<=
[SELECT yassetload FROM assetload
WHERE idassetload = %<assetloadexpense.idassetload>%]{I}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','D','assetloadkind','S','S','S','N','N',{ts '2009-01-20 12:15:49.180'},'SA','Il tipo di buono di carico %<assetloadkind.description>% non può essere cancellato','S','1 = 2')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','D','assetloadkind','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI032','1','D','assetloadkind','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','assetloadkind','S','S','S','N','N',{ts '2007-09-13 11:52:25.483'},'NINO','Il tipo di buono di carico %<description>% non può essere cancellato in quanto esistono buoni di carico inventariali che lo referenziano.','S','[(SELECT count(*) 
from assetload 
where idassetloadkind = %<assetloadkind.idassetloadkind>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','I','assetloadkind','S','S','S','N','N',{ts '2009-01-20 12:16:02.650'},'SA','Il tipo di buono di carico %<assetloadkind.description>% non può essere inserito','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','I','assetloadkind','S','S','S','N','N',{ts '2007-05-25 13:05:31.327'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','assetloadkind','S','S','S','N','N',{ts '2007-11-09 14:28:31.843'},'SA','Tipo del buono di carico %<codeassetloadkind>% già esistente','S','[(SELECT count(*) 
from assetloadkind 
where codeassetloadkind = %<assetloadkind.codeassetloadkind>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','assetloadkind','S','S','S','N','N',{ts '2007-11-08 13:58:39.357'},'NINO','Descrizione del tipo di buono di carico già esistente','S','[(SELECT count(*) 
from assetloadkind 
where description = %<assetloadkind.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','U','assetloadkind','S','S','S','N','N',{ts '2009-01-20 12:16:05.807'},'SA','Il tipo di buono di carico %<assetloadkind.description>% non può essere modificato','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','U','assetloadkind','S','S','S','N','N',{ts '2007-05-25 13:05:43.627'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','assetloadkind','S','S','S','N','N',{ts '2007-11-08 13:58:55.597'},'NINO','Descrizione del tipo di buono di carico già esistente','S','[(SELECT count(*) 
from assetloadkind 
where idassetloadkind <> %<assetloadkind.idassetloadkind>% 
and description = %<assetloadkind.description>%)]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','D','assetloadmotive','S','S','S','N','N',{ts '2009-01-20 12:16:09.527'},'SA','La causale di carico %<assetloadmotive.description>% non può essere cancellata','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','D','assetloadmotive','S','S','S','N','N',{ts '2007-05-25 13:09:32.627'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI032','1','D','assetloadmotive','S','S','S','N','N',{ts '2007-05-25 13:09:32.627'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','assetloadmotive','S','S','S','N','N',{ts '2007-09-13 11:52:30.703'},'NINO','Cancellazione Impossibile! Esistono buoni di carico collegati alla causale di carico %<description>%','S','[(SELECT count(*) 
from assetload 
where idmot = %<assetloadmotive.idmot>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','assetloadmotive','S','S','S','N','N',{ts '2007-09-13 11:52:35.983'},'NINO','Cancellazione Impossibile! Esistono carichi di cespiti inventariabili collegati alla causale di carico %<description>%','S','[(SELECT count(*) 
from assetacquire 
where idmot = %<assetloadmotive.idmot>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','I','assetloadmotive','S','S','S','N','N',{ts '2009-01-20 12:16:12.977'},'SA','La causale di carico %<assetloadmotive.description>% non può essere inserita','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','I','assetloadmotive','S','S','S','N','N',{ts '2007-05-25 13:09:09.920'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','assetloadmotive','S','S','S','N','N',{ts '2007-11-08 14:00:08.753'},'NINO','Causale di carico già esistente','S','[(SELECT count(*) 
from assetloadmotive 
where idmot = %<assetloadmotive.idmot>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','assetloadmotive','S','S','S','N','N',{ts '2007-11-08 14:00:15.157'},'NINO','Descrizione della causale di carico già esistente','S','[(SELECT count(*) 
from assetloadmotive 
where description = %<assetloadmotive.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','U','assetloadmotive','S','S','S','N','N',{ts '2009-01-20 12:16:16.430'},'SA','La causale di carico %<assetloadmotive.description>% non può essere modificata','S','1 = 2')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','U','assetloadmotive','S','S','S','N','N',{ts '2007-05-25 13:09:20.547'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','assetloadmotive','S','S','S','N','N',{ts '2007-11-08 14:00:30.650'},'NINO','Descrizione della causale di carico già esistente','S','[(SELECT count(*) 
from assetloadmotive 
where idmot <> %<assetloadmotive.idmot>% 
and description = %<assetloadmotive.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI004','1','D','assetlocation','S','S','S','N','N',{ts '2007-11-08 14:00:48.970'},'NINO','L''ubicazione %<location.description>% del cespite n. %<assetlocation.idasset>%  non può essere cancellata,  in quanto il cespite è compreso in un buono di scarico. ','S','[(select count(*)
from asset 
where asset.idasset = %<assetlocation.idasset>%
and asset.idassetunload is not null)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI044','1','D','assetlocation','S','S','S','N','N',{ts '2011-06-08 15:43:54.297'},'sa','Non è possibile Eliminare l''Ubicazione del Cespite in quanto ne resterebbe sprovvisto','N','[SELECT count(*) FROM assetlocation 
	where idasset = %<assetlocation.idasset>%]{I} >0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI004','1','I','assetlocation','S','S','S','N','N',{ts '2007-11-08 14:00:55.357'},'NINO','Non può essere inserita una nuova ubicazione per il cespite n. %<idasset>%,  in quanto il cespite è compreso in un buono di scarico.','S','[(select count(*)
from asset 
where asset.idasset = %<assetlocation.idasset>%
and asset.idassetunload is not null)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI035','1','I','assetlocation','S','S','S','N','N',{ts '2007-11-08 14:02:24.163'},'NINO','Non possone esistere due Locazioni iniziali per un Cespite.Inserire la data Inizio di questa locazione.','N','[(SELECT COUNT(*)
FROM assetlocation
WHERE idasset = %<assetlocation.idasset>%
and start IS NULL)]{I}<=1
OR
%<assetlocation.start>% is not null
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI036','1','I','assetlocation','S','S','S','N','N',{ts '2007-11-08 15:20:46.750'},'SARA','Non impostando la Data Inizio, si sta inserendo una Locazione iniziale per il Cespite %<asset.ninventory>% , ma ne esiste già una con Data Inizio.','N','[(SELECT COUNT(*)
FROM assetlocation
WHERE idasset = %<assetlocation.idasset>%
and start IS NOT NULL)]{I} = 0
or 
%<assetlocation.start>% is not null
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI004','1','U','assetlocation','S','S','S','N','N',{ts '2007-11-08 14:04:57.703'},'NINO','L''ubicazione del cespite n. %<assetlocation.idasset>%  non può essere modificata,  in quanto il cespite è compreso in un buono di scarico. ','S','[select count(*)
from asset 
where asset.idasset = %<assetlocation.idasset>%
and asset.idassetunload is not null]{I} = 0
OR
(
	ISNULL( %<assetlocation.idlocation>%,0) = 
                ISNULL(&<assetlocation.idlocation>&,0)
                AND
	ISNULL(%<assetlocation.start>%,  {d ''1900-01-01''} ) = 
                ISNULL(&<assetlocation.start>&,{d ''1900-01-01''})
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI035','1','U','assetlocation','S','S','S','N','N',{ts '2007-11-08 14:03:30.150'},'NINO','Non possone esistere due Locazioni iniziali per un Cespite.Inserire la data Inizio di questa locazione.','N','[(SELECT COUNT(*)
FROM assetlocation
WHERE idasset = %<assetlocation.idasset>%
and start IS NULL)]{I}<=1
OR
( ISNULL(%<assetlocation.start>%,  {d ''1900-01-01''} ) = 
                ISNULL(&<assetlocation.start>&,{d ''1900-01-01''})
)

OR
%<assetlocation.start>% is not null


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI036','1','U','assetlocation','S','S','S','N','N',{ts '2007-11-08 15:21:56.453'},'SARA','Non impostando la Data Inizio, si sta inserendo una Locazione iniziale per il Cespite %<asset.ninventory>%  ma esiste già una Locazione con Data Inizio.','N','[(SELECT COUNT(*)
FROM assetlocation
WHERE idasset = %<assetlocation.idasset>%
and start IS NOT NULL)]{I} = 0
or 
%<assetlocation.start>% is not null
OR
( ISNULL(%<assetlocation.start>%,  {d ''1900-01-01''} ) = 
                ISNULL(&<assetlocation.start>&,{d ''1900-01-01''})
)



')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI004','1','D','assetmanager','S','S','S','N','N',{ts '2007-11-08 14:05:57.223'},'NINO','Il Responsabile %<manager.title>% del bene inventariabile n. %<assetmanager.idasset>%  non può essere cancellato,  in quanto il cespite è compreso in un buono di scarico. ','S','[select count(*)
from asset 
where asset.idasset = %<assetmanager.idasset>%
and asset.idassetunload is not null]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI044','1','D','assetmanager','S','S','S','N','N',{ts '2011-06-08 15:44:04.920'},'sa','Non è possibile Eliminare il Responsabile del Cespite in quanto ne resterebbe sprovvisto','N','[SELECT count(*) FROM assetmanager 
	where idasset = %<assetmanager.idasset>%]{I} >0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI004','1','I','assetmanager','S','S','S','N','N',{ts '2007-11-08 14:05:42.527'},'NINO','Non può essere inserito un nuovo Responsabile per il cespite n. %<idasset>%,  in quanto il cespite è compreso in un buono di scarico.','S','[select count(*)
from asset 
where asset.idasset = %<assetmanager.idasset>%
and asset.idassetunload is not null]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI035','1','I','assetmanager','S','S','S','N','N',{ts '2007-11-08 14:07:22.093'},'NINO','Non possone esistere due Responsabili iniziali per un Cespite. Inserire la data inizio di questo Responsabile.','N','[SELECT COUNT(*)
FROM assetmanager
WHERE idasset = %<assetmanager.idasset>%
and start IS NULL]{I} <=1
OR
 %<assetmanager.start>% is not null
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI036','1','I','assetmanager','S','S','S','N','N',{ts '2007-11-08 15:22:16.313'},'SARA','Non impostando la Data Inizio, si sta inserendo un Responsabile iniziale per il Cespite %<asset.ninventory>% , ma ne esiste già uno con Data Inizio.','N','%<assetmanager.start>% IS NOT NULL
OR 
[(SELECT COUNT(*)
FROM assetmanager
WHERE idasset = %<assetmanager.idasset>%
and start IS NOT NULL)]{I}= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI004','1','U','assetmanager','S','S','S','N','N',{ts '2007-11-08 14:08:19.100'},'NINO','Il Reponsabile del cespite n. %<assetlocation.idasset>%  non può essere modificato,  in quanto il cespite è compreso in un buono di scarico. ','S','[(select count(*)
from asset 
where asset.idasset = %<assetmanager.idasset>%
and asset.idassetunload is not null)]{I} = 0
OR
(
	ISNULL( %<assetmanager.idman>%,0) = 
                ISNULL(&<assetmanager.idman>&,0)
                AND
	ISNULL(%<assetmanager.start>%,  {d ''1900-01-01''} ) = 
                ISNULL(&<assetmanager.start>&,{d ''1900-01-01''})
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI035','1','U','assetmanager','S','S','S','N','N',{ts '2007-11-08 14:08:59.800'},'NINO','Non possone esistere due Responsabili iniziali per un Cespite. Inserire la data inizio di questo Responsabile.','N','[(SELECT COUNT(*)
FROM assetmanager
WHERE idasset = %<assetmanager.idasset>%
and start IS NULL)]{I}<=1
OR
( ISNULL(%<assetmanager.start>%,  {d ''1900-01-01''} ) = 
                ISNULL(&<assetmanager.start>&,{d ''1900-01-01''})
)
OR
%<assetmanager.start>% is not null')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI036','1','U','assetmanager','S','S','S','N','N',{ts '2007-11-08 15:22:24.187'},'SARA','Non impostando la Data Inizio, si sta inserendo un Responsabile iniziale per il Cespite %<asset.ninventory>% , ma ne esiste già uno con Data Inizio.','N','%<assetmanager.start>% IS NOT NULL
OR 
[(SELECT COUNT(*)
FROM assetmanager
WHERE idasset = %<assetmanager.idasset>%
and start IS NOT NULL)]{I}= 0
OR
( ISNULL(%<assetmanager.start>%,  {d ''1900-01-01''} ) = 
                ISNULL(&<assetmanager.start>&,{d ''1900-01-01''})
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','assetunload','S','S','S','N','N',{ts '2007-11-12 11:01:43.733'},'SA','Cancellazione Impossibile! Esistono scarichi di cespiti inventariabili collegati al buono di scarico %<assetunloadview.codeassetunloadkind>% - %<nassetunload>% / %<yassetunload>%','S','[(SELECT count(*) 
from asset 
where idassetunload = %<assetunload.idassetunload>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI009','1','I','assetunload','S','S','S','N','N',{ts '2008-06-16 16:42:14.530'},'SA','La data contabile del buono di scarico %<assetunloadkind.description>% %<yassetunload>%/%<nassetunload>% deve rispettare la cronologia dei documenti esistenti (numerazione unica tra buoni di carico e di scarico)','N','--post
--Numerazione unica tra buoni di carico e di scarico

(
[select asset_flagnumbering
from config 
where ayear = %<esercizio>%]{C} <> ''U'')

OR
(

%<assetunload.adate>% >= 
(ISNULL([select MAX(adate) from 
assetunload 
where nassetunload < %<assetunload.nassetunload>% 
AND yassetunload = %<assetunload.yassetunload>%]{D},
%<assetunload.adate>%))

AND

%<assetunload.adate>% <= 
(ISNULL( [select MIN(adate) from assetunload 
where nassetunload > %<assetunload.nassetunload>% 
AND yassetunload = %<assetunload.yassetunload>%]{D},
%<assetunload.adate>%))


AND

%<assetunload.adate>% >= 
(ISNULL([select MAX(adate) from assetload 
where nassetload < %<assetunload.nassetunload>% 
AND yassetload = %<assetunload.yassetunload>%]{D},
%<assetunload.adate>%))

AND

%<assetunload.adate>% <= 
(ISNULL( [select MIN(adate) from assetload where 
nassetload > %<assetunload.nassetunload>% 
AND yassetload = %<assetunload.yassetunload>%]{D},
%<assetunload.adate>%))

)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI009','2','I','assetunload','S','S','S','N','N',{ts '2008-06-16 16:47:16.517'},'SA','La data contabile del buono di scarico %<assetunloadkind.description>% %<yassetunload>%/%<nassetunload>% deve rispettare la cronologia dei documenti esistenti (numerazione unica tra buoni di carico e scarico, distinta per tipo inventario)','N','--post
--Numerazione unica tra buoni di carico e di scarico, distinta per 
--tipo inventario di codice tipo buono,
(
[select asset_flagnumbering
from config 
where ayear = %<esercizio>%]{C} <> ''T'')
OR
(
%<assetunload.adate>% >= 
(ISNULL([select MAX(adate) 
FROM assetunload b 
INNER JOIN assetunloadkind t on b.idassetunloadkind=t.idassetunloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory 
where nassetunload < %<assetunload.nassetunload>%
and     yassetunload = %<assetunload.yassetunload>% 
and     i.idinventorykind = 
		[select i1.idinventorykind FROM assetunloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetunloadkind=%<assetunload.idassetunloadkind>%]{I}
		
]{D} , %<assetunload.adate>%))

AND
%<assetunload.adate>% <= 
(ISNULL( [select MIN(adate) 
FROM assetunload b 
INNER JOIN assetunloadkind t on b.idassetunloadkind=t.idassetunloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory 
where nassetunload > %<assetunload.nassetunload>%
and yassetunload = %<assetunload.yassetunload>% 
and  i.idinventorykind = 
		[select i1.idinventorykind FROM assetunloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetunloadkind=%<assetunload.idassetunloadkind>%]{I}
]{D},
%<assetunload.adate>%))

AND
%<assetunload.adate>% >= 
(ISNULL([select MAX(adate) 
FROM assetload b 
INNER JOIN assetloadkind t on b.idassetloadkind=t.idassetloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory  
where nassetload < %<assetunload.nassetunload>%
and yassetload = %<assetunload.yassetunload>% 
and  i.idinventorykind =  
		[select i1.idinventorykind FROM assetunloadkind t1 
				INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
				WHERE t1.idassetunloadkind=%<assetunload.idassetunloadkind>%]{I}
]{D} ,
%<assetunload.adate>%))
AND
%<assetunload.adate>% <= 

(ISNULL( [select MIN(adate) 
FROM assetload b 
INNER JOIN assetloadkind t on b.idassetloadkind=t.idassetloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory  
where nassetload >%<assetunload.nassetunload>%
and yassetload = %<assetunload.yassetunload>% 
and  i.idinventorykind=  
		[select i1.idinventorykind FROM assetunloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetunloadkind=%<assetunload.idassetunloadkind>%]{I}
]{D} ,
%<assetunload.adate>%))
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI009','3','I','assetunload','S','S','S','N','N',{ts '2008-06-16 16:48:19.860'},'SA','La data contabile del buono di scarico %<assetunloadkind.description>% %<yassetunload>%/%<nassetunload>% deve rispettare la cronologia dei documenti esistenti (numerazione unica tra buoni di carico e di scarico, distinta per ente inventariale)','N','--post

--Numerazione unica tra buoni di carico e di scarico, distinta per 
--Ente inventariale di codice tipo buono,

(
[(select asset_flagnumbering
from config 
where ayear = %<esercizio>%)]{C} <> ''E'')

OR
(
%<assetunload.adate>% >= 
(ISNULL([select MAX(adate) 
FROM assetunload b 
INNER JOIN assetunloadkind t on b.idassetunloadkind=t.idassetunloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory 
where nassetunload < %<assetunload.nassetunload>%
and     yassetunload = %<assetunload.yassetunload>% 
and     i.idinventoryagency = 
		[select i1.idinventoryagency FROM assetunloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetunloadkind=%<assetunload.idassetunloadkind>%]{I}

]{D} , %<assetunload.adate>%))

AND
%<assetunload.adate>% <= 
(ISNULL( [select MIN(adate) 
FROM assetunload b 
INNER JOIN assetunloadkind t on b.idassetunloadkind=t.idassetunloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory 
where nassetunload > %<assetunload.nassetunload>%
and yassetunload = %<assetunload.yassetunload>% 
and  i.idinventoryagency = 
		[select i1.idinventoryagency FROM assetunloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetunloadkind=%<assetunload.idassetunloadkind>%]{I}

]{D} ,
%<assetunload.adate>%))

AND
%<assetunload.adate>% >= 
(ISNULL([select MAX(adate) 
FROM assetload b 
INNER JOIN assetloadkind t on b.idassetloadkind=t.idassetloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory  
where nassetload < %<assetunload.nassetunload>%
and yassetload = %<assetunload.yassetunload>% 
and  i.idinventoryagency =  
		[select i1.idinventoryagency FROM assetunloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetunloadkind=%<assetunload.idassetunloadkind>%]{I}

]{D} ,
%<assetunload.adate>%))

AND
%<assetunload.adate>% <= 
(ISNULL( [select MIN(adate) 
FROM assetload b 
INNER JOIN assetloadkind t on b.idassetloadkind=t.idassetloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory  
where nassetload >%<assetunload.nassetunload>%
and yassetload = %<assetunload.yassetunload>% 
and  i.idinventoryagency=  
[select i1.idinventoryagency FROM assetunloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetunloadkind=%<assetunload.idassetunloadkind>%]{I}

]{D} ,
%<assetunload.adate>%))
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI009','4','I','assetunload','S','S','S','N','N',{ts '2008-06-16 16:44:16.517'},'SA','La data contabile del buono di scarico %<assetunloadkind.description>% %<yassetunload>%/%<nassetunload>% deve rispettare la cronologia dei documenti esistenti (numerazione distinta per tipo buono scarico)','N','--post

--Numerazione distinta tra buoni di carico e di scarico, distinta per 
--Codice tipo buono
(

[(select asset_flagnumbering
from config 
where ayear = %<esercizio>%)]{C} <> ''B'')

OR
(
%<assetunload.adate>% >= 
(ISNULL([select MAX(adate) from 
assetunload 
where nassetunload < %<assetunload.nassetunload>% 
AND yassetunload = %<assetunload.yassetunload>% 
AND  idassetunloadkind =  %<assetunload.idassetunloadkind>%]{D},
%<assetunload.adate>%))

AND

%<assetunload.adate>% <= 
(ISNULL( [select MIN(adate) from assetunload 
where nassetunload > %<assetunload.nassetunload>% 
AND yassetunload = %<assetunload.yassetunload>% 
AND idassetunloadkind = %<assetunload.idassetunloadkind>%]{D},
%<assetunload.adate>%))
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI009','5','I','assetunload','S','S','S','N','N',{ts '2008-06-16 16:53:22.983'},'SA','La data contabile del buono di scarico %<assetunloadkind.description>% %<yassetunload>%/%<nassetunload>% deve rispettare la cronologia dei documenti esistenti (numerazione unica tra buoni di scarico di tipologia differente, distinguendo i buoni di carico)','N','--post
--Numerazione unica tra buoni di scarico di tipo differente, (distinguendo i buoni di carico e i buoni di scarico)

(
[select asset_flagnumbering
from config 
where ayear = %<esercizio>%]{C} <> ''K'')

OR
(

%<assetunload.adate>% >= 
(ISNULL([select MAX(adate) from 
assetunload 
where nassetunload < %<assetunload.nassetunload>% 
AND yassetunload = %<assetunload.yassetunload>%]{D},
%<assetunload.adate>%))

AND

%<assetunload.adate>% <= 
(ISNULL( [select MIN(adate) from assetunload 
where nassetunload > %<assetunload.nassetunload>% 
AND yassetunload = %<assetunload.yassetunload>%]{D},
%<assetunload.adate>%))

)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI019','1','I','assetunload','S','S','S','N','N',{ts '2007-02-19 09:24:53.483'},'''NINO''','La data di ratifica del buono di scarico %<assetunload.yassetunload>% / %<assetunload.nassetunload>% ha un esercizio precedente al buono','N','%<assetunload.ratificationdate>% is null
or
YEAR(%<assetunload.ratificationdate>%) >= %<assetunload.yassetunload>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI038','1','I','assetunload','S','S','S','N','N',{ts '2008-04-02 16:38:50.670'},'SA','La data di ratifica del buono di scarico %<assetunload.yassetunload>% / %<assetunload.nassetunload>% ha un esercizio successivo al buono','N','%<assetunload.ratificationdate>% is null
or
YEAR(%<assetunload.ratificationdate>%) <= %<assetunload.yassetunload>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI041','1','I','assetunload','S','S','S','N','N',{ts '2008-12-03 16:20:06.593'},'ASSISTENZA','Non è stata inserita la data di ratifica.','N','%<assetunload.ratificationdate>% IS NOT NULL

OR

[( SELECT COUNT(*) FROM assetunloadincome WHERE
  idassetunload= %<assetunload.idassetunload>%)]{I} >0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','1','I','assetunload','S','S','S','N','N',{ts '2007-12-13 14:25:15.653'},'NINO','Il buono di scarico non può essere inserito. Esercizio %<esercizio>% chiuso.','N','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 16) = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','1','I','assetunload','S','S','S','N','N',{ts '2008-07-10 15:58:44.517'},'ASSISTENZA','Il buono di scarico non può essere inserito.
L''ente interessato dall''operazione è considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','N','[(select count(*) from assetvar
where assetvar.idinventoryagency =
	[(select inventory.idinventoryagency
	from assetunloadkind
	join inventory on inventory.idinventory = assetunloadkind.idinventory
	where assetunloadkind.idassetunloadkind = %<assetunload.idassetunloadkind>%
	)]{I}
and assetvar.yvar = 1+year(%<assetunload.yassetunload>%)
and (assetvar.flag & 1)=0
)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','assetunload','S','S','S','N','N',{ts '2007-11-15 16:18:32.467'},'NINO','Buono di scarico %<assetunloadkind.codeassetunloadkind>% - %<assetunload.nassetunload>% / %<assetunload.yassetunload>% già esistente','S','[SELECT COUNT(*) 
FROM assetunload
WHERE idassetunloadkind = %<assetunload.idassetunloadkind>%
AND yassetunload = %<assetunload.yassetunload>%
AND nassetunload = %<assetunload.nassetunload>%
]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI009','1','U','assetunload','S','S','S','N','N',{ts '2007-09-01 15:04:33.217'},'NINO','La data contabile del buono di scarico %<assetunloadkind.description>% %<yassetunload>%/%<nassetunload>% deve rispettare la cronologia dei documenti esistenti (numerazione unica tra buoni di carico e di scarico)','N','--post
--Numerazione unica tra buoni di carico e di scarico
(
[select asset_flagnumbering
from config 
where ayear = %<esercizio>%]{C} <> ''U'')

OR
(
%<assetunload.adate>% >= 
(ISNULL([select MAX(adate) from 
assetunload 
where nassetunload < %<assetunload.nassetunload>% 
AND yassetunload = %<assetunload.yassetunload>%]{D},
%<assetunload.adate>%))

AND

%<assetunload.adate>% <= 
(ISNULL( [select MIN(adate) from assetunload 
where nassetunload > %<assetunload.nassetunload>% 
AND yassetunload = %<assetunload.yassetunload>%]{D},
%<assetunload.adate>%))

AND

%<assetunload.adate>% >= 
(ISNULL([select MAX(adate) from assetload 
where nassetload < %<assetunload.nassetunload>% 
AND yassetload = %<assetunload.yassetunload>%]{D},
%<assetunload.adate>%))

AND

%<assetunload.adate>% <= 
(ISNULL( [select MIN(adate) from assetload where 
nassetload > %<assetunload.nassetunload>% 
AND yassetload = %<assetunload.yassetunload>%]{D},
%<assetunload.adate>%))
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI009','2','U','assetunload','S','S','S','N','N',{ts '2007-11-08 14:29:25.633'},'NINO','La data contabile del buono di scarico %<assetunloadkind.description>% %<yassetunload>%/%<nassetunload>% deve rispettare la cronologia dei documenti esistenti (numerazione unica tra buoni di carico e scarico, distinta per tipo inventario)','N','--Numerazione unica tra buoni di carico e di scarico, distinta per 
--tipo inventario di codice tipo buono,
(
[select asset_flagnumbering
from config 
where ayear = %<esercizio>%]{C} <> ''T'')
OR
(
%<assetunload.adate>% >= 
(ISNULL([select MAX(adate) 
FROM assetunload b 
INNER JOIN assetunloadkind t on b.idassetunloadkind=t.idassetunloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory 
where nassetunload < %<assetunload.nassetunload>%
and     yassetunload = %<assetunload.yassetunload>% 
and     i.idinventorykind = 
		[select i1.idinventorykind FROM assetunloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetunloadkind=%<assetunload.idassetunloadkind>%]{I}
]{D}, %<assetunload.adate>%))

AND

%<assetunload.adate>% <= 
(ISNULL( [select MIN(adate) 
FROM assetunload b 
INNER JOIN assetunloadkind t on b.idassetunloadkind=t.idassetunloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory 
where nassetunload > %<assetunload.nassetunload>%
and yassetunload = %<assetunload.yassetunload>% 
and  i.idinventorykind = 
		[select i1.idinventorykind FROM assetunloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetunloadkind=%<assetunload.idassetunloadkind>%]{I}


]{D},
%<assetunload.adate>%))

AND
%<assetunload.adate>% >= 

(ISNULL([select MAX(adate) 
FROM assetload b 
INNER JOIN assetloadkind t on b.idassetloadkind=t.idassetloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory  
where nassetload < %<assetunload.nassetunload>%
and yassetload = %<assetunload.yassetunload>% 
and  i.idinventorykind =  
		[select i1.idinventorykind FROM assetunloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetunloadkind=%<assetunload.idassetunloadkind>%]{I}

]{D} ,
%<assetunload.adate>%))

AND

%<assetunload.adate>% <= 

(ISNULL( [select MIN(adate) 
FROM assetload b 
INNER JOIN assetloadkind t on b.idassetloadkind=t.idassetloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory  
where nassetload >%<assetunload.nassetunload>%
and yassetload = %<assetunload.yassetunload>% 
and  i.idinventorykind=  
		[select i1.idinventorykind FROM assetunloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetunloadkind=%<assetunload.idassetunloadkind>%]{I}
]{D} ,
%<assetunload.adate>%))

)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI009','3','U','assetunload','S','S','S','N','N',{ts '2007-11-08 15:25:31.100'},'NINO','La data contabile del buono di scarico %<assetunloadkind.description>% %<yassetunload>%/%<nassetunload>% deve rispettare la cronologia dei documenti esistenti (numerazione unica tra buoni di carico e di scarico, distinta per ente inventariale)','N','--Numerazione unica tra buoni di carico e di scarico, distinta per 
--Ente inventariale di codice tipo buono,

(

[(select asset_flagnumbering
from config 
where ayear = %<esercizio>%)]{C} <> ''E'')

OR
(
%<assetunload.adate>% >= 
(ISNULL([select MAX(adate) 
FROM assetunload b 
INNER JOIN assetunloadkind t on b.idassetunloadkind=t.idassetunloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory 
where nassetunload < %<assetunload.nassetunload>%
and     yassetunload = %<assetunload.yassetunload>% 
and     i.idinventoryagency = 
		[select i1.idinventoryagency FROM assetunloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetunloadkind=%<assetunload.idassetunloadkind>%]{I}

]{D} , %<assetunload.adate>%))

AND
%<assetunload.adate>% <= 
(ISNULL( [select MIN(adate) 
FROM assetunload b 
INNER JOIN assetunloadkind t on b.idassetunloadkind=t.idassetunloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory 
where nassetunload > %<assetunload.nassetunload>%
and yassetunload = %<assetunload.yassetunload>% 
and  i.idinventoryagency = 
		[select i1.idinventoryagency FROM assetunloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetunloadkind=%<assetunload.idassetunloadkind>%]{I}

]{D} ,
%<assetunload.adate>%))

AND
%<assetunload.adate>% >= 
(ISNULL([select MAX(adate) 
FROM assetload b 
INNER JOIN assetloadkind t on b.idassetloadkind=t.idassetloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory  
where nassetload < %<assetunload.nassetunload>%
and yassetload = %<assetunload.yassetunload>% 
and  i.idinventoryagency =  
	[select i1.idinventoryagency FROM assetunloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetunloadkind=%<assetunload.idassetunloadkind>%]{I}

]{D} ,
%<assetunload.adate>%))

AND
%<assetunload.adate>% <= 
(ISNULL( [select MIN(adate) 
FROM assetload b 
INNER JOIN assetloadkind t on b.idassetloadkind=t.idassetloadkind
INNER JOIN inventory i ON t.idinventory=i.idinventory  
where nassetload >%<assetunload.nassetunload>%
and yassetload = %<assetunload.yassetunload>% 
and  i.idinventoryagency=  
[select i1.idinventoryagency FROM assetunloadkind t1 
			INNER JOIN inventory i1 ON t1.idinventory=i1.idinventory 
			WHERE t1.idassetunloadkind=%<assetunload.idassetunloadkind>%]{I}

]{D} ,
%<assetunload.adate>%))
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI009','4','U','assetunload','S','S','S','N','N',{ts '2007-09-01 15:05:02.547'},'NINO','La data contabile del buono di scarico %<assetunloadkind.description>% %<yassetunload>%/%<nassetunload>% deve rispettare la cronologia dei documenti esistenti (numerazione distinta per tipo buono scarico)','N','--Numerazione distinta tra buoni di carico e di scarico, distinta per 
--Codice tipo buono
(
[(select asset_flagnumbering
from config 
where ayear = %<esercizio>%)]{C} <> ''B'')

OR
(
%<assetunload.adate>% >= 
(ISNULL([select MAX(adate) from 
assetunload 
where nassetunload < %<assetunload.nassetunload>% 
AND yassetunload = %<assetunload.yassetunload>% 
AND  idassetunloadkind =  %<assetunload.idassetunloadkind>%] {D},
%<assetunload.adate>%))

AND

%<assetunload.adate>% <= 
(ISNULL( [select MIN(adate) from assetunload 
where nassetunload > %<assetunload.nassetunload>% 
AND yassetunload = %<assetunload.yassetunload>% 
AND idassetunloadkind = %<assetunload.idassetunloadkind>%]{D},
%<assetunload.adate>%))
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI009','5','U','assetunload','S','S','S','N','N',{ts '2008-06-16 16:53:14.967'},'SA','La data contabile del buono di scarico %<assetunloadkind.description>% %<yassetunload>%/%<nassetunload>% deve rispettare la cronologia dei documenti esistenti (numerazione unica tra buoni di scarico di tipologia differente, distinguendo i buoni di carico)','N','--post
--Numerazione unica tra buoni di scarico di tipo differente, (distinguendo i buoni di carico e i buoni di scarico)
(
[select asset_flagnumbering
from config 
where ayear = %<esercizio>%]{C} <> ''K'')

OR
(
%<assetunload.adate>% >= 
(ISNULL([select MAX(adate) from 
assetunload 
where nassetunload < %<assetunload.nassetunload>% 
AND yassetunload = %<assetunload.yassetunload>%]{D},
%<assetunload.adate>%))

AND

%<assetunload.adate>% <= 
(ISNULL( [select MIN(adate) from assetunload 
where nassetunload > %<assetunload.nassetunload>% 
AND yassetunload = %<assetunload.yassetunload>%]{D},
%<assetunload.adate>%))

)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI019','1','U','assetunload','S','S','S','N','N',{ts '2007-02-19 09:24:57.843'},'''NINO''','La data di ratifica del buono di scarico %<assetunload.yassetunload>% / %<assetunload.nassetunload>% ha un esercizio precedente al buono','S','%<assetunload.ratificationdate>% is null
or
YEAR(%<assetunload.ratificationdate>%) >= %<assetunload.yassetunload>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI033','1','U','assetunload','S','S','S','N','N',{ts '2007-11-08 15:26:10.363'},'NINO','Non è consentito modificare il Buono di Scarico in quanto già trasmesso','N','ISNULL(%<assetunload.transmitted>%,''N'') <> ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI034','1','U','assetunload','S','S','S','N','N',{ts '2007-06-04 10:59:29.920'},'''SARA''','Non è consentito impostare manualmente un Buono di Scarico come "Trasmesso"','S','(
 ISNULL(&<assetunload.transmitted>&,''N'') = 
 ISNULL(%<assetunload.transmitted>%,''N'') 
)
OR
(ISNULL(%<assetunload.transmitted>%,''N'') <> ''S'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI038','1','U','assetunload','S','S','S','N','N',{ts '2008-04-02 16:38:57.750'},'SA','La data di ratifica del buono di scarico %<assetunload.yassetunload>% / %<assetunload.nassetunload>% ha un esercizio successivo al buono','S','%<assetunload.ratificationdate>% is null
or
YEAR(%<assetunload.ratificationdate>%)<= %<assetunload.yassetunload>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI041','1','U','assetunload','S','S','S','N','N',{ts '2008-12-03 16:18:04.547'},'ASSISTENZA','Non è stata inserita la data di ratifica.','N','%<assetunload.ratificationdate>% IS NOT NULL

OR

[ISNULL(( SELECT COUNT(*) FROM assetunloadincome WHERE
   idassetunload = %<assetunload.idassetunload>%),0)]{I} >0




')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','1','U','assetunload','S','S','S','N','N',{ts '2013-05-15 09:40:11.823'},'nino','Non è possibile cambiare la data di ratifica al buono. Esiste una var.iniziale nell''anno successivo.','S','(ISNULL(year(%<assetunload.adate>%), 0) = ISNULL(year(&<assetunload.adate>&), 0) )
OR
[SELECT count(*) from assetvar
	WHERE yvar = year(&<assetunload.adate>&)+1
	and (flag&1)=0
]{I} 	 = 0
OR 
ISNULL(year(&<assetunload.adate>&), 0)=0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','2','U','assetunload','S','S','S','N','N',{ts '2013-05-15 09:40:18.353'},'nino','Non è possibile cambiare la data di ratifica al buono. Esiste una var.iniziale nell''anno successivo.','S','(ISNULL(year(%<assetunload.adate>%), 0) = ISNULL(year(&<assetunload.adate>&), 0) )
OR
[SELECT count(*) from assetvar
	WHERE yvar = year(%<assetunload.adate>%)+1
	and (flag&1)=0
]{I} 	 = 0
OR 
ISNULL(year(%<assetunload.adate>%), 0)=0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI041','1','D','assetunloadincome','S','S','S','N','N',{ts '2008-12-03 16:17:49.217'},'ASSISTENZA','Non è stata inserita la data di ratifica.','N','
[(SELECT COUNT(*) FROM assetunloadincome 
WHERE assetunloadincome.idassetunload =%<assetunloadincome.idassetunload>%)]{I}
>0 

OR

[(SELECT ratificationdate FROM assetunload
	where idassetunload = &<assetunloadincome.idassetunload>&
)]{D} IS NOT NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI019','1','I','assetunloadincome','S','S','S','N','N',{ts '2008-03-12 13:09:54.750'},'NINO','La data di competenza del movimento selezionato è di un anno precedente a quello del buono di scarico','N','isnull([SELECT MAX(YEAR(competencydate))
FROM historyproceedsview
WHERE idinc = %<assetunloadincome.idinc>%]{I},0)
>= 
[SELECT yassetunload FROM assetunload
WHERE idassetunload = %<assetunloadincome.idassetunload>%]{I}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI038','1','I','assetunloadincome','S','S','S','N','N',{ts '2008-04-02 17:08:11.953'},'SA','La data di competenza del movimento selezionato è di un anno successivo a quello del buono di scarico','N','isnull([SELECT MAX(YEAR(competencydate))
FROM historyproceedsview
WHERE idinc = %<assetunloadincome.idinc>%]{I},0)
<= 
[SELECT yassetunload FROM assetunload
WHERE idassetunload = %<assetunloadincome.idassetunload>%]{I}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','D','assetunloadkind','S','S','S','N','N',{ts '2009-01-20 12:16:19.477'},'SA','Il tipo di buono di scarico %<assetunloadkind.description>% non può essere cancellato','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','assetunloadkind','S','S','S','N','N',{ts '2007-09-13 11:52:49.860'},'NINO','Il tipo di buono di scarico %<description>% non può essere cancellato in quanto esistono buoni di scarico inventariali che lo referenziano.','S','[(SELECT count(*) 
from assetunload 
where idassetunloadkind = %<assetunloadkind.idassetunloadkind>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','I','assetunloadkind','S','S','S','N','N',{ts '2009-01-20 12:16:22.227'},'SA','Il tipo di buono di scarico %<assetunloadkind.description>% non può essere inserito','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','assetunloadkind','S','S','S','N','N',{ts '2007-11-12 11:05:20.733'},'SA','Tipo del buono di scarico %<assetunloadkind.codeassetunloadkind>% già esistente','S','[(SELECT count(*) 
from assetunloadkind 
where idassetunloadkind = %<assetunloadkind.idassetunloadkind>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','assetunloadkind','S','S','S','N','N',{ts '2007-11-08 16:17:51.697'},'NINO','Descrizione del tipo di buono di scarico già esistente','S','[(SELECT count(*) 
from assetunloadkind 
where description = %<assetunloadkind.description>%)]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','U','assetunloadkind','S','S','S','N','N',{ts '2009-01-20 12:16:25.790'},'SA','Il tipo di buono di scarico %<assetunloadkind.description>% non può essere modificato','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','U','assetunloadkind','S','S','S','N','N',{ts '2007-05-25 13:10:31.250'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','assetunloadkind','S','S','S','N','N',{ts '2007-11-08 16:18:06.970'},'NINO','Descrizione del tipo di buono di scarico già esistente','S','[(SELECT count(*) 
from assetunloadkind 
where idassetunloadkind <> %<assetunloadkind.idassetunloadkind>% 
and description = %<assetunloadkind.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','D','assetunloadmotive','S','S','S','N','N',{ts '2009-01-20 12:16:29.790'},'SA','La causale di scarico %<assetunloadmotive.description>% non può essere cancellata','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','D','assetunloadmotive','S','S','S','N','N',{ts '2007-05-25 13:54:47.250'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI032','1','D','assetunloadmotive','S','S','S','N','N',{ts '2007-05-25 13:54:47.250'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','assetunloadmotive','S','S','S','N','N',{ts '2007-09-13 11:52:57.140'},'NINO','Cancellazione Impossibile! Esistono buoni di scarico collegati alla causale di scarico %<description>%','S','[(SELECT count(*) 
from assetunload 
where idmot = %<assetunloadmotive.idmot>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','I','assetunloadmotive','S','S','S','N','N',{ts '2009-01-20 12:16:33.167'},'SA','La causale di scarico %<assetunloadmotive.description>% non può essere inserita','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','I','assetunloadmotive','S','S','S','N','N',{ts '2007-05-25 13:53:15.297'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','assetunloadmotive','S','S','S','N','N',{ts '2007-11-08 16:18:50.000'},'NINO','Causale di scarico già esistente','S','[(SELECT count(*) 
from assetunloadmotive
where idmot = %<assetunloadmotive.idmot>%)]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','assetunloadmotive','S','S','S','N','N',{ts '2007-11-08 16:18:57.293'},'NINO','Descrizione della causale di scarico già esistente','S','[(SELECT count(*) 
from assetunloadmotive
where description = %<assetunloadmotive.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','U','assetunloadmotive','S','S','S','N','N',{ts '2009-01-20 12:16:36.823'},'SA','La causale di scarico %<assetunloadmotive.description>% non può essere modificata','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','U','assetunloadmotive','S','S','S','N','N',{ts '2007-05-25 13:54:18.170'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','assetunloadmotive','S','S','S','N','N',{ts '2007-11-08 16:19:11.270'},'NINO','Descrizione della causale di scarico già esistente','S','[(SELECT count(*) 
from assetunloadmotive
where idmot <> %<assetunloadmotive.idmot>% 
and description = %<assetunloadmotive.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI033','1','U','assetusage','S','S','S','N','N',{ts '2007-11-08 16:19:29.717'},'NINO','Non è consentito modificare la Quota di Utilizzo Carico Cespite/Accessorio in quanto già trasmesso','N','ISNULL(%<assetusage.transmitted>%,''N'') <> ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI034','1','U','assetusage','S','S','S','N','N',{ts '2007-06-04 10:59:40.937'},'''SARA''','Non è consentito impostare manualmente una Quota di uilizzo di un Carico Cespite o Accessorio come "Trasmessa"','S','(
 ISNULL(&<assetusage.transmitted>&,''N'') = 
 ISNULL(%<assetusage.transmitted>%,''N'') 
)
OR
(ISNULL(%<assetusage.transmitted>%,''N'') <> ''S'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','D','assetusagekind','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI032','1','D','assetusagekind','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','assetusagekind','S','S','S','N','N',{ts '2008-02-22 11:23:29.300'},'SARA','Il tipo di utilizzo %<description>% non può essere cancellato in quanto esistono carichi di beni inventariabili che lo referenziano.','S','[execute count_table_field ''assetusage'',''idassetusagekind'',
%<assetusagekind.idassetusagekind>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','I','assetusagekind','S','S','S','N','N',{ts '2007-05-25 13:05:31.327'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','assetusagekind','S','S','S','N','N',{ts '2007-11-09 13:21:18.877'},'SA','Tipo di utilizzo %<codeassetusagekind>% già esistente','S','[(SELECT count(*) 
from assetusagekind 
where codeassetusagekind = %<assetusagekind.codeassetusagekind>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','assetusagekind','S','S','S','N','N',{ts '2007-11-09 13:19:57.640'},'SA','Descrizione del tipo di utilizzo già esistente','S','[(SELECT count(*) 
from assetusagekind 
where description = %<assetusagekind.description>%
)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','U','assetusagekind','S','S','S','N','N',{ts '2007-05-25 13:05:43.627'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','assetusagekind','S','S','S','N','N',{ts '2007-11-08 16:21:37.237'},'NINO','Descrizione del tipo di utilizzo già esistente','S','[(SELECT count(*) 
from assetusagekind 
where idassetusagekind <> %<assetusagekind.idassetusagekind>% 
and description = %<assetusagekind.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','1','D','assetvar','S','S','S','N','N',{ts '2012-03-30 11:01:16.593'},'sa','La variazione patrimoniale n. %<assetvar.nvar>% / %<assetvar.yvar>% non può essere cancellata. Esercizio %<esercizio>% chiuso.','N','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 16) = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','1','D','assetvar','S','S','S','N','N',{ts '2008-03-06 13:28:45.077'},'SA','La variazione patrimoniale n. %<assetvar.nvar>% / %<assetvar.yvar>% non può essere cancellata perchè l''ente ''%<inventoryagency.description>%'' è considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','N','[(select count(*) from assetvar
where assetvar.idinventoryagency = %<assetvar.idinventoryagency>%
and assetvar.yvar = 1+%<esercizio>%
and (assetvar.flag & 1)=0)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','1','I','assetvar','S','S','S','N','N',{ts '2012-03-30 11:01:27.017'},'sa','La variazione patrimoniale n. %<assetvar.nvar>% / %<assetvar.yvar>% non può essere inserita. Esercizio %<esercizio>% chiuso.','N','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 16) = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','1','I','assetvar','S','S','S','N','N',{ts '2008-03-05 16:42:38.920'},'SA','L''ente ''%<assetvarview.inventoryagency>%'' è considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','N','[(select count(*) from assetvar
where assetvar.idinventoryagency = %<assetvar.idinventoryagency>%
and assetvar.yvar = 1+%<esercizio>%
and (assetvar.flag & 1)=0)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','1','U','assetvar','S','S','S','N','N',{ts '2012-03-30 11:01:36.390'},'sa','La variazione patrimoniale n. %<assetvar.nvar>% / %<assetvar.yvar>% non può essere modificata. Esercizio %<esercizio>% chiuso.','N','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 16) = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','1','U','assetvar','S','S','S','N','N',{ts '2008-03-05 16:42:46.047'},'SA','L''ente ''%<assetvarview.inventoryagency>%'' è considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','N','[(select count(*) from assetvar
where assetvar.idinventoryagency = %<assetvar.idinventoryagency>%
and assetvar.yvar = 1+%<esercizio>%
and (assetvar.flag & 1)=0)]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','1','D','assetvardetail','S','S','S','N','N',{ts '2013-05-04 15:22:13.640'},'assistenza','Il dettaglio della  variazione patrimoniale n. %<assetvar.nvar>% / %<assetvar.yvar>% non può essere cancellato. Esiste una variazione iniziale nell''anno successivo.','N','[SELECT count(*) from assetvar
	WHERE yvar = 
	[select yvar from assetvar where idassetvar =
		%<assetvar.idassetvar>%]{I}+1
	and (flag&1)=0
]{I} 	 = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','1','D','assetvardetail','S','S','S','N','N',{ts '2008-03-11 14:28:44.530'},'SA','Il dettaglio della variazione patrimoniale n. %<assetvar.nvar>% / %<assetvar.yvar>% non può essere cancellato.
L''ente ''%<inventoryagency.description>%'' è considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','N','[(select count(*) from assetvar
where assetvar.yvar = 1 + 
	[(select yvar from assetvar padre 
	where padre.idassetvar = %<assetvardetail.idassetvar>%
	)]{I}
and idinventoryagency = 
	[(select idinventoryagency from assetvar padre 
	where padre.idassetvar = %<assetvardetail.idassetvar>%
	)]{I}
and (assetvar.flag & 1)=0
)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','1','I','assetvardetail','S','S','S','N','N',{ts '2013-05-04 15:22:21.513'},'assistenza','Il dettaglio della variazione patrimoniale n. %<assetvar.nvar>% / %<assetvar.yvar>% non può essere inserito. Esercizio %<esercizio>% chiuso.','N','[SELECT count(*) from assetvar
	WHERE yvar = 
	[select yvar from assetvar where idassetvar =
		%<assetvar.idassetvar>%]{I}+1
	and (flag&1)=0
]{I} 	 = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','1','I','assetvardetail','S','S','S','N','N',{ts '2008-03-11 14:32:14.017'},'SA','Il dettaglio della variazione patrimoniale n. %<assetvar.nvar>% / %<assetvar.yvar>% non può essere inserito.
L''ente ''%<inventoryagency.description>%'' è considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','N','[(select count(*) from assetvar
where assetvar.yvar = 1 + 
	[(select yvar from assetvar padre 
	where padre.idassetvar = %<assetvardetail.idassetvar>%
	)]{I}
and assetvar.idinventoryagency = 
	[(select idinventoryagency from assetvar padre 
	where padre.idassetvar = %<assetvardetail.idassetvar>%
	)]{I}
and (assetvar.flag & 1)=0
)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE002','1','U','assetvardetail','S','S','S','N','N',{ts '2013-05-04 15:22:29.873'},'assistenza','Il dettaglio della variazione patrimoniale n. %<assetvar.nvar>% / %<assetvar.yvar>% non può essere modificato. Esercizio %<esercizio>% chiuso.','N','[SELECT count(*) from assetvar
	WHERE yvar = 
	[select yvar from assetvar where idassetvar =
		%<assetvar.idassetvar>%]{I}+1
	and (flag&1)=0
]{I} 	 = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE004','1','U','assetvardetail','S','S','S','N','N',{ts '2008-03-11 14:32:37.157'},'SA','Il dettaglio della variazione patrimoniale n. %<assetvar.nvar>% / %<assetvar.yvar>% non può essere inserito.
L''ente ''%<inventoryagency.description>%'' è considerato "chiuso" in quanto esiste nell''anno successivo una variazione iniziale relativa a tale ente.','N','[(select count(*) from assetvar
where assetvar.yvar = 1 + 
	[(select yvar from assetvar padre 
	where padre.idassetvar = %<assetvardetail.idassetvar>%
	)]{I}
and assetvar.idinventoryagency = 
	[(select idinventoryagency from assetvar padre 
	where padre.idassetvar = %<assetvardetail.idassetvar>%
	)]{I}
and (assetvar.flag & 1)=0
)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM004','1','D','audit','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','La cancellazione della regola di business %<idaudit>% comporterà la cancellazione automatica di tutti i relativi controlli sulle operazioni','S','[(SELECT count(*) 
from auditcheck 
where idaudit = %<audit.idaudit>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','authagency','S','S','S','N','N',{ts '2010-11-15 15:11:31.953'},'sara','Cancellazione Impossibile! Esistono modelli autorizzativi collegati all''agente autorizzativo  %<authagency.title>%','S','[(SELECT count(*) 
from authmodelauthagency 
where idauthagency = %<authagency.idauthagency>%)]{I}
= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','authmodel','S','S','S','N','N',{ts '2010-11-15 15:08:43.203'},'sara','Cancellazione Impossibile! Esistono missioni collegate al modello autorizzativo %<authmodel.description>%','S','[(SELECT count(*) 
from itineration 
where idauthmodel = %<authmodel.idauthmodel>%
)]{I} 
= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','bank','S','S','S','N','N',{ts '2007-11-13 12:13:37.577'},'SARA','Cancellazione Impossibile! Esistono movimenti di spesa collegati alla banca %<description>%','S','[execute count_table_field ''expenselast'',''idbank'',
	%<bank.idbank>%,@outvar output]{I}=0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','bank','S','S','S','N','N',{ts '2007-09-13 11:53:21.420'},'NINO','Cancellazione Impossibile! Esistono tesorieri collegati alla banca %<description>%','S','[execute count_table_field ''treasurer '',''idbank'',
	%<bank.idbank>%,@outvar output]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','bank','S','S','S','N','N',{ts '2007-09-13 11:53:29.640'},'NINO','Cancellazione Impossibile! Esistono modalità di pagamento usate in anagrafica collegati alla banca %<description>%','S','[execute count_table_field ''registrypaymethod '',''idbank'',
	%<bank.idbank>%,@outvar output]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM004','1','D','bank','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','La cancellazione della banca %<description>% comporterà la cancellazione di tutti i suoi sportelli','S','[(SELECT count(*) 
from cab 
where idbank = %<bank.idbank>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM013','1','D','bank','S','S','S','N','N',{ts '2008-07-28 15:08:19.837'},'SARA','La cancellazione della banca %<description>% comporterebbe la cancellazione di tutti i suoi sportelli.','S','[(SELECT count(*) 
from cab 
where idbank = %<bank.idbank>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','bank','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Banca con il codice ABI %<idbank>% già esistente','S','[(SELECT count(*) 
from bank 
where idbank = %<bank.idbank>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','bank','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Banca con la denominazione %<description>% già esistente','S','[(SELECT count(*) 
from bank 
where idbank <> %<bank.idbank>% 
and description = %<bank.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','D','banktransaction','S','S','S','N','N',{ts '2008-01-07 12:27:41.110'},'SARA','L''esito n. %<banktransaction.nban>% / %<banktransaction.yban>% non può essere cancellato. Esercizio  %<esercizio>% chiuso','S','([SELECT cashvaliditykind
  FROM config
  WHERE ayear = %<sys_esercizio>%]{I} <> 4)
OR 
(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','I','banktransaction','S','S','S','N','N',{ts '2008-01-07 12:27:49.780'},'SARA','L''esito n. %<banktransaction.nban>% / %<banktransaction.yban>% non può essere inserito. Esercizio  %<esercizio>% chiuso','S','([SELECT cashvaliditykind
  FROM config
  WHERE ayear = %<sys_esercizio>%]{I} <> 4)
OR 
(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM040','1','I','banktransaction','S','S','S','N','N',{ts '2009-05-20 15:04:21.273'},'SA','La data della transazione bancaria inserita deve essere concorde con l''esercizio della stessa o al più di esercizio successivo.','S','YEAR(ISNULL(%<banktransaction.transactiondate>%,{D ''1900-01-01''})) = %<banktransaction.yban>%

OR

(
YEAR(ISNULL(%<banktransaction.transactiondate>%,{D ''1900-01-01''})) -1 = %<banktransaction.yban>%
AND
[SELECT COUNT (*) FROM accountingyear 
WHERE ((flag&0x0F) >= 0)
AND accountingyear.ayear = %<sys_esercizio>%+1]{I}
>0
)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM041','1','I','banktransaction','S','S','S','N','N',{ts '2008-02-14 14:54:20.987'},'ASSISTENZA','Non si può inserire un altro esito poiché si renderebbe l''esitato del mandato (%<payment.ypay>%, %<payment.npay>%) superiore all''importo totale del mandato stesso.','N','(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 
	 WHERE kpay= %<banktransaction.kpay>%
	]{V}
	,0)
 <= 
 isnull(
	[SELECT SUM(ET.curramount) FROM expensetotal ET
	 join expenselast E on E.idexp=ET.idexp
	 WHERE E.kpay= %<banktransaction.kpay>%

	]{V}
	,0)
)
OR 
(
%<banktransaction.kpay>% is null
)
			
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM041','2','I','banktransaction','S','S','S','N','N',{ts '2008-02-14 15:28:59.633'},'ASSISTENZA','Non si può inserire un altro esito poiché si renderebbe l''esitato della reversale (%<proceeds.ypro>%, %<proceeds.npro>%) superiore all''importo totale della reversale stessa.','N','(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 
	 WHERE kpro= %<banktransaction.kpro>%]{V}
	,0)
 <= 
 isnull(
	[SELECT SUM(ET.curramount) FROM incometotal ET
	 JOIN incomelast E ON ET.idinc=E.idinc
	 WHERE E.kpro= %<banktransaction.kpro>%]{V}
	,0)
)
OR 
(
%<banktransaction.kpro>% is null
)
			
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM041','3','I','banktransaction','S','S','S','N','N',{ts '2011-09-08 13:25:07.093'},'sara','Non si può inserire un altro esito poiché si renderebbe l''esitato del movimento di spesa (%<expense.ymov>%, %<expense.nmov>%) superiore all''importo totale del movimento stesso.','N','(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 
		WHERE idexp = %<banktransaction.idexp>%
	]{N}
	,0)
 <= 
 isnull(
	[SELECT ET.curramount FROM expensetotal ET
	 WHERE ET.idexp = %<banktransaction.idexp>%
	]{N}
	,0)
)
OR 
(
%<banktransaction.kpay>% is null
)
	')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM041','4','I','banktransaction','S','S','S','N','N',{ts '2008-02-14 15:24:11.597'},'ASSISTENZA','Non si può inserire un altro esito poiché si renderebbe l''esitato del movimento di entrata (%<income.ymov>%, %<income.nmov>%) superiore all''importo totale del movimento stesso.','N','(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 
	 WHERE idinc = %<banktransaction.idinc>%
	]{N}
	,0)
 <= 
 isnull(
	[SELECT ET.curramount FROM incometotal ET
	 WHERE ET.idinc = %<banktransaction.idinc>%
	]{N}
	,0)
)
OR 
(
%<banktransaction.kpro>% is null
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM054','1','I','banktransaction','S','S','S','N','N',{ts '2007-12-05 14:54:45.153'},'SARA','Il mandato %<payment.ypay>% / %<payment.npay>% non può essere esitato in quanto non risulta trasmesso','S','%<banktransaction.kind>% = ''C''
OR
[SELECT kpaymenttransmission
FROM payment
WHERE kpay = %<banktransaction.kpay>%]{I} IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM054','2','I','banktransaction','S','S','S','N','N',{ts '2008-07-03 13:36:32.767'},'ASSISTENZA','La reversale %<proceeds.ypro>% / %<proceeds.npro>% non può essere esitata in quanto non risulta trasmessa','S','%<banktransaction.kind>% = ''D''
OR
[SELECT kproceedstransmission
FROM proceeds
WHERE kpro = %<banktransaction.kpro>%]{I} IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','U','banktransaction','S','S','S','N','N',{ts '2008-01-07 12:28:00.233'},'SARA','L''esito n. %<banktransaction.nban>% / %<banktransaction.yban>% non può essere modificato. Esercizio  %<esercizio>% chiuso','S','([SELECT cashvaliditykind
  FROM config
  WHERE ayear = %<sys_esercizio>%]{I} <> 4)
OR 
(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM040','1','U','banktransaction','S','S','S','N','N',{ts '2009-05-20 15:01:12.993'},'SA','La data della transazione bancaria inserita deve essere concorde con l''esercizio della stessa o al più di esercizio successivo.','S','(YEAR(ISNULL(%<banktransaction.transactiondate>%,{D ''1900-01-01''}))
= %<banktransaction.yban>%)
OR

(ISNULL(%<banktransaction.transactiondate>%,{D ''1900-01-01''})
= ISNULL(&<banktransaction.transactiondate>&,{D ''1900-01-01''}))

OR

(
YEAR(ISNULL(%<banktransaction.transactiondate>%,{D ''1900-01-01''})) -1= %<banktransaction.yban>%
AND
[SELECT COUNT (*) FROM accountingyear WHERE ((flag&0x0F) >=0)
AND accountingyear.ayear = %<sys_esercizio>%+1]{I}>0
)



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM041','1','U','banktransaction','S','S','S','N','N',{ts '2008-02-14 15:24:56.967'},'ASSISTENZA','Non si può aumentare l''importo dell''esito poiché si renderebbe l''esitato del mandato (%<payment.ypay>%, %<payment.npay>%) superiore all''importo totale del mandato stesso.','N','(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 
	 WHERE kpay= %<banktransaction.kpay>%
	]{V}
	,0)
 <= 
 isnull(
	[SELECT SUM(ET.curramount) FROM expensetotal ET
	 JOIN expenselast E on E.idexp=ET.idexp
	 WHERE E.kpay= %<banktransaction.kpay>%

	]{V}
	,0)
)
OR 
(
%<banktransaction.kpay>% is null
)
OR
%<banktransaction.amount>%<=&<banktransaction.amount>&			
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM041','2','U','banktransaction','S','S','S','N','N',{ts '2008-02-14 15:25:35.530'},'ASSISTENZA','Non si può aumentare l''importo dell''esito poiché si renderebbe l''esitato della reversale (%<proceeds.ypro>%, %<proceeds.npro>%) superiore all''importo totale della reversale stessa.','N','(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 
	 WHERE kpro= %<banktransaction.kpro>%
	]{V}
	,0)
 <= 
 isnull(
	[SELECT SUM(ET.curramount) FROM incometotal ET
	 JOIN incomelast E ON ET.idinc=E.idinc
	 WHERE E.kpro= %<banktransaction.kpro>%

	]{V}
	,0)
)
OR 
(
%<banktransaction.kpro>% is null
)
			
OR
(
%<banktransaction.amount>%<&<banktransaction.amount>&
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM041','3','U','banktransaction','S','S','S','N','N',{ts '2008-02-14 15:26:12.827'},'ASSISTENZA','Non si può aumentare l''importo dell''esito poiché si renderebbe l''esitato del movimento di spesa (%<expense.ymov>%, %<expense.nmov>%) superiore all''importo totale del movimento stesso.','N','(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 
	 WHERE idexp = %<banktransaction.idexp>%
	]{N}
	,0)
 <= 
 isnull(
	[SELECT ET.curramount FROM expensetotal ET
	 WHERE ET.idexp = %<banktransaction.idexp>%

	]{N}
	,0)
)
OR 
(
%<banktransaction.kpay>% is null
)
OR
%<banktransaction.amount>%<=&<banktransaction.amount>&			
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM041','4','U','banktransaction','S','S','S','N','N',{ts '2008-02-14 15:30:12.883'},'ASSISTENZA','Non si può aumentare l''importo dell''esito poiché si renderebbe l''esitato del movimento di entrata (%<income.ymov>%, %<income.nmov>%) superiore all''importo totale del movimento stesso.','N','(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 
	 WHERE idinc = %<banktransaction.idinc>%

	]{N}
	,0)
 <= 
 isnull(
	[SELECT SUM(ET.curramount) FROM incometotal ET
	 WHERE ET.idinc = %<banktransaction.idinc>%


	]{N}
	,0)
)
OR 
(
%<banktransaction.kpro>% is null
)
			
OR
(
%<banktransaction.amount>%<&<banktransaction.amount>&
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM054','1','U','banktransaction','S','S','S','N','N',{ts '2007-12-05 17:00:58.653'},'SARA','Il mandato %<banktransactionview.ypay>% / %<banktransactionview.npay>% non può essere esitato in quanto non risulta trasmesso','S','%<banktransaction.kind>% = ''C''
OR
[SELECT kpaymenttransmission
FROM payment
WHERE kpay = %<banktransaction.kpay>%]{I} IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM054','2','U','banktransaction','S','S','S','N','N',{ts '2007-12-05 17:01:10.433'},'SARA','La reversale %<banktransactionview.ypro>% / %<banktransactionview.npro>% non può essere esitata in quanto non risulta trasmessa','S','%<banktransaction.kind>% = ''D''
OR
[SELECT kproceedstransmission
FROM proceeds
WHERE kpro = %<banktransaction.kpro>%]{I} IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR010','1','I','bill','S','S','S','N','N',{ts '2012-11-27 16:15:44.063'},'sa','L''utente non è abilitato ad impostare l''istituto cassiere nelle partite pendenti','S','%<bill.idtreasurer>% is null

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''asspendenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR010','1','U','bill','S','S','S','N','N',{ts '2012-11-27 16:16:22.907'},'sa','L''utente non è abilitato ad impostare l''istituto cassiere nelle partite pendenti','S','isnull(%<bill.idtreasurer>% , 0) = isnull(&<bill.idtreasurer>& , 0)

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''asspendenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR011','1','U','bill','S','S','S','N','N',{ts '2012-12-19 13:25:10.427'},'sa','L''utente non è abilitato a modificare i dati  nelle partite pendenti','S','(
	isnull(%<bill.registry>% , 0) = isnull(&<bill.registry>& , 0) AND
	isnull(%<bill.covered>% , 0) = isnull(&<bill.covered>& , 0) AND
	isnull(%<bill.total>% , 0) = isnull(&<bill.total>& , 0) AND
	isnull(%<bill.adate>% , 0) = isnull(&<bill.adate>& , 0) AND
	isnull(%<bill.active>% , 0) = isnull(&<bill.active>& , 0) AND
	isnull(%<bill.motive>% , 0) = isnull(&<bill.motive>& , 0)
)

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''esitazione''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ003','1','D','bookingdetail','S','S','S','N','N',{ts '2012-04-18 10:37:17.540'},'sa','Non si può cancellare la prenotazione avendo scaricato la merce, questo renderebbe la q.tà scaricata maggiore di quella prenotata.','S','isnull(%<bookingdetail.number>%,0)  <= 
ISNULL(
[SELECT number FROM booktotal
WHERE  booktotal.idbooking  =%<bookingdetail.idbooking>% AND
	 booktotal.idlist = %<bookingdetail.idlist>%  AND
	booktotal.idstore = %<bookingdetail.idstore>% 
]{V}
,0)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ003','1','I','bookingdetail','S','S','S','N','N',{ts '2012-04-18 10:15:38.540'},'sa','La quantità allocata non può superare la quantità disponibile in magazzino.','N','(%<bookingdetail.idstock>% IS NULL)
OR
ISNULL(
[SELECT available FROM stockview
WHERE  stockview.idstock  =%<bookingdetail.idstock>% 
]{V}
,0) >= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ014','1','I','bookingdetail','S','S','S','N','N',{ts '2011-09-15 15:54:43.937'},'sa','L''utente ha già effettuato una prenotazione per la stessa fornitura non ancora evasa.','N','ISNULL([SELECT SUM(number) FROM booktotal
	JOIN booking
		ON booktotal.idbooking = booking.idbooking
WHERE booktotal.idlist =  %<bookingdetail.idlist>%
AND booking.idcustomuser = [select bk.idcustomuser FROM booking bk WHERE bk.idbooking = %<bookingdetail.idbooking>%]{C}
AND booktotal.idbooking <> %<bookingdetail.idbooking>%
]{I},0)  = 0

OR

%<bookingdetail.idlist>% IS NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ019','1','I','bookingdetail','S','S','S','N','N',{ts '2011-09-26 12:16:49.530'},'sara','Attenzione con la presente prenotazione il dettaglio della CARD associato potrebbe assumere importo negativo.','N','ISNULL(  [SELECT SUM(lcardtotal.amount) 
FROM lcardtotal  
JOIN booking
	ON booking.idlcard = lcardtotal.idlcard
JOIN  bookingdetail
	ON bookingdetail.idbooking = booking.idbooking
WHERE lcardtotal.idlcard = booking.idlcard 
AND booking.idbooking = %<bookingdetail.idbooking>%]{V}  ,0)   > = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ021','1','I','bookingdetail','S','S','S','N','N',{ts '2013-07-18 10:41:51.887'},'sa',' La quantità della Prenotazione non può superare il limite previsto dalla voce di Listino','S','ISNULL(%<bookingdetail.idlist>%, 0) IS NULL
OR
ISNULL([SELECT ISNULL(nmaxorder,0) FROM  list
         WHERE list.idlist =  %<bookingdetail.idlist>%] {V},0) = 0
OR
(
   ISNULL(%<bookingdetail.number>%,0)
	 <=
	ISNULL([SELECT ISNULL(nmaxorder,0) FROM  list
			 WHERE list.idlist =  %<bookingdetail.idlist>%] {V},0)
)
 
 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ003','1','U','bookingdetail','S','S','S','N','N',{ts '2011-10-04 12:16:21.717'},'sa','Non si può diminuire la q.tà prenotata rendendo la q.tà scaricata maggiore di quella prenotata.','S','isnull(%<bookingdetail.number>%,0) > isnull(&<bookingdetail.number>&,0)

OR

isnull(%<bookingdetail.number>% ,0)> =  
-- Q.tà scaricata
(
isnull(&<bookingdetail.number>&,0) 
-
ISNULL(
[SELECT number FROM booktotal
WHERE	
	booktotal.idbooking  = %<bookingdetail.idbooking>% AND 
	booktotal.idlist = %<bookingdetail.idlist>% AND
	booktotal.idstore = %<bookingdetail.idstore>%
]{V}
,0)


)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ003','2','U','bookingdetail','S','S','S','N','N',{ts '2012-04-18 10:34:12.120'},'sa','La quantità allocata non può superare la quantità disponibile in magazzino','N','isnull(%<bookingdetail.number>%,0) > isnull(&<bookingdetail.number>&,0)
OR
(%<bookingdetail.idstock>% IS NULL)
OR
ISNULL(
[SELECT available FROM stockview
WHERE  stockview.idstock  =%<bookingdetail.idstock>% 
]{V}
,0) >= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ010','1','U','bookingdetail','S','S','S','N','N',{ts '2012-06-22 13:06:10.327'},'sa','Non è possibile rimuovere l''autorizzazione dal dettaglio prenotazione in quanto risulta associato a degli scarichi.','N','(%<bookingdetail.authorized>% = ''S'')
OR
ISNULL(%<bookingdetail.authorized>%,0) =
ISNULL(&<bookingdetail.authorized>&,0)
OR
(isnull([SELECT COUNT(*)
FROM storeunloaddetail
join stock on storeunloaddetail.idstock=stock.idstock
WHERE idbooking = %<bookingdetail.idbooking>%
 and stock.idlist=%<bookingdetail.idlist>%
 and stock.idstore=%<bookingdetail.idstore>%
]{I},0)   =0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ017','1','U','bookingdetail','S','S','S','N','N',{ts '2011-10-27 15:09:06.670'},'sa','La q.tà prenotata non può essere modificata se il dettaglio è già stato autorizzato.','N','isnull(%<bookingdetail.authorized>%,''N'') <>''S''

OR

%<bookingdetail.number>%=&<bookingdetail.number>&

OR

[SELECT COUNT(*) FROM list
	JOIN listclass
		ON list.idlistclass = listclass.idlistclass
  WHERE list.idlist = %<bookingdetail.idlist>%
  AND authrequired = ''S''] {I}= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ018','1','U','bookingdetail','S','S','S','N','N',{ts '2011-06-23 11:45:43.937'},'assistenza','Non è possibile autorizzare prenotazioni di merci non attive','N','[SELECT ISNULL([active],''N'') FROM list WHERE idlist = %<bookingdetail.idlist>%]{C} = ''S''

OR

ISNULL(%<bookingdetail.authorized>%,''N'') <>''S''

OR 

%<bookingdetail.authorized>% = &<bookingdetail.authorized>&


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ019','1','U','bookingdetail','S','S','S','N','N',{ts '2011-09-26 12:16:56.297'},'sara','Attenzione con la presente prenotazione il dettaglio della CARD associato potrebbe assumere importo negativo.','N','ISNULL(  [SELECT SUM(lcardtotal.amount) 
FROM lcardtotal  
JOIN booking
	ON booking.idlcard = lcardtotal.idlcard
JOIN  bookingdetail
	ON bookingdetail.idbooking = booking.idbooking
WHERE lcardtotal.idlcard = booking.idlcard 
AND booking.idbooking = %<bookingdetail.idbooking>%]{V}  ,0)   > = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ020','1','U','bookingdetail','S','S','S','N','N',{ts '2011-12-16 12:23:27.547'},'sara','La quantità della prenotazione non può essere aumentata in presenza di materiale allocato associato alla prenotazione','N','%<bookingdetail.number>%=&<bookingdetail.number>&
OR
%<bookingdetail.number>%<&<bookingdetail.number>&
OR
ISNULL(
[SELECT allocated FROM booktotal
WHERE	
	booktotal.idbooking  = %<bookingdetail.idbooking>% AND 
	booktotal.idlist = %<bookingdetail.idlist>% AND
	booktotal.idstore = %<bookingdetail.idstore>%
]{V}
,0) = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ021','1','U','bookingdetail','S','S','S','N','N',{ts '2013-07-18 10:41:59.820'},'sa','La quantità della Prenotazione non può superare il limite previsto dalla voce di Listino','S','ISNULL(%<bookingdetail.idlist>%, 0) IS NULL
OR
ISNULL(%<bookingdetail.number>%,0) = ISNULL(&<bookingdetail.number>&,0)
OR
ISNULL([SELECT ISNULL(nmaxorder,0) FROM  list
         WHERE list.idlist =  %<bookingdetail.idlist>%] {V},0) = 0
OR
(
   ISNULL(%<bookingdetail.number>%,0)
	 <=
	ISNULL([SELECT ISNULL(nmaxorder,0) FROM  list
			 WHERE list.idlist =  %<bookingdetail.idlist>%] {V},0)
)
 
 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','cab','S','S','S','N','N',{ts '2008-07-18 15:39:16.827'},'SARA','Lo sportello %<idcab>% della banca %<idbank>% non può essere cancellato in quanto esistono movimenti di spesa che lo referenziano.','S','[execute count_table_twofield ''expenselast'',''idbank'',''idcab'',
%<cab.idbank>%, %<cab.idcab>%,@outvar output]{I}=0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','cab','S','S','S','N','N',{ts '2008-07-18 15:39:37.390'},'SARA','Lo sportello %<idcab>% della banca %<idbank>% non può essere cancellato in quanto esistono istituti cassieri che lo referenziano.','S','[execute count_table_twofield ''treasurer'',''idbank'',''idcab'',
%<cab.idbank>%, %<cab.idcab>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','cab','S','S','S','N','N',{ts '2007-09-13 11:53:48.360'},'NINO','Lo sportello %<idcab>% della banca %<idbank>% non può essere cancellato in quanto esistono creditori/debitori che lo referenziano.','S','[(SELECT count(*) 
from registrypaymethod 
where idbank = %<cab.idbank>% 
and idcab = %<cab.idcab>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','cab','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Sportello con il codice CAB %<idcab>% per la banca %<idbank>% già esistente','S','[(SELECT count(*) 
from cab 
where idbank = %<cab.idbank>% 
and idcab = %<cab.idcab>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','cab','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione dello sportello per la banca %<idbank>% già esistente','S','[(SELECT count(*) 
from cab 
where idbank = %<cab.idbank>% 
and idcab <> %<cab.idcab>% 
and description = %<cab.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS011','1','I','cafdocument','S','S','S','N','N',{ts '2007-12-13 14:26:37.030'},'NINO','Non possono essere inserite più comunicazioni da CAF ordinarie nell''esercizio %<esercizio>% per il contratto corrente','N','[SELECT COUNT(*) FROM cafdocument WHERE idcon = %<cafdocument.idcon>%
AND ayear = %<sys_esercizio>%
AND cafdocumentkind = ''O'']{I} = 1
OR
%<cafdocument.cafdocumentkind>% <> ''O''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS012','1','I','cafdocument','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Non può essere inserita una comunicazione da CAF differente da quella di ordinaria in assenza di una comunicazione ordinaria','S','[SELECT COUNT(*) FROM cafdocument WHERE idcon = %<cafdocument.idcon>%
AND ayear = %<sys_esercizio>%
AND cafdocumentkind = ''O'']{I} > 0
OR
%<cafdocument.cafdocumentkind>% = ''O''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS023','1','I','cafdocument','S','S','S','N','N',{ts '2008-06-03 17:50:40.020'},'NINO','Nel contratto n. %<parasubcontractview.ycon>% / %<parasubcontractview.ncon>% ci sono comunicazioni da CAF con regione differente.','N','%<cafdocument.idfiscaltaxregion>% IS NULL
OR
[SELECT COUNT(*)
FROM cafdocument
WHERE idcon = %<cafdocument.idcon>%
AND ayear = %<cafdocument.ayear>%
AND ISNULL(idfiscaltaxregion, %<cafdocument.idfiscaltaxregion>%) <> 
%<cafdocument.idfiscaltaxregion>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS023','2','I','cafdocument','S','S','S','N','N',{ts '2008-06-03 17:50:45.893'},'NINO','Nel contratto n. %<parasubcontractview.ycon>% / %<parasubcontractview.ncon>% ci sono comunicazioni da CAF con comune differente.','N','%<cafdocument.idcity>% IS NULL
OR
[SELECT COUNT(*)
FROM cafdocument
WHERE idcon = %<cafdocument.idcon>%
AND ayear = %<cafdocument.ayear>%
AND ISNULL(idcity, %<cafdocument.idcity>%) <> 
%<cafdocument.idcity>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS011','1','U','cafdocument','S','S','S','N','N',{ts '2007-12-13 14:26:41.560'},'NINO','Non possono essere inserite più comunicazioni da CAF ordinarie nell''esercizio %<esercizio>% per il contratto corrente','N','[SELECT COUNT(*) FROM cafdocument WHERE idcon = %<cafdocument.idcon>%
AND ayear = %<sys_esercizio>%
AND cafdocumentkind = ''O'']{I} = 1
OR
%<cafdocument.cafdocumentkind>% <> ''O''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS012','1','U','cafdocument','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Non può essere inserita una comunicazione da CAF differente da quella di ordinaria in assenza di una comunicazione ordinaria','S','[SELECT COUNT(*) FROM cafdocument WHERE idcon = %<cafdocument.idcon>%
AND ayear = %<sys_esercizio>%
AND cafdocumentkind = ''O'']{I} > 0
OR
%<cafdocument.cafdocumentkind>% = ''O''')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS023','1','U','cafdocument','S','S','S','N','N',{ts '2008-06-03 17:51:31.237'},'NINO','Nel contratto n. %<parasubcontractview.ycon>% / %<parasubcontractview.ncon>% ci sono comunicazioni da CAF con regione differente.','N','%<cafdocument.idfiscaltaxregion>% IS NULL
OR
[SELECT COUNT(*)
FROM cafdocument
WHERE idcon = %<cafdocument.idcon>%
AND ayear = %<cafdocument.ayear>%
AND ISNULL(idfiscaltaxregion, %<cafdocument.idfiscaltaxregion>%) <> 
%<cafdocument.idfiscaltaxregion>%]{I} = 0
OR
ISNULL(&<cafdocument.idfiscaltaxregion>&, '''') =
ISNULL(%<cafdocument.idfiscaltaxregion>%, '''')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS023','2','U','cafdocument','S','S','S','N','N',{ts '2008-06-03 17:51:59.317'},'NINO','Nel contratto n. %<parasubcontractview.ycon>% / %<parasubcontractview.ncon>% ci sono comunicazioni da CAF con comune differente.','N','%<cafdocument.idcity>% IS NULL
OR
[SELECT COUNT(*)
FROM cafdocument
WHERE idcon = %<cafdocument.idcon>%
AND ayear = %<cafdocument.ayear>%
AND ISNULL(idcity, %<cafdocument.idcity>%) <> 
%<cafdocument.idcity>%]{I} = 0
OR
ISNULL(&<cafdocument.idcity>&, 0) =
ISNULL(%<cafdocument.idcity>%, 0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE001','1','D','casualcontract','S','S','S','N','N',{ts '2006-09-29 11:57:37.767'},'''SARA''','Non è possibile cancellare il contratto occasionale %<ncon>% / %<ycon>% perché è stata generata la relativa Anagrafe delle Prestazioni.','S','
[(select count(*)
from serviceregistry 
where substring(idrelated,1,6) = ''cascon''
and substring(idrelated,8,4)= convert(varchar(4),%<casualcontract.ycon>%)
and substring(idrelated,13,4)= convert(varchar(4),%<casualcontract.ncon>%))]{N} 
= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','casualcontract','S','S','S','N','N',{ts '2007-09-13 11:53:55.767'},'NINO','Cancellazione Impossibile! Esistono movimenti di spesa collegati al contratto occasionale %<ncon>% / %<ycon>%','S','[(SELECT count(*) 
from expensecasualcontract 
where ycon = %<casualcontract.ycon>%
and ncon = %<casualcontract.ncon>%)]{I} 
= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','casualcontract','S','S','S','N','N',{ts '2010-04-28 13:51:39.297'},'SARADECA','Cancellazione Impossibile! Esistono operazioni di Piccola Spesa collegate al contratto occasionale %<ncon>% / %<ycon>%','S','[(SELECT count(*) 
from pettycashoperationcasualcontract 
where ycon = %<casualcontract.ycon>%
and ncon = %<casualcontract.ncon>%)]{I} 
= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE005','1','I','casualcontract','S','S','S','N','N',{ts '2009-02-24 10:07:25.767'},'SARA','Non è possibile inserire il nuovo contratto nel %<casualcontract.ycon>%  perchè i residui dell''esercizio  %<casualcontract.ycon>% sono stati già trasferiti. ','S','(ISNULL(  [SELECT flag  FROM accountingyear  WHERE ayear = %<casualcontract.ycon>%]{I} ,0) & 0x0F) < 5')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS001','1','I','casualcontract','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il compenso lordo al beneficiario del contratto n. %<casualcontract.ncon>%/%<casualcontract.ncon>% è inferiore all''importo totale delle spese collegate ad esso','N','--post
[SELECT feegross FROM casualcontract
WHERE ycon = %<casualcontract.ycon>%
AND ncon = %<casualcontract.ncon>%]{N}
>=
[SELECT SUM(amount) FROM casualcontractrefund
WHERE ycon = %<casualcontract.ycon>%
AND ncon = %<casualcontract.ncon>%]{N}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS002','1','I','casualcontract','S','S','S','N','N',{ts '2007-03-07 14:04:43.157'},'''SARA''','Inserire il codice fiscale per il percipiente %<registry.title>%','S','(isnull([(select cf from registry
where (idreg=%<casualcontract.idreg>%)
)]{C},'''') <> '''')
or
(isnull([(select foreigncf from registry
where (idreg=%<casualcontract.idreg>%)
)]{C},'''') <>'''')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS007','1','I','casualcontract','S','S','S','N','N',{ts '2006-04-20 12:30:51.717'},'''SA''','Esistono altri contratti occasionali  per lo stesso percipiente nello stesso periodo.','N','--post I
(
[SELECT COUNT (*)
FROM  casualcontract
WHERE casualcontract.idreg = %<casualcontract.idreg>%
AND   (casualcontract.ycon <> %<casualcontract.ycon>% OR
      casualcontract.ncon <> %<casualcontract.ncon>%)
AND  %<casualcontract.stop>% >=casualcontract.start 
AND  %<casualcontract.start>%<=casualcontract.stop
]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS010','2','I','casualcontract','S','S','S','N','N',{ts '2008-10-09 15:30:54.670'},'SARA','In base alla prestazione scelta il percipiente  %<registry.title>% deve avere l''indirizzo di residenza all''estero nel periodo del contratto.','S','--[1] = [2]
([SELECT COUNT(*) 
  FROM service 
 WHERE idser = %<casualcontract.idser>%
  AND ISNULL(flagforeign,''N'') = ''S'']{I}=0)
OR
([SELECT COUNT(*) 
  FROM registryaddress 
  JOIN address 
    ON registryaddress.idaddresskind = address.idaddress
WHERE idreg = %<casualcontract.idreg>%
AND   codeaddress = ''07_SW_DEF''
AND  ISNULL(%<casualcontract.start>%,{d ''1900-01-01''}) 
BETWEEN ISNULL(start,{d ''1900-01-01''}) 
AND ISNULL(stop,{d ''2079-01-01''})
AND  ISNULL(%<casualcontract.stop>%,{d ''2079-01-01''}) 
BETWEEN ISNULL(start,{d ''1900-01-01''}) 
AND ISNULL(stop,{d ''2079-01-01''})
AND ISNULL(flagforeign,''N'') = ''S''
]{I}>0)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS011','1','I','casualcontract','S','S','S','N','N',{ts '2008-05-19 10:21:03.797'},'SA','Esistono contratti Occasionali precedenti, appartenenti a tale percepiente, i quali posseggono una prestazione Non Mutuati.','N','[(
ISNULL((SELECT COUNT(*) from casualcontract
	JOIN servicetax
		ON servicetax.idser=casualcontract.idser
	JOIN tax
		ON tax.taxcode=servicetax.taxcode
WHERE casualcontract.idreg = %<casualcontract.idreg>%
AND casualcontract.ycon = %<sys_esercizio>%
AND tax.taxref = ''07_INPS_N''),0 )


)]{I} = 0 

OR

[( 
ISNULL((SELECT COUNT(*) FROM casualcontract
	JOIN servicetax
		ON servicetax.idser = casualcontract.idser
	JOIN tax
		ON tax.taxcode = servicetax.taxcode
WHERE tax.taxkind = 3
AND  tax.taxref = ''07_INPS_M''
AND casualcontract.ycon = %<sys_esercizio>%
AND casualcontract.ncon=%<casualcontract.ncon>%)
,0)
)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS011','2','I','casualcontract','S','S','S','N','N',{ts '2008-05-19 10:20:59.797'},'SA','Esistono contratti Occasionali precedenti, appartenenti a tale percepiente, i quali posseggono una prestazione Mutuati.','N','[(
ISNULL((SELECT COUNT(*) from casualcontract
	JOIN servicetax
		ON servicetax.idser=casualcontract.idser
	JOIN tax
		ON tax.taxcode=servicetax.taxcode
WHERE casualcontract.idreg = %<casualcontract.idreg>%
AND ycon = %<sys_esercizio>%
AND tax.taxref = ''07_INPS_M''),0 )
)]{I} = 0 

OR

[( 
ISNULL( (SELECT COUNT(*) FROM casualcontract
	JOIN servicetax
		ON servicetax.idser=casualcontract.idser
	JOIN tax
		ON tax.taxcode=servicetax.taxcode
WHERE tax.taxkind = 3
AND tax.taxref = ''07_INPS_N''
AND casualcontract.ycon = %<sys_esercizio>%
AND casualcontract.ncon=%<casualcontract.ncon>%)
,0)
)]{I} = 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS011','4','I','casualcontract','S','S','S','N','N',{ts '2008-05-19 10:21:09.360'},'SA','Esistono contratti Parasubordinati precedenti, appartenenti a tale percepiente, i quali posseggono una prestazione Non Mutuati.','N','[(ISNULL((SELECT COUNT(*) from parasubcontract
	JOIN servicetax
		ON servicetax.idser=parasubcontract.idser
	JOIN tax
		ON tax.taxcode=servicetax.taxcode
WHERE parasubcontract.idreg = %<casualcontract.idreg>%
AND parasubcontract.ycon = %<sys_esercizio>%
AND tax.taxref = ''07_INPS_N'') ,0)
)]{I} = 0 

OR

[( 
ISNULL((SELECT COUNT(*) FROM casualcontract
	JOIN servicetax
		ON servicetax.idser = casualcontract.idser
	JOIN tax
		ON tax.taxcode = servicetax.taxcode
WHERE tax.taxkind = 3
AND  tax.taxref = ''07_INPS_M''
AND casualcontract.ycon = %<sys_esercizio>%
AND casualcontract.ncon=%<casualcontract.ncon>%)
,0)
)]{I} = 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS011','5','I','casualcontract','S','S','S','N','N',{ts '2008-05-19 10:21:13.170'},'SA','Esistono contratti Parasubordinati precedenti, appartenenti a tale percepiente, i quali posseggono una prestazione Mutuati.','N','[(ISNULL((SELECT COUNT(*) from parasubcontract
	JOIN servicetax
		ON servicetax.idser=parasubcontract.idser
	JOIN tax
		ON tax.taxcode=servicetax.taxcode
WHERE parasubcontract.idreg = %<casualcontract.idreg>%
AND parasubcontract.ycon = %<sys_esercizio>%
AND tax.taxref = ''07_INPS_M'') ,0)
)]{I} = 0 

OR

[( 
ISNULL((SELECT COUNT(*) FROM casualcontract
	JOIN servicetax
		ON servicetax.idser = casualcontract.idser
	JOIN tax
		ON tax.taxcode = servicetax.taxcode
WHERE tax.taxkind = 3
AND  tax.taxref = ''07_INPS_N''
AND casualcontract.ycon = %<sys_esercizio>%
AND casualcontract.ncon=%<casualcontract.ncon>%)
,0)
)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS015','1','I','casualcontract','S','S','S','N','N',{ts '2008-10-01 12:27:54.253'},'SA','Il prestatore d''opera ha già svolto nell''anno, assunto dall''ateneo, una prestazione professionale. Probabilmente non si sta usando il modulo corretto per l''inserimento di questa prestazione.','S','[execute count_contract %<sys_esercizio>%,
	''P'',  
	%<casualcontract.idreg>% ,
	@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS015','2','I','casualcontract','S','S','S','N','N',{ts '2008-10-01 12:23:28.190'},'SA','Il prestatore d''opera ha una partita iva quindi è un professionista. Verificare che la prestazione non debba quindi essere inquadrata come prestazione professionale.','S','[select isnull(p_iva,'''') from registry where idreg= %<casualcontract.idreg>%]{C} =''''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS016','1','I','casualcontract','S','S','S','N','N',{ts '2011-12-13 10:31:36.547'},'sa','Lo stato di residenza del percipiente non prevede alcuna convenzione.','S','%<casualcontract.idser>% not in 
(select idser from service where codeser in
	 (''07_BRS_CVZ_COC'',''08_COSTCON_NOINPS'',''07_CMP_STNCVZ'')
)

OR
(
 [SELECT COUNT(*) 
  FROM registryaddress 
  JOIN address 
    ON registryaddress.idaddresskind = address.idaddress
WHERE  idreg = %<casualcontract.idreg>%
AND    codeaddress = ''07_SW_DEF''
AND  ISNULL(%<casualcontract.start>%,{d ''1900-01-01''}) 
BETWEEN ISNULL(start,{d ''1900-01-01''}) 
AND ISNULL(stop,{d ''2079-01-01''})
AND  ISNULL(%<casualcontract.stop>%,{d ''2079-01-01''}) 
BETWEEN ISNULL(start,{d ''1900-01-01''}) 
AND ISNULL(stop,{d ''2079-01-01''})
AND ISNULL(flagforeign,''N'') = ''S''
AND ISNULL(idnation,0) in 
(2,5,7,8,9,10,11,14,15,16,17,18,20,23,24,25,31,33,35,36,37,38,41,42,43,44,45,46,47,
50,51,52,53,54,57,58,78,81,87,90,91,92,95,97,98,101,102,104,113,117,119,121,122,
125,141,161,163,181,195,196,197,198,202,205,210,223,237,238,256,281,283,
286,291,293,298,304, 399,400
,77,9,88,166,94,169,96,26,108,112,192,118,
206,124,39,79,103,120,123
)

]{I} > 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS017','1','I','casualcontract','S','S','S','N','N',{ts '2008-10-08 14:22:34.483'},'SARA','La prestazione scelta va svolta da soggetti residenti in Italia, invece il percipiente %<registry.title>% ha la Residenza o Sede Amministrativa all''estero.
','S','([SELECT COUNT(*) 
  FROM service 
 WHERE idser = %<casualcontract.idser>%
  AND ISNULL(flagforeign,''N'') <> ''S'']{I}=0)
OR
([SELECT COUNT(*) 
  FROM registryaddress 
  JOIN address 
    ON registryaddress.idaddresskind = address.idaddress
WHERE idreg = %<casualcontract.idreg>%
AND   codeaddress = ''07_SW_DEF''
AND
(
ISNULL(%<casualcontract.start>%,{d ''1900-01-01''})  BETWEEN ISNULL(start,{d ''1900-01-01''})  AND ISNULL(stop,{d ''2079-01-01''})
OR  
ISNULL(%<casualcontract.stop>%,{d ''2079-01-01''})  BETWEEN ISNULL(start,{d ''1900-01-01''})  AND ISNULL(stop,{d ''2079-01-01''})
)
AND ISNULL(flagforeign,''N'') = ''S''
]{I}=0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM014','1','I','casualcontract','S','S','S','N','N',{ts '2009-02-26 15:17:23.547'},'ASSISTENZA','Non è possibile salvare un contratto occasionale con numero negativo','N','%<casualcontract.ncon>%>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM015','1','U','casualcontract','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Non si può modificare il percipiente in un contratto occasionale totalmente o parzialmente contabilizzato.','S','([SELECT count(*) 
FROM expensecasualcontract
WHERE expensecasualcontract.ycon = %<casualcontract.ycon>% AND
expensecasualcontract.ncon = %<casualcontract.ncon>%]{I}
= 0)
or
(&<casualcontract.idreg>& = %<casualcontract.idreg>%)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM035','1','U','casualcontract','S','S','S','N','N',{ts '2007-08-31 14:45:20.063'},'NINO','Non può essere cambiata la prestazione del contratto occasionale %<casualcontract.ncon>% / %<casualcontract.ycon>% perché è stato già contabilizzato','S','[SELECT COUNT(*) FROM expensecasualcontract
WHERE 
--LEN(idexp) = 8 * CONVERT(int,%<sys_maxexpensephase>%) AND 

ycon = %<casualcontract.ycon>%
AND ncon = %<casualcontract.ncon>%]{I} = 0
OR
(
%<casualcontract.idser>% = &<casualcontract.idser>&
AND
%<casualcontract.adate>% = &<casualcontract.adate>&
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS001','1','U','casualcontract','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il compenso lordo al beneficiario del contratto n. %<casualcontract.ncon>%/%<casualcontract.ncon>% è inferiore all''importo totale delle spese collegate ad esso','N','--post
[SELECT feegross FROM casualcontract
WHERE ycon = %<casualcontract.ycon>%
AND ncon = %<casualcontract.ncon>%]{N}
>=
[SELECT SUM(amount) FROM casualcontractrefund
WHERE ycon = %<casualcontract.ycon>%
AND ncon = %<casualcontract.ncon>%]{N}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS002','1','U','casualcontract','S','S','S','N','N',{ts '2007-03-07 14:05:18.593'},'''SARA''','Inserire il codice fiscale per il percipiente %<registry.title>%','S','(isnull([(select cf from registry
where (idreg=%<casualcontract.idreg>%)
)]{C},'''') <> '''')
or
(isnull([(select foreigncf from registry
where (idreg=%<casualcontract.idreg>%)
)]{C},'''') <>'''')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS003','1','U','casualcontract','S','S','S','N','N',{ts '2007-08-31 14:52:17.750'},'NINO','L''importo lordo del contratto occasionale %<ncon>%/%<ycon>% è minore dei movimenti di spesa che lo contabilizzano','S','%<casualcontract.feegross>%
- 
[SELECT ISNULL(sum(expenseyear.amount), 0) 
from expenseyear 
join expensetotal et on et.idexp=expenseyear.idexp 
	and et.ayear=expenseyear.ayear
join expensecasualcontract 
on expensecasualcontract.idexp = expenseyear.idexp 
where 
	expensecasualcontract.ycon = %<casualcontract.ycon>% 
	and expensecasualcontract.ncon = %<casualcontract.ncon>%
	and et.flag & 2 <>0
	
]{V} 
-
[SELECT ISNULL(sum(expensevar.amount), 0) 
from expensevar 
join expensecasualcontract 
	on expensecasualcontract.idexp = expensevar.idexp 
join expense 
	on expense.idexp=expensevar.idexp
WHERE expense.nphase = %<sys_itinerationphase>%
and ISNULL(expensevar.autokind,0)<>4
and expensecasualcontract.ycon = %<casualcontract.ycon>% 
and expensecasualcontract.ncon = %<casualcontract.ncon>%]{V} 
>= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS007','1','U','casualcontract','S','S','S','N','N',{ts '2006-04-20 12:31:01.217'},'''SA''','Esistono altri contratti occasionali  per lo stesso percipiente nello stesso periodo.','N','--post U
(%<casualcontract.stop>% = &<casualcontract.stop>&
AND
%<casualcontract.start>% = &<casualcontract.start>&
)
OR
(
[SELECT COUNT (*)
FROM  casualcontract
WHERE casualcontract.idreg = %<casualcontract.idreg>%
AND   (casualcontract.ycon <> %<casualcontract.ycon>% OR
      casualcontract.ncon <> %<casualcontract.ncon>%)
AND  %<casualcontract.stop>% >=casualcontract.start 
AND  %<casualcontract.start>%<=casualcontract.stop
]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS010','2','U','casualcontract','S','S','S','N','N',{ts '2008-10-09 15:31:03.420'},'SARA','In base alla prestazione scelta il percipiente  %<registry.title>% deve avere l''indirizzo di residenza all''estero nel periodo del contratto.','S','--[1] = [2]
([SELECT COUNT(*) 
  FROM service 
 WHERE idser = %<casualcontract.idser>%
   AND ISNULL(flagforeign,''N'') = ''S'']{I}=0)
OR
(
%<casualcontract.idser>% =  &<casualcontract.idser>&
AND 
%<casualcontract.start>% =  &<casualcontract.start>&
AND
%<casualcontract.stop>%  =  &<casualcontract.stop>&
AND
%<casualcontract.idreg>%  =  &<casualcontract.idreg>&
)
OR
([SELECT COUNT(*) 
  FROM registryaddress 
  JOIN address 
    ON registryaddress.idaddresskind = address.idaddress
WHERE idreg = %<casualcontract.idreg>%
AND   codeaddress = ''07_SW_DEF''
AND  ISNULL(%<casualcontract.start>%,{d ''1900-01-01''}) 
BETWEEN ISNULL(start,{d ''1900-01-01''}) 
AND ISNULL(stop,{d ''2079-01-01''})
AND  ISNULL(%<casualcontract.stop>%,{d ''2079-01-01''}) 
BETWEEN ISNULL(start,{d ''1900-01-01''}) 
AND ISNULL(stop,{d ''2079-01-01''})
AND ISNULL(flagforeign,''N'') = ''S''
]{I}>0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS011','1','U','casualcontract','S','S','S','N','N',{ts '2008-05-19 10:21:18.593'},'SA','Esistono contratti Occasionali precedenti, appartenenti a tale percepiente, i quali posseggono una prestazione Non Mutuati.','N','[(
ISNULL((SELECT COUNT(*) from casualcontract
	JOIN servicetax
		ON servicetax.idser=casualcontract.idser
	JOIN tax
		ON tax.taxcode=servicetax.taxcode
WHERE casualcontract.idreg = %<casualcontract.idreg>%
AND ycon = %<sys_esercizio>%
AND tax.taxref = ''07_INPS_N''),0 )
)]{I} = 0 

OR

[( 
ISNULL( (SELECT COUNT(*) FROM casualcontract
	JOIN servicetax
		ON servicetax.idser=casualcontract.idser
	JOIN tax
		ON tax.taxcode=servicetax.taxcode
WHERE tax.taxkind = 3
AND tax.taxref = ''07_INPS_M''
AND casualcontract.ycon = %<sys_esercizio>%
AND casualcontract.ncon=%<casualcontract.ncon>%)
,0)
)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS011','2','U','casualcontract','S','S','S','N','N',{ts '2008-05-19 10:21:21.937'},'SA','Esistono contratti Occasionali precedenti, appartenenti a tale percepiente, i quali posseggono una prestazione Mutuati.','N','[(
ISNULL((SELECT COUNT(*) from casualcontract
	JOIN servicetax
		ON servicetax.idser=casualcontract.idser
	JOIN tax
		ON tax.taxcode=servicetax.taxcode
WHERE casualcontract.idreg = %<casualcontract.idreg>%
AND ycon = %<sys_esercizio>%
AND tax.taxref = ''07_INPS_M''),0 )
)]{I} = 0 

OR

[( 
ISNULL( (SELECT COUNT(*) FROM casualcontract
	JOIN servicetax
		ON servicetax.idser=casualcontract.idser
	JOIN tax
		ON tax.taxcode=servicetax.taxcode
WHERE tax.taxkind = 3
AND tax.taxref = ''07_INPS_N''
AND casualcontract.ycon = %<sys_esercizio>%
AND casualcontract.ncon=%<casualcontract.ncon>%)
,0)
)]{I} = 0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS011','4','U','casualcontract','S','S','S','N','N',{ts '2008-05-19 10:21:26.047'},'SA','Esistono contratti Parasubordinati precedenti, appartenenti a tale percepiente, i quali posseggono una prestazione Mutuati.','N','[(
ISNULL((SELECT COUNT(*) from parasubcontract
	JOIN servicetax
		ON servicetax.idser=parasubcontract.idser
	JOIN tax
		ON tax.taxcode=servicetax.taxcode
WHERE parasubcontract.idreg = %<casualcontract.idreg>%
AND ycon = %<sys_esercizio>%
AND tax.taxref = ''07_INPS_M'') ,0)
)]{I} = 0 

OR

[( 
ISNULL( (SELECT COUNT(*) FROM casualcontract
	JOIN servicetax
		ON servicetax.idser=casualcontract.idser
	JOIN tax
		ON tax.taxcode=servicetax.taxcode
WHERE tax.taxkind = 3
AND tax.taxref = ''07_INPS_N''
AND casualcontract.ycon = %<sys_esercizio>%
AND casualcontract.ncon=%<casualcontract.ncon>%)
,0)
)]{I} = 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS011','5','U','casualcontract','S','S','S','N','N',{ts '2008-05-19 10:21:29.937'},'SA','Esistono contratti Parasubordinati precedenti, appartenenti a tale percepiente, i quali posseggono una prestazione Non Mutuati.','N','[(
ISNULL((SELECT COUNT(*) from parasubcontract
	JOIN servicetax
		ON servicetax.idser=parasubcontract.idser
	JOIN tax
		ON tax.taxcode=servicetax.taxcode
WHERE parasubcontract.idreg = %<casualcontract.idreg>%
AND ycon = %<sys_esercizio>%
AND tax.taxref = ''07_INPS_N'') ,0)
)]{I} = 0 

OR

[( 
ISNULL( (SELECT COUNT(*) FROM casualcontract
	JOIN servicetax
		ON servicetax.idser=casualcontract.idser
	JOIN tax
		ON tax.taxcode=servicetax.taxcode
WHERE tax.taxkind = 3
AND tax.taxref = ''07_INPS_M''
AND casualcontract.ycon = %<sys_esercizio>%
AND casualcontract.ncon=%<casualcontract.ncon>%)
,0)
)]{I} = 0

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS015','1','U','casualcontract','S','S','S','N','N',{ts '2008-10-01 12:47:01.783'},'SA','Il prestatore d''opera ha già svolto nell''anno, assunto dall''ateneo, una prestazione professionale. Probabilmente non si sta usando il modulo corretto per l''inserimento di questa prestazione.','S','[execute count_contract %<sys_esercizio>%,
	''P'',  
	%<casualcontract.idreg>% ,
	@outvar output]{I}=0

or

%<casualcontract.idreg>% =&<casualcontract.idreg>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS016','1','U','casualcontract','S','S','S','N','N',{ts '2011-12-13 10:31:44.517'},'sa','Lo stato di residenza del percipiente non prevede alcuna convenzione.','S','%<casualcontract.idser>% not in 
(select idser from service where codeser in
	 (''07_BRS_CVZ_COC'',''08_COSTCON_NOINPS'',''07_CMP_STNCVZ'')
)

OR
(
 [SELECT COUNT(*) 
  FROM registryaddress 
  JOIN address 
    ON registryaddress.idaddresskind = address.idaddress
WHERE  idreg = %<casualcontract.idreg>%
AND    codeaddress = ''07_SW_DEF''
AND  ISNULL(%<casualcontract.start>%,{d ''1900-01-01''}) 
BETWEEN ISNULL(start,{d ''1900-01-01''}) 
AND ISNULL(stop,{d ''2079-01-01''})
AND  ISNULL(%<casualcontract.stop>%,{d ''2079-01-01''}) 
BETWEEN ISNULL(start,{d ''1900-01-01''}) 
AND ISNULL(stop,{d ''2079-01-01''})
AND ISNULL(flagforeign,''N'') = ''S''
AND ISNULL(idnation,0) in 
(2,5,7,8,9,10,11,14,15,16,17,18,20,23,24,25,31,33,35,36,37,38,41,42,43,44,45, 46,47,
50,51,52,53,54,57,58,78,81,87,90,91,92,95,97,98,101,102,104,113,117,119,121,122,
125,141,161,163,181,195,196,197,198,202,205,210,223,237,238,256,281,283,
286,291,293,298,304, 399,400
,77,9,88,166,94,169,96,26,108,112,192,118,
206,124,39,79,103,120,123
)

]{I} > 0
)
OR
(
 %<casualcontract.idser>% = &<casualcontract.idser>&
 and
 %<casualcontract.idreg>% =  &<casualcontract.idreg>&
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS017','1','U','casualcontract','S','S','S','N','N',{ts '2008-10-08 14:22:54.170'},'SARA','La prestazione scelta va svolta da soggetti residenti in Italia, invece il percipiente %<registry.title>% ha la Residenza o Sede Amministrativa all''estero.','S','([SELECT COUNT(*) 
  FROM service 
 WHERE idser = %<casualcontract.idser>%
  AND ISNULL(flagforeign,''N'') <> ''S'']{I}=0)
OR
(
%<casualcontract.idser>% =  &<casualcontract.idser>&
AND 
%<casualcontract.start>% =  &<casualcontract.start>&
AND
%<casualcontract.stop>%  =  &<casualcontract.stop>&
AND
%<casualcontract.idreg>%  =  &<casualcontract.idreg>&
)
OR

([SELECT COUNT(*) 
  FROM registryaddress 
  JOIN address 
    ON registryaddress.idaddresskind = address.idaddress
WHERE idreg = %<casualcontract.idreg>%
AND   codeaddress = ''07_SW_DEF''
AND
(
ISNULL(%<casualcontract.start>%,{d ''1900-01-01''})  BETWEEN ISNULL(start,{d ''1900-01-01''})  AND ISNULL(stop,{d ''2079-01-01''})
OR  
ISNULL(%<casualcontract.stop>%,{d ''2079-01-01''})  BETWEEN ISNULL(start,{d ''1900-01-01''})  AND ISNULL(stop,{d ''2079-01-01''})
)
AND ISNULL(flagforeign,''N'') = ''S''
]{I}=0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS014','1','D','casualcontractrefund','S','S','S','N','N',{ts '2009-10-14 10:38:06.920'},'SARA','Non è possibile diminuire le spese deducibili, perchè sui pagamenti effettuati nel corso dell''anno sono state già applicate delle deduzioni per spese. Sarebbe compromesso il calcolo dell''imponibile ai fini dell''applicazione della quota esente previdenziale.','S','[select count(*) from expensecasualcontract EC
 join expenselink EL on EL.idparent=EC.idexp
 join expenselast ELA on EL.idchild=ELA.idexp
 where EC.ycon=%<casualcontractrefund.ycon>%
	and EC.ncon=%<casualcontractrefund.ncon>%
]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS001','1','I','casualcontractrefund','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il compenso lordo al beneficiario del contratto n. %<casualcontract.ncon>%/%<casualcontract.ncon>% è inferiore all''importo totale delle spese collegate ad esso','N','--post
[SELECT feegross FROM casualcontract
WHERE ycon = %<casualcontractrefund.ycon>%
AND ncon = %<casualcontractrefund.ncon>%]{N}
>=
[SELECT SUM(amount) FROM casualcontractrefund
WHERE ycon = %<casualcontractrefund.ycon>%
AND ncon = %<casualcontractrefund.ncon>%]{N}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS014','1','I','casualcontractrefund','S','S','S','N','N',{ts '2009-10-14 10:03:19.060'},'SARA','Se si aumentano le spese deducibili del presente contratto, poichè sono stati già effettuati dei pagamenti nel corso dell''anno applicando la quota esente previdenziale, per non comprometterne il calcolo, si dovrà effettuare un ulteriore pagamento di importo pari almeno a quello delle spese che si stanno aggiungendo.','S','[select count(*) from expensecasualcontract EC
 join expenselink EL on EL.idparent=EC.idexp
 join expenselast ELA on EL.idchild=ELA.idexp
 where EC.ycon=%<casualcontractrefund.ycon>%
	and EC.ncon=%<casualcontractrefund.ncon>%
]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS001','1','U','casualcontractrefund','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il compenso lordo al beneficiario del contratto n. %<casualcontract.ncon>%/%<casualcontract.ncon>% è inferiore all''importo totale delle spese collegate ad esso','N','--post
[SELECT feegross FROM casualcontract
WHERE ycon = %<casualcontractrefund.ycon>%
AND ncon = %<casualcontractrefund.ncon>%]{N}
>=
[SELECT SUM(amount) FROM casualcontractrefund
WHERE ycon = %<casualcontractrefund.ycon>%
AND ncon = %<casualcontractrefund.ncon>%]{N}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS014','1','U','casualcontractrefund','S','S','S','N','N',{ts '2009-10-14 11:25:02.390'},'SARA','Non è possibile diminuire le spese deducibili, perchè sui pagamenti effettuati nel corso dell''anno sono state già applicate delle deduzioni per spese. Sarebbe compromesso il calcolo dell''imponibile ai fini dell''applicazione della quota esente previdenziale.','S','[select count(*) from expensecasualcontract EC
 join expenselink EL on EL.idparent=EC.idexp
 join expenselast ELA on EL.idchild=ELA.idexp
 where EC.ycon=%<casualcontractrefund.ycon>%
	and EC.ncon=%<casualcontractrefund.ncon>%
]{I}=0
OR
(
isnull(%<casualcontractrefund.amount>%,0) >= 
isnull(&<casualcontractrefund.amount>&,0) 
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS014','2','U','casualcontractrefund','S','S','S','N','N',{ts '2009-10-14 11:25:34.030'},'SARA','Se si aumentano le spese deducibili del presente contratto, poichè sono stati già effettuati nel corso dell''anno dei pagamenti applicando la quota esente previdenziale, per non comprometterne il calcolo, si dovrà effettuare un ulteriore pagamento di importo pari almeno a quello delle spese che si stanno aggiungendo.','S','[select count(*) from expensecasualcontract EC
 join expenselink EL on EL.idparent=EC.idexp
 join expenselast ELA on EL.idchild=ELA.idexp
 where EC.ycon=%<casualcontractrefund.ycon>%
	and EC.ncon=%<casualcontractrefund.ncon>%
]{I}=0
OR
(
isnull(%<casualcontractrefund.amount>%,0) <= 
isnull(&<casualcontractrefund.amount>&,0) 
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS018','1','I','casualcontractyear','S','S','S','N','N',{ts '2009-10-13 15:59:13.200'},'SARA','Il percipiente ha già richiesto, nell''anno, l''applicazione di un''aliquota marginale. Ci sarebbe da attendersi che la chieda anche per questa. E'' opportuno effettuare quindi una verifica.','N','(%<casualcontractyear.flaghigherrate>%=''S''
and
%<casualcontractyear.higherrate>%>0)
OR

(
isnull([execute max_higherrate %<sys_esercizio>%,
	''C'',  
	[select idreg from casualcontract 
	 where ycon = %<casualcontractyear.ycon>%
	 and    ncon = %<casualcontractyear.ncon>%
	]{I} ,
	@outvar output]{N},0)=0

AND

isnull([execute max_higherrate %<sys_esercizio>%,
	''O'',  
	[select idreg from casualcontract 
	 where ycon = %<casualcontractyear.ycon>%
	 and    ncon = %<casualcontractyear.ncon>%
	]{I} ,
	@outvar output]{N},0)=0

)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS019','1','I','casualcontractyear','S','S','S','N','N',{ts '2011-01-11 15:20:48.417'},'sa','In base al comma 3 dell''art. 25 del DPR 600/1973, per prestazioni di importo inferiore a 25,82 euro i percipienti non sono soggetti a ritenuta.
[ Art. 25 DPR 600/73: Le disposizioni dei precedenti commi non si applicano ai compensi di importo inferiore a lire 50.000 corrisposti dai soggetti indicati nella lettera c) dell''art. 2, del D.P.R. 29 settembre 1973, n. 598, per prestazioni di lavoro autonomo non esercitato abitualmente e SEMPRECHE'' NON COSTITUISCANO ACCONTO DI MAGGIORI COMPENSI ] . Nel caso NON si tratti dell''acconto per una prestazione di importo superiore, per impedire la tassazione si dovrà impostare manualmente l''aliquota marginale allo 0 % nella sezione degli imponibili del contratto in oggetto.','N','-- Se l''aliquota marginale è >0 oppure ho scelto di applicare l''aliquota corrente...
(
ISNULL(%<casualcontractyear.higherrate>%,0)<=0 
AND  
ISNULL(%<casualcontractyear.flaghigherrate>%,''N'')=''S''
)
OR 
ISNULL(
[SELECT feegross 
 FROM    casualcontract
 WHERE casualcontract.ycon= %<casualcontractyear.ycon>%
 AND       casualcontract.ncon= %<casualcontractyear.ncon>%
]{V}
,0)>25.82



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS014','1','U','casualcontractyear','S','S','S','N','N',{ts '2009-10-13 15:44:30.497'},'SARA','Non è possibile modificare l''aliquota di un compenso per prestazione occasionale già pagato anche parzialmente','S','[select count(*) from expensecasualcontract EC
 join expenselink EL on EL.idparent=EC.idexp
 join expenselast ELA on EL.idchild=ELA.idexp
 join expenseyear EY on EY.idexp = ELA.idexp
and EY.ayear = %<casualcontractyear.ayear>%
where EC.ycon=%<casualcontractyear.ycon>%
and EC.ncon=%<casualcontractyear.ncon>%
]{I}=0
OR
(
ISNULL(%<casualcontractyear.higherrate>%,0)=
ISNULL(&<casualcontractyear.higherrate>&,0)
and
isnull(%<casualcontractyear.flaghigherrate>%,''N'')=
isnull(&<casualcontractyear.flaghigherrate>&,''N'')
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS018','1','U','casualcontractyear','S','S','S','N','N',{ts '2009-10-13 15:59:45.390'},'SARA','Il percipiente ha già richiesto, nell''anno, l''applicazione di un''aliquota marginale. Ci sarebbe da attendersi che la chieda anche per questa. E'' opportuno effettuare quindi una verifica.','N','(%<casualcontractyear.flaghigherrate>%=''S''
and
%<casualcontractyear.higherrate>%>0)
OR
(
isnull([execute max_higherrate %<sys_esercizio>%,
	''C'',  
	[select idreg from casualcontract 
	 where ycon = %<casualcontractyear.ycon>%
	 and    ncon = %<casualcontractyear.ncon>%
	]{I} ,
	@outvar output]{N},0)=0

AND

isnull([execute max_higherrate %<sys_esercizio>%,
	''O'',  
	[select idreg from casualcontract 
	 where ycon = %<casualcontractyear.ycon>%
	 and    ncon = %<casualcontractyear.ncon>%
	]{I} ,
	@outvar output]{N},0)=0

)
OR
&<casualcontractyear.flaghigherrate>&=%<casualcontractyear.flaghigherrate>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS019','1','U','casualcontractyear','S','S','S','N','N',{ts '2011-01-11 15:20:40.230'},'sa','E'' stata modificata l''aliquota della ritenuta. In base al comma 3 dell''art. 25 del DPR 600/1973, per prestazioni di importo inferiore a 25,82 euro i percipienti non sono soggetti a ritenuta.[ Art. 25 DPR 600/73: Le disposizioni dei precedenti commi non si applicano ai compensi di importo inferiore a lire 50.000 corrisposti dai soggetti indicati nella lettera c) dell''art. 2, del D.P.R. 29 settembre 1973, n. 598, per prestazioni di lavoro autonomo non esercitato abitualmente e SEMPRECHE'' NON COSTITUISCANO ACCONTO DI MAGGIORI COMPENSI ]. Nel caso NON si tratti dell''acconto per una prestazione di importo superiore, per impedire la tassazione si dovrà impostare manualmente l''aliquota marginale allo 0 % nella sezione degli imponibili del contratto in oggetto.','N','-- Si è modificata l''aliquota marginale ponendola >0

ISNULL(%<casualcontractyear.higherrate>%,0)=ISNULL(&<casualcontractyear.higherrate>&,0)
OR
ISNULL(%<casualcontractyear.higherrate>%,0)<=0
OR
ISNULL(
[SELECT feegross 
 FROM    casualcontract
 WHERE casualcontract.ycon= %<casualcontractyear.ycon>%
 AND       casualcontract.ncon= %<casualcontractyear.ncon>%
]{V}
,0)>25.82


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS019','2','U','casualcontractyear','S','S','S','N','N',{ts '2011-01-11 15:20:34.293'},'sa','E'' stata modificato l''importo del compensota. In base al comma 3 dell''art. 25 del DPR 600/1973, per prestazioni di importo inferiore a 25,82 euro i percipienti non sono soggetti a ritenuta. [ Art. 25 DPR 600/73: Le disposizioni dei precedenti commi non si applicano ai compensi di importo inferiore a lire 50.000 corrisposti dai soggetti indicati nella lettera c) dell''art. 2, del D.P.R. 29 settembre 1973, n. 598, per prestazioni di lavoro autonomo non esercitato abitualmente e SEMPRECHE'' NON COSTITUISCANO ACCONTO DI MAGGIORI COMPENSI ]. Nel caso NON si tratti dell''acconto per una prestazione di importo superiore, per impedire la tassazione si dovrà impostare manualmente l''aliquota marginale allo 0 % nella sezione degli imponibili del contratto in oggetto.','N','ISNULL(%<casualcontract.feegross>%,0) = ISNULL(&<casualcontract.feegross>&,0)
OR
(
ISNULL(%<casualcontractyear.higherrate>%,0)<=0
AND
ISNULL(%<casualcontractyear.flaghigherrate>%,''N'')=''S''
)

OR
ISNULL(
[SELECT feegross 
 FROM    casualcontract
 WHERE casualcontract.ycon= %<casualcontractyear.ycon>%
 AND       casualcontract.ncon= %<casualcontractyear.ncon>%
]{V}
,0)>25.82



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS019','3','U','casualcontractyear','N','N','S','N','N',{ts '2011-01-11 15:20:28.307'},'sa','Si è impostata l''aliquota corrente. In base al comma 3 dell''art. 25 del DPR 600/1973, per prestazioni di importo inferiore a 25,82 euro i percipienti non sono soggetti a ritenuta.[ Art. 25 DPR 600/73: Le disposizioni dei precedenti commi non si applicano ai compensi di importo inferiore a lire 50.000 corrisposti dai soggetti indicati nella lettera c) dell''art. 2, del D.P.R. 29 settembre 1973, n. 598, per prestazioni di lavoro autonomo non esercitato abitualmente e SEMPRECHE'' NON COSTITUISCANO ACCONTO DI MAGGIORI COMPENSI ]. Nel caso NON si tratti dell''acconto per una prestazione di importo superiore, per impedire la tassazione si dovrà impostare manualmente l''aliquota marginale allo 0 % nella sezione degli imponibili del contratto in oggetto.','N','-- Si è cambiata la spunta mettendola su applica aliquota corrente
ISNULL(%<casualcontractyear.flaghigherrate>%,''N'')=ISNULL(&<casualcontractyear.flaghigherrate>&,''N'')
OR
ISNULL(%<casualcontractyear.flaghigherrate>%,''N'')=''N''
OR
ISNULL(
[SELECT feegross 
 FROM    casualcontract
 WHERE casualcontract.ycon= %<casualcontractyear.ycon>%
 AND       casualcontract.ncon= %<casualcontractyear.ncon>%
]{V}
,0)>25.82
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','casualrefund','S','S','S','N','N',{ts '2006-03-29 14:56:23.313'},'''SARA''','Cancellazione Impossibile! Esistono contratti  di prestazione occasionale ai quali la spesa %<description>% è collegata','S','[SELECT count(*) 
from casualcontractrefund 
where idlinkedrefund = %<casualrefund.idlinkedrefund>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','category','S','S','S','N','N',{ts '2007-09-13 11:54:04.890'},'NINO','Cancellazione Impossibile! Esistono dati in anagrafica collegati alla La categoria %<category.description>','S','[(SELECT count(*)  
from registry 
where idcategory = %<category.idcategory>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','category','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione della categoria già esistente','S','[(SELECT count(*) 
from category
where description = %<category.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','category','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione della categoria già esistente','S','[(SELECT count(*) 
from category
where  idcategory<> %<category.idcategory>% and 
description = %<category.description>%)]{N} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','centralizedcategory','S','S','S','N','N',{ts '2007-11-27 13:32:23.437'},'SARA','Cancellazione Impossibile! Esistono dati in anagrafica collegati alla classificazione %<centralizedcategory.description>%','S','[(SELECT count(*)  
from registry 
where idcentralizedcategory=%<centralizedcategory.idcentralizedcategory>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','centralizedcategory','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione della classificazione già esistente','S','[(SELECT count(*) 
from centralizedcategory
where description = %<centralizedcategory.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','centralizedcategory','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione della classificazione già esistente','S','[(SELECT count(*) 
from centralizedcategory
where  idcentralizedcategory<> %<centralizedcategory.idcentralizedcategory>% and 
description = %<centralizedcategory.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','clawback','S','S','S','N','N',{ts '2009-11-27 16:19:16.297'},'SARA','Il tipo di recupero %<description>% non può essere cancellato in quanto esistono movimenti di spesa che lo referenziano.','S','[(SELECT count(*) 
from expenseclawback
where idclawback = %<clawback.idclawback>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','clawback','S','S','S','N','N',{ts '2009-11-27 16:19:33.250'},'SARA','Il recupero %<idclawback>%  non può essere cancellato in quanto esistono personalizzazioni di missioni che lo referenziano.','S','[(SELECT count(*) 
from config 
where idclawback = %<clawback.idclawback>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','clawback','S','S','S','N','N',{ts '2009-11-27 16:19:58.517'},'SARA','Il tipo di recupero %<description>% non può essere cancellato in quanto esistono configurazioni di automatismi di recuperi che lo referenziano.','S','[(SELECT count(*) 
from clawbacksetup 
where idclawback = %<clawback.idclawback>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','clawback','S','S','S','N','N',{ts '2009-11-27 16:20:22.890'},'SARA','Il tipo di recupero %<description>% non può essere cancellato in quanto esistono classificazioni di recuperi che lo referenziano.','S','[(SELECT count(*) 
from clawbacksorting
where idclawback = %<clawback.idclawback>%)]{I} = 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','5','D','clawback','S','S','S','N','N',{ts '2009-11-27 16:20:41.920'},'SARA','Il tipo di recupero %<description>% non può essere cancellato in quanto esistono recuperi su  movimenti del pagamento stipendi che lo referenziano.','S','[(SELECT count(*) 
from admpay_clawback
where idclawback = %<clawback.idclawback>%)]{I} = 0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','6','D','clawback','S','S','S','N','N',{ts '2009-11-27 16:21:03.467'},'SARA','Il tipo di recupero %<description>% non può essere cancellato in quanto esistono movimenti di spesa che lo referenziano.','S','[(SELECT count(*) 
from expense
where idclawback = %<clawback.idclawback>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','clawback','S','S','S','N','N',{ts '2008-07-24 16:12:37.797'},'SARA','Tipo di recupero già esistente','S','[(SELECT count(*) 
from clawback 
where clawbackref = %<clawback.clawbackref>%)]{N} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','clawback','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del tipo di recupero già esistente','S','[(SELECT count(*) 
from clawback 
where description = %<clawback.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','clawback','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del tipo di recupero già esistente','S','[(SELECT count(*) 
from clawback 
where idclawback <> %<clawback.idclawback>% 
and description = %<clawback.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','clawbacksetup','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Configurazione degli automatismi per il recupero %<idclawback>% per l''esercizio %<esercizio>% già esistente','S','[(SELECT count(*) 
from clawbacksetup 
where idclawback = %<clawbacksetup.idclawback>% 
and ayear = %<clawbacksetup.ayear>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','U','config','S','S','S','N','N',{ts '2007-12-15 09:56:34.983'},'NINO','La configurazione generale non può essere modificata. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6
OR
(
	(%<config.cashvaliditykind>% = &<config.cashvaliditykind>&)
	AND (%<config.fin_kind>% = &<config.fin_kind>&)
	AND (%<config.flagcredit>% = &<config.flagcredit>&)
	AND (%<config.flagproceeds>% = &<config.flagproceeds>&)
	AND (ISNULL(%<config.assessmentphasecode>%,0) = ISNULL(&<config.assessmentphasecode>&,0))
	AND (ISNULL(%<config.appropriationphasecode>%,0) = ISNULL(&<config.appropriationphasecode>&,0))
	AND (ISNULL(%<config.payment_finlevel>%,0) = ISNULL(&<config.payment_finlevel>&,0))
	AND (ISNULL(%<config.proceeds_finlevel>%,0) = ISNULL(&<config.proceeds_finlevel>&,0))
	AND (ISNULL(%<config.idfinincomesurplus>%,0) = ISNULL(&<config.idfinincomesurplus>&,0))
	AND (ISNULL(%<config.idfinexpensesurplus>%,0) = ISNULL(&<config.idfinexpensesurplus>&,0))

)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DICHI001','1','U','config','S','S','S','N','N',{ts '2008-06-26 14:17:20.713'},'NINO','L''F24EP non può essere prodotto in quanto la configurazione della competenza delle ritenute non è coerente con il modello.','S','[SELECT COUNT(*)
FROM f24ep
WHERE ayear = %<config.ayear>%]{I} = 0
OR
ISNULL(&<config.taxvaliditykind>&, 0) =
ISNULL(%<config.taxvaliditykind>%, 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM036','1','U','config','S','S','S','N','N',{ts '2007-12-05 15:40:18.983'},'PINO','Non si può modificare la fase di spesa se esistono movimenti contabilizzati','S','[SELECT COUNT(*) FROM expensemandate where yman = %<sys_esercizio>%]{I}
+
[SELECT COUNT(*) FROM expenseitineration 
	join itineration on itineration.iditineration = expenseitineration.iditineration
	where itineration.yitineration = %<sys_esercizio>%]{I}
+
[SELECT COUNT(*) FROM expensepayroll
JOIN payroll
ON expensepayroll.idpayroll = payroll.idpayroll
WHERE payroll.fiscalyear = %<sys_esercizio>%]{I}
+
[SELECT COUNT(*) FROM expensecasualcontract where ycon = %<sys_esercizio>%]{I}
+
[SELECT COUNT(*) FROM expensewageaddition where ycon = %<sys_esercizio>%]{I}
+
[SELECT COUNT(*) FROM expenseprofservice where ycon = %<sys_esercizio>%]{I}
= 0
OR
ISNULL(&<config.expensephase>&,0) = ISNULL(%<config.expensephase>%,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM036','2','U','config','S','S','S','N','N',{ts '2007-10-01 09:42:01.377'},'NINO','Non si può modificare la fase di entrata se esistono contratti contabilizzati','S','[SELECT COUNT(*) FROM incomeestimate where yestim = %<sys_esercizio>%]{I}
= 0
OR
ISNULL(&<config.incomephase>&,0) = ISNULL(%<config.incomephase>%,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN016','1','U','config','S','S','S','N','N',{ts '2008-06-26 13:13:27.040'},'NINO','Ci sono dettagli ritenuta il cui movimento principale non è stato trasmesso','S','-- Controllo per le prime due configurazioni
&<config.taxvaliditykind>& > 2
OR
%<config.taxvaliditykind>% <> 5
OR
[SELECT COUNT(*)
FROM expensetax
JOIN expenselast
	ON expenselast.idexp = expensetax.idexp
JOIN expense
	ON expense.idexp = expenselast.idexp
LEFT OUTER JOIN payment
	ON payment.kpay = expenselast.kpay
LEFT OUTER JOIN paymenttransmission
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
WHERE paymenttransmission.kpaymenttransmission IS NULL
	AND expense.ymov = %<config.ayear>%]{I}
+
[SELECT COUNT(*)
FROM expensetaxcorrige
JOIN expenselast
	ON expenselast.idexp = expensetaxcorrige.idexp
JOIN expense
	ON expense.idexp = expenselast.idexp
LEFT OUTER JOIN payment
	ON payment.kpay = expenselast.kpay
LEFT OUTER JOIN paymenttransmission
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
WHERE paymenttransmission.kpaymenttransmission IS NULL
	AND expense.ymov = %<config.ayear>%]{I}
= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN016','2','U','config','S','S','S','N','N',{ts '2008-06-26 13:19:20.650'},'NINO','Ci sono dettagli ritenuta il cui movimento principale non è stato trasmesso','S','-- Controllo per le configurazioni 3 e 4
&<config.taxvaliditykind>& > 4
OR &<config.taxvaliditykind>& < 3
OR
%<config.taxvaliditykind>% <> 5
OR
[SELECT COUNT(*)
FROM expensetax
JOIN expenselast
	ON expenselast.idexp = expensetax.idexp
JOIN expense
	ON expense.idexp = expenselast.idexp
JOIN payment
	ON payment.kpay = expenselast.kpay
LEFT OUTER JOIN paymenttransmission
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
WHERE paymenttransmission.kpaymenttransmission IS NULL
	AND expense.ymov = %<config.ayear>%]{I}
+
[SELECT COUNT(*)
FROM expensetaxcorrige
JOIN expenselast
	ON expenselast.idexp = expensetaxcorrige.idexp
JOIN expense
	ON expense.idexp = expenselast.idexp
JOIN payment
	ON payment.kpay = expenselast.kpay
LEFT OUTER JOIN paymenttransmission
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
WHERE paymenttransmission.kpaymenttransmission IS NULL
	AND expense.ymov = %<config.ayear>%]{I}
= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN016','3','U','config','S','S','S','N','N',{ts '2008-06-26 14:15:03.713'},'NINO','Ci sono dettagli ritenuta il cui movimento principale non è stato trasmesso','S','-- Controllo per la configurazione 6
&<config.taxvaliditykind>& <> 6
OR
%<config.taxvaliditykind>% <> 5
OR
[SELECT COUNT(*)
FROM expensetax
JOIN expenselast
	ON expenselast.idexp = expensetax.idexp
JOIN expense
	ON expense.idexp = expenselast.idexp
JOIN payment
	ON payment.kpay = expenselast.kpay
JOIN paymenttransmission
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
WHERE NOT EXISTS(SELECT * FROM banktransaction WHERE banktransaction.idexp = expensetax.idexp)
	AND expense.ymov = %<config.ayear>%]{I}
+
[SELECT COUNT(*)
FROM expensetaxcorrige
JOIN expenselast
	ON expenselast.idexp = expensetaxcorrige.idexp
JOIN expense
	ON expense.idexp = expenselast.idexp
JOIN payment
	ON payment.kpay = expenselast.kpay
JOIN paymenttransmission
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
WHERE NOT EXISTS(SELECT * FROM banktransaction WHERE banktransaction.idexp = expensetaxcorrige.idexp)
	AND expense.ymov = %<config.ayear>%]{I}
= 0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','D','creditpart','S','S','S','S','N',{ts '2008-03-11 12:50:29.287'},'NINO','Non possono essere cancellate assegnazioni di crediti. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI001','1','D','creditpart','S','N','S','S','N',{ts '2012-07-26 15:51:46.920'},'sa','La dotazione dei crediti è NEGATIVA!','S','[(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
FROM upbtotal 
WHERE idfin = %<creditpart.idfin>%
AND idupb= %<creditpart.idupb>%
)]{N} 
- 
ISNULL(%<creditpart.amount>%, 0) >= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI002','1','D','creditpart','S','N','S','S','N',{ts '2012-07-26 16:07:43.030'},'sa','La dotazione crediti della voce %<fin.codefin>% è INSUFFICIENTE!','S','isnull([(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0)  
from upbtotal 
where idfin = %<creditpart.idfin>%
and idupb  = %<creditpart.idupb>%
)]{N} ,0)
- 
ISNULL(%<creditpart.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<creditpart.idfin>% 
	and idupb= %<creditpart.idupb>%
	and nphase = %<sys_expensefinphase>%
	]{N}
,0)
>= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI006','1','D','creditpart','S','N','S','S','N',{ts '2013-05-21 09:46:55.593'},'sa','La dotazione dei crediti per Finanziamento: %<creditpartview.underwriting>% , UPB: %<creditpartview.upb>% , Bilancio: %<creditpartview.codefin>% è NEGATIVA!','S','(isnull([select idunderwriting from income where idinc = %<creditpart.idinc>%]{I},0)=0)  

OR

[(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
FROM upbunderwritingtotal  
WHERE idfin = %<creditpart.idfin>%
AND idupb= %<creditpart.idupb>%
AND idunderwriting= [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}

)]{N} 
- 
ISNULL(%<creditpart.amount>%, 0) >= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI007','1','D','creditpart','S','N','S','S','N',{ts '2013-05-21 09:53:46.583'},'sa','La dotazione crediti di Finanziamento: %<creditpartview.underwriting>% , UPB: %<creditpartview.upb>% , Bilancio: %<creditpartview.codefin>% è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<creditpart.idinc>%]{I},0)=0)  
OR

isnull([(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0)  
from upbunderwritingtotal 
where idfin = %<creditpart.idfin>%
and idupb  = %<creditpart.idupb>%
AND idunderwriting= [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}

)]{N} ,0)
- 
ISNULL(%<creditpart.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = %<creditpart.idfin>% 
	and idupb= %<creditpart.idupb>%
	and idunderwriting= [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}
	and nphase = %<sys_expensefinphase>%
	]{N}
,0)
>= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO011','2','D','creditpart','S','N','S','S','N',{ts '2012-07-26 16:20:21.907'},'sa','La dotazione crediti della voce %<fin.codefin>% è INSUFFICIENTE!','S','isnull([(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0)  
from upbtotal 
where idfin = %<creditpart.idfin>%
	and idupb= %<creditpart.idupb>%
)]{N} ,0)
- 
ISNULL(%<creditpart.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<creditpart.idfin>% 
	and idupb= %<creditpart.idupb>%
	and nphase = %<sys_expensefinphase>%
	]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<creditpart.idfin>%
	and idupb= %<creditpart.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{N}
 ,0)

>= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO034','2','D','creditpart','S','N','S','S','N',{ts '2013-06-19 12:31:31.123'},'assistenza','La dotazione crediti di Finanziamento: %<creditpartview.underwriting>% , UPB: %<creditpartview.upb>% , Bilancio: %<creditpartview.codefin>% è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<creditpart.idinc>%]{I},0)=0)  
OR

isnull([(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0)  
from upbunderwritingtotal 
where idfin = %<creditpart.idfin>%
	and idupb= %<creditpart.idupb>%
	and idunderwriting= [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}
)]{N} ,0)
- 
ISNULL(%<creditpart.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = %<creditpart.idfin>% 
	and idupb= %<creditpart.idupb>%
	and idunderwriting= [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}
	and nphase = %<sys_expensefinphase>%
	]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = %<creditpart.idfin>%
	and PO.idupb= %<creditpart.idupb>%
	and POU.idunderwriting =  [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}
	and PO. yrestore IS NULL 
	and PO.nrestore IS NULL]{N}
 ,0)

>= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS005','1','D','creditpart','S','S','S','S','S',{ts '2012-09-27 10:57:42.993'},'sa','La cancellazione dell''assegnazione crediti sulla voce di bilancio %<fin.codefin>% non è congrua con l''assegnazione incassi effettuata in precedenza.','N','ISNULL(
[SELECT SUM(proceedspart.amount) FROM proceedspart 
 join incomelink on incomelink.idchild=proceedspart.idinc
WHERE incomelink.idparent = %<creditpart.idinc>% 
AND proceedspart.idfin in  ( SELECT newidfin from allfinlookup 
			where allfinlookup.oldidfin= %<creditpart.idfin>% 
		)		
AND proceedspart.idupb = %<creditpart.idupb>% 

]{V}
,0)
<= 
ISNULL(
[SELECT SUM(amount) FROM creditpart 
	WHERE idfin= %<creditpart.idfin>% 
	AND idinc = %<creditpart.idinc>%
	AND idupb = %<creditpart.idupb>% 

]{V}
,0)
OR

[SELECT COUNT(*) FROM proceedspart 
 join incomelink on incomelink.idchild=proceedspart.idinc
WHERE incomelink.idparent = %<creditpart.idinc>% 
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM056','1','D','creditpart','S','N','S','S','N',{ts '2012-07-26 16:29:01.483'},'sa','L''importo dell''assegnazione crediti deve essere uguale a quello del movimento di entrata','N','ISNULL(
	[SELECT SUM(amount) FROM creditpart
	WHERE idinc = %<creditpart.idinc>%]{V}
,0) = 
ISNULL(
	[SELECT curramount
	FROM incometotal
	WHERE idinc = %<creditpart.idinc>%
	AND ayear = %<creditpart.ycreditpart>%]{V}
,0)
OR
ISNULL(
	[SELECT assured FROM upb
	WHERE idupb = %<creditpart.idupb>%
	]{C}
,''N'') = ''S''
OR
[SELECT flag & 1 FROM incometotal
WHERE idinc = %<creditpart.idinc>%
AND ayear = %<creditpart.ycreditpart>%]{I}
<> 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','I','creditpart','S','S','S','S','N',{ts '2008-03-11 12:50:31.677'},'NINO','Non possono essere inserite assegnazioni di crediti. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE004','1','I','creditpart','S','N','S','S','N',{ts '2012-07-31 13:13:34.310'},'sa','La previsione di competenza della voce in spesa %<fin.codefin>% è inferiore alle assegnazioni dei crediti','N','
isnull([SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) -
ISNULL(totcreditpart, 0) - 
ISNULL(creditvariation, 0) 
from upbtotal 
where idfin = %<creditpart.idfin>% 
 and idupb=%<creditpart.idupb>%
]{N} ,0)
-- - ISNULL(%<creditpart.amount>%, 0) 
>= 0
or ([select assured from upb 
where idupb = %<creditpart.idupb>%]{C}=''S'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE006','1','I','creditpart','S','N','S','S','N',{ts '2013-05-21 09:56:11.443'},'sa','La previsione di competenza della voce in spesa  %<creditpartview.codefin>%, Finanziamento: %<creditpartview.underwriting>% , UPB: %<creditpartview.upb>%  è inferiore alle assegnazioni dei crediti','N','(isnull([select idunderwriting from income where idinc = %<creditpart.idinc>%]{I},0)=0)  
OR

isnull([SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) -
ISNULL(totcreditpart, 0) - 
ISNULL(creditvariation, 0) 
from upbunderwritingtotal 
where idfin = %<creditpart.idfin>% 
 and idupb=%<creditpart.idupb>%
and idunderwriting= [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}
]{N} ,0)
-- - ISNULL(%<creditpart.amount>%, 0) 
>= 0
or ([select assured from upb 
where idupb = %<creditpart.idupb>%]{C}=''S'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI004','1','I','creditpart','S','S','S','S','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il movimento di entrata è inferiore rispetto alle assegnazioni crediti','N','isnull([SELECT ISNULL(curramount, 0) 
from incometotal 
where idinc = %<creditpart.idinc>%
 and ayear = %<sys_esercizio>%
]{N},0)
-
isnull([SELECT ISNULL(SUM(amount), 0) 
from creditpart 
where idinc = %<creditpart.idinc>%
and ycreditpart = %<sys_esercizio>%]{N}
,0)
>= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI005','1','I','creditpart','S','S','S','S','N',{ts '2006-01-01 00:00:00.000'},'Software and more','L''accertamento %<income.nmov>% / %<income.ymov>% non può essere assegnato in quanto appartenente ad altro esercizio. Utilizzare lo strumento DOTAZIONE CREDITI dal menu BILANCIO','N','--post
[SELECT ymov FROM income WHERE idinc = %<creditpart.idinc>%]{I} = %<sys_esercizio>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS005','1','I','creditpart','S','S','S','S','S',{ts '2012-09-27 10:37:02.820'},'sa','L''inserimento dell''assegnazione crediti sulla voce di bilancio %<fin.codefin>% non è congrua con l''assegnazione incassi effettuata in precedenza.','S','-- La somma delle assegnazioni incassi deve essere minore della somma delle assegnazioni crediti sulla stessa voce di bilancio
ISNULL(
[SELECT SUM(proceedspart.amount) FROM proceedspart 
 join incomelink on incomelink.idchild=proceedspart.idinc
WHERE incomelink.idparent = %<creditpart.idinc>% 
AND proceedspart.idfin in  ( SELECT newidfin from allfinlookup 
			where allfinlookup.oldidfin= %<creditpart.idfin>%) 
AND proceedspart.idupb = %<creditpart.idupb>% 	
]{V}
,0)
<=

%<creditpart.amount>% + 
ISNULL(
[SELECT SUM(amount) FROM creditpart WHERE 
idfin = %<creditpart.idfin>%
AND idupb = %<creditpart.idupb>% 	
AND idinc = %<creditpart.idinc>%]{V}
,0)
OR

[SELECT COUNT(*) FROM proceedspart 
 join incomelink on incomelink.idchild=proceedspart.idinc
WHERE incomelink.idparent = %<creditpart.idinc>% 
]{I} = 0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM056','1','I','creditpart','S','N','S','S','N',{ts '2012-07-26 16:29:24.110'},'sa','L''importo dell''assegnazione crediti deve essere uguale a quello del movimento di entrata','N','ISNULL(
	[SELECT SUM(amount) FROM creditpart
	WHERE idinc = %<creditpart.idinc>%]{V}
,0) = 
ISNULL(
	[SELECT curramount
	FROM incometotal
	WHERE idinc = %<creditpart.idinc>%
	AND ayear = %<creditpart.ycreditpart>%]{V}
,0)
OR
ISNULL(
	[SELECT assured FROM upb
	WHERE idupb = %<creditpart.idupb>%]{C}
,''N'') = ''S''
OR
[SELECT flag & 1 FROM incometotal
WHERE idinc = %<creditpart.idinc>%
AND ayear = %<creditpart.ycreditpart>%]{I}
<> 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','U','creditpart','S','S','S','S','N',{ts '2008-03-11 12:50:35.377'},'NINO','Non possono essere modificate assegnazioni di crediti. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE004','1','U','creditpart','S','N','S','S','N',{ts '2012-07-26 16:01:35.267'},'sa','La previsione di competenza della voce in spesa %<fin.codefin>% è inferiore alle assegnazioni dei crediti','S','
[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) - 
ISNULL(totcreditpart, 0) - 
ISNULL(creditvariation, 0) 
from upbtotal 
where idfin = %<creditpart.idfin>%
 and idupb = %<creditpart.idupb>%
]{V} 
+ 
ISNULL(&<creditpart.amount>&, 0)
- 
ISNULL(%<creditpart.amount>%, 0) >= 0
or
(%<creditpart.idfin>% <> &<creditpart.idfin>&)
or
(%<creditpart.idupb>% <> &<creditpart.idupb>&)
or
%<creditpart.amount>%<&<creditpart.amount>&
or 
[SELECT assured FROM upb
	WHERE idupb = %<creditpart.idupb>%]{C}
=''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE004','2','U','creditpart','S','N','S','S','N',{ts '2012-09-27 13:21:35.877'},'sa','La previsione di competenza della voce in spesa %<fin.codefin>% è inferiore alle assegnazioni dei crediti','S','
[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) - 
ISNULL(totcreditpart, 0) - 
ISNULL(creditvariation, 0) 
from upbtotal 
where idfin = %<creditpart.idfin>%
 and idupb= %<creditpart.idupb>%
]{V} 
- 
ISNULL(%<creditpart.amount>%, 0) >= 0
or
(%<creditpart.idfin>% = &<creditpart.idfin>&)
or 
(%<creditpart.idupb>% = &<creditpart.idupb>&)
or
[SELECT assured FROM upb
	WHERE idupb = %<creditpart.idupb>%]{C}
=''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE006','1','U','creditpart','S','N','S','S','N',{ts '2013-05-21 09:56:18.243'},'sa','La previsione di competenza della voce in spesa  %<creditpartview.codefin>%, Finanziamento: %<creditpartview.underwriting>% , UPB: %<creditpartview.upb>%  è inferiore alle assegnazioni dei crediti','S','(isnull([select idunderwriting from income where idinc = %<creditpart.idinc>%]{I},0)=0)  
OR

[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) - 
ISNULL(totcreditpart, 0) - 
ISNULL(creditvariation, 0) 
from upbunderwritingtotal 
where idfin = %<creditpart.idfin>%
 and idupb = %<creditpart.idupb>%
and idunderwriting= [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}
]{V} 
+ 
ISNULL(&<creditpart.amount>&, 0)
- 
ISNULL(%<creditpart.amount>%, 0) >= 0
or
(%<creditpart.idfin>% <> &<creditpart.idfin>&)
or
(%<creditpart.idupb>% <> &<creditpart.idupb>&)
or
%<creditpart.amount>%<&<creditpart.amount>&
or 
[SELECT assured FROM upb
	WHERE idupb = %<creditpart.idupb>%]{C}
=''S''')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE006','2','U','creditpart','S','N','S','S','N',{ts '2013-05-21 09:56:24.443'},'sa','La previsione di competenza della voce in spesa  %<creditpartview.codefin>%, Finanziamento: %<creditpartview.underwriting>% , UPB: %<creditpartview.upb>%  è inferiore alle assegnazioni dei crediti','S','(isnull([select idunderwriting from income where idinc = %<creditpart.idinc>%]{I},0)=0)  
OR

[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) - 
ISNULL(totcreditpart, 0) - 
ISNULL(creditvariation, 0) 
from upbunderwritingtotal 
where idfin = %<creditpart.idfin>%
 and idupb= %<creditpart.idupb>%
and idunderwriting= [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}
]{V} 
- 
ISNULL(%<creditpart.amount>%, 0) >= 0
or
(%<creditpart.idfin>% = &<creditpart.idfin>&)
or 
(%<creditpart.idupb>% = &<creditpart.idupb>&)
or
[SELECT assured FROM upb
	WHERE idupb = %<creditpart.idupb>%]{C}
=''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN006','1','U','creditpart','S','N','S','S','N',{ts '2012-07-26 16:08:51.517'},'sa','La dotazione crediti della voce %<fin.codefin>% è INSUFFICIENTE!','S','isnull([SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbtotal 
where idfin = %<creditpart.idfin>%
	and idupb= %<creditpart.idupb>%
]{N},0) 
- 
ISNULL(&<creditpart.amount>&, 0)
+ 
ISNULL(%<creditpart.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<creditpart.idfin>% 
	and idupb= %<creditpart.idupb>% 
	and nphase = %<sys_expensefinphase>%]{N}
,0)
>= 0
or
%<creditpart.idfin>% <> &<creditpart.idfin>&
or
%<creditpart.idupb>% <> &<creditpart.idupb>&
or
(%<creditpart.amount>%>&<creditpart.amount>&)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN006','2','U','creditpart','S','N','S','S','N',{ts '2013-05-09 17:29:57.057'},'sara','La dotazione crediti di Finanziamento: %<creditpartview.underwriting>% , UPB: %<creditpartview.upb>% , Bilancio: %<creditpartview.codefin>% è INSUFFICIENTE!','S','isnull([SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbtotal 
where idfin = %<creditpart.idfin>%
	and idupb= %<creditpart.idupb>%
]{N},0) 
- 
ISNULL(&<creditpart.amount>&, 0)
+ 
ISNULL(%<creditpart.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal
	where idfin = %<creditpart.idfin>% 
	and idupb= %<creditpart.idupb>% 
	and idunderwriting= [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}
	and nphase = %<sys_expensefinphase>%]{N}
,0)
>= 0
or
%<creditpart.idfin>% <> &<creditpart.idfin>&
or
%<creditpart.idupb>% <> &<creditpart.idupb>&
or
(%<creditpart.amount>%>&<creditpart.amount>&)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI001','1','U','creditpart','S','N','S','S','N',{ts '2012-07-26 16:04:56.920'},'sa','La dotazione dei crediti è NEGATIVA!','S','[SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbtotal 
where idfin = %<creditpart.idfin>%
	 and idupb=%<creditpart.idupb>%
]{N} 
- 
ISNULL(&<creditpart.amount>&, 0)
+ 
ISNULL(%<creditpart.amount>%, 0) >= 0
or
%<creditpart.idfin>% <> &<creditpart.idfin>&
or
%<creditpart.idupb>% <> &<creditpart.idupb>&
or
%<creditpart.amount>%>&<creditpart.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI001','2','U','creditpart','S','N','S','S','N',{ts '2012-07-26 16:05:24.483'},'sa','La dotazione dei crediti è NEGATIVA!','S','isnull([SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbtotal 
where idfin = %<creditpart.idfin>%
and idupb= %<creditpart.idupb>%
]{N},0) 
+ 
ISNULL(%<creditpart.amount>%, 0) >= 0
or
%<creditpart.idfin>% = &<creditpart.idfin>&
or
%<creditpart.idupb>% = &<creditpart.idupb>&
or
%<creditpart.amount>%>&<creditpart.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI002','1','U','creditpart','S','N','S','S','N',{ts '2006-01-01 00:00:00.000'},'Software and more','La dotazione crediti della voce %<fin.codefin>% è INSUFFICIENTE!','S','isnull([SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbtotal 
where idfin = %<creditpart.idfin>%
	and idupb= [select idupb from incomeyear where
			ayear= %<creditpart.ycreditpart>% and
			idinc=%<creditpart.idinc>%]{C}
]{N},0) 
- 
ISNULL(&<creditpart.amount>&, 0)
+ 
ISNULL(%<creditpart.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<creditpart.idfin>% 
	and idupb= [select idupb from incomeyear where
			ayear= %<creditpart.ycreditpart>% and
			idinc=%<creditpart.idinc>%]{C}
	and nphase = %<sys_expensefinphase>%]{N}
,0)
>= 0
or
%<creditpart.idfin>% <> &<creditpart.idfin>&
or
(%<creditpart.amount>%>&<creditpart.amount>&)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI002','2','U','creditpart','S','N','S','S','N',{ts '2012-07-26 16:09:55.593'},'sa','La dotazione crediti della voce %<fin.codefin>% è INSUFFICIENTE!','S','isnull([SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbtotal 
where idfin = &<creditpart.idfin>&
	and idupb= %<creditpart.idupb>%
]{N} ,0)
-
ISNULL(&<creditpart.amount>&, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = &<creditpart.idfin>&
	and idupb= %<creditpart.idupb>%
	and nphase = %<sys_expensefinphase>%]{N}
,0)
>= 0
or
%<creditpart.idfin>% = &<creditpart.idfin>&
or
%<creditpart.idupb>% = &<creditpart.idupb>&
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI004','1','U','creditpart','S','S','S','S','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il movimento di entrata è inferiore rispetto alle assegnazioni crediti','N','--post
(
isnull([SELECT ISNULL(curramount, 0) 
from incometotal 
where idinc = %<creditpart.idinc>%
 and ayear = %<sys_esercizio>%
]{N},0)
-
isnull([SELECT ISNULL(sum(amount), 0) 
from creditpart 
where idinc = %<creditpart.idinc>%
and ycreditpart = %<sys_esercizio>%]{N}
,0)
>= 0)
OR
%<creditpart.amount>%<=&<creditpart.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI006','1','U','creditpart','S','N','S','S','N',{ts '2013-05-21 09:47:09.577'},'sa','La dotazione dei crediti Finanziamento: %<creditpartview.underwriting>% , UPB: %<creditpartview.upb>% , Bilancio: %<creditpartview.codefin>% è NEGATIVA!','S','(isnull([select idunderwriting from income where idinc = %<creditpart.idinc>%]{I},0)=0)  
OR
[SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbunderwritingtotal  
where idfin = %<creditpart.idfin>%
	 and idupb=%<creditpart.idupb>%
AND idunderwriting= [select idunderwriting 
			from income 
			where idinc = %<creditpart.idinc>%]{I}

]{N} 
- 
ISNULL(&<creditpart.amount>&, 0)
+ 
ISNULL(%<creditpart.amount>%, 0) >= 0
or
%<creditpart.idfin>% <> &<creditpart.idfin>&
or
%<creditpart.idupb>% <> &<creditpart.idupb>&
or
%<creditpart.amount>%>&<creditpart.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI006','2','U','creditpart','S','N','S','S','N',{ts '2013-05-21 09:48:02.300'},'sa','La dotazione dei crediti Finanziamento: %<creditpartview.underwriting>% , UPB: %<creditpartview.upb>% , Bilancio: %<creditpartview.codefin>% è NEGATIVA!','S','(isnull([select idunderwriting from income where idinc = %<creditpart.idinc>%]{I},0)=0)  
OR

isnull([SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbunderwritingtotal  
where idfin = %<creditpart.idfin>%
and idupb= %<creditpart.idupb>%
AND idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<creditpart.idinc>%]{I}

]{N},0) 
+ 
ISNULL(%<creditpart.amount>%, 0) >= 0
or
%<creditpart.idfin>% = &<creditpart.idfin>&
or
%<creditpart.idupb>% = &<creditpart.idupb>&
or
%<creditpart.amount>%>&<creditpart.amount>&')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI007','1','U','creditpart','S','N','S','S','N',{ts '2013-05-21 09:53:54.737'},'sa','La dotazione crediti di Finanziamento: %<creditpartview.underwriting>% , UPB: %<creditpartview.upb>% , Bilancio: %<creditpartview.codefin>% è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<creditpart.idinc>%]{I},0)=0)  
OR

isnull([SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbunderwritingtotal 
where idfin = %<creditpart.idfin>%
	and idupb= [select idupb from incomeyear where
			ayear= %<creditpart.ycreditpart>% and
			idinc=%<creditpart.idinc>%]{C}
	AND idunderwriting= [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}
]{N},0) 
- 
ISNULL(&<creditpart.amount>&, 0)
+ 
ISNULL(%<creditpart.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = %<creditpart.idfin>% 
	and idupb= [select idupb from incomeyear where
			ayear= %<creditpart.ycreditpart>% and
			idinc=%<creditpart.idinc>%]{C}
	AND idunderwriting= [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}

	and nphase = %<sys_expensefinphase>%]{N}
,0)
>= 0
or
%<creditpart.idfin>% <> &<creditpart.idfin>&
or
(%<creditpart.amount>%>&<creditpart.amount>&)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI007','2','U','creditpart','S','N','S','S','N',{ts '2013-05-21 09:54:01.673'},'sa','La dotazione crediti di Finanziamento: %<creditpartview.underwriting>% , UPB: %<creditpartview.upb>% , Bilancio: %<creditpartview.codefin>% è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<creditpart.idinc>%]{I},0)=0)  
OR

isnull([SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbunderwritingtotal 
where idfin = &<creditpart.idfin>&
	and idupb= %<creditpart.idupb>%
	AND idunderwriting= [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}

]{N} ,0)
-
ISNULL(&<creditpart.amount>&, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = &<creditpart.idfin>&
	and idupb= %<creditpart.idupb>%
	AND idunderwriting= [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}
	and nphase = %<sys_expensefinphase>%]{N}
,0)
>= 0
or
%<creditpart.idfin>% = &<creditpart.idfin>&
or
%<creditpart.idupb>% = &<creditpart.idupb>&
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO011','3','U','creditpart','S','N','S','S','N',{ts '2012-07-26 16:21:16.157'},'sa','La dotazione crediti della voce %<fin.codefin>% è INSUFFICIENTE!','S','isnull([SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbtotal 
where idfin = %<creditpart.idfin>%
	and idupb= %<creditpart.idupb>%
]{N},0) 
- 
ISNULL(&<creditpart.amount>&, 0)
+ 
ISNULL(%<creditpart.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<creditpart.idfin>% 
	and idupb=  %<creditpart.idupb>%
	and nphase = %<sys_expensefinphase>%]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<creditpart.idfin>%
	and idupb= %<creditpart.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{N}
 ,0)
>= 0
or
%<creditpart.idfin>% <> &<creditpart.idfin>&
or
%<creditpart.idupb>% <> &<creditpart.idupb>&
or
%<creditpart.amount>%>&<creditpart.amount>&
or
%<creditpart.idfin>% is null')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO011','4','U','creditpart','S','N','S','S','N',{ts '2012-07-26 16:22:46.420'},'sa','La dotazione crediti della voce %<fin.codefin>% è INSUFFICIENTE!','S','isnull([SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbtotal 
where idfin = &<creditpart.idfin>&
and idupb= &<creditpart.idupb>&
]{V} ,0)
-
ISNULL(&<creditpart.amount>&, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = &<creditpart.idfin>&
	and idupb=  &<creditpart.idupb>&
	and nphase = %<sys_expensefinphase>%]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = &<creditpart.idfin>&
	and idupb= &<creditpart.idupb>&
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
 ,0)
>= 0
or
isnull(%<creditpart.idfin>%,0) = isnull(&<creditpart.idfin>&,0)
or
isnull(%<creditpart.idupb>%,0) = isnull(&<creditpart.idupb>&,0)
or
%<creditpart.idfin>% is null
 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO034','3','U','creditpart','S','N','S','S','N',{ts '2013-06-19 12:32:05.720'},'assistenza','La dotazione crediti di Finanziamento: %<creditpartview.underwriting>% , UPB: %<creditpartview.upb>% , Bilancio: %<creditpartview.codefin>% è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<creditpart.idinc>%]{I},0)=0)  
OR

isnull([SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbunderwritingtotal 
where idfin = %<creditpart.idfin>%
	and idupb= %<creditpart.idupb>%
	and idunderwriting =  [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}
]{N},0) 
- 
ISNULL(&<creditpart.amount>&, 0)
+ 
ISNULL(%<creditpart.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = %<creditpart.idfin>% 
	and idupb=  %<creditpart.idupb>%
	and idunderwriting =  [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}
	and nphase = %<sys_expensefinphase>%]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = %<creditpart.idfin>%
	and PO.idupb= %<creditpart.idupb>%
	and POU.idunderwriting =  [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}
	and PO. yrestore IS NULL 
	and PO.nrestore IS NULL]{N}
 ,0)
>= 0
or
%<creditpart.idfin>% <> &<creditpart.idfin>&
or
%<creditpart.idupb>% <> &<creditpart.idupb>&
or
%<creditpart.amount>%>&<creditpart.amount>&
or
%<creditpart.idfin>% is null


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO034','4','U','creditpart','S','N','S','S','N',{ts '2013-06-19 12:32:12.390'},'assistenza','La dotazione crediti di Finanziamento: %<creditpartview.underwriting>% , UPB: %<creditpartview.upb>% , Bilancio: %<creditpartview.codefin>% è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<creditpart.idinc>%]{I},0)=0)  
OR

isnull([SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbunderwritingtotal 
where idfin = &<creditpart.idfin>&
and idupb= &<creditpart.idupb>&
and idunderwriting =  [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}

]{V} ,0)
-
ISNULL(&<creditpart.amount>&, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = &<creditpart.idfin>&
	and idupb=  &<creditpart.idupb>&
	and idunderwriting =  [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}
	and nphase = %<sys_expensefinphase>%]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = &<creditpart.idfin>&
	and PO.idupb= &<creditpart.idupb>&
	and POU.idunderwriting =  [select idunderwriting from income where idinc = %<creditpart.idinc>%]{I}
	and PO. yrestore IS NULL 
	and PO.nrestore IS NULL]{N}
 ,0)
>= 0
or
isnull(%<creditpart.idfin>%,0) = isnull(&<creditpart.idfin>&,0)
or
isnull(%<creditpart.idupb>%,0) = isnull(&<creditpart.idupb>&,0)
or
%<creditpart.idfin>% is null
 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS005','1','U','creditpart','S','S','S','S','S',{ts '2012-09-27 10:56:44.660'},'sa','La modifica sull''assegnazione crediti sulla voce di bilancio %<fin.codefin>% non è congrua con l''assegnazione incassi effettuata in precedenza.','N','ISNULL(
[SELECT SUM(proceedspart.amount) FROM proceedspart 
 join incomelink on incomelink.idchild=proceedspart.idinc
WHERE incomelink.idparent = %<creditpart.idinc>% 
AND proceedspart.idfin in  ( SELECT newidfin from allfinlookup 
			where allfinlookup.oldidfin= %<creditpart.idfin>% 
		)		
AND proceedspart.idupb = %<creditpart.idupb>% 
		
]{V}
,0)
<= 
ISNULL(
[SELECT SUM(amount) FROM creditpart WHERE 
idfin = %<creditpart.idfin>%
AND idinc = %<creditpart.idinc>%
AND idupb = %<creditpart.idupb>% 
]{V}
,0)
OR

[SELECT COUNT(*) FROM proceedspart 
 join incomelink on incomelink.idchild=proceedspart.idinc
WHERE incomelink.idparent = %<creditpart.idinc>% 
]{I} = 0




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS005','2','U','creditpart','S','S','S','S','S',{ts '2012-09-27 11:11:08.890'},'sa','La modifica sull''assegnazione crediti sulla voce di bilancio %<fin.codefin>% non è congrua con l''assegnazione incassi effettuata in precedenza.','S','(&<creditpart.idupb>&  = %<creditpart.idupb>%  
AND
&<creditpart.idfin>&  = %<creditpart.idfin>% )
OR
ISNULL(
[SELECT SUM(proceedspart.amount) FROM proceedspart 
 join incomelink on incomelink.idchild=proceedspart.idinc
WHERE incomelink.idparent = %<creditpart.idinc>% 
AND proceedspart.idfin in  ( SELECT newidfin from allfinlookup 
			where allfinlookup.oldidfin= &<creditpart.idfin>& 
		)		
AND proceedspart.idupb = &<creditpart.idupb>&		
]{V}
,0)
<= 
(
ISNULL(
[SELECT SUM(amount) FROM creditpart WHERE 
idfin = &<creditpart.idfin>&
AND idinc = %<creditpart.idinc>%
AND idupb = &<creditpart.idupb>& 
]{V}
,0)
- 
ISNULL(%<creditpart.amount>%,0)
)
OR
[SELECT COUNT(*) FROM proceedspart 
 join incomelink on incomelink.idchild=proceedspart.idinc
WHERE incomelink.idparent = %<creditpart.idinc>% 
]{I} = 0




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM056','1','U','creditpart','S','N','S','S','N',{ts '2012-07-26 16:30:11.063'},'sa','L''importo dell''assegnazione crediti deve essere uguale a quello del movimento di entrata','N','ISNULL(
	[SELECT SUM(amount) FROM creditpart
	WHERE idinc = %<creditpart.idinc>%]{V}
,0) = 
ISNULL(
	[SELECT curramount
	FROM incometotal
	WHERE idinc = %<creditpart.idinc>%
	AND ayear = %<creditpart.ycreditpart>%]{V}
,0)
OR

ISNULL(
	[SELECT assured FROM upb
	WHERE idupb = %<creditpart.idupb>%]{C}
,''N'') = ''S''
OR
[SELECT flag & 1 FROM incometotal
WHERE idinc = %<creditpart.idinc>%
AND ayear = %<creditpart.ycreditpart>%]{I}
<> 0
OR 

%<creditpart.amount>% = &<creditpart.amount>&

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','csa_agency','S','S','S','N','N',{ts '2010-05-03 16:02:46.323'},'SA','Cancellazione Impossibile! Esistono Righe di Versamento  collegate all''Ente %<csa_agency.description>%','S','[(SELECT count(*) 
from csa_importver
where idcsa_agency = %<csa_agency.idcsa_agency>%
)]{I} = 0 ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR029','1','I','csa_agencypaymethod','S','S','S','N','N',{ts '2010-05-04 12:38:58.627'},'SA','Per l''Ente CSA non è possibile associare più modalità di pagamento sulla stessa Voce CSA','S','[(select count(*) from csa_agencypaymethod
where 
idcsa_agency = %<csa_agencypaymethod.idcsa_agency>%
and 
idreg = %<csa_agencypaymethod.idreg>%
and 
vocecsa = %<csa_agencypaymethod.vocecsa>%
) ] {I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR029','1','U','csa_agencypaymethod','S','S','S','N','N',{ts '2010-05-04 12:38:53.627'},'SA','Per l''Ente CSA non è possibile associare più modalità di pagamento sulla stessa Voce CSA','S','[(select count(*) from csa_agencypaymethod
where 
idcsa_agency = %<csa_agencypaymethod.idcsa_agency>%
and 
vocecsa = %<csa_agencypaymethod.vocecsa>%
) ] {I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','csa_contract','S','S','S','N','N',{ts '2010-05-03 16:00:10.447'},'SA','Cancellazione Impossibile! Esistono Righe di riepilogo  collegate al Contratto 
%<csa_contract.description>%','S','[(SELECT count(*) 
from csa_importriep
where idcsa_contractkind = %<csa_contract.idcsa_contractkind>%
and idcsa_contract = %<csa_contract.idcsa_contract>%
)]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','csa_contract','S','S','S','N','N',{ts '2010-05-03 16:00:03.837'},'SA','Cancellazione Impossibile! Esistono Righe di versamento collegate al Contratto  %<csa_contract.description>%','S','[(SELECT count(*) 
from csa_importver
where idcsa_contractkind = %<csa_contract.idcsa_contractkind>%
and idcsa_contract = %<csa_contract.idcsa_contract>%
)]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE003','1','I','csa_contract','S','S','S','S','N',{ts '2013-01-11 15:06:20.230'},'sa','Se si specifica una coppia UPB / Voce di Bilancio per l''imputazione del Costo del Lordo del Contratto, non si può imputare il Costo ad uno specifico Impegno nè ripartirlo tra più Impegni','N','(
%<csa_contract.idfin_main>% IS NULL  AND
%<csa_contract.idupb>% IS NULL
)
OR
(
(%<csa_contract.idexp_main>% IS NULL)
AND
[SELECT COUNT(*) 
FROM   csa_contractexpense C 
WHERE C.idcsa_contract =  %<csa_contract.idcsa_contract>%
	       AND C.ayear = %<csa_contract.ayear>%]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE003','2','I','csa_contract','S','S','S','N','N',{ts '2013-01-11 15:02:45.037'},'sa','Se si sceglie uno specifico Impegno  per l''imputazione del Costo del Lordo del Contratto, non si può imputare il Costo ad  una coppia UPB / Voce di Bilancio nè ripartirlo tra più Impegni','N','(%<csa_contract.idexp_main>% IS NULL)
OR
(
 
%<csa_contract.idfin_main>% IS NULL  
AND
%<csa_contract.idupb>% IS NULL
AND
[SELECT COUNT(*) 
FROM   csa_contractexpense C 
WHERE C.idcsa_contract =  %<csa_contract.idcsa_contract>%
	       AND C.ayear = %<csa_contract.ayear>%]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE003','3','I','csa_contract','S','S','S','N','N',{ts '2013-01-11 15:02:47.907'},'sa','Se si sceglie una ripartizione  tra più Impegni   per l''imputazione del Costo del Lordo del Contratto, non si può imputare il Costo ad  una coppia UPB / Voce di Bilancio nè scegliere anche uno specifico Impegno. ','N','[SELECT COUNT(*) 
FROM   csa_contractexpense C 
WHERE C.idcsa_contract =  %<csa_contract.idcsa_contract>%
	       AND C.ayear = %<csa_contract.ayear>%]{I} = 0
OR
(
 %<csa_contract.idexp_main>% IS NULL
AND
%<csa_contract.idfin_main>% IS NULL  
AND
%<csa_contract.idupb>% IS NULL
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE003','1','U','csa_contract','S','S','S','N','N',{ts '2013-01-11 15:02:50.930'},'sa','Se si specifica una coppia UPB / Voce di Bilancio per l''imputazione del Costo del Lordo del Contratto, non si può imputare il Costo ad uno specifico Impegno nè ripartirlo tra più Impegni','N','(
%<csa_contract.idfin_main>% IS NULL  AND
%<csa_contract.idupb>% IS NULL
)
OR
(
(%<csa_contract.idexp_main>% IS NULL)
AND
[SELECT COUNT(*) 
FROM   csa_contractexpense C 
WHERE C.idcsa_contract =  %<csa_contract.idcsa_contract>%
	       AND C.ayear = %<csa_contract.ayear>%]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE003','2','U','csa_contract','S','S','S','N','N',{ts '2013-01-11 15:02:53.313'},'sa','Se si sceglie uno specifico Impegno  per l''imputazione del Costo del Lordo del Contratto, non si può imputare il Costo ad  una coppia UPB / Voce di Bilancio nè ripartirlo tra più Impegni','N','(%<csa_contract.idexp_main>% IS NULL)
OR
(
 
%<csa_contract.idfin_main>% IS NULL  
AND
%<csa_contract.idupb>% IS NULL
AND
[SELECT COUNT(*) 
FROM   csa_contractexpense C 
WHERE C.idcsa_contract =  %<csa_contract.idcsa_contract>%
	       AND C.ayear = %<csa_contract.ayear>%]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE003','3','U','csa_contract','S','S','S','N','N',{ts '2013-01-11 15:02:57.273'},'sa','Se si sceglie una ripartizione  tra più Impegni  per l''imputazione del Costo del Lordo del Contratto, non si può imputare il Costo ad  una coppia UPB / Voce di Bilancio nè scegliere anche uno specifico Impegno. ','N','[SELECT COUNT(*) 
FROM   csa_contractexpense C 
WHERE C.idcsa_contract =  %<csa_contract.idcsa_contract>%
	       AND C.ayear = %<csa_contract.ayear>%]{I} = 0
OR
(
 %<csa_contract.idexp_main>% IS NULL
AND
%<csa_contract.idfin_main>% IS NULL  
AND
%<csa_contract.idupb>% IS NULL
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE003','1','I','csa_contractexpense','S','S','S','N','N',{ts '2013-01-11 15:03:00.483'},'sa','Se si sceglie una ripartizione  tra più Impegni  per l''imputazione del Costo del Lordo del Contratto, non si può imputare il Costo ad  una coppia UPB / Voce di Bilancio nè scegliere anche uno specifico Impegno. ','N','[SELECT COUNT(*) 
FROM   csa_contract C 
WHERE C.idcsa_contract =  %<csa_contractexpense.idcsa_contract>%
AND C.ayear = %<csa_contractexpense.ayear>%
AND 
(C.idfin_main IS NOT NULL OR
C.idupb  IS NOT NULL OR
C.idexp_main IS NOT NULL
)
]{I} = 0
 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','csa_contractkind','S','S','S','N','N',{ts '2010-05-03 15:49:18.587'},'SA','Cancellazione Impossibile! Esistono Contratti collegati al Tipo Contratto 
%<csa_contractkind.contractkindcode>%','S','[(SELECT count(*) 
from csa_contract 
where idcsa_contractkind = %<csa_contractkind.idcsa_contractkind>%
)]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','csa_contractkind','S','S','S','N','N',{ts '2010-05-03 15:50:11.760'},'SA','Cancellazione Impossibile! Esistono Righe di versamento  collegate al Tipo Contratto  %<csa_contractkind.contractkindcode>%','S','[(SELECT count(*) 
from csa_importver
where idcsa_contractkind = %<csa_contractkind.idcsa_contractkind>%
)]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','csa_contractkind','S','S','S','N','N',{ts '2010-05-03 15:50:50.337'},'SA','Cancellazione Impossibile! Esistono Righe di riepilogo collegate al Tipo Contratto  %<csa_contractkind.contractkindcode>%','S','[(SELECT count(*) 
from csa_importriep
where idcsa_contractkind = %<csa_contractkind.idcsa_contractkind>%
)]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','csa_contractkindrules','S','S','S','N','N',{ts '2012-06-12 09:18:19.077'},'sara','Regola di individuazione CSA  duplicata per per  capitolo  " %<csa_contractkindrules.capitolocsa>% " , ruolo "%<csa_contractkindrules.ruolocsa>% "  e anno %<csa_contractkindrules.ayear>%.','S','[SELECT COUNT(*) 
FROM csa_contractkindrules
JOIN csa_contractkind ON 
csa_contractkind.idcsa_contractkind = csa_contractkindrules.idcsa_contractkind
WHERE isnull(capitolocsa,'''') = isnull(%<csa_contractkindrules.capitolocsa>%,'''')
AND isnull(ruolocsa,'''') = isnull(%<csa_contractkindrules.ruolocsa>%,'''')
AND ayear = %<csa_contractkindrules.ayear>%
AND ISNULL(csa_contractkind.active,''N'') = ''S'' 
AND ISNULL(csa_contractkind.flagcr,''Q'') = 

 isnull( [select flagcr from csa_contractkind where 
	idcsa_contractkind = %<csa_contractkindrules.idcsa_contractkind >%
 ]{C},''Q'')
]{I} =0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','csa_contractkindrules','S','S','S','N','N',{ts '2012-06-12 09:17:46.267'},'sara','Regola di individuazione CSA  duplicata per per  capitolo  " %<csa_contractkindrules.capitolocsa>% " , ruolo "%<csa_contractkindrules.ruolocsa>% "  e anno %<csa_contractkindrules.ayear>%.','N','[SELECT COUNT(*) 
FROM csa_contractkindrules
JOIN csa_contractkind ON 
csa_contractkind.idcsa_contractkind = csa_contractkindrules.idcsa_contractkind
WHERE isnull(capitolocsa,'''') = isnull(%<csa_contractkindrules.capitolocsa>%,'''')
AND isnull(ruolocsa,'''') = isnull(%<csa_contractkindrules.ruolocsa>%,'''')
AND ayear = %<csa_contractkindrules.ayear>%
AND ISNULL(csa_contractkind.active,''N'') = ''S'' 
AND ISNULL(csa_contractkind.flagcr,''Q'') = 

 isnull( [select flagcr from csa_contractkind where 
	idcsa_contractkind = %<csa_contractkindrules.idcsa_contractkind >%
 ]{C},''Q'')
]{I} =1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE003','1','I','csa_contractregistry','S','S','S','N','N',{ts '2013-01-11 14:24:26.180'},'sa','Esiste un altro contratto associato alla stessa matricola.','S','[SELECT COUNT(*) 
FROM   csa_contract C 
JOIN      csa_contractregistry CR
	ON   C.idcsa_contract = CR.idcsa_contract 
	AND C.ayear = CR.ayear
WHERE  CR.extmatricula = %<csa_contractregistry.extmatricula>%
AND       C.idcsa_contractkind =
	 (SELECT idcsa_contractkind
                FROM csa_contract  C1
	  WHERE C1.idcsa_contract =  %<csa_contractregistry.idcsa_contract>%
	       AND C1.ayear = %<csa_contractregistry.ayear>%)
AND    C.ayear = %<csa_contractregistry.ayear>%]{I} <= 1
OR      ISNULL(%<csa_contractregistry.extmatricula>%,'' '') = 
           ISNULL(&<csa_contractregistry.extmatricula>&,'' '' )')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE003','1','U','csa_contractregistry','S','S','S','N','N',{ts '2010-05-04 10:31:17.377'},'SA','Esiste un altro contratto associato alla stessa matricola.','S','[SELECT COUNT(*) 
FROM   csa_contract C 
JOIN      csa_contractregistry CR
	ON   C.idcsa_contract = CR.idcsa_contract 
	AND C.ayear = CR.ayear
WHERE  CR.extmatricula = %<csa_contractregistry.extmatricula>%
AND       C.idcsa_contractkind =
	 (SELECT idcsa_contractkind
                FROM csa_contract  C1
	  WHERE C1.idcsa_contract =  %<csa_contractregistry.idcsa_contract>%
	       AND C1.ayear = %<csa_contractregistry.ayear>%)
AND    C.ayear = %<csa_contractregistry.ayear>%]{I} <= 1
OR      ISNULL(%<csa_contractregistry.extmatricula>%,'' '') = 
           ISNULL(&<csa_contractregistry.extmatricula>&,'' '' )')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE003','1','I','csa_contracttax','S','S','S','N','N',{ts '2013-01-11 15:03:05.457'},'sa','Se si specifica una coppia UPB / Voce di Bilancio per l''imputazione del Costo del  Contributo, non si può imputare il Costo ad uno specifico Impegno nè ripartirlo tra più Impegni','N','(
%<csa_contracttax.idfin>% IS NULL  AND
%<csa_contracttax.idupb>% IS NULL
)
OR
(
(%<csa_contracttax.idexp>% IS NULL)
AND
[SELECT COUNT(*) 
FROM   csa_contracttaxexpense C 
WHERE C.idcsa_contract =  %<csa_contracttax.idcsa_contract>%
	       AND C.idcsa_contracttax= %<csa_contracttax.idcsa_contracttax>%
	       AND C.ayear = %<csa_contracttax.ayear>%
]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE003','2','I','csa_contracttax','S','S','S','N','N',{ts '2013-01-11 15:03:08.800'},'sa','Se si sceglie uno specifico Impegno  per l''imputazione del Costo del Contributo, non si può imputare il Costo ad  una coppia UPB / Voce di Bilancio nè ripartirlo tra più Impegni','N','(%<csa_contracttax.idexp>% IS NULL)

OR
(
(
%<csa_contracttax.idfin>% IS NULL  AND
%<csa_contracttax.idupb>% IS NULL
)
AND
[SELECT COUNT(*) 
FROM   csa_contracttaxexpense C 
WHERE C.idcsa_contract =  %<csa_contracttax.idcsa_contract>%
	       AND C.idcsa_contracttax= %<csa_contracttax.idcsa_contracttax>%
	       AND C.ayear = %<csa_contracttax.ayear>%
]{I} = 0
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE003','3','I','csa_contracttax','S','S','S','N','N',{ts '2013-01-11 15:03:13.583'},'sa','Se si sceglie una ripartizione  tra più Impegni  per l''imputazione del Costo del Contributo, non si può imputare il Costo ad  una coppia UPB / Voce di Bilancio nè scegliere anche uno specifico Impegno. ','N','[SELECT COUNT(*) 
FROM   csa_contracttaxexpense C 
WHERE C.idcsa_contract =  %<csa_contracttax.idcsa_contract>%
	       AND C.idcsa_contracttax= %<csa_contracttax.idcsa_contracttax>%
	       AND C.ayear = %<csa_contracttax.ayear>%
]{I} = 0
OR
(
%<csa_contracttax.idexp>% IS NULL AND
%<csa_contracttax.idfin>% IS NULL  AND
%<csa_contracttax.idupb>% IS NULL
)
 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE003','1','U','csa_contracttax','S','S','S','N','N',{ts '2013-01-11 15:03:16.743'},'sa','Se si specifica una coppia UPB / Voce di Bilancio per l''imputazione del Costo del  Contributo, non si può imputare il Costo ad uno specifico Impegno nè ripartirlo tra più Impegni','N','(
%<csa_contracttax.idfin>% IS NULL  AND
%<csa_contracttax.idupb>% IS NULL
)
OR
(
(%<csa_contracttax.idexp>% IS NULL)
AND
[SELECT COUNT(*) 
FROM   csa_contracttaxexpense C 
WHERE C.idcsa_contract =  %<csa_contracttax.idcsa_contract>%
	       AND C.idcsa_contracttax= %<csa_contracttax.idcsa_contracttax>%
	       AND C.ayear = %<csa_contracttax.ayear>%
]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE003','2','U','csa_contracttax','S','S','S','N','N',{ts '2013-01-11 15:03:20.273'},'sa','Se si sceglie uno specifico Impegno  per l''imputazione del Costo del Contributo, non si può imputare il Costo ad  una coppia UPB / Voce di Bilancio nè ripartirlo tra più Impegni','N','(%<csa_contracttax.idexp>% IS NULL)

OR
(
(
%<csa_contracttax.idfin>% IS NULL  AND
%<csa_contracttax.idupb>% IS NULL
)
AND
[SELECT COUNT(*) 
FROM   csa_contracttaxexpense C 
WHERE C.idcsa_contract =  %<csa_contracttax.idcsa_contract>%
	       AND C.idcsa_contracttax= %<csa_contracttax.idcsa_contracttax>%
	       AND C.ayear = %<csa_contracttax.ayear>%
]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE003','3','U','csa_contracttax','S','S','S','N','N',{ts '2013-01-11 15:03:23.127'},'sa','Se si sceglie una ripartizione  tra più Impegni   per l''imputazione del Costo del Contributo, non si può imputare il Costo ad  una coppia UPB / Voce di Bilancio nè scegliere anche uno specifico Impegno. ','N','[SELECT COUNT(*) 
FROM   csa_contracttaxexpense C 
WHERE C.idcsa_contract =  %<csa_contracttax.idcsa_contract>%
	       AND C.idcsa_contracttax= %<csa_contracttax.idcsa_contracttax>%
	       AND C.ayear = %<csa_contracttax.ayear>%
]{I} = 0
OR
(
%<csa_contracttax.idexp>% IS NULL AND
%<csa_contracttax.idfin>% IS NULL  AND
%<csa_contracttax.idupb>% IS NULL
)
 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('STIPE003','1','I','csa_contracttaxexpense','S','S','S','N','N',{ts '2013-01-14 10:39:59.053'},'sa','Se si sceglie una ripartizione  tra più Impegni  per l''imputazione del Costo del Contributo , non si può imputare il Costo ad  una coppia UPB / Voce di Bilancio nè scegliere anche uno specifico Impegno. ','N','(
[SELECT COUNT(*) 
FROM   csa_contracttaxexpense C 
WHERE C.idcsa_contract =  %<csa_contracttax.idcsa_contract>%
	      AND C.idcsa_contracttax = %<csa_contracttax.idcsa_contracttax>%
	      AND C.ayear = %<csa_contracttax.ayear>%]{I} = 0
)
OR
(
%<csa_contracttax.idfin>% IS NULL  AND
%<csa_contracttax.idupb>% IS NULL AND
%<csa_contracttax.idexp>% IS NULL
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','csa_import','S','S','S','N','N',{ts '2010-05-03 15:35:31.917'},'SA','Cancellazione Impossibile! Esistono movimenti di entrata collegati all''importazione  %<yimport>% / %<nimport>% ','S','[(SELECT count(*) 
from csa_import_income 
where idcsa_import = %<csa_import.idcsa_import>%
)]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','csa_import','S','S','S','N','N',{ts '2010-05-03 15:35:58.760'},'SA','Cancellazione Impossibile! Esistono movimenti di spesa collegati all''importazione  %<yimport>% / %<nimport>% ','S','[(SELECT count(*) 
from csa_import_expense
where idcsa_import = %<csa_import.idcsa_import>%
)]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','csa_import','S','S','S','N','N',{ts '2010-05-04 13:49:40.563'},'SA','Cancellazione Impossibile! Esistono righe di riepilogo collegate all''importazione  %<yimport>% / %<nimport>% ','S','[(SELECT count(*) 
from csa_importriep
where idcsa_import = %<csa_import.idcsa_import>%
)]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','csa_import','S','S','S','N','N',{ts '2010-05-04 13:50:16.937'},'SA','Cancellazione Impossibile! Esistono righe di versamento collegate all''importazione  %<yimport>% / %<nimport>% ','S','[(SELECT count(*) 
from csa_importver
where idcsa_import = %<csa_import.idcsa_import>%
)]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','csa_importriep','S','S','S','N','N',{ts '2010-05-03 15:38:01.087'},'SA','Cancellazione Impossibile! Esistono movimenti fianziari collegati all''importazione ','S','[(SELECT count(*) 
from csa_import_expense
where idcsa_import = %<csa_importriep.idcsa_import>%
)]{I} = 0 
AND
[(SELECT count(*) 
from csa_import_income 
where idcsa_import = %<csa_importriep.idcsa_import>%
)]{I} = 0 ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','U','csa_importriep','S','S','S','N','N',{ts '2010-05-04 09:24:42.267'},'SA','Esistono movimenti finanziari collegati all''importazione, pertanto non è possibile modificare i dati importati.','S','[(SELECT count(*) 
from csa_import_expense
where idcsa_import = %<csa_importriep.idcsa_import>%
)]{I} = 0 
AND
[(SELECT count(*) 
from csa_import_income 
where idcsa_import = %<csa_importriep.idcsa_import>%
)]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','csa_importver','S','S','S','N','N',{ts '2010-05-03 15:38:30.290'},'SA','Cancellazione Impossibile! Esistono movimenti fianziari collegati all''importazione ','S','[(SELECT count(*) 
from csa_import_expense
where idcsa_import = %<csa_importver.idcsa_import>%
)]{I} = 0 
AND
[(SELECT count(*) 
from csa_import_income 
where idcsa_import = %<csa_importver.idcsa_import>%
)]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','U','csa_importver','S','S','S','N','N',{ts '2010-05-04 09:25:18.610'},'SA','Esistono movimenti finanziari collegati all''importazione, pertanto non è possibile modificare i dati importati.','S','[(SELECT count(*) 
from csa_import_expense
where idcsa_import = %<csa_importver.idcsa_import>%
)]{I} = 0 
AND
[(SELECT count(*) 
from csa_import_income 
where idcsa_import = %<csa_importver.idcsa_import>%
)]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','csa_incomesetup','S','S','S','N','N',{ts '2010-05-06 10:39:37.297'},'SA','Scheda configurazione incassi per  %<csa_incomesetup.vocecsa>%  e anno %<csa_incomesetup.ayear>% già esistente','S','[SELECT COUNT(*) 
FROM csa_incomesetup
WHERE vocecsa = %<csa_incomesetup.vocecsa>%
AND ayear = %<csa_incomesetup.ayear>%
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','csa_incomesetup','S','S','S','N','N',{ts '2010-05-06 11:31:04.267'},'SA','Scheda configurazione incassi CSA per  %<csa_incomesetup.vocecsa>%  e anno %<csa_incomesetup.ayear>% già esistente','S','[SELECT COUNT(*) 
FROM csa_incomesetup
WHERE vocecsa = %<csa_incomesetup.vocecsa>%
AND ayear = %<csa_incomesetup.ayear>%
]{I} =1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','currency','S','S','S','N','N',{ts '2008-02-22 11:36:22.297'},'SARA','La valuta %descrizione% non può essere cancellata in quanto esistono documenti IVA che lo referenziano.','S','[execute count_table_field ''invoice'',''idcurrency'',
%<currency.idcurrency>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','currency','S','S','S','N','N',{ts '2008-02-22 11:36:59.970'},'SARA','La valuta %<description>% non può essere cancellata in quanto esistono ordini generici che la referenziano.','S','[execute count_table_field ''mandate'',''idcurrency'',
%<currency.idcurrency>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','currency','S','S','S','N','N',{ts '2008-02-22 11:37:36.270'},'SARA','La valuta %<description>% non può essere cancellata in quanto esistono spese di missione che la referenziano.','S','[execute count_table_field ''itinerationrefund'',''idcurrency'',
%<currency.idcurrency>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','6','D','currency','S','S','S','N','N',{ts '2008-02-22 11:38:30.507'},'SARA','La valuta %<description>% non può essere cancellata in quanto esistono creditori/debitori che la referenziano.','S','[execute count_table_field ''registrypaymethod'',''idcurrency'',
%<currency.idcurrency>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','7','D','currency','S','S','S','N','N',{ts '2008-07-22 14:45:09.903'},'SARA','La valuta %<description>% non può essere cancellata in quanto esistono contratti attivi che la referenziano.','S','[execute count_table_field ''estimate'',''idcurrency'',
%<currency.idcurrency>%,@outvar output]{I}=0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','currency','S','S','S','N','N',{ts '2007-11-21 14:06:05.203'},'SARA','Valuta %<codecurrency>% già esistente','S','[(SELECT count(*) 
from currency 
where codecurrency = %<currency.codecurrency>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','currency','S','S','S','N','N',{ts '2007-11-21 11:16:27.687'},'NINO','Descrizione della valuta già esistente','S','[(SELECT count(*) 
from currency 
where description = %<currency.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','currency','S','S','S','N','N',{ts '2007-11-21 11:16:33.827'},'NINO','Descrizione della valuta già esistente','S','[(SELECT count(*) 
from currency 
where idcurrency <> %<currency.idcurrency>% 
and description = %<currency.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','customuser',null,null,null,null,null,null,null,'La login %<customuser.username>% è stata già assegnata ad un altro utente',null,null)
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','customuser',null,null,null,null,null,null,null,'La login %<customuser.username>% è stata già assegnata ad un altro utente',null,null)
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ006','1','I','ddt_in','S','S','S','N','N',{ts '2010-07-12 14:32:39.877'},'SA','Non è possibile salvare la bolla %<ddt_in.yddt_in>% / %<ddt_in.nddt_in>% in quanto deve essere univoca','N','[(select count(*) from ddt_in where 
   idreg = %<ddt_in.idreg>%
AND yddt_in = %<ddt_in.yddt_in>%
AND nddt_in = %<ddt_in.nddt_in>%)]{I} = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ006','1','U','ddt_in','S','S','S','N','N',{ts '2010-07-08 13:19:46.360'},'SA','Non è possibile salvare la bolla %<ddt_in.idreg>% / %<ddt_in.yddt_in>% / %<ddt_in.nddt_in>% in quanto deve essere univoca','N','[(select count(*) from ddt_in where 
   idreg = %<ddt_in.idreg>%
AND yddt_in = %<ddt_in.yddt_in>%
AND nddt_in = %<ddt_in.nddt_in>%)]{I} = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','division','S','S','S','N','N',{ts '2007-09-13 11:55:06.127'},'NINO','La sezione %<description>% non pu? essere cancellata in quanto esistono responsabili che la referenziano.','S','[(SELECT count(*) 
from manager 
where iddivision = %<division.iddivision>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','division','S','S','S','N','N',{ts '2005-08-26 11:51:45.937'},'''LAZZO''','Sezione %<iddivision>% gi? esistente','S','[(SELECT count(*) 
from division 
where iddivision = %<division.iddivision>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','division','S','S','S','N','N',{ts '2005-08-26 11:51:45.967'},'''LAZZO''','Descrizione della sezione gi? esistente','S','[(SELECT count(*) 
from division 
where description = %<division.description>%)]{N} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','3','I','division','S','S','S','N','N',{ts '2007-11-30 17:08:13.813'},'SARA','Codice della sezione già esistente','S','[(SELECT count(*) 
from division 
where codedivision = %<division.codedivision>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','division','S','S','S','N','N',{ts '2005-08-26 11:51:46.017'},'''LAZZO''','Descrizione della sezione gi? esistente','S','[(SELECT count(*) 
from division 
where iddivision <> %<division.iddivision>% 
and description = %<division.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','U','division','S','S','S','N','N',{ts '2007-11-30 17:09:28.797'},'SARA','Codice della sezione già esistente','S','[(SELECT count(*) 
from division 
where iddivision <> %<division.iddivision>% 
and codedivision = %<division.codedivision>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE003','1','D','entry','S','S','S','N','N',{ts '2007-12-13 14:25:59.637'},'NINO','La scrittura n. %<entry.nentry>% / %<entry.yentry>% non può essere cancellata. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 32) = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA006','1','D','entry','S','S','S','N','N',{ts '2007-06-11 12:50:52.327'},'''SARA''','La scrittura appartiene all''esercizio %<entry.yentry>% e può essere cancellata solo in quello.','S','&<entry.yentry>& = %<sys_esercizio>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA009','1','D','entry','S','S','S','N','N',{ts '2007-10-18 20:14:37.890'},'NINO','Non è possibile eliminare la scrittura n.%<entry.nentry>% / %<entry.yentry>%poiché è bloccata. ','S','&<entry.locked>& =''N''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE003','1','I','entry','S','S','S','N','N',{ts '2007-12-13 14:26:03.797'},'NINO','La scrittura n. %<entry.nentry>% / %<entry.yentry>% non può essere inserita. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 32) = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA006','1','I','entry','S','S','S','N','N',{ts '2007-06-11 12:52:34.500'},'''SARA''','La scrittura appartiene all''esercizio %<entry.yentry>% e può essere Inserita solo in quello.','S','%<entry.yentry>% = %<sys_esercizio>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA012','1','I','entry','S','S','S','N','N',{ts '2011-05-18 15:04:31.967'},'sara','Le scritture di Rettifica dei costi e ricavi in risconti per l''esercizio %<entry.yentry>% risultano già generate.','S','%<entry.identrykind>% <> 3

OR

isnull(
([select count(*) from entry
where identrykind = 3 and yentry = %<sys_esercizio>%]{I}),0)
=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE003','1','U','entry','S','S','S','N','N',{ts '2007-12-13 14:26:07.983'},'NINO','La scrittura n. %<entry.nentry>% / %<entry.yentry>% non può essere modificata. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 32) = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA006','1','U','entry','S','S','S','N','N',{ts '2007-06-11 12:54:22.797'},'''SARA''','La scrittura appartiene all''esercizio %<entry.yentry>% e può essere modificata solo in quello','S','&<entry.yentry>& = %<sys_esercizio>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA009','1','U','entry','S','S','S','N','N',{ts '2007-10-18 20:14:30.563'},'NINO','Non è possibile modificare la scrittura n.%<entry.nentry>% / %<entry.yentry>%poiché è bloccata. ','S','%<entry.locked>% =''N''
OR

&<entry.locked>& =''N''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE003','1','D','entrydetail','S','S','S','N','N',{ts '2007-12-13 14:26:12.797'},'NINO','Il dettaglio della scrittura n. %<entrydetail.nentry>% / %<entrydetail.yentry>% non può essere cancellato. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 32) = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA001','1','D','entrydetail','S','S','S','N','N',{ts '2006-01-04 13:29:28.183'},'''INFORMATICA''','La scrittura in partita doppia non PAREGGIA il dare con l''avere.','N','isnull([SELECT SUM(amount) FROM entrydetail WHERE
	yentry=%<entrydetail.yentry>% and
	nentry=%<entrydetail.nentry>%]{N},0)=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA006','1','D','entrydetail','S','S','S','N','N',{ts '2007-02-08 11:30:30.230'},'''NINO''','La scrittura appartiene all''esercizio %<entrydetail.yentry>% e può essere cancellata solo in quello.','S','&<entrydetail.yentry>& = %<sys_esercizio>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA009','1','D','entrydetail','S','S','S','N','N',{ts '2013-07-08 16:35:47.613'},'assistenza','Non è possibile eliminare dettagli della scrittura n. %<entrydetail.nentry>% / %<entrydetail.yentry>% poiché è bloccata. ','N','(
ISNULL(
[select locked from entry where yentry=%<entrydetail.yentry>% and
					nentry= %<entrydetail.nentry>%]{C}
,''N'')

<>''S''

)
OR
(
[select count(*) from entry where yentry=%<entrydetail.yentry>% and
					nentry= %<entrydetail.nentry>%]{I}=0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE003','1','I','entrydetail','S','S','S','N','N',{ts '2007-12-13 14:26:16.983'},'NINO','Il dettaglio della scrittura n. %<entrydetail.nentry>% / %<entrydetail.yentry>% non può essere inserito. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 32) = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA001','1','I','entrydetail','S','S','S','N','N',{ts '2006-01-04 13:29:55.090'},'''INFORMATICA''','La scrittura in partita doppia non PAREGGIA il dare con l''avere.','N','isnull([SELECT SUM(amount) FROM entrydetail WHERE
	yentry=%<entrydetail.yentry>% and
	nentry=%<entrydetail.nentry>%]{N},0)=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA006','1','I','entrydetail','S','S','S','N','N',{ts '2007-06-11 13:01:47.877'},'''SARA''','La scrittura appartiene all''esercizio %<entrydetail.yentry>% e può essere inserita solo in quello.','S','%<entrydetail.yentry>%=%<sys_esercizio>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA007','1','I','entrydetail','S','S','S','N','N',{ts '2007-02-08 12:42:52.730'},'''NINO''','E'' necessario scegliere il conto','S','isnull(%<entrydetail.idacc>%,'''') <> ''''')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA009','1','I','entrydetail','S','S','S','N','N',{ts '2013-07-08 16:36:01.363'},'assistenza','Non è possibile inserire dettagli allla scrittura n. %<entrydetail.nentry>% / %<entrydetail.yentry>% poiché è bloccata. ','N','ISNULL(
[select locked from entry where yentry=%<entrydetail.yentry>% and
					nentry= %<entrydetail.nentry>%]{C}
,''N'')
<>''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA012','1','I','entrydetail','S','S','S','N','N',{ts '2013-07-01 17:02:33.127'},'assistenza','Le scritture di Rettifica dei costi e ricavi in risconti per l''esercizio %<entrydetail.yentry>% risultano già generate.','S','isnull(
([select identrykind from entry
where yentry =%<entrydetail.yentry>% 
	and nentry=%<entrydetail.nentry>%]{I}),0)
<>3



OR

isnull(
([select count(*) from entry
where identrykind = 3 and yentry =%<entrydetail.yentry>% 
]{I}),0)
=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA014','1','I','entrydetail','S','S','S','N','N',{ts '2012-10-22 13:23:01.787'},'assistenza','Il dettaglio %<entrydetail.ndetail>% della scrittura  %<entrydetail.yentry>%  n° %<entrydetail.nentry>%   deve riportare l''informazione sull''UPB','S','(
	[select count(*) from entry
	where entry.yentry = %<entrydetail.yentry>%
	and entry.nentry = %<entrydetail.nentry>%
	and isnull(identrykind, 0) = 6 
	]{I} <> 0
)
OR
(
	[select count(*) from account
	where account.idacc = %<entrydetail.idacc>%
	and isnull(flagupb,''N'') = ''S'' 
	]{I} = 0
)
OR
(
  %<entrydetail.idupb>% IS NOT NULL
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA014','2','I','entrydetail','S','S','S','N','N',{ts '2012-10-22 13:22:54.953'},'assistenza','Il dettaglio %<entrydetail.ndetail>% della scrittura  %<entrydetail.yentry>%  n° %<entrydetail.nentry>%   deve riportare l''informazione sull''Anagrafica','S','(
	[select count(*) from entry
	where entry.yentry = %<entrydetail.yentry>%
	and entry.nentry = %<entrydetail.nentry>%
	and isnull(identrykind, 0) = 6 
	]{I} <> 0
)
OR
(
	[select count(*) from account
	where account.idacc = 
		%<entrydetail.idacc>%
	and isnull(flagregistry,''N'') = ''S'' 
	]{I} = 0
)
OR
(
  %<entrydetail.idreg>% IS NOT NULL
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE003','1','U','entrydetail','S','S','S','N','N',{ts '2007-12-13 14:26:20.497'},'NINO','Il dettaglio della scrittura n. %<entrydetail.nentry>% / %<entrydetail.yentry>% non può essere modificato. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 32) = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA001','1','U','entrydetail','S','S','S','N','N',{ts '2006-01-04 13:29:42.730'},'''INFORMATICA''','La scrittura in partita doppia non PAREGGIA il dare con l''avere.','N','isnull([SELECT SUM(amount) FROM entrydetail WHERE
	yentry=%<entrydetail.yentry>% and
	nentry=%<entrydetail.nentry>%]{N},0)=0
OR
%<entrydetail.amount>%=&<entrydetail.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA006','1','U','entrydetail','S','S','S','N','N',{ts '2007-02-08 11:29:52.353'},'''NINO''','La scrittura appartiene all''esercizio %<entrydetail.yentry>% e può essere modificata solo in quello.','S','(&<entrydetail.yentry>& = %<sys_esercizio>%) ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA007','1','U','entrydetail','S','S','S','N','N',{ts '2007-02-08 12:43:02.260'},'''NINO''','E'' necessario scegliere il conto','S','isnull(%<entrydetail.idacc>%,'''') <> ''''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA009','1','U','entrydetail','S','S','S','N','N',{ts '2013-07-08 16:36:11.270'},'assistenza','Non è possibile modificare i dettagli della scrittura n. %<entrydetail.nentry>% / %<entrydetail.yentry>% poiché è bloccata. ','S','[select locked from entry where yentry=%<entrydetail.yentry>% and
					nentry= %<entrydetail.nentry>%]{C}
<>''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA014','1','U','entrydetail','S','S','S','N','N',{ts '2012-10-22 13:42:27.047'},'assistenza','Il dettaglio %<entrydetail.ndetail>% della scrittura  %<entrydetail.yentry>%  n° %<entrydetail.nentry>%   deve riportare l''informazione sull''UPB','S','(%<entrydetail.idupb>% =  &<entrydetail.idupb>&)
OR
(
	[select count(*) from entry
	where entry.yentry = %<entrydetail.yentry>%
	and entry.nentry = %<entrydetail.nentry>%
	and isnull(identrykind, 0) = 6 
	]{I} <> 0
)
OR
(
	[select count(*) from account
	where account.idacc = 
		%<entrydetail.idacc>%
	and isnull(flagupb,''N'') = ''S'' 
	]{I} = 0
)
OR
(
  %<entrydetail.idupb>% IS NOT NULL
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA014','2','U','entrydetail','S','S','S','N','N',{ts '2012-10-22 13:42:46.880'},'assistenza','Il dettaglio %<entrydetail.ndetail>% della scrittura  %<entrydetail.yentry>%  n° %<entrydetail.nentry>%   deve riportare l''informazione sull''Anagrafica','S','(%<entrydetail.idreg>% =  &<entrydetail.idreg>&)
OR
(
	[select count(*) from entry
	where entry.yentry = %<entrydetail.yentry>%
	and entry.nentry = %<entrydetail.nentry>%
	and isnull(identrykind, 0) = 6 
	]{I} <> 0
)
OR
(
	[select count(*) from account
	where account.idacc = 
		%<entrydetail.idacc>%
	and isnull(flagregistry,''N'') = ''S'' 
	]{I} = 0
)
OR
(
  %<entrydetail.idreg>% IS NOT NULL
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA009','1','D','entrydetailaccrual','S','S','S','N','N',{ts '2013-07-08 16:35:06.533'},'assistenza','Non è possibile eliminare ratei della scrittura n. %<entrydetailaccrual.nentry>% / %<entrydetailaccrual.yentry>% poiché è bloccata. ','N','ISNULL(
[select locked from entry where yentry=%<entrydetailaccrual.yentry>% and
					nentry= %<entrydetailaccrual.nentry>%]{C}
,''N'')
<>''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA009','1','I','entrydetailaccrual','S','S','S','N','N',{ts '2013-07-08 16:35:12.567'},'assistenza','Non è possibile inserire ratei allla scrittura n. %<entrydetailaccrual.nentry>% / %<entrydetailaccrual.yentry>% poiché è bloccata. ','S','ISNULL(
[select locked from entry where yentry=%<entrydetailaccrual.yentry>% and
					nentry= %<entrydetailaccrual.nentry>%]{C}
,''N'')
<>''S''


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA009','1','U','entrydetailaccrual','S','S','S','N','N',{ts '2013-07-08 16:36:30.987'},'assistenza','Non è possibile modificare ratei della scrittura n. %<entrydetailaccrual.nentry>% / %<entrydetailaccrual.yentry>% poiché è bloccata. ','S','[select locked from entry where yentry=%<entrydetailaccrual.yentry>% and
					nentry= %<entrydetailaccrual.nentry>%]{C}
<>''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA002','1','U','epexp','S','S','S','N','N',{ts '2007-11-27 13:07:41.907'},'SARA','Le classificazioni associate all''impegno di budget n. %<epexp.nepexp>%/%<epexp.yepexp>% sono superiori rispetto all''importo dello stesso','N','(
	[SELECT curramount FROM epexptotal
	WHERE yepexp = %<epexp.yepexp>% 
	AND nepexp = %<epexp.nepexp>%]{N}
	>=
	[ISNULL(
		(SELECT TOP 1 SUM(I.amount)
		FROM epexpsorting I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE I.yepexp = %<epexp.yepexp>%
		AND I.nepexp = %<epexp.nepexp>%
		GROUP BY S.idsorkind,I.idsor,I.idacc, I.nepexp, I.yepexp
		ORDER BY SUM(I.amount) DESC)
	,0)]{N}
)
OR
(&<epexp.amount>& < %<epexp.amount>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA003','1','I','epexpsorting','S','S','S','N','N',{ts '2007-11-27 13:08:47.813'},'SARA','Per la classificazione %<sortingkind.codesorkind>% può esserci un solo dettaglio di tipo Normale per ogni codice.','N','--Esiste un solo dettaglio di tipo N
(
	[SELECT COUNT(*)
	FROM epexpsorting
	WHERE nepexp = %<epexpsorting.nepexp>%
	AND yepexp = %<epexpsorting.yepexp>%
	AND idsor = %<epexpsorting.idsor>%
	AND kind = ''N'']{I} = 1
)
OR
--Non esiste nessun dettaglio di tipo N
(
	[SELECT COUNT(*)
	FROM epexpsorting
	WHERE nepexp = %<epexpsorting.nepexp>%
	AND yepexp = %<epexpsorting.yepexp>%
	AND idsor = %<epexpsorting.idsor>%
	AND kind = ''N'']{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA004','1','I','epexpsorting','S','S','S','N','N',{ts '2007-11-27 13:06:12.077'},'SARA','I dettagli della classificazione %<sortingkind.codesorkind>%, di tipo Variazione, non possono avere data precedente a quella del dettaglio di tipo Normale, dello stesso codice.','N','(
	[SELECT COUNT(*)
	FROM epexpsorting
	WHERE nepexp = %<epexpsorting.nepexp>%
	AND yepexp = %<epexpsorting.yepexp>%
	AND idsor = %<epexpsorting.idsor>%
	AND kind = ''N'']{I} = 0 
)
OR
(
	[SELECT COUNT(*)
	FROM epexpsorting
	WHERE nepexp = %<epexpsorting.nepexp>%
	AND yepexp = %<epexpsorting.yepexp>%
	AND idsor = %<epexpsorting.idsor>%
	AND kind = ''V'']{I} = 0 
)
OR
((
	[SELECT MAX(adate)
	FROM epexpsorting
	WHERE nepexp = %<epexpsorting.nepexp>%
	AND yepexp = %<epexpsorting.yepexp>%
	AND idsor = %<epexpsorting.idsor>%
	AND kind = ''N'']{D} 
)
<=
(
	[SELECT MIN(adate)
	FROM epexpsorting
	WHERE nepexp = %<epexpsorting.nepexp>%
	AND yepexp = %<epexpsorting.yepexp>%
	AND idsor = %<epexpsorting.idsor>%
	AND kind = ''V'']{D} 
)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA005','1','I','epexpsorting','S','S','S','N','N',{ts '2007-11-27 13:09:43.530'},'SARA','L''importo totale dei dettagli della classificazione %<sortingkind.codesorkind>%  su uno stesso codice non può essere negativo.','N','[SELECT SUM(isnull(amount,0))
	FROM epexpsorting
	WHERE nepexp = %<epexpsorting.nepexp>%
	AND yepexp = %<epexpsorting.yepexp>%
	AND idsor = %<epexpsorting.idsor>%
]{N} >=0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA010','1','I','epexpsorting','S','S','S','N','N',{ts '2008-11-11 15:25:01.390'},'SARA','La previsione di Budget del conto %<epexpview.codeacc>%  e  Classificazione %<sorting.sortcode>% è INSUFFICIENTE!','N','ISNULL(
	[
	SELECT ISNULL(currentprev,0) + ISNULL(previsionvariation,0)
	FROM sortingtotal	
	WHERE idacc = %<epexpsorting.idacc>%
	AND idsor= %<epexpsorting.idsor>%
]{V}
,0)

- 
ISNULL(
	[SELECT ISNULL(SUM(amount),0)
	FROM epexpsorting
	WHERE idacc =  %<epexpsorting.idacc>%
	AND idsor =  %<epexpsorting.idsor>%
]{V}
,0)
>= 0 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA003','2','U','epexpsorting','S','S','S','N','N',{ts '2007-11-27 13:09:03.530'},'SARA','Per la classificazione %<sortingkind.codesorkind>% può esserci un solo dettaglio di tipo Normale per ogni codice.','N','ISNULL(%<epexpsorting.kind>%,'''') = ISNULL(&<epexpsorting.kind>&,'''')
OR
--esiste un solo dettaglio di tipo normale
(
[SELECT COUNT(*)
	FROM epexpsorting
	WHERE nepexp = %<epexpsorting.nepexp>%
	AND yepexp = %<epexpsorting.yepexp>%
	AND idsor = %<epexpsorting.idsor>%
	AND kind = ''N'']{I} = 1
)
OR
--non ci sono dettagli di tipo normale
(
[SELECT COUNT(*)
	FROM epexpsorting
	WHERE nepexp = %<epexpsorting.nepexp>%
	AND yepexp = %<epexpsorting.yepexp>%
	AND idsor = %<epexpsorting.idsor>%
	AND kind = ''N'']{I} = 0
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA004','1','U','epexpsorting','S','S','S','N','N',{ts '2007-11-27 13:06:30.593'},'SARA','I dettagli della classificazione %<sortingkind.codesorkind>%, di tipo Variazione, non possono avere data precedente a quella del dettaglio di tipo Normale, dello stesso codice.','N','%<epexpsorting.adate>% = &<epexpsorting.adate>&
OR
(
	[SELECT COUNT(*)
	FROM epexpsorting
	WHERE nepexp = %<epexpsorting.nepexp>%
	AND yepexp = %<epexpsorting.yepexp>%
	AND idsor = %<epexpsorting.idsor>%
	AND kind = ''N'']{I} = 0 
)
OR
(
	[SELECT COUNT(*)
	FROM epexpsorting
	WHERE nepexp = %<epexpsorting.nepexp>%
	AND yepexp = %<epexpsorting.yepexp>%
	AND idsor = %<epexpsorting.idsor>%
	AND kind = ''V'']{I} = 0 
)
OR
(
(
	[SELECT MAX(adate)
	FROM epexpsorting
	WHERE nepexp = %<epexpsorting.nepexp>%
	AND yepexp = %<epexpsorting.yepexp>%
	AND idsor = %<epexpsorting.idsor>%
	AND kind = ''N'']{D} 
)
<= 
(
	[SELECT MIN(adate)
	FROM epexpsorting
	WHERE nepexp = %<epexpsorting.nepexp>%
	AND yepexp = %<epexpsorting.yepexp>%
	AND idsor = %<epexpsorting.idsor>%
	AND kind = ''V'']{D}
)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA005','1','U','epexpsorting','S','S','S','N','N',{ts '2007-11-27 13:09:19.437'},'SARA','L''importo totale dei dettagli della classificazione %<sortingkind.codesorkind>%  su uno stesso codice non può essere negativo.','N','isnull(%<epexpsorting.amount>%,0)= isnull(&<epexpsorting.amount>&,0)
OR
(
[(SELECT SUM(isnull(amount,0))
	FROM epexpsorting
	WHERE nepexp = %<epexpsorting.nepexp>%
	AND yepexp = %<epexpsorting.yepexp>%
	AND idsor = %<epexpsorting.idsor>%
	)
]{N} >=0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA010','1','U','epexpsorting','S','S','S','N','N',{ts '2008-11-11 15:25:07.483'},'SARA','La previsione di Budget del conto %<epexpview.codeacc>%  e  Classificazione %<sorting.sortcode>% è INSUFFICIENTE!','N','ISNULL(
	[
	SELECT ISNULL(currentprev,0) + ISNULL(previsionvariation,0)
	FROM sortingtotal	
	WHERE idacc = %<epexpsorting.idacc>%
	AND idsor= %<epexpsorting.idsor>%
]{V}
,0)

- 
ISNULL(
	[SELECT ISNULL(SUM(amount),0)
	FROM epexpsorting
	WHERE idacc =  %<epexpsorting.idacc>%
	AND idsor =  %<epexpsorting.idsor>%
]{V}
,0)
>= 0 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA002','1','D','epexpvar','S','S','S','N','N',{ts '2008-11-07 13:37:44.017'},'SARA','Le classificazioni associate all''impegno di budget n. %<epexp.nepexp>%/%<epexp.yepexp>% sono superiori rispetto all''importo dello stesso','N','(
[SELECT curramount FROM epexptotal
WHERE nepexp = %<epexpvar.nepexp>% 
AND yepexp = %<epexpvar.yepexp>%]{N}
>=
[ISNULL(
	(SELECT TOP 1 SUM(I.amount)
	FROM epexpsorting I
	JOIN sorting S
		ON I.idsor = S.idsor
	WHERE I.nepexp = %<epexpvar.nepexp>%
	AND I.yepexp = %<epexpvar.yepexp>%
	GROUP BY S.idsorkind,I.idsor, I.idacc, I.nepexp, I.yepexp
	ORDER BY SUM(I.amount) desc)
,0)]{N}
)
OR
(%<epexpvar.amount>% < 0)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA002','1','I','epexpvar','S','S','S','N','N',{ts '2008-11-07 13:38:04.827'},'SARA','Le classificazioni associate all''impegno di budget n. %<epexp.nepexp>%/%<epexp.yepexp>% sono superiori rispetto all''importo dello stesso','N','[SELECT curramount FROM epexptotal
WHERE nepexp = %<epexpvar.nepexp>% 
AND yepexp = %<epexpvar.yepexp>%]{N}
>=
[ISNULL(
	(SELECT TOP 1 SUM(I.amount)
	FROM epexpsorting I
	JOIN sorting S
		ON I.idsor = S.idsor
	WHERE I.nepexp = %<epexpvar.nepexp>%
	AND I.yepexp = %<epexpvar.yepexp>%
	GROUP BY S.idsorkind,I.idsor, I.idacc, I.nepexp, I.yepexp
	ORDER BY SUM(I.amount) desc)
,0)]{N}
OR
%<epexpvar.amount>% > 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA002','1','U','epexpvar','S','S','S','N','N',{ts '2008-11-07 13:38:15.827'},'SARA','Le classificazioni associate all''impegno di budget n. %<epexp.nepexp>%/%<epexp.yepexp>% sono superiori rispetto all''importo dello stesso','N','(
[SELECT curramount FROM epexptotal
WHERE nepexp = %<epexpvar.nepexp>% 
AND yepexp = %<epexpvar.yepexp>%]{N}
>=
[ISNULL(
	(SELECT TOP 1 SUM(I.amount)
	FROM epexpsorting I
	JOIN sorting S
		ON I.idsor = S.idsor
	WHERE I.nepexp = %<epexpvar.nepexp>%
	AND I.yepexp = %<epexpvar.yepexp>%
	GROUP BY S.idsorkind,I.idsor, I.idacc, I.nepexp, I.yepexp
	ORDER BY SUM(I.amount) desc)
,0)]{N}
)
OR
(&<epexpvar.amount>& < %<epexpvar.amount>%)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR006','1','D','estimate','S','S','S','N','N',{ts '2009-03-28 12:45:29.003'},'SA','Il contratto attivo %<estimateview.estimkind>% n. %<estimateview.nestim>% / %<estimateview.yestim>% non può essere inserito in quanto supera il limite di 5.000 ','S','[SELECT ISNULL(SUM(iva_euro),0) + ISNULL(SUM(taxable_euro),0)
FROM estimatedetailview
WHERE estimatedetailview.idestimkind = %<estimate.idestimkind>%
AND estimatedetailview.yestim = %<estimate.yestim>%
AND estimatedetailview.nestim = %<estimate.nestim>%
AND stop IS NULL]{V} <= 5000
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''contrattivogrande''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','1','D','estimate','S','S','S','N','N',{ts '2008-07-30 10:36:42.983'},'NINO','Le regole di sicurezza vietano la cancellazione di contratti attivi','S','[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename IN (''contrattivo'', ''contrattivogrande'')
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','estimate','S','S','S','N','N',{ts '2007-09-13 11:55:11.077'},'NINO','Cancellazione Impossibile! Esistono movimenti di entrata collegati al contratto  %<idestimkind>% / %<nestim>% / %<yestim>%','S','[(SELECT count(*) 
from incomeestimate 
where idestimkind = %<estimate.idestimkind>%
and yestim = %<estimate.yestim>% 
and nestim = %<estimate.nestim>%)]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM008','1','I','estimate','S','S','S','N','N',{ts '2007-12-06 11:43:25.077'},'PINO','Il contratto attivo crea un salto nella numerazione. Non esiste il contratto attivo precedente al N. %<estimate.nestim>% / %<estimate.yestim>%  del tipo: %<estimate.idestimkind>% .','N','--post
([select flag_autodocnumbering from config where ayear = %<sys_esercizio>%]{I} & 1) = 0

or
[select count(*) from estimate E 
	where E.nestim = 
		[SELECT MAX(nestim) FROM estimate
		where yestim=%<estimate.yestim>% 
	      and idestimkind = %<estimate.idestimkind>% ]{I} -1
	and E.yestim=%<estimate.yestim>% 
      and E.idestimkind = %<estimate.idestimkind>% 
]{I}
>0

or

%<estimate.nestim>% = 1

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR006','1','I','estimate','S','S','S','N','N',{ts '2008-04-08 10:43:54.907'},'PINO','Il contratto attivo %<estimateview.estimkind>% n. %<estimateview.nestim>% / %<estimateview.yestim>% non può essere inserito in quanto supera il limite di 5.000 ','N','[SELECT ISNULL(SUM(iva_euro),0) + ISNULL(SUM(taxable_euro),0)
FROM estimatedetailview
WHERE estimatedetailview.idestimkind = %<estimate.idestimkind>%
AND estimatedetailview.yestim = %<estimate.yestim>%
AND estimatedetailview.nestim = %<estimate.nestim>%
AND stop IS NULL]{V} <= 5000
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''contrattivogrande''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','1','I','estimate','S','S','S','N','N',{ts '2008-07-30 10:36:06.797'},'NINO','Le regole di sicurezza vietano l''inserimento di contratti attivi','S','[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename IN (''contrattivo'', ''contrattivogrande'')
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM014','1','I','estimate','S','S','S','N','N',{ts '2009-02-26 15:18:21.610'},'ASSISTENZA','Non è possibile salvare un contratto attivo con numero negativo','N','%<estimate.nestim>%>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM012','1','U','estimate','S','S','S','N','N',{ts '2009-09-14 15:47:30.453'},'SARA','Per il dettaglio contratto attivo intracomunitario %<estimate.idestimkind>% n° %<estimate.nestim>% del %<estimate.yestim>% , l''importo dell''IVA di ciascun dettaglio deve essere pari a 0.','N','--post
ISNULL(%<estimate.flagintracom>%,''N'') = ''N''
OR
(

[SELECT ROUND(SUM(ISNULL(tax,0.00)),2) FROM estimatedetail 
  WHERE idestimkind = %<estimate.idestimkind>% AND
        yestim      = %<estimate.yestim>%  AND 
        nestim	= %<estimate.nestim>% 
	  ]{N} = 0.00 
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA012','1','U','estimate','S','S','S','N','N',{ts '2007-11-21 17:00:38.633'},'SA','L''importo dell''IVA sui dettagli  del contratto  di tipo  %<estimate.idestimkind>%,  %<estimate.yestim>% / %<estimate.nestim>%, deve essere pari a zero perchè l''contratto è in valuta diversa dall''Euro.','N','(
ISNULL(%<estimate.idcurrency>%, 0) = 
ISNULL(&<estimate.idcurrency>&, 0) 
)
OR
(
 ISNULL([select codecurrency from currency where idcurrency=
%<estimate.idcurrency>%]{C},'''') = ''EUR''
)

OR

(

[SELECT ROUND(SUM(ISNULL(tax,0.00)),2) FROM estimatedetail 
  WHERE idestimkind = %<estimate.idestimkind>% AND
        yestim      = %<estimate.yestim>%  AND 
        nestim	= %<estimate.nestim>% 
	  ]{N} = 0.00 
)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM015','1','U','estimate','S','S','S','N','N',{ts '2007-02-26 16:45:01.420'},'''NINO''','Non si può modificare il percipiente in un contratto totalmente o parzialmente contabilizzato.','S','([SELECT COUNT(*) 
FROM incomeestimate
WHERE incomeestimate.idestimkind = %<estimate.idestimkind>% 
AND incomeestimate.yestim = %<estimate.yestim>%
AND incomeestimate.nestim = %<estimate.nestim>%]{I}
=
0)
or
(ISNULL(&<estimate.idreg>&,-1) = ISNULL(%<estimate.idreg>%,-1))')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR006','1','U','estimate','S','S','S','N','N',{ts '2009-03-28 12:39:59.720'},'SA','Il contratto attivo %<estimateview.estimkind>% n. %<estimateview.nestim>% / %<estimateview.yestim>% non può essere inserito in quanto supera il limite di 5.000 ','N','[SELECT ISNULL(SUM(iva_euro),0) + ISNULL(SUM(taxable_euro),0)
FROM estimatedetailview
WHERE estimatedetailview.idestimkind = %<estimate.idestimkind>%
AND estimatedetailview.yestim = %<estimate.yestim>%
AND estimatedetailview.nestim = %<estimate.nestim>%
AND stop IS NULL]{V} <= 5000
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''contrattivogrande''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR006','2','U','estimate','S','S','S','N','N',{ts '2009-03-28 12:40:12.737'},'SA','Il contratto attivo %<estimateview.estimkind>% n. %<estimateview.nestim>% / %<estimateview.yestim>% non può essere inserito in quanto supera il limite di 5.000 ','S','[SELECT ISNULL(SUM(iva_euro),0) + ISNULL(SUM(taxable_euro),0)
FROM estimatedetailview
WHERE estimatedetailview.idestimkind = %<estimate.idestimkind>%
AND estimatedetailview.yestim = %<estimate.yestim>%
AND estimatedetailview.nestim = %<estimate.nestim>%
AND stop IS NULL]{V} <= 5000
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''contrattivogrande''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','1','U','estimate','S','S','S','N','N',{ts '2008-07-30 10:36:35.877'},'NINO','Le regole di sicurezza vietano la modifica di contratti attivi','S','[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename IN (''contrattivo'', ''contrattivogrande'')
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM001','1','D','estimatedetail','S','S','S','N','N',{ts '2006-11-15 15:16:13.627'},'''SARA''','L''importo del movimento di entrata è diverso dalla somma dei dettagli del contratto attivo associati','N','--post

(%<estimatedetail.idinc_iva>% is null  AND

 %<estimatedetail.idinc_taxable>% is null)

OR

(

[SELECT COUNT(*) 

FROM incomeestimateview 

WHERE incomeestimateview.idestimkind = %<estimatedetail.idestimkind>%

AND incomeestimateview.yestim   = %<estimatedetail.yestim>%

AND incomeestimateview.nestim   = %<estimatedetail.nestim>% 

AND (incomeestimateview.idinc = %<estimatedetail.idinc_taxable>%

OR   incomeestimateview.idinc = %<estimatedetail.idinc_iva>%)

AND ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)

AND ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0

)



')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR006','1','D','estimatedetail','S','S','S','N','N',{ts '2009-03-28 12:45:54.503'},'SA','Il contratto attivo %<estimateview.estimkind>% n. %<estimateview.nestim>% / %<estimateview.yestim>% non può essere inserito in quanto supera il limite di 5.000 ','S','[SELECT ISNULL(SUM(iva_euro),0) + ISNULL(SUM(taxable_euro),0)
FROM estimatedetailview
WHERE estimatedetailview.idestimkind = %<estimate.idestimkind>%
AND estimatedetailview.yestim = %<estimate.yestim>%
AND estimatedetailview.nestim = %<estimate.nestim>%
AND stop IS NULL]{V} <= 5000
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''contrattivogrande''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','1','D','estimatedetail','S','S','S','N','N',{ts '2008-07-30 10:37:50.813'},'NINO','Le regole di sicurezza vietano la cancellazione di dettagli di contratti attivi','S','[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename IN (''contrattivo'', ''contrattivogrande'')
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','estimatedetail','S','S','S','N','N',{ts '2006-11-02 13:37:19.547'},'''SARA''','Cancellazione Impossibile! Esistono dettagli fatture collegati al dettaglio del Contratto Attivo  n. %<estimatedetail.rownum>% e descrizione " %<estimatedetail.detaildescription>% ". 
','S','[SELECT COUNT(*) 
FROM invoicedetail 
WHERE idestimkind= %<estimatedetail.idestimkind>% 
AND yestim= %<estimatedetail.yestim>% 
AND nestim= %<estimatedetail.nestim>% 
AND estimrownum= %<estimatedetail.rownum>%]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM001','1','I','estimatedetail','S','S','S','N','N',{ts '2008-04-07 09:27:16.297'},'SA','L''importo del movimento di entrata è diverso dalla somma dei dettagli del contratto attivo associati','N','--post

(%<estimatedetail.idinc_iva>% is null  AND

 %<estimatedetail.idinc_taxable>% is null)

OR

(

[SELECT COUNT(*) 

FROM incomeestimateview 

WHERE incomeestimateview.idestimkind = %<estimatedetail.idestimkind>%

AND incomeestimateview.yestim   = %<estimatedetail.yestim>%

AND incomeestimateview.nestim   = %<estimatedetail.nestim>% 

AND (incomeestimateview.idinc = %<estimatedetail.idinc_taxable>%

OR   incomeestimateview.idinc = %<estimatedetail.idinc_iva>%)

AND ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)

AND ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0

)




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM007','1','I','estimatedetail','S','S','S','N','N',{ts '2007-03-08 14:26:29.343'},'''SARA''','Impostare l''anagrafica per il dettaglio n. %<estimatedetail.rownum>%  %<estimatedetail.detaildescription>% del contratto attivo %<estimatedetail.idestimkind>%/ n. %<estimatedetail.nestim>% del %<estimatedetail.yestim>%','N','(
 [SELECT ISNULL(multireg,''N'')FROM estimatekind WHERE 
 idestimkind = %<estimatedetail.idestimkind>%]{C} = ''N''
)

OR

(
 ISNULL(%<estimatedetail.idreg>%, 0) <> 0 
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM010','1','I','estimatedetail','S','S','S','N','N',{ts '2008-01-31 14:33:26.483'},'SARA','Tutti i dettagli del contratto attivo appartenenti allo stesso gruppo  #%<estimatedetail.idgroup>% devono avere la stessa causale EP','N','--post I
(
[SELECT COUNT (DISTINCT ISNULL(idaccmotive,0))
FROM  estimatedetail
WHERE estimatedetail.idestimkind = %<estimatedetail.idestimkind>%
AND   estimatedetail.yestim  = %<estimatedetail.yestim>%
AND   estimatedetail.nestim  = %<estimatedetail.nestim>%
AND   estimatedetail.idgroup = %<estimatedetail.idgroup>%
]{I}  = 1)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM010','2','I','estimatedetail','S','S','S','N','N',{ts '2008-01-31 14:33:45.640'},'SARA','Tutti i dettagli del contratto attivo appartenenti allo stesso gruppo  #%<estimatedetail.idgroup>% devono avere la stessa causale EP di annullamento','N','--post I
(
[SELECT COUNT (DISTINCT ISNULL(idaccmotiveannulment,0))
FROM  estimatedetail
WHERE estimatedetail.idestimkind = %<estimatedetail.idestimkind>%
AND   estimatedetail.yestim  = %<estimatedetail.yestim>%
AND   estimatedetail.nestim  = %<estimatedetail.nestim>%
AND   estimatedetail.idgroup = %<estimatedetail.idgroup>%
]{I}  = 1)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM012','1','I','estimatedetail','S','S','S','N','N',{ts '2009-09-14 16:16:43.390'},'SARA','Per il dettaglio #%<estimatedetail.rownum>% del contratto attivo intracomunitario %<estimatedetail.idestimkind>% n° %<estimatedetail.nestim>% del %<estimatedetail.yestim>%, l''importo dell''IVA deve essere pari a 0.','N','[SELECT ISNULL(flagintracom,''N'') FROM estimate
WHERE 
idestimkind = %<estimatedetail.idestimkind>% AND
yestim = %<estimatedetail.yestim>% AND
nestim = %<estimatedetail.nestim>%]{C}
= ''N''
OR
%<estimatedetail.tax>% = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA012','1','I','estimatedetail','S','S','S','N','N',{ts '2007-11-21 16:30:01.273'},'SA','L''importo dell''IVA sul dettaglio  n. %<estimatedetail.rownum>% del contratto di tipo  %<estimatedetail.idestimkind>%,  %<estimatedetail.yestim>% / %<estimatedetail.nestim>% deve essere pari a zero perchè il contratto è in valuta diversa dall''Euro.','N','(
 [SELECT codecurrency FROM estimate 
join currency on currency.idcurrency=estimate.idcurrency
WHERE 
 idestimkind = %<estimatedetail.idestimkind>%   and
 yestim = %<estimatedetail.yestim>%  and
 nestim =  %<estimatedetail.nestim>% ]{C} = ''EUR''
)

OR

(
 ISNULL(%<estimatedetail.tax>%, 0) = 0 
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR006','1','I','estimatedetail','S','S','S','N','N',{ts '2008-07-30 11:40:23.937'},'PINO','Il contratto attivo %<estimateview.estimkind>% n. %<estimateview.nestim>% / %<estimateview.yestim>% non può essere inserito in quanto supera il limite di 5.000 ','N','[SELECT ISNULL(SUM(iva_euro),0) + ISNULL(SUM(taxable_euro),0)
FROM estimatedetailview
WHERE estimatedetailview.idestimkind = %<estimate.idestimkind>%
AND estimatedetailview.yestim = %<estimate.yestim>%
AND estimatedetailview.nestim = %<estimate.nestim>%
AND stop IS NULL]{V} <= 5000
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''contrattivogrande''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','1','I','estimatedetail','S','S','S','N','N',{ts '2008-07-30 10:36:50.517'},'NINO','Le regole di sicurezza vietano l''inserimento di dettagli di contratti attivi','S','[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename IN (''contrattivo'', ''contrattivogrande'')
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM001','1','U','estimatedetail','S','S','S','N','N',{ts '2006-12-12 16:00:03.843'},'''SARA''','L''importo del movimento di entrata è diverso dalla somma dei dettagli del contratto attivo associati','N','--post
(
	ISNULL(&<estimatedetail.idinc_taxable>&,'''') = ISNULL(%<estimatedetail.idinc_taxable>%,'''')
	AND ISNULL(&<estimatedetail.idinc_iva>&,'''') = ISNULL(%<estimatedetail.idinc_iva>%,'''')
)
OR
(&<estimatedetail.idinc_taxable>& is not null and %<estimatedetail.idinc_taxable>% is null
AND 
[SELECT COUNT(*) 
FROM incomeestimateview 
WHERE incomeestimateview.idestimkind = %<estimatedetail.idestimkind>%
AND incomeestimateview.yestim   = %<estimatedetail.yestim>%
AND incomeestimateview.nestim   = %<estimatedetail.nestim>% 
AND incomeestimateview.idinc  = &<estimatedetail.idinc_taxable>&
AND ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)
AND ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0
)
OR
(&<estimatedetail.idinc_iva>& is not null and %<estimatedetail.idinc_iva>% is null
AND
[SELECT COUNT(*) 
FROM incomeestimateview 
WHERE incomeestimateview.idestimkind = %<estimatedetail.idestimkind>%
AND incomeestimateview.yestim   = %<estimatedetail.yestim>%
AND incomeestimateview.nestim   = %<estimatedetail.nestim>% 
AND incomeestimateview.idinc = &<estimatedetail.idinc_iva>&
AND ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)
AND ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0
)
OR
(&<estimatedetail.idinc_taxable>& is null and %<estimatedetail.idinc_taxable>% is not null
AND 
[SELECT COUNT(*) 
FROM incomeestimateview
WHERE incomeestimateview.idestimkind = %<estimatedetail.idestimkind>%
AND incomeestimateview.yestim   = %<estimatedetail.yestim>%
AND incomeestimateview.nestim   = %<estimatedetail.nestim>% 
AND incomeestimateview.idinc = %<estimatedetail.idinc_taxable>%
AND ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)
AND ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0
)
OR
(&<estimatedetail.idinc_iva>& is null and %<estimatedetail.idinc_iva>% is not null
AND
[SELECT COUNT(*) 
FROM incomeestimateview
WHERE incomeestimateview.idestimkind = %<estimatedetail.idestimkind>%
AND incomeestimateview.yestim   = %<estimatedetail.yestim>%
AND incomeestimateview.nestim   = %<estimatedetail.nestim>% 
AND incomeestimateview.idinc = %<estimatedetail.idinc_iva>%
AND ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)
AND ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM003','1','U','estimatedetail','S','S','S','N','N',{ts '2007-02-26 16:48:10.377'},'''NINO''','Il dettaglio n. %<estimatedetail.rownum>% e descrizione %<estimatedetail.detaildescription>% non può essere modificato in quanto già associato ad un movimento di entrata.','S','(
	ISNULL(&<estimatedetail.number>&,0) = ISNULL(%<estimatedetail.number>%,0)
	AND ISNULL(&<estimatedetail.taxable>&,0) = ISNULL(%<estimatedetail.taxable>%,0)
	AND ISNULL(&<estimatedetail.taxrate>&,0) = ISNULL(%<estimatedetail.taxrate>%,0)
	AND ISNULL(&<estimatedetail.discount>&,0) = ISNULL(%<estimatedetail.discount>%,0)
	AND ISNULL(&<estimatedetail.idupb>&,''x'') = ISNULL(%<estimatedetail.idupb>%,''x'')
	AND ISNULL(&<estimatedetail.idreg>&,-1) = ISNULL(%<estimatedetail.idreg>%,-1)
)
OR
(%<estimatedetail.idinc_iva>% IS NULL AND %<estimatedetail.idinc_taxable>% IS NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM004','1','U','estimatedetail','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','La quantità di un dettaglio  contratto associato a dettagli fattura non può essere diminuita.','S','([SELECT COUNT(*) 
FROM invoicedetail 
WHERE idestimkind = %<estimatedetail.idestimkind>% 
AND yestim = %<estimatedetail.yestim>% 
AND nestim = %<estimatedetail.nestim>% 
AND estimrownum = %<estimatedetail.rownum>%]{I} = 0)
OR
([SELECT sum(isnull(number,0)) FROM invoicedetail 
WHERE idestimkind = %<estimatedetail.idestimkind>%
AND nestim = %<estimatedetail.nestim>%
AND yestim = %<estimatedetail.yestim>% 
AND estimrownum = %<estimatedetail.rownum>%]{N}<=
isnull(%<estimatedetail.number>%,0))
OR
(isnull(%<estimatedetail.number>%,0)=
isnull(&<estimatedetail.number>&,0))')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM005','2','U','estimatedetail','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il dettaglio n. %<estimatedetail.rownum>% e descrizione %<estimatedetail.detaildescription>%  non può essere modificato in quanto esistono dettagli fatture ad esso collegati. ','S','(
	ISNULL(&<estimatedetail.number>&,0) = ISNULL(%<estimatedetail.number>%,0)
	AND ISNULL(&<estimatedetail.taxable>&,0) = ISNULL(%<estimatedetail.taxable>%,0)
	AND ISNULL(&<estimatedetail.taxrate>&,0) = ISNULL(%<estimatedetail.taxrate>%,0)
	AND ISNULL(&<estimatedetail.discount>&,0) = ISNULL(%<estimatedetail.discount>%,0)
	AND ISNULL(&<estimatedetail.idupb>&,''x'') = ISNULL(%<estimatedetail.idupb>%,''x'')
)
OR
([SELECT COUNT(*) 
FROM invoicedetail 
WHERE idestimkind = %<estimatedetail.idestimkind>% 
AND yestim = %<estimatedetail.yestim>% 
AND nestim = %<estimatedetail.nestim>% 
AND estimrownum = %<estimatedetail.rownum>%]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM005','3','U','estimatedetail','S','S','S','N','N',{ts '2007-09-03 16:35:40.017'},'NINO','Il dettaglio n. %<estimatedetail.rownum>% e descrizione %<estimatedetail.detaildescription>%  non può essere decontabilizzato in quanto esistono dettagli  fatture pagati ad esso collegati. ','S','(&<estimatedetail.idinc_iva>& IS NULL)
OR
(%<estimatedetail.idinc_iva>% IS NOT NULL)
OR
([SELECT COUNT(*) 
FROM invoicedetail
JOIN incomeinvoice 
	ON incomeinvoice.idinvkind = invoicedetail.idinvkind
	AND incomeinvoice.yinv = invoicedetail.yinv
	AND incomeinvoice.ninv = invoicedetail.ninv
JOIN incomelink
ON incomelink.idchild = incomeinvoice.idinc
WHERE incomelink.idparent = &<estimatedetail.idinc_iva>&
AND invoicedetail.idestimkind = %<estimatedetail.idestimkind>% 
AND invoicedetail.yestim = %<estimatedetail.yestim>% 
AND invoicedetail.nestim = %<estimatedetail.nestim>% 
AND invoicedetail.estimrownum = %<estimatedetail.rownum>%
]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM005','4','U','estimatedetail','S','S','S','N','N',{ts '2007-09-03 16:36:27.140'},'NINO','Il dettaglio n. %<estimatedetail.rownum>% e descrizione %<estimatedetail.detaildescription>%  non può essere decontabilizzato in quanto esistono dettagli  fatture pagati ad esso collegati. ','S','(&<estimatedetail.idinc_taxable>& IS NULL)
OR
(%<estimatedetail.idinc_taxable>% IS NOT NULL)
OR
([SELECT COUNT(*) 
FROM invoicedetail
JOIN incomeinvoice 
	ON incomeinvoice.idinvkind = invoicedetail.idinvkind
	AND incomeinvoice.yinv = invoicedetail.yinv
	AND incomeinvoice.ninv = invoicedetail.ninv
JOIN incomelink
ON incomelink.idchild = incomeinvoice.idinc
WHERE incomelink.idparent = &<estimatedetail.idinc_taxable>&
AND invoicedetail.idestimkind = %<estimatedetail.idestimkind>% 
AND invoicedetail.yestim = %<estimatedetail.yestim>% 
AND invoicedetail.nestim = %<estimatedetail.nestim>% 
AND invoicedetail.estimrownum = %<estimatedetail.rownum>%
]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM007','1','U','estimatedetail','S','S','S','N','N',{ts '2007-03-08 14:26:46.827'},'''SARA''','Impostare l''anagrafica per il dettaglio n. %<estimatedetail.rownum>%  %<estimatedetail.detaildescription>% del contratto attivo %<estimatedetail.idestimkind>%/ n. %<estimatedetail.nestim>% del %<estimatedetail.yestim>%','N','(
 [SELECT ISNULL(multireg,''N'')FROM estimatekind WHERE 
 idestimkind = %<estimatedetail.idestimkind>%]{C} = ''N''
)

OR

(
 ISNULL(%<estimatedetail.idreg>%, 0) <> 0 
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM009','1','U','estimatedetail','S','S','S','N','N',{ts '2008-04-30 13:48:48.913'},'NINO','Non può essere impostata la data di annullamento del dettaglio perché contabilizzato  in anni successivi ','S','-- Controllo su inserimento data fine (da NULL a valore)
(
%<estimatedetail.idinc_iva>% IS NULL
AND %<estimatedetail.idinc_taxable>% IS NULL
)
OR
&<estimatedetail.stop>& IS NOT NULL
OR
%<estimatedetail.stop>% IS NULL
OR
ISNULL(&<estimatedetail.stop>&, {D ''1900-01-01''}) =
ISNULL(%<estimatedetail.stop>%, {D ''1900-01-01''})
OR
(
YEAR(%<estimatedetail.stop>%) = %<sys_esercizio>%
/*
AND
YEAR(%<estimatedetail.stop>%) =
[SELECT MIN(ayear)
FROM
(
	(SELECT MAX(ayear) as ayear
	FROM incomeyear
	WHERE idinc = %<estimatedetail.idinc_iva>%)
	UNION
	(SELECT MAX(ayear) as ayear
	FROM incomeyear
	WHERE idinc = %<estimatedetail.idinc_taxable>%)
) as t]{I}
*/
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM009','2','U','estimatedetail','S','S','S','N','N',{ts '2008-04-30 13:43:28.287'},'NINO','Non può essere modificata la data di annullamento del dettaglio contabilizzato ','S','-- Controllo su inserimento data fine (da valore a valore)
(
%<estimatedetail.idinc_iva>% IS NULL
AND %<estimatedetail.idinc_taxable>% IS NULL
)
OR
&<estimatedetail.stop>& IS NULL
OR
%<estimatedetail.stop>% IS NULL
OR
YEAR(ISNULL(&<estimatedetail.stop>&, {D ''1900-01-01''})) =
YEAR(ISNULL(%<estimatedetail.stop>%, {D ''1900-01-01''}))')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM009','3','U','estimatedetail','S','S','S','N','N',{ts '2008-04-30 13:49:34.490'},'NINO','Non può essere tolta la data di annullamento del dettaglio','S','-- Controllo su inserimento data fine (da valore a NULL)
(
%<estimatedetail.idinc_iva>% IS NULL
AND %<estimatedetail.idinc_taxable>% IS NULL
)
OR
&<estimatedetail.stop>& IS NULL
OR
%<estimatedetail.stop>% IS NOT NULL
OR
ISNULL(&<estimatedetail.stop>&, {D ''1900-01-01''}) =
ISNULL(%<estimatedetail.stop>%, {D ''1900-01-01''})
OR
(
YEAR(&<estimatedetail.stop>&) = %<sys_esercizio>%
/*
AND
YEAR(&<estimatedetail.stop>&) =
[SELECT MIN(ayear)
FROM
(
	(SELECT MAX(ayear) as ayear
	FROM incomeyear
	WHERE idinc = %<estimatedetail.idinc_iva>%)
	UNION
	(SELECT MAX(ayear) as ayear
	FROM incomeyear
	WHERE idinc = %<estimatedetail.idinc_taxable>%)
) as t]{I}
*/
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM009','4','U','estimatedetail','S','S','S','N','N',{ts '2008-04-30 13:49:55.210'},'NINO','Non può essere impostata la data contabile del dettaglio','S','-- Controllo su inserimento data inizio (da NULL a valore)
(
%<estimatedetail.idinc_iva>% IS NULL
AND %<estimatedetail.idinc_taxable>% IS NULL
)
OR
&<estimatedetail.start>& IS NOT NULL
OR
%<estimatedetail.start>% IS NULL
OR
ISNULL(&<estimatedetail.start>&, {D ''1900-01-01''}) =
ISNULL(%<estimatedetail.start>%, {D ''1900-01-01''})
OR
(
YEAR(%<estimatedetail.start>%) = %<sys_esercizio>%
/*
AND
YEAR(%<estimatedetail.start>%) =
[SELECT MAX(ayear)
FROM
(
	(SELECT MIN(ayear) as ayear
	FROM incomeyear
	WHERE idinc = %<estimatedetail.idinc_iva>%)
	UNION
	(SELECT MIN(ayear) as ayear
	FROM incomeyear
	WHERE idinc = %<estimatedetail.idinc_taxable>%)
) as t]{I}
*/
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM009','5','U','estimatedetail','S','S','S','N','N',{ts '2008-01-24 10:25:01.890'},'SARA','Non può essere modificato l''esercizio della data contabile del dettaglio','S','-- Controllo su inserimento data inizio (da valore a valore)
(
%<estimatedetail.idinc_iva>% IS NULL
AND %<estimatedetail.idinc_taxable>% IS NULL
)
OR
&<estimatedetail.start>& IS NULL
OR
%<estimatedetail.start>% IS NULL
OR
YEAR(ISNULL(&<estimatedetail.start>&, {D ''1900-01-01''})) =
YEAR(ISNULL(%<estimatedetail.start>%, {D ''1900-01-01''}))')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM009','6','U','estimatedetail','S','S','S','N','N',{ts '2008-04-30 13:50:27.523'},'NINO','Non può essere tolta la data contabile del dettaglio','S','-- Controllo su inserimento data inizio (da valore a NULL)
(
%<estimatedetail.idinc_iva>% IS NULL
AND %<estimatedetail.idinc_taxable>% IS NULL
)
OR
&<estimatedetail.start>& IS NULL
OR
%<estimatedetail.start>% IS NOT NULL
OR
ISNULL(&<estimatedetail.start>&, {D ''1900-01-01''}) =
ISNULL(%<estimatedetail.start>%, {D ''1900-01-01''})
OR
(
YEAR(&<estimatedetail.start>&) = %<sys_esercizio>%
/*
AND
YEAR(&<estimatedetail.start>&) =
[SELECT MIN(ayear)
FROM
(
	(SELECT MAX(ayear) as ayear
	FROM incomeyear
	WHERE idinc = %<estimatedetail.idinc_iva>%)
	UNION
	(SELECT MAX(ayear) as ayear
	FROM incomeyear
	WHERE idinc = %<estimatedetail.idinc_taxable>%)
) as t]{I}
*/
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM009','7','U','estimatedetail','S','S','S','N','N',{ts '2010-01-07 15:01:44.203'},'SARA','Non può essere contabilizzato il dettaglio','N','-- Controllo sulla contabilizzazione (su IVA)
(
	ISNULL(&<estimatedetail.number>&,0) = ISNULL(%<estimatedetail.number>%,0)
	AND ISNULL(&<estimatedetail.taxable>&,0) = ISNULL(%<estimatedetail.taxable>%,0)
	AND ISNULL(&<estimatedetail.taxrate>&,0) = ISNULL(%<estimatedetail.taxrate>%,0)
	AND ISNULL(&<estimatedetail.discount>&,0) = ISNULL(%<estimatedetail.discount>%,0)
	AND ISNULL(&<estimatedetail.idupb>&,''x'') = ISNULL(%<estimatedetail.idupb>%,''x'')
	AND ISNULL(&<estimatedetail.idreg>&,-1) = ISNULL(%<estimatedetail.idreg>%, -1)
)
OR

%<estimatedetail.idinc_iva>% IS NULL
OR
(
ISNULL(&<estimatedetail.start>&, {D ''1900-01-01''}) <>
ISNULL(%<estimatedetail.start>%, {D ''1900-01-01''})
)
OR
(
ISNULL(&<estimatedetail.stop>&, {D ''1900-01-01''}) <>
ISNULL(%<estimatedetail.stop>%, {D ''1900-01-01''})
)
OR
[SELECT COUNT(*)
FROM incomeyear E
JOIN estimatedetail M
ON E.idinc = M.idinc_iva
WHERE 
(
	(M.start IS NULL) OR (E.ayear >= YEAR(M.start))
)
AND
(
	(M.stop IS NULL) OR (E.ayear < YEAR(M.stop))
)
AND M.idestimkind = %<estimatedetail.idestimkind>%
AND M.yestim = %<estimatedetail.yestim>%
AND M.nestim = %<estimatedetail.nestim>%
AND M.rownum = %<estimatedetail.rownum>%
]{I} <= 1
OR
%<sys_esercizio>% =
[SELECT ISNULL(YEAR(estimatedetail.start), income.ymov)
FROM estimatedetail
JOIN income
ON income.idinc = estimatedetail.idinc_iva
WHERE estimatedetail.idestimkind = %<estimatedetail.idestimkind>%
AND estimatedetail.yestim = %<estimatedetail.yestim>%
AND estimatedetail.nestim = %<estimatedetail.nestim>%
AND estimatedetail.rownum = %<estimatedetail.rownum>%
]{I}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM009','8','U','estimatedetail','S','S','S','N','N',{ts '2010-01-07 15:01:55.267'},'SARA','Non può essere contabilizzato il dettaglio','N','-- Controllo sulla contabilizzazione (su imponibile)
(
	ISNULL(&<estimatedetail.number>&,0) = ISNULL(%<estimatedetail.number>%,0)
	AND ISNULL(&<estimatedetail.taxable>&,0) = ISNULL(%<estimatedetail.taxable>%,0)
	AND ISNULL(&<estimatedetail.taxrate>&,0) = ISNULL(%<estimatedetail.taxrate>%,0)
	AND ISNULL(&<estimatedetail.discount>&,0) = ISNULL(%<estimatedetail.discount>%,0)
	AND ISNULL(&<estimatedetail.idupb>&,''x'') = ISNULL(%<estimatedetail.idupb>%,''x'')
	AND ISNULL(&<estimatedetail.idreg>&,-1) = ISNULL(%<estimatedetail.idreg>%, -1)
)
OR

%<estimatedetail.idinc_taxable>% IS NULL
OR
(
ISNULL(&<estimatedetail.start>&, {D ''1900-01-01''}) <>
ISNULL(%<estimatedetail.start>%, {D ''1900-01-01''})
)
OR
(
ISNULL(&<estimatedetail.stop>&, {D ''1900-01-01''}) <>
ISNULL(%<estimatedetail.stop>%, {D ''1900-01-01''})
)
OR
[SELECT COUNT(*)
FROM incomeyear E
JOIN estimatedetail M
ON E.idinc = M.idinc_taxable
WHERE 
(
	(M.start IS NULL) OR (E.ayear >= YEAR(M.start))
)
AND
(
	(M.stop IS NULL) OR (E.ayear < YEAR(M.stop))
)
AND M.idestimkind = %<estimatedetail.idestimkind>%
AND M.yestim = %<estimatedetail.yestim>%
AND M.nestim = %<estimatedetail.nestim>%
AND M.rownum = %<estimatedetail.rownum>%
]{I} <= 1
OR
%<sys_esercizio>% =
[SELECT ISNULL(YEAR(estimatedetail.start), income.ymov)
FROM estimatedetail
JOIN income
ON income.idinc = estimatedetail.idinc_taxable
WHERE estimatedetail.idestimkind = %<estimatedetail.idestimkind>%
AND estimatedetail.yestim = %<estimatedetail.yestim>%
AND estimatedetail.nestim = %<estimatedetail.nestim>%
AND estimatedetail.rownum = %<estimatedetail.rownum>%]{I}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM009','9','U','estimatedetail','S','S','S','N','N',{ts '2010-01-07 15:02:27.360'},'SARA','Non può essere decontabilizzato il dettaglio','N','-- Controllo sulla decontabilizzazione (su IVA)
(
	ISNULL(&<estimatedetail.number>&,0) = ISNULL(%<estimatedetail.number>%,0)
	AND ISNULL(&<estimatedetail.taxable>&,0) = ISNULL(%<estimatedetail.taxable>%,0)
	AND ISNULL(&<estimatedetail.taxrate>&,0) = ISNULL(%<estimatedetail.taxrate>%,0)
	AND ISNULL(&<estimatedetail.discount>&,0) = ISNULL(%<estimatedetail.discount>%,0)
	AND ISNULL(&<estimatedetail.idupb>&,''x'') = ISNULL(%<estimatedetail.idupb>%,''x'')
	AND ISNULL(&<estimatedetail.idreg>&,-1) = ISNULL(%<estimatedetail.idreg>%, -1)
)
OR

%<estimatedetail.idinc_iva>% IS NOT NULL
OR
[SELECT COUNT(*)
FROM incomeyear E
JOIN estimatedetail M
ON E.idinc = M.idinc_iva
WHERE 
(
	(M.start IS NULL) OR (E.ayear >= YEAR(M.start))
)
AND
(
	(M.stop IS NULL) OR (E.ayear < YEAR(M.stop))
)
AND M.idestimkind = %<estimatedetail.idestimkind>%
AND M.yestim = %<estimatedetail.yestim>%
AND M.nestim = %<estimatedetail.nestim>%
AND M.rownum = %<estimatedetail.rownum>%
]{I} <= 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM009','10','U','estimatedetail','S','S','S','N','N',{ts '2010-01-07 15:02:35.577'},'SARA','Non può essere decontabilizzato il dettaglio','N','-- Controllo sulla decontabilizzazione (su imponibile)
(
	ISNULL(&<estimatedetail.number>&,0) = ISNULL(%<estimatedetail.number>%,0)
	AND ISNULL(&<estimatedetail.taxable>&,0) = ISNULL(%<estimatedetail.taxable>%,0)
	AND ISNULL(&<estimatedetail.taxrate>&,0) = ISNULL(%<estimatedetail.taxrate>%,0)
	AND ISNULL(&<estimatedetail.discount>&,0) = ISNULL(%<estimatedetail.discount>%,0)
	AND ISNULL(&<estimatedetail.idupb>&,''x'') = ISNULL(%<estimatedetail.idupb>%,''x'')
	AND ISNULL(&<estimatedetail.idreg>&,-1) = ISNULL(%<estimatedetail.idreg>%, -1)
)
OR

%<estimatedetail.idinc_taxable>% IS NOT NULL
OR
[SELECT COUNT(*)
FROM incomeyear E
JOIN estimatedetail M
ON E.idinc = M.idinc_taxable
WHERE 
(
	(M.start IS NULL) OR (E.ayear >= YEAR(M.start))
)
AND
(
	(M.stop IS NULL) OR (E.ayear < YEAR(M.stop))
)
AND M.idestimkind = %<estimatedetail.idestimkind>%
AND M.yestim = %<estimatedetail.yestim>%
AND M.nestim = %<estimatedetail.nestim>%
AND M.rownum = %<estimatedetail.rownum>%
]{I} <= 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM010','1','U','estimatedetail','S','S','S','N','N',{ts '2008-01-31 14:33:55.127'},'SARA','Tutti i dettagli del contratto attivo appartenenti allo stesso gruppo  #%<estimatedetail.idgroup>% devono avere la stessa causale EP','N','--post I
(
[SELECT COUNT (DISTINCT ISNULL(idaccmotive,0))
FROM  estimatedetail
WHERE estimatedetail.idestimkind = %<estimatedetail.idestimkind>%
AND   estimatedetail.yestim  = %<estimatedetail.yestim>%
AND   estimatedetail.nestim  = %<estimatedetail.nestim>%
AND   estimatedetail.idgroup = %<estimatedetail.idgroup>%
]{I}  = 1)
OR
%<estimatedetail.idaccmotive>%=&<estimatedetail.idaccmotive>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM010','2','U','estimatedetail','S','S','S','N','N',{ts '2008-01-31 14:34:10.127'},'SARA','Tutti i dettagli del contratto attivo appartenenti allo stesso gruppo  #%<estimatedetail.idgroup>% devono avere la stessa causale EP di annullamento','N','--post I
(
[SELECT COUNT (DISTINCT ISNULL(idaccmotiveannulment,0))
FROM  estimatedetail
WHERE estimatedetail.idestimkind = %<estimatedetail.idestimkind>%
AND   estimatedetail.yestim  = %<estimatedetail.yestim>%
AND   estimatedetail.nestim  = %<estimatedetail.nestim>%
AND   estimatedetail.idgroup = %<estimatedetail.idgroup>%
]{I}  = 1)
OR
%<estimatedetail.idaccmotiveannulment>%=
&<estimatedetail.idaccmotiveannulment>&')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM012','1','U','estimatedetail','S','S','S','N','N',{ts '2009-09-14 16:20:28.250'},'SARA','Per il dettaglio #%<estimatedetail.rownum>% del contratto attivo intracomunitario %<estimatedetail.idestimkind>% n° %<estimatedetail.nestim>% del %<estimatedetail.yestim>% , l''importo dell''IVA deve essere pari a 0.','N','[SELECT ISNULL(flagintracom,''N'') FROM estimate
WHERE 
idestimkind = %<estimatedetail.idestimkind>% AND
yestim = %<estimatedetail.yestim>% AND
nestim = %<estimatedetail.nestim>%]{C}
= ''N''
OR
%<estimatedetail.tax>% = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA012','1','U','estimatedetail','S','S','S','N','N',{ts '2007-11-21 16:52:04.820'},'SA','L''importo dell''IVA sul dettaglio  n. %<estimatedetail.rownum>% dell''ordine di tipo  %<estimatedetail.idestimkind>%,  %<estimatedetail.yestim>% / %<estimatedetail.nestim>%, deve essere pari a zero perchè il contratto è in valuta diversa dall''Euro.','N','(
ISNULL(%<estimatedetail.tax>%, 0) = 
ISNULL(&<estimatedetail.tax>&, 0) 
)

OR

(
 [SELECT codecurrency FROM estimate 
join currency on currency.idcurrency=estimate.idcurrency
WHERE 
 idestimkind = %<estimatedetail.idestimkind>%   and
 yestim = %<estimatedetail.yestim>%  and
 nestim =  %<estimatedetail.nestim>% ]{C} = ''EUR''
)

OR

(
 ISNULL(%<estimatedetail.tax>%, 0) = 0 
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR006','1','U','estimatedetail','S','S','S','N','N',{ts '2009-03-28 12:47:33.707'},'SA','Il contratto attivo %<estimateview.estimkind>% n. %<estimateview.nestim>% / %<estimateview.yestim>% non può essere modificato in quanto supera il limite di 5.000 ','N','[SELECT ISNULL(SUM(iva_euro),0) + ISNULL(SUM(taxable_euro),0)
FROM estimatedetailview
WHERE estimatedetailview.idestimkind = %<estimate.idestimkind>%
AND estimatedetailview.yestim = %<estimate.yestim>%
AND estimatedetailview.nestim = %<estimate.nestim>%
AND stop IS NULL]{V} <= 5000
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''contrattivogrande''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL
OR
(isnull(%<estimatedetail.idinc_iva>%,0)<>0
 and isnull(&<estimatedetail.idinc_iva>&,0)=0 )
OR
(isnull(%<estimatedetail.idinc_taxable>%,0)<>0 
 and isnull(&<estimatedetail.idinc_taxable>&,0)=0   )

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR006','2','U','estimatedetail','S','S','S','N','N',{ts '2009-03-28 12:48:00.783'},'SA','Il contratto attivo %<estimateview.estimkind>% n. %<estimateview.nestim>% / %<estimateview.yestim>% non può essere modificato in quanto supera il limite di 5.000 ','S','[SELECT ISNULL(SUM(iva_euro),0) + ISNULL(SUM(taxable_euro),0)
FROM estimatedetailview
WHERE estimatedetailview.idestimkind = %<estimate.idestimkind>%
AND estimatedetailview.yestim = %<estimate.yestim>%
AND estimatedetailview.nestim = %<estimate.nestim>%
AND stop IS NULL]{V} <= 5000
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''contrattivogrande''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL
OR
(isnull(%<estimatedetail.idinc_iva>%,0)<>0
 and isnull(&<estimatedetail.idinc_iva>&,0)=0 )
OR
(isnull(%<estimatedetail.idinc_taxable>%,0)<>0 
 and isnull(&<estimatedetail.idinc_taxable>&,0)=0   )

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','1','U','estimatedetail','S','S','S','N','N',{ts '2009-03-28 12:53:18.690'},'SA','Le regole di sicurezza vietano la modifica di dettagli di contratti attivi','S','(

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename IN (''contrattivo'', ''contrattivogrande'')
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

)

OR
%<sys_idflowchart>% IS NULL
OR
(
isnull(%<estimatedetail.idinc_iva>%,0)<>0
 AND isnull(&<estimatedetail.idinc_iva>&,0)=0 )
OR
( isnull(%<estimatedetail.idinc_taxable>%,0)<>0 
AND isnull(&<estimatedetail.idinc_taxable>&,0)=0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','2','U','estimatedetail','S','S','S','N','N',{ts '2009-03-24 15:57:28.970'},'NINO','Le regole di sicurezza vietano la modifica di dettagli di contratti attivi','S','(
isnull(%<estimatedetail.idinc_iva>%,0)=isnull(&<estimatedetail.idinc_iva>&,0)
AND
isnull(%<estimatedetail.idinc_taxable>%,0)=isnull(&<estimatedetail.idinc_taxable>&,0)
)
OR
(
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename IN (''contcontratti'')
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
)

OR
%<sys_idflowchart>% IS NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM005','1','U','estimatedetail','S','S','S','N','N',{ts '2007-02-23 23:04:19.060'},'''NINO''','Il dettaglio sarà collegato in modo improprio al movimento finanziario.','N','(
[SELECT COUNT(*) from incomeestimate where
 idinc=%<estimatedetail.idinc_iva>%]{I}=1
)
OR
(
%<estimatedetail.idinc_iva>% is null
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM005','2','U','estimatedetail','S','S','S','N','N',{ts '2007-02-23 23:04:41.653'},'''NINO''','Il dettaglio sarà collegato in modo improprio al movimento finanziario.','N','(
[SELECT COUNT(*) from incomeestimate where
 idinc=%<estimatedetail.idinc_taxable>%]{I}=1
)
OR
(
%<estimatedetail.idinc_taxable>% is null
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','estimatekind','S','S','S','N','N',{ts '2006-09-19 13:16:48.517'},'Software and more','Cancellazione Impossibile! Esistono contratti collegati al tipo di contratto %<estimatekind.description>%','S','[SELECT COUNT(*)  
FROM estimate
WHERE idestimkind = %<estimatekind.idestimkind>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','estimatekind','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del tipo contratto già esistente','S','[SELECT COUNT(*) 
FROM estimatekind
WHERE description = %<estimatekind.description>%]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','estimatekind','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del tipo contratto già esistente','S','[SELECT COUNT(*) 
FROM estimatekind
WHERE idestimkind <> %<estimatekind.idestimkind>%
and description = %<estimatekind.description>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS007','1','D','exhibitedcud','S','S','S','N','N',{ts '2007-03-09 11:06:52.407'},'''SA''','Il CUD %<exhibitedcud.idexhibitedcud>% non può essere cancellato in quanto il cedolino di conguaglio per l''anno fiscale %<exhibitedcud.fiscalyear>% è stato già calcolato. Si consiglia di  rieseguire il calcolo se non è stato già erogato. ','S','[SELECT COUNT(*) FROM payroll
WHERE idcon = %<exhibitedcud.idcon>%
AND flagbalance  = ''S''
AND flagcomputed = ''S''
AND fiscalyear = %<exhibitedcud.fiscalyear>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS007','1','I','exhibitedcud','S','S','S','N','N',{ts '2007-03-09 11:06:58.640'},'''SA''','Il CUD %<exhibitedcud.idexhibitedcud>% non può essere inserito in quanto il cedolino di conguaglio per l''anno fiscale %<exhibitedcud.fiscalyear>% è stato già calcolato. Si consiglia di  rieseguire il calcolo se non è stato già erogato.  ','S','[SELECT COUNT(*) FROM payroll
WHERE idcon = %<exhibitedcud.idcon>%
AND flagbalance  = ''S''
AND flagcomputed = ''S''
AND fiscalyear = %<exhibitedcud.fiscalyear>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS024','1','I','exhibitedcud','S','S','S','N','N',{ts '2008-07-16 16:21:57.767'},'NINO','Il cedolino di conguaglio del contratto %<exhibitedcudview.nlinkedcon>% / %<exhibitedcudview.ylinkedcon>% non è stato trasmesso.','N','-- Il CUD non è associato ad alcun contratto
%<exhibitedcud.idlinkedcon>% IS NULL
OR
-- Cedolino di conguaglio già trasmesso
[EXECUTE compute_parasubcontractcommunicated
%<exhibitedcud.fiscalyear>%, 
%<exhibitedcud.idlinkedcon>%,
%<exhibitedcud.idlinkeddbdepartment>%,
@outvar output]{C} = ''S''

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS027','1','I','exhibitedcud','S','S','S','N','N',{ts '2008-10-17 13:13:32.953'},'NINO','L''aliquota marginale selezionata è troppo bassa rispetto ai redditi presentati dal percipiente.','N','[SELECT isnull(applybrackets,''S'') from 	parasubcontractyear
	where idcon=%<exhibitedcud.idcon>%
		and ayear=%<exhibitedcud.fiscalyear>%
]{C}=''S''
OR
[SELECT isnull(highertax,0) from 	parasubcontractyear
	where idcon=%<exhibitedcud.idcon>%
		and ayear=%<exhibitedcud.fiscalyear>%
]{N}=0
OR
[SELECT isnull(highertax,0) from 	parasubcontractyear
	where idcon=%<exhibitedcud.idcon>%
		and ayear=%<exhibitedcud.fiscalyear>%
]{N} >=
isnull([select max(TB.employrate) from 
 parasubcontract P 	
	join  servicetax ST on ST.idser= P.idser
	join tax T on T.taxcode=ST.taxcode
	join taxratestart TS on TS.taxcode=T.taxcode
	join taxratebracket TB on TB.taxcode=T.taxcode

where 
	P.idcon=%<exhibitedcud.idcon>% and
 	T.taxkind=1 and T.geoappliance is null and
	TS.start <= CONVERT(datetime,''31-12-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)
	and	
	isnull(TB.minamount,0)<=
		ISNULL([SELECT SUM(feegross)  from payroll
			where idcon=%<exhibitedcud.idcon>%
			and fiscalyear=%<exhibitedcud.fiscalyear>%
			and flagbalance=''N''
			and flagcomputed=''S''
		]{V} ,0)
		+
	 	    ISNULL([(SELECT SUM(taxablegross) from exhibitedcud 
			where idcon=%<exhibitedcud.idcon>%
			and fiscalyear=%<exhibitedcud.fiscalyear>%)]{V}
			,0)
		
	and TB.idtaxratestart= 
		(SELECT max(idtaxratestart) from taxratestart  TS2 where
			TS2.taxcode=TS.taxcode and
			TS2.start <= CONVERT(datetime,''31-12-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)

		)
	]{N}
,0)



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','I','exhibitedcud','S','S','S','N','N',{ts '2008-09-30 16:09:15.327'},'SA','Non si può inserire più di una volta lo stesso CUD in un contratto.','N','%<exhibitedcud.idlinkedcon>% is null

OR

[(select count(*)  from exhibitedcud  
where fiscalyear=%<exhibitedcud.fiscalyear>% 
and idcon = %<exhibitedcud.idcon>%
and idlinkedcon=%<exhibitedcud.idlinkedcon>%)]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','I','exhibitedcud','S','S','S','N','N',{ts '2010-06-11 13:25:07.377'},'SARA','CUD non associato a nessun contratto. ','N','%<exhibitedcud.idlinkedcon>% is not null
OR
(
(%<exhibitedcud.cfotherdeputy>% is not null)
AND
(%<exhibitedcud.cfotherdeputy>% <>[(select cf  from license)]{C} )
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS007','1','U','exhibitedcud','S','S','S','N','N',{ts '2007-03-09 11:07:05.360'},'''SA''','Il CUD %<exhibitedcud.idexhibitedcud>% non può essere modificato in quanto il cedolino di conguaglio per l''anno fiscale %<exhibitedcud.fiscalyear>% è stato già calcolato.  Si consiglia di  rieseguire il calcolo se non è stato già erogato.  ','S','[SELECT COUNT(*) FROM payroll
WHERE idcon = %<exhibitedcud.idcon>%
AND flagbalance  = ''S''
AND flagcomputed = ''S''
AND fiscalyear = %<exhibitedcud.fiscalyear>%]{I} = 0
AND
[SELECT COUNT(*) FROM payroll
WHERE idcon = %<exhibitedcud.idcon>%
AND flagbalance  = ''S''
AND flagcomputed = ''S''
AND fiscalyear = &<exhibitedcud.fiscalyear>&]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS024','1','U','exhibitedcud','S','S','S','N','N',{ts '2008-07-16 16:53:13.000'},'NINO','Il cedolino di conguaglio del contratto %<exhibitedcudview.nlinkedcon>% / %<exhibitedcudview.ylinkedcon>% non è stato trasmesso.','N','-- Il CUD non è associato ad alcun contratto
%<exhibitedcud.idlinkedcon>% IS NULL
OR
-- Non ho cambiato il contratto precedentemente salvato
ISNULL(&<exhibitedcud.idlinkedcon>&, '''') = ISNULL(%<exhibitedcud.idlinkedcon>%, '''')
OR
-- Cedolino di conguaglio già trasmesso
[EXECUTE compute_parasubcontractcommunicated
%<exhibitedcud.fiscalyear>%, 
%<exhibitedcud.idlinkedcon>%,
%<exhibitedcud.idlinkeddbdepartment>%,
@outvar output]{C} = ''S''

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS027','1','U','exhibitedcud','S','S','S','N','N',{ts '2008-10-17 13:13:18.593'},'NINO','L''aliquota marginale selezionata è troppo bassa rispetto ai redditi presentati dal percipiente.','N','%<exhibitedcud.taxablegross>%=&<exhibitedcud.taxablegross>&

OR
[SELECT isnull(applybrackets,''S'') from 	parasubcontractyear
	where idcon=%<exhibitedcud.idcon>%
		and ayear=%<exhibitedcud.fiscalyear>%
]{C}=''S''
OR
[SELECT isnull(highertax,0) from 	parasubcontractyear
	where idcon=%<exhibitedcud.idcon>%
		and ayear=%<exhibitedcud.fiscalyear>%
]{N}=0
OR
[SELECT isnull(highertax,0) from 	parasubcontractyear
	where idcon=%<exhibitedcud.idcon>%
		and ayear=%<exhibitedcud.fiscalyear>%
]{N} >=
isnull([select max(TB.employrate) from 
 parasubcontract P 	
	join  servicetax ST on ST.idser= P.idser
	join tax T on T.taxcode=ST.taxcode
	join taxratestart TS on TS.taxcode=T.taxcode
	join taxratebracket TB on TB.taxcode=T.taxcode

where 
	P.idcon=%<exhibitedcud.idcon>% and
 	T.taxkind=1 and T.geoappliance is null and
	TS.start <= CONVERT(datetime,''31-12-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)  and	
	isnull(TB.minamount,0)<=
		ISNULL([SELECT SUM(feegross)  from payroll
			where idcon=%<exhibitedcud.idcon>%
			and fiscalyear=%<exhibitedcud.fiscalyear>%
			and flagbalance=''N''
			and flagcomputed=''S''
		]{V} ,0)
		+
	 	    ISNULL([(SELECT SUM(taxablegross) from exhibitedcud 
			where idcon=%<exhibitedcud.idcon>%
			and fiscalyear=%<exhibitedcud.fiscalyear>%)]{V}
			,0)
		
	and TB.idtaxratestart= 
		(SELECT max(idtaxratestart) from taxratestart  TS2 where
			TS2.taxcode=TS.taxcode and
			TS2.start <= CONVERT(datetime,''31-12-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)  
		)
	]{N}
,0)


')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','U','exhibitedcud','S','S','S','N','N',{ts '2010-06-11 13:24:57.017'},'SARA','CUD non associato a nessun contratto. ','N','%<exhibitedcud.idlinkedcon>% is not null
OR
(
(%<exhibitedcud.cfotherdeputy>% is not null)
AND
(%<exhibitedcud.cfotherdeputy>% <>[(select cf  from license)]{C} )
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','D','expense','S','S','S','N','N',{ts '2007-12-15 09:48:06.703'},'NINO','Il movimento di spesa %<expenseview.phase>% n. %<expenseview.nmov>% / %<expenseview.ymov>% non può essere cancellato. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA030','1','D','expense','S','S','S','N','N',{ts '2009-02-17 12:27:36.187'},'NINO','Cancellando  il movimento di spesa si determinerà un importo incoerente nella liquidazione iva','S','[select count(*) from ivapayexpense where 
 idexp=%<expense.idexp>%
]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM013','1','D','expense','S','S','S','N','N',{ts '2008-10-09 11:50:45.050'},'NINO','Il movimento di spesa ha movimenti automatici di entrata collegati. ','N','[SELECT COUNT(*) 
from income 
where idpayment = %<expense.idexp>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM013','2','D','expense','S','S','S','N','N',{ts '2008-10-09 11:50:50.113'},'NINO','Il movimento di spesa ha movimenti automatici di spesa collegati. ','N','[SELECT count(*) 
from expense 
where idpayment = %<expense.idexp>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM013','3','D','expense','S','S','S','N','N',{ts '2008-10-09 11:50:54.910'},'NINO','Il movimento di spesa ha variazioni di spesa collegate. ','N','[SELECT count(*) 
from expensevar 
where idpayment = %<expense.idexp>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM013','4','D','expense','S','S','S','N','N',{ts '2008-10-09 11:53:40.067'},'NINO','Il movimento di spesa si riferisce ad una correzione di  ritenuta ','N','[SELECT count(*) 
from expensetaxcorrige 
where linkedidexp = %<expense.idexp>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN006','1','D','expense','S','S','S','N','N',{ts '2007-09-05 09:48:45.687'},'NINO','Il movimento di spesa %<expense.nmov>% del %<ymov>% non può essere cancellato senza cancellare anche i movimenti padri in quanto liquida una ritenuta.','N','--post
([SELECT COUNT(*) 
FROM expense 
WHERE idexp = %<expense.parentidexp>%
AND autokind = 2]{I} = 0)
OR
(%<expense.parentidexp>% IS NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN006','2','D','expense','S','S','S','N','N',{ts '2007-09-05 09:48:55.127'},'NINO','Cancellando il movimento di spesa %<expense.nmov>% del  %<expense.ymov>% verrà cancellata anche la liquidazione ritenuta','S','(%<expense.parentidexp>% is not null)
or
(%<expense.autokind>% IS NULL)
or
(%<expense.autokind>% <> 6)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN006','3','D','expense','S','S','S','N','N',{ts '2007-09-05 09:49:02.967'},'NINO','Cancellando il movimento di spesa %<expense.nmov>% del %<expense.ymov>% verrà cancellata anche la liquidazione ritenuta','S','(%<expense.parentidexp>% IS NULL)
or
(%<expense.autokind>% IS NULL)
or
(%<expense.autokind>% <> 2) 
or
(
[ISNULL(
	(SELECT autokind FROM expense WHERE idexp = %<expense.parentidexp>%),0)]{I}
 = 2)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','1','D','expense','S','S','S','N','N',{ts '2010-11-05 15:35:50.390'},'sa','L''utente non è abilitato alla cancellazione di fasi finanziarie precedenti alla fase dell''Impengo giuridico.','N','%<expense.nphase>% >= %<sys_appropriationphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''pre_impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','2','D','expense','S','S','S','N','N',{ts '2010-11-05 15:37:14.017'},'sa','L''utente non è abilitato alla cancellazione di fasi finanziarie successive alla fase dell''Impengo giuridico.','N','%<expense.nphase>% <= %<sys_appropriationphase>%

OR 

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''post_impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL






')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','3','D','expense','S','S','S','N','N',{ts '2010-11-05 16:03:36.170'},'sa','L''utente non è abilitato alla cancellazione di fasi finanziarie equivalenti all''Impengo giuridico.','N','%<expense.nphase>% <> %<sys_appropriationphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','expense','S','S','S','N','N',{ts '2007-09-13 11:55:27.313'},'NINO','Il movimento di spesa %<expensephase.description>%  %<ymov>%  %<nmov>% non può essere cancellato in quanto esistono variazioni di movimento di spesa che lo referenziano.','N','--post
[(SELECT count(*) 
from expensevar 
where idexp = %<expense.idexp>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','expense','S','S','S','N','N',{ts '2007-09-13 11:55:33.703'},'NINO','Il movimento di spesa %<expensephase.description>% %<ymov>% %<nmov>% non può essere cancellato in quanto esistono movimenti di spesa della fase successiva che lo referenziano.','N','--post
[(SELECT count(*) 
from expense 
where parentidexp = %<expense.idexp>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','expense','S','S','S','N','N',{ts '2007-09-05 09:49:31.717'},'NINO','Il movimento di spesa  num. %<expense.nmov>%  del %<expense.ymov>% non può essere cancellato perchè è collegato ad una operazione del Fondo Economale.','S','[select count(*) 
from pettycashoperation
where idexp=%<expense.idexp>%]{I}
=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','5','D','expense','S','S','S','N','N',{ts '2007-08-22 16:40:02.000'},'NINO','Cancellazione parziale movimento  %<expense.ymov>% / %<expense.nmov>% Errore del programma.','N','[select count(*) 
from expenselast
where idexp=%<expense.idexp>%]{I}
=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','6','D','expense','S','S','S','N','N',{ts '2010-09-29 11:07:47.703'},'sara','Il movimento di spesa  num. %<expense.nmov>%  del %<expense.ymov>% non può essere cancellato perchè è collegato ad una riga di Riepilogo CSA','S','[select count(*) 
from csa_importriep
where idexp=%<expense.idexp>%]{I}
=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','7','D','expense','S','S','S','N','N',{ts '2010-09-29 11:08:36.343'},'sara','Il movimento di spesa  num. %<expense.nmov>%  del %<expense.ymov>% non può essere cancellato perchè è collegato ad una riga di Versamento CSA','S','[select count(*) 
from csa_importver
where idexp_cost =%<expense.idexp>%]{I}
=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','8','D','expense','S','S','S','N','N',{ts '2010-09-29 11:10:22.967'},'sara','Il movimento di spesa  num. %<expense.nmov>%  del %<expense.ymov>% non può essere cancellato perchè è collegato ad una riga di Configurazione Contratto CSA','S','[select count(*) 
from csa_contract
where idexp_main =%<expense.idexp>%]{I}
=0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','9','D','expense','S','S','S','N','N',{ts '2010-09-29 11:11:25.627'},'sara','Il movimento di spesa  num. %<expense.nmov>%  del %<expense.ymov>% non può essere cancellato perchè è collegato ad una riga di Configurazione Contributo  CSA','S','[select count(*) 
from csa_contracttax
where idexp =%<expense.idexp>%]{I}
=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF003','1','D','expense','S','S','S','N','N',{ts '2007-12-05 15:44:01.687'},'PINO','Non possono essere rimossi i pagamenti inerenti le partite di giro perché sono stati liquidati alcuni saldi/pagamenti della missione','S','
[SELECT ISNULL(SUM(ET.curramount),0) 
FROM expensetotal ET
JOIN expenselink EL1 on EL1.idchild=ET.idexp
join expenseitineration IE1 on IE1.idexp=EL1.idparent
join expenseitineration IE2 on IE2.iditineration =IE1.iditineration 
join  expenselink EL2 on IE2.idexp=EL2.idparent
WHERE ET.ayear = %<sys_esercizio>% AND
      EL2.idchild= %<expense.idexp>% AND
      IE2.movkind=4 AND
      IE1.movkind=5]
{V}
=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR025','1','I','expense','S','S','S','N','N',{ts '2009-01-10 15:26:45.890'},'SARA','Operazione non consentita per l''anagrafica %<registry.title>% perchè di tipo Anagrafica non utilizzabile.','S','(SELECT registryclass.idregistryclass FROM registry 
     JOIN registryclass ON registry.idregistryclass = registryclass.idregistryclass
WHERE registry.idreg =%<expense.idreg>%  )
<> ''25''  
-- anagrafiche non utilizzabili')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','I','expense','S','S','S','N','N',{ts '2007-12-15 09:47:56.530'},'NINO','Il movimento di spesa %<expenseview.phase>% n. %<expenseview.nmov>% / %<expenseview.ymov>% non può essere cancellato. Esercizio  %<esercizio>% chiuso','N','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN005','1','I','expense','S','S','S','N','N',{ts '2008-03-21 13:14:30.467'},'SA','Non sono state effettuate sul movimento %<expense.nmov>% del %<expense.ymov>% tutte le classificazioni obblligatorie','N','--post
(
[SELECT COUNT(*) FROM sortingkind T
WHERE T.nphaseexpense = %<expense.nphase>%
AND (T.flag&1)<>0 
AND %<sys_esercizio>% between ISNULL(T.start,1900) AND ISNULL(T.stop,2099)  
AND
(
	ISNULL(
		(SELECT ISNULL(SUM(amount),0)
		FROM expensesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind= T.idsorkind
		AND I.idexp= %<expense.idexp>%
		AND ayear = %<sys_esercizio>%)
	,0)
	<
	[SELECT curramount FROM expensetotal
	WHERE ayear = %<sys_esercizio>%  
	AND   idexp= %<expense.idexp>%]{V}
)
]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO022','1','I','expense','S','S','S','N','N',{ts '2007-09-06 10:27:13.967'},'NINO','L''importo attuale dei movimenti di spesa della fase %<expensephase.description>% è maggiore dell''importo attuale del movimento della fase precedente','N','--post
(%<expense.nphase>% = 1)
or 
[SELECT ISNULL(available, 0) 
from expensetotal 
where idexp = %<expense.parentidexp>% 
and ayear = %<sys_esercizio>%]{V} 
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = %<expense.parentidexp>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(c.curramount)
	FROM pettycashexpense a
	JOIN expense b
	ON a.idexp = b.idexp
	JOIN expensetotal c
	ON b.idexp = c.idexp
	AND a.yoperation = c.ayear
	WHERE b.parentidexp = %<expense.parentidexp>%]{V}
,0)
>= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM002','1','I','expense','S','S','S','N','N',{ts '2007-10-09 10:42:24.327'},'NINO','Il percipiente è assente','S','%<sys_expenseregphase>%<>%<expense.nphase>%
or  %<expense.idreg>% is not NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM008','1','I','expense','S','S','S','N','N',{ts '2007-08-23 08:38:05.780'},'NINO','Non è consentito immettere movimenti di spesa di competenza di esercizi diversi dall''anno corrente.','S','%<expense.ymov>% = %<sys_esercizio>%
OR 
[SELECT MIN(ayear) 
FROM accountingyear]{I} = %<sys_esercizio>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM009','1','I','expense','S','S','S','N','N',{ts '2007-09-06 10:28:41.517'},'NINO','E'' già presente un documento del percipiente %<registry.title>% con il numero %<expense.doc>% emesso in data %<expense.docdate>%','S','[SELECT count(*) 
from expense 
where nphase = %<expense.nphase>% 
and idreg = %<expense.idreg>% 
and doc = %<expense.doc>% 
and docdate = %<expense.docdate>% 
]{I} = 0
OR
(%<expense.doc>% IS NULL)
OR
(%<expense.docdate>% IS NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM023','1','I','expense','S','S','S','N','N',{ts '2010-03-17 10:13:50.470'},'SARA','Non possono essere generati nuovi automatismi sul movimento di spesa in quanto ne esistono di precedenti','S','([SELECT COUNT(*) FROM income
WHERE (idpayment = %<expense.idpayment>%) 
AND (autokind = %<expense.autokind>%)]{I} = 0)
AND
([SELECT COUNT(*) FROM expense
WHERE (idpayment = %<expense.idpayment>%)
AND (autokind = %<expense.autokind>%)]{I} = 0)

OR

(
[(SELECT autokind FROM expense
WHERE idexp =  %<expense.parentidexp>%)]{I} 
IS NOT NULL 
AND 
  %<expense.nphase>% > 1 
)

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM039','1','I','expense','S','S','S','N','N',{ts '2007-10-13 19:47:48.530'},'NINO','Il responsabile scelto: %<expenseview.manager>%, è differente da quello dell''UPB : %<expenseview.upb>%.','N','(ISNULL([SELECT idman
FROM upb 
WHERE idupb = 
		[SELECT idupb 
		FROM expenseyear 
		WHERE idexp = %<expense.idexp>% 
		AND ayear = %<sys_esercizio>%]{C} 
	   ]{I},0)
= 0)
OR
(ISNULL(%<expense.idman>%,0) = (ISNULL([SELECT idman
FROM upb 
WHERE idupb = 
		[SELECT idupb 
		FROM expenseyear 
		WHERE idexp = %<expense.idexp>% 
		AND ayear = %<sys_esercizio>%]{C} 
	   ]{I},0)))
OR
ISNULL(%<expense.idman>%,0) =0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM061','1','I','expense','N','N','N','N','N',{ts '2007-12-05 16:56:40.090'},'SARA','La competenza dell''automatismo è diversa dalla competenza del movimento di spesa a cui si sta collegando l''automatismo.','N','%<expense.nphase>% <> %<sys_maxexpensephase>%
or isnull(%<expense.autokind>%,0) <> 4
or %<expense.idpayment>% is null
or 
(ISNULL([(select flag from expensetotal 
 where expensetotal.idexp = %<expense.idexp>%
)]{I},0) & 1)
=
(ISNULL([(select flag from expensetotal 
 where expensetotal.idexp = %<expense.idpayment>%
)]{I},0) & 1)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM066','1','I','expense','S','S','S','N','N',{ts '2013-03-22 14:34:42.007'},'sa','Deve essere ricalcolata la situazione finanziaria effettiva nell''esercizio precedente poiché non risulta allineata con i movimenti finanziari effettivamente inseriti','S','(%<expense.nphase>% < %<sys_maxexpensephase>%)
OR
([(SELECT COUNT(*) 
  FROM currentcashtotal 
  WHERE ayear = (%<sys_esercizio>% - 1))]{I} = 0)
OR
([SELECT  ISNULL(startfloatfund,0) 
   FROM surplus WHERE ayear = %<sys_esercizio>%]{N}
= 
[SELECT ISNULL(currentfloatfund,0) 
   FROM currentcashtotal 
  WHERE ayear = (%<sys_esercizio>% - 1)]{N}
)
OR
(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = (%<sys_esercizio>%-1)]{I}
,0) & 0x0F)<4
OR
(ISNULL(
	[select locked from surplus where ayear = (%<sys_esercizio>% - 1)]{C},
	''N'') = ''S''
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM073','1','I','expense','S','S','S','N','N',{ts '2009-01-20 11:59:45.103'},'NINO','E'' necessario che il percipiente  %<registry.title>%  abbia un indirizzo valido.','S','[select count(*) from registryaddress 
	join address on registryaddress.idaddresskind=address.idaddress 
	where isnull(registryaddress.active,''S'')=''S'' and
		stop is null and
		codeaddress in (''07_SW_AVV'',''07_SW_DEF'')
		and idreg=%<expense.idreg>%
]{I}>0

OR

%<expense.idreg>% is null

OR

[select idregistryclass from registry
	where  idreg=%<expense.idreg>%
]{C}=''24''

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM073','2','I','expense','S','S','S','N','N',{ts '2010-03-08 14:40:39.407'},'SARA','E'' necessario che il percipiente  %<registry.title>%  abbia un indirizzo con CAP valido.','S','%<expense.idreg>% is null
OR
[execute verify_cap %<expense.idreg>%,''07_SW_AVV'',''07_SW_DEF'',
%<expense.adate>%,@outvar output]{I}=0 
OR
[select idregistryclass from registry
	where  idreg=%<expense.idreg>%
]{C}=''24''

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM076','1','I','expense','S','S','S','N','N',{ts '2008-11-25 14:33:56.453'},'NINO','Errore nell''applicazione, dati incoerenti nella gerarchia dei movimenti. (Spesa/Percipiente)','N','%<expense.nphase>% <= %<sys_expenseregphase>%

OR
%<expense.idreg>% =
[(SELECT idreg from expense where idexp=%<expense.parentidexp>%)]{I}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM087','1','I','expense','S','S','S','N','N',{ts '2010-03-25 10:14:52.430'},'SARA','Il movimento di spesa %<expenseview.phase>% n. %<expenseview.nmov>% / %<expenseview.ymov>% ha una data contabile anteriore rispetto alle fasi precedenti.','N','[SELECT COUNT(*) 
FROM expense 
join expenselink 
	ON expense.idexp= expenselink.idparent
WHERE expenselink.idchild =%<expense.idexp>%
AND   expense.adate > %<expense.adate>%
]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM090','1','I','expense','S','S','S','N','N',{ts '2011-04-20 12:19:21.203'},'sa','Non è stato attribuito sul movimento di spesa equivalente all''impegno il Codice CUP','N','%<expense.nphase>% <> (SELECT appropriationphasecode FROM config
			     WHERE ayear = %<sys_esercizio>%)
OR

%<expense.cupcode>% IS NOT NULL

OR

[SELECT cupcode FROM upb WHERE idupb = [SELECT idupb FROM expenseyear
						WHERE idexp = %<expense.idexp>%
						 AND ayear = %<sys_esercizio>%
						]{I}
]{C} IS NOT NULL


OR 

[SELECT cupcode FROM  finlast WHERE idfin =
			[SELECT idfin FROM expenseyear
			 WHERE idexp =%<expense.idexp>%
 			 AND ayear = %<sys_esercizio>%
			]{I}
]{C} IS NOT NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM090','2','I','expense','S','S','S','N','N',{ts '2011-04-20 12:20:38.953'},'sa','Non è stato attribuito sul movimento di spesa equivalente all''impegno il Codice CIG','N','%<expense.nphase>% <> (SELECT appropriationphasecode FROM config
			     WHERE ayear = %<sys_esercizio>%)

OR

%<expense.cigcode>% IS NOT NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM102','1','I','expense','S','S','S','N','N',{ts '2012-07-18 16:44:26.140'},'sa','E'' necessario indicare il CIG in fase di %<expensephase.description>%  oppure nel Contratto Passivo, altrimenti saranno emessi mandati senza CIG.','N','%<expense.nphase>% <> (SELECT expensephase FROM config
			     WHERE ayear = %<sys_esercizio>%)

OR

%<expense.cigcode>% IS NOT NULL

OR

[SELECT count( cigcode) from mandatedetail 
	where mandatedetail.idexp_iva = %<expense.idexp>%
		OR mandatedetail.idexp_taxable = %<expense.idexp>%
]{I} =0

OR

[SELECT COUNT(mandate.cigcode) 
FROM mandate
JOIN mandatedetail
	ON	mandate.idmankind = mandatedetail.idmankind 
	AND mandate.yman = mandatedetail.yman 
	AND mandate.nman = mandatedetail.nman
 WHERE mandatedetail.idexp_iva = %<expense.idexp>%
		OR mandatedetail.idexp_taxable = %<expense.idexp>%
]{I} <>0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM109','1','I','expense','S','S','S','N','N',{ts '2013-02-07 13:09:09.903'},'sa','E'' necessario attribuire un Finanziamento al movimento di spesa.','N','ISNULL(
		[SELECT SUM(amount)
		FROM underwritingappropriation 
		WHERE idexp= %<expense.idexp>%]{V}
	,0)
+
ISNULL (   [select SUM(amount) from expensevar where
		idexp=%<expense.idexp>%
		and
		idunderwriting is not null
                 ]{V},0)
	=
	ISNULL([SELECT curramount FROM expensetotal
	WHERE ayear = %<sys_esercizio>%  
	AND   idexp= %<expense.idexp>%]{V},0)

OR 

%<expense.nphase>% <> %<sys_expensefinphase>%

OR 
[SELECT assured 
FROM upb  
WHERE idupb = ([select idupb 
		from expenseyear
		where 	ayear = %<sys_esercizio>%
		and idexp=%<expense.idexp>%]{C})]{C} =''S'' 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS003','1','I','expense','S','S','S','N','N',{ts '2007-12-06 10:40:20.327'},'SARA','L''importo lordo del contratto occasionale è minore dei movimenti di spesa che lo contabilizzano','N','--post
ISNULL(
[SELECT ycon 
	from expensecasualcontract where idexp = %<expense.idexp>%]{I}
,0)=0
OR
(
[SELECT ISNULL(residual,0)
FROM casualcontractresidual
WHERE ycon =
	[SELECT ycon from expensecasualcontract where idexp = %<expense.idexp>%]{I}
AND ncon =
	[SELECT ncon from expensecasualcontract where idexp = %<expense.idexp>%]{I}
]{V}
>=0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS006','1','I','expense','S','S','S','N','N',{ts '2009-10-20 14:12:45.953'},'SARA','Esistono altri contratti occasionali dello stesso percipiente, per i quali "l''imponibile da altri Enti"  dichiarato risulta più alto di quello del contratto che si sta attualmente pagando. Verificare il corretto importo di tale imponibile per evitare errori nell''applicazione della quota esente previdenziale.
La del menu Stampe > Esportazione > Compensi > Contratti Occasionali. consente di controllare l''importo dei contratti da altri committenti indicato in altri contratti.','N','--post
(%<expense.nphase>%  <  %<sys_maxexpensephase>%)
OR
[SELECT COUNT(*) from expensecasualcontract 
    join expenselink on expenselink.idparent=expensecasualcontract.idexp
	where expenselink.idchild= %<expense.idexp>% 
]{I}=0
OR
[SELECT COUNT(*) from tax T
 	 join servicetax ST on T.taxcode=ST.taxcode
	 join service S ON ST.idser=S.idser
	join motive770service MS on MS.idser= S.idser
             JOIN casualcontract C on C.idser=S.idser
	JOIN expensecasualcontract EC on EC.ycon= C.ycon and EC.ncon=C.ncon
	 join expenselink EL  on EL.idparent=EC.idexp 		
	WHERE  EL.idchild= %<expense.idexp>% 
		AND MS.ayear=%<sys_esercizio>%
		AND  MS.idmot IN (''C'',''V'',''M'')
]{I}=0
OR
([SELECT ISNULL(CY.taxableotheragency,0)  from casualcontractyear CY
   join expensecasualcontract EC on  EC.ycon= CY.ycon and EC.ncon=CY.ncon
   join expenselink EL on EL.idparent=EC.idexp
   where EL.idchild= %<expense.idexp>% 
   and CY.ayear =%<sys_esercizio>%
]{N} 
=
[execute max_taxableotheragency %<sys_esercizio>%,
	 %<expense.idreg>% ,
	@outvar output]{N}
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS013','1','I','expense','S','S','S','N','N',{ts '2007-09-01 11:41:03.217'},'NINO','L''importo del movimento di spesa deve essere identico a quello dell''impegno che contabilizza il cedolino','N','(
[SELECT COUNT(*)
FROM expensepayroll EP
 join expenselink EL ON EP.idexp=EL.idparent 
 WHERE EL.idchild = %<expense.idexp>%
]{I} = 0
)
OR
(
[select amount from expenseyear EY 
	JOIN expense E on E.idexp=EY.idexp and
			   E.ymov=EY.ayear
where
     EY.idexp=  %<expense.idexp>% 
]{V}
+
ISNULL(
[SELECT SUM(amount) FROM expensevar
WHERE  idexp = %<expense.idexp>%
	AND ISNULL(autokind,0) <> 4
]{V},0)

 =
[SELECT EY.amount FROM expenseyear EY
   JOIN expense E on E.idexp=EY.idexp and
			   E.ymov=EY.ayear
   JOIN expenselink EL ON EY.idexp=EL.idparent
      
WHERE  EL.nlevel=%<sys_itinerationphase>%
	and EL.idchild = %<expense.idexp>%
]{V}
+
ISNULL(
[SELECT SUM(EV.amount) FROM expensevar EV
   JOIN expenselink EL ON EV.idexp=EL.idparent      
WHERE  EL.nlevel=%<sys_itinerationphase>%
	and EL.idchild = %<expense.idexp>%
	AND ISNULL(EV.autokind,0) <> 4
]{V}
,0)
)
OR
(%<expense.nphase>% < %<sys_itinerationphase>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE002','1','I','expense','S','S','S','N','N',{ts '2007-09-06 10:35:14.890'},'NINO','L''importo lordo del contratto professionale è minore dei movimenti di spesa che lo contabilizzano','N','
ISNULL(
 [SELECT ycon FROM expenseprofservice WHERE idexp = %<expense.idexp>%]{I}
,0)=0

OR
(
[SELECT ISNULL(residual,0)
FROM profserviceresidual
WHERE ycon = [SELECT ycon FROM expenseprofservice WHERE idexp = %<expense.idexp>%]{I}
AND ncon = [SELECT ncon FROM expenseprofservice WHERE idexp = %<expense.idexp>%]{I}
]{V}
>=0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','1','I','expense','S','S','S','N','N',{ts '2010-11-05 14:10:36.670'},'sa','L''utente non è abilitato all''inserimento di fasi finanziarie precedenti alla fase dell''Impengo giuridico.','N','%<expense.nphase>% >= %<sys_appropriationphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''pre_impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','2','I','expense','S','S','S','N','N',{ts '2010-11-05 14:10:53.547'},'sa','L''utente non è abilitato all''inserimento di fasi finanziarie equivalenti all''Impengo giuridico.','N','%<expense.nphase>% <> %<sys_appropriationphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','3','I','expense','S','S','S','N','N',{ts '2010-11-05 14:11:20.843'},'sa','L''utente non è abilitato all''inserimento di fasi finanziarie successive alla fase dell''Impengo giuridico.','N','%<expense.nphase>% <= %<sys_appropriationphase>%

OR 

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''post_impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL






')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM003','1','I','expense','S','S','S','N','N',{ts '2007-08-29 13:02:23.920'},'NINO','ID spesa malformato','N','--post
( 
	(%<expense.nphase>% <= %<sys_maxexpensephase>%)
	AND
	(
		(%<expense.parentidexp>% IS NULL) OR 
             ( [SELECT nphase from expense where idexp= %<expense.parentidexp>%]{I} =
                       %<expense.nphase>%-1
		 )
	)
	AND
	(
		(%<expense.nphase>% = 1) OR (%<expense.parentidexp>% is not null)
	) 
	AND 
	(
	      (%<expense.parentidexp>%  IS NULL) OR 
		(EXISTS (SELECT idexp FROM expense S WHERE S.idexp= %<expense.parentidexp>% ))
  	)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM014','1','I','expense','S','S','S','N','N',{ts '2009-02-26 15:20:21.203'},'ASSISTENZA','Non è possibile salvare un movimento di spesa con numero negativo','N','%<expense.nmov>%>0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF002','1','I','expense','S','S','S','N','N',{ts '2007-12-06 10:42:31.797'},'SARA','L''importo lordo della missione è minore dei movimenti di spesa che la contabilizzano','N','--post
ISNULL(
 [SELECT iditineration from expenseitineration where idexp = %<expense.idexp>%]{I} 
,0)=0


OR
([SELECT ISNULL(residual,0)
FROM itinerationresidual
WHERE 
iditineration = [SELECT iditineration from expenseitineration where idexp = %<expense.idexp>%]{I} ]{V}
>=0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR025','1','U','expense','S','S','S','N','N',{ts '2009-01-10 15:26:52.670'},'SARA','Operazione non consentita per l''anagrafica %<registry.title>% perchè di tipo Anagrafica non utilizzabile.','S','(SELECT registryclass.idregistryclass FROM registry 
     JOIN registryclass ON registry.idregistryclass = registryclass.idregistryclass
WHERE registry.idreg =%<expense.idreg>%  )
<> ''25''  
-- anagrafiche non utilizzabili')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','U','expense','S','S','S','N','N',{ts '2007-12-15 09:48:57.813'},'NINO','Il movimento di spesa %<expenseview.phase>% n. %<expenseview.nmov>% / %<expenseview.ymov>% non può essere modificato. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6
OR
(
	(%<expense.adate>% = &<expense.adate>&)
	AND (ISNULL(%<expense.expiration>%, {D ''1900-01-01''}) =ISNULL(&<expense.expiration>&, {D ''1900-01-01''}))
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN005','1','U','expense','S','S','S','N','N',{ts '2008-03-21 13:14:40.360'},'SA','Non sono state effettuate sul movimento %<expense.nmov>% del %<expense.ymov>% tutte le classificazioni obblligatorie','N','--post
(
[SELECT COUNT(*) FROM sortingkind T
WHERE T.nphaseexpense = %<expense.nphase>%
AND (T.flag&1)<>0
AND %<sys_esercizio>% between ISNULL(T.start,1900) AND ISNULL(T.stop,2099)  
AND
(
	ISNULL(
		(SELECT ISNULL(SUM(amount),0)
		FROM expensesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind= T.idsorkind
		AND I.idexp= %<expense.idexp>%
		AND ayear = %<sys_esercizio>%)
	,0)
	<
	[SELECT curramount FROM expensetotal
	WHERE ayear = %<sys_esercizio>%  
	AND   idexp= %<expense.idexp>%]{V}
)
]{I} = 0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO031','1','U','expense','S','S','S','N','N',{ts '2009-10-06 12:50:01.813'},'Nino07032012','Non si può modificare il percepiente del movimento di spesa del Reintegro del Fondo Economale','N','
isnull(%<expense.autokind>%,0)  <> 3

OR 

isnull( &<expense.idreg>&,0) = isnull (%<expense.idreg>%,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM002','1','U','expense','S','S','S','N','N',{ts '2007-09-06 10:39:23.017'},'NINO','Il percipiente è assente','S','%<sys_expenseregphase>%>%<expense.nphase>%
or 
%<expense.idreg>% is not NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM007','1','U','expense','S','S','S','N','N',{ts '2011-09-15 12:22:38.047'},'sara','Il movimento finanziario è incluso nel mandato di pagamento %<expense.ymov>% %<expenseview.npay>% già trasmesso e quindi non può essere modificato','N','(
  (%<expense.adate>% = &<expense.adate>&)
  AND
 (ISNULL(%<expense.expiration>%,{d ''1900-01-01''}) = ISNULL(&<expense.expiration>&,{d ''1900-01-01''}))
  AND
 (ISNULL(%<expense.idreg>%,0) = ISNULL(&<expense.idreg>&,0))
AND
 (ISNULL(%<expense.description>%,'''') = ISNULL(&<expense.description>&,''''))
)
OR
(%<expense.nphase>% <> %<sys_maxexpensephase>%)
OR 
( ISNULL([SELECT paymenttransmission.kpaymenttransmission  
		FROM paymenttransmission 
		JOIN payment
			ON paymenttransmission.kpaymenttransmission= payment.kpaymenttransmission
	     	JOIN expenselast 	
			ON payment.kpay= expenselast.kpay
	      WHERE expenselast.idexp =%<expense.idexp>%]{I} 
   ,0)=0 )
OR
(
-- La regola scatta se non è abilitato al mandato informatico oppure non ci sono le variazioni speciali di modifica dati 
-- Quindi se è abilitato al mandato informatico e il mov. contiene var speciali di modifica dati, il mov. può essere modificato.[sara]
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expense.idexp>%]{C},''N'' )= ''S'')
AND
[(SELECT count(*)  from expensevar 
 where idexp = %<expense.idexp>%
AND kpaymenttransmission IS NULL AND autokind = 22)]{I} <> 0
AND
-- unicredit non permette le variazioni di dati contabili ma solo del Siope
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM expenselast
JOIN payment 
	ON payment.kpay = expenselast.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expense.idexp>%]{C},'''' )<> ''02008''
)

)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM009','1','U','expense','S','S','S','N','N',{ts '2007-09-06 10:42:04.733'},'NINO','E'' già presente un documento del percipiente %<expenseview.registry>% con il numero %<expense.doc>% emesso in data %<expense.docdate>% ','S','[SELECT count(*) 
from expense 
where nphase = %<expense.nphase>% 
and idreg = %<expense.idreg>% 
and doc = %<expense.doc>% 
and docdate = %<expense.docdate>% 
and expense.idexp <> %<expense.idexp>%]{I} = 0

OR
(%<expense.doc>% IS NULL)
OR
(%<expense.docdate>% IS NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM011','1','U','expense','S','S','S','N','N',{ts '2007-12-05 10:58:41.980'},'SARA','Il percipiente non può essere modificato poiché è stato emesso un mandato di pagamento ed esiste un criterio di raggruppamento dei pagamenti per percipiente','S','[SELECT COUNT(*) 
FROM expenselast 
join expenselink 
	ON expenselast.idexp= expenselink.idchild
WHERE expenselink.idparent =%<expense.idexp>%
	AND expenselast.kpay IS NOT NULL]{I} = 0 
or 
[SELECT payment_flag & 4 from config where ayear = %<sys_esercizio>%]{I} = 0
or 
ISNULL(&<expense.idreg>&,0) = ISNULL(%<expense.idreg>%,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM012','1','U','expense','S','S','S','N','N',{ts '2007-12-05 11:00:22.513'},'SARA','Il responsabile del movimento non può essere modificato poiché è stato emesso un mandato di pagamento ed esiste un criterio di raggruppamento dei pagamenti per resposanbile','S','
[SELECT COUNT(*) 
FROM expenselast WHERE expenselast.idexp =%<expense.idexp>%
	AND expenselast.kpay IS NOT NULL]{I} = 0 
or 
[SELECT payment_flag & 16 from config where ayear = %<sys_esercizio>%]{I} = 0
or 
ISNULL(&<expense.idman>&,0) = ISNULL(%<expense.idman>%,0)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM039','1','U','expense','S','S','S','N','N',{ts '2007-10-13 19:47:54.297'},'NINO','Il responsabile del movimento:%<expenseview.manager>%, non è quello dell''UPB : %<expenseview.upb>%.','N','ISNULL(&<expense.idman>&,0) = ISNULL(%<expense.idman>%,0)
OR
(ISNULL([SELECT idman
FROM upb 
WHERE idupb = 
		[SELECT idupb 
		FROM expenseyear 
		WHERE idexp = %<expense.idexp>% 
		AND ayear = %<sys_esercizio>%]{C} 
	   ]{C},0)
= 0)
OR
(ISNULL(%<expense.idman>%,0) = (ISNULL([SELECT idman
FROM upb 
WHERE idupb = 
		[SELECT idupb 
		FROM expenseyear 
		WHERE idexp = %<expense.idexp>% 
		AND ayear = %<sys_esercizio>%]{C} 
	   ]{C},0)))
OR
ISNULL(%<expense.idman>%,0) =0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM045','1','U','expense','S','S','S','N','N',{ts '2007-09-05 09:51:46.827'},'NINO','Il mov. di spesa %<expense.nmov>% del %<expense.ymov>% non può essere marcato come recupero in quanto esistono altri recuperi associati a tale movimento','S','([SELECT COUNT(*) FROM expenseclawback
WHERE idexp = %<expense.idexp>%]{I} = 0)
OR
(%<expense.idclawback>% IS NULL)
OR
(&<expense.idclawback>& = %<expense.idclawback>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM048','1','U','expense','S','S','S','N','N',{ts '2011-09-20 12:59:58.953'},'sara','Non si può modificare il percipiente del movimento di spesa n. %<expense.nmov>% del %<expense.ymov>% in quanto esiste un movimento figlio inserito in un mandato già trasmesso.','S','-- L''idexp è quello dell''impegno
-- Il controllo deve agire sulla liquidaizone
[SELECT COUNT(*) 
FROM expense 
join expenselast 
	on expense.idexp=expenselast.idexp
JOIN payment 
	ON payment.kpay = expenselast.kpay 
join expenselink 
	on expenselink.idchild= expense.idexp
WHERE expenselink.idparent = %<expense.idexp>% 
	AND kpaymenttransmission IS NOT NULL ]{I} = 0 
OR
ISNULL(&<expense.idreg>&,0) = ISNULL(%<expense.idreg>%,0)
OR
-- Controlla che il cassiere della singola liquidazione non abbia abilitato il mandato informatico
[SELECT COUNT(*)
FROM expense 
JOIN expenselast 
	ON expense.idexp=expenselast.idexp 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN  expenselink 
	ON expenselink.idchild= expense.idexp
	AND expenselink.idparent = %<expense.idexp>% 
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE ISNULL(treasurer.flagedisp,''N'')  = ''N''
]{I}= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM048','2','U','expense','S','S','S','N','N',{ts '2011-09-19 16:47:16.670'},'sara','Nella gestione dell''ordinativo informatico non si può modificare il percipiente del movimento di spesa n. %<expense.nmov>% del %<expense.ymov>% in quanto esiste un movimento figlio inserito in un mandato già trasmesso.','S','[SELECT COUNT(*) 
FROM expense 
JOIN expenselast 
	on expense.idexp=expenselast.idexp
JOIN payment 
	ON payment.kpay = expenselast.kpay 
WHERE kpaymenttransmission IS NOT NULL
AND expenselast.idexp = %<expense.idexp>%  ]{I} = 0 
OR
ISNULL(&<expense.idreg>&,0) = ISNULL(%<expense.idreg>%,0)
OR
(%<expense.nphase>% <> %<sys_maxexpensephase>%)
OR 
(
-- Controlla che il cassiere della singola liquidazione abbia abilitato il mandato informatico
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expense 
JOIN expenselast 
	on expense.idexp=expenselast.idexp 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp  = %<expense.idexp>% 
]{C},''N'' ) = ''S''
)
AND
[(SELECT COUNT(*)  FROM expensevar  WHERE idexp = %<expense.idexp>%
AND kpaymenttransmission IS NULL AND autokind = 22)]{I} <> 0
AND
-- unicredit non permette le variazioni di dati contabili ma solo del Siope
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM expenselast
JOIN payment
	ON payment.kpay = expenselast.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expense.idexp>%]{C},'''' )<> ''02008''
)
)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM057','1','U','expense','S','S','S','N','N',{ts '2012-07-18 10:19:56.360'},'sara','Il movimento di spesa %<expense.nmov>% del  %<expense.ymov>% risulta già esitato','S','(%<expense.nphase>% < %<sys_maxexpensephase>%)
OR
(
%<expense.idreg>% = &<expense.idreg>&
AND 
%<expense.description>% = &<expense.description>&
)
OR
(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 
	 WHERE idexp= %<expense.idexp>%]{V}
	,0) = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM073','1','U','expense','S','S','S','N','N',{ts '2009-01-20 12:00:01.027'},'NINO','E'' necessario che il percipiente %<registry.title>%  abbia un indirizzo valido.','S','[select count(*) from registryaddress 
	join address on registryaddress.idaddresskind=address.idaddress 
	where isnull(registryaddress.active,''S'')=''S'' and
		stop is null and
		codeaddress in (''07_SW_AVV'',''07_SW_DEF'')
		and idreg=%<expense.idreg>%
]{I}>0

OR

%<expense.idreg>% is null


OR

%<expense.idreg>%  =  &<expense.idreg>&


OR

[select idregistryclass from registry
	where  idreg=%<expense.idreg>%
]{C}=''24''



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM073','2','U','expense','S','S','S','N','N',{ts '2010-03-08 14:41:42.500'},'SARA','E'' necessario che il percipiente %<registry.title>%  abbia un indirizzo con CAP valido.','S','%<expense.idreg>% is null
OR
%<expense.idreg>%  =  &<expense.idreg>&
OR
[execute verify_cap %<expense.idreg>%,''07_SW_AVV'',''07_SW_DEF'',
%<expense.adate>%,@outvar output]{I}=0 
OR
[select idregistryclass from registry
	where  idreg=%<expense.idreg>%
]{C}=''24''


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM074','1','U','expense','S','S','S','N','N',{ts '2008-11-05 12:28:20.430'},'SARA','La modifica del percipiente o del documento collegato comporterà la modifica alla stampa Ufficiale del Mandato di pagamento.','N','(
  (ISNULL(%<expense.doc>%,'''') = ISNULL(&<expense.doc>&,'''') )
  AND
  ( ISNULL(%<expense.docdate>%,'''') = ISNULL(&<expense.docdate>&,'''') )
  AND
 (ISNULL(%<expense.idreg>%,0) = ISNULL(&<expense.idreg>&,0))
)
OR
([SELECT count(*) FROM expenselink
	JOIN expenselast 
		on expenselink.idchild =  expenselast.idexp
	JOIN payment 
		on payment.kpay= expenselast.kpay		
        WHERE expenselink.idparent =%<expense.idexp>% AND
		payment.printdate IS NOT NULL]{I}    = 0 )


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM076','1','U','expense','S','S','S','N','N',{ts '2008-11-25 14:34:07.390'},'NINO','Errore nell''applicazione, dati incoerenti nella gerarchia dei movimenti. (Spesa/Percipiente)','N','%<expense.nphase>% <= %<sys_expenseregphase>%

OR
%<expense.idreg>% =
[(SELECT idreg from expense where idexp=%<expense.parentidexp>%)]{I}

OR

%<expense.idreg>%=&<expense.idreg>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM087','1','U','expense','S','S','S','N','N',{ts '2010-03-25 10:12:25.340'},'SARA','Il movimento di spesa %<expenseview.phase>% n. %<expenseview.nmov>% / %<expenseview.ymov>%  ha una data contabile anteriore rispetto alle fasi precedenti.','N','ISNULL( %<expense.adate>%,{D ''1900-01-01''}) = 
ISNULL( &<expense.adate>&,{D ''1900-01-01''})
OR
[SELECT COUNT(*) 
FROM expense 
join expenselink 
	ON expense.idexp= expenselink.idparent
WHERE expenselink.idchild =%<expense.idexp>%
AND   expense.adate > %<expense.adate>%
]{I} = 0 
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM087','2','U','expense','S','S','S','N','N',{ts '2010-03-25 10:10:37.567'},'SARA','Il movimento di spesa %<expenseview.phase>% n. %<expenseview.nmov>% / %<expenseview.ymov>%   ha una data contabile più recente rispetto alle fasi successive.','N','ISNULL( %<expense.adate>%,{D ''1900-01-01''}) = 
ISNULL( &<expense.adate>&,{D ''1900-01-01''})
OR
[SELECT COUNT(*) 
FROM expense 
join expenselink 
	ON expense.idexp= expenselink.idchild
WHERE expenselink.idparent =%<expense.idexp>%
AND   expense.adate < %<expense.adate>%
]{I} = 0 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM090','1','U','expense','S','S','S','N','N',{ts '2011-04-20 12:20:47.420'},'sa','Non è stato attribuito sul movimento di spesa equivalente all''impegno il Codice CUP','N','%<expense.nphase>% <> (SELECT appropriationphasecode FROM config
			     WHERE ayear = %<sys_esercizio>%)
OR

%<expense.cupcode>% IS NOT NULL

OR

[SELECT cupcode FROM upb WHERE idupb = [SELECT idupb FROM expenseyear
						WHERE idexp = %<expense.idexp>%
						 AND ayear = %<sys_esercizio>%
						]{I}
]{C} IS NOT NULL


OR 

[SELECT cupcode FROM  finlast WHERE idfin =
			[SELECT idfin FROM expenseyear
			 WHERE idexp =%<expense.idexp>%
 			 AND ayear = %<sys_esercizio>%
			]{I}
]{C} IS NOT NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM090','2','U','expense','S','S','S','N','N',{ts '2011-04-20 12:20:55.327'},'sa','Non è stato attribuito sul movimento di spesa equivalente all''impegno il Codice CIG','N','%<expense.nphase>% <> (SELECT appropriationphasecode FROM config
			     WHERE ayear = %<sys_esercizio>%)

OR

%<expense.cigcode>% IS NOT NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM098','3','U','expense','S','S','S','N','N',{ts '2011-09-27 14:18:55.140'},'sara','Non si può modificare il codice CIG del movimento di spesa n. %<expense.nmov>% del %<expense.ymov>% in quanto esiste un movimento figlio inserito in un mandato già trasmesso.','S','-- L''idexp è quello dell''impegno
-- Il controllo deve agire sulla liquidaizone
[SELECT COUNT(*) 
FROM expense 
join expenselast 
	on expense.idexp=expenselast.idexp
JOIN payment 
	ON payment.kpay = expenselast.kpay 
join expenselink 
	on expenselink.idchild= expense.idexp
WHERE expenselink.idparent = %<expense.idexp>% 
	AND kpaymenttransmission IS NOT NULL ]{I} = 0 
OR
ISNULL(&<expense.cigcode>&,0) = ISNULL(%<expense.cigcode>%,0)
OR
-- Controlla che il cassiere della singola liquidazione non abbia abilitato il mandato informatico
[SELECT COUNT(*)
FROM expense 
JOIN expenselast 
	ON expense.idexp=expenselast.idexp 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN  expenselink 
	ON expenselink.idchild= expense.idexp
	AND expenselink.idparent = %<expense.idexp>% 
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE ISNULL(treasurer.flagedisp,''N'')  = ''N''
]{I}= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM098','4','U','expense','S','S','S','N','N',{ts '2011-09-27 14:19:03.517'},'sara','Non si può modificare il codice CUP del movimento di spesa n. %<expense.nmov>% del %<expense.ymov>% in quanto esiste un movimento figlio inserito in un mandato già trasmesso.','S','-- L''idexp è quello dell''impegno
-- Il controllo deve agire sulla liquidaizone
[SELECT COUNT(*) 
FROM expense 
join expenselast 
	on expense.idexp=expenselast.idexp
JOIN payment 
	ON payment.kpay = expenselast.kpay 
join expenselink 
	on expenselink.idchild= expense.idexp
WHERE expenselink.idparent = %<expense.idexp>% 
	AND kpaymenttransmission IS NOT NULL ]{I} = 0 
OR
ISNULL(&<expense.cupcode>&,0) = ISNULL(%<expense.cupcode>%,0)
OR
-- Controlla che il cassiere della singola liquidazione non abbia abilitato il mandato informatico
[SELECT COUNT(*)
FROM expense 
JOIN expenselast 
	ON expense.idexp=expenselast.idexp 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN  expenselink 
	ON expenselink.idchild= expense.idexp
	AND expenselink.idparent = %<expense.idexp>% 
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE ISNULL(treasurer.flagedisp,''N'')  = ''N''
]{I}= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM098','5','U','expense','S','S','S','N','N',{ts '2011-09-27 15:36:49.093'},'sara','Nella gestione dell''odinativo informatico non si può modificare il codice CIG del movimento di spesa n. %<expense.nmov>% del %<expense.ymov>% in quanto esiste un movimento figlio inserito in un mandato già trasmesso.','S','-- L''idexp è quello dell''impegno
-- Il controllo deve agire sulla liquidaizone
[SELECT COUNT(*) 
FROM expense 
join expenselast 
	on expense.idexp=expenselast.idexp
JOIN payment 
	ON payment.kpay = expenselast.kpay 
join expenselink 
	on expenselink.idchild= expense.idexp
WHERE expenselink.idparent = %<expense.idexp>% 
	AND kpaymenttransmission IS NOT NULL ]{I} = 0 
OR
ISNULL(&<expense.cigcode>&,0) = ISNULL(%<expense.cigcode>%,0)
OR
(
-- non esistono pagamenti trasmessi a unicredit
[SELECT COUNT(*)
FROM expense 
JOIN expenselast 
	ON expense.idexp=expenselast.idexp 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN  expenselink 
	ON expenselink.idchild= expense.idexp
	AND expenselink.idparent = %<expense.idexp>% 
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE ISNULL(treasurer.idbank,'''')  = ''02008''
AND payment.kpaymenttransmission IS NOT NULL
]{I}= 0
AND
-- non esistono pagamenti trasmessi privi di  variazioni
-- di modifica dati
[SELECT COUNT(*)
FROM expense 
JOIN expenselast 
	ON expense.idexp=expenselast.idexp 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN  expenselink 
	ON expenselink.idchild= expense.idexp
	AND expenselink.idparent = %<expense.idexp>% 
LEFT OUTER JOIN expensevar
	ON expensevar.idexp = expenselast .idexp
	AND ISNULL(expensevar.autokind,0) = 22 
	AND expensevar.kpaymenttransmission IS NULL
WHERE payment.kpaymenttransmission IS  NOT NULL
	AND expensevar.idexp IS NULL
]{I}= 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM098','6','U','expense','S','S','S','N','N',{ts '2011-09-27 15:36:33.063'},'sara','Nella gestione dell''odinativo informatico non si può modificare il codice CUP del movimento di spesa n. %<expense.nmov>% del %<expense.ymov>% in quanto esiste un movimento figlio inserito in un mandato già trasmesso.','S','-- L''idexp è quello dell''impegno
-- Il controllo deve agire sulla liquidaizone
[SELECT COUNT(*) 
FROM expense 
join expenselast 
	on expense.idexp=expenselast.idexp
JOIN payment 
	ON payment.kpay = expenselast.kpay 
join expenselink 
	on expenselink.idchild= expense.idexp
WHERE expenselink.idparent = %<expense.idexp>% 
	AND kpaymenttransmission IS NOT NULL ]{I} = 0 
OR
ISNULL(&<expense.cupcode>&,0) = ISNULL(%<expense.cupcode>%,0)
OR
(
-- non esistono pagamenti trasmessi a unicredit
[SELECT COUNT(*)
FROM expense 
JOIN expenselast 
	ON expense.idexp=expenselast.idexp 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN  expenselink 
	ON expenselink.idchild= expense.idexp
	AND expenselink.idparent = %<expense.idexp>% 
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE ISNULL(treasurer.idbank,'''')  = ''02008''
AND payment.kpaymenttransmission IS NOT NULL
]{I}= 0
AND
-- non esistono pagamenti trasmessi privi di  variazioni
-- di modifica dati
[SELECT COUNT(*)
FROM expense 
JOIN expenselast 
	ON expense.idexp=expenselast.idexp 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN  expenselink 
	ON expenselink.idchild= expense.idexp
	AND expenselink.idparent = %<expense.idexp>% 
LEFT OUTER JOIN expensevar
	ON expensevar.idexp = expenselast .idexp
	AND ISNULL(expensevar.autokind,0) = 22 
	AND expensevar.kpaymenttransmission IS NULL
WHERE payment.kpaymenttransmission IS  NOT NULL
	AND expensevar.idexp IS NULL
]{I}= 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM102','1','U','expense','S','S','S','N','N',{ts '2012-07-18 16:44:19.967'},'sa','E'' necessario indicare il CIG in fase di %<expensephase.description>%  oppure nel Contratto Passivo, altrimenti saranno emessi mandati senza CIG.','N','%<expense.nphase>% <> (SELECT expensephase FROM config
			     WHERE ayear = %<sys_esercizio>%)

OR

%<expense.cigcode>% IS NOT NULL

OR

[SELECT count(cigcode) from mandatedetail 
	where mandatedetail.idexp_iva = %<expense.idexp>%
		OR mandatedetail.idexp_taxable = %<expense.idexp>%
]{I} =0

OR

[SELECT COUNT(mandate.cigcode) 
FROM mandate
JOIN mandatedetail
	ON	mandate.idmankind = mandatedetail.idmankind 
	AND mandate.yman = mandatedetail.yman 
	AND mandate.nman = mandatedetail.nman
 WHERE mandatedetail.idexp_iva = %<expense.idexp>%
		OR mandatedetail.idexp_taxable = %<expense.idexp>%
]{I} <>0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM109','1','U','expense','S','S','S','N','N',{ts '2013-02-07 13:09:24.373'},'sa','E'' necessario attribuire un Finanziamento al movimento di spesa.','N','ISNULL(
		[SELECT SUM(amount)
		FROM underwritingappropriation 
		WHERE idexp= %<expense.idexp>%]{V}
	,0)
+
ISNULL (   [select SUM(amount) from expensevar where
		idexp=%<expense.idexp>%
		and
		idunderwriting is not null
                 ]{V},0)
	=
	ISNULL([SELECT curramount FROM expensetotal
	WHERE ayear = %<sys_esercizio>%  
	AND   idexp= %<expense.idexp>%]{V},0)

OR 

%<expense.nphase>% <> %<sys_expensefinphase>%

OR 
[SELECT assured 
FROM upb  
WHERE idupb = ([select idupb 
		from expenseyear
		where 	ayear = %<sys_esercizio>%
		and idexp=%<expense.idexp>%]{C})]{C} =''S'' ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN003','2','U','expense','S','S','S','N','N',{ts '2008-06-12 13:01:49.223'},'NINO','Operazione Impossibile, la liquidazione di ritenute del periodo che comprendono la data di registrazione %<expense.adate>% è stata effettuata','S','[SELECT taxvaliditykind FROM config WHERE ayear = %<sys_esercizio>%]{I} <> 2
OR
%<sys_maxexpensephase>% > %<expense.nphase>%
OR
%<expense.adate>% = &<expense.adate>&
OR
(
	[SELECT COUNT(*)
	FROM expensetax
	WHERE ((ytaxpay is not null) OR (idinc is not null)) and idexp = %<expense.idexp>%]{I} +
	[SELECT COUNT(*)
	FROM expensetaxcorrige
	WHERE
	(
		(ytaxpay is not null)
		OR (linkedidinc is not null)
		OR (linkedidexp IS NOT NULL)
	) and idexp = %<expense.idexp>%]{I}
	= 0
)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','1','U','expense','S','S','S','N','N',{ts '2010-11-05 15:18:25.920'},'sa','L''utente non è abilitato alla modifica di fasi finanziarie precedenti alla fase dell''Impengo giuridico.','N','%<expense.nphase>%  >= %<sys_appropriationphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''pre_impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','2','U','expense','S','S','S','N','N',{ts '2010-11-05 15:18:42.967'},'sa','L''utente non è abilitato alla modifica di fasi finanziarie successive alla fase dell''Impengo giuridico.','N','%<expense.nphase>%  <= %<sys_appropriationphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''post_impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','3','U','expense','S','S','S','N','N',{ts '2010-11-05 15:19:20.920'},'sa','L''utente non è abilitato alla modifica di fasi finanziarie equivalenti all''Impengo giuridico.','N','%<expense.nphase>% <> %<sys_appropriationphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM046','1','D','expensecasualcontract','S','S','S','N','N',{ts '2007-09-21 12:21:25.703'},'NINO','Non è normalmente corretto rimuovere la contabilizzazione della prestazione occasionale n. %<expensecasualcontract.ycon>% / %<expensecasualcontract.ncon>% in quanto il mov. di spesa è portato a pagamento. Tale mov. di spesa non potrà più essere ricontabilizzato','N','[SELECT COUNT(*)
FROM expenselast
join expenselink 
     on expenselink.idchild=expenselast.idexp
WHERE expenselink.idparent= %<expensecasualcontract.idexp>%
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM018','1','I','expensecasualcontract','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il percipiente del contratto occasionale %<ncon>%/%<ycon>%  da contabilizzare è differente da quello del movimento di spesa
','S','(
[SELECT count(*) FROM expense
WHERE idexp = %<expensecasualcontract.idexp>%]{I}
=0
)
OR
(
[SELECT idreg FROM expense
WHERE idexp = %<expensecasualcontract.idexp>%]{I}
=
[SELECT idreg FROM casualcontract
WHERE
ncon = %<expensecasualcontract.ncon>% 
AND ycon = %<expensecasualcontract.ycon>%]{I}
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS003','1','I','expensecasualcontract','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','L''importo lordo del contratto occasionale %<ncon>%/%<ycon>% è minore dei movimenti di spesa che lo contabilizzano','N','--post
[SELECT AVG(residual)
FROM casualcontractresidual
WHERE casualcontractresidual.ycon = %<expensecasualcontract.ycon>%
AND casualcontractresidual.ncon = %<expensecasualcontract.ncon>%]{N}>=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS004','1','I','expensecasualcontract','S','S','S','N','N',{ts '2007-08-25 12:27:27.483'},'NINO','Il contratto %<ncon>% / %<ycon>% non può essere 
contabilizzato dal movimento selezionato, poichè è stato già (anche in parte) portato a pagamento.','S','[SELECT COUNT(*)
FROM expense s
JOIN expenselink EL
ON EL.idparent = s.idexp
JOIN expenselast L
ON L.idexp = EL.idchild
WHERE s.idexp = %<expensecasualcontract.idexp>%]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM013','1','D','expenseclawback','S','S','S','N','N',{ts '2008-10-09 11:58:37.427'},'NINO','Operazione Impossibile.Esiste un movimento automatico associato al recupero che si sta cancellando.','N','[SELECT count(*) from expenseview
where autokind = 6  
and idpayment = %<expenseclawback.idexp>%
and ayear=%<sys_esercizio>%
and curramount>0
]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM074','1','D','expenseclawback','S','S','S','N','N',{ts '2008-11-05 12:19:58.243'},'SARA','La cancellazione del recupero comporterà la modifica alla stampa Ufficiale del Mandato di pagamento in cui è inserito il pagamento.','S','([SELECT count(*) FROM payment 
       JOIN expenselast 
		on payment.kpay= expenselast.kpay		
        WHERE expenselast.idexp =%<expenseclawback.idexp>% AND
		payment.printdate IS NOT NULL]{I}    = 0 )
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM013','1','I','expenseclawback','S','S','S','N','N',{ts '2007-08-31 18:13:03.907'},'NINO','Il movimento di spesa ha movimenti automatici relativi ad altri recuperi. Inserire i movimenti relativi al recupero %<idclawback>% separatamente','S','[SELECT flag & 2 
from expenselast 
where idexp = %<expenseclawback.idexp>%]{I} = 0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM045','1','I','expenseclawback','S','S','S','N','N',{ts '2007-08-31 18:15:32.483'},'NINO','Il recupero %<expenseclawback.idclawback>% non può essere inserito in quanto il mov. di spesa è già esso un recupero','N','[SELECT idclawback FROM expense
WHERE idexp = %<expenseclawback.idexp>%]{I} IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM074','1','I','expenseclawback','S','S','S','N','N',{ts '2008-11-05 11:37:48.947'},'SARA','L''inserimento del recupero comporterà la modifica alla stampa Ufficiale del Mandato di pagamento in cui è inserito il pagamento.','N','([SELECT count(*) FROM payment 
       JOIN expenselast 
		on payment.kpay= expenselast.kpay		
        WHERE expenselast.idexp =%<expenseclawback.idexp>% AND
		payment.printdate IS NOT NULL]{I}    = 0 )
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM013','1','U','expenseclawback','S','S','S','N','N',{ts '2007-08-31 18:11:19.907'},'NINO','Il movimento di spesa al quale è associato il recupero %<idclawback>% ha movimenti automatici. Modificare i movimenti separatamente','S','[SELECT flag & 2 
from expenselast 
where idexp = %<expenseclawback.idexp>%]{I} = 0
or 
&<expenseclawback.amount>& = %<expenseclawback.amount>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM074','1','U','expenseclawback','S','S','S','N','N',{ts '2008-11-05 11:37:56.977'},'SARA','La modifica all''importo del recupero comporterà la modifica alla stampa Ufficiale del Mandato di pagamento.','N',' (%<expenseclawback.amount>% = &<expenseclawback.amount>&)
OR

([SELECT count(*) FROM payment 
       JOIN expenselast 
		on payment.kpay= expenselast.kpay		
        WHERE expenselast.idexp =%<expenseclawback.idexp>% AND
		payment.printdate IS NOT NULL]{I}    = 0 )
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA001','1','I','expenseinvoice','S','S','S','N','N',{ts '2007-08-30 14:30:29.000'},'NINO','L''importo del documento IVA %<idinvkind>% %<ninv>%/%<yinv>% è minore dei movimenti di spesa che lo contabilizzano','N','--post
isnull([(SELECT AVG(residual)
FROM invoiceavailable
WHERE invoiceavailable.yinv = %<expenseinvoice.yinv>% AND
invoiceavailable.ninv = %<expenseinvoice.ninv>% AND
invoiceavailable.idinvkind = %<expenseinvoice.idinvkind>%)]{V},0)>=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA018','1','I','expenseinvoice','S','S','S','N','N',{ts '2007-12-12 10:58:59.703'},'pino','La fattura deve avere la stessa causale di contabilizzazione: ''Contabilizzazione Iva'' dell''ordine a cui è associata.','N','%<expenseinvoice.movkind>%<>2
OR
([SELECT COUNT(*) 
FROM expensemandate
JOIN expenselink
ON expenselink.idparent = expensemandate.idexp
where movkind = 3
and expenselink.idchild = %<expenseinvoice.idexp>%]{I}= 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA018','2','I','expenseinvoice','S','S','S','N','N',{ts '2007-12-04 14:41:30.517'},'pino','La fattura deve avere la stessa causale di contabilizzazione: ''Contabilizzazione Totale'' dell''ordine a cui è associata.. ','N','%<expenseinvoice.movkind>%<>1
OR 
(
[SELECT COUNT(*) 
FROM expensemandate
JOIN expenselink
ON expenselink.idparent = expensemandate.idexp
where movkind <>1
and expenselink.idchild = %<expenseinvoice.idexp>%]{I}= 0) 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA018','3','I','expenseinvoice','S','S','S','N','N',{ts '2007-12-12 11:12:10.157'},'pino','La fattura deve avere la stessa causale di contabilizzazione: ''Contabilizzazione Imponibile'' dell''ordine a cui è associata.','N','%<expenseinvoice.movkind>%<>3
OR
([SELECT COUNT(*) 
FROM expensemandate
JOIN expenselink
ON expenselink.idparent = expensemandate.idexp
where movkind = 2
and expenselink.idchild = %<expenseinvoice.idexp>%]{I}= 0)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA019','1','I','expenseinvoice','S','S','S','N','N',{ts '2007-12-12 10:47:55.670'},'pino','L''importo del movimento di spesa che contabilizza la fattura  di acquisto %<expenseinvoice.idinvkind>%  %<expenseinvoice.ninv>% / %<expenseinvoice.yinv>% è diverso della somma dei dettagli associati','N','--post
(
%<expenseinvoice.movkind>% = 1
AND
[(select isnull(sum(invoicedetailview.rowtotal), 0)  
from invoicedetailview
where  invoicedetailview.idinvkind =%<expenseinvoice.idinvkind>%
and invoicedetailview.yinv = %<expenseinvoice.yinv>%
and invoicedetailview.ninv = %<expenseinvoice.ninv>%
and invoicedetailview.idexp_taxable = %<expenseinvoice.idexp>%
and invoicedetailview.idexp_iva = %<expenseinvoice.idexp>%
)]{V}
=
[(SELECT ISNULL(expenseyear.amount, 0) 
FROM expense
JOIN expenseyear
ON expense.idexp = expenseyear.idexp
JOIN expensetotal
ON expenseyear.idexp = expensetotal.idexp
AND expenseyear.ayear = expensetotal.ayear
WHERE expense.idexp = %<expenseinvoice.idexp>%
AND ((expensetotal.flag & 2) = 2)
)]{V} 
)
OR
(
%<expenseinvoice.movkind>% = 3
AND
[(select isnull(sum(invoicedetailview.taxable_euro), 0)  
from invoicedetailview
where invoicedetailview.idinvkind = %<expenseinvoice.idinvkind>%
and invoicedetailview.yinv = %<expenseinvoice.yinv>%
and invoicedetailview.ninv = %<expenseinvoice.ninv>%
and invoicedetailview.idexp_taxable = %<expenseinvoice.idexp>%
)]{V}
=
[(SELECT ISNULL(expenseyear.amount, 0) 
FROM expense
JOIN expenseyear
ON expense.idexp = expenseyear.idexp
JOIN expensetotal
ON expenseyear.idexp = expensetotal.idexp
AND expenseyear.ayear = expensetotal.ayear
WHERE expense.idexp = %<expenseinvoice.idexp>%
AND ((expensetotal.flag & 2) = 2)
)]{V} 
)
OR
(
%<expenseinvoice.movkind>% = 2
AND
[(select isnull(sum(invoicedetailview.iva_euro), 0)  
from invoicedetailview
where  invoicedetailview.idinvkind =%<expenseinvoice.idinvkind>%
and invoicedetailview.yinv = %<expenseinvoice.yinv>%
and invoicedetailview.ninv = %<expenseinvoice.ninv>%
and invoicedetailview.idexp_iva = %<expenseinvoice.idexp>%
)]{V}
=
[(SELECT ISNULL(expenseyear.amount, 0) 
FROM expense
JOIN expenseyear
ON expense.idexp = expenseyear.idexp
JOIN expensetotal
ON expenseyear.idexp = expensetotal.idexp
AND expenseyear.ayear = expensetotal.ayear
WHERE expense.idexp = %<expenseinvoice.idexp>%
AND ((expensetotal.flag & 2) = 2)
)]{V} 
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA040','1','I','expenseinvoice','N','N','N','N','N',{ts '2011-03-28 17:00:53.453'},'sa','Contab. Imponibile','S',null)
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA042','1','I','expenseinvoice','S','S','S','N','N',{ts '2011-03-29 10:05:41.687'},'sa','L''upb " %<expenseview.codeupb>% " e la causale " Contabilizzazione IVA " devono essere coerenti con l''upb indicato nei dettagli fattura che si sta contabilizzando. ','N','-- contab.iva
%<expenseinvoice.movkind>%<>2
OR
([SELECT COUNT(*) 
FROM invoicedetail
where idinvkind = %<expenseinvoice.idinvkind>%
AND yinv = %<expenseinvoice.yinv>%
AND ninv = %<expenseinvoice.ninv>%
AND idexp_iva = %<expenseinvoice.idexp>%
AND idupb_iva is not null
AND idupb_iva <> [select idupb from expenseyear where idexp = %<expenseinvoice.idexp>%]{C}
]{I}= 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA042','2','I','expenseinvoice','S','S','S','N','N',{ts '2011-03-29 10:05:51.077'},'sa','L''upb " %<expenseview.codeupb>% " e la causale " Contabilizzazione Imponibile " devono essere coerenti con l''upb indicato nei dettagli fattura che si sta contabilizzando. ','N','-- contab.Imponibile
%<expenseinvoice.movkind>%<>3
OR
([SELECT COUNT(*) 
FROM invoicedetail
where idinvkind = %<expenseinvoice.idinvkind>%
AND yinv = %<expenseinvoice.yinv>%
AND ninv = %<expenseinvoice.ninv>%
AND idexp_taxable = %<expenseinvoice.idexp>%
AND idupb is not null
AND idupb <> [select idupb from expenseyear where idexp = %<expenseinvoice.idexp>%]{C}
]{I}= 0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM018','1','I','expenseinvoice','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il percipiente del documento IVA %<ninv>% / %<yinv>% da contabilizzare è differente da quello del movimento di spesa','S','(
[SELECT count(*) FROM expense
WHERE idexp =  %<expenseinvoice.idexp>% ]{I}
=0
)
OR
(
[SELECT idreg FROM expense
WHERE idexp =  %<expenseinvoice.idexp>% ]{I}
=
[SELECT idreg FROM invoice
WHERE
idinvkind =%<expenseinvoice.idinvkind>% AND
ninv = %<expenseinvoice.ninv>% AND yinv = %<expenseinvoice.yinv>%]{I}
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM046','1','D','expenseitineration','S','S','S','N','N',{ts '2007-12-05 17:00:09.983'},'PINO','Non è normalmente corretto rimuovere la contabilizzazione della missione n. %<itineration.yitineration>% / %<itineration.nitineration>% in quanto il mov. di spesa è portato a pagamento. Tale mov. di spesa non potrà più essere ricontabilizzato','N','[SELECT COUNT(*)
FROM expenselast
join expenselink on expenselink.idchild=expenselast.idexp
WHERE expenselink.idparent= %<expenseitineration.idexp>%
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM018','1','I','expenseitineration','S','S','S','N','N',{ts '2007-12-05 17:00:26.127'},'PINO','Il percipiente della missione %<itineration.nitineration>%/%<itineration.yitineration>% da contabilizzare è differente da quello del movimento di spesa','S','(
[SELECT count(*) FROM expense
WHERE idexp = %<expenseitineration.idexp>% ]{I}
=0
)
OR
(
[SELECT idreg FROM expense
WHERE idexp = %<expenseitineration.idexp>% ]{I}
=
[SELECT idreg FROM itineration
WHERE
iditineration = %<expenseitineration.iditineration>%]{I}
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF001','1','I','expenseitineration','S','S','S','N','N',{ts '2007-12-05 16:57:13.170'},'PINO','L''importo dell''anticipo della missione %<itineration.nitineration>% / %<itineration.yitineration>% è minore dei movimenti di spesa che lo contabilizzano','N','[SELECT ISNULL(totadvance, 0) 
FROM itineration 
WHERE iditineration = %<expenseitineration.iditineration>%]{V} 
- 
[SELECT ISNULL(SUM(EY.amount), 0) 
FROM expense E
JOIN expenseyear EY
	ON E.idexp = EY.idexp
JOIN expensetotal ET
	ON ET.idexp = EY.idexp
	AND ET.ayear = EY.ayear
JOIN expenseitineration EI
	ON EI.idexp = E.idexp 
WHERE E.nphase = %<sys_itinerationphase>%
	AND EI.iditineration = %<expenseitineration.iditineration>% 
	AND EI.movkind in (5,6)
	AND (ET.flag & 2) <> 0]{V} 
-
[SELECT ISNULL(SUM(expensevar.amount), 0) 
FROM expensevar 
JOIN expenseitineration 
ON expenseitineration.idexp = expensevar.idexp 
WHERE expenseitineration.iditineration = %<expenseitineration.iditineration>% 
AND expenseitineration.movkind in (5,6)]{V} 
>=0
or 
[SELECT nphase FROM expense WHERE idexp = %<expenseitineration.idexp>%]{I}
<> %<sys_itinerationphase>%
or
%<expenseitineration.movkind>% not in (5,6)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF002','1','I','expenseitineration','S','S','S','N','N',{ts '2007-12-05 16:57:26.627'},'PINO','L''importo lordo della missione %<itineration.nitineration>% / %<itineration.yitineration>% è minore dei movimenti di spesa che la contabilizzano','N','[SELECT ISNULL(totalgross, 0) 
from itineration 
where iditineration = %<expenseitineration.iditineration>%]{V} 
- 
[SELECT ISNULL(SUM(EY.amount), 0) 
FROM expense E
JOIN expenseyear EY
	ON E.idexp = EY.idexp
JOIN expensetotal ET
	ON ET.idexp = EY.idexp
	AND ET.ayear = EY.ayear
JOIN expenseitineration EI
	ON EI.idexp = E.idexp 
WHERE E.nphase = %<sys_itinerationphase>%
	AND EI.iditineration = %<expenseitineration.iditineration>% 
	AND EI.movkind in (4,6)
	AND (ET.flag & 2) <> 0]{V} 

-
[SELECT ISNULL(sum(expensevar.amount), 0) 
from expensevar 
join expenseitineration 
on expenseitineration.idexp = expensevar.idexp 
WHERE ISNULL(expensevar.autokind,'''')<>''4''
and expenseitineration.iditineration = %<expenseitineration.iditineration>% 
and expenseitineration.movkind in (4,6)]{V} 
>= 0 
or 
[SELECT nphase FROM expense WHERE idexp = %<expenseitineration.idexp>%]{I}
<> %<sys_itinerationphase>%
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF004','1','I','expenseitineration','S','S','S','N','N',{ts '2007-12-05 16:57:45.780'},'PINO','La missione %<itineration.nitineration>% / %<itineration.yitineration>% non può essere contabilizzata dal movimento selezionato, poichè è stato già (anche in parte) portato a pagamento.','S','(%<expenseitineration.movkind>% <> 4)
OR
(
[SELECT COUNT(*)
FROM expense s
JOIN expenselink EL
ON EL.idparent = s.idexp
JOIN expenselast L
ON L.idexp = EL.idchild
WHERE s.idexp = %<expenseitineration.idexp>%
]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','D','expenselast','S','S','S','N','N',{ts '2007-12-15 09:43:13.670'},'NINO','Il movimento di spesa %<expenseview.phase>% n. %<expenseview.nmov>% / %<expenseview.ymov>% non può essere cancellato. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM007','1','D','expenselast','S','S','S','N','N',{ts '2007-12-05 10:07:45.810'},'SARA','Il movimento finanziario è incluso nel mandato di pagamento  %<expenselastview.npay>% già trasmesso e quindi non può essere cancellato','S','%<expenselast.kpay>% IS NULL
OR
isnull([SELECT kpaymenttransmission 
from payment 
where kpay = %<expenselast.kpay>%]{I} ,0)=0

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM025','1','D','expenselast','S','S','S','N','N',{ts '2007-12-05 11:27:43.077'},'SARA','Non può essere cancellato il movimento di spesa %<expense.ymov>%/%<expense.nmov>% in quanto è inserito in un mandato di pagamento','S','%<expenselast.kpay>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM057','1','D','expenselast','S','S','S','N','N',{ts '2012-07-18 10:21:01.907'},'sara','Il movimento di spesa %<expense.ymov>% / %<expense.nmov>% risulta già esitato','S','(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 
	 WHERE idexp= %<expenselast.idexp>%]{V}
	,0) = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM107','1','D','expenselast','S','S','S','N','N',{ts '2012-11-19 11:27:39.050'},'sa','Saldo iniziale + Tot. reversali emesse + Girofondi in entrata deve essere maggiore od uguale al Tot. pagamenti emessi + Girofondi in uscita.','N','ISNULL([SELECT currentfloatfund 
FROM treasurercashtotal 
WHERE ayear = %<sys_esercizio>%
and idtreasurer =isnull([select idtreasurer from payment
			where payment.kpay= &<expenselast.kpay>& ]{I},0)
]{V},0) >= 0

OR
&<expenselast.kpay>& IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR007','1','I','expenselast','S','S','S','N','N',{ts '2007-11-14 13:56:21.420'},'SARA','La data inizio validità dell''indirizzo predefinito del percipiente non è antecedente alla data di inizio della prestazione','N','(%<expenselast.servicestart>% IS NULL) 
OR EXISTS
(SELECT * FROM registryaddress 
       join expense on registryaddress.idreg=expense.idreg
	 JOIN address
 ON registryaddress.idaddresskind = address.idaddress
WHERE expense.idexp=%<expenselast.idexp>%
	AND (address.codeaddress=''07_SW_DEF'') 
          AND (%<expenselast.servicestart>%>=registryaddress.start) 
     AND ((registryaddress.stop IS NULL) 
		OR (%<expenselast.servicestart>%<=registryaddress.stop)))')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR014','1','I','expenselast','S','S','S','N','N',{ts '2008-09-18 12:16:52.000'},'SARA','Le coordinate bancarie CIN, ABI, e CAB  nel movimento di spesa non hanno lunghezze corrette.','S','(ISNULL(%<expenselast.cin>%,'''') = ''''
AND ISNULL(%<expenselast.idbank>%,'''') = ''''
AND ISNULL(%<expenselast.idcab>%,'''') = '''')
OR
(
DATALENGTH(ISNULL(%<expenselast.cin>%,'''')) = 1
AND DATALENGTH(ISNULL(%<expenselast.idbank>%,'''')) = 5
AND DATALENGTH(ISNULL(%<expenselast.idcab>%,'''')) = 5
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR014','3','I','expenselast','S','S','S','N','N',{ts '2008-09-18 15:00:34.610'},'SARA','Per il Monte dei Paschi di Siena il Conto Corrente Postale inserito nel movimento  di spesa deve avere una lunghezza massima di 10 caratteri.','S','-- Regola che vale per Monte Paschi di Siena, 
-- solo per la modalità CONTO CORRENTE POSTALE
-- in realtà la stored procedure parla di lunghezza massima della stringa pulita

ISNULL(
[SELECT idbank FROM treasurer WHERE flagdefault= ''S'']{C},'''') <> ''01030''
OR
--non è un  cc.postale
([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 2) = 0
OR
(DATALENGTH(ISNULL(%<expenselast.cc>%,'''')) <= 10)




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR014','4','I','expenselast','S','S','S','N','N',{ts '2008-09-18 12:29:24.317'},'SARA','Il Conto Corrente inserito nel movimento  di spesa contiene caratteri non validi.','S','(%<expenselast.cc>% IS NULL)
OR
(PATINDEX(''%[ -/]%'',ISNULL(%<expenselast.cc>%,'''')) = 0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR014','5','I','expenselast','S','S','S','N','N',{ts '2008-09-18 14:25:00.277'},'SARA','Il Conto Corrente Postale inserito nel movimento  di spesa deve avere una lunghezza massima di 8 caratteri.','S','-- Regola che vale solo per la modalità CONTO CORRENTE POSTALE
-- in realtà la stored procedure parla di lunghezza massima della stringa pulita

--Escludiamo il MPS, che prevede una lunghezza massima di 10 caratteri
ISNULL(
[SELECT idbank FROM treasurer WHERE flagdefault= ''S'']{C},'''') = ''01030''
OR
-- Non scatta se non è conto corrente postale
([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 2) = 0
OR
--lunghezza massima pari a 8 
(DATALENGTH(ISNULL(%<expenselast.cc>%,''''))  <= 8)




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR014','6','I','expenselast','S','S','S','N','N',{ts '2008-09-18 15:00:54.733'},'SARA','Il numero di Conto Corrente inserito nel movimento di spesa  deve avere un numero di caratteri pari a 12.','S','--Regola che controlla la lunghezza del C/C in caso di Bonifico
--La banca pop. Bari se è un Bonifico presso lo stesso istituto Cassiere ha lunghezza massima
--pari a 8, anzichè 12
(ISNULL(
[SELECT idbank FROM treasurer WHERE flagdefault= ''S'']{C},'''') = ''05424''
AND
([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 16) <> 0
)
OR
--fa si che non scatti per mod.pagamento cc.postale
([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 2) <>0
OR
(DATALENGTH(  ISNULL(%<expenselast.cc>%,'''')) = 12)
OR
--C/C non valorizzato
(ISNULL(%<expenselast.cc>%,'''')  = '''')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR017','1','I','expenselast','S','S','S','N','N',{ts '2008-09-16 15:01:28.207'},'NINO','Nella modalità di pagamento "%<paymethod.description>%" non si devono specificare le coordinate bancarie','S','([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 8) = 0
or (isnull(%<expenselast.iban>%, '''') = ''''
	and isnull(%<expenselast.cin>%, '''') = ''''
	and isnull(%<expenselast.idbank>%, '''') = ''''
	and isnull(%<expenselast.idcab>%, '''') = ''''
	and isnull(%<expenselast.cc>%, '''') = '''')
or
--fa si che non scatti per mod.pagamento cc.postale
([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 2) <>0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR017','2','I','expenselast','S','S','S','N','N',{ts '2008-09-16 15:01:56.397'},'NINO','Nella modalità di pagamento "%<paymethod.description>%" è obbligatorio specificare le coordinate bancarie','S','([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 4) = 0
or (isnull(substring(%<expenselast.iban>% ,1,2), '''') <> ''IT'')
or (isnull(%<expenselast.cin>%, '''') <> ''''
	and isnull(%<expenselast.idbank>%, '''') <> ''''
	and isnull(%<expenselast.idcab>%, '''') <> ''''
	and isnull(%<expenselast.cc>%, '''') <> '''')

or

--fa si che non scatti per mod.pagamento cc.postale
([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 2) <>0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR017','3','I','expenselast','S','S','S','N','N',{ts '2008-02-19 13:36:51.093'},'SA','Nella modalità di pagamento "%<paymethod.description>%" si deve specificare il numero di conto e non ci devono essere le altre coordinate bancarie','S','([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 2) = 0
or (isnull(%<expenselast.iban>%, '''') = ''''
	and isnull(%<expenselast.cin>%, '''') = ''''
	and isnull(%<expenselast.idbank>%, '''') = ''''
	and isnull(%<expenselast.idcab>%, '''') = ''''
	and isnull(%<expenselast.cc>%,'''') <> '''')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR017','4','I','expenselast','S','S','S','N','N',{ts '2009-04-10 12:39:52.660'},'SARA','Attenzione si sta utilizzando la modalità di pagamento  "%<paymethod.description>%" che non è attiva','S','-- Non sono consentite le modalità di pagamento non attive
ISNULL( 
[(SELECT paymethod.active
FROM paymethod 
WHERE paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{C}
,''S'') = ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR017','5','I','expenselast','S','S','S','N','N',{ts '2011-05-23 12:26:20.063'},'assistenza','La modalità di pagamento %<paymethod.description>% può essere utilizzata solo dall''Amministrazione','N','user=''amministrazione''  
OR
 [ SELECT COUNT(*) FROM dbdepartment]{I}=1  

OR 

(([(select flag from paymethod  where idpaymethod = %<expenselast.idpaymethod>%) ]{I} & 64) = 0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR020','1','I','expenselast','S','S','S','N','N',{ts '2008-06-16 09:53:51.030'},'SARA','Nella modalità di pagamento "%<paymethod.description>%" è obbligatorio specificare l''IBAN. Se sono presenti ABI, CAB, CIN e CC l''IBAN può essere calcolato automaticamente dal programma mediante la procedura "Calcolo IBAN" dal menu Anagrafiche','S','([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 4) = 0
or (isnull(%<expenselast.iban>%, '''') <> '''')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR020','2','I','expenselast','S','S','S','N','N',{ts '2008-07-16 13:37:57.360'},'SARA','Poichè sono presenti ABI, CAB, CIN e CC nella modalità di pagamento selezionata l''IBAN può essere calcolato automaticamente dal programma mediante la procedura "Calcolo IBAN" dal menu Anagrafiche','S','([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 4) = 0
or (isnull(%<expenselast.iban>%, '''') <> '''' )
or (isnull(%<expenselast.cin>%, '''') = '''')
or (isnull(%<expenselast.idbank>%, '''') = '''')
or (isnull(%<expenselast.idcab>%, '''') = '''')
or (isnull(%<expenselast.cc>%, '''') = '''')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR024','1','I','expenselast','S','S','S','N','N',{ts '2013-02-08 12:06:16.783'},'sa','Si è inserito un ABI disattivo (%<expenselast.idbank>%) per il percipiente %<expenseview.registry>%','S','%<expenselast.idbank>% IS NULL
OR
(
ISNULL(
[SELECT flagusable FROM bank 
WHERE idbank = %<expenselast.idbank>%]{C},''S'') = ''S'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR024','2','I','expenselast','S','S','S','N','N',{ts '2013-02-08 12:06:11.293'},'sa','Si è inserito un CAB disattivo ( %<expenselast.idcab>%) per il percipiente %<expenseview.registry>%','S','%<expenselast.idcab>% IS NULL
OR
(
ISNULL(
[SELECT flagusable FROM cab 
WHERE idcab = %<expenselast.idcab>%
and idbank = %<expenselast.idbank>%]{C},''S'') = ''S'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BOLLE001','1','I','expenselast','S','S','S','N','N',{ts '2013-07-08 09:47:53.957'},'nino','La somma dei movimenti di spesa collegati alla bolletta n. %<expenselast.nbill>% NON può essere maggiore dell''importo della bolletta','N','(%<expenselast.nbill>% IS NULL) 
OR  
ISNULL([SELECT SUM(curramount)
FROM expenselast
join expensetotal
on expenselast.idexp = expensetotal.idexp
WHERE nbill = %<expenselast.nbill>%
AND ayear = %<sys_esercizio>%]{V},0)
<= 
ISNULL(
[SELECT ISNULL(total, 0) 
from bill
where nbill= %<expenselast.nbill>% 
	and ybill = %<sys_esercizio>%
	and billkind =''D'']{V}
,0) 



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','I','expenselast','S','S','S','N','N',{ts '2007-12-15 09:42:59.627'},'NINO','Il movimento di spesa %<expenseview.phase>% n. %<expenseview.nmov>% / %<expenseview.ymov>% non può essere inserito. Esercizio  %<esercizio>% chiuso','N','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM034','1','I','expenselast','S','S','S','N','N',{ts '2007-08-23 08:54:57.717'},'NINO','Per il movimento di spesa  non è stata selezionata una modalità di pagamento','S','(%<expenselast.idpaymethod>% is not null)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM042','1','I','expenselast','S','S','S','N','N',{ts '2007-08-23 08:59:55.017'},'NINO','Le ritenute associate alla prestazione selezionata  non saranno gestite nelle stampe delle certificazioni ufficiali, trasmissioni EMENS, modello 770 ecc.','S','
([SELECT COUNT(*) from service  
  WHERE service.idser = %<expenselast.idser>% AND
  service.allowedit= ''S'']{I}=0
)
OR
(%<expenselast.idser>% IS NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM052','1','I','expenselast','S','S','S','N','N',{ts '2009-05-14 13:24:35.827'},'SA','Non è possibile inserire più di 15 classificazioni SIOPE per il movimento di spesa  %<expenselastview.ymov>% / %<expenselastview.nmov>% inserito nel Mandato N.%<expenselastview.npay>%.','N','ISNULL([
	(SELECT COUNT(distinct expensesorted.idsor)  FROM expensesorted
	JOIN sorting
		ON expensesorted.idsor = sorting.idsor
	JOIN sortingkind
		ON sortingkind.idsorkind = sorting.idsorkind
	WHERE ''07U_SIOPE''= sortingkind.codesorkind 
		AND expensesorted.idexp = %<expenselast.idexp>%)
	]{I} 
	,0) 
<=15

OR 
%<expenselast.kpay>% is null

OR
(
[SELECT ymov FROM expense
	WHERE idexp = %<expenselast.idexp>%]{I} <
ISNULL([SELECT isnull(start,1900) FROM sortingkind
	WHERE codesorkind = ''07U_SIOPE'']{I},3000)
)

OR 

( ISNULL([(SELECT idbank FROM treasurer 
	JOIN payment
		ON treasurer.idtreasurer = payment.idtreasurer
	WHERE  payment.kpay  =  %<expenselast.kpay>% )]{C} ,'''')<>''01030'')



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM058','1','I','expenselast','S','S','S','N','N',{ts '2009-01-20 12:14:07.447'},'SA','Il movimento n. %<expense.ymov>% / %<expense.nmov>% non può essere portato a pagamento in quanto il relativo compenso a dipendente non è stato marcato come "Eseguito quindi pagabile"','N','(
[SELECT COUNT(*) FROM expensewageaddition ewa
 join expenselink on ewa.idexp=expenselink.idparent
 join wageaddition wa ON ewa.ycon = wa.ycon
			   AND ewa.ncon = wa.ncon
WHERE expenselink.idchild= %<expenselast.idexp>%
      AND wa.completed <> ''S''
 ]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM058','2','I','expenselast','S','S','S','N','N',{ts '2009-01-20 12:14:04.930'},'SA','Il movimento n. %<expense.ymov>% / %<expense.nmov>% non può essere portato a pagamento in quanto la relativa prestazione occasionale non è stata marcata come "Eseguita quindi pagabile"','N','(
[SELECT COUNT(*) FROM expensecasualcontract ewa
 join expenselink on ewa.idexp=expenselink.idparent
 join casualcontract wa ON ewa.ycon = wa.ycon
			   AND ewa.ncon = wa.ncon
WHERE expenselink.idchild= %<expenselast.idexp>%
      AND wa.completed <> ''S''
 ]{I} = 0
)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM058','3','I','expenselast','S','S','S','N','N',{ts '2009-01-20 12:17:51.197'},'SA','Il movimento n. %<expense.ymov>% / %<expense.nmov>% non può essere portato a pagamento in quanto la relativa missione non è stata marcata come "Eseguita quindi pagabile"','N','(
[SELECT COUNT(*) FROM expenseitineration ewa
 join expenselink on ewa.idexp=expenselink.idparent
 join  itineration wa ON ewa.iditineration= wa.iditineration
WHERE expenselink.idchild= %<expenselast.idexp>%
      AND wa.completed <> ''S''
	AND ewa.movkind=4
 ]{I} = 0
)



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM060','1','I','expenselast','S','S','S','N','N',{ts '2007-12-05 15:14:12.090'},'SARA','Il mov. di spesa n. %<expenselastview.nmov>% / %<expenselastview.ymov>% ha una imputazione (competenza / residui) differente rispetto al mandato al quale è associato','N','%<expenselast.kpay>% IS NULL
OR
ISNULL(
	[SELECT payment_flag FROM config WHERE ayear = %<payment.ypay>%]{I}
,0) & 8 <> 8
OR

([SELECT flag 
FROM payment
WHERE payment.kpay = %<expenselast.kpay>%
]{I} & 2 )
= ( [SELECT totflag FROM expenselastview 
	WHERE idexp = %<expenselast.idexp>%]{I} & 1)*2 



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM093','1','I','expenselast','S','S','S','N','N',{ts '2011-06-09 12:32:35.717'},'sa','Per la modalità di pagamento con disposizione cartacea allegata è obbligatorio specificare la descrizione, con i riferimenti dell''allegato, da inviare al tesoriere. Premere il tasto "Modifica" nella scheda "Mandato" e compilare la descrizione della modalità di pagamento.','S','ISNULL(
[SELECT idbank FROM treasurer WHERE flagdefault= ''S'']{C},'''') <> ''03067''
OR
[SELECT ISNULL(methodbankcode,'''') 
FROM  paymethod
WHERE idpaymethod  = %<expenselast.idpaymethod>%
]{C} <> ''84''
OR
ISNULL(%<expenselast.paymentdescr>%,'''')  <> ''''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM107','1','I','expenselast','S','S','S','N','N',{ts '2012-11-16 10:12:49.980'},'sa','Saldo iniziale + Tot. reversali emesse + Girofondi in entrata deve essere maggiore od uguale al Tot. pagamenti emessi + Girofondi in uscita.','N','-- Creazioone del pagamento e del mandato contemporaneamente
ISNULL([SELECT currentfloatfund 
FROM treasurercashtotal 
WHERE ayear = %<sys_esercizio>%
and idtreasurer =isnull([select idtreasurer from payment
			where payment.kpay= %<expenselast.kpay>% ]{I},0)
]{V},0) >= 0

OR
%<expenselast.kpay>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','I','expenselast','S','S','S','N','N',{ts '2010-04-30 10:26:25.267'},'SARA','Manca la riga di imputazione del contratto occasionale, nell''esercizio corrente. Contattare il servizio assistenza.','N','(
[SELECT COUNT(*) FROM expensecasualcontract ECC
 join expenselink 
	on ECC.idexp=expenselink.idparent
 join casualcontract CC 
	  ON ECC.ycon = CC.ycon
	AND ECC.ncon = CC.ncon
WHERE expenselink.idchild= %<expenselast.idexp>% ]{I} = 0
)


OR

(
[SELECT COUNT(*) FROM expensecasualcontract ECC
 join expenselink 
	on ECC.idexp=expenselink.idparent
 join casualcontractyear CCY 
	  ON ECC.ycon = CCY.ycon
	AND ECC.ncon = CCY.ncon
WHERE expenselink.idchild= %<expenselast.idexp>% AND CCY.ayear = %<sys_esercizio>%
 ]{I} = 1
)

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF003','1','I','expenselast','S','S','S','N','N',{ts '2007-12-05 15:53:37.063'},'PINO','La missione non può essere liquidata se non vengono liquidati tutti gli anticipi su partita di giro','N','
[ISNULL([SELECT movkind FROM expenseitineration
		JOIN expenselink on expenseitineration.idexp=expenselink.idparent         
            WHERE expenselink.idchild = %<expenselast.idexp>%]{C},''X'')]{C} <> 4

OR
--importo contabilizzato anticipi
[SELECT ISNULL(SUM(ET.curramount),0) 
FROM expensetotal ET
     join expenseitineration EI1 on EI1.idexp = ET.idexp
     join  expenseitineration EI2 on EI1.iditineration= EI2.iditineration
     join expenselink EL2 on EL2.idparent= EI2.idexp     
WHERE ET.ayear = %<sys_esercizio>% AND
      EL2.idchild= %<expenselast.idexp>% AND
      EI1.movkind=5 AND
      EL2.nlevel= %<sys_itinerationphase>%
]{V}
=
[SELECT ISNULL(SUM(ET.curramount),0) 
FROM expensetotal ET 
     join expenselink EL1 on EL1.idchild = ET.idexp
     join expenseitineration EI1 on EI1.idexp =  EL1.idparent
     join expenseitineration EI2 on EI1.iditineration= EI2.iditineration
     join expenselink EL2 on EL2.idparent= EI2.idexp     
	JOIN expenselast 
	ON expenselast.idexp = ET.idexp
WHERE ET.ayear = %<sys_esercizio>% AND
      EL2.idchild= %<expenselast.idexp>% AND
      EI1.movkind=5 AND
      EL2.nlevel= %<sys_itinerationphase>%
]{V}

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR007','1','U','expenselast','S','S','S','N','N',{ts '2007-11-14 13:49:41.313'},'SARA','La data inizio validità dell''indirizzo predefinito del percipiente non è antecedente alla data di inizio della prestazione','N','(%<expenselast.servicestart>% IS NULL) 
OR EXISTS
(SELECT * FROM registryaddress 
   join expense ON  registryaddress.idreg= expense.idreg
   JOIN address
 	ON registryaddress.idaddresskind = address.idaddress
WHERE 
           expense.idexp= %<expenselast.idexp>%
           AND (address.codeaddress=''07_SW_DEF'') 
               AND (%<expenselast.servicestart>%>=registryaddress.start) 
               AND ((registryaddress.stop IS NULL) OR (%<expenselast.servicestart>%<=registryaddress.stop)))')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR014','2','U','expenselast','S','S','S','N','N',{ts '2008-09-18 15:01:20.703'},'SARA','Per il Monte dei Paschi di Siena il Conto Corrente Postale inserito nel movimento  di spesa %<expense.ymov>% / %<expense.nmov>% deve avere una lunghezza massima di 10 caratteri.','S','-- Regola che vale per Monte Paschi di Siena, 
--solo per la modalità CONTO CORRENTE POSTALE
ISNULL(
[SELECT idbank FROM treasurer WHERE flagdefault = ''S'']{C},'''') <> ''01030''
OR
--non è un  cc.postale
([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 2) = 0
OR
(DATALENGTH(ISNULL(%<expenselast.cc>%,'''')) <= 10)
OR
(ISNULL(&<expenselast.cc>&,'''') = ISNULL(%<expenselast.cc>%,''''))









')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR014','3','U','expenselast','S','S','S','N','N',{ts '2008-09-18 15:23:00.307'},'SARA','Il Conto Corrente Postale inserito nel movimento  di spesa %<expense.ymov>% / %<expense.nmov>% deve avere una lunghezza massima di 8 caratteri.','S','-- Regola che vale solo per la modalità CONTO CORRENTE POSTALE
-- in realtà la stored procedure parla di lunghezza massima della stringa pulita

--Escludiamo il MPS, che prevede una lunghezza massima di 10 caratteri
(ISNULL(
[SELECT idbank FROM treasurer WHERE flagdefault= ''S'']{C},'''') = ''01030''
)
OR
-- non è un conto corrente postale
([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 2) = 0
OR
(DATALENGTH(ISNULL(%<expenselast.cc>%,'''')) <=8)
OR
(
ISNULL(%<expenselast.cin>%,'''') = ''''
AND ISNULL(%<expenselast.idbank>%,'''') = ''''
AND ISNULL(%<expenselast.idcab>%,'''') = ''''
AND ISNULL(%<expenselast.cc>%,'''') = ''''
)
OR
(ISNULL(&<expenselast.cc>&,'''') = ISNULL(%<expenselast.cc>%,''''))





')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR014','4','U','expenselast','S','S','S','N','N',{ts '2008-09-18 12:34:36.330'},'SARA','Il Conto Corrente inserito nel movimento  di spesa %<expense.ymov>% / %<expense.nmov>% contiene caratteri non validi','S','(%<expenselast.cc>% IS NULL)
OR
(PATINDEX(''%[ -/]%'',ISNULL(%<expenselast.cc>%,'''')) = 0)
OR
(ISNULL(&<expenselast.cc>&,'''') = ISNULL(%<expenselast.cc>%,''''))
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR014','5','U','expenselast','S','S','S','N','N',{ts '2008-09-18 15:01:43.063'},'SARA','Il numero di Conto Corrente inserito nel movimento di spesa %<expense.ymov>% / %<expense.nmov>%  deve avere un numero di caratteri pari a 12.','S','--Regola che controlla la lunghezza del C/C in caso di Bonifico
--La banca pop. Bari se è un Bonifico presso lo stesso istituto Cassiere ha lunghezza massima
--pari a 8, anzichè 12
(ISNULL(
[SELECT idbank FROM treasurer WHERE flagdefault= ''S'']{C},'''') = ''05424''
AND
([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 16) <> 0
)
OR
--fa si che non scatti per mod.pagamento cc.postale
([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 2) <>0
OR
(DATALENGTH(  ISNULL(%<expenselast.cc>%,'''')) = 12)
OR
--C/C non valorizzato
(ISNULL(%<expenselast.cc>%,'''')  = '''')
OR
(ISNULL(&<expenselast.cc>&,'''') = ISNULL(%<expenselast.cc>%,''''))

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR014','6','U','expenselast','S','S','S','N','N',{ts '2008-09-18 15:39:13.047'},'SARA','Le coordinate bancarie CIN, ABI, e CAB  nel movimento di spesa non hanno lunghezze corrette.','S','(ISNULL(%<expenselast.cin>%,'''') = ''''
AND ISNULL(%<expenselast.idbank>%,'''') = ''''
AND ISNULL(%<expenselast.idcab>%,'''') = '''')
OR
(
DATALENGTH(ISNULL(%<expenselast.cin>%,'''')) = 1
AND DATALENGTH(ISNULL(%<expenselast.idbank>%,'''')) = 5
AND DATALENGTH(ISNULL(%<expenselast.idcab>%,'''')) = 5
)
OR
(
ISNULL(&<expenselast.cin>&,'''') = ISNULL(%<expenselast.cin>%,'''')
AND
ISNULL(&<expenselast.idbank>&,'''') = ISNULL(%<expenselast.idbank>%,'''')
AND 
ISNULL(&<expenselast.idcab>&,'''') = ISNULL(%<expenselast.idcab>%,'''')
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR015','1','U','expenselast','S','S','S','N','N',{ts '2007-09-05 09:05:48.967'},'NINO','Le coordinate bancarie del movimento di spesa %<expense.ymov>% /%<expense.nmov>%  non sono corrette','S','(ISNULL(%<expenselast.cin>%,'''') = ''''
AND ISNULL(%<expenselast.idbank>%,'''') = ''''
AND ISNULL(%<expenselast.idcab>%,'''') = '''')
OR
(
DATALENGTH(ISNULL(%<expenselast.cin>%,'''')) = 1
AND DATALENGTH(ISNULL(%<expenselast.idbank>%,'''')) = 5
AND DATALENGTH(ISNULL(%<expenselast.idcab>%,'''')) = 5
)
OR
(
ISNULL(&<expenselast.cin>&,'''') = ISNULL(%<expenselast.cin>%,'''')
AND ISNULL(&<expenselast.idbank>&,'''') = ISNULL(%<expenselast.idbank>%,'''')
AND ISNULL(&<expenselast.idcab>&,'''') = ISNULL(%<expenselast.idcab>%,''''))
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR017','1','U','expenselast','S','S','S','N','N',{ts '2008-09-16 15:04:29.990'},'NINO','Nella modalità di pagamento "%<paymethod.description>%" non si devono specificare le coordinate bancarie','S','([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 8) = 0
or (isnull(%<expenselast.iban>%, '''') = ''''
	and isnull(%<expenselast.cin>%, '''') = ''''
	and isnull(%<expenselast.idbank>%, '''') = ''''
	and isnull(%<expenselast.idcab>%, '''') = ''''
	and isnull(%<expenselast.cc>%, '''') = '''')
or
--fa si che non scatti per mod.pagamento cc.postale
([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 2) <>0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR017','2','U','expenselast','S','S','S','N','N',{ts '2008-09-16 15:04:49.317'},'NINO','Nella modalità di pagamento "%<paymethod.description>%" è obbligatorio specificare le coordinate bancarie','S','([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 4) = 0
or (isnull(substring(%<expenselast.iban>% ,1,2), '''') <> ''IT'')
or (isnull(%<expenselast.cin>%, '''') <> ''''
	and isnull(%<expenselast.idbank>%, '''') <> ''''
	and isnull(%<expenselast.idcab>%, '''') <> ''''
	and isnull(%<expenselast.cc>%, '''') <> '''')
or
--fa si che non scatti per mod.pagamento cc.postale
([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 2) <>0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR017','3','U','expenselast','S','S','S','N','N',{ts '2008-02-19 13:37:09.593'},'SA','Nella modalità di pagamento "%<paymethod.description>%" si deve specificare il numero di conto e non ci devono essere le altre coordinate bancarie','S','([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 2) = 0
or (isnull(%<expenselast.iban>%, '''') = ''''
	and isnull(%<expenselast.cin>%, '''') = ''''
	and isnull(%<expenselast.idbank>%, '''') = ''''
	and isnull(%<expenselast.idcab>%, '''') = ''''
	and isnull(%<expenselast.cc>%, '''') <> '''')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR017','4','U','expenselast','S','S','S','N','N',{ts '2009-04-10 12:39:55.943'},'SARA','Attenzione si sta utilizzando la modalità di pagamento "%<paymethod.description>%"  che non è attiva.','S','--Non sono consentite le modalità di pagamento non attive 
ISNULL( 
[(SELECT paymethod.active
FROM paymethod 
WHERE paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{C}
,''S'') = ''S''
OR
ISNULL(%<expenselast.idpaymethod>%,'''') = ISNULL(&<expenselast.idpaymethod>&,'''')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR017','5','U','expenselast','S','S','S','N','N',{ts '2011-05-23 12:27:46.780'},'assistenza','La modalità di pagamento %<paymethod.description>% può essere utilizzata solo dall''Amministrazione','N','user=''amministrazione''  
OR
 [ SELECT COUNT(*) FROM dbdepartment]{I}=1  

OR 

(([(select flag from paymethod  where idpaymethod = %<expenselast.idpaymethod>%) ]{I} & 64) = 0)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR020','1','U','expenselast','S','S','S','N','N',{ts '2008-06-16 09:53:51.047'},'SARA','Nella modalità di pagamento "%<paymethod.description>%" è obbligatorio specificare l''IBAN. Se sono presenti ABI, CAB, CIN e CC l''IBAN può essere calcolato automaticamente dal programma mediante la procedura "Calcolo IBAN" dal menu Anagrafiche.','S','([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 4) = 0
or (isnull(%<expenselast.iban>%,'''') <> '''')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR020','2','U','expenselast','S','S','S','N','N',{ts '2008-07-16 15:20:15.453'},'SARA','Poichè sono presenti ABI, CAB, CIN e CC nella modalità di pagamento selezionata l''IBAN può essere calcolato automaticamente dal programma mediante la procedura "Calcolo IBAN" dal menu Anagrafiche','S','([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<expenselast.idpaymethod>%
)]{I} & 4) = 0
or (isnull(%<expenselast.iban>%, '''') <> '''' )
or (isnull(%<expenselast.cin>%, '''') = '''')
or (isnull(%<expenselast.idbank>%, '''') = '''')
or (isnull(%<expenselast.idcab>%, '''') = '''')
or (isnull(%<expenselast.cc>%, '''') = '''')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR024','1','U','expenselast','S','S','S','N','N',{ts '2013-02-08 12:06:05.803'},'sa','Si sta usando un ABI disattivo (%<expenselast.idbank>%) per il percipiente %<expenseview.registry>%','S','%<expenselast.idbank>% IS NULL
OR
(
ISNULL(
[SELECT flagusable FROM bank 
WHERE idbank = %<expenselast.idbank>%]{C},''S'') = ''S'')

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR024','2','U','expenselast','S','S','S','N','N',{ts '2009-01-20 11:47:08.633'},'NINO','Si sta usando un CAB disattivo ( %<expenselast.idcab>%) per il percipiente %<expenseview.registry>%','S','%<expenselast.idcab>% IS NULL
OR
(
ISNULL(
[SELECT flagusable FROM cab 
WHERE idcab = %<expenselast.idcab>%
and idbank = %<expenselast.idbank>%]{C},''S'') = ''S'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BOLLE001','1','U','expenselast','S','S','S','N','N',{ts '2013-07-08 09:48:16.707'},'nino','La somma dei movimenti di spesa collegati alla bolletta n. %<expenselast.nbill>% NON può essere maggiore dell''importo della bolletta','N','(%<expenselast.nbill>% IS NULL) 
OR  
ISNULL([SELECT SUM(curramount)
FROM expenselast
join expensetotal
on expenselast.idexp = expensetotal.idexp
WHERE nbill = %<expenselast.nbill>%
AND ayear = %<sys_esercizio>%]{V},0)
<= 
ISNULL(
[SELECT ISNULL(total, 0) 
from bill
where nbill= %<expenselast.nbill>% 
	and ybill = %<sys_esercizio>%
	and billkind =''D'']{V}
,0)  
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','U','expenselast','S','S','S','N','N',{ts '2007-12-13 14:22:16.013'},'NINO','Il movimento di spesa %<expenseview.phase>% n. %<expenseview.nmov>% / %<expenseview.ymov>% non può essere modificato. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM007','1','U','expenselast','S','S','S','N','N',{ts '2011-09-21 11:41:39.750'},'sara','Il movimento finanziario è incluso nel mandato di pagamento  %<expenselastview.npay>% già trasmesso e quindi non può essere modificato','N','-- Caso di rimozione del movimento di spesa dal mandato di pagamento
(
 isnull([SELECT kpaymenttransmission 
	FROM payment 
	where kpay = &<expenselast.kpay>&
 ]{I},0)=0
 OR
 &<expenselast.kpay>& IS NULL
)
AND
(
-- Caso di inserimento del movimento di spesa nel mandato di pagamento
( 
 isnull([SELECT kpaymenttransmission
	from payment
	where kpay = %<expenselast.kpay>%]{I} ,0)=0
 OR
 %<expenselast.kpay>% IS NULL
)

OR
   (&<expenselast.kpay>& IS NULL AND %<expenselast.kpay>% IS NULL)

)

OR
(
-- La regola scatta se non è abilitato al mandato informatico oppure non ci sono le variazioni speciali di modifica dati 
-- Quindi se è abilitato al mandato informatico e il mov. contiene var speciali di modifica dati, il mov. può essere modificato.[sara]
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expenselast.idexp>%]{C},''N'' )= ''S'')
AND
[(SELECT count(*)  from expensevar 
 where idexp = %<expenselast.idexp>%
AND kpaymenttransmission IS NULL AND autokind = 22)]{I} <> 0
AND
-- unicredit non permette le variazioni di dati contabili ma solo del Siope
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM expenselast
JOIN payment 
	ON payment.kpay = expenselast.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expenselast.idexp>%]{C},'''' )<> ''02008''
)

)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM022','1','U','expenselast','S','S','S','N','N',{ts '2008-06-13 10:37:29.440'},'NINO','Non può essere modificata la prestazione se ci sono ritenute e/o correzioni ad essa associate','N','ISNULL(&<expenselast.idser>&, 0) = ISNULL(%<expenselast.idser>%,0)
OR
([SELECT COUNT(*) FROM expensetax WHERE idexp = %<expenselast.idexp>%]{I}
+
[SELECT COUNT(*) FROM expensetaxcorrige WHERE idexp = %<expenselast.idexp>%]{I}
= 0)
OR
ISNULL(&<expenselast.idser>& ,0)=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM029','1','U','expenselast','S','S','S','N','N',{ts '2007-12-05 13:08:37.277'},'SARA','Non possono essere presenti nel mandato %<expenselastview.npay>% sia movimenti che hanno copertura di iniziativa sia movimenti che non la hanno','N','--post
[SELECT COUNT(*) FROM expenselast
 join expense on expense.idexp= expenselast.idexp
WHERE expense.ymov = %<sys_esercizio>%
AND kpay = %<expenselast.kpay>%
AND (flag & 1) <> (%<expenselast.flag>% & 1) ]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM042','1','U','expenselast','S','S','S','N','N',{ts '2007-08-23 14:36:03.797'},'NINO','Le ritenute associate alla prestazione selezionata  non saranno gestite nelle stampe delle certificazioni ufficiali, trasmissioni EMENS, modello 770 ecc.','S','
ISNULL(&<expenselast.idser>&,'''') = ISNULL(%<expenselast.idser>%,'''')
OR
([SELECT COUNT(*) from service  
  WHERE service.idser = %<expenselast.idser>% AND
  service.allowedit= ''S'']{I}=0
)
OR
(%<expenselast.idser>% IS NULL)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM049','1','U','expenselast','S','S','S','N','N',{ts '2007-12-05 14:14:53.840'},'SARA','Non si può rimuovere il movimento di spesa  %<expense.nmov>% dal mandato perchè già esitato','N','(%<expenselast.kpay>% IS NOT NULL)
OR
(
(ISNULL(%<expenselast.kpay>%,0) = ISNULL(&<expenselast.kpay>&,0))
)
OR 
[(SELECT count(*) 
from banktransaction 
where idexp = %<expenselast.idexp>%)]{V} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM052','1','U','expenselast','S','S','S','N','N',{ts '2009-05-14 13:24:40.767'},'SA','Non è possibile inserire più di 15 classificazioni SIOPE per il movimento di spesa  %<expenselastview.ymov>% / %<expenselastview.nmov>% inserito nel Mandato N.%<payment.npay>%.','N','ISNULL([
	(SELECT COUNT(distinct expensesorted.idsor)  FROM expensesorted
	JOIN sorting
		ON expensesorted.idsor = sorting.idsor
	JOIN sortingkind
		ON sortingkind.idsorkind = sorting.idsorkind
	WHERE ''07U_SIOPE''= sortingkind.codesorkind 
		AND expensesorted.idexp = %<expenselast.idexp>%)
	]{I} 
	,0) 
<=15

OR 
isnull(%<expenselast.kpay>%,0) = isnull(&<expenselast.kpay>&,0)
OR 
%<expenselast.kpay>% is null

OR
(
[SELECT ymov FROM expense
	WHERE idexp = %<expenselast.idexp>%]{I} <
ISNULL([SELECT isnull(start,1900) FROM sortingkind
	WHERE codesorkind = ''07U_SIOPE'']{I},3000)
)

OR 

( ISNULL([(SELECT idbank FROM treasurer 
	JOIN payment
		ON treasurer.idtreasurer = payment.idtreasurer
	WHERE  payment.kpay  =  %<expenselast.kpay>% )]{C} ,'''')<>''01030'')


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM057','1','U','expenselast','S','S','S','N','N',{ts '2012-07-18 10:21:23.780'},'sara','Il movimento di spesa %<expense.nmov>% risulta già esitato e non può essere modificato','S','(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 
	 WHERE idexp= %<expenselast.idexp>%]{V}
	,0) = 0)
OR
(
%<expenselast.kpay>% is null
AND
&<expenselast.kpay>& is null
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM060','1','U','expenselast','S','S','S','N','N',{ts '2008-02-11 13:20:25.450'},'SA','Il mov. di spesa n. %<expenselastview.nmov>% / %<expenselastview.ymov>% ha una imputazione (competenza / residui) differente rispetto al mandato al quale è associato','N','%<expenselast.kpay>% IS NULL
OR
ISNULL(
	[SELECT payment_flag FROM config WHERE ayear = %<payment.ypay>%]{I}
,0) & 8 <> 8
OR
([SELECT flag
FROM payment
WHERE payment.kpay = %<expenselast.kpay>%
]{I}  & 2 ) 
= ( [SELECT totflag FROM expenselastview WHERE idexp = %<expenselast.idexp>%]{I} & 1)*2  



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM067','1','U','expenselast','S','S','S','N','N',{ts '2012-03-27 09:14:07.813'},'sa','Il totale del mandato di pagamento associato non quadra più con la somma delle disposizioni di pagamento ad esso associate','N','%<expenselast.kpay>% is null

OR

[select count(*) from paydisposition 
 WHERE kpay= %<expenselast.kpay>%
]{I}=0

OR

(
ISNULL([select sum(amount) from paydispositiondetail PD
 join paydisposition P ON PD.idpaydisposition=P.idpaydisposition
 WHERE P.kpay= %<expenselast.kpay>%
]{V},0)
=
ISNULL([select total from paymentview where 
 	kpay= %<expenselast.kpay>%
]{V},0)
-
ISNULL(  [SELECT SUM(employtax)  FROM expensetaxofficial  
WHERE expensetaxofficial.idexp = 
%<expenselast.idexp>%  
AND expensetaxofficial.stop IS NULL]{V} ,0)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM067','2','U','expenselast','S','S','S','N','N',{ts '2012-03-27 09:14:33.170'},'sa','Il totale del mandato di pagamento associato non quadra più con la somma delle disposizioni di pagamento ad esso associate','N','(%<expenselast.kpay>% is not null AND
 &<expenselast.kpay>& is null)
OR
(ISNULL(%<expenselast.kpay>%,0) = 
 ISNULL(&<expenselast.kpay>&,0))
OR
[select count(*) from paydisposition 
 WHERE kpay= isnull(&<expenselast.kpay>&,0)
]{I}=0
OR

(
ISNULL([select sum(amount) from paydispositiondetail PD
 join paydisposition P ON PD.idpaydisposition=P.idpaydisposition
 WHERE P.kpay= isnull(&<expenselast.kpay>&,0)
]{V},0)
=
ISNULL([select total from paymentview where 
 	kpay= isnull(&<expenselast.kpay>&,0)
]{V},0)
-
ISNULL(  [SELECT SUM(employtax)  FROM expensetaxofficial  
WHERE expensetaxofficial.idexp = 
%<expenselast.idexp>%  
AND expensetaxofficial.stop IS NULL]{V} ,0)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM074','1','U','expenselast','S','S','S','N','N',{ts '2008-11-05 11:38:04.523'},'SARA','La modifica alla Modalità di pagamenti comporterà la modifica alla stampa Ufficiale del Mandato di pagamento.','N',' (%<expenselast.idregistrypaymethod>% = &<expenselast.idregistrypaymethod>&)
OR
( isnull([SELECT count(*)
		FROM payment
		WHERE payment.kpay= %<expenselast.kpay>%
			AND payment.printdate is not null ]{I} ,0)=0 )
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM080','1','U','expenselast','S','S','S','N','N',{ts '2011-05-12 15:54:17.047'},'sara','Il Mandato di pagamento %<payment.npay>% / %<payment.ypay>% essendo associato a una disposizione di pagamento non può contenere più righe di mandato.','N','-- Regola che vale per Monte Paschi di Siena, 
ISNULL(
[SELECT idbank FROM treasurer WHERE flagdefault= ''S'']{C},'''') NOT IN (''01030'' ,''03067'')
OR
[SELECT COUNT(*) 
FROM  paydisposition
WHERE kpay  = %<expenselast.kpay>%
]{I} =  0
OR
[SELECT COUNT(*) 
FROM  expenselast
WHERE kpay  = %<expenselast.kpay>%
]{I} <=  1
OR 
%<expenselast.kpay>% = &<expenselast.kpay>&
OR
%<expenselast.kpay>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM083','1','U','expenselast','S','S','S','N','N',{ts '2009-09-22 16:39:05.733'},'SARA','Non è consentita la generazione di mandati in cui le Anagrafiche non abbiano nessuna delle seguenti informazioni impostate: Codice Fiscale, Codice Fiscale Estero, Partita IVA, in quanto potrebbero esserci problemi al momento della loro trasmissione in banca.','N','(%<expenselast.kpay>% is null AND
 &<expenselast.kpay>& is not null)
OR
(ISNULL(%<expenselast.kpay>%,0) = 
 ISNULL(&<expenselast.kpay>&,0))
OR 
--Anagrafica complementare
([(SELECT idregistryclass FROM registry 
JOIN expense
	ON registry.idreg = expense.idreg
JOIN expenselast 
	ON expenselast.idexp = expense.idexp
WHERE expenselast.idexp = %<expenselast.idexp>%)
]{C} = ''24'')
OR
([(SELECT COUNT(*) FROM registry 
JOIN expense
	ON registry.idreg = expense.idreg
JOIN expenselast 
	ON expenselast.idexp = expense.idexp
WHERE expenselast.idexp = %<expenselast.idexp>%
AND ISNULL(registry.p_iva,'' '') = '' ''
AND ISNULL(registry.foreigncf,'' '') = '' ''
AND ISNULL(registry.cf,'' '') = '' '')
]{I} = 0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM086','1','U','expenselast','S','S','S','N','N',{ts '2009-10-20 16:06:05.687'},'SARA','Non è di solito corretto modificare manualmente il conto di debito di un movimento finanziario.','S','isnull(%<expenselast.idaccdebit>%,'' '') = isnull(&<expenselast.idaccdebit>&,'' '')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM093','1','U','expenselast','S','S','S','N','N',{ts '2011-06-09 12:32:29.140'},'sa','Per la modalità di pagamento con disposizione cartacea allegata è obbligatorio specificare la descrizione, con i riferimenti dell''allegato, da inviare al tesoriere. Premere il tasto "Modifica" nella scheda "Mandato" e compilare la descrizione della modalità di pagamento.','S','ISNULL(%<expenselast.paymentdescr>%,'''')  = 
ISNULL(&<expenselast.paymentdescr>&,'''') 
OR
ISNULL(
[SELECT idbank FROM treasurer WHERE flagdefault= ''S'']{C},'''') <> ''03067''
OR
[SELECT ISNULL(methodbankcode,'''') 
FROM  paymethod
WHERE idpaymethod  = %<expenselast.idpaymethod>%
]{C} <> ''84''
OR
ISNULL(%<expenselast.paymentdescr>%,'''')  <> ''''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','1','U','expenselast','S','S','S','N','N',{ts '2013-03-12 09:40:19.570'},'mluisas','Nella gestione dell''ordinativo informatico per la Banca Popolare di Sondrio  non è possibile annullare parzialmente un documento.','N','%<expenselast.kpay>% = &<expenselast.kpay>& 
OR
%<expenselast.kpay>% IS NULL   
OR
(
ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM payment 
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE payment.kpay = %<expenselast.kpay>%] {C},''N'' )= ''N''
)
OR
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM payment 
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE payment.kpay = %<expenselast.kpay>% 
]{C},'''' )<>   ''05696''
)
OR
ISNULL([
SELECT COUNT(*) FROM expensevar EV
WHERE EV.idexp IN ( 
SELECT idexp FROM expenselast WHERE 
expenselast.kpay = %<expenselast.kpay>%)
AND ISNULL(EV.autokind,0) IN (10,11)
]{I} ,0) = 0
OR
ISNULL([
SELECT COUNT(*) FROM expenselastview EV
WHERE EV.idexp IN ( 
SELECT idexp FROM expenselast WHERE 
expenselast.kpay = %<expenselast.kpay>%)
AND ISNULL(EV.curramount,0) <> 0
]{I} ,0) = 0

 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','2','U','expenselast','S','S','S','N','N',{ts '2013-03-12 10:55:56.747'},'mluisas','Nella gestione dell''ordinativo informatico per la Banca Popolare di Sondrio  non è possibile aggiungere pagamenti ad un Mandato trasmesso se questi non erano presenti anche nel primo invio. L''ordine e il numero dei pagamenti devono restare invariati e sono consentite solo variazioni ai dati.','N','--caso aggiuta di un pagamento a un mandato
%<expenselast.kpay>% = &<expenselast.kpay>& 
OR
%<expenselast.kpay>% IS NULL
OR
(
ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM payment 
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE payment.kpay = %<expenselast.kpay>%] {C},''N'' )= ''N''
)
OR
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM payment 
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE payment.kpay = %<expenselast.kpay>% 
]{C},'''' )<>   ''05696''
)
OR
ISNULL([
SELECT COUNT(*) FROM expensevar EV
WHERE EV.idexp IN ( 
SELECT idexp FROM expenselast WHERE 
expenselast.kpay = %<expenselast.kpay>%)
AND ISNULL(EV.autokind,0) = 22
]{I} ,0) = 0

 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','3','U','expenselast','S','S','S','N','N',{ts '2013-03-12 10:55:28.337'},'mluisas','Nella gestione dell''ordinativo informatico per la Banca Popolare di Sondrio  non è possibile rimuovere pagamenti da un Mandato già trasmesso. L''ordine e il numero dei pagamenti devono restare invariati e sono consentite solo variazioni ai dati.','S','-- caso rimozione di un pagamento da un mandato
%<expenselast.kpay>% = &<expenselast.kpay>& 
OR
%<expenselast.kpay>% IS NOT  NULL
OR
(
ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM payment 
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE payment.kpay = &<expenselast.kpay>&] {C},''N'' )= ''N''
)
OR
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM payment 
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE payment.kpay = &<expenselast.kpay>&
]{C},'''' )<>   ''05696''
)
OR
ISNULL([
SELECT COUNT(*) FROM expensevar EV
WHERE EV.idexp IN ( 
SELECT idexp FROM expenselast WHERE 
expenselast.kpay = &<expenselast.kpay>&)
AND ISNULL(EV.autokind,0) = 22
]{I} ,0) = 0

 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM106','1','U','expenselast','S','S','S','N','N',{ts '2012-09-28 13:16:38.247'},'sa','I pagamenti con ritenute pari all''importo del pagamento stesso, aventi netto a  pagare uguale a zero,  devono essere associati alla modalità  "Pagamento per Cassa Interno".  Premere il tasto "Modifica" nella scheda "Mandato" e selezionare il corretto tipo di  modalità di pagamento senza specificare le coordinate bancarie.','S',' (%<expenselast.kpay>% is null AND
 &<expenselast.kpay>& is not null)
OR
(ISNULL(%<expenselast.kpay>%,0) = 
 ISNULL(&<expenselast.kpay>&,0))
OR
-- vale solo per il tesoriere unicredit
ISNULL(
[SELECT treasurer.idbank FROM treasurer 
JOIN payment ON treasurer.idtreasurer = payment.idtreasurer
WHERE payment.kpay= ISNULL(%<expenselast.kpay>%,0)]{C},'''') <> ''02008'' 
OR
--pagamento per cassa interno
[SELECT ISNULL(methodbankcode,'''') 
FROM  paymethod
WHERE idpaymethod  = %<expenselast.idpaymethod>%
]{C} = ''71'' 
-- confronto tra importo ritenute e importo del pagamento
OR
( 
 ISNULL([SELECT SUM(employtax) from expensetaxofficial where idexp=%<expenselast.idexp>% 
 AND expensetaxofficial.stop IS NULL ]{I},0) <> 
 ISNULL([SELECT curramount from expensetotal where idexp=%<expenselast.idexp>%]{I},0)
)
--pagamento senza ritenute
OR
(
 [SELECT COUNT(*) FROM expensetaxofficial
  WHERE expensetaxofficial.idexp= %<expenselast.idexp>% ]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM107','1','U','expenselast','S','S','S','N','N',{ts '2012-11-15 11:33:20.733'},'sa','Saldo iniziale + Tot. reversali emesse + Girofondi in entrata deve essere maggiore od uguale al Tot. pagamenti emessi + Girofondi in uscita.','N','-- Inserimento del pagamento nel mandato
ISNULL([SELECT currentfloatfund 
FROM treasurercashtotal 
WHERE ayear = %<sys_esercizio>%
and idtreasurer =isnull([select idtreasurer from payment
			where payment.kpay= %<expenselast.kpay>% ]{I},0)
]{V},0) >= 0

OR
%<expenselast.kpay>% = &<expenselast.kpay>&
OR
%<expenselast.kpay>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN003','1','U','expenselast','S','S','S','N','N',{ts '2008-06-12 13:02:15.330'},'NINO','Operazione Impossibile, la liquidazione della ritenuta %<taxpayexpenseview.taxdescription>% è stata effettuata','N','--post
(ISNULL(&<expenselast.kpay>&,0) = ISNULL(%<expenselast.kpay>%,0))
OR
([SELECT taxvaliditykind FROM config WHERE ayear = %<sys_esercizio>%]{I} <> 3)
OR
(
 [SELECT COUNT(*)
		FROM expensetax
		WHERE (ytaxpay is not null)  and (idinc IS NOT NULL) and idexp = %<expenselast.idexp>%
	]{I} +
	[SELECT COUNT(*)
	FROM expensetaxcorrige
	WHERE
	(
		(ytaxpay is not null)
		OR (linkedidinc is not null)
		OR (linkedidexp IS NOT NULL)
	) and idexp = %<expenselast.idexp>%]{I} = 0
)

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM006','1','U','expenselast','S','S','S','N','N',{ts '2009-01-20 12:18:23.057'},'SA','errore di programma','N','ISNULL(%<expenselast.kpay>%,0) = ISNULL(&<expenselast.kpay>&,0)
OR 
(&<expenselast.kpay>& IS NULL AND %<expenselast.kpay>% IS NOT NULL)OR 
(&<expenselast.kpay>& IS NOT NULL AND %<expenselast.kpay>% IS NULL)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN005','1','D','expensemandate','S','S','S','N','N',{ts '2007-08-31 19:44:52.377'},'NINO','Il movimento di spesa n. %<expense.nmov>% / %<expense.ymov>% contabilizza alcuni dettagli dell''ordine %<expensemandate.idmankind>%  n. %<expensemandate.nman>% / %<expensemandate.yman>% che non possono essere decontabilizzati in quanto collegati a  dettagli  fatture già pagati.','S','([SELECT COUNT(*) 
FROM mandatedetail 
WHERE mandatedetail.idmankind = %<expensemandate.idmankind>% 
AND mandatedetail.yman = %<expensemandate.yman>% 
AND mandatedetail.nman = %<expensemandate.nman>% 
AND mandatedetail.idexp_taxable = %<expensemandate.idexp>%
]{I} = 0)
OR
([SELECT COUNT(*) 
FROM mandatedetail 
JOIN invoicedetail 
ON   mandatedetail.idmankind= invoicedetail.idmankind and
     mandatedetail.yman = invoicedetail.yman and
     mandatedetail.nman = invoicedetail.nman and
     mandatedetail.rownum = invoicedetail.manrownum 
JOIN expenseinvoice 
ON   expenseinvoice.idinvkind = invoicedetail.idinvkind and
     expenseinvoice.yinv = invoicedetail.yinv and
     expenseinvoice.ninv = invoicedetail.ninv
JOIN expenselink
ON expenselink.idchild = expenseinvoice.idexp
WHERE expenselink.idparent = %<expensemandate.idexp>%
AND mandatedetail.idmankind = %<expensemandate.idmankind>% 
AND mandatedetail.yman = %<expensemandate.yman>% 
AND mandatedetail.nman = %<expensemandate.nman>% 
]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN005','2','D','expensemandate','S','S','S','N','N',{ts '2007-08-31 19:44:43.017'},'NINO','Il movimento di spesa n. %<expense.nmov>% / %<expense.ymov>% contabilizza alcuni dettagli dell''ordine %<expensemandate.idmankind>%  n. %<expensemandate.nman>% / %<expensemandate.yman>% che non possono essere decontabilizzati in quanto collegati a  dettagli  fatture già pagati.','S','([SELECT COUNT(*) 
FROM mandatedetail 
WHERE mandatedetail.idmankind = %<expensemandate.idmankind>% 
AND mandatedetail.yman = %<expensemandate.yman>% 
AND mandatedetail.nman = %<expensemandate.nman>% 
AND mandatedetail.idexp_iva = %<expensemandate.idexp>%
]{I} = 0)
OR
([SELECT COUNT(*) 
FROM mandatedetail 
JOIN invoicedetail 
ON   mandatedetail.idmankind= invoicedetail.idmankind and
     mandatedetail.yman = invoicedetail.yman and
     mandatedetail.nman = invoicedetail.nman and
     mandatedetail.rownum = invoicedetail.manrownum 
JOIN expenseinvoice 
ON   expenseinvoice.idinvkind = invoicedetail.idinvkind and
     expenseinvoice.yinv = invoicedetail.yinv and
     expenseinvoice.ninv = invoicedetail.ninv
JOIN expenselink
ON expenselink.idchild = expenseinvoice.idexp
WHERE expenselink.idparent = %<expensemandate.idexp>%
AND mandatedetail.idmankind = %<expensemandate.idmankind>% 
AND mandatedetail.yman = %<expensemandate.yman>% 
AND mandatedetail.nman = %<expensemandate.nman>% 
]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN012','1','D','expensemandate','S','S','S','N','N',{ts '2011-09-19 16:51:30.520'},'sa','Se si rimuove  la contabilizzazione di un contratto passivo da un movimento di spesa residuo sarà necessario accedere dall''esercizio originario dell''ordine per ricontabilizzarlo.','S','[select count(*) from expenseyear 
 where idexp=%<expensemandate.idexp>%]{I}<=1

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM005','1','D','expensemandate','S','S','S','N','N',{ts '2007-02-23 22:59:42.420'},'''NINO''','Esistono ancora dettagli contratto passivo associati al movimento di spesa. ','N','[SELECT count(*) from mandatedetail where 
idexp_iva=%<expensemandate.idexp>%
OR
idexp_taxable=%<expensemandate.idexp>%
]{I}= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM018','1','I','expensemandate','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il percipiente del buono d''ordine %<nman>% / %<yman>% da contabilizzare è differente da quello del movimento di spesa','S','(
[SELECT COUNT(*) FROM expense
WHERE idexp = %<expensemandate.idexp>%]{I}
=0
)
OR
(
[SELECT idreg FROM expense
WHERE idexp = %<expensemandate.idexp>%]{I}
=
[SELECT idreg FROM mandate
WHERE idmankind = %<expensemandate.idmankind>%
AND nman = %<expensemandate.nman>%
AND yman = %<expensemandate.yman>%]{I}
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN001','1','I','expensemandate','S','S','S','N','N',{ts '2007-03-21 11:28:34.827'},'''NINO''','L''importo del movimento di spesa  è diverso dalla somma dei dettagli del contratto passivo %<idmankind>%/%<yman>%/%<nman>%  associati','N','--post
(
[SELECT COUNT(*) 
FROM  expensemandateview 
WHERE expensemandateview.idexp = %<expensemandate.idexp>%
AND   ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)
AND   ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM046','1','D','expensepayroll','S','S','S','N','N',{ts '2007-08-31 19:26:38.453'},'NINO','Non è normalmente corretto rimuovere la contabilizzazione del cedolino n. %<expensepayroll.idpayroll>% in quanto il mov. di spesa è portato a pagamento. Tale mov. di spesa non potrà più essere ricontabilizzato','N','[SELECT COUNT(*)
FROM expenselast
join expenselink on expenselink.idchild=expenselast.idexp
WHERE expenselink.idparent= %<expensepayroll.idexp>%
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM071','1','D','expensepayroll','S','S','S','N','N',{ts '2008-07-16 10:56:23.063'},'NINO','Il cedolino %<payroll.npayroll>% non può essere decontabilizzato in quanto il contratto è diventato CUD','S','-- Il contratto del cedolino non può essere considerato come CUD (caso assegnisti di ricerca)
[SELECT COUNT(*)
FROM parasubcontractlist
JOIN payroll
	ON payroll.idcon = parasubcontractlist.idcon
	AND payroll.fiscalyear = parasubcontractlist.ayear
WHERE payroll.idpayroll = %<expensepayroll.idpayroll>%
	AND parasubcontractlist.iddbdepartment = user]{I} = 0
OR
-- Non è diventato CUD per alcun contratto
[SELECT linked
FROM parasubcontractlist
JOIN payroll
	ON payroll.idcon = parasubcontractlist.idcon
	AND payroll.fiscalyear = parasubcontractlist.ayear
WHERE payroll.idpayroll = %<expensepayroll.idpayroll>%
	AND parasubcontractlist.iddbdepartment = user]{C} <> ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM018','1','I','expensepayroll','S','S','S','N','N',{ts '2007-10-03 16:33:03.880'},'SA','Il percipiente del cedolino n. %<idpayroll>% del %<payroll.npayroll>%/%<payroll.fiscalyear>%  da contabilizzare è differente da quello del movimento di spesa','N','
(
[SELECT idreg FROM expense
WHERE idexp = %<expensepayroll.idexp>% ]{I}
=
[SELECT idreg FROM parasubcontract
WHERE
idcon = 
	[select idcon from payroll where idpayroll = %<expensepayroll.idpayroll>%]{I}
]{I}
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS010','1','I','expensepayroll','S','S','S','N','N',{ts '2007-08-31 19:32:33.170'},'NINO','Il cedolino non può essere contabilizzato dal movimento selezionato, poichè è stato già (anche in parte) portato a pagamento.','S','[SELECT COUNT(*) FROM expenselast join 
 expenselink on expenselast .idexp=expenselink.idchild
	WHERE expenselink.idparent= %<expensepayroll.idexp>% 
 		
]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS013','1','I','expensepayroll','S','S','S','N','N',{ts '2007-08-31 19:34:50.640'},'NINO','Il movimento di spesa che contabilizza il cedolino deve avere lo stesso importo del cedolino','N','[SELECT amount FROM expenseyear
WHERE idexp = %<expensepayroll.idexp>%
	and ayear=%<sys_esercizio>%
]{V} +
ISNULL(
	[SELECT SUM(amount)
	FROM expensevar
	WHERE idexp = %<expensepayroll.idexp>%
	AND ISNULL(autokind,0) <> 4]{V}
,0)
 =
[SELECT feegross FROM payroll
WHERE idpayroll = %<expensepayroll.idpayroll>%]{V}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS015','1','I','expensepayroll','S','S','S','N','N',{ts '2008-07-16 18:17:46.500'},'NINO','Non è possibile erogare il cedolino di conguaglio di un contratto parasubordinato se esiste un cedolino di conguaglio dello stesso collaboratore già erogato di un altro contratto che non è diventato CUD.','S','-- Il cedolino che sto contabilizzando non è associato al cedolino di conguaglio
[SELECT npayroll FROM payroll
	WHERE idpayroll = %<expensepayroll.idpayroll>%]{I}
<>
[SELECT npayroll FROM payroll
	WHERE flagbalance=''S''
	and idcon =
		[SELECT idcon FROM payroll
		WHERE idpayroll = %<expensepayroll.idpayroll>%]{C}
]{I}
OR 
-- Il contratto al quale il cedolino appartiene non deve rientrare nel CUD (controlliamo solo sull''anno fiscale del cedolino)
[SELECT COUNT(*)
FROM parasubcontractlist
WHERE idcon = 
	[SELECT idcon FROM payroll
	WHERE idpayroll = %<expensepayroll.idpayroll>%]{C}
AND iddbdepartment = USER
AND ayear =
	[SELECT fiscalyear
	FROM payroll
	WHERE idpayroll = %<expensepayroll.idpayroll>%]{I}
]{I} = 0
OR
-- Non ci sono altri contratti conguagliati e non inseriti in CUD
-- N.B. Non scartiamo il contratto corrente in quanto la regola è PRE
[SELECT COUNT(*)
FROM parasubcontractlist
WHERE idreg =
	[SELECT idreg FROM parasubcontract
	JOIN payroll
		ON parasubcontract.idcon = payroll.idcon
	WHERE payroll.idpayroll = %<expensepayroll.idpayroll>%]{I}
AND ayear =
	[SELECT fiscalyear
	FROM payroll
	WHERE idpayroll = %<expensepayroll.idpayroll>%]{I}
AND balanced = ''S'' AND linked = ''N''
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','expensephase','S','S','S','N','N',{ts '2005-09-12 10:51:48.783'},'''SWMASTER''','Cancellazione Impossibile! Esistono movimenti di spesa collegati alla fase %<description>%','S','[(SELECT count(*) 
from expense 
where nphase = %<expensephase.nphase>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','expensephase','S','S','S','N','N',{ts '2007-09-01 14:56:39.657'},'NINO','Cancellazione Impossibile! Esistono contabilizzazioni collegate alla fase di spesa %<description>%','S','[(SELECT count(*) 
from config 
where expensephase = %<expensephase.nphase>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','expensephase','S','S','S','N','N',{ts '2005-09-12 10:52:07.487'},'''SWMASTER''','Cancellazione Impossibile! Esistono fasi di spesa dipendenti dalla fase %<description>%','S','[(SELECT count(*) 
from expensephase 
where nphase > %<expensephase.nphase>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','5','D','expensephase','S','S','S','N','N',{ts '2005-09-12 10:52:16.580'},'''SWMASTER''','Cancellazione Impossibile! Esistono tipi di classificazione collegati alla fase di spesa %<description>%','S','[(SELECT count(*) 
from sortingkind 
where nphaseexpense = %<expensephase.nphase>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','expensephase','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione della fase di spesa già esistente','S','[(SELECT count(*) 
from expensephase 
where description = %<expensephase.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','I','expensephase','S','S','S','N','N',{ts '2009-01-20 12:18:35.867'},'SA','Non può essere inserita una nuova fase di spesa in quanto esistono già dei movimenti finanziari.','S','[SELECT COUNT(*) FROM expense]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','expensephase','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione della fase di spesa già esistente','S','[(SELECT count(*) 
from expensephase 
where nphase <> %<expensephase.nphase>% 
and description = %<expensephase.description>%)]{N} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM046','1','D','expenseprofservice','S','S','S','N','N',{ts '2007-09-21 12:22:30.047'},'NINO','Non è normalmente corretto rimuovere la contabilizzazione della prestazione professionale n. %<expenseprofservice.ycon>% / %<expenseprofservice.ncon>% in quanto il mov. di spesa è portato a pagamento. Tale mov. di spesa non potrà più essere ricontabilizzato','N','[SELECT COUNT(*)
FROM expenselast
join expenselink 
     on expenselink.idchild=expenselast.idexp
WHERE expenselink.idparent= %<expenseprofservice.idexp>%
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM018','1','I','expenseprofservice','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il percipiente del contratto professionale %<ncon>%/%<ycon>%  da contabilizzare è differente da quello del movimento di spesa
','S','(
[SELECT count(*) FROM expense
WHERE idexp = %<expenseprofservice.idexp>% ]{I}
=0
)
OR
(
[SELECT idreg FROM expense
WHERE idexp = %<expenseprofservice.idexp>% ]{I}
=
[SELECT idreg FROM profservice
WHERE
ncon = %<expenseprofservice.ncon>% 
AND ycon = %<expenseprofservice.ycon>%]{I}
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE002','1','I','expenseprofservice','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','L''importo lordo del contratto professionale %<ncon>%/%<ycon>% è minore dei movimenti di spesa che lo contabilizzano','N','--post
[SELECT residual
FROM profserviceresidual
WHERE ycon = %<expenseprofservice.ycon>%
AND ncon = %<expenseprofservice.ncon>%]{N} >= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE003','1','I','expenseprofservice','S','S','S','N','N',{ts '2007-12-12 11:26:23.217'},'PINO','Il contratto %<ncon>% / %<ycon>% non può essere 
contabilizzato dal movimento selezionato, poichè è stato già (anche in parte) portato a pagamento.','S','%<expenseprofservice.movkind>% = 2
OR
(
[SELECT COUNT(*) FROM expenselink 
JOIN expenselast on expenselink.idchild=expenselast.idexp
WHERE idparent=  %<expenseprofservice.idexp>%
]{I}=0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE007','1','I','expenseprofservice','S','S','S','N','N',{ts '2009-09-23 13:07:55.267'},'SARA','Le spese collegate alla parcella professionale %<expenseprofservice.ncon>%/ %<expenseprofservice.ycon>%, saranno considerate pagate in proporzione all''effettivo importo imponibile contabilizzato.
E'' consigliabile, se non si intende pagare la parcella su altri capitoli nella stessa giornata, rimuovere le spese e posticiparne l''inserimento  al momento del saldo della prestazione. E'' necessario comunque saldare la prestazione entro l''anno, per non essere costretti a correzioni manuali del modello 770.
','N','--post
([(select (isnull(totalcost,0) - isnull(ivaamount,0)) 
from profservice
where ycon=%<expenseprofservice.ycon>%
and ncon= %<expenseprofservice.ncon>%)]{V}
=
( isnull([(select sum(expenseyear.amount)
from expenseyear
join expenseprofservice
on expenseyear.idexp = expenseprofservice.idexp
where expenseprofservice.ycon =%<expenseprofservice.ycon>%
and expenseprofservice.ncon = %<expenseprofservice.ncon>%
and expenseyear.ayear = %<sys_esercizio>%
)]{V} , 0.0)
+
isnull([(select sum(expensevar.amount)
from expensevar
join expense
on   expense.idexp = expensevar.idexp
join expenseprofservice
on expense.idexp = expenseprofservice.idexp
where expenseprofservice.ycon = %<expenseprofservice.ycon>%
and expenseprofservice.ncon   = %<expenseprofservice.ncon>%
and isnull(expensevar.autokind,0)<>4
and expensevar.yvar=%<sys_esercizio>%
)]{V} , 0.0)
+
isnull([(select sum(PO.amount)
from pettycashoperation PO
join pettycashoperationprofservice PC
on   PO.idpettycash = PC.idpettycash 
and  PO.yoperation = PC.yoperation 
and  PO.noperation = PC.noperation 
where PC.ycon = %<expenseprofservice.ycon>%
and   PC.ncon = %<expenseprofservice.ncon>%
)]{V} , 0.0) 
)
)
OR
-- contabilizzazione DOCUM,IVA
%<expenseprofservice.movkind>% <> 3  
OR
[SELECT COUNT(*) from profservicerefund PR
	where PR.ycon = %<expenseprofservice.ycon>%
	and PR.ncon   = %<expenseprofservice.ncon>%
]{I}=0




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE007','2','I','expenseprofservice','S','S','S','N','N',{ts '2009-09-23 11:36:00.733'},'SARA','Le spese collegate alla parcella professionale %<expenseprofservice.ncon>%/ %<expenseprofservice.ycon>%, saranno considerate pagate in proporzione all''effettivo importo contabilizzato.
E'' consigliabile, se non si intende pagare la parcella su altri capitoli nella stessa giornata, rimuovere le spese e posticiparne l''inserimento  al momento del saldo della prestazione.  E'' necessario comunque saldare la prestazione entro l''anno, per non essere costretti a correzioni manuali del modello 770.','N','--post
([(select totalcost
from profservice
where ycon=%<expenseprofservice.ycon>%
and ncon= %<expenseprofservice.ncon>%)]{V}
=
( isnull([(select sum(expenseyear.amount)
from expenseyear
join expenseprofservice
on expenseyear.idexp = expenseprofservice.idexp
where expenseprofservice.ycon =%<expenseprofservice.ycon>%
and expenseprofservice.ncon = %<expenseprofservice.ncon>%
and expenseyear.ayear = %<sys_esercizio>%
)]{V} , 0.0)
+
isnull([(select sum(expensevar.amount)
from expensevar
join expense
on   expense.idexp = expensevar.idexp
join expenseprofservice
on expense.idexp = expenseprofservice.idexp
where expenseprofservice.ycon = %<expenseprofservice.ycon>%
and expenseprofservice.ncon   = %<expenseprofservice.ncon>%
and isnull(expensevar.autokind,0)<>4
and expensevar.yvar=%<sys_esercizio>%
)]{V} , 0.0)
+
isnull([(select sum(PO.amount)
from pettycashoperation PO
join pettycashoperationprofservice PC
on   PO.idpettycash = PC.idpettycash 
and  PO.yoperation = PC.yoperation 
and  PO.noperation = PC.noperation 
where PC.ycon = %<expenseprofservice.ycon>%
and   PC.ncon = %<expenseprofservice.ncon>%
)]{V} , 0.0) 
)
)
OR
-- contabilizzazione IMPON,IVA
%<expenseprofservice.movkind>% <> 1  
OR
[SELECT COUNT(*) from profservicerefund PR
	where PR.ycon = %<expenseprofservice.ycon>%
	and PR.ncon   = %<expenseprofservice.ncon>%
]{I}=0




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE008','1','I','expenseprofservice','S','S','S','N','N',{ts '2009-09-23 13:13:29.377'},'SARA','Poichè si sta effettuando una contabilizzazione parziale dell''imponibile del contratto professionale, il professionista dovrà emettere una parcella conforme al pagamento.
','N','--post
([(select (isnull(totalcost,0) - isnull(ivaamount,0)) 
from profservice
where ycon=%<expenseprofservice.ycon>%
and ncon= %<expenseprofservice.ncon>%)]{V}
=
( isnull([(select sum(expenseyear.amount)
from expenseyear
join expenseprofservice
on expenseyear.idexp = expenseprofservice.idexp
where expenseprofservice.ycon =%<expenseprofservice.ycon>%
and expenseprofservice.ncon = %<expenseprofservice.ncon>%
and expenseyear.ayear = %<sys_esercizio>%
)]{V} , 0.0)
+
isnull([(select sum(expensevar.amount)
from expensevar
join expense
on   expense.idexp = expensevar.idexp
join expenseprofservice
on expense.idexp = expenseprofservice.idexp
where expenseprofservice.ycon = %<expenseprofservice.ycon>%
and expenseprofservice.ncon   = %<expenseprofservice.ncon>%
and isnull(expensevar.autokind,0)<>4
and expensevar.yvar=%<sys_esercizio>%
)]{V} , 0.0)
+
isnull([(select sum(PO.amount)
from pettycashoperation PO
join pettycashoperationprofservice PC
on   PO.idpettycash = PC.idpettycash 
and  PO.yoperation = PC.yoperation 
and  PO.noperation = PC.noperation 
where PC.ycon = %<expenseprofservice.ycon>%
and   PC.ncon = %<expenseprofservice.ncon>%
)]{V} , 0.0) 
)
)
OR
-- contabilizzazione DOCUM, IVA
%<expenseprofservice.movkind>% <> 3  




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE008','2','I','expenseprofservice','S','S','S','N','N',{ts '2009-09-23 11:39:14.593'},'SARA','Poichè si sta effettuando una contabilizzazione parziale dell''importo del contratto professionale, il professionista dovrà emettere una parcella conforme al pagamento.
','N','--post
([(select totalcost
from profservice
where ycon=%<expenseprofservice.ycon>%
and ncon= %<expenseprofservice.ncon>%)]{V}
=
( isnull([(select sum(expenseyear.amount)
from expenseyear
join expenseprofservice
on expenseyear.idexp = expenseprofservice.idexp
where expenseprofservice.ycon =%<expenseprofservice.ycon>%
and expenseprofservice.ncon = %<expenseprofservice.ncon>%
and expenseyear.ayear = %<sys_esercizio>%
)]{V} , 0.0)
+
isnull([(select sum(expensevar.amount)
from expensevar
join expense
on   expense.idexp = expensevar.idexp
join expenseprofservice
on expense.idexp = expenseprofservice.idexp
where expenseprofservice.ycon = %<expenseprofservice.ycon>%
and expenseprofservice.ncon   = %<expenseprofservice.ncon>%
and isnull(expensevar.autokind,0)<>4
and expensevar.yvar=%<sys_esercizio>%
)]{V} , 0.0)
+
isnull([(select sum(PO.amount)
from pettycashoperation PO
join pettycashoperationprofservice PC
on   PO.idpettycash = PC.idpettycash 
and  PO.yoperation = PC.yoperation 
and  PO.noperation = PC.noperation 
where PC.ycon = %<expenseprofservice.ycon>%
and   PC.ncon = %<expenseprofservice.ncon>%
)]{V} , 0.0) 
)
)
OR
-- contabilizzazione IMPON,IVA
%<expenseprofservice.movkind>% <> 1  




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN001','1','D','expensesorted','S','S','S','N','N',{ts '2008-01-29 09:19:11.187'},'NINO','La previsione di spesa della classificazione movimenti %<sorting.sortcode>% è INSUFFICIENTE!','N','--post
ISNULL(
	[SELECT expenseprevision 
	from sortingprev 
	where idsor = %<expensesorted.idsor>% 
	and ayear = %<expensesorted.ayear>%]{V}
,0)
+ 
ISNULL(
	[SELECT ISNULL(totexpensevariation, 0) - 
	ISNULL(totexpense, 0) - 
	ISNULL(totalcost, 0) 
	FROM sortedmovementtotal 
	WHERE idsor = %<expensesorted.idsor>% 
	AND ayear = %<expensesorted.ayear>%]{V} 
,0)
>= 0
or 
([SELECT flag
from sortingkind 
join sorting
	on sortingkind.idsorkind= sorting.idsorkind
where idsor = %<expensesorted.idsor>%]{I} & 2) = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN005','1','D','expensesorted','S','S','S','N','N',{ts '2008-03-21 13:26:51.077'},'SA','Il movimento di spesa non è stato interamente classificato secondo la classificazione obbligatoria.','N','--post
([SELECT flag from sortingkind 
join sorting
	on sortingkind.idsorkind = sorting.idsorkind  
where idsor = %<expensesorted.idsor>%
	AND ( %<sys_esercizio>% between ISNULL(sortingkind.start,1900) AND ISNULL(sortingkind.stop,2099) )
	AND ( sortingkind.codesorkind IN ( ''SIOPE'' , ''07U_SIOPE'' ) )
]{I}	& 1) = 0
OR
(
(
ISNULL(
[(SELECT ISNULL(sum(I.amount),0) from expensesorted I
		join sorting S
			on I.idsor = S.idsor
		where S.idsorkind = [select idsorkind 
					from sorting 
					where idsor = %<expensesorted.idsor>%]{I}
		      and I.idexp= %<expensesorted.idexp>% 
			and I.ayear = %<expensesorted.ayear>%
 )]{V},0)
)
=
ISNULL(
[(SELECT curramount from expensetotal where idexp= %<expensesorted.idexp>% and
				ayear = %<expensesorted.ayear>%
 )]{V},0)	
)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM037','1','D','expensesorted','S','S','S','N','N',{ts '2011-09-15 12:47:51.017'},'sara','La classificazione SIOPE del movimento finanziario di spesa %<expense.ymov>%/%<expense.nmov>%  non può essere eliminata in quanto è già incluso nel mandato di pagamento che risulta trasmesso.','S','[(select payment.kpaymenttransmission 
FROM expense 
JOIN expenselast
ON expense.idexp = expenselast.idexp
join payment 
on payment.kpay = expenselast.kpay
where expense.idexp = %<expensesorted.idexp>%)]{I} is null
OR
[(select kpay 
from 
expenselast
where idexp = %<expensesorted.idexp>%)]{I} is null
OR
[([select codesorkind from sortingkind 
				join sorting
					on sortingkind.idsorkind = sorting.idsorkind  
				where idsor = %<expensesorted.idsor>%]{C} 
  <>''SIOPE'')]
OR
[SELECT ymov FROM expense
WHERE idexp = %<expensesorted.idexp>%]{I} > 2006
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensesorted.idexp>%]{C},''N'' )= ''S'')
AND
[(SELECT COUNT(*)  FROM expensevar  WHERE idexp = %<expensesorted.idexp>%
AND kpaymenttransmission IS  NULL AND autokind = 22)]{I} <> 0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM052','1','D','expensesorted','S','S','S','N','N',{ts '2011-09-15 13:03:47.797'},'sara','La classificazione SIOPE del movimento finanziario di spesa %<expense.ymov>%/%<expense.nmov>%  non può essere eliminata in quanto è già incluso nel mandato di pagamento %<expense.ymov>% / %<expenseview.npay>%  che risulta trasmesso.','S','[(select payment.kpaymenttransmission 
from expense 
join expenselast
	on expense.idexp = expenselast.idexp
join payment 
	on payment.kpay = expenselast.kpay
where expense.idexp = %<expensesorted.idexp>%)]{I} is null
OR
[(select kpay 
from expenselast
where idexp = %<expensesorted.idexp>%)]{I} is null
OR
[([SELECT codesorkind from sortingkind 
				join sorting
					on sortingkind.idsorkind = sorting.idsorkind  
				where idsor = %<expensesorted.idsor>%]{C}<>''07U_SIOPE'')]
OR
([SELECT ymov FROM expense
	WHERE idexp = %<expensesorted.idexp>%]{I} <
ISNULL([SELECT isnull(start,1900) FROM sortingkind
	WHERE codesorkind = ''07U_SIOPE'']{I},3000)
)

OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensesorted.idexp>%]{C},''N'' )= ''S'')
AND
[(SELECT count(*)  from expensevar  where idexp = %<expensesorted.idexp>%
AND kpaymenttransmission is null AND autokind = 22)]{I} <> 0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN001','1','I','expensesorted','S','S','S','N','N',{ts '2008-01-29 09:19:34.327'},'NINO','La previsione di spesa della classificazione movimenti %<expensesortedview.codesorkind>% - %<expensesortedview.sortcode>% è INSUFFICIENTE! 
','N','--post
ISNULL(
	[SELECT expenseprevision 
	from sortingprev 
	where idsor = %<expensesorted.idsor>% 
	and ayear = %<expensesorted.ayear>%]{V}
,0)
+ 
ISNULL(
	[SELECT ISNULL(totexpensevariation, 0) - 
	ISNULL(totexpense, 0) - 
	ISNULL(totalcost, 0) 
	FROM sortedmovementtotal 
	WHERE idsor = %<expensesorted.idsor>% 
	AND ayear = %<expensesorted.ayear>%]{V} 
,0)
>= 0
or 
([SELECT flag
from sortingkind 
join sorting
	on sortingkind.idsorkind= sorting.idsorkind
where idsor = %<expensesorted.idsor>%]{I} & 2) = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN005','1','I','expensesorted','S','S','S','N','N',{ts '2008-03-21 13:26:42.530'},'SA','%<expensesortedview.phase>% %<expensesortedview.ymov>%/%<expensesortedview.nmov>% non è stato interamente classificato secondo la classificazione obbligatoria %<expensesortedview.codesorkind>% .','N','--post
([SELECT flag FROM sortingkind 
join sorting
	on sortingkind.idsorkind = sorting.idsorkind  
WHERE idsor = %<expensesorted.idsor>%
	AND ( %<sys_esercizio>% between ISNULL(sortingkind.start,1900) AND ISNULL(sortingkind.stop,2099) )
	AND ( sortingkind.codesorkind IN ( ''SIOPE'' , ''07U_SIOPE'' ) )
]{I} & 1) = 0
OR
(
(
ISNULL(
[(SELECT ISNULL(sum(I.amount),0) from expensesorted I
		join sorting S
			on I.idsor = S.idsor
		where S.idsorkind = [select idsorkind 
					from sorting 
					where idsor = %<expensesorted.idsor>%]{I}
			and I.idexp= %<expensesorted.idexp>% 
			and I.ayear = %<expensesorted.ayear>%
 )]{V},0)
)
=
ISNULL(
[(SELECT curramount from expensetotal where idexp= %<expensesorted.idexp>% and
				ayear = %<expensesorted.ayear>%
 )]{V},0)	
)



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN007','1','I','expensesorted','S','S','S','N','N',{ts '2009-06-04 15:20:01.767'},'ASSISTENZA','L''importo classificato come %<expensesortedview.codesorkind>%   %<expensesortedview.sortcode>%   supera l''importo classificato della fase precedente.','N','([SELECT COUNT(*) 
FROM sortingkind 
JOIN sorting
	ON sortingkind.idsorkind= sorting.idsorkind
WHERE  idsor = %<expensesorted.idsor>% 
	AND idparentkind is not null ]{I} ) = 0

OR 

(
--pagamento
	ISNULL(
		[SELECT ISNULL(SUM(I.amount),0)
		FROM expensesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind = [select sortingkind.idsorkind
					from sortingkind 
					join sorting
						on sortingkind.idsorkind= sorting.idsorkind
					where idsor = %<expensesorted.idsor>%]{I}
		AND I.idexp= %<expensesorted.idexp>%
		AND  I.idsor = %<expensesorted.idsor>%
		AND I.ayear = %<expensesorted.ayear>%]{N}
	,0)
	<=
	ISNULL(
-- impegno
		[SELECT ISNULL(SUM(I.amount),0)
		FROM expensesorted I
		JOIN expenselink EL 
			ON EL.idparent=I.idexp
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind = [select idparentkind 
					from sortingkind 
					join sorting
						on sortingkind.idsorkind= sorting.idsorkind
					where idsor = %<expensesorted.idsor>%]{I}
		AND S.sortcode = [select sortcode 
				     from sorting
				     where idsor = %<expensesorted.idsor>%]{C}
		AND EL.idchild= %<expensesorted.idexp>%
		AND I.ayear = %<expensesorted.ayear>%]{N}
	,0)

)




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM016','1','I','expensesorted','S','S','S','N','N',{ts '2007-11-27 10:09:37.967'},'SARA','Le classificazioni associate al movimento di spesa n. %<expense.nmov>%/%<expense.ymov>% sono superiori rispetto all''importo dello stesso.','N','--post
(
	ISNULL(
		[SELECT ISNULL(SUM(I.amount),0)
		FROM expensesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind = [select idsorkind 
					from sorting 
					where idsor = %<expensesorted.idsor>%]{I}
		AND I.idexp= %<expensesorted.idexp>%
		AND I.ayear = %<expensesorted.ayear>%]{V}
	,0)
	<=
	ISNULL(
		[SELECT curramount FROM expensetotal WHERE idexp= %<expensesorted.idexp>%
		AND ayear = %<expensesorted.ayear>%]{V}
	,0)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM037','1','I','expensesorted','S','S','S','N','N',{ts '2011-09-15 13:01:30.967'},'sara','La classificazione SIOPE del movimento finanziario di spesa %<expense.ymov>%/%<expense.nmov>% non può essere inserita in quanto è già incluso nel mandato di pagamento che risulta trasmesso.','S','[(SELECT COUNT(*) 
FROM expense 
JOIN expenselast
	ON expense.idexp = expenselast.idexp
JOIN payment 
	ON payment.kpay = expenselast.kpay
where expense.idexp = %<expensesorted.idexp>%
	and payment.kpaymenttransmission is not null
	)]{I} = 0
OR
ISNULL([(select kpay 
from expenselast
where idexp = %<expensesorted.idexp>%)]{I},-1) = -1
OR
[([select codesorkind from sortingkind 
   join sorting
   on sortingkind.idsorkind = sorting.idsorkind  
   where idsor = %<expensesorted.idsor>%]{C} 
   <>''SIOPE'')]
OR
%<expensesorted.idexp>% is null
OR
[SELECT ymov FROM expense
WHERE idexp = %<expensesorted.idexp>%]{I} > 2006
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensesorted.idexp>%]{C},''N'' )= ''S'')
AND
[(SELECT COUNT(*)  FROM expensevar  
WHERE idexp = %<expensesorted.idexp>%
AND kpaymenttransmission IS NULL AND autokind = 22)]{I} <> 0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM037','2','I','expensesorted','S','S','S','N','N',{ts '2007-11-29 14:47:24.937'},'SARA','La classificazione SIOPE del movimento finanziario di spesa non può avere codice %<sorting.sortcode>%  poichè questo è un codice di entrata.','S','[ISNULL((select substring(sorting.sortcode,1,1)
from sorting
join sortingkind 
	on sortingkind.idsorkind = sorting.idsorkind  
where sortingkind.codesorkind = ''SIOPE''
and sorting.idsor =%<expensesorted.idsor>% ),''U'')]{C} =''U''
OR 
([select codesorkind from sortingkind 
				join sorting
					on sortingkind.idsorkind = sorting.idsorkind  
				where idsor = %<expensesorted.idsor>%]{C} 
 <> ''SIOPE'')

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM037','3','I','expensesorted','S','S','S','N','N',{ts '2007-11-29 14:48:06.843'},'SARA','La classificazione MIUR del movimento finanziario di spesa non può avere codice %<sorting.sortcode>% poichè questo è un codice di entrata. ','S','[ISNULL((select substring(sorting.sortcode,1,1)
from sorting
join sortingkind 
	on sortingkind.idsorkind = sorting.idsorkind  
where sortingkind.codesorkind = ''MIUR''
and sorting.idsor =%<expensesorted.idsor>% ),''S'')]{C} =''S''
OR 
([select codesorkind from sortingkind 
				join sorting
					on sortingkind.idsorkind = sorting.idsorkind  
				where idsor = %<expensesorted.idsor>%]{C} 
 <> ''MIUR'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM052','1','I','expensesorted','S','S','S','N','N',{ts '2012-10-01 15:53:17.043'},'sa','Non è possibile inserire più di 15 classificazioni SIOPE per il movimento di spesa  %<expenselastview.ymov>% / %<expenselastview.nmov>% inserito nel Mandato N.%<expenselastview.npay>%.','S','ISNULL([(select kpay
from 
expenselast 
where idexp = %<expensesorted.idexp>%)]{I},-1) = -1

OR 

( ISNULL([(SELECT treasurer.idbank FROM treasurer 
	JOIN payment
		ON treasurer.idtreasurer = payment.idtreasurer
	JOIN expenselast
		ON payment.kpay = expenselast.kpay
	WHERE  expenselast.idexp =  %<expensesorted.idexp>% )]{C} ,'''')<>''01030'')

OR
[([select codesorkind from sortingkind 
   join sorting
   on sortingkind.idsorkind = sorting.idsorkind  
   where idsor = %<expensesorted.idsor>%]{C}
  <>''07U_SIOPE'')]

OR

%<expensesorted.idexp>%  is null

OR
(
[SELECT ymov FROM expense
	WHERE idexp = %<expensesorted.idexp>%]{I} <
ISNULL([SELECT isnull(start,1900) FROM sortingkind
	WHERE codesorkind = ''07U_SIOPE'']{I},3000)
)

OR

ISNULL([
	(SELECT COUNT(distinct expensesorted.idsor) FROM expensesorted
	JOIN expenselast 
		ON expenselast.idexp= expensesorted.idexp
	JOIN sorting
		ON expensesorted.idsor = sorting.idsor
	JOIN sortingkind
		ON sortingkind.idsorkind = sorting.idsorkind
	WHERE ''07U_SIOPE''= sortingkind.codesorkind 
		AND expenselast.idexp = %<expensesorted.idexp>%)
	]{I} 
	,0) 
<=15


')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM052','2','I','expensesorted','S','S','S','N','N',{ts '2011-09-21 09:59:15.860'},'sara','La classificazione SIOPE del movimento finanziario di spesa %<expense.ymov>%/%<expense.nmov>% non può essere inserita in quanto è già incluso nel mandato di pagamento %<expense.ymov>% / %<expenseview.npay>% che risulta trasmesso.
','N','[(select count(*) 
FROM expense 
JOIN expenselast
	ON expense.idexp = expenselast.idexp
join payment 
	on payment.kpay = expenselast.kpay
where expense.idexp = %<expensesorted.idexp>%
	and payment.kpaymenttransmission is not null
	)]{I} = 0
OR
ISNULL([(select kpay 
from 
expenselast 
where idexp = %<expensesorted.idexp>%)]{I},-1) = -1
OR
[([select codesorkind from sortingkind 
   join sorting
   on sortingkind.idsorkind = sorting.idsorkind  
   where idsor = %<expensesorted.idsor>%]{C}
  <>''07U_SIOPE'')]
OR
%<expensesorted.idexp>%  is null
OR
(
[SELECT ymov FROM expense
	WHERE idexp = %<expensesorted.idexp>%]{I} <
ISNULL([SELECT isnull(start,1900) FROM sortingkind
	WHERE codesorkind = ''07U_SIOPE'']{I},3000)
)
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensesorted.idexp>%]{C},''N'' )= ''S'')
AND
[(SELECT count(*)  from expensevar  where idexp = %<expensesorted.idexp>%
AND kpaymenttransmission is null AND autokind = 22)]{I} <> 0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM101','1','I','expensesorted','S','S','S','N','N',{ts '2012-03-05 13:33:46.593'},'assistenza','Attenzione! In fase di trasmissione questo movimento di Spesa, raggruppato eventualmente con altri in uno stesso Mandato (aventi lo stesso beneficiario, stessa voce di bilancio ecc.) potrebbe determinare il superamento del limite di 15 codici SIOPE distinti previsto da UNICREDIT.','N','(
[SELECT ymov FROM expense
	WHERE idexp = %<expensesorted.idexp>%
]{I} <
ISNULL([SELECT isnull(start,1900) FROM sortingkind
	WHERE codesorkind = ''07U_SIOPE'']{I},3000)
)

OR

ISNULL([
	(SELECT COUNT(distinct expensesorted.idsor)  
	 FROM expensesorted
	JOIN expenselast
		ON expensesorted.idexp = expenselast.idexp
	JOIN expenseview
		ON expenseview.idexp = expenselast.idexp
	JOIN sorting
		ON expensesorted.idsor = sorting.idsor
	JOIN sortingkind
		ON sortingkind.idsorkind = sorting.idsorkind
	JOIN expenselast EL1
		ON EL1.idexp = %<expensesorted.idexp>%
	JOIN expenseview E1 
		ON  E1.idexp =  EL1.idexp 
	JOIN sorting S1
		ON  S1.idsor = %<expensesorted.idsor>%
	JOIN sortingkind SK1
		ON SK1.idsorkind = S1.idsorkind
	WHERE ''07U_SIOPE''= sortingkind.codesorkind
	AND   ''07U_SIOPE''= SK1.codesorkind
AND expenseview.transmissiondate is null and E1.transmissiondate is null
AND expenseview.ayear = E1.ayear
AND expenseview.idreg = E1.idreg AND expenseview.idfin = E1.idfin
AND expenseview.idpaymethod = E1.idpaymethod AND expenseview.idregistrypaymethod = E1.idregistrypaymethod
AND expenseview.flagarrear = E1.flagarrear AND ISNULL(expenseview.cigcode,'''') = ISNULL(E1.cigcode,'''')
AND ISNULL(expenseview.cupcode,'''') = ISNULL(E1.cupcode,'''')
	)
	]{I} 
	,0) 
<=15

OR 

( ISNULL([(SELECT treasurer.idbank FROM treasurer 
	WHERE  ISNULL(flagdefault,''N'') = ''S'')]{C} ,'''')<>''02008'')

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN001','1','U','expensesorted','S','S','S','N','N',{ts '2008-01-29 09:19:44.673'},'NINO','La previsione di spesa della classificazione movimenti  %<expensesortedview.codesorkind>% - %<expensesortedview.sortcode>%  è INSUFFICIENTE!','S','ISNULL(
	[SELECT expenseprevision 
	from sortingprev 
	where idsor = %<expensesorted.idsor>% 
	and ayear = %<expensesorted.ayear>%]{V}
,0)
+ 
ISNULL(
	[SELECT ISNULL(totexpensevariation, 0) - 
	ISNULL(totexpense, 0) - 
	ISNULL(totalcost, 0) 
	FROM sortedmovementtotal 
	WHERE idsor = %<expensesorted.idsor>% 
	AND ayear = %<expensesorted.ayear>%]{V} 
,0)
>= 0 
or 
([SELECT flag
from sortingkind 
join sorting
	on sortingkind.idsorkind= sorting.idsorkind
where idsor = %<expensesorted.idsor>%]{I} & 2) = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN005','1','U','expensesorted','S','S','S','N','N',{ts '2008-03-21 13:15:18.360'},'SA','Il movimento di spesa non è stato interamente classificato secondo la classificazione obbligatoria %<expensesortedview.codesorkind>% .','N','--post

([SELECT flag from sortingkind 
join sorting
	on sortingkind.idsorkind = sorting.idsorkind  
where	idsor = %<expensesorted.idsor>%
	AND ( %<sys_esercizio>% between ISNULL(sortingkind.start,1900) AND ISNULL(sortingkind.stop,2099) )
	AND ( sortingkind.codesorkind IN ( ''SIOPE'' , ''07U_SIOPE'' ) )
]{I} & 1)
	=  0
OR
(
(
ISNULL(
	[SELECT ISNULL(sum(I.amount),0) from expensesorted I
		join sorting S
			on I.idsor = S.idsor
		where S.idsorkind = [select idsorkind 
					from sorting 
					where idsor = %<expensesorted.idsor>%]{I}
			and I.idexp= %<expensesorted.idexp>% 
			and I.ayear = %<expensesorted.ayear>%
 	 ]{V}
,0)
)
=
ISNULL(
[SELECT curramount from expensetotal where idexp= %<expensesorted.idexp>% and
				ayear = %<expensesorted.ayear>%
 ]{V},0)	
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN007','1','U','expensesorted','S','S','S','N','N',{ts '2009-09-14 10:01:59.937'},'SARA','L''importo classificato come %<expensesortedview.codesorkind>%   %<expensesortedview.sortcode>%   supera l''importo classificato della fase precedente.','N','([SELECT COUNT(*) 
FROM sortingkind 
JOIN sorting
	ON sortingkind.idsorkind= sorting.idsorkind
WHERE  idsor = %<expensesorted.idsor>% 
	AND idparentkind is not null ]{I} ) = 0

OR 

(
--pagamento
	ISNULL(
		[SELECT ISNULL(SUM(I.amount),0)
		FROM expensesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind = [select sortingkind.idsorkind
					from sortingkind 
					join sorting
						on sortingkind.idsorkind= sorting.idsorkind
					where idsor = %<expensesorted.idsor>%]{I}
		AND I.idexp= %<expensesorted.idexp>%
		AND I.idsor = %<expensesorted.idsor>%
		AND I.ayear = %<expensesorted.ayear>%]{N}
	,0)
	<=
	ISNULL(
--impegno
		[SELECT ISNULL(SUM(I.amount),0)
		FROM expensesorted I
		JOIN expenselink EL 
			ON EL.idparent=I.idexp
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind = [select idparentkind 
					from sortingkind 
					join sorting
						on sortingkind.idsorkind= sorting.idsorkind
					where idsor = %<expensesorted.idsor>%]{I}
		AND S.sortcode = [select sortcode 
				     from sorting
				     where idsor = %<expensesorted.idsor>%]{C}
		AND EL.idchild= %<expensesorted.idexp>%
		AND I.ayear = %<expensesorted.ayear>%]{N}
	,0)

)

 OR  (&<expensesorted.amount>& = %<expensesorted.amount>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM016','1','U','expensesorted','S','S','S','N','N',{ts '2007-11-27 10:15:04.750'},'SARA','Le classificazioni associate al movimento di spesa n. %<expense.nmov>%/%<expense.ymov>% sono superiori rispetto all''importo dello stesso.','N','--post
(
	ISNULL(
		[SELECT ISNULL(SUM(I.amount),0)
		FROM expensesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind = [select idsorkind 
					from sorting 
					where idsor = %<expensesorted.idsor>%]{I}
		AND I.idexp= %<expensesorted.idexp>%
		AND I.ayear = %<expensesorted.ayear>%]{N}
	,0)
	<=
	ISNULL(
		[SELECT curramount FROM expensetotal WHERE idexp= %<expensesorted.idexp>%
		AND ayear = %<expensesorted.ayear>%]{N}
	,0)
)
OR
(&<expensesorted.amount>& = %<expensesorted.amount>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM037','1','U','expensesorted','S','S','S','N','N',{ts '2011-09-15 13:00:42.890'},'sara','La classificazione SIOPE del movimento finanziario di spesa %<expenseview.ymov>%/%<expenseview.nmov>% non può essere variata in quanto è già incluso nel mandato di pagamento %<expenseview.ypay>% / %<expenseview.npay>%  che risulta trasmesso.','S','[(select count(*) 
from 
expense
join expenselast on expense.idexp=expenselast.idexp 
join payment 
on payment.kpay = expenselast.kpay
where expense.idexp = %<expensesorted.idexp>%
	and payment.kpaymenttransmission is not null
	)]{I} = 0
OR
%<expensesorted.amount>%=&<expensesorted.amount>&
OR
[SELECT ymov FROM expense
WHERE idexp = %<expensesorted.idexp>%]{I} > 2006
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensesorted.idexp>%]{C},''N'' )= ''S'')
AND
[(SELECT count(*)  from expensevar  where idexp = %<expensesorted.idexp>%
AND kpaymenttransmission is null AND autokind = 22)]{I} <> 0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM052','1','U','expensesorted','S','S','S','N','N',{ts '2011-09-15 13:04:55.670'},'sara','La classificazione SIOPE del movimento finanziario di spesa %<expense.ymov>%/%<expense.nmov>% non può essere variata in quanto è già incluso nel mandato di pagamento %<expense.ymov>% / %<expenseview.npay>%  che risulta trasmesso.','N','[(select count(*) 
from 
expense
join expenselast on expense.idexp=expenselast.idexp 
join payment 
	on payment.kpay = expenselast.kpay
where expense.idexp = %<expensesorted.idexp>%
	and payment.kpaymenttransmission is not null
	)]{I} = 0
OR
%<expensesorted.amount>%=&<expensesorted.amount>&
OR
([select codesorkind from sortingkind 
  join sorting
  on sortingkind.idsorkind = sorting.idsorkind  
  where idsor = %<expensesorted.idsor>%]{C} <> ''07U_SIOPE'')
OR
(
[SELECT ymov FROM expense
	WHERE idexp = %<expensesorted.idexp>%]{I} <
ISNULL([SELECT isnull(start,1900) FROM sortingkind
	WHERE codesorkind = ''07U_SIOPE'']{I},3000)
)

OR
(
 [select count(*) from expensevar
	where idexp = %<expensesorted.idexp>% and autokind in (10,11)]{I} > 0 
)

OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensesorted.idexp>%]{C},''N'' )= ''S'')
AND
[(SELECT count(*)  from expensevar  where idexp = %<expensesorted.idexp>%
AND kpaymenttransmission is null AND autokind = 22)]{I} <> 0
)



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM101','1','U','expensesorted','S','S','S','N','N',{ts '2012-03-05 13:33:58.937'},'assistenza','Attenzione! In fase di trasmissione questo movimento di Spesa, raggruppato eventualmente con altri in uno stesso Mandato (aventi lo stesso beneficiario, stessa voce di bilancio ecc.) potrebbe determinare il superamento del limite di 15 codici SIOPE distinti previsto da UNICREDIT.','N','(%<expensesorted.idexp>% = &<expensesorted.idexp>&) 
OR
(
[SELECT ymov FROM expense
	WHERE idexp = %<expensesorted.idexp>%
]{I} <
ISNULL([SELECT isnull(start,1900) FROM sortingkind
	WHERE codesorkind = ''07U_SIOPE'']{I},3000)
)

OR

ISNULL([
	(SELECT COUNT(distinct expensesorted.idsor)  
	 FROM expensesorted
	JOIN expenselast
		ON expensesorted.idexp = expenselast.idexp
	JOIN expenseview
		ON expenseview.idexp = expenselast.idexp
	JOIN sorting
		ON expensesorted.idsor = sorting.idsor
	JOIN sortingkind
		ON sortingkind.idsorkind = sorting.idsorkind
	JOIN expenselast EL1
		ON EL1.idexp = %<expensesorted.idexp>%
	JOIN expenseview E1 
		ON  E1.idexp =  EL1.idexp 
	JOIN sorting S1
		ON  S1.idsor = %<expensesorted.idsor>%
	JOIN sortingkind SK1
		ON SK1.idsorkind = S1.idsorkind
	WHERE ''07U_SIOPE''= sortingkind.codesorkind
	AND   ''07U_SIOPE''= SK1.codesorkind
AND expenseview.transmissiondate is null and E1.transmissiondate is null
AND expenseview.ayear = E1.ayear
AND expenseview.idreg = E1.idreg AND expenseview.idfin = E1.idfin
AND expenseview.idpaymethod = E1.idpaymethod AND expenseview.idregistrypaymethod = E1.idregistrypaymethod
AND expenseview.flagarrear = E1.flagarrear AND ISNULL(expenseview.cigcode,'''') = ISNULL(E1.cigcode,'''')
AND ISNULL(expenseview.cupcode,'''') = ISNULL(E1.cupcode,'''')
	)
	]{I} 
	,0) 
<=15

OR 

( ISNULL([(SELECT treasurer.idbank FROM treasurer 
	WHERE  ISNULL(flagdefault,''N'') = ''S'')]{C} ,'''')<>''02008'')

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM013','1','D','expensetax','S','S','S','N','N',{ts '2008-10-09 12:01:05.800'},'NINO','Operazione Impossibile. Il movimento di spesa al quale è associata la ritenuta %<tax.taxref>% - %<tax.description>% ha movimenti automatici collegati. ','N','[SELECT count(*) from expenseview where 
	autokind = 4 
	and idpayment = %<expensetax.idexp>%
	and ayear=%<sys_esercizio>%
	and curramount>0
]{I}=0
and
[SELECT count(*) from incomeview where 
	autokind =  4 
	and idpayment = %<expensetax.idexp>%
	and ayear=%<sys_esercizio>%
	and curramount>0
]{I}=0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM070','1','D','expensetax','S','S','S','N','N',{ts '2008-06-23 16:09:39.827'},'SARA','L''importo c/dip del dettaglio della ritenuta  %<tax.description>% sommato alle sue eventuali correzioni deve coincidere con l''importo del dettaglio più recente associato alla stessa ritenuta nel Riepilogo Storico.','N','ISNULL(
	[SELECT SUM(employtax)
	FROM expensetax
	WHERE expensetax.idexp = %<expensetax.idexp>%
		AND expensetax.taxcode = %<expensetax.taxcode>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(employamount)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensetax.idexp>%
		AND expensetaxcorrige.taxcode = %<expensetax.taxcode>%]{V},0)
=
ISNULL(
	[SELECT SUM(employtax)
	FROM expensetaxofficial
	WHERE expensetaxofficial.idexp = %<expensetax.idexp>%
		AND expensetaxofficial.taxcode = %<expensetax.taxcode>%
		AND expensetaxofficial.stop IS NULL]{V}
,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM070','2','D','expensetax','S','S','S','N','N',{ts '2008-06-23 16:31:45.157'},'SARA','L''importo c/amm del dettaglio della ritenuta  %<tax.description>%  sommato alle sue eventuali correzioni deve coincidere con l''importo del dettaglio più recente associato alla stessa ritenuta nel Riepilogo Storico.','N','ISNULL(
	[SELECT SUM(admintax)
	FROM expensetax
	WHERE expensetax.idexp = %<expensetax.idexp>%
		AND expensetax.taxcode = %<expensetax.taxcode>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(adminamount)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensetax.idexp>%
		AND expensetaxcorrige.taxcode = %<expensetax.taxcode>%]{V},0)
=
ISNULL(
	[SELECT SUM(admintax)
	FROM expensetaxofficial
	WHERE expensetaxofficial.idexp = %<expensetax.idexp>%
		AND expensetaxofficial.taxcode = %<expensetax.taxcode>%
		AND expensetaxofficial.stop IS NULL]{V}
,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN003','1','D','expensetax','S','S','S','N','N',{ts '2008-06-12 12:32:14.207'},'NINO','Operazione Impossibile, la liquidazione della ritenuta %<tax.taxref>% - %<tax.description>% -  del periodo che comprende la data di registrazione %<expense.adate>% è stata effettuata','S','(%<expensetax.ytaxpay>% IS NULL)
AND
(%<expensetax.idinc>% IS NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN004','1','D','expensetax','S','S','S','N','N',{ts '2007-10-29 11:23:14.827'},'NINO','L''importo di un movimento di spesa che annulla delle ritenute deve essere nullo oppure uguale alla somma delle ritenute, cambiata di segno.','N','--post
( ISNULL([SELECT curramount from expensetotal where ayear=%<sys_esercizio>% and idexp=%<expensetax.idexp>% ]{V},0) = 0 )
OR
( 
  ISNULL([SELECT SUM(employtax) from expensetax where idexp=%<expensetax.idexp>% ]{I},0) >= 0

)

OR 
(
 isnull([SELECT amount from expenseyear where idexp=%<expensetax.idexp>% and ayear=%<sys_esercizio>%]{V},0) 
	+
 isnull([SELECT amount from expensevar where idexp=%<expensetax.idexp>% and autokind is null]{V},0) 
	= -
  ISNULL([SELECT  SUM(employtax) from expensetax where idexp=%<expensetax.idexp>% ]{V},0)
)

OR
(
 [SELECT COUNT(*) FROM expensepayroll 
JOIN expenselink 
 ON expensepayroll.idexp=expenselink.idparent
WHERE expenselink.idchild= %<expensetax.idexp>% ]{I}<>0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN008','1','D','expensetax','S','S','S','N','N',{ts '2007-12-05 12:24:59.750'},'PINO','Con l''attuale configurazione degli automatismi la ritenuta c/dipendente non può essere negativa','N','([SELECT automanagekind FROM config WHERE ayear = %<sys_esercizio>%]{I} & 1024) = 0
OR
ISNULL(
	[SELECT SUM(employtax) FROM expensetax
	WHERE idexp = %<expensetax.idexp>%
	AND taxcode = %<expensetax.taxcode>%]{V}
,0) >= 0
OR
ISNULL(&<expensetax.employtax>&,0) <= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN011','1','D','expensetax','S','S','S','N','N',{ts '2008-10-09 12:42:12.207'},'NINO','Non possono essere cancellati i dettagli ritenuta %<tax.taxref>% - %<tax.description>% in quanto esistono movimenti collegati ad essi.','N','[SELECT COUNT(*) FROM expenseview WHERE idpayment= %<expensetax.idexp>% 
AND autocode = %<expensetax.taxcode>% 
AND autokind = 4
and ayear=%<sys_esercizio>%
and curramount>0
]{I} = 0
AND
[SELECT COUNT(*) FROM incomeview WHERE idpayment=  %<expensetax.idexp>% 
AND autocode = %<expensetax.taxcode>% 
AND autokind = 4
and ayear=%<sys_esercizio>%
and curramount>0
]{I} = 0
AND
[SELECT COUNT(*) FROM expensevar WHERE idexp = %<expensetax.idexp>% 
AND autokind = 4]{I} = 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN019','1','D','expensetax','S','S','S','N','N',{ts '2009-03-09 13:30:53.860'},'SA','Impossibile cancellare un dettaglio ritenute collegato al pagamento %<expenseview.nmov>% / %<expenseview.ymov>%  se associato all''F24EP.','S','[
SELECT idunifiedtax
FROM    expensetax 
WHERE idexp      =  %<expensetax.idexp>%
AND taxcode  	   =  %<expensetax.taxcode>%
AND nbracket       =  %<expensetax.nbracket>%
]{I} IS NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR011','1','I','expensetax','S','S','S','N','N',{ts '2007-12-13 13:34:31.443'},'SARA','Inserire il domicilio fiscale (o l''indirizzo di residenza) per il percipiente. La ritenuta %<tax.description>% è stata configurata con ''Versamento effettuato a percipienti diversi per ogni regione o provincia autonoma''.','N','[(SELECT COUNT(*) from taxsetup 
	WHERE ayear=%<sys_esercizio>% and 
		taxcode=%<expensetax.taxcode>%)
]{I}=0
OR
[select flag FROM taxsetup 
WHERE ayear = %<sys_esercizio>%  
AND taxcode = %<expensetax.taxcode>%
]{I} & 2 = 0
OR
[SELECT COUNT(*)
FROM registryaddress 
JOIN expense
	ON expense.idreg=registryaddress.idreg
JOIN expenselast
	ON expenselast.idexp= expense.idexp
JOIN address
	ON registryaddress.idaddresskind = address.idaddress
WHERE expense.idexp = %<expensetax.idexp>%
AND registryaddress.start <= ISNULL(expenselast.servicestop,
			isnull(expenselast.servicestart,expense.adate))
AND codeaddress in (''07_SW_DEF'',''07_SW_DOM'')]{I} > 0

	')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM013','1','I','expensetax','S','S','S','N','N',{ts '2007-09-21 16:50:19.327'},'NINO','Il movimento di spesa ha movimenti automatici relativi ad altre ritenute. Inserire i movimenti relativi alla ritenuta %<tax.taxref>% - %<tax.description>% -  separatamente','S','[SELECT count(*) from expense where 
	autokind = 4 and 
	idpayment = %<expensetax.idexp>%]{I}=0
and
[SELECT count(*) from income where 
	autokind = 4 and 
	idpayment = %<expensetax.idexp>%]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM022','1','I','expensetax','S','S','S','N','N',{ts '2007-08-28 13:13:38.157'},'NINO','Non si può inserire la ritenuta %<tax.description>% se non viene scelta la prestazione su cui calcolare le ritenute','N','[SELECT idser
FROM expenselast
WHERE idexp = %<expensetax.idexp>%]{I} IS NOT NULL')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM070','1','I','expensetax','S','S','S','N','N',{ts '2008-06-23 16:10:02.170'},'SARA','L''importo c/dip del dettaglio della ritenuta %<tax.description>%  sommato alle sue eventuali correzioni deve coincidere con l''importo del dettaglio più recente associato alla stessa ritenuta nel Riepilogo Storico.','N','ISNULL(
	[SELECT SUM(employtax)
	FROM expensetax
	WHERE expensetax.idexp = %<expensetax.idexp>%
		AND expensetax.taxcode = %<expensetax.taxcode>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(employamount)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensetax.idexp>%
		AND expensetaxcorrige.taxcode = %<expensetax.taxcode>%]{V},0)
=
ISNULL(
	[SELECT SUM(employtax)
	FROM expensetaxofficial
	WHERE expensetaxofficial.idexp = %<expensetax.idexp>%
		AND expensetaxofficial.taxcode = %<expensetax.taxcode>%
		AND expensetaxofficial.stop IS NULL]{V}
,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM070','2','I','expensetax','S','S','S','N','N',{ts '2008-06-23 16:10:10.030'},'SARA','L''importo c/amm  del dettaglio della ritenuta %<tax.description>%  sommato alle sue eventuali correzioni deve coincidere con l''importo del dettaglio più recente associato alla stessa ritenuta nel Riepilogo Storico.','N','ISNULL(
	[SELECT SUM(admintax)
	FROM expensetax
	WHERE expensetax.idexp = %<expensetax.idexp>%
		AND expensetax.taxcode = %<expensetax.taxcode>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(adminamount)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensetax.idexp>%
		AND expensetaxcorrige.taxcode = %<expensetax.taxcode>%]{V},0)
=
ISNULL(
	[SELECT SUM(admintax)
	FROM expensetaxofficial
	WHERE expensetaxofficial.idexp = %<expensetax.idexp>%
		AND expensetaxofficial.taxcode = %<expensetax.taxcode>%
		AND expensetaxofficial.stop IS NULL]{V}
,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN004','1','I','expensetax','S','S','S','N','N',{ts '2007-10-29 11:19:23.877'},'NINO','L''imponibile di una ritenuta negativa deve essere nullo o pari all''imponibile della ritenuta da annullare cambiato di segno.','N','(
ISNULL(
	[SELECT SUM(taxablegross)
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0)>= 0
AND
 ISNULL(
	[SELECT SUM(employtax)
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0)>=0 
 AND
 ISNULL(
	[SELECT SUM(admintax)
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0)>=0 
)
OR 
(
ISNULL(
	[SELECT SUM(taxablegross)
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0)<= 0
AND
 ISNULL(
	[SELECT SUM(employtax)
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0)<=0 
 AND
 ISNULL(
	[SELECT SUM(admintax)
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0)<=0 
)
OR
(
 [SELECT COUNT(*) FROM expensepayroll 
JOIN expenselink 
 ON expensepayroll.idexp=expenselink.idparent
WHERE expenselink.idchild= %<expensetax.idexp>% ]{I}<>0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN004','2','I','expensetax','S','S','S','N','N',{ts '2007-10-29 11:19:56.327'},'NINO','L''importo di un movimento di spesa che annulla delle ritenute deve essere nullo oppure uguale alla somma delle ritenute, cambiata di segno.','N','--post
( [SELECT curramount from expensetotal where ayear=%<sys_esercizio>% and idexp=%<expensetax.idexp>% ]{V} = 0 )
OR
( 
  isnull([SELECT SUM(employtax) from expensetax where idexp=%<expensetax.idexp>% ]{I},0) >= 0

)

OR 
(
 isnull([SELECT amount from expenseyear where idexp=%<expensetax.idexp>% and ayear=%<sys_esercizio>%]{V},0) 
	+
 isnull([SELECT amount from expensevar where idexp=%<expensetax.idexp>% and autokind is null]{V},0) 
	= -
  ISNULL([SELECT SUM(employtax) from expensetax where idexp=%<expensetax.idexp>% ]{V},0)
)

OR
(
 [SELECT COUNT(*) FROM expensepayroll 
JOIN expenselink 
 ON expensepayroll.idexp=expenselink.idparent
WHERE expenselink.idchild= %<expensetax.idexp>% ]{I}<>0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN004','3','I','expensetax','S','S','S','N','N',{ts '2007-10-29 11:20:27.717'},'NINO','Le ritenute di un movimento di spesa devono essere tutte dello stesso segno.','N','--post
(
(
	ISNULL(
	[SELECT SUM(employtax)
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0) >= 0) 
AND ( 
	ISNULL(
	[SELECT SUM(admintax)
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0) >= 0) 
)

OR

(

( ISNULL(	[SELECT SUM(employtax)
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0) <= 0) 
AND  (
	ISNULL(
	[SELECT SUM(admintax)
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0) <= 0) 

)




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN005','1','I','expensetax','S','S','S','N','N',{ts '2009-01-14 15:49:30.657'},'NINO','La ritenuta %<tax.taxref>% - %<tax.description>% non è stata configurata. Gli automatismi NON saranno generati correttamente.
(riga configurazione assente)','S','[(SELECT COUNT(*) from taxsetup 
	WHERE ayear=%<sys_esercizio>% and 
		taxcode=%<expensetax.taxcode>%)
]{I}>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN005','2','I','expensetax','S','S','S','N','N',{ts '2009-01-14 15:37:44.127'},'NINO','La ritenuta %<tax.taxref>% - %<tax.description>% non è stata configurata. Gli automatismi NON saranno generati correttamente.
(p.giro entrata per la parte a carico amministrazione)','S','[(SELECT COUNT(*) from taxsetup 
	WHERE ayear=%<sys_esercizio>% and 
		taxcode=%<expensetax.taxcode>% and
		idfinincomecontra is not null
	
)
]{I}>0

or 
(ISNULL([select automanagekind from config where
 ayear=%<sys_esercizio>%]{I},0) & 6) = 0
or 
(
isnull( %<expensetax.admintax>%,0) <=0
)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN005','3','I','expensetax','S','S','S','N','N',{ts '2009-01-14 15:37:49.843'},'NINO','La ritenuta %<tax.taxref>% - %<tax.description>% non è stata configurata. Gli automatismi NON saranno generati correttamente.
(p.giro entrata per la parte a carico dipendente)','S','[(SELECT COUNT(*) from taxsetup 
	WHERE ayear=%<sys_esercizio>% and 
		taxcode=%<expensetax.taxcode>% and
		idfinincomeemploy is not null
	
)
]{I}>0

or 
(ISNULL([select automanagekind from config where
 ayear=%<sys_esercizio>%]{I},0) & 512) = 0
or 
(
isnull( %<expensetax.employtax>%,0) <=0
)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN005','4','I','expensetax','S','S','S','N','N',{ts '2009-01-14 15:40:38.140'},'NINO','La ritenuta  %<tax.taxref>% - %<tax.description>% non è stata configurata. Gli automatismi NON saranno generati correttamente.
(p. giro uscita per parte carico amministrazione)','S','[(SELECT COUNT(*) from taxsetup 
	WHERE ayear=%<sys_esercizio>% and 
		taxcode=%<expensetax.taxcode>% and
		idfinexpensecontra is not null
	
)
]{I}>0

or 
(ISNULL([select automanagekind from config where
 ayear=%<sys_esercizio>%]{I},0) & 2) = 0
or 
(
isnull( %<expensetax.admintax>%,0) <=0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN005','5','I','expensetax','S','S','S','N','N',{ts '2009-01-14 15:41:41.610'},'NINO','La ritenuta  %<tax.taxref>% - %<tax.description>% non è stata configurata. Gli automatismi NON saranno generati correttamente.
(p. giro uscita per parte carico dipendente)','S','[(SELECT COUNT(*) from taxsetup 
	WHERE ayear=%<sys_esercizio>% and 
		taxcode=%<expensetax.taxcode>% and
		idfinexpenseemploy is not null
	
)
]{I}>0

or 
(ISNULL([select automanagekind from config where
 ayear=%<sys_esercizio>%]{I},0) & 2) = 0
or 
(
isnull( %<expensetax.employtax>%,0) <=0
)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN008','1','I','expensetax','S','S','S','N','N',{ts '2007-12-05 12:21:40.577'},'PINO','Con l''attuale configurazione degli automatismi la ritenuta c/dipendente non può essere negativa','N','([SELECT automanagekind FROM config  WHERE ayear = %<sys_esercizio>%]{I} & 1024) = 0
OR
ISNULL(
	[SELECT SUM(employtax) FROM expensetax
	WHERE idexp = %<expensetax.idexp>%
	AND taxcode = %<expensetax.taxcode>%]{V}
,0) >= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN009','1','I','expensetax','S','S','S','N','N',{ts '2007-12-05 12:23:06.703'},'PINO','Dettaglio ritenute a carico del percipiente negativo: dovranno essere creati manualmente i movimenti di spesa sulle partite di giro a favore del percipiente.','N','([SELECT automanagekind FROM config WHERE ayear = %<sys_esercizio>%]{I} & 512) = 0
OR
ISNULL(%<expensetax.employtax>%,0) >= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN021','3','I','expensetax','S','S','S','N','N',{ts '2009-03-30 15:25:38.823'},'SARA','Nel pagamento di un cedolino parasuubordinati, gli importi delle ritenute a carico del percipiente devono coincidere con quelli del relativo contratto.','N','[SELECT COUNT(*) 
 FROM expensepayroll EP
 JOIN expenselink EL
	ON  EL.idparent = EP.idexp
	AND EL.idchild  = %<expensetax.idexp>%
]{I} = 0
OR
ISNULL(
	[SELECT SUM(employtax) FROM expensetax
	WHERE idexp = %<expensetax.idexp>%
	AND taxcode = %<expensetax.taxcode>%]{V}
,0) =
ISNULL(
	[SELECT SUM(employtax) 
	FROM payrolltax PT
	JOIN expensepayroll EP 
		ON EP.idpayroll = PT.idpayroll 
	JOIN expenselink EL
		ON  EL.idparent = EP.idexp
		AND EL.idchild  = %<expensetax.idexp>%
	WHERE PT.taxcode = %<expensetax.taxcode>%]{V}
,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN021','4','I','expensetax','S','S','S','N','N',{ts '2009-03-30 15:29:19.343'},'SARA','Nel pagamento di un cedolino parasubordinati, gli importi delle ritenute a carico del percipiente devono coincidere con quelli del relativo contratto.','N','[SELECT COUNT(*) 
 FROM expensepayroll EP
 JOIN expenselink EL
	ON  EL.idparent = EP.idexp
	AND EL.idchild  = %<expensetax.idexp>%
]{I} = 0
OR
ISNULL(
	[SELECT SUM(admintax) FROM expensetax
	WHERE idexp = %<expensetax.idexp>%
	AND taxcode = %<expensetax.taxcode>%]{V}
,0) =
ISNULL(
	[SELECT SUM(admintax) 
	FROM payrolltax PT
	JOIN expensepayroll EP 
		ON EP.idpayroll = PT.idpayroll 
	JOIN expenselink EL
		ON  EL.idparent = EP.idexp
		AND EL.idchild  = %<expensetax.idexp>%
	WHERE PT.taxcode = %<expensetax.taxcode>%]{V}
,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN022','1','I','expensetax','S','S','S','N','N',{ts '2011-02-18 12:13:10.140'},'sara','Gli automatismi della ritenuta " %<expensetaxview.description>%  " sono stati configurati in modo incompleto, manca l''indicazione dell'' Ente esattore Regionale o Provinciale. In assenza di questa informazione la ritenuta NON verrà liquidata. 
Rivedere la configurazione degli automatismi.','N','-- Ho scelto la configurazione "Genera un mov. di spesa per ogni regione o provincia autonoma" 
[select (flag&2) from taxsetup
where ayear = %<expensetax.ayear>%
	and	taxcode = %<expensetax.taxcode>%]{I}=0

OR
--Manca la provincia
[select count(*) 
	from taxregionsetup 
	where taxcode = %<expensetax.taxcode>%
		and ayear = %<expensetax.ayear>%
		and regionalagency is not null 
		and idplace= %<expensetax.idcity>%
		and taxregionsetup.kind =''P''
]{I}>0

OR
-- Manca la Regione
[select count(*) 
	from taxregionsetup 
	where taxcode = %<expensetax.taxcode>%
		and ayear = %<expensetax.ayear>%
		and regionalagency is not null
		and taxregionsetup.kind =''R''
		and idplace = [
			SELECT isnull(fiscaltaxregion.idregion, 
					(select geo_country.idregion 
					from geo_country 
					join fiscaltaxregion 
						on geo_country.idcountry = fiscaltaxregion.idcountry 
					where fiscaltaxregion.idfiscaltaxregion = isnull(%<expensetax.idfiscaltaxregion>%,'''')) ) 
			FROM fiscaltaxregion 
			WHERE idfiscaltaxregion = isnull(%<expensetax.idfiscaltaxregion>%,'''')
			]{I}
	]{I}>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM013','1','U','expensetax','S','S','S','N','N',{ts '2008-06-24 12:49:30.140'},'NINO','Il movimento di spesa al quale è associata la ritenuta %<tax.taxref>% - %<tax.description>%  ha movimenti automatici. Modificare i movimenti separatamente','S','[SELECT COUNT(*) 
FROM expensetax 
WHERE idexp = &<expensetax.idexp>& 
AND taxcode = &<expensetax.taxcode>& 
AND employtax = &<expensetax.employtax>& 
AND admintax = &<expensetax.admintax>&]{I} = [1]
AND
[SELECT COUNT(*) FROM expense
	WHERE autokind =  4
	AND idpayment = %<expensetax.idexp>%]{I}=0
AND
[SELECT COUNT(*) FROM income 
	WHERE autokind =  4
	AND idpayment = %<expensetax.idexp>%]{I}=0
or ISNULL(&<expensetax.ytaxpay>&, 0)<>ISNULL(%<expensetax.ytaxpay>%, 0)
or ISNULL(&<expensetax.ntaxpay>&, 0)<>ISNULL(%<expensetax.ntaxpay>%, 0)
or ISNULL(&<expensetax.idinc>&,0) <> ISNULL(%<expensetax.idinc>%,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM022','1','U','expensetax','S','S','S','N','N',{ts '2007-08-28 13:15:20.593'},'NINO','Non può essere modificata una ritenuta se non viene scelta la prestazione sulla quale calcolare la ritenuta','S','[SELECT idser FROM expenselast WHERE idexp=%<expensetax.idexp>%]{C} IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM070','1','U','expensetax','S','S','S','N','N',{ts '2008-06-25 14:30:53.767'},'SARA','L''importo c/dip del dettaglio della ritenuta %<tax.description>%  su %<expenseview.phase>%  n° %<expenseview.nmov>% del  %<expenseview.ymov>%  sommato alle sue eventuali correzioni deve coincidere con l''importo del dettaglio più recente associato alla stessa ritenuta nel Riepilogo Storico.','N','ISNULL(
	[SELECT SUM(employtax)
	FROM expensetax
	WHERE expensetax.idexp = %<expensetax.idexp>%
		AND expensetax.taxcode = %<expensetax.taxcode>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(employamount)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensetax.idexp>%
		AND expensetaxcorrige.taxcode = %<expensetax.taxcode>%]{V},0)
=
ISNULL(
	[SELECT SUM(employtax)
	FROM expensetaxofficial
	WHERE expensetaxofficial.idexp = %<expensetax.idexp>%
		AND expensetaxofficial.taxcode = %<expensetax.taxcode>%
		AND expensetaxofficial.stop IS NULL]{V}
,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM070','2','U','expensetax','S','S','S','N','N',{ts '2008-06-25 14:31:01.437'},'SARA','L''importo c/amm del dettaglio della ritenuta %<tax.description>%  su %<expenseview.phase>% n° %<expenseview.nmov>% del  %<expenseview.ymov>%  sommato alle sue eventuali correzioni deve coincidere con l''importo del dettaglio più recente associato alla stessa ritenuta nel Riepilogo Storico.','N','ISNULL(
	[SELECT SUM(admintax)
	FROM expensetax
	WHERE expensetax.idexp = %<expensetax.idexp>%
		AND expensetax.taxcode = %<expensetax.taxcode>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(adminamount)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensetax.idexp>%
		AND expensetaxcorrige.taxcode = %<expensetax.taxcode>%]{V},0)
=
ISNULL(
	[SELECT SUM(admintax)
	FROM expensetaxofficial
	WHERE expensetaxofficial.idexp = %<expensetax.idexp>%
		AND expensetaxofficial.taxcode = %<expensetax.taxcode>%
		AND expensetaxofficial.stop IS NULL]{V}
,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN003','1','U','expensetax','S','S','S','N','N',{ts '2008-06-12 13:08:29.533'},'NINO','Operazione Impossibile, la liquidazione della ritenuta %<taxcode>% del periodo che comprende la data di registrazione %<expense.adate>% è stata effettuata','S','(%<expensetax.ytaxpay>% IS NULL) 
AND (%<expensetax.idinc>% IS NULL)
OR ( 
ISNULL(&<expensetax.competencydate>&,{D ''1900-01-01''})=ISNULL(%<expensetax.competencydate>%,{d ''1900-01-01''})
AND ISNULL(&<expensetax.employtax>&,0)=ISNULL(%<expensetax.employtax>%,0)
AND ISNULL(&<expensetax.admintax>&,0)=ISNULL(%<expensetax.admintax>%,0) 
AND ISNULL(&<expensetax.taxablegross>&,0)=ISNULL(%<expensetax.taxablegross>%,0)
AND ISNULL(&<expensetax.taxablenet>&,0)=ISNULL(%<expensetax.taxablenet>%,0)
AND ISNULL(&<expensetax.idcity>&,0)=ISNULL(%<expensetax.idcity>%,0)
AND ISNULL(&<expensetax.idfiscaltaxregion>&,'''')=ISNULL(%<expensetax.idfiscaltaxregion>%,'''')
AND ISNULL(&<expensetax.ayear>&,0)=ISNULL(%<expensetax.ayear>%,0)
)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN004','1','U','expensetax','S','S','S','N','N',{ts '2007-10-29 11:17:12.750'},'NINO','L''imponibile di una ritenuta negativa deve essere nullo o pari all''imponibile della ritenuta da annullare cambiato di segno.','N','(
ISNULL(
	[SELECT SUM(taxablegross)
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0)>= 0
AND
 ISNULL(
	[SELECT SUM(employtax)
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0)>=0 
 AND
 ISNULL(
	[SELECT SUM(admintax)
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0)>=0 
)
OR 
(
ISNULL(
	[SELECT SUM(taxablegross)
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0)<= 0
AND
 ISNULL(
	[SELECT SUM(employtax)
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0)<=0 
 AND
 ISNULL(
	[SELECT SUM(admintax)
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0)<=0 
)
OR
(
 [SELECT COUNT(*) FROM expensepayroll 
JOIN expenselink 
 ON expensepayroll.idexp=expenselink.idparent
WHERE expenselink.idchild= %<expensetax.idexp>% ]{I}<>0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN004','2','U','expensetax','S','S','S','N','N',{ts '2007-10-29 11:15:50.703'},'NINO','L''importo di un movimento di spesa che annulla delle ritenute deve essere nullo oppure uguale alla somma delle ritenute, cambiata di segno.','N','--post
( [SELECT curramount from expensetotal where ayear=%<sys_esercizio>% and idexp=%<expensetax.idexp>% ]{V} = 0 )
OR
( 
 isnull([SELECT SUM(employtax) from expensetax where idexp=%<expensetax.idexp>% ]{I},0) >= 0

)

OR 
(
 isnull([SELECT amount from expenseyear where idexp=%<expensetax.idexp>% and ayear=%<sys_esercizio>%]{V},0) 
	+
 isnull([SELECT amount from expensevar where idexp=%<expensetax.idexp>% and autokind is null]{V},0) 
	= -
  ISNULL([SELECT SUM(employtax)  from expensetax where idexp=%<expensetax.idexp>% ]{V},0)
)

OR
(
 [SELECT COUNT(*) FROM expensepayroll 
JOIN expenselink 
 ON expensepayroll.idexp=expenselink.idparent
WHERE expenselink.idchild= %<expensetax.idexp>% ]{I}<>0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN004','3','U','expensetax','S','S','S','N','N',{ts '2007-10-29 11:16:32.267'},'NINO','Le ritenute di un movimento di spesa devono essere tutte dello stesso segno.','N','--post
(
(
	ISNULL(
	[SELECT SUM(employtax)
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0) >= 0) 
AND ( 
	ISNULL(
	[SELECT SUM(admintax) 
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0) >= 0) 
)

OR

(

( ISNULL(	[SELECT SUM(employtax)
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0) <= 0) 
AND  (
	ISNULL(
	[SELECT SUM(admintax)
	FROM expensetax
	WHERE idexp = %<expensetax.idexp>% 
	AND taxcode= %<expensetax.taxcode>% ]{V},0) <= 0) 

)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN008','1','U','expensetax','S','S','S','N','N',{ts '2007-12-05 12:27:00.703'},'PINO','Con l''attuale configurazione degli automatismi la ritenuta c/dipendente non può essere negativa','N','([SELECT automanagekind FROM config WHERE ayear = %<sys_esercizio>%]{I} & 1024) = 0
OR
ISNULL(
	[SELECT SUM(employtax) FROM expensetax
	WHERE idexp = %<expensetax.idexp>%
	AND taxcode = %<expensetax.taxcode>%]{V}
,0) >= 0
OR
ISNULL(%<expensetax.employtax>%,0) >= ISNULL(&<expensetax.employtax>&,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN009','1','U','expensetax','S','S','S','N','N',{ts '2007-12-05 12:27:54.437'},'PINO','Dettaglio ritenute a carico del percipiente negativo: dovranno essere creati manualmente i movimenti di spesa sulle partite di giro a favore del percipiente.','N','([SELECT automanagekind FROM config WHERE ayear = %<sys_esercizio>%]{I} & 512) = 0
OR
ISNULL(%<expensetax.employtax>%,0) >= 0
OR
ISNULL(%<expensetax.employtax>%,0) = ISNULL(&<expensetax.employtax>&,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN010','1','U','expensetax','S','S','S','N','N',{ts '2010-01-13 10:05:04.953'},'SARA','L'' importo della ritenuta c/amministrazione %<tax.taxref>%    non può essere diverso all''importo del movimento automatico a cui essa è legata','N','--Mov. di spesa per contributi su conf. 1

ISNULL(
	 [(SELECT ISNULL(SUM(admintax),0) from expensetax where 
	idexp = %<expensetax.idexp>% AND taxcode= %<expensetax.taxcode>% )]{V}  ,0)
<= 0

OR

ISNULL(
	 [(SELECT ISNULL(SUM(admintax),0) from expensetax where 
	idexp = %<expensetax.idexp>% AND taxcode= %<expensetax.taxcode>% )]{V}  ,0)=
ISNULL(
	[(select ISNULL(SUM(EY.amount),0) from expense 
       join expenseyear EY on EY.idexp= expense.idexp
       where 
	autokind = 4
	and idpayment= %<expensetax.idexp>%
	and autocode= %<expensetax.taxcode>%
      and nphase= %<sys_maxexpensephase>%
	and idreg = [select idregauto from config where ayear = %<sys_esercizio>%]{V}
)]{V}
    ,0)

OR 
[(SELECT flag & 2 FROM expenselast where idexp=	%<expensetax.idexp>%)]{I}=0
OR
([(SELECT automanagekind FROM config where ayear = %<esercizio>%)]{I} & 2) = 0




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN010','2','U','expensetax','S','S','S','N','N',{ts '2010-01-13 10:05:14.047'},'SARA','L'' importo della ritenuta %<tax.taxref>%  non può essere diverso all''importo del movimento automatico a cui essa è legata.','N','--mov. di entrata su rit/contr. positivi
ISNULL( [(SELECT ISNULL(SUM(employtax),0) from expensetax where 
	idexp = %<expensetax.idexp>% AND taxcode= %<expensetax.taxcode>% )]{V}  ,0)< 0
OR

(
ISNULL( 
	[(SELECT ISNULL(SUM(admintax),0) from expensetax where 
	idexp = %<expensetax.idexp>% AND taxcode= %<expensetax.taxcode>% )]{V}  ,0)
+ ISNULL(
	 [(SELECT ISNULL(SUM(employtax),0) from expensetax where 
	idexp = %<expensetax.idexp>% AND taxcode= %<expensetax.taxcode>% )]{V}  ,0)
)
	=
	ISNULL([(select sum(IY.amount) from income 
            join incomeyear IY on income.idinc=IY.idinc 
           where 
	autokind = 4 
	and idpayment= %<expensetax.idexp>%
	and autocode= %<expensetax.taxcode>%
	and nphase= %<sys_maxincomephase>%
	)]{V}, 
	0)

OR 
[(SELECT flag & 2 FROM expenselast where idexp=	%<expensetax.idexp>%)]{I}=0
OR
([(SELECT automanagekind FROM config where ayear = %<esercizio>%)]{I} & 2) = 0
OR
([(SELECT automanagekind FROM config where ayear = %<esercizio>%)]{I} & 512) = 0




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN010','3','U','expensetax','S','S','S','N','N',{ts '2010-01-13 10:05:22.267'},'SARA','L'' importo della ritenuta %<tax.taxref>%  non può essere diverso all''importo del movimento automatico a cui essa è legata.','N','--mov. di entrata per ritenute positive su liq.diretta contributi

ISNULL(
	 [(SELECT ISNULL(SUM(employtax),0) from expensetax where 
	idexp = %<expensetax.idexp>% AND taxcode= %<expensetax.taxcode>% )]{V} ,0)< 0
OR
  
ISNULL(
	 [(SELECT ISNULL(SUM(employtax),0) from expensetax where 
	idexp = %<expensetax.idexp>% AND taxcode= %<expensetax.taxcode>% )]{V} ,0)
	=
	ISNULL([(select sum(IY.amount) from income 
          join incomeyear IY on IY.idinc= income.idinc
           where 
	autokind = 4
	and idpayment= %<expensetax.idexp>%
	and autocode= %<expensetax.taxcode>%
	and nphase= %<sys_maxincomephase>%
	)]{V},0)
OR 
[(SELECT flag & 2 FROM expenselast where idexp=	%<expensetax.idexp>%)]{I}=0
OR
([(SELECT automanagekind FROM config where ayear = %<esercizio>%)]{I} & 8) = 0
OR
([(SELECT automanagekind FROM config where ayear = %<esercizio>%)]{I} & 512) = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN010','4','U','expensetax','S','S','S','N','N',{ts '2010-01-13 10:05:30.030'},'SARA','L'' importo della ritenuta %<tax.taxref>%   non può essere diverso all''importo del movimento automatico a cui essa è legata.','N','--mov. di spesa per ritenute negative

ISNULL(
	 [(SELECT ISNULL(SUM(employtax),0) from expensetax where 
	idexp = %<expensetax.idexp>% AND taxcode= %<expensetax.taxcode>% )]{V} ,0) >=0
OR
(- ISNULL(
	[(SELECT ISNULL(SUM(employtax),0) from expensetax where 
	idexp = %<expensetax.idexp>% AND taxcode= %<expensetax.taxcode>% )]{V} ,0) 
)
	=
	ISNULL([(select sum(EY.amount) from expense 
			join expenseyear EY on EY.idexp=expense.idexp
	where 
	autokind = 4 
	and idpayment= %<expensetax.idexp>%
	and autocode= %<expensetax.taxcode>%
	and nphase= %<sys_maxexpensephase>%
	)]{V}, 
	0)
OR
(- ISNULL(
	[(SELECT ISNULL(SUM(employtax),0) from expensetax where 
	idexp = %<expensetax.idexp>% AND taxcode= %<expensetax.taxcode>% )]{V} ,0) 
)
	=
	ISNULL([(select sum(EY.amount) from expense 
			join expenseyear EY on EY.idexp=expense.idexp
	where 
	autokind is null
      and EY.ayear=%<sys_esercizio>%
	and expense.idexp= %<expensetax.idexp>%
	and autocode is null
	and nphase= %<sys_maxexpensephase>%
	)]{V}, 
	0)

OR 
[(SELECT flag & 2 FROM expenselast where idexp=	%<expensetax.idexp>%)]{I}=0
OR
([(SELECT automanagekind FROM config where ayear = %<esercizio>%)]{I} & 512) = 0







')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN012','1','U','expensetax','S','S','S','N','N',{ts '2009-01-20 12:19:21.277'},'SA','La ritenuta %<tax.taxref>%  è stata liquidata fuori del periodo di competenza','N','%<expensetax.ytaxpay>% IS NULL
OR
[SELECT taxvaliditykind FROM config WHERE ayear = %<sys_esercizio>%]{I} <> 2
OR
ISNULL(%<expensetax.ytaxpay>%,0) = ISNULL(&<expensetax.ytaxpay>&,0)
OR
(
[SELECT adate FROM expense
WHERE idexp = %<expensetax.idexp>%]{D} BETWEEN
[SELECT start FROM taxpay
WHERE ytaxpay = %<expensetax.ytaxpay>%
AND ntaxpay = %<expensetax.ntaxpay>%]{D}
AND
[SELECT stop FROM taxpay
WHERE ytaxpay = %<expensetax.ytaxpay>%
AND ntaxpay = %<expensetax.ntaxpay>%]{D}
)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN012','2','U','expensetax','S','S','S','N','N',{ts '2009-01-20 12:19:24.510'},'SA','La ritenuta %<tax.taxref>% è stata liquidata fuori del periodo di competenza','N','%<expensetax.ytaxpay>% IS NULL
OR
[SELECT taxvaliditykind FROM config WHERE ayear = %<sys_esercizio>%]{I} <> 3
OR
ISNULL(%<expensetax.ytaxpay>%,0) = ISNULL(&<expensetax.ytaxpay>&,0)
OR
(
[SELECT adate FROM payment
WHERE kpay =
	[SELECT kpay FROM expenselast WHERE idexp = %<expensetax.idexp>%]{I}
]{D} BETWEEN
[SELECT start FROM taxpay
WHERE ytaxpay = %<expensetax.ytaxpay>%
AND ntaxpay = %<expensetax.ntaxpay>%]{D}
AND
[SELECT stop FROM taxpay
WHERE ytaxpay = %<expensetax.ytaxpay>%
AND ntaxpay = %<expensetax.ntaxpay>%]{D}
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN012','3','U','expensetax','S','S','S','N','N',{ts '2009-01-20 12:19:27.587'},'SA','La ritenuta %<tax.taxref>%  è stata liquidata fuori del periodo di competenza','N','%<expensetax.ytaxpay>% IS NULL
OR
[SELECT taxvaliditykind FROM config WHERE ayear = %<sys_esercizio>%]{C} <> 4
OR
ISNULL(%<expensetax.ytaxpay>%,0) = ISNULL(&<expensetax.ytaxpay>&,0)
OR
(
[SELECT printdate FROM payment
WHERE kpay =
	[SELECT kpay FROM expenselast WHERE idexp = %<expensetax.idexp>%]{I}
]{D} BETWEEN
[SELECT start FROM taxpay
WHERE ytaxpay = %<expensetax.ytaxpay>%
AND ntaxpay = %<expensetax.ntaxpay>%]{D}
AND
[SELECT stop FROM taxpay
WHERE ytaxpay = %<expensetax.ytaxpay>%
AND ntaxpay = %<expensetax.ntaxpay>%]{D}
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN012','4','U','expensetax','S','S','S','N','N',{ts '2009-01-20 12:19:30.650'},'SA','La ritenuta  %<tax.taxref>%  è stata liquidata fuori del periodo di competenza','N','%<expensetax.ytaxpay>% IS NULL
OR
[SELECT taxvaliditykind FROM config WHERE ayear = %<sys_esercizio>%]{C} <> 5
OR
ISNULL(%<expensetax.ytaxpay>%,0) = ISNULL(&<expensetax.ytaxpay>&,0)
OR
(
[SELECT transmissiondate FROM paymentview
WHERE kpay =
	[SELECT kpay FROM expenselast WHERE idexp = %<expensetax.idexp>%]{I}
]{D} BETWEEN
[SELECT start FROM taxpay
WHERE ytaxpay = %<expensetax.ytaxpay>%
AND ntaxpay = %<expensetax.ntaxpay>%]{D}
AND
[SELECT stop FROM taxpay
WHERE ytaxpay = %<expensetax.ytaxpay>%
AND ntaxpay = %<expensetax.ntaxpay>%]{D}
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN012','5','U','expensetax','S','S','S','N','N',{ts '2009-01-20 12:19:33.667'},'SA','La ritenuta %<tax.taxref>%  è stata liquidata fuori del periodo di competenza','N','%<expensetax.ytaxpay>% IS NULL
OR
[SELECT taxvaliditykind FROM config  WHERE ayear = %<sys_esercizio>%]{C} <> 6
OR
ISNULL(%<expensetax.ytaxpay>%,0) = ISNULL(&<expensetax.ytaxpay>&,0)
OR
(
[SELECT MIN(transactiondate) FROM banktransaction
WHERE idexp = %<expensetax.idexp>%]{D} BETWEEN
[SELECT start FROM taxpay
WHERE ytaxpay = %<expensetax.ytaxpay>%
AND ntaxpay = %<expensetax.ntaxpay>%]{D}
AND
[SELECT stop FROM taxpay
WHERE ytaxpay = %<expensetax.ytaxpay>%
AND ntaxpay = %<expensetax.ntaxpay>%]{D}
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN015','1','U','expensetax','S','S','S','N','N',{ts '2008-06-12 17:50:33.283'},'NINO','La somma delle ritenute è superiore al movimento di entrata collegato','S','%<expensetax.idinc>% IS NULL
OR
ISNULL(
	[SELECT -
	SUM(
		ISNULL(expensetax.employtax,0) +
		ISNULL(expensetax.admintax,0)
	)
	FROM expensetax
	WHERE expensetax.idinc = %<expensetax.idinc>%]{V}
,0) +
ISNULL(
	[SELECT -
	SUM(
		ISNULL(expensetaxcorrige.employamount,0) +
		ISNULL(expensetaxcorrige.adminamount,0)
	)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.linkedidinc = %<expensetax.idinc>%]{V}
,0)
<=
[SELECT curramount
FROM incomeview
WHERE incomeview.idinc = %<expensetax.idinc>%]{V}
OR
ISNULL(&<expensetax.idinc>&,0) = ISNULL(%<expensetax.idinc>%,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN019','1','U','expensetax','S','S','S','N','N',{ts '2009-03-09 13:33:55.533'},'SA','Impossibile modificare un dettaglio ritenute collegato al pagamento %<expenseview.nmov>% / %<expenseview.ymov>%  se associato all''F24EP ','S','(
ISNULL(%<expensetax.ytaxpay>%,0) <> ISNULL(&<expensetax.ytaxpay>&,0)
OR
ISNULL(%<expensetax.ntaxpay>%,0) <> ISNULL(&<expensetax.ntaxpay>&,0)
)
OR
[
SELECT idunifiedtax
FROM    expensetax 
WHERE idexp      =  %<expensetax.idexp>%
AND taxcode  	   =  %<expensetax.taxcode>%
AND nbracket      =  %<expensetax.nbracket>%
]{I} IS NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM070','1','D','expensetaxcorrige','S','S','S','N','N',{ts '2008-06-23 16:10:44.280'},'SARA','L''importo c/dip del dettaglio della ritenuta  %<tax.description>%  sommato alle sue eventuali correzioni deve coincidere con l''importo del dettaglio più recente associato alla stessa ritenuta nel Riepilogo Storico.','N','ISNULL(
	[SELECT SUM(employtax)
	FROM expensetax
	WHERE expensetax.idexp = %<expensetaxcorrige.idexp>%
		AND expensetax.taxcode = %<expensetaxcorrige.taxcode>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(employamount)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensetaxcorrige.idexp>%
		AND expensetaxcorrige.taxcode = %<expensetaxcorrige.taxcode>%]{V},0)
=
ISNULL(
	[SELECT SUM(employtax)
	FROM expensetaxofficial
	WHERE expensetaxofficial.idexp = %<expensetaxcorrige.idexp>%
		AND expensetaxofficial.taxcode = %<expensetaxcorrige.taxcode>%
		AND expensetaxofficial.stop IS NULL]{V}
,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM070','2','D','expensetaxcorrige','S','S','S','N','N',{ts '2008-06-23 16:05:16.733'},'SARA','L''importo del dettaglio della ritenuta %<tax.description>% sommato alle sue eventuali correzioni deve coincidere con l''importo del dettaglio più recente associato alla stessa ritenuta nel Riepilogo Storico.','N','ISNULL(
	[SELECT SUM(admintax)
	FROM expensetax
	WHERE expensetax.idexp = %<expensetaxcorrige.idexp>%
		AND expensetax.taxcode = %<expensetaxcorrige.taxcode>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(adminamount)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensetaxcorrige.idexp>%
		AND expensetaxcorrige.taxcode = %<expensetaxcorrige.taxcode>%]{V},0)
=
ISNULL(
	[SELECT SUM(admintax)
	FROM expensetaxofficial
	WHERE expensetaxofficial.idexp = %<expensetaxcorrige.idexp>%
		AND expensetaxofficial.taxcode = %<expensetaxcorrige.taxcode>%
		AND expensetaxofficial.stop IS NULL]{V}
,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN003','1','D','expensetaxcorrige','S','S','S','N','N',{ts '2008-06-23 10:13:41.390'},'NINO','Operazione Impossibile, la liquidazione della ritenuta %<tax.taxref>% - %<tax.description>% -  del periodo che comprende la data di registrazione %<expense.adate>% è stata effettuata','S','(%<expensetaxcorrige.ytaxpay>% IS NULL)
OR
(ISNULL(%<expensetaxcorrige.employamount>%,0)
+
ISNULL(%<expensetaxcorrige.adminamount>%,0) < 0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN003','2','D','expensetaxcorrige','S','S','S','N','N',{ts '2008-06-23 10:14:17.657'},'NINO','Operazione Impossibile, la liquidazione della ritenuta %<tax.taxref>% - %<tax.description>% -  del periodo che comprende la data di registrazione %<expense.adate>% è stata effettuata','S','(ISNULL(%<expensetaxcorrige.employamount>%,0)
+
ISNULL(%<expensetaxcorrige.adminamount>%,0) > 0)
OR
(%<expensetaxcorrige.linkedidinc>% IS NULL)
AND
(%<expensetaxcorrige.ytaxpay>% IS NULL)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN011','1','D','expensetaxcorrige','S','S','S','N','N',{ts '2008-10-09 12:42:39.160'},'NINO','Non possono essere cancellate le correzioni della ritenuta %<tax.taxref>% - %<tax.description>% in quanto esistono movimenti collegati ad essi.','N','[SELECT COUNT(*) FROM expenseview
WHERE idexp = %<expensetaxcorrige.linkedidexp>%
and ayear=%<sys_esercizio>%
and curramount>0
]{I} = 0
AND
[SELECT COUNT(*) FROM incomeview
WHERE idinc =  %<expensetaxcorrige.linkedidexp>%
and ayear=%<sys_esercizio>%
and curramount>0
 
]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN019','1','D','expensetaxcorrige','S','S','S','N','N',{ts '2009-03-09 13:33:58.500'},'SA','Impossibile cancellare un dettaglio ritenute collegato al pagamento %<expenseview.nmov>% / %<expenseview.ymov>%  se associato all''E24EP.','S','[
SELECT idunifiedtaxcorrige
FROM    expensetaxcorrige 
WHERE idexp      =  %<expensetaxcorrige.idexp>%
AND idexpensetaxcorrige =  %<expensetaxcorrige.idexpensetaxcorrige>%
]{I} IS NULL


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM022','1','I','expensetaxcorrige','S','S','S','N','N',{ts '2008-06-13 10:39:23.160'},'NINO','Non si può inserire la correzione della ritenuta %<tax.description>% se non viene scelta la prestazione su cui calcolare le stesse.','N','[SELECT idser
FROM expenselast
WHERE idexp = %<expensetaxcorrige.idexp>%]{I} IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM070','1','I','expensetaxcorrige','S','S','S','N','N',{ts '2008-06-23 16:10:56.297'},'SARA','L''importo c/dip del dettaglio della ritenuta %<tax.description>%  sommato alle sue eventuali correzioni deve coincidere con l''importo del dettaglio più recente associato alla stessa ritenuta nel Riepilogo Storico.','N','ISNULL(
	[SELECT SUM(employtax)
	FROM expensetax
	WHERE expensetax.idexp = %<expensetaxcorrige.idexp>%
		AND expensetax.taxcode = %<expensetaxcorrige.taxcode>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(employamount)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensetaxcorrige.idexp>%
		AND expensetaxcorrige.taxcode = %<expensetaxcorrige.taxcode>%]{V},0)
=
ISNULL(
	[SELECT SUM(employtax)
	FROM expensetaxofficial
	WHERE expensetaxofficial.idexp = %<expensetaxcorrige.idexp>%
		AND expensetaxofficial.taxcode = %<expensetaxcorrige.taxcode>%
		AND expensetaxofficial.stop IS NULL]{V}
,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM070','2','I','expensetaxcorrige','S','S','S','N','N',{ts '2008-06-23 16:31:50.937'},'SARA','L''importo c/amm del dettaglio della ritenuta %<tax.description>%  sommato alle sue eventuali correzioni deve coincidere con l''importo del dettaglio più recente associato alla stessa ritenuta nel Riepilogo Storico.','N','ISNULL(
	[SELECT SUM(admintax)
	FROM expensetax
	WHERE expensetax.idexp = %<expensetaxcorrige.idexp>%
		AND expensetax.taxcode = %<expensetaxcorrige.taxcode>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(adminamount)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensetaxcorrige.idexp>%
		AND expensetaxcorrige.taxcode = %<expensetaxcorrige.taxcode>%]{V},0)
=
ISNULL(
	[SELECT SUM(admintax)
	FROM expensetaxofficial
	WHERE expensetaxofficial.idexp = %<expensetaxcorrige.idexp>%
		AND expensetaxofficial.taxcode = %<expensetaxcorrige.taxcode>%
		AND expensetaxofficial.stop IS NULL]{V}
,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN017','1','I','expensetaxcorrige','S','S','S','N','N',{ts '2008-07-01 10:51:01.000'},'NINO','La correzione non può essere inserita in quanto la ritenuta principale ha data di competenza successiva','N','ISNULL(%<expensetaxcorrige.adate>%, %<sys_datacontabile>%) >= 
ISNULL(
	[SELECT MIN(datetaxpay)
	FROM expensetaxview
	WHERE taxcode = %<expensetaxcorrige.taxcode>%
	AND idexp = %<expensetaxcorrige.idexp>%]{D}
,
	ISNULL(
		DATEADD(DAY, -1, %<expensetaxcorrige.adate>%),
		 DATEADD(DAY, -1, %<sys_datacontabile>%)
	)
)
OR
ISNULL(%<expensetaxcorrige.employamount>%,0) = 0
AND
(
%<expensetaxcorrige.idcity>% IS NOT NULL
OR
%<expensetaxcorrige.idfiscaltaxregion>% IS NOT NULL
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM022','1','U','expensetaxcorrige','S','S','S','N','N',{ts '2008-06-13 10:40:54.613'},'NINO','Non può essere modificata la correzione di una ritenuta se non viene scelta la prestazione sulla quale associare la correzione','S','[SELECT idser FROM expenselast WHERE idexp=%<expensetaxcorrige.idexp>%]{C} IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM070','1','U','expensetaxcorrige','S','S','S','N','N',{ts '2008-06-25 14:31:11.017'},'SARA','L''importo c/dip del dettaglio della ritenuta %<tax.description>%  su %<expenseview.phase>%  n° %<expenseview.nmov>% del  %<expenseview.ymov>%  sommato alle sue eventuali correzioni deve coincidere con l''importo del dettaglio più recente associato alla stessa ritenuta nel Riepilogo Storico.','N','ISNULL(
	[SELECT SUM(employtax)
	FROM expensetax
	WHERE expensetax.idexp = %<expensetaxcorrige.idexp>%
		AND expensetax.taxcode = %<expensetaxcorrige.taxcode>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(employamount)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensetaxcorrige.idexp>%
		AND expensetaxcorrige.taxcode = %<expensetaxcorrige.taxcode>%]{V},0)
=
ISNULL(
	[SELECT SUM(employtax)
	FROM expensetaxofficial
	WHERE expensetaxofficial.idexp = %<expensetaxcorrige.idexp>%
		AND expensetaxofficial.taxcode = %<expensetaxcorrige.taxcode>%
		AND expensetaxofficial.stop IS NULL]{V}
,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM070','2','U','expensetaxcorrige','S','S','S','N','N',{ts '2008-06-25 14:30:11.703'},'SARA','L''importo c/amm  del dettaglio della ritenuta %<tax.description>% su %<expenseview.phase>% n° %<expenseview.nmov>% del  %<expenseview.ymov>%  sommato alle sue eventuali correzioni deve coincidere con l''importo del dettaglio più recente associato alla stessa ritenuta nel Riepilogo Storico.','N','ISNULL(
	[SELECT SUM(admintax)
	FROM expensetax
	WHERE expensetax.idexp = %<expensetaxcorrige.idexp>%
		AND expensetax.taxcode = %<expensetaxcorrige.taxcode>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(adminamount)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensetaxcorrige.idexp>%
		AND expensetaxcorrige.taxcode = %<expensetaxcorrige.taxcode>%]{V},0)
=
ISNULL(
	[SELECT SUM(admintax)
	FROM expensetaxofficial
	WHERE expensetaxofficial.idexp = %<expensetaxcorrige.idexp>%
		AND expensetaxofficial.taxcode = %<expensetaxcorrige.taxcode>%
		AND expensetaxofficial.stop IS NULL]{V}
,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN003','1','U','expensetaxcorrige','S','S','S','N','N',{ts '2008-06-23 12:13:58.390'},'NINO','Operazione Impossibile, la liquidazione della ritenuta %<taxcode>% del periodo che comprende la data di registrazione %<expense.adate>% è stata effettuata','S','(%<expensetaxcorrige.ytaxpay>% IS NULL)
OR
(ISNULL(%<expensetaxcorrige.employamount>%,0)
+
ISNULL(%<expensetaxcorrige.adminamount>%,0) < 0)
OR ( 
ISNULL(&<expensetaxcorrige.adate>&,{D ''1900-01-01''})=ISNULL(%<expensetaxcorrige.adate>%,{d ''1900-01-01''})
AND ISNULL(&<expensetaxcorrige.employamount>&,0)=ISNULL(%<expensetaxcorrige.employamount>%,0)
AND ISNULL(&<expensetaxcorrige.adminamount>&,0)=ISNULL(%<expensetaxcorrige.adminamount>%,0) 
AND ISNULL(&<expensetaxcorrige.idcity>&,0)=ISNULL(%<expensetaxcorrige.idcity>%,0)
AND ISNULL(&<expensetaxcorrige.idfiscaltaxregion>&,'''')=ISNULL(%<expensetaxcorrige.idfiscaltaxregion>%,'''')
AND ISNULL(&<expensetaxcorrige.ayear>&,0)=ISNULL(%<expensetaxcorrige.ayear>%,0)
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN003','2','U','expensetaxcorrige','S','S','S','N','N',{ts '2008-06-23 12:14:10.733'},'NINO','Operazione Impossibile, la liquidazione della ritenuta %<taxcode>% del periodo che comprende la data di registrazione %<expense.adate>% è stata effettuata','S','(ISNULL(%<expensetaxcorrige.employamount>%,0)
+
ISNULL(%<expensetaxcorrige.adminamount>%,0) > 0)
OR
(%<expensetaxcorrige.linkedidinc>% IS NULL)
AND
(%<expensetaxcorrige.ytaxpay>% IS NULL)
OR ( 
ISNULL(&<expensetaxcorrige.adate>&,{D ''1900-01-01''})=ISNULL(%<expensetaxcorrige.adate>%,{d ''1900-01-01''})
AND ISNULL(&<expensetaxcorrige.employamount>&,0)=ISNULL(%<expensetaxcorrige.employamount>%,0)
AND ISNULL(&<expensetaxcorrige.adminamount>&,0)=ISNULL(%<expensetaxcorrige.adminamount>%,0) 
AND ISNULL(&<expensetaxcorrige.idcity>&,0)=ISNULL(%<expensetaxcorrige.idcity>%,0)
AND ISNULL(&<expensetaxcorrige.idfiscaltaxregion>&,'''')=ISNULL(%<expensetaxcorrige.idfiscaltaxregion>%,'''')
AND ISNULL(&<expensetaxcorrige.ayear>&,0)=ISNULL(%<expensetaxcorrige.ayear>%,0)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN012','1','U','expensetaxcorrige','S','S','S','N','N',{ts '2008-06-12 15:23:22.097'},'NINO','La correzione della ritenuta %<tax.taxref>%  è stata liquidata fuori del periodo di competenza','N','%<expensetaxcorrige.ytaxpay>% IS NULL
OR
ISNULL(%<expensetaxcorrige.ytaxpay>%,0) = ISNULL(&<expensetaxcorrige.ytaxpay>&,0)
OR
(
%<expensetaxcorrige.adate>% BETWEEN
[SELECT start FROM taxpay
WHERE ytaxpay = %<expensetaxcorrige.ytaxpay>%
AND ntaxpay = %<expensetaxcorrige.ntaxpay>%]{D}
AND
[SELECT stop FROM taxpay
WHERE ytaxpay = %<expensetaxcorrige.ytaxpay>%
AND ntaxpay = %<expensetaxcorrige.ntaxpay>%]{D}
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN015','1','U','expensetaxcorrige','S','S','S','N','N',{ts '2008-06-12 17:50:36.927'},'NINO','La somma delle ritenute è superiore al movimento di entrata collegato','S','%<expensetaxcorrige.linkedidinc>% IS NULL
OR
ISNULL(
	[SELECT -
	SUM(
		ISNULL(expensetax.employtax,0) +
		ISNULL(expensetax.admintax,0)
	)
	FROM expensetax
	WHERE expensetax.idinc = %<expensetaxcorrige.linkedidinc>%]{V}
,0) +
ISNULL(
	[SELECT -
	SUM(
		ISNULL(expensetaxcorrige.employamount,0) +
		ISNULL(expensetaxcorrige.adminamount,0)
	)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.linkedidinc = %<expensetaxcorrige.linkedidinc>%]{V}
,0)
<=
[SELECT curramount
FROM incomeview
WHERE incomeview.idinc = %<expensetaxcorrige.linkedidinc>%]{V}
OR
ISNULL(&<expensetaxcorrige.linkedidinc>&,0) = ISNULL(%<expensetaxcorrige.linkedidinc>%,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN015','2','U','expensetaxcorrige','S','S','S','N','N',{ts '2008-06-12 17:50:40.987'},'NINO','La somma delle ritenute è superiore al movimento di spesa collegato','S','%<expensetaxcorrige.linkedidexp>% IS NULL
OR
ISNULL(
	[SELECT 
	SUM(
		ISNULL(expensetax.employtax,0) +
		ISNULL(expensetax.admintax,0)
	)
	FROM expensetax
	WHERE expensetax.idinc = %<expensetaxcorrige.linkedidexp>%]{V}
,0) +
ISNULL(
	[SELECT 
	SUM(
		ISNULL(expensetaxcorrige.employamount,0) +
		ISNULL(expensetaxcorrige.adminamount,0)
	)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.linkedidinc = %<expensetaxcorrige.linkedidexp>%]{V}
,0)
<=
[SELECT curramount
FROM expenseview
WHERE expenseview.idexp = %<expensetaxcorrige.linkedidexp>%]{V}
OR
ISNULL(&<expensetaxcorrige.linkedidexp>&,0) = ISNULL(%<expensetaxcorrige.linkedidexp>%,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN017','1','U','expensetaxcorrige','S','S','S','N','N',{ts '2008-07-01 11:08:34.500'},'NINO','La correzione non può essere inserita in quanto la ritenuta principale ha data di competenza successiva','N','ISNULL(%<expensetaxcorrige.adate>%, %<sys_datacontabile>%) >= 
ISNULL(
	[SELECT MIN(datetaxpay)
	FROM expensetaxview
	WHERE taxcode = %<expensetaxcorrige.taxcode>%
	AND idexp = %<expensetaxcorrige.idexp>%]{D}
,
	ISNULL(
		DATEADD(DAY, -1, %<expensetaxcorrige.adate>%),
		 DATEADD(DAY, -1, %<sys_datacontabile>%)
	)
)
OR
ISNULL(%<expensetaxcorrige.employamount>%,0) = 0
AND
(
%<expensetaxcorrige.idcity>% IS NOT NULL
OR
%<expensetaxcorrige.idfiscaltaxregion>% IS NOT NULL
)
OR
ISNULL(%<expensetaxcorrige.adate>%, %<sys_datacontabile>%) =
ISNULL(&<expensetaxcorrige.adate>&, %<sys_datacontabile>%)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN019','1','U','expensetaxcorrige','S','S','S','N','N',{ts '2009-03-09 13:33:45.767'},'SA','Impossibile modificare un dettaglio ritenute associato al pagamento %<expenseview.nmov>% / %<expenseview.ymov>% se associato all''F24EP.','S','(
ISNULL(%<expensetaxcorrige.ytaxpay>%,0) <> ISNULL(&<expensetaxcorrige.ytaxpay>&,0)
OR
ISNULL(%<expensetaxcorrige.ntaxpay>%,0) <> ISNULL(&<expensetaxcorrige.ntaxpay>&,0)
)
OR
[
SELECT idunifiedtaxcorrige
FROM    expensetaxcorrige 
WHERE idexp      =  %<expensetaxcorrige.idexp>%
AND idexpensetaxcorrige =  %<expensetaxcorrige.idexpensetaxcorrige>%
]{I} IS NULL


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM070','1','D','expensetaxofficial','S','S','S','N','N',{ts '2008-06-23 16:11:42.467'},'SARA','L''importo c/dip del dettaglio della ritenuta %<tax.description>%  sommato alle sue eventuali correzioni deve coincidere con l''importo del dettaglio più recente associato alla stessa ritenuta nel Riepilogo Storico.','N','ISNULL(
	[SELECT SUM(employtax)
	FROM expensetax
	WHERE expensetax.idexp = %<expensetaxofficial.idexp>%
		AND expensetax.taxcode = %<expensetaxofficial.taxcode>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(employamount)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensetaxofficial.idexp>%
		AND expensetaxcorrige.taxcode = %<expensetaxofficial.taxcode>%]{V},0)
=
ISNULL(
	[SELECT SUM(employtax)
	FROM expensetaxofficial
	WHERE expensetaxofficial.idexp = %<expensetaxofficial.idexp>%
		AND expensetaxofficial.taxcode = %<expensetaxofficial.taxcode>%
		AND expensetaxofficial.stop IS NULL]{V}
,0)
OR
%<expensetaxofficial.stop>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM070','2','D','expensetaxofficial','S','S','S','N','N',{ts '2008-06-23 16:11:52.420'},'SARA','L''importo c/amm del dettaglio della ritenuta %<tax.description>%  sommato alle sue eventuali correzioni deve coincidere con l''importo del dettaglio più recente associato alla stessa ritenuta nel Riepilogo Storico.','N','ISNULL(
	[SELECT SUM(admintax)
	FROM expensetax
	WHERE expensetax.idexp = %<expensetaxofficial.idexp>%
		AND expensetax.taxcode = %<expensetaxofficial.taxcode>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(adminamount)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensetaxofficial.idexp>%
		AND expensetaxcorrige.taxcode = %<expensetaxofficial.taxcode>%]{V},0)
=
ISNULL(
	[SELECT SUM(admintax)
	FROM expensetaxofficial
	WHERE expensetaxofficial.idexp = %<expensetaxofficial.idexp>%
		AND expensetaxofficial.taxcode = %<expensetaxofficial.taxcode>%
		AND expensetaxofficial.stop IS NULL]{V}
,0)
OR
%<expensetaxofficial.stop>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN021','3','D','expensetaxofficial','S','S','S','N','N',{ts '2009-04-30 12:09:58.767'},'SARA','Nel pagamento di un cedolino parasuubordinati, gli importi delle ritenute a carico del percipiente devono coincidere con quelli del relativo contratto.','N','[SELECT COUNT(*) 
 FROM expensepayroll EP
 JOIN expenselink EL
	ON  EL.idparent = EP.idexp
	AND EL.idchild  = %<expensetaxofficial.idexp>%
]{I} = 0
OR
ISNULL(
	[SELECT SUM(employtax) FROM expensetaxofficial
	WHERE idexp = %<expensetaxofficial.idexp>%
	AND taxcode = %<expensetaxofficial.taxcode>%
	AND expensetaxofficial.stop is null]{V}
,0) =
ISNULL(
	[SELECT SUM(employtax) 
	FROM payrolltax PT
	JOIN expensepayroll EP 
		ON EP.idpayroll = PT.idpayroll 
	JOIN expenselink EL
		ON  EL.idparent = EP.idexp
		AND EL.idchild  = %<expensetaxofficial.idexp>%
	WHERE PT.taxcode = %<expensetaxofficial.taxcode>%]{V}
,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN021','4','D','expensetaxofficial','S','S','S','N','N',{ts '2009-04-30 12:32:35.170'},'SARA','Nel pagamento di un cedolino parasubordinati, gli importi delle ritenute a carico dell''amministrazione devono coincidere con quelli del relativo contratto.','N','[SELECT COUNT(*) 
 FROM expensepayroll EP
 JOIN expenselink EL
	ON  EL.idparent = EP.idexp
	AND EL.idchild  = %<expensetaxofficial.idexp>%
]{I} = 0
OR
ISNULL(
	[SELECT SUM(admintax) FROM expensetaxofficial
	WHERE idexp = %<expensetaxofficial.idexp>%
	AND taxcode = %<expensetaxofficial.taxcode>%
	AND expensetaxofficial.stop is null]{V}
,0) =
ISNULL(
	[SELECT SUM(admintax) 
	FROM payrolltax PT
	JOIN expensepayroll EP 
		ON EP.idpayroll = PT.idpayroll 
	JOIN expenselink EL
		ON  EL.idparent = EP.idexp
		AND EL.idchild  = %<expensetaxofficial.idexp>%
	WHERE PT.taxcode = %<expensetaxofficial.taxcode>%]{V}
,0)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM022','1','I','expensetaxofficial','S','S','S','N','N',{ts '2008-06-13 10:41:32.533'},'NINO','Non si può inserire il riepilogo della ritenuta %<tax.description>% se non viene scelta la prestazione su cui calcolare le stesse.','N','[SELECT idser
FROM expenselast
WHERE idexp = %<expensetaxofficial.idexp>%]{I} IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM070','1','I','expensetaxofficial','S','S','S','N','N',{ts '2008-06-23 16:12:03.437'},'SARA','L''importo c/dip del dettaglio della ritenuta %<tax.description>%  sommato alle sue eventuali correzioni deve coincidere con l''importo del dettaglio più recente associato alla stessa ritenuta nel Riepilogo Storico.','N','ISNULL(
	[SELECT SUM(employtax)
	FROM expensetax
	WHERE expensetax.idexp = %<expensetaxofficial.idexp>%
		AND expensetax.taxcode = %<expensetaxofficial.taxcode>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(employamount)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensetaxofficial.idexp>%
		AND expensetaxcorrige.taxcode = %<expensetaxofficial.taxcode>%]{V},0)
=
ISNULL(
	[SELECT SUM(employtax)
	FROM expensetaxofficial
	WHERE expensetaxofficial.idexp = %<expensetaxofficial.idexp>%
		AND expensetaxofficial.taxcode = %<expensetaxofficial.taxcode>%
		AND expensetaxofficial.stop IS NULL]{V}
,0)
OR
%<expensetaxofficial.stop>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM070','2','I','expensetaxofficial','S','S','S','N','N',{ts '2008-06-23 16:12:14.267'},'SARA','L''importo c/amm  del dettaglio della ritenuta %<tax.description>% sommato alle sue eventuali correzioni deve coincidere con l''importo del dettaglio più recente associato alla stessa ritenuta nel Riepilogo Storico.','N','ISNULL(
	[SELECT SUM(admintax)
	FROM expensetax
	WHERE expensetax.idexp = %<expensetaxofficial.idexp>%
		AND expensetax.taxcode = %<expensetaxofficial.taxcode>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(adminamount)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensetaxofficial.idexp>%
		AND expensetaxcorrige.taxcode = %<expensetaxofficial.taxcode>%]{V},0)
=
ISNULL(
	[SELECT SUM(admintax)
	FROM expensetaxofficial
	WHERE expensetaxofficial.idexp = %<expensetaxofficial.idexp>%
		AND expensetaxofficial.taxcode = %<expensetaxofficial.taxcode>%
		AND expensetaxofficial.stop IS NULL]{V}
,0)
OR
%<expensetaxofficial.stop>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN021','3','I','expensetaxofficial','S','S','S','N','N',{ts '2009-04-30 12:12:24.110'},'SARA','Nel pagamento di un cedolino parasuubordinati, gli importi delle ritenute a carico del percipiente devono coincidere con quelli del relativo contratto.','N','[SELECT COUNT(*) 
 FROM expensepayroll EP
 JOIN expenselink EL
	ON  EL.idparent = EP.idexp
	AND EL.idchild  = %<expensetaxofficial.idexp>%
]{I} = 0
OR
ISNULL(
	[SELECT SUM(employtax) FROM expensetaxofficial
	WHERE idexp = %<expensetaxofficial.idexp>%
	AND taxcode = %<expensetaxofficial.taxcode>%
	AND expensetaxofficial.stop is null]{V}
,0) =
ISNULL(
	[SELECT SUM(employtax) 
	FROM payrolltax PT
	JOIN expensepayroll EP 
		ON EP.idpayroll = PT.idpayroll 
	JOIN expenselink EL
		ON  EL.idparent = EP.idexp
		AND EL.idchild  = %<expensetaxofficial.idexp>%
	WHERE PT.taxcode = %<expensetaxofficial.taxcode>%]{V}
,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN021','4','I','expensetaxofficial','S','S','S','N','N',{ts '2009-04-30 12:12:36.233'},'SARA','Nel pagamento di un cedolino parasubordinati, gli importi delle ritenute a carico del percipiente devono coincidere con quelli del relativo contratto.','N','[SELECT COUNT(*) 
 FROM expensepayroll EP
 JOIN expenselink EL
	ON  EL.idparent = EP.idexp
	AND EL.idchild  = %<expensetaxofficial.idexp>%
]{I} = 0
OR
ISNULL(
	[SELECT SUM(admintax) FROM expensetaxofficial
	WHERE idexp = %<expensetaxofficial.idexp>%
	AND taxcode = %<expensetaxofficial.taxcode>%
	AND expensetaxofficial.stop is null]{V}
,0) =
ISNULL(
	[SELECT SUM(admintax) 
	FROM payrolltax PT
	JOIN expensepayroll EP 
		ON EP.idpayroll = PT.idpayroll 
	JOIN expenselink EL
		ON  EL.idparent = EP.idexp
		AND EL.idchild  = %<expensetaxofficial.idexp>%
	WHERE PT.taxcode = %<expensetaxofficial.taxcode>%]{V}
,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM022','1','U','expensetaxofficial','S','S','S','N','N',{ts '2008-06-13 10:41:59.143'},'NINO','Non può essere modificato il riepilogo di una ritenuta se non viene scelta la prestazione sulla quale associare lo stesso','S','[SELECT idser FROM expenselast WHERE idexp=%<expensetaxofficial.idexp>%]{C} IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM070','1','U','expensetaxofficial','S','S','S','N','N',{ts '2008-06-24 15:21:38.407'},'SARA','L''importo c/dip del dettaglio della ritenuta %<tax.description>%  sommato alle sue eventuali correzioni deve coincidere con l''importo del dettaglio più recente associato alla stessa ritenuta nel Riepilogo Storico.','N','ISNULL(
	[SELECT SUM(employtax)
	FROM expensetax
	WHERE expensetax.idexp = %<expensetaxofficial.idexp>%
		AND expensetax.taxcode = %<expensetaxofficial.taxcode>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(employamount)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensetaxofficial.idexp>%
		AND expensetaxcorrige.taxcode = %<expensetaxofficial.taxcode>%]{V},0)
=
ISNULL(
	[SELECT SUM(employtax)
	FROM expensetaxofficial
	WHERE expensetaxofficial.idexp = %<expensetaxofficial.idexp>%
		AND expensetaxofficial.taxcode = %<expensetaxofficial.taxcode>%
		AND expensetaxofficial.stop IS NULL]{V}
,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM070','2','U','expensetaxofficial','S','S','S','N','N',{ts '2008-06-24 15:21:44.280'},'SARA','L''importo c/amm del dettaglio della ritenuta %<tax.description>%   sommato alle sue eventuali correzioni deve coincidere con l''importo del dettaglio più recente associato alla stessa ritenuta nel Riepilogo Storico.','N','ISNULL(
	[SELECT SUM(admintax)
	FROM expensetax
	WHERE expensetax.idexp = %<expensetaxofficial.idexp>%
		AND expensetax.taxcode = %<expensetaxofficial.taxcode>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(adminamount)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensetaxofficial.idexp>%
		AND expensetaxcorrige.taxcode = %<expensetaxofficial.taxcode>%]{V},0)
=
ISNULL(
	[SELECT SUM(admintax)
	FROM expensetaxofficial
	WHERE expensetaxofficial.idexp = %<expensetaxofficial.idexp>%
		AND expensetaxofficial.taxcode = %<expensetaxofficial.taxcode>%
		AND expensetaxofficial.stop IS NULL]{V}
,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN021','3','U','expensetaxofficial','S','S','S','N','N',{ts '2009-04-30 12:28:44.327'},'SARA','Nel pagamento di un cedolino parasuubordinati, gli importi delle ritenute a carico del percipiente devono coincidere con quelli del relativo contratto.','N','[SELECT COUNT(*) 
 FROM expensepayroll EP
 JOIN expenselink EL
	ON  EL.idparent = EP.idexp
	AND EL.idchild  = %<expensetaxofficial.idexp>%
]{I} = 0
OR
ISNULL(
	[SELECT SUM(employtax) FROM expensetaxofficial
	WHERE idexp = %<expensetaxofficial.idexp>%
	AND taxcode = %<expensetaxofficial.taxcode>%
	AND expensetaxofficial.stop is null]{V}
,0) =
ISNULL(
	[SELECT SUM(employtax) 
	FROM payrolltax PT
	JOIN expensepayroll EP 
		ON EP.idpayroll = PT.idpayroll 
	JOIN expenselink EL
		ON  EL.idparent = EP.idexp
		AND EL.idchild  = %<expensetaxofficial.idexp>%
	WHERE PT.taxcode = %<expensetaxofficial.taxcode>%]{V}
,0)
OR
 ISNULL(%<expensetaxofficial.employtax>%,0) =
 ISNULL(&<expensetaxofficial.employtax>&,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN021','4','U','expensetaxofficial','S','S','S','N','N',{ts '2011-01-19 10:14:20.670'},'sara','Nel pagamento di un cedolino parasubordinati, gli importi delle ritenute a carico dell''amministrazione devono coincidere con quelli del relativo contratto.','N','[SELECT COUNT(*) 
 FROM expensepayroll EP
 JOIN expenselink EL
	ON  EL.idparent = EP.idexp
	AND EL.idchild  = %<expensetaxofficial.idexp>%
]{I} = 0
OR
ISNULL(
	[SELECT SUM(admintax) FROM expensetaxofficial
	WHERE idexp = %<expensetaxofficial.idexp>%
	AND taxcode = %<expensetaxofficial.taxcode>%
	AND expensetaxofficial.stop is null]{V}
,0) =
ISNULL(
	[SELECT SUM(admintax) 
	FROM payrolltax PT
	JOIN expensepayroll EP 
		ON EP.idpayroll = PT.idpayroll 
	JOIN expenselink EL
		ON  EL.idparent = EP.idexp
		AND EL.idchild  = %<expensetaxofficial.idexp>%
	WHERE PT.taxcode = %<expensetaxofficial.taxcode>%]{V}
,0)
OR
 ISNULL(%<expensetaxofficial.admintax>%,0) =
 ISNULL(&<expensetaxofficial.admintax>&,0)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BOLLE001','1','D','expensevar','S','S','S','N','N',{ts '2013-07-08 10:03:16.987'},'nino','Con la variazione effettuata, la somma dei movimenti di spesa collegati alla bolletta diventa maggiore dell''importo della bolletta.','N','[select nphase from expense where idexp=%<expensevar.idexp>%]{I}
<> %<sys_maxexpensephase>% 

OR 

[select nbill from expenselast where idexp = %<expensevar.idexp>%]{I} IS NULL

OR

ISNULL([SELECT SUM(curramount)
FROM expensetotal
join expenselast on expensetotal.idexp=expenselast.idexp
where expenselast.idexp = %<expensevar.idexp>%
and ayear = %<sys_esercizio>%
and expenselast.nbill=   [select nbill from expenselast where expenselast.idexp = %<expensevar.idexp>%]{I}

]{V},0)
<= 
ISNULL(
[SELECT ISNULL(total, 0) from bill 
	where  ybill = %<sys_esercizio>% 	
	and 	nbill= [select nbill from expenselast where expenselast.idexp = %<expensevar.idexp>%]{I}
	and 	billkind =''D''
]{V}
,0) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA002','1','D','expensevar','N','S','N','N','N',{ts '2007-09-07 15:19:54.500'},'NINO','La previsione della voce in spesa %<expenseview.codefin>%  e  UPB %<expenseview.codeupb>%  è INSUFFICIENTE!','S','ISNULL(
	[SELECT 
	isnull(currentprev,0)+
	ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	]{V}
,0)
- 
[SELECT ISNULL(totalcompetency, 0) + 
ISNULL(totalarrears, 0) 
from upbexpensetotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and nphase = %<sys_expensefinphase>%]{V} 
+
ISNULL(%<expensevar.amount>%, 0) >= 0
or
[select nphase from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_expensefinphase>%


or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL
or
(%<expensevar.amount>%>0)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA004','1','D','expensevar','N','S','N','N','N',{ts '2013-05-21 10:48:18.280'},'sa','La previsione della voce in spesa  di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>% è INSUFFICIENTE!','S','%<expensevar.idunderwriting>% is null
OR

ISNULL(
	[SELECT 
	isnull(currentprev,0)+
	ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	]{V}
,0)
- 
[SELECT ISNULL(totalcompetency, 0) + 
ISNULL(totalarrears, 0) 
from underwritingexpensetotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V} 
+
ISNULL(%<expensevar.amount>%, 0) >= 0
or
[select nphase from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_expensefinphase>%


or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL
or
(%<expensevar.amount>%>0)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','D','expensevar','S','S','S','N','N',{ts '2007-12-14 13:55:15.793'},'NINO','La variazione al movimento di spesa %<expenseview.phase>% n. %<expenseview.nmov>% / %<expenseview.ymov>% non può essere cancellata. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE003','1','D','expensevar','S','N','S','N','N',{ts '2007-09-07 15:20:02.017'},'NINO','La previsione di competenza della voce in spesa %<expenseview.codefin>% e  UPB  %<expenseview.codeupb>%  è INSUFFICIENTE!','S','ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from upbexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
and nphase = %<sys_expensefinphase>%]{V} 
,0)
+ 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
( [select nphase from expense where idexp=%<expensevar.idexp>%]{I} <>%<sys_expensefinphase>%)
OR 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp =  %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or 
(%<expensevar.amount>%>0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE010','1','D','expensevar','S','N','S','N','N',{ts '2013-05-21 10:55:35.360'},'sa','La previsione di competenza spesa di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>% è INSUFFICIENTE!','S','%<expensevar.idunderwriting>% is null
OR
ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from underwritingexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
and idunderwriting = %<expensevar.idunderwriting>%
and nphase = %<sys_expensefinphase>%]{V} 
,0)
+ 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
( [select nphase from expense where idexp=%<expensevar.idexp>%]{I} <>%<sys_expensefinphase>%)
OR 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp =  %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or 
(%<expensevar.amount>%>0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN005','1','D','expensevar','S','S','S','N','N',{ts '2008-03-21 13:15:30.420'},'SA','Il movimento di spesa non è stato interamente classificato con le classificazioni obbligatorie','N','--post
(
[SELECT COUNT(*) FROM sortingkind T
WHERE T.nphaseexpense = [SELECT nphase FROM expense 
                        WHERE  idexp = %<expensevar.idexp>%]{I}
AND (T.flag&1)<>0
AND %<sys_esercizio>% between ISNULL(T.start,1900) AND ISNULL(T.stop,2099)  
AND
(
	ISNULL(
		(SELECT ISNULL(SUM(I.amount),0)
		FROM expensesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind= T.idsorkind
		AND I.idexp= %<expensevar.idexp>%
		AND I.ayear = %<sys_esercizio>%)
	,0)
	<
	[SELECT curramount FROM expensetotal
	WHERE ayear = %<sys_esercizio>%  
	AND   idexp= %<expensevar.idexp>%]{V}
)
]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI002','1','D','expensevar','S','N','S','S','N',{ts '2007-09-07 15:20:24.093'},'NINO','La dotazione crediti della voce %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	]{V}
,0) 
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from upbexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and nphase = %<sys_expensefinphase>%]{V} 
,0)
+ 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I} <> %<sys_expensefinphase>%)
OR
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% 
and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
(%<expensevar.amount>%>0)
OR
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI007','1','D','expensevar','S','N','S','S','N',{ts '2013-05-21 09:55:12.277'},'sa','La dotazione crediti di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>% è INSUFFICIENTE!','S','%<expensevar.idunderwriting>% is null
OR
ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	]{V}
,0) 
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from underwritingexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V} 
,0)
+ 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I} <> %<sys_expensefinphase>%)
OR
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% 
and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
(%<expensevar.amount>%>0)
OR
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DIPEN004','1','D','expensevar','S','S','S','N','N',{ts '2007-08-28 14:14:55.297'},'NINO','L''importo lordo del contratto dipendente è minore dei movimenti di spesa che lo contabilizzano','N','--post
(
[SELECT ISNULL(AVG(residual),0)
FROM wageadditionresidual
JOIN expensewageaddition 
ON wageadditionresidual.ncon = expensewageaddition.ncon
AND wageadditionresidual.ycon = expensewageaddition.ycon
WHERE expensewageaddition.idexp = %<expensevar.idexp>%]{V}
>=0)
or
(%<expensevar.amount>% = 0)
OR
ISNULL(%<expensevar.autokind>%,0) = 4')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO009','1','D','expensevar','S','N','S','N','N',{ts '2007-09-07 15:20:30.250'},'NINO','La previsione della voce in spesa %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from upbexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
and nphase = %<sys_expensefinphase>%]{V} ,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
 ,0)
+ 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}
<>%<sys_expensefinphase>%)
OR 
[SELECT idfin 
from expenseyear 
where idexp = %<expensevar.idexp>% 
and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov 
from expense 
where idexp =  %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or 
%<expensevar.amount>%>0






')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO010','1','D','expensevar','N','S','N','N','N',{ts '2007-09-07 15:20:34.687'},'NINO','La previsione della voce in spesa %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0)+isnull(totalarrears,0) 
from upbexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
and nphase = %<sys_expensefinphase>%]{V} 
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
 ,0)
+ 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_expensefinphase>%)
OR 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
%<expensevar.amount>%>0






')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO011','2','D','expensevar','S','N','S','S','N',{ts '2007-09-07 15:20:39.377'},'NINO','La dotazione crediti della voce %<expenseview.codefin>% e UPB %<expenseview.codeupb>%  è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0)
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}

	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from upbexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and nphase = %<sys_expensefinphase>%]{V} 
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
 ,0)
- 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I} <> %<sys_expensefinphase>%)
or
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<0
or
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO012','1','D','expensevar','S','S','S','N','S',{ts '2007-09-07 15:23:14.140'},'NINO','La dotazione incassi della voce %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and
		idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	]{V}
,0)
- 
isnull([(SELECT ISNULL(totalcompetency, 0)+ ISNULL(totalarrears, 0)
	from upbexpensetotal 
	where idfin = 
		[(SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%)]{I} 
	and 	idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and nphase = %<sys_maxexpensephase>%
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
 ,0)
)]{V},0) 
+ 
[ISNULL(%<expensevar.amount>%, 0)] >= 0 
or 
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_maxexpensephase>%)
or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%>0
or
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO020','1','D','expensevar','S','N','N','N','N',{ts '2007-08-28 14:20:33.530'},'NINO','La previsione della voce di spesa è inferiore alle righe di mandato','S','ISNULL(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) + ISNULL(totalarrears,0) 
	from upbexpensetotal 
	where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and nphase = %<sys_maxexpensephase>%]{V} ,0)
	-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
	FROM pettycashoperation 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	AND yrestore IS NULL
	AND nrestore IS NULL]{V}
	,0)
+ 
ISNULL(%<expensevar.amount>%, 0) 
 >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<>%<sys_maxexpensephase>%)
OR 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
%<expensevar.amount>%>0
OR
[select assured from upb	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO022','1','D','expensevar','S','S','S','N','N',{ts '2007-09-06 11:17:02.767'},'NINO','L''importo attuale del movimento principale diviene minore dell''importo attuale dei movimenti dipendenti','N','--post
isnull(
[(SELECT ISNULL(available, 0) 
from expensetotal 
where idexp = %<expensevar.idexp>% 
and ayear = %<expensevar.yvar>%)]{V} 
,0)
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = %<expensevar.idexp>%
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(c.curramount)
	FROM pettycashexpense a
	JOIN expense b
	ON b.idexp = a.idexp
	JOIN expensetotal c
	ON b.idexp = c.idexp
	AND a.yoperation = c.ayear
	WHERE b.parentidexp = %<expensevar.idexp>%]{V}
,0)
>= 0 
or 
[(SELECT count(*) from expense where parentidexp = %<expensevar.idexp>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO022','2','D','expensevar','S','S','S','N','N',{ts '2007-09-06 11:23:50.127'},'NINO','L''importo attuale del movimento di spesa principale diviene maggiore dell''importo attuale del movimento della fase precedente','N','--post
[SELECT nphase 
from expense 
where idexp = %<expensevar.idexp>%]{I} = 1
or 
[SELECT ISNULL(expensetotal.available, 0) 
from expensetotal 
join expense 
on expensetotal.idexp = expense.parentidexp 
and expensetotal.ayear = %<sys_esercizio>% 
where expense.idexp = %<expensevar.idexp>%]{V}
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = 
		[SELECT parentidexp
		FROM expense
		WHERE idexp = %<expensevar.idexp>%]{C}
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(c.curramount)
	FROM pettycashexpense a
	JOIN expense b
	ON b.idexp = a.idexp
	JOIN expensetotal c
	ON b.idexp = c.idexp
	AND a.yoperation = c.ayear
	WHERE b.parentidexp = 
		[SELECT parentidexp
		FROM expense
		WHERE idexp = %<expensevar.idexp>%]{C}
	]{V}
,0)
>= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO023','1','D','expensevar','S','S','S','N','N',{ts '2007-09-07 15:23:35.093'},'NINO','Non può essere cancellato l''importo di una variazione di spesa sul movimento %<expenseview.phase>%  %<expenseview.nmov>% del  %<expenseview.ymov>% in quanto la disponibilità negli anni successivi diventa negativa','S','([SELECT COUNT(*)
FROM expensetotal
WHERE idexp = %<expensevar.idexp>%
AND ayear > %<sys_esercizio>%]{I} = 0)
OR
([SELECT ISNULL(MIN(available),0)
FROM expensetotal
WHERE idexp = %<expensevar.idexp>%
AND ayear > %<sys_esercizio>%]{V}
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = %<expensevar.idexp>%
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(c.curramount)
	FROM pettycashexpense a
	JOIN expense b
	ON b.idexp = a.idexp
	JOIN expensetotal c
	ON b.idexp = c.idexp
	AND a.yoperation = c.ayear
	WHERE b.parentidexp = %<expensevar.idexp>%]{V}
,0)
-
%<expensevar.amount>%
>= 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO023','2','D','expensevar','S','S','S','N','N',{ts '2007-09-06 11:26:42.420'},'NINO','Non può essere cancellata la variazione di spesa sul movimento considerato %<expenseview.phase>%  %<expenseview.nmov>% del  %<expenseview.ymov>% in quanto la disponibilità del movimento della fase precedente negli anni successivi diventa negativa','N','[SELECT parentidexp
	FROM expense
	WHERE idexp = %<expensevar.idexp>%]{I} IS NULL

OR

([SELECT COUNT(*)
FROM expensetotal
WHERE idexp = 
	[SELECT parentidexp
	FROM expense
	WHERE idexp = %<expensevar.idexp>%]{I}
AND ayear > %<sys_esercizio>%]{I} = 0)

OR
([SELECT ISNULL(min(expensetotal.available), 0) 
from expensetotal 
join expense 
on expensetotal.idexp = expense.parentidexp 
and expensetotal.ayear > %<sys_esercizio>% 
where expense.idexp = %<expensevar.idexp>%]{V}
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = 
		[SELECT parentidexp
		FROM expense
		WHERE idexp = %<expensevar.idexp>%]{C}
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(c.curramount)
	FROM pettycashexpense a
	JOIN expense b
	ON b.idexp = a.idexp
	JOIN expensetotal c
	ON b.idexp = c.idexp
	AND a.yoperation = c.ayear
	WHERE b.parentidexp = 
		[SELECT parentidexp
		FROM expense
		WHERE idexp = %<expensevar.idexp>%]{C}
	]{V}
,0)
>= 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO034','2','D','expensevar','S','N','S','S','N',{ts '2013-06-19 12:32:21.590'},'assistenza','La dotazione crediti di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>%  è INSUFFICIENTE!','S','%<expensevar.idunderwriting>% is null
OR

ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0)
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from underwritingexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V} 
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and PO.idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and POU.idunderwriting = %<expensevar.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
 ,0)

- 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I} <> %<sys_expensefinphase>%)
or
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<0
or
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO035','2','D','expensevar','S','S','S','N','S',{ts '2013-05-21 10:38:01.857'},'sa','La dotazione incassi di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>%  è INSUFFICIENTE!','S','%<expensevar.idunderwriting>% is null
OR
ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0)  +ISNULL(totalarrears,0) 
from underwritingexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%]{V} 
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and PO.idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and POU.idunderwriting = %<expensevar.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
 ,0)

+ 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I} <> %<sys_maxexpensephase>%)
or
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%>0
or
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO036','1','D','expensevar','S','N','S','N','N',{ts '2013-05-21 10:57:12.790'},'sa','La previsione della voce in spesa di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>%  è INSUFFICIENTE!','S','%<expensevar.idunderwriting>% is null
OR

ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>% 
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from underwritingexpensetotal 
where idfin = [SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 	and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>% 
and nphase = %<sys_expensefinphase>%]{V} ,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and PO.idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and POU.idunderwriting = %<expensevar.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
 ,0)
+ 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}
<>%<sys_expensefinphase>%)
OR 
[SELECT idfin 
from expenseyear 
where idexp = %<expensevar.idexp>% 
and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov 
from expense 
where idexp =  %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or 
%<expensevar.amount>%>0






')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO037','1','D','expensevar','N','S','N','N','N',{ts '2013-05-21 10:58:58.663'},'sa','La previsione della voce in spesa di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>%  è INSUFFICIENTE!','S','
%<expensevar.idunderwriting>% is null
OR
ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>% 
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0)+isnull(totalarrears,0) 
from underwritingexpensetotal 
where idfin = [SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 	and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>% 
and nphase = %<sys_expensefinphase>%]{V} 
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and PO.idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and POU.idunderwriting = %<expensevar.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
 ,0)
+ 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_expensefinphase>%)
OR 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
%<expensevar.amount>%>0






')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO038','1','D','expensevar','S','N','N','N','N',{ts '2013-05-21 10:59:18.210'},'sa','La previsione della voce di spesa Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>% è inferiore alle righe di mandato ','S','
%<expensevar.idunderwriting>% is null
OR
ISNULL(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>% 
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) + ISNULL(totalarrears,0) 
	from underwritingexpensetotal 
	where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>% 
	and nphase = %<sys_maxexpensephase>%]{V} ,0)
	-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and PO.idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and POU.idunderwriting = %<expensevar.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
	,0)
+ 
ISNULL(%<expensevar.amount>%, 0) 
 >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<>%<sys_maxexpensephase>%)
OR 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
%<expensevar.amount>%>0
OR
[select assured from upb	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS002','1','D','expensevar','S','S','S','N','S',{ts '2007-09-07 15:23:43.203'},'NINO','La dotazione incassi della voce %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','S','(
ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	AND
		idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	]{V}
,0)
- 
isnull([(SELECT ISNULL(totalcompetency, 0)+ ISNULL(totalarrears, 0)
	from upbexpensetotal 
	where idfin = 
		[(SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%)]{I} 
	and 	idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and nphase = %<sys_maxexpensephase>%
)]{V},0) 
+ 
[ISNULL(%<expensevar.amount>%, 0)] >= 0
)
OR
([select nphase from expense where idexp=%<expensevar.idexp>%]{I} <> %<sys_maxexpensephase>%)
or
([SELECT idfin 	from expenseyear 	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I} IS NULL 
)
or
(
	[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
)
or
(%<expensevar.amount>%>0)
OR
(
[SELECT assured FROM upb
WHERE idupb =
	[SELECT idupb 
	FROM expenseyear 
	WHERE idexp = %<expensevar.idexp>% 
	AND ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM003','1','D','expensevar','S','S','S','N','N',{ts '2007-09-07 15:18:49.420'},'NINO','L''importo attuale del movimento  %<expenseview.phase>%  %<expenseview.nmov>% del  %<expenseview.ymov>%  è minore dell''importo attuale dei movimenti dipendenti','N','--post
[(SELECT ISNULL(available, 0) 
from expensetotal 
where idexp = %<expensevar.idexp>% 
and ayear = %<expensevar.yvar>%)]{V} 
 >= 0 
or 
[(SELECT count(*) from expense where parentidexp = %<expensevar.idexp>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM003','2','D','expensevar','S','S','S','N','N',{ts '2007-09-07 15:18:58.000'},'NINO','L''importo attuale dei movimenti di spesa della fase %<expenseview.phase>% è maggiore dell''importo attuale del movimento della fase precedente','N','--post
[(SELECT nphase from expense where idexp = %<expensevar.idexp>%)]{I} = 1 
or 
[(SELECT ISNULL(expensetotal.available, 0) 
from expensetotal 
join expense 
on expensetotal.idexp = expense.parentidexp 
and expensetotal.ayear = %<sys_esercizio>% 
where expense.idexp = %<expensevar.idexp>%)]{V} 
>= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM007','1','D','expensevar','S','S','S','N','N',{ts '2011-09-15 12:23:15.767'},'sara','La variazione relativa al movimento finanziario di spesa %<expenseview.ymov>% %<expenseview.nmov>% non può essere annullata in quanto il movimento è già incluso nel mandato di pagamento %<expenseview.ypay>% %<expenseview.npay>% .','S','ISNULL([SELECT payment.kpaymenttransmission 
from expense 
join expenselast 
	on expense.idexp=expenselast.idexp
join payment 
	on payment.kpay = expenselast.kpay 
where expense.idexp = %<expensevar.idexp>%
]{I},0)=0
or
isnull([SELECT kpay 
from expenselast 
where idexp = %<expensevar.idexp>%]{I},0)=0
or 
(%<expensevar.autokind>% in (10,11,12,22))
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'')= ''S'')
AND
-- esiste una variazione speciale di modifica dati non ancora trasmessa
[(SELECT count(*)  from expensevar  
WHERE idexp = %<expensevar.idexp>%
AND nvar <> %<expensevar.nvar>%
AND kpaymenttransmission is null
AND autokind = 22)]{I} <> 0
AND
-- unicredit non permette le variazioni di dati contabili ma solo del Siope
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM expenselast
JOIN payment 
	ON payment.kpay = expenselast.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},'''' )<> ''02008''
)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM016','1','D','expensevar','S','S','S','N','N',{ts '2007-11-27 10:21:57.547'},'SARA','Le classificazioni associate al movimento di spesa variato sono superiori rispetto all''importo dello stesso','N','--post
[SELECT curramount FROM expensetotal
WHERE idexp= %<expensevar.idexp>% 
AND ayear= %<expensevar.yvar>%]{V}
>=
[ISNULL(
	(SELECT TOP 1 SUM(I.amount)
	FROM expensesorted I
	JOIN sorting S
		ON I.idsor = S.idsor
	WHERE I.idexp = %<expensevar.idexp>%
	AND I.ayear = %<sys_esercizio>%
	GROUP BY S.idsorkind,I.idexp  
	ORDER BY SUM(I.amount) desc)
,0)]{V}


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM020','1','D','expensevar','S','S','S','N','N',{ts '2007-12-13 13:52:15.067'},'SARA','Non può essere cancellato l''importo di una variazione di spesa sul movimento %<expenseview.nmov>% del %<expenseview.ymov>% in quanto la disponibilità negli anni successivi diventa negativa','S','(
	[SELECT COUNT(*)	FROM expensetotal	WHERE idexp = %<expensevar.idexp>%
	AND ayear > %<sys_esercizio>%]{I} = 0
)
OR
(
	(
		[SELECT ISNULL(MIN(available),0)
		FROM expensetotal
		WHERE idexp = %<expensevar.idexp>%
		AND ayear > %<sys_esercizio>%]{V}
		-
		%<expensevar.amount>%
	)
	>= 0
)
OR
(
	ISNULL(
		[SELECT MAX(ayear) FROM accountingyear WHERE ((flag&0x0F)>= 5)]{I}
	,%<sys_esercizio>%-1) < %<sys_esercizio>%
)
OR
%<expensevar.amount>%<0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM020','2','D','expensevar','S','S','S','N','N',{ts '2007-12-13 13:52:04.433'},'SARA','Non può essere cancellata la variazione di spesa sul movimento  in quanto la disponibilità del movimento della fase precedente negli anni successivi diventa negativa','N','(
	[SELECT COUNT(*)
	FROM expensetotal
	WHERE idexp = [select parentidexp from expense where idexp= %<expensevar.idexp>%]{I}
	AND ayear > %<sys_esercizio>%]{I} = 0
)
OR
(
	(
		[SELECT ISNULL(MIN(available),0)
		FROM expensetotal
		WHERE idexp = [select parentidexp from expense where idexp= %<expensevar.idexp>%]{I}
		AND ayear > %<sys_esercizio>%]{V}
	)
	>= 0
)
OR
(
	ISNULL(
		[SELECT MAX(ayear) FROM accountingyear WHERE ((flag&0x0F)>= 5)]{I}
	,%<sys_esercizio>%-1) < %<sys_esercizio>%
)
OR
%<expensevar.amount>%>0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM021','1','D','expensevar','S','S','S','N','N',{ts '2007-08-28 16:54:38.670'},'NINO','FONDO DI CASSA INIZIALE + totale delle reversali trasmesse in banca deve essere maggiore od uguale al totale dei pagamenti (anche non inclusi in un mandato)','N','--post
[SELECT ISNULL(currentfloatfund,0) FROM currentcashtotal WHERE ayear = %<sys_esercizio>%]{V} >= 0
OR
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_maxexpensephase>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM025','1','D','expensevar','S','S','S','N','N',{ts '2011-09-15 16:28:49.063'},'sara','Non può essere cancellata una variazione sul movimento di spesa %<expenseview.nmov>% /%<expenseview.ymov>% in quanto è inserito in un mandato di pagamento','N','--post
ISNULL([SELECT kpay FROM expenselast 
WHERE idexp = %<expensevar.idexp>%
]{I},0) = 0

OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'')= ''S'')
AND
-- esiste una variazione speciale di modifica dati non ancora trasmessa
[(SELECT count(*)  from expensevar  
WHERE idexp = %<expensevar.idexp>%
AND nvar <> %<expensevar.nvar>%
AND kpaymenttransmission is null
AND autokind = 22)]{I} <> 0
AND
-- unicredit non permette le variazioni di dati contabili ma solo del Siope
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM expenselast
JOIN payment 
	ON payment.kpay = expenselast.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},'''' )<> ''02008''
)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM026','1','D','expensevar','S','N','S','N','N',{ts '2007-09-06 12:13:01.843'},'NINO','Non è possibile cancellare una variazione NEGATIVA dal movimento di spesa n. %<expenseview.nmov>% / %<expenseview.ymov>%  perchè è un residuo','S','[SELECT flag & 1 from expensetotal
where %<expensevar.idexp>% = expensetotal.idexp 
and expensetotal.ayear=%<sys_esercizio>%]{I} = 0
or
[SELECT ymov from expense where expense.idexp = %<expensevar.idexp>%]{I} = %<sys_esercizio>%
or
%<expensevar.amount>% >= 0
or
%<expensevar.yvar>%=%<sys_esercizio>%
or

([select nphase from expense where idexp=%<expensevar.idexp>%]{I} <> 
 [SELECT appropriationphasecode FROM config where ayear =  %<sys_esercizio>%]{I}  ) 






')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM031','1','D','expensevar','S','S','S','N','N',{ts '2013-06-11 16:54:42.903'},'assistenza','La  variazione di spesa cancellata rende l''importo attuale del movimento %<expenseview.nmov>% / %<expenseview.ymov>% negativo o minore della somma degli importi delle ritenute c/dipendente','N','--post
ISNULL(
[SELECT ISNULL(curramount,0) FROM expensetotal
WHERE idexp = %<expensevar.idexp>%
AND ayear = %<sys_esercizio>%]{V}
,0)
>= 0
AND
(
(
ISNULL(
[SELECT ISNULL(curramount,0) FROM expensetotal
WHERE idexp = %<expensevar.idexp>%
AND ayear = %<sys_esercizio>%]{V}
,0)
>=
(
ISNULL(
[SELECT SUM(employtax) 
FROM expensetax
WHERE idexp = %<expensevar.idexp>% ]{V}
,0)
+
ISNULL(
	[SELECT SUM(expensetaxcorrige.employamount)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensevar.idexp>%]{V}
,0)
)

)
OR
([SELECT nphase FROM expense WHERE idexp = %<expensevar.idexp>%]{I} <> %<sys_maxexpensephase>%)
)
OR
(
[SELECT COUNT(*)
FROM expensepayroll
JOIN expenselink
	ON expenselink.idparent = expensepayroll.idexp
WHERE expenselink.idchild = %<expensevar.idexp>%]{I} > 0
AND
[SELECT nphase FROM expense
WHERE idexp = %<expensevar.idexp>%]{I} = %<sys_maxexpensephase>%
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM038','1','D','expensevar','S','S','S','S','N',{ts '2007-08-30 16:44:37.140'},'NINO','Il totale dell''accertato è inferiore al totale dell''impegnato per l''UPB scelto','S','[SELECT assured FROM upb
WHERE idupb = 
	[SELECT idupb FROM expenseyear
	WHERE idexp = %<expensevar.idexp>%
	AND ayear = %<expensevar.yvar>%]{C}
]{C} <> ''S''
OR
[SELECT nphase FROM expense WHERE idexp = %<expensevar.idexp>%]{I}
<> 
%<sys_appropriationphase>%
OR
ISNULL(
	[SELECT SUM(amount) FROM incomeyear
       join income on incomeyear.idinc=income.idinc
       join incometotal on  
          incomeyear.idinc=incometotal.idinc AND
	    incomeyear.ayear=incometotal.ayear
	WHERE idupb = 
		[SELECT idupb FROM expenseyear
		WHERE idexp = %<expensevar.idexp>%
		AND ayear = %<expensevar.yvar>%]{C}
	AND income.nphase = %<sys_assessmentphase>%
	AND (incometotal.flag & 1)=0]{V}
,0)
+
ISNULL(
	[SELECT SUM(incomevar.amount)
	FROM incomevar
	JOIN incomeyear
		ON incomevar.idinc = incomeyear.idinc
		AND incomeyear.ayear= %<expensevar.yvar>%
       join income on incomeyear.idinc=income.idinc
	WHERE incomevar.yvar <= %<sys_esercizio>%
	AND income.nphase = %<sys_assessmentphase>%
	AND incomeyear.idupb = 
		[SELECT idupb FROM expenseyear
		WHERE idexp = %<expensevar.idexp>%
		AND ayear = %<expensevar.yvar>%]{C}
]{V}
,0)
+
ISNULL(
	[SELECT ISNULL(previousassessment,0) - ISNULL(previousappropriation,0)
	FROM upb WHERE idupb = 
		[SELECT idupb FROM expenseyear
		WHERE idexp = %<expensevar.idexp>%
		AND ayear = %<expensevar.yvar>%]{C}
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(creditvariation)
	FROM upbtotal
	WHERE idupb = 
		[SELECT idupb FROM expenseyear
		WHERE idexp = %<expensevar.idexp>%
		AND ayear = %<expensevar.yvar>%]{C}
	]{V}
,0)
>=
ISNULL([SELECT SUM(amount)
FROM expenseyear
join expensetotal on  
          expensetotal.idexp=expenseyear.idexp AND
	    expensetotal.ayear=expenseyear.ayear
 join expense on expenseyear.idexp=expense.idexp


WHERE idupb =
 		[SELECT idupb FROM expenseyear
		WHERE idexp = %<expensevar.idexp>%
		AND ayear = %<expensevar.yvar>%]{C}
AND expense.nphase = %<sys_appropriationphase>%
AND (expensetotal.flag & 1)=0
]{V},0)
+
ISNULL([SELECT SUM(expensevar.amount) FROM expensevar
JOIN expenseyear
	ON expensevar.idexp = expenseyear.idexp
	AND expenseyear.ayear= %<expensevar.yvar>%
 join expense on expenseyear.idexp=expense.idexp
WHERE expensevar.yvar <= %<sys_esercizio>%
AND expense.nphase = %<sys_appropriationphase>%
AND expenseyear.idupb = 
	[SELECT idupb FROM expenseyear
	WHERE idexp = %<expensevar.idexp>%
	AND ayear = %<expensevar.yvar>%]{C}
]{V}
,0)

- %<expensevar.amount>%
OR %<expensevar.amount>% >= 0
	
	
	
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM047','1','D','expensevar','S','S','S','N','N',{ts '2007-09-06 12:21:40.203'},'NINO','Non può essere cancellata una variazione al mov. di spesa %<expenseview.nmov>% del %<expenseview.ymov>% in quanto tale mov. contabilizza un cedolino ed è stato portato a pagamento','S','[SELECT COUNT(*) FROM expensepayroll 
 join expenselink on expenselink.idparent=expensepayroll.idexp
WHERE expenselink.idchild= %<expensevar.idexp>%]{I} = 0

OR

[SELECT COUNT(*) FROM expenselast
     join expenselink on expenselast.idexp=expenselink.idchild
WHERE expenselink.idparent= %<expensevar.idexp>% ]{I} = 0

OR

 %<expensevar.autokind>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM047','2','D','expensevar','S','S','S','N','N',{ts '2007-09-06 13:14:12.750'},'NINO','Non può essere cancellata una variazione al mov. di spesa %<expenseview.phase>%  %<expenseview.nmov>% del %<expenseview.nmov>% in quanto tale mov. contabilizza una prestazione occasionale ed è stato portato a pagamento','S','
[SELECT COUNT(*) FROM expensecasualcontract
 join expenselink on expenselink.idparent=expensecasualcontract.idexp
WHERE expenselink.idchild= %<expensevar.idexp>%]{I} = 0

OR

[SELECT COUNT(*) FROM expenselast
     join expenselink on expenselast.idexp=expenselink.idchild
WHERE expenselink.idparent= %<expensevar.idexp>% ]{I} = 0

OR

 %<expensevar.autokind>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM047','3','D','expensevar','S','S','S','N','N',{ts '2007-12-12 11:28:31.593'},'PINO','Non può essere cancellata una variazione al mov. di spesa %<expenseview.nmov>% del %<expenseview.ymov>% in quanto tale mov. contabilizza una prestazione professionale ed è stato portato a pagamento','S','[SELECT COUNT(*) FROM expenseprofservice
 join expenselink on expenselink.idparent=expenseprofservice.idexp
WHERE expenselink.idchild= %<expensevar.idexp>%
AND movkind IN (1,3)]{I} = 0
OR

[SELECT COUNT(*) FROM expenselast
     join expenselink on expenselast.idexp=expenselink.idchild
WHERE expenselink.idparent= %<expensevar.idexp>% ]{I} = 0

OR

 %<expensevar.autokind>% IS NOT NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM047','4','D','expensevar','S','S','S','N','N',{ts '2007-09-06 13:21:16.233'},'NINO','Non può essere cancellata una variazione al mov. di spesa %<expenseview.ymov>% / %<expenseview.nmov>% in quanto tale mov. contabilizza una prestazione dipendente ed è stato portato a pagamento','S','
[SELECT COUNT(*) FROM expensewageaddition
 join expenselink on expenselink.idparent=expensewageaddition.idexp
WHERE expenselink.idchild= %<expensevar.idexp>%
]{I} = 0
OR

[SELECT COUNT(*) FROM expenselast
     join expenselink on expenselast.idexp=expenselink.idchild
WHERE expenselink.idparent= %<expensevar.idexp>% ]{I} = 0

OR

 %<expensevar.autokind>% IS NOT NULL
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM047','5','D','expensevar','S','S','S','N','N',{ts '2007-12-04 14:31:14.203'},'pino','Non può essere cancellata una variazione al mov. di spesa %<expenseview.ymov>% / %<expenseview.nmov>% in quanto tale mov. contabilizza una missione ed è stato portato a pagamento','S','
[SELECT COUNT(*) FROM expenseitineration
 join expenselink on expenselink.idparent=expenseitineration.idexp
WHERE expenselink.idchild= %<expensevar.idexp>%
AND movkind = 4
]{I} = 0
OR

[SELECT COUNT(*) FROM expenselast
     join expenselink on expenselast.idexp=expenselink.idchild
WHERE expenselink.idparent= %<expensevar.idexp>% ]{I} = 0

OR

 %<expensevar.autokind>% IS NOT NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM066','1','D','expensevar','S','S','S','N','N',{ts '2013-03-22 14:35:03.400'},'sa','Deve essere ricalcolata la situazione finanziaria effettiva nell''esercizio precedente poiché non risulta allineata con i movimenti finanziari effettivamente inseriti','S','(
[SELECT nphase FROM expense 
 WHERE  expense.idexp = %<expensevar.idexp>%]{I}
< %<sys_maxexpensephase>%)
OR
([(SELECT COUNT(*) 
  FROM currentcashtotal 
  WHERE ayear = (%<sys_esercizio>% - 1))]{I} = 0)
OR
([SELECT  ISNULL(startfloatfund,0)  
   FROM surplus WHERE ayear = %<sys_esercizio>% ]{V}
= 
[SELECT ISNULL(currentfloatfund,0) 
   FROM currentcashtotal 
  WHERE ayear = (%<sys_esercizio>% - 1)]{V}
)
OR
(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = (%<sys_esercizio>%-1)]{I}
,0) & 0x0F)<4
OR
(ISNULL(
	[select locked from surplus where ayear = (%<sys_esercizio>% - 1)]{C},
	''N'') = ''S''
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','1','D','expensevar','S','S','S','N','N',{ts '2011-07-28 10:24:36.140'},'sara','Nella gestione dell''ordinativo informatico non è possibile cancellare variazioni di annullo e variazioni dati già trasmesse, bisogna prima rimuoverle dall''elenco.','S','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'' )= ''N'')
)
OR
-- 2) le variazioni sono di tipo normale
ISNULL(%<expensevar.autokind>%,0) NOT IN (10,11,22)
OR
-- 3) la fase della variazione è inferiore alla fase massima
[SELECT nphase FROM expense
 WHERE expense.idexp = %<expensevar.idexp>%
]{I} < %<sys_maxexpensephase>%
OR
-- 4) le variazioni non sono state trasmesse
%<expensevar.kpaymenttransmission>% IS NULL





 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','2','D','expensevar','S','S','S','N','N',{ts '2011-09-15 10:22:44.843'},'sara','Nella gestione dell''ordinativo informatico non è possibile cancellare variazioni dati non trasmesse, perchè il mandato potrebbe essere stato già modificato','S','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'' )= ''N'')
)
OR
-- 2) le variazioni non sono di tipo modifica dati
ISNULL(%<expensevar.autokind>%,0) <>22
OR
-- 3) la fase della variazione è inferiore alla fase massima
[SELECT nphase FROM expense
 WHERE expense.idexp = %<expensevar.idexp>%
]{I} < %<sys_maxexpensephase>%
OR
-- 4) le variazioni non sono state trasmesse
([SELECT payment.kpaymenttransmission 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C}
) IS NULL




 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM107','1','D','expensevar','S','S','S','N','N',{ts '2012-11-15 11:33:40.453'},'sa','Saldo iniziale + Tot. reversali emesse + Girofondi in entrata deve essere maggiore od uguale al Tot. pagamenti emessi + Girofondi in uscita.','N','([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_maxexpensephase>%)
OR
ISNULL([SELECT currentfloatfund 
FROM treasurercashtotal 
WHERE ayear = %<sys_esercizio>%
and idtreasurer =isnull([select idtreasurer from payment
			join expenselast 
				on payment.kpay= expenselast.kpay 
			where expenselast.idexp = %<expensevar.idexp>%]{I},0)
]{V},0) >= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM109','1','D','expensevar','S','S','S','N','N',{ts '2013-02-07 13:05:24.997'},'sa','Il movimento di spesa non è stato interamente attribuito al/ai Fnanziamento/i.','N','[(SELECT nphase 
FROM expense 
WHERE idexp = %<expensevar.idexp>%)]{I}
 <> %<sys_expensefinphase>%
OR
ISNULL(
		[SELECT SUM(amount)
		FROM underwritingappropriation 
		WHERE idexp= %<expensevar.idexp>%]{V}
	,0)
+
ISNULL (   [select SUM(amount) from expensevar where
		idexp=%<expensevar.idexp>%
		and
		idunderwriting is not null
                 ]{V},0)
	=
	ISNULL([SELECT curramount FROM expensetotal
	WHERE ayear = %<sys_esercizio>%  
	AND   idexp= %<expensevar.idexp>%]{V},0)
OR 
[SELECT assured 
FROM upb  
WHERE idupb = ([select idupb 
		from expenseyear
		where 	ayear = %<sys_esercizio>%
		and idexp=%<expensevar.idexp>%]{C})]{C} =''S'' ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS003','1','D','expensevar','S','S','S','N','N',{ts '2007-08-28 15:39:44.217'},'NINO','L''importo lordo del contratto occasionale è minore dei movimenti di spesa che lo contabilizzano','N','--post
(
[SELECT ISNULL(AVG(residual),0)
FROM casualcontractresidual
JOIN expensecasualcontract 
ON casualcontractresidual.ncon = expensecasualcontract.ncon
AND casualcontractresidual.ycon = expensecasualcontract.ycon
WHERE expensecasualcontract.idexp = %<expensevar.idexp>%]{V}
>=0)
or
(%<expensevar.amount>% = 0)
OR
ISNULL(%<expensevar.autokind>%,0) = 4')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN001','1','D','expensevar','S','S','S','N','N',{ts '2007-03-21 11:28:42.890'},'''NINO''','L''importo del movimento di spesa  è diverso dalla somma dei dettagli del contratto passivo associati','N','--post
(
[SELECT COUNT(*) 
FROM  expensemandateview 
WHERE expensemandateview.idexp = %<expensevar.idexp>%
AND   ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)
AND   ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0
)
OR
&<expensevar.amount>& = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS013','1','D','expensevar','S','S','S','N','N',{ts '2007-09-01 11:38:34.750'},'NINO','L''importo del movimento di spesa deve essere identico a quello dell''impegno che contabilizza il cedolino','N','(
[SELECT COUNT(*)
FROM expensepayroll
join expenselink on expenselink.idparent=expensepayroll.idexp
WHERE expenselink.idparent =%<expensevar.idexp>%
]{I} = 0
)
OR
(
[select amount from expenseyear EY 
	JOIN expense E on E.idexp=EY.idexp
			 AND E.ymov=EY.ayear
    where
     EY.idexp=  %<expensevar.idexp>% 
]{V}
+
ISNULL(
[SELECT SUM(amount) FROM expensevar
WHERE  idexp = %<expensevar.idexp>%
	AND ISNULL(autokind,0) <> 4
]{V},0)

 =
[SELECT EY.amount FROM expenseyear EY
   JOIN expense E on E.idexp=EY.idexp and
			   E.ymov=EY.ayear
   JOIN expenselink EL ON EY.idexp=EL.idparent
      
WHERE  EL.nlevel=%<sys_itinerationphase>%
	and EL.idchild = %<expensevar.idexp>%
]{V}
+
ISNULL(
[SELECT SUM(EV.amount) FROM expensevar EV
   JOIN expenselink EL ON EV.idexp=EL.idparent      
WHERE  EL.nlevel=%<sys_itinerationphase>%
	and EL.idchild = %<expensevar.idexp>%
	AND ISNULL(EV.autokind,0) <> 4
]{V}
,0)
)

OR
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}  < %<sys_itinerationphase>%)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE002','1','D','expensevar','S','S','S','N','N',{ts '2007-08-28 15:53:36.157'},'NINO','L''importo lordo del contratto professionale è minore dei movimenti di spesa che lo contabilizzano','N','--post
(
[SELECT ISNULL(AVG(residual),0)
FROM profserviceresidual
JOIN expenseprofservice 
ON profserviceresidual.ncon = expenseprofservice.ncon
AND profserviceresidual.ycon = expenseprofservice.ycon
WHERE expenseprofservice.idexp = %<expensevar.idexp>%]{V}
>=0)
or
(%<expensevar.amount>% = 0)
OR
ISNULL(%<expensevar.autokind>%,0) = 4')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN004','1','D','expensevar','S','S','S','N','N',{ts '2007-10-26 17:04:04.360'},'SARA','L''importo di un movimento di spesa che annulla delle ritenute deve essere nullo oppure uguale alla somma delle ritenute, cambiata di segno.','N','--post
(  [SELECT curramount from expensetotal where ayear= %<sys_esercizio>% and idexp=%<expensevar.idexp>%]{V} = 0 )
OR
( 
  ISNULL([SELECT SUM(employtax) from expensetax where idexp=%<expensevar.idexp>% ]{I},0) >= 0

)

OR 
(
 isnull([SELECT amount from expenseyear where idexp=%<expensevar.idexp>% and ayear=%<sys_esercizio>%]{V},0) 
	+
 isnull([SELECT amount from expensevar where idexp=%<expensevar.idexp>% and autokind is null]{V},0) 
	= -
  ISNULL([SELECT SUM(employtax)from expensetax where idexp=%<expensevar.idexp>% ]{V},0)
)

OR
(
 [SELECT COUNT(*) FROM expensepayroll 
JOIN expenselink 
 ON expensepayroll.idexp=expenselink.idparent
WHERE expenselink.idchild= %<expensevar.idexp>% ]{I}<>0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON004','1','D','expensevar','S','N','N','N','N',{ts '2007-09-07 15:24:27.563'},'NINO','La previsione di cassa della voce di spesa %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','N','(
	(
		ISNULL(
			[SELECT
			ISNULL(currentsecondaryprev,0)+
			ISNULL(secondaryvariation, 0)
			FROM upbtotal 
			WHERE idfin = 
				[SELECT idfin FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{C}
			and
				idupb = 
				[SELECT idupb FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{C}

			]{V}
		,0)
		- 
		ISNULL(
			[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
			FROM upbexpensetotal
			WHERE idfin = 
				[SELECT idfin FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{C}
			and
				idupb = 
				[SELECT idupb FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{C}

			AND nphase = %<sys_maxexpensephase>%]{V}
		,0)
	) >= 0
)
OR
[select nphase from expense where idexp=%<expensevar.idexp>%]{I} <> %<sys_maxexpensephase>%
OR
%<expensevar.amount>%>0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON008','1','D','expensevar','S','N','N','N','N',{ts '2013-05-21 11:04:19.587'},'sa','La previsione di cassa della voce di spesa Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>% è INSUFFICIENTE!','N','%<expensevar.idunderwriting>% is null
OR
(
	(
		ISNULL(
			[SELECT ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0)
			FROM upbunderwritingtotal 
			WHERE idfin = 
				[SELECT idfin FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{C}
			and
				idupb = 
				[SELECT idupb FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{C}
			and idunderwriting = %<expensevar.idunderwriting>%
			]{V}
		,0)
		- 
		ISNULL(
			[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
			FROM underwritingexpensetotal
			WHERE idfin = 
				[SELECT idfin FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{C}
			and
				idupb = 
				[SELECT idupb FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{C}
			and idunderwriting = %<expensevar.idunderwriting>%
			AND nphase = %<sys_maxexpensephase>%]{V}
		,0)
	) >= 0
)
OR
[select nphase from expense where idexp=%<expensevar.idexp>%]{I} <> %<sys_maxexpensephase>%
OR
%<expensevar.amount>%>0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','1','D','expensevar','S','S','S','N','N',{ts '2010-11-08 10:09:57.203'},'sa','L''utente non è abilitato alla cancellazione di variazioni di fasi finanziarie precedenti alla fase dell''Impengo giuridico.','N','[select nphase from expense where idexp=%<expensevar.idexp>%]{I}  >= %<sys_appropriationphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''pre_impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','2','D','expensevar','S','S','S','N','N',{ts '2010-11-08 10:21:44.360'},'sa','L''utente non è abilitato alla cancellazione di variazioni di fasi finanziarie successive alla fase dell''Impengo giuridico.','N','[select nphase from expense where idexp=%<expensevar.idexp>%]{I}  <= %<sys_appropriationphase>%

OR 

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''post_impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL






')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','3','D','expensevar','S','S','S','N','N',{ts '2010-11-08 10:21:18.640'},'sa','L''utente non è abilitato alla cancellazione di variazioni di fasi finanziarie equivalenti all''Impengo giuridico.','N','[select nphase from expense where idexp=%<expensevar.idexp>%]{I}  <> %<sys_appropriationphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF002','1','D','expensevar','S','S','S','N','N',{ts '2007-12-05 16:02:11.313'},'PINO','L''importo lordo della missione è minore dei movimenti di spesa che la contabilizzano','N','--post
([
SELECT ISNULL(AVG(residual),0) 
	FROM itinerationresidual 
	JOIN expenseitineration 
		ON itinerationresidual.iditineration = expenseitineration.iditineration
	WHERE expenseitineration.idexp = %<expensevar.idexp>%]{N}
>=0)
or
(&<expensevar.amount>& = 0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF003','1','D','expensevar','S','S','S','N','N',{ts '2007-12-05 16:03:01.343'},'PINO','Non possono essere rimosse le variazioni presenti sulle liquidazioni inerenti le partite di giro perché sono stati liquidati alcuni saldi/pagamenti della missione','N','--post
[ISNULL(
 [SELECT expenseitineration.movkind FROM  expenseitineration
   JOIN expenselink on expenseitineration.idexp=expenselink.idparent
   WHERE expenselink.idchild = %<expensevar.idexp>%]{C},
  ''X'')]{C}<>5

OR

[SELECT ISNULL(SUM(curramount),0) 
FROM expensetotal 
 join  expenselink EL1 
       on   EL1.idchild=expensetotal.idexp 
 join expenseitineration IE1
       ON IE1.idexp=EL1.idparent
 join expenseitineration IE2
       ON IE1.iditineration=IE2.iditineration
 join expenselink EL2 
       on EL2.idparent= IE2.idexp
 join expenselast 
       on expenselast.idexp=expensetotal.idexp
 
WHERE EL2.idchild = %<expensevar.idexp>% AND
      expensetotal.ayear = %<sys_esercizio>% AND
     IE1.movkind = 4

]{V}=0
OR
%<expensevar.amount>% = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BOLLE001','1','I','expensevar','S','S','S','N','N',{ts '2013-07-08 10:01:31.067'},'nino','Con la variazione effettuata, la somma dei movimenti di spesa collegati alla bolletta diventa maggiore dell''importo della bolletta.','N','[select nphase from expense where idexp=%<expensevar.idexp>%]{I}
<> %<sys_maxexpensephase>% 

OR 

[select nbill from expenselast where idexp = %<expensevar.idexp>%]{I} IS NULL

OR

ISNULL([SELECT SUM(curramount)
FROM expensetotal
join expenselast on expensetotal.idexp=expenselast.idexp
where expenselast.idexp = %<expensevar.idexp>%
and ayear = %<sys_esercizio>%
and expenselast.nbill=   [select nbill from expenselast where expenselast.idexp = %<expensevar.idexp>%]{I}

]{V},0)
<= 
ISNULL(
[SELECT ISNULL(total, 0) from bill 
	where  ybill = %<sys_esercizio>% 	
	and 	nbill= [select nbill from expenselast where expenselast.idexp = %<expensevar.idexp>%]{I}
	and 	billkind =''D''
]{V}
,0) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA002','1','I','expensevar','N','S','N','N','N',{ts '2007-09-06 13:32:05.047'},'NINO','La previsione della voce in spesa %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE! ','N','ISNULL(
	[SELECT 
	isnull(currentprev,0)+
	ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	]{V}
,0)
- 
[SELECT ISNULL(totalcompetency, 0) + 
ISNULL(totalarrears, 0) 
from upbexpensetotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and nphase = %<sys_expensefinphase>%]{V} 
>= 0
or
[select nphase from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_expensefinphase>%
or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL
or
(%<expensevar.amount>%<0)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA004','1','I','expensevar','N','S','N','N','N',{ts '2013-05-21 10:48:24.230'},'sa','La previsione della voce in spesa  di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>% è INSUFFICIENTE!','N','%<expensevar.idunderwriting>% is null
OR

ISNULL(
	[SELECT 
	isnull(currentprev,0)+
	ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	]{V}
,0)
- 
[SELECT ISNULL(totalcompetency, 0) + 
ISNULL(totalarrears, 0) 
from underwritingexpensetotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V} 
>= 0
or
[select nphase from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_expensefinphase>%
or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL
or
(%<expensevar.amount>%<0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','I','expensevar','S','S','S','N','N',{ts '2007-12-14 13:54:49.247'},'NINO','La variazione al movimento di spesa %<expenseview.phase>% n. %<expenseview.nmov>% / %<expenseview.ymov>% non può essere inserita. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE003','1','I','expensevar','S','N','S','N','N',{ts '2007-09-28 09:55:57.547'},'NINO','La previsione di competenza della voce in spesa %<expenseview.codefin>% e UPB %<expenseview.codeupb>%  è INSUFFICIENTE!','N','ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
			[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}

	]{V}
,0)
- 
isnull([SELECT totalcompetency 
from upbexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
and nphase = %<sys_expensefinphase>%]{V}
,0)
>= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I} <> %<sys_expensefinphase>%)
or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE010','1','I','expensevar','S','N','S','N','N',{ts '2013-05-21 10:55:41.720'},'sa','La previsione di competenza spesa di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>% è INSUFFICIENTE!','N','%<expensevar.idunderwriting>% is null
OR
ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
			[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	]{V}
,0)
- 
isnull([SELECT totalcompetency 
from underwritingexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
>= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I} <> %<sys_expensefinphase>%)
or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
(%<expensevar.amount>%<0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN005','1','I','expensevar','S','S','S','N','N',{ts '2008-03-21 13:15:43.670'},'SA','Il movimento di spesa non è stato interamente classificato secondo una classificazione obbligatoria ','N','--post
(
[SELECT COUNT(*) FROM sortingkind T
WHERE T.nphaseexpense = [SELECT nphase FROM expense WHERE  idexp = %<expensevar.idexp>%]{I}
AND (T.flag&1) <> 0
AND %<sys_esercizio>% between ISNULL(T.start,1900) AND ISNULL(T.stop,2099)  
AND
(
	ISNULL(
		(SELECT ISNULL(SUM(I.amount),0)
		FROM expensesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind= T.idsorkind
		AND I.idexp= %<expensevar.idexp>%
		AND I.ayear = %<sys_esercizio>%)
	,0)
	<
	([SELECT curramount FROM expensetotal
	WHERE idexp= %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{V})
)
]{I}) = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI002','1','I','expensevar','S','N','S','S','N',{ts '2007-09-06 13:32:32.733'},'NINO','La dotazione crediti della voce %<expenseview.codefin>% e e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0)
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}

	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from upbexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and nphase = %<sys_expensefinphase>%]{V} 
,0)
>= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I} <>%<sys_expensefinphase>%)
or
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<0
OR
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI007','1','I','expensevar','S','N','S','S','N',{ts '2013-05-21 09:55:18.580'},'sa','La dotazione crediti di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>% è INSUFFICIENTE!','N','%<expensevar.idunderwriting>% is null
OR

ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0)
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from underwritingexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V} 
,0)
>= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I} <>%<sys_expensefinphase>%)
or
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or

(%<expensevar.amount>%<0)

OR
([select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S'')


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DIPEN004','1','I','expensevar','S','S','S','N','N',{ts '2007-08-29 09:05:17.390'},'NINO','L''importo lordo del contratto dipendente è minore dei movimenti di spesa che lo contabilizzano','N','--post
(
[SELECT ISNULL(AVG(residual),0)
FROM wageadditionresidual
JOIN expensewageaddition 
ON wageadditionresidual.ncon = expensewageaddition.ncon
AND wageadditionresidual.ycon = expensewageaddition.ycon
WHERE expensewageaddition.idexp = %<expensevar.idexp>%]{V}
>=0)
or
(%<expensevar.amount>% = 0)
OR
ISNULL(%<expensevar.autokind>%,0) = 4')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO009','1','I','expensevar','S','N','S','N','N',{ts '2007-09-06 13:32:49.297'},'NINO','La previsione della voce in spesa %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','N','ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
			[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}

	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from upbexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
and nphase = %<sys_expensefinphase>%]{V},0)
- 
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I} 
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
,0)
>= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_expensefinphase>%)
or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO010','1','I','expensevar','N','S','N','N','N',{ts '2007-09-06 13:33:04.577'},'NINO','La previsione della voce in spesa %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','N','ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
			[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}

	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears, 0)  
from upbexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
and nphase = %<sys_expensefinphase>%]{V},0)
- 
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I} 
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
,0)

>= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_expensefinphase>%)
or 
[SELECT idfin 
from expenseyear 
where idexp = %<expensevar.idexp>% 
and ayear = %<expensevar.yvar>%]{I} IS NULL 
or
%<expensevar.amount>%<0


')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO011','2','I','expensevar','S','N','S','S','N',{ts '2007-09-06 13:33:11.547'},'NINO','La dotazione crediti della voce %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0)
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}

	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from upbexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and nphase = %<sys_expensefinphase>%]{V} 
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
 ,0)
>= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I} <>%<sys_expensefinphase>%)
or
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<0
or
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO012','1','I','expensevar','S','S','S','N','S',{ts '2007-09-27 19:13:15.780'},'NINO','La dotazione incassi della voce %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)  
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	]{V}
,0)
- 
isnull(
[SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears,0) 
	from upbexpensetotal 
	where idfin = 
	 [SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>%
		and ayear = %<expensevar.yvar>%
		 ]{I}
	and idupb = 
	  [SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and nphase = %<sys_maxexpensephase>%	
 ]{V}
,0)
-
ISNULL(
	[SELECT sum(amount) 
	from pettycashoperation 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
 ,0)
 >= 0 
or 
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<>%<sys_maxexpensephase>%) 
or 
[(SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%)]{I} IS NULL 
or 
[(SELECT ymov from expense where idexp = %<expensevar.idexp>%)]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<0
or
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO020','1','I','expensevar','S','N','N','N','N',{ts '2007-08-29 09:18:21.047'},'NINO','La previsione della voce di spesa è inferiore alle righe di mandato','N','ISNULL(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) + ISNULL(totalarrears,0) 
	from upbexpensetotal 
	where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and nphase = %<sys_maxexpensephase>%]{V} ,0)
	-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
	FROM pettycashoperation 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	AND yrestore IS NULL
	AND nrestore IS NULL]{V}
	,0)
 >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_maxexpensephase>%)
OR 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
%<expensevar.amount>%<0
OR
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO022','1','I','expensevar','S','S','S','N','N',{ts '2007-09-27 18:48:59.547'},'NINO','L''importo attuale del movimento %<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>% è minore dell''importo attuale dei movimenti dipendenti','N','ISNULL([SELECT available
from expensetotal 
where idexp = %<expensevar.idexp>% 
and ayear = %<expensevar.yvar>%]{V},0)
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = %<expensevar.idexp>%
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(c.curramount)
	FROM pettycashexpense a
	JOIN expense b
	ON b.idexp = a.idexp
	JOIN expensetotal c
	ON b.idexp = c.idexp
	AND a.yoperation = c.ayear
	WHERE b.parentidexp = %<expensevar.idexp>%]{V}
,0)
--+ [%<expensevar.amount>%]
>= 0 
or 
[(SELECT count(*) 
from expense 
where parentidexp = %<expensevar.idexp>%)]{V} = 0 
or 
%<expensevar.idpayment>% is not NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO022','2','I','expensevar','S','S','S','N','N',{ts '2007-09-27 18:49:34.937'},'NINO','L''importo attuale dei movimenti di spesa della fase %<expenseview.phase>% è maggiore dell''importo attuale del movimento della fase precedente','N','[(SELECT nphase 
from expense 
where idexp = %<expensevar.idexp>%)]{I} = 1
or 
ISNULL([(SELECT expensetotal.available
from expensetotal 
join expense 
on expensetotal.idexp = expense.parentidexp 
and expensetotal.ayear = %<expensevar.yvar>% 
where expense.idexp = %<expensevar.idexp>%)]{V},0)
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = 
		[SELECT parentidexp
		FROM expense
		WHERE idexp = %<expensevar.idexp>%]{I}
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(c.curramount)
	FROM pettycashexpense a
	JOIN expense b
	ON b.idexp = a.idexp
	JOIN expensetotal c
	ON b.idexp = c.idexp
	AND a.yoperation = c.ayear
	WHERE b.parentidexp = 
		[SELECT parentidexp
		FROM expense
		WHERE idexp = %<expensevar.idexp>%]{I}
	]{V}
,0)
>= 0 
--or 
--%<expensevar.idpayment>% is not NULL
or 
%<expensevar.amount>%<0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO023','1','I','expensevar','S','S','S','N','N',{ts '2007-09-27 18:58:56.500'},'NINO','Non può essere inserita una variazione di spesa sul movimento %<expenseview.phase>%  %<expenseview.nmov>% del  %<expense.ymov>% in quanto la disponibilità negli anni successivi diventa negativa','N','([SELECT COUNT(*)
FROM expensetotal
WHERE idexp = %<expensevar.idexp>%
AND ayear > %<sys_esercizio>%]{V} = 0)
OR
(ISNULL([SELECT MIN(available)
FROM expensetotal
WHERE idexp = %<expensevar.idexp>%
AND ayear > %<sys_esercizio>%]{V},0)
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = %<expensevar.idexp>%
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(c.curramount)
	FROM pettycashexpense a
	JOIN expense b
	ON b.idexp = a.idexp
	JOIN expensetotal c
	ON b.idexp = c.idexp
	AND a.yoperation = c.ayear
	WHERE b.parentidexp = %<expensevar.idexp>%]{V}
,0)
--+ [%<expensevar.amount>%]
>= 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO023','2','I','expensevar','S','S','S','N','N',{ts '2007-09-06 13:36:10.530'},'NINO','Non può essere inserita una variazione di spesa sul movimento %<expenseview.phase>% %<expenseview.nmov>% del  %<expenseview.ymov>% in quanto la disponibilità del movimento della fase precedente negli anni successivi diventa negativa','N','([SELECT COUNT(*)
FROM expensetotal
WHERE idexp = [select parentidexp from expense where idexp=%<expensevar.idexp>%]{I}
AND ayear > %<sys_esercizio>%]{V} = 0)
OR
([SELECT ISNULL(MIN(expensetotal.available), 0) 
from expensetotal 
join expense 
on expensetotal.idexp = expense.parentidexp 
and expensetotal.ayear > %<expensevar.yvar>% 
where expense.idexp = %<expensevar.idexp>%]{V}
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = [select parentidexp from expense where idexp=%<expensevar.idexp>%]{I}
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(c.curramount)
	FROM pettycashexpense a
	JOIN expense b
	ON b.idexp = a.idexp
	JOIN expensetotal c
	ON b.idexp = c.idexp
	AND a.yoperation = c.ayear
	WHERE b.parentidexp = [select parentidexp from expense where idexp=%<expensevar.idexp>%]{I}
	]{V}
,0)
>= 0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO034','2','I','expensevar','S','N','S','S','N',{ts '2013-06-19 12:32:31.230'},'assistenza','La dotazione crediti di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>% è INSUFFICIENTE!','N','%<expensevar.idunderwriting>% is null
OR
ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0)
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting =  %<expensevar.idunderwriting>%]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from underwritingexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting =  %<expensevar.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V} 
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and PO.idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and POU.idunderwriting =  %<expensevar.idunderwriting>%	
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
 ,0)
>= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I} <>%<sys_expensefinphase>%)
or
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<0
or
([select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO035','2','I','expensevar','S','S','S','N','S',{ts '2013-05-21 10:38:07.950'},'sa','La dotazione incassi di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>% è INSUFFICIENTE!','N','%<expensevar.idunderwriting>% is null
OR

ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) +ISNULL(totalarrears,0) 
from underwritingexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%]{V} 
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and PO.idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and POU.idunderwriting = %<expensevar.idunderwriting>%	
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
 ,0)
>= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I} <>%<sys_maxexpensephase>%)
or
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
(%<expensevar.amount>%<0)
or
([select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO036','1','I','expensevar','S','N','S','N','N',{ts '2013-05-21 10:57:21.933'},'sa','La previsione della voce in spesa di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>%  è INSUFFICIENTE!','N','%<expensevar.idunderwriting>% is null
OR


ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
			[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from underwritingexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V},0)
- 
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and PO.idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and POU.idunderwriting = %<expensevar.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
,0)
>= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_expensefinphase>%)
or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
(%<expensevar.amount>%<0)


')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO037','1','I','expensevar','N','S','N','N','N',{ts '2013-05-21 10:58:53.263'},'sa','La previsione della voce in spesa di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>%  è INSUFFICIENTE!','N','
%<expensevar.idunderwriting>% is null
OR
ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears, 0)  
from underwritingexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V},0)
- 
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and PO.idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and POU.idunderwriting = %<expensevar.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
,0)

>= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_expensefinphase>%)
or 
[SELECT idfin 
from expenseyear 
where idexp = %<expensevar.idexp>% 
and ayear = %<expensevar.yvar>%]{I} IS NULL 
or
(%<expensevar.amount>%<0)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA001','1','I','expensevar','S','S','S','N','N',{ts '2007-04-13 10:13:55.360'},'''SA''','L''importo del documento IVA %<idinvkind>% %<ninv>%/%<yinv>% è minore delle variazioni di spesa che lo contabilizzano','N','--post
%<expensevar.idinvkind>% IS NULL
OR
isnull([(SELECT AVG(residual)
FROM invoiceavailable
WHERE invoiceavailable.yinv = %<expensevar.yinv>% AND
invoiceavailable.ninv = %<expensevar.ninv>% AND
invoiceavailable.idinvkind = %<expensevar.idinvkind>%)]{N},0)>=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA009','1','I','expensevar','S','S','S','N','N',{ts '2013-04-17 09:56:20.817'},'sara','La variazione inserita deve contabilizzare un documento IVA.','N','(ISNULL(%<expensevar.autokind>%,0) = 11)
OR
(ISNULL(%<expensevar.autokind>%,0) = 10)
OR
(ISNULL(%<expensevar.autokind>%,0) = 22)

OR
(
[SELECT COUNT(*) FROM expenseinvoice 
WHERE idexp = %<expensevar.idexp>%]{I} = 0
)
OR %<expensevar.idinvkind>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA009','2','I','expensevar','S','S','S','N','N',{ts '2013-04-17 09:56:28.797'},'sara','La variazione inserita che contabilizza la nota di credito deve essere coerente con la contabilizzazione del movimento principale','N','(%<expensevar.idinvkind>% IS NULL)
OR
(ISNULL(%<expensevar.autokind>%,0) = 10)
OR
(ISNULL(%<expensevar.autokind>%,0) = 11)
OR
(ISNULL(%<expensevar.autokind>%,0) = 22)
OR
[SELECT COUNT(*)
FROM expenseinvoice
WHERE idexp = %<expensevar.idexp>%
AND movkind = %<expensevar.movkind>%]{I} = 1
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA016','1','I','expensevar','S','S','S','N','N',{ts '2007-12-12 11:32:57.780'},'PINO','La nota di credito deve avere una causale selezionata','S','%<expensevar.idinvkind>% IS NULL
OR
ISNULL(%<expensevar.movkind>%,0) <> 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA019','1','I','expensevar','S','S','S','N','N',{ts '2009-09-16 12:28:31.987'},'SARA','L''importo della variazione che contabilizza il documento  %<expensevar.ninv>% / %<expensevar.yinv>% non può essere diverso dalla somma dei dettagli associati.','N','-- docum
%<expensevar.idinvkind>% IS NULL
OR

ISNULL(%<expensevar.movkind>%,0) <> 1

OR
[(select isnull(sum(invoicedetailview.rowtotal), 0)  
from invoicedetailview
where  invoicedetailview.idinvkind =%<expensevar.idinvkind>%
and invoicedetailview.yinv = %<expensevar.yinv>%
and invoicedetailview.ninv = %<expensevar.ninv>%
and invoicedetailview.idexp_taxable = %<expensevar.idexp>%
and invoicedetailview.idexp_iva = %<expensevar.idexp>%
)]{V}
=
-
%<expensevar.amount>%


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA019','2','I','expensevar','S','S','S','N','N',{ts '2009-09-16 12:29:40.547'},'SARA','L''importo della variazione che contabilizza il documento  %<expensevar.ninv>% / %<expensevar.yinv>% è diverso dalla somma dei dettagli associati.','N','-- impon
%<expensevar.idinvkind>% IS NULL
OR
ISNULL(%<expensevar.movkind>%,0) <> 3
OR
[(select isnull(sum(invoicedetailview.taxable_euro), 0)  
from invoicedetailview
where  invoicedetailview.idinvkind =%<expensevar.idinvkind>%
and invoicedetailview.yinv = %<expensevar.yinv>%
and invoicedetailview.ninv = %<expensevar.ninv>%
and invoicedetailview.idexp_taxable = %<expensevar.idexp>%
)]{V}
=
-
%<expensevar.amount>%



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA019','3','I','expensevar','S','S','S','N','N',{ts '2009-09-16 12:30:01.657'},'SARA','L''importo della variazione che contabilizza il documento  %<expensevar.ninv>% / %<expensevar.yinv>% è diverso dalla somma dei dettagli associati.','N','-- impos
%<expensevar.idinvkind>% IS NULL
OR
ISNULL(%<expensevar.movkind>%,0) <> 2
OR
[(select isnull(sum(invoicedetailview.iva_euro), 0)  
from invoicedetailview
where  invoicedetailview.idinvkind =%<expensevar.idinvkind>%
and invoicedetailview.yinv = %<expensevar.yinv>%
and invoicedetailview.ninv = %<expensevar.ninv>%
and invoicedetailview.idexp_iva = %<expensevar.idexp>%
)]{V}
=
-
%<expensevar.amount>%


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA021','1','I','expensevar','S','S','S','N','N',{ts '2009-01-20 12:20:00.790'},'SA','La variazione inserita non può contabilizzare una nota di credito ed essere anche di annullamento','S','(%<expensevar.idinvkind>% IS NULL)
OR
(ISNULL(%<expensevar.autokind>%,0) NOT IN (10,11))
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA030','1','I','expensevar','S','S','S','N','N',{ts '2009-02-17 12:28:03.530'},'NINO','Modificando l''importo del movimento di spesa si genererà un valore incoerente nella liquidazione iva collegata','S','[select count(*) from ivapayexpense where 
 idexp=%<expensevar.idexp>%
]{I}=0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS002','1','I','expensevar','S','S','S','N','S',{ts '2007-09-07 15:25:12.860'},'NINO','La dotazione incassi della voce %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)  
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	]{V}
,0)
- 
isnull(
[SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears,0) 
	from upbexpensetotal 
	where idfin = 
	 [SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>%
		and ayear = %<expensevar.yvar>%
		 ]{I}
	and idupb = 
	  [SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and nphase = %<sys_maxexpensephase>%	
 ]{V}
,0)
 >= 0 
or 
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<>%<sys_maxexpensephase>%) 
or 
[(SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%)]{I} IS NULL 
or 
[(SELECT ymov from expense where idexp = %<expensevar.idexp>%)]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<0
OR
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS007','1','I','expensevar','S','S','S','N','S',{ts '2013-05-21 10:43:03.233'},'sa','La dotazione incassi di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>% è INSUFFICIENTE!','N','%<expensevar.idunderwriting>% is null
OR

ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)  
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	]{V}
,0)
- 
isnull(
[SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears,0) 
	from underwritingexpensetotal 
	where idfin = 
	 [SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>%
		and ayear = %<expensevar.yvar>%
		 ]{I}
	and idupb = 
	  [SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%	
 ]{V}
,0)
 >= 0 
or 
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<>%<sys_maxexpensephase>%) 
or 
[(SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%)]{I} IS NULL 
or 
[(SELECT ymov from expense where idexp = %<expensevar.idexp>%)]{I} <> %<sys_esercizio>%
or
(%<expensevar.amount>%<0)
OR
([select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S'')

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM003','1','I','expensevar','S','S','S','N','N',{ts '2007-09-27 18:54:58.233'},'NINO','L''importo attuale del movimento %<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>% è minore dell''importo attuale dei movimenti dipendenti','N','ISNULL([SELECT available from expensetotal 
where idexp = %<expensevar.idexp>% 
and ayear = %<expensevar.yvar>%]{V},0)
--+ ISNULL(%<expensevar.amount>%, 0)
 >= 0 
or 
[SELECT COUNT(*) 
from expense 
where parentidexp = %<expensevar.idexp>%]{I} = 0 
or 
%<expensevar.idpayment>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM003','2','I','expensevar','S','S','S','N','N',{ts '2007-09-06 13:38:16.203'},'NINO','L''importo attuale dei movimenti di spesa della fase %<expenseview.phase>% è maggiore dell''importo attuale del movimento della fase precedente','N','[SELECT nphase 
from expense 
where idexp = %<expensevar.idexp>%]{I} = 1
or 
[SELECT ISNULL(expensetotal.available, 0) 
from expensetotal 
join expense 
on expensetotal.idexp = expense.parentidexp 
and expensetotal.ayear = %<expensevar.yvar>% 
where expense.idexp = %<expensevar.idexp>%]{V} 
>= 0 
--or 
--%<expensevar.idpayment>% is not NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM004','1','I','expensevar','S','S','S','N','N',{ts '2010-02-18 10:21:11.297'},'SA','L''importo attuale del movimento di spesa %<expenseview.nmov>% del %<expenseview.ymov>% è NEGATIVO','N','[(SELECT MIN(ISNULL(curramount, 0)) 
from expensetotal 
where idexp = %<expensevar.idexp>%)]{V} 
 >= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM004','2','I','expensevar','S','S','S','N','N',{ts '2010-02-22 10:45:52.390'},'SARA','L''importo attuale del movimento di spesa %<expenseview.nmov>% del %<expenseview.ymov>% in anni successivi  diventa NEGATIVO','S','%<expensevar.amount>%>0
OR
[(SELECT MIN(ISNULL(curramount, 0) + ISNULL(%<expensevar.amount>%,0))
from   expensetotal 
where idexp = %<expensevar.idexp>%
and    ayear > %<expensevar.yvar>%)]{V} 
>= 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM007','1','I','expensevar','S','S','S','N','N',{ts '2011-09-20 15:44:45.797'},'sara','Il movimento finanziario di spesa %<expenseview.nmov>% del %<expenseview.ymov>% non può essere variato in quanto è già incluso nel mandato di pagamento %<expenseview.ypay>% %<expenseview.npay>% .','N','ISNULL([SELECT payment.kpaymenttransmission 
FROM expenselast 
JOIN payment 
	ON payment.kpay = expenselast.kpay 
WHERE expenselast.idexp = %<expensevar.idexp>%]{I},0)=0
OR
ISNULL([SELECT kpay 
FROM expenselast 
WHERE idexp = %<expensevar.idexp>%]{I} ,0)=0
OR
(%<expensevar.autokind>% IN (10,11,22))
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'')= ''S'')
AND
[(SELECT COUNT(*)  FROM expensevar  
WHERE idexp = %<expensevar.idexp>%
AND kpaymenttransmission IS NULL
AND autokind = 22)]{I} <> 0
AND
-- unicredit non permette le variazioni di dati contabili ma solo del Siope
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM expenselast
JOIN payment 
	ON payment.kpay = expenselast.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},'''' )<> ''02008''
)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM016','1','I','expensevar','S','S','S','N','N',{ts '2007-11-27 10:22:31.517'},'SARA','Le classificazioni associate al movimento di spesa n. %<expenseview.nmov>% del %<expenseview.nmov>% sono superiori rispetto all''importo dello stesso','N','--post
[SELECT curramount FROM expensetotal
WHERE idexp= %<expensevar.idexp>% 
AND ayear= %<expensevar.yvar>%]{V}
>=
[ISNULL(
	(SELECT TOP 1 SUM(I.amount)
	FROM expensesorted I
	JOIN sorting S
		ON I.idsor = S.idsor
	WHERE I.idexp = %<expensevar.idexp>%
	AND I.ayear = %<sys_esercizio>%
	GROUP BY S.idsorkind,I.idexp 
	ORDER BY SUM(I.amount) DESC)
,0)]{V}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM020','1','I','expensevar','S','S','S','N','N',{ts '2007-12-13 13:51:56.050'},'SARA','Non può essere inserita una variazione di spesa sul movimento %<expenseview.nmov>% del %<expenseview.ymov>% in quanto la disponibilità negli anni successivi diventa negativa','N','(
	[SELECT COUNT(*)
	FROM expensetotal
	WHERE idexp = %<expensevar.idexp>%
	AND ayear > %<sys_esercizio>%]{I} = 0
)
OR
(	(
		ISNULL([SELECT MIN(available)
		FROM expensetotal
		WHERE idexp = %<expensevar.idexp>%
		AND ayear > %<sys_esercizio>%]{V},0)
	)
	>= 0
)
OR
(
	ISNULL(
		[SELECT MAX(ayear) FROM accountingyear WHERE ((flag&0x0F)>= 5)]{I}
	,%<sys_esercizio>%-1) < %<sys_esercizio>%
)
OR
%<expensevar.amount>%>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM020','2','I','expensevar','S','S','S','N','N',{ts '2007-12-13 13:51:47.937'},'SARA','Non può essere inserita una variazione di spesa sul movimento %<expenseview.nmov>% del %<expenseview.ymov>% in quanto la disponibilità del movimento della fase precedente negli anni successivi diventa negativa','N','(
	[SELECT COUNT(*)
	FROM expensetotal
	WHERE idexp = [select parentidexp from expense where idexp=%<expensevar.idexp>%]{I}
	AND ayear > %<sys_esercizio>%]{I} = 0
)
OR
(
	(
		ISNULL([SELECT MIN(available)
		FROM expensetotal
		WHERE idexp = [select parentidexp from expense where idexp=%<expensevar.idexp>%]{I}
		AND ayear > %<sys_esercizio>%]{V},0)
		
	) >= 0
)
OR
(
	ISNULL(
		[SELECT MAX(ayear) FROM accountingyear WHERE ((flag&0x0F)>= 5)]{I}
	,%<sys_esercizio>%-1) < %<sys_esercizio>%
)
OR
%<expensevar.amount>%<0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM021','1','I','expensevar','S','S','S','N','N',{ts '2007-09-27 19:01:56.610'},'NINO','FONDO DI CASSA INIZIALE + totale delle reversali trasmesse in banca deve essere maggiore od uguale al totale dei pagamenti (anche non inclusi in un mandato)','N','--post
ISNULL([SELECT currentfloatfund FROM currentcashtotal WHERE ayear = %<sys_esercizio>%]{V},0) >= 0
OR
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_maxexpensephase>%)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM025','1','I','expensevar','S','S','S','N','N',{ts '2011-09-15 16:29:00.313'},'sara','Non può essere inserita una variazione sul movimento di spesa %<expenseview.nmov>% del %<expenseview.nmov>% in quanto è inserito in un mandato di pagamento','N','--post
ISNULL([SELECT kpay FROM expenselast 
WHERE idexp = %<expensevar.idexp>%
]{I},0) = 0
OR
(%<expensevar.autokind>% IS NOT NULL)
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'')= ''S'')
AND
-- esiste una variazione speciale di modifica dati non ancora trasmessa
[(SELECT count(*)  from expensevar  
WHERE idexp = %<expensevar.idexp>%
AND nvar <> %<expensevar.nvar>%
AND kpaymenttransmission is null
AND autokind = 22)]{I} <> 0
AND
-- unicredit non permette le variazioni di dati contabili ma solo del Siope
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM expenselast
JOIN payment 
	ON payment.kpay = expenselast.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},'''' )<> ''02008''
)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM025','3','I','expensevar','S','S','S','N','N',{ts '2007-08-29 10:36:06.860'},'NINO','Una variazione di annullamento deve necessariamente rendere nullo l''importo del movimento di spesa a cui si applica.','N','(%<expensevar.autokind>% IS NULL)
OR
(%<expensevar.autokind>% <> 11)
OR
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_maxexpensephase>%)
OR
(isnull(
	[SELECT SUM(curramount) FROM expensetotal 
	 WHERE idexp= %<expensevar.idexp>%
	and ayear=%<sys_esercizio>%
	]{V}
,0)=0
)

			

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM026','1','I','expensevar','S','N','S','N','N',{ts '2007-09-06 13:41:10.127'},'NINO','Non è possibile inserire una variazione POSITIVA sul movimento di spesa n. %<expenseview.nmov>% del  %<expenseview.ymov>%  perchè è un residuo','S','[SELECT flag & 1 from expensetotal 
where %<expensevar.idexp>% = expensetotal.idexp 
and expensetotal.ayear=%<sys_esercizio>%]{I} = 0
or
[SELECT ymov from expense where expense.idexp = %<expensevar.idexp>%]{I} = %<sys_esercizio>%
or
%<expensevar.amount>% <= 0
or

([select nphase from expense where idexp=%<expensevar.idexp>%]{I}  <> 

[SELECT appropriationphasecode FROM config where ayear =  %<sys_esercizio>%]{I}  ) 

or
%<expensevar.idexp>% is null


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM031','1','I','expensevar','S','S','S','N','N',{ts '2013-06-11 16:53:13.670'},'assistenza','La variazione di spesa inserita rende l''importo attuale del movimento %<expenseview.nmov>% del %<expenseview.ymov>% minore della somma degli importi delle ritenute c/dipendente','N','--post
ISNULL(
[SELECT curramount FROM expensetotal
WHERE idexp = %<expensevar.idexp>%
AND ayear = %<expensevar.yvar>%]{V}
,0)
>=0
AND
(
(ISNULL(
[SELECT curramount FROM expensetotal
WHERE idexp = %<expensevar.idexp>%
AND ayear = %<expensevar.yvar>%]{V}
,0)
>=
(
ISNULL(
[SELECT SUM(employtax) 
FROM expensetax
WHERE idexp = %<expensevar.idexp>% ]{V}
,0)
+
ISNULL(
	[SELECT SUM(expensetaxcorrige.employamount	)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensevar.idexp>%]{V}
,0)
)
)
OR
([SELECT nphase FROM expense WHERE idexp = %<expensevar.idexp>%]{I} <>
%<sys_maxexpensephase>%)
OR
(
isnull(%<expensevar.autokind>%,0)=11
)
)
OR
(
[SELECT COUNT(*)
FROM expensepayroll
JOIN expenselink
	ON expenselink.idparent = expensepayroll.idexp
WHERE expenselink.idchild = %<expensevar.idexp>%]{I} > 0
AND
[SELECT nphase FROM expense
WHERE idexp = %<expensevar.idexp>%]{I} = %<sys_maxexpensephase>%
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM032','1','I','expensevar','S','S','S','N','N',{ts '2008-11-28 15:22:36.983'},'SA','Per annullare il pagamento di una prestazione è necessario effettuare preventivamente la correzione dei dettagli delle ritenute.
Ricordarsi inoltre di annullare gli eventuali mandati e reversali generati mediante gli automatismi.','N','--post 
(
ISNULL(
[SELECT curramount FROM expensetotal
WHERE idexp = %<expensevar.idexp>%
AND ayear = %<expensevar.yvar>%]{V}
,0)
>0
)
OR
(
--ISNULL(
--[SELECT employtaxamount FROM expense
--WHERE idexp = %<expensevar.idexp>%]{V}
--,0)
ISNULL(
[SELECT SUM(employtax) FROM expensetaxofficial
WHERE idexp = %<expensevar.idexp>%
	AND stop IS NULL
]{V}
,0)
<=0)
OR
([SELECT nphase FROM expense WHERE idexp = %<expensevar.idexp>%]{I} <>
%<sys_maxexpensephase>%)
OR
(ISNULL(%<expensevar.autokind>%,0)<>11)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM038','1','I','expensevar','S','S','S','S','N',{ts '2009-01-20 12:31:21.463'},'SA','Il totale dell''accertato è inferiore al totale dell''impegnato per l''UPB scelto','N','[SELECT assured FROM upb
WHERE idupb = 
	[SELECT idupb FROM expenseyear
	WHERE idexp = %<expensevar.idexp>%
	AND ayear = %<expensevar.yvar>%]{C}
]{C} <> ''S''
OR
[SELECT nphase FROM expense WHERE idexp = %<expensevar.idexp>%]{I}
<> 
%<sys_appropriationphase>%
OR
ISNULL(
	[SELECT SUM(amount) FROM incomeyear
       join income on incomeyear.idinc=income.idinc
       join incometotal on  
          incomeyear.idinc=incometotal.idinc AND
	    incomeyear.ayear=incometotal.ayear
	WHERE idupb = 
		[SELECT idupb FROM expenseyear
		WHERE idexp = %<expensevar.idexp>%
		AND ayear = %<expensevar.yvar>%]{C}
	AND income.nphase = %<sys_assessmentphase>%
	AND (incometotal.flag & 1)=0]{V}
,0)

+
ISNULL(
	[SELECT SUM(incomevar.amount)
	FROM incomevar
	JOIN incomeyear
		ON incomevar.idinc = incomeyear.idinc
		AND incomeyear.ayear= %<expensevar.yvar>%
       join income on incomeyear.idinc=income.idinc
	WHERE incomevar.yvar <= %<sys_esercizio>%
	AND income.nphase = %<sys_assessmentphase>%
	AND incomeyear.idupb = 
		[SELECT idupb FROM expenseyear
		WHERE idexp = %<expensevar.idexp>%
		AND ayear = %<expensevar.yvar>%]{C}
]{V}
,0)

+
ISNULL(
	[SELECT ISNULL(previousassessment,0) - ISNULL(previousappropriation,0)
	FROM upb WHERE idupb = 
		[SELECT idupb FROM expenseyear
		WHERE idexp = %<expensevar.idexp>%
		AND ayear = %<expensevar.yvar>%]{C}
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(creditvariation)
	FROM upbtotal
	WHERE idupb = 
		[SELECT idupb FROM expenseyear
		WHERE idexp = %<expensevar.idexp>%
		AND ayear = %<expensevar.yvar>%]{C}
	]{V}
,0)
>=
ISNULL([SELECT SUM(amount)
FROM expenseyear
join expensetotal on  
          expensetotal.idexp=expenseyear.idexp AND
	    expensetotal.ayear=expenseyear.ayear
 join expense on expenseyear.idexp=expense.idexp


WHERE idupb =
 		[SELECT idupb FROM expenseyear
		WHERE idexp = %<expensevar.idexp>%
		AND ayear = %<expensevar.yvar>%]{C}
AND expense.nphase = %<sys_appropriationphase>%
AND (expensetotal.flag & 1)=0
]{V},0)
+
ISNULL([SELECT SUM(expensevar.amount) FROM expensevar
JOIN expenseyear
	ON expensevar.idexp = expenseyear.idexp
	AND expenseyear.ayear= %<expensevar.yvar>%
 join expense on expenseyear.idexp=expense.idexp
WHERE expensevar.yvar <= %<sys_esercizio>%
AND expense.nphase = %<sys_appropriationphase>%
AND expenseyear.idupb = 
	[SELECT idupb FROM expenseyear
	WHERE idexp = %<expensevar.idexp>%
	AND ayear = %<expensevar.yvar>%]{C}
]{V}
,0)

OR 
%<expensevar.amount>% <= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM041','1','I','expensevar','S','S','S','N','N',{ts '2011-09-08 14:17:54.517'},'sara','Non può essere annullato il movimento di spesa %<expenseview.nmov>% del %<expenseview.ymov>% in quanto renderebbe l''esitato del mandato relativo superiore all''importo totale del mandato stesso.','N','([SELECT COUNT(*) FROM expenselast 
WHERE idexp = %<expensevar.idexp>%
AND kpay IS NOT NULL
]{V} = 0)
OR
(%<expensevar.autokind>% not in (10,11))
OR
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_maxexpensephase>%)
OR
(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 
	 WHERE idexp= %<expensevar.idexp>%]{V}
	,0)
 <= 
 isnull(
	[SELECT SUM(ET.curramount) FROM expensetotal ET
		JOIN expenselast EL1 on EL1.idexp= ET.idexp
            JOIN expenseyear EY on EY.idexp=EL1.idexp
	 WHERE EL1.idexp= %<expensevar.idexp>% AND
             EY.ayear=%<sys_esercizio>%
                           
]{V}
	,0)
)
			
OR		
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'')= ''S'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM041','2','I','expensevar','S','S','S','N','N',{ts '2012-07-18 10:35:16.313'},'sara','Non può essere annullato il movimento di spesa %<expenseview.nmov>% del %<expenseview.ymov>% in quanto risulta già esitato.','N','([SELECT COUNT(*) FROM expenselast 
WHERE idexp = %<expensevar.idexp>%
AND kpay IS NOT NULL
]{V} = 0)
OR
(%<expensevar.autokind>% not in (10,11))
OR
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_maxexpensephase>%)
OR
(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 
	 WHERE idexp= %<expensevar.idexp>%]{V}
	,0) = 0)
OR		
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'')= ''N'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM047','1','I','expensevar','S','S','S','N','N',{ts '2007-09-06 13:42:54.530'},'NINO','Non può essere inserita una variazione al mov. di spesa %<expenseview.nmov>% del %<expenseview.nmov>% in quanto tale mov. contabilizza un cedolino ed è stato portato a pagamento','N','[SELECT COUNT(*) FROM expensepayroll
 join expenselink on expensepayroll.idexp=expenselink.idparent
WHERE expenselink.idchild = %<expensevar.idexp>%
]{I}= 0
OR

[SELECT COUNT(*) FROM expenselast 
 join expenselink ON  expenselink.idchild= expenselast.idexp
WHERE expenselink.idparent = %<expensevar.idexp>% 
]{I} = 0
OR %<expensevar.autokind>% IS NOT NULL')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM047','2','I','expensevar','S','S','S','N','N',{ts '2007-09-06 13:43:11.233'},'NINO','Non può essere inserita una variazione al mov. di spesa %<expenseview.nmov>% del %<expenseview.ymov>% in quanto tale mov. contabilizza una prestazione occasionale ed è stato portato a pagamento','N','[SELECT COUNT(*) FROM expensecasualcontract
 join expenselink on expensecasualcontract.idexp=expenselink.idparent
WHERE expenselink.idchild = %<expensevar.idexp>%
]{I}= 0
OR

[SELECT COUNT(*) FROM expenselast 
 join expenselink ON  expenselink.idchild= expenselast.idexp
WHERE expenselink.idparent = %<expensevar.idexp>% 
]{I} = 0
OR %<expensevar.autokind>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM047','3','I','expensevar','S','S','S','N','N',{ts '2007-12-12 11:34:07.453'},'PINO','Non può essere inserita una variazione al mov. di spesa %<expenseview.nmov>% del %<expenseview.ymov>% in quanto tale mov. contabilizza una prestazione professionale ed è stato portato a pagamento','N','

[SELECT COUNT(*) FROM expenseprofservice
 join expenselink on expenseprofservice.idexp=expenselink.idparent
WHERE expenselink.idchild = %<expensevar.idexp>%
AND movkind IN (1, 3)
]{I}= 0
OR

[SELECT COUNT(*) FROM expenselast 
 join expenselink ON  expenselink.idchild= expenselast.idexp
WHERE expenselink.idparent = %<expensevar.idexp>% 
]{I} = 0
OR %<expensevar.autokind>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM047','4','I','expensevar','S','S','S','N','N',{ts '2007-09-06 13:50:25.390'},'NINO','Non può essere inserita una variazione al mov. di spesa %<expenseview.nmov>% del  %<expenseview.nmov>% in quanto tale mov. contabilizza una prestazione dipendente ed è stato portato a pagamento','N','
[SELECT COUNT(*) FROM expensewageaddition
 join expenselink on expensewageaddition.idexp=expenselink.idparent
WHERE expenselink.idchild = %<expensevar.idexp>%
]{I}= 0
OR

[SELECT COUNT(*) FROM expenselast 
 join expenselink ON  expenselink.idchild= expenselast.idexp
WHERE expenselink.idparent = %<expensevar.idexp>% 
]{I} = 0
OR %<expensevar.autokind>% IS NOT NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM047','5','I','expensevar','S','S','S','N','N',{ts '2007-12-04 14:32:07.827'},'pino','Non può essere inserita una variazione al mov. di spesa %<expenseview.nmov>% del %<expenseview.ymov>% in quanto tale mov. contabilizza una missione ed è stato portato a pagamento','N','
[SELECT COUNT(*) FROM expenseitineration
 join expenselink on expenseitineration.idexp=expenselink.idparent
WHERE expenselink.idchild = %<expensevar.idexp>%
AND movkind = 4
]{I}= 0
OR

[SELECT COUNT(*) FROM expenselast 
 join expenselink ON  expenselink.idchild= expenselast.idexp
WHERE expenselink.idparent = %<expensevar.idexp>% 


]{I} = 0
OR %<expensevar.autokind>% IS NOT NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM066','1','I','expensevar','S','S','S','N','N',{ts '2013-03-22 14:35:18.800'},'sa','Deve essere ricalcolata la situazione finanziaria effettiva nell''esercizio precedente poiché non risulta allineata con i movimenti finanziari effettivamente inseriti','S','(
[SELECT nphase FROM expense 
 WHERE  expense.idexp = %<expensevar.idexp>%]{I}
< %<sys_maxexpensephase>%)
OR
([(SELECT COUNT(*) 
  FROM currentcashtotal 
  WHERE ayear = (%<sys_esercizio>% - 1))]{I} = 0)
OR
([SELECT ISNULL(startfloatfund,0) 
   FROM surplus WHERE ayear = %<sys_esercizio>% ]{V}
= 
[SELECT ISNULL(currentfloatfund,0) 
   FROM currentcashtotal 
  WHERE ayear = (%<sys_esercizio>% - 1)]{V}
)
OR
(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = (%<sys_esercizio>%-1)]{I}
,0) & 0x0F)<4
OR
(ISNULL(
	[select locked from surplus where ayear = (%<sys_esercizio>% - 1)]{C},
	''N'') = ''S''
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','1','I','expensevar','S','S','S','N','N',{ts '2011-07-28 09:32:21.217'},'sara','Nella gestione dell''ordinativo informatico non è possibile inserire variazioni di annullo e variazioni dati di documenti non ancora trasmessi.','N','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'' )= ''N'')
)
OR
-- 2) le variazioni sono di tipo normale
ISNULL(%<expensevar.autokind>%,0) NOT IN (10,11,22)
OR
-- 3) la fase della variazione è inferiore alla fase massima
[SELECT nphase FROM expense
 WHERE expense.idexp = %<expensevar.idexp>%
]{I} < %<sys_maxexpensephase>%
OR
-- 4) i pagamenti sono inseriti in mandati trasmessi
ISNULL([
SELECT COUNT(*) FROM expenselast EL 
JOIN payment P
  ON P.kpay = EL.kpay
WHERE EL.idexp=%<expensevar.idexp>%
AND P.kpaymenttransmission IS NOT NULL
]{I} ,0) > 0





 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','2','I','expensevar','S','S','S','N','N',{ts '2011-09-07 14:45:37.593'},'sara','Al di fuori della gestione dell''ordinativo informatico non è possibile inserire variazioni dati di documenti.','N','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'' )= ''S'')
)
OR
-- 2) le variazioni non sono di tipo variazione dati
ISNULL(%<expensevar.autokind>%,0) <>22





 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','3','I','expensevar','S','S','S','N','N',{ts '2011-09-19 12:41:28.157'},'sara','Nella gestione dell''ordinativo informatico non è possibile inserire variazioni dati di documenti  in presenza di variaizoni annullamento dello stesso mandato a meno che non siano state trasmesse.','N','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'' )= ''N'')
)
OR
-- 2) le variazioni sono di tipo normale o annullamento
ISNULL(%<expensevar.autokind>%,0) <> 22
OR
-- 3) la fase della variazione è inferiore alla fase massima
[SELECT nphase FROM expense
 WHERE expense.idexp = %<expensevar.idexp>%
]{I} < %<sys_maxexpensephase>%
OR
-- 4) le eventuali variaizoni di annullamento sono state trasmesse
ISNULL([
SELECT COUNT(*) FROM expensevar EV
WHERE EV.idexp=%<expensevar.idexp>%
AND ISNULL(EV.autokind,0) IN (10,11)
AND EV.kpaymenttransmission IS NULL
]{I} ,0) = 0





 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','4','I','expensevar','S','S','S','N','N',{ts '2011-09-19 12:41:41.017'},'sara','Nella gestione dell''ordinativo informatico non è possibile inserire variazioni di annullamento di documenti  in presenza di variaizoni dati dello stesso mandato a meno che non siano state trasmesse.','N','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'' )= ''N'')
)
OR
-- 2) le variazioni sono di tipo normale
ISNULL(%<expensevar.autokind>%,0) NOT IN (10,11)
OR
-- 3) la fase della variazione è inferiore alla fase massima
[SELECT nphase FROM expense
 WHERE expense.idexp = %<expensevar.idexp>%
]{I} < %<sys_maxexpensephase>%
OR
-- 4) le eventuali variaizoni di modifica dati sono state trasmesse
ISNULL([
SELECT COUNT(*) FROM expensevar EV
WHERE EV.idexp=%<expensevar.idexp>%
AND ISNULL(EV.autokind,0) = 22
AND EV.kpaymenttransmission IS NULL
]{I} ,0) = 0





 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','5','I','expensevar','S','S','S','N','N',{ts '2011-09-19 12:41:55.843'},'sara','Nella gestione dell''ordinativo informatico non è possibile inserire variazioni dati di documenti  in presenza di variaizoni dati dello stesso movimento finanziario a meno che non siano state trasmesse.','N','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'' )= ''N'')
)
OR
-- 2) le variazioni sono di tipo normale o annullamento
ISNULL(%<expensevar.autokind>%,0) <> 22
OR
-- 3) la fase della variazione è inferiore alla fase massima
[SELECT nphase FROM expense
 WHERE expense.idexp = %<expensevar.idexp>%
]{I} < %<sys_maxexpensephase>%
OR
-- 4) le eventuali variaizoni di modifica dati sono state trasmesse
ISNULL([
SELECT COUNT(*) FROM expensevar EV
WHERE EV.idexp=%<expensevar.idexp>%
AND EV.nvar <> %<expensevar.nvar>%
AND ISNULL(EV.autokind,0)  = 22 
AND EV.kpaymenttransmission IS NULL
]{I} ,0) = 0





 ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','6','I','expensevar','S','S','S','N','N',{ts '2011-09-19 12:42:26.530'},'sara','Nella gestione del mandato informatico una variazione di annullamento deve necessariamente rendere nullo l''importo del movimento di spesa a cui si applica.','N','--Controlla che si gestisca il mandato informatico

(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'' )= ''N'')
)
OR
(%<expensevar.autokind>% IS NULL)
OR
(ISNULL(%<expensevar.autokind>%,0) <> 10)
OR
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_maxexpensephase>%)
OR
(isnull(
	[SELECT SUM(curramount) FROM expensetotal 
	 WHERE idexp= %<expensevar.idexp>%
	and ayear=%<sys_esercizio>%
	]{V}
,0)=0
)

OR
-- Unicredit non ammette annulli parziali di sub-ordinativi
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM expenselast
JOIN payment 
	ON payment.kpay = expenselast.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},'''' )<> ''02008''
)			

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','7','I','expensevar','S','S','S','N','N',{ts '2011-09-19 12:39:56.437'},'sara','Nella gestione dell''ordinativo informatico non è possibile inserire variazioni di documenti  in presenza di variaizoni di annullamento.','N','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'' )= ''N'')
)
OR
-- 2) le variazioni sono di tipo normale
ISNULL(%<expensevar.autokind>%,0)  <> 22
OR
-- 3) la fase della variazione è inferiore alla fase massima
[SELECT nphase FROM expense
 WHERE expense.idexp = %<expensevar.idexp>%
]{I} < %<sys_maxexpensephase>%
OR
-- 4) le eventuali variaizoni di modifica dati sono state trasmesse
ISNULL([
SELECT COUNT(*) FROM expensevar EV
WHERE EV.idexp=%<expensevar.idexp>%
AND ISNULL(EV.autokind,0)  IN (10,11)
]{I} ,0) = 0





 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM107','1','I','expensevar','S','S','S','N','N',{ts '2012-11-15 11:33:05.773'},'sa','Saldo iniziale + Tot. reversali emesse + Girofondi in entrata deve essere maggiore od uguale al Tot. pagamenti emessi + Girofondi in uscita.','N','--post
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_maxexpensephase>%)
OR
ISNULL([SELECT currentfloatfund 
FROM treasurercashtotal 
WHERE ayear = %<sys_esercizio>%
and idtreasurer =isnull([select idtreasurer from payment
			join expenselast 
				on payment.kpay= expenselast.kpay 
			where expenselast.idexp = %<expensevar.idexp>%]{I},0)
]{V},0) >= 0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM109','1','I','expensevar','S','S','S','N','N',{ts '2013-02-07 13:05:35.497'},'sa','Il movimento di spesa non è stato interamente attribuito al/ai Fnanziamento/i.','N','[(SELECT nphase 
	FROM expense 
	WHERE idexp = %<expensevar.idexp>%)]{I} 
<> %<sys_expensefinphase>%
OR
ISNULL(
	[(SELECT ISNULL(SUM(amount),0)
	FROM underwritingappropriation 
	WHERE idexp= %<expensevar.idexp>%)]{V}
	,0)
+
ISNULL (   [select SUM(amount) from expensevar where
		idexp=%<expensevar.idexp>%
		and
		idunderwriting is not null
                 ]{V},0)
	=
	ISNULL([SELECT curramount FROM expensetotal
	WHERE ayear = %<sys_esercizio>%  
	AND   idexp= %<expensevar.idexp>%]{V},0)
OR 
[SELECT assured 
FROM upb  
WHERE idupb = ([select idupb 
		from expenseyear
		where 	ayear = %<sys_esercizio>%
		and idexp=%<expensevar.idexp>%]{C})]{C} =''S'' ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS003','1','I','expensevar','S','S','S','N','N',{ts '2007-08-29 10:13:05.687'},'NINO','L''importo lordo del contratto occasionale è minore dei movimenti di spesa che lo contabilizzano','N','--post
(
[SELECT ISNULL(AVG(residual),0)
FROM casualcontractresidual
JOIN expensecasualcontract 
ON casualcontractresidual.ncon = expensecasualcontract.ncon
AND casualcontractresidual.ycon = expensecasualcontract.ycon
WHERE expensecasualcontract.idexp = %<expensevar.idexp>%]{V}
>=0)
or
(%<expensevar.amount>% = 0)
OR
ISNULL(%<expensevar.autokind>%,0) = 4')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN001','1','I','expensevar','S','S','S','N','N',{ts '2007-03-21 11:28:50.423'},'''NINO''','L''importo del movimento di spesa  è diverso dalla somma dei dettagli del contratto passivo associati','N','--post
(
[SELECT COUNT(*) 
FROM  expensemandateview 
WHERE expensemandateview.idexp = %<expensevar.idexp>%
AND   ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)
AND   ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0
)
OR
%<expensevar.amount>% = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS013','1','I','expensevar','S','S','S','N','N',{ts '2007-09-01 11:39:00.687'},'NINO','L''importo del movimento di spesa deve essere identico a quello dell''impegno che contabilizza il cedolino','N','(
[SELECT COUNT(*)
FROM expensepayroll
    join expenselink on expensepayroll.idexp=expenselink.idparent
WHERE expenselink.idchild =%<expensevar.idexp>%	
]{I} = 0
)
OR
(
[select amount from expenseyear EY 
	JOIN expense E on E.idexp=EY.idexp
			 AND E.ymov=EY.ayear
    where
     EY.idexp=  %<expensevar.idexp>% 
]{V}
+
ISNULL(
[SELECT SUM(amount) FROM expensevar
WHERE  idexp = %<expensevar.idexp>%
	AND ISNULL(autokind,0) <> 4
]{V},0)

 =
[SELECT EY.amount FROM expenseyear EY
   JOIN expense E on E.idexp=EY.idexp and
			   E.ymov=EY.ayear
   JOIN expenselink EL ON EY.idexp=EL.idparent
      
WHERE  EL.nlevel=%<sys_itinerationphase>%
	and EL.idchild = %<expensevar.idexp>%
]{V}
+
ISNULL(
[SELECT SUM(EV.amount) FROM expensevar EV
   JOIN expenselink EL ON EV.idexp=EL.idparent      
WHERE  EL.nlevel=%<sys_itinerationphase>%
	and EL.idchild = %<expensevar.idexp>%
	AND ISNULL(EV.autokind,0) <> 4
]{V}
,0)
)



OR
([SELECT nphase FROM expense WHERE idexp = %<expensevar.idexp>%]{I} < %<sys_itinerationphase>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE002','1','I','expensevar','S','S','S','N','N',{ts '2007-08-29 10:23:31.827'},'NINO','L''importo lordo del contratto professionale è minore dei movimenti di spesa che lo contabilizzano','N','--post
(
[SELECT ISNULL(AVG(residual),0)
FROM profserviceresidual
JOIN expenseprofservice 
ON profserviceresidual.ncon = expenseprofservice.ncon
AND profserviceresidual.ycon = expenseprofservice.ycon
WHERE expenseprofservice.idexp = %<expensevar.idexp>%]{V}
>=0)
or
(%<expensevar.amount>% = 0)
OR
ISNULL(%<expensevar.autokind>%,0) = 4')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN004','1','I','expensevar','S','S','S','N','N',{ts '2007-10-26 17:04:13.797'},'SARA','L''importo di un movimento di spesa che annulla delle ritenute deve essere nullo oppure uguale alla somma delle ritenute, cambiata di segno.','N','--post
(  [SELECT curramount from expensetotal where idexp=%<expensevar.idexp>% AND ayear=%<expensevar.yvar>%]{V} = 0 )
OR
( 
  isnull([SELECT SUM(employtax) from expensetax where idexp=%<expensevar.idexp>% ]{I},0) >= 0

)
OR 
(
 isnull([SELECT amount from expenseyear where idexp=%<expensevar.idexp>% and ayear=%<expensevar.yvar>%]{V},0) 
	+
 isnull([SELECT amount from expensevar where idexp=%<expensevar.idexp>% and autokind is null]{V},0) 
	= -
  ISNULL([SELECT SUM(employtax) from expensetax where idexp=%<expensevar.idexp>% ]{V},0)
)

OR
(
 [SELECT COUNT(*) FROM expensepayroll 
JOIN expenselink 
 ON expensepayroll.idexp=expenselink.idparent
WHERE expenselink.idchild= %<expensevar.idexp>% ]{I}<>0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON004','1','I','expensevar','S','N','N','N','N',{ts '2007-09-07 15:26:15.453'},'NINO','La previsione di cassa della voce di spesa %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','N','--post
(
	(
		ISNULL(
			[SELECT
			isnull(currentsecondaryprev,0)+
			ISNULL(secondaryvariation, 0) 
			FROM upbtotal 
			WHERE idfin = 
				[SELECT idfin FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{I}
			and 
				idupb = 
				[SELECT idupb FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{C}

			]{V}
		,0)
		- 
		ISNULL(
			[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
			FROM upbexpensetotal
			WHERE idfin = 
				[SELECT idfin FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{I}
			and 
				idupb = 
				[SELECT idupb FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{C}
			AND nphase = %<sys_maxexpensephase>%]{V}
		,0)
	) >= 0
)
OR
[SELECT nphase FROM expense WHERE idexp = %<expensevar.idexp>%]{I}  <> %<sys_maxexpensephase>%
or
(%<expensevar.amount>%<0)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','1','I','expensevar','S','S','S','N','N',{ts '2009-03-21 15:21:52.437'},'SARA','Le regole di sicurezza vietano l''inserimento di variazioni di annullamento per i Mandati','S','(ISNULL(%<expensevar.autokind>%,0) NOT IN (10,11))
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename  = ''annullamento''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','1','I','expensevar','S','S','S','N','N',{ts '2010-11-08 10:08:07.780'},'sa','L''utente non è abilitato all''inserimento di variazioni di fasi finanziarie precedenti alla fase dell''Impengo giuridico.','N','[select nphase from expense where idexp=%<expensevar.idexp>%]{I}  >= %<sys_appropriationphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''pre_impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','3','I','expensevar','S','S','S','N','N',{ts '2010-11-08 10:11:10.860'},'sa','L''utente non è abilitato all''inserimento di variazioni di fasi finanziarie equivalenti all''Impengo giuridico.','N','[select nphase from expense where idexp=%<expensevar.idexp>%]{I}  <> %<sys_appropriationphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','4','I','expensevar','S','S','S','N','N',{ts '2010-11-08 10:14:54.233'},'sa','L''utente non è abilitato all''inserimento di variazioni di fasi finanziarie successive alla fase dell''Impengo giuridico.','N','[select nphase from expense where idexp=%<expensevar.idexp>%]{I} <= %<sys_appropriationphase>%

OR 

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''post_impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL






')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF002','1','I','expensevar','S','S','S','N','N',{ts '2007-12-06 11:25:23.093'},'SARA','L''importo lordo della missione è minore dei movimenti di spesa che la contabilizzano','N','--post
([(SELECT ISNULL(AVG(residual),0) FROM itinerationresidual 
	JOIN expenseitineration 
	ON itinerationresidual.iditineration = expenseitineration.iditineration
WHERE expenseitineration.idexp = %<expensevar.idexp>% )]{N}>=0)
or
(%<expensevar.amount>% = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF003','1','I','expensevar','S','S','S','N','N',{ts '2007-12-05 16:09:51.407'},'PINO','Non può essere inserita la variazione in quanto la missione non può essere liquidata se non vengono liquidati tutti gli anticipi su partita di giro','N','
--post
[ISNULL(
 [SELECT expenseitineration.movkind FROM  expenseitineration
   JOIN expenselink on expenseitineration.idexp=expenselink.idparent
   WHERE expenselink.idchild = %<expensevar.idexp>%]{C},
  ''X'')]{C}<>5

OR

[SELECT ISNULL(SUM(curramount),0) 
FROM expensetotal 
 join  expenselink EL1 
       on   EL1.idchild=expensetotal.idexp 
 join expenseitineration IE1
       ON IE1.idexp=EL1.idparent
 join expenseitineration IE2
       ON IE1.iditineration=IE2.iditineration
 join expenselink EL2 
       on EL2.idparent= IE2.idexp
 join expenselast 
       on expenselast.idexp=expensetotal.idexp
 
WHERE EL2.idchild = %<expensevar.idexp>% AND
      expensetotal.ayear = %<sys_esercizio>% AND
      IE1.movkind = 4
]{V}=0
OR
%<expensevar.amount>% = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BOLLE001','1','U','expensevar','S','S','S','N','N',{ts '2013-07-08 10:23:02.877'},'nino','Cancellando la variazione, la somma dei movimenti di spesa collegati alla bolletta diventa maggiore dell''importo della bolletta.','N','[select nphase from expense where idexp=%<expensevar.idexp>%]{I}
<> %<sys_maxexpensephase>% 
OR 

[select nbill 
from expenselast
where idexp = %<expensevar.idexp>%]{I} IS NULL

OR

ISNULL([SELECT SUM(curramount)
FROM expensetotal
join expenselast on expensetotal.idexp=expenselast.idexp
where expenselast.idexp = %<expensevar.idexp>%
and ayear = %<sys_esercizio>%
and expenselast.nbill=   [select nbill from expenselast where expenselast.idexp = %<expensevar.idexp>%]{I}

]{V},0)
<= 
ISNULL(
[SELECT ISNULL(total, 0) from bill 
	where  ybill = %<sys_esercizio>% 	
	and 	nbill= [select nbill from expenselast where expenselast.idexp = %<expensevar.idexp>%]{I}
	and 	billkind =''D''
]{V}
,0) 



OR 

ISNULL(%<expensevar.amount>%,0) <= ISNULL(&<expensevar.amount>&,0)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA002','1','U','expensevar','N','S','N','N','N',{ts '2007-09-06 13:51:42.327'},'NINO','La previsione della voce in spesa %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT 
	isnull(currentprev,0)+
	ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	]{V}
,0)
- 
[(SELECT ISNULL(totalcompetency, 0) + 
ISNULL(totalarrears, 0) 
from upbexpensetotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and nphase = %<sys_expensefinphase>%)]{V} 
+ 
ISNULL(&<expensevar.amount>&, 0) 
- 
ISNULL(%<expensevar.amount>%, 0) >= 0
or
[select nphase from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_expensefinphase>%
or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL
or
%<expensevar.amount>%<&<expensevar.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA004','1','U','expensevar','N','S','N','N','N',{ts '2013-05-21 10:48:32.133'},'sa','La previsione della voce in spesa  di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>% è INSUFFICIENTE!','S','%<expensevar.idunderwriting>% is null
OR

ISNULL(
	[SELECT 
	isnull(currentprev,0)+
	ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	]{V}
,0)
- 
[(SELECT ISNULL(totalcompetency, 0) + 
ISNULL(totalarrears, 0) 
from underwritingexpensetotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	and nphase = %<sys_expensefinphase>%)]{V} 
+ 
ISNULL(&<expensevar.amount>&, 0) 
- 
ISNULL(%<expensevar.amount>%, 0) >= 0
or
[select nphase from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_expensefinphase>%
or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL
or
%<expensevar.amount>%<&<expensevar.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','U','expensevar','S','S','S','N','N',{ts '2007-12-14 13:55:03.887'},'NINO','La variazione al movimento di spesa %<expenseview.phase>% n. %<expenseview.nmov>% / %<expenseview.ymov>% non può essere modificata. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE003','1','U','expensevar','S','N','S','N','N',{ts '2007-09-28 09:55:44.233'},'NINO','La previsione di competenza della voce in spesa %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
		]{V}
,0)
- 
isnull([SELECT totalcompetency 
from upbexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
	[SELECT idupb
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{C}
and nphase = %<sys_expensefinphase>%]{V} 
,0)
+ 
ISNULL(&<expensevar.amount>&, 0)
- 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_expensefinphase>%)
or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<&<expensevar.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE010','1','U','expensevar','S','N','S','N','N',{ts '2013-05-21 10:55:47.987'},'sa','La previsione di competenza spesa di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>% è INSUFFICIENTE!','S','%<expensevar.idunderwriting>% is null
OR
ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
		]{V}
,0)
- 
isnull([SELECT totalcompetency 
from underwritingexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
	[SELECT idupb
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{C}
and idunderwriting = %<expensevar.idunderwriting>%
and nphase = %<sys_expensefinphase>%]{V} 
,0)
+ 
ISNULL(&<expensevar.amount>&, 0)
- 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_expensefinphase>%)
or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<&<expensevar.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN005','1','U','expensevar','S','S','S','N','N',{ts '2008-03-21 13:15:53.610'},'SA','Il movimento di spesa non è stato interamente classificato secondo una classificazione obbligatoria','N','--post
(
[SELECT COUNT(*) FROM sortingkind T
WHERE T.nphaseexpense = [SELECT nphase FROM expense 
                        WHERE  idexp = %<expensevar.idexp>%]{I}
AND (T.flag&1) <> 0
AND %<sys_esercizio>% between ISNULL(T.start,1900) AND ISNULL(T.stop,2099)  
AND
(
	ISNULL(
		(SELECT ISNULL(SUM(I.amount),0)
		FROM expensesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind= T.idsorkind
		AND I.idexp= %<expensevar.idexp>%
		AND I.ayear=%<expensevar.yvar>%)
	,0)
	<
	[SELECT curramount FROM expensetotal
	WHERE idexp= %<expensevar.idexp>% AND ayear=%<expensevar.yvar>%]{V}
)
]{I} = 0
)
OR
(ISNULL(%<expensevar.amount>%,0)= ISNULL(&<expensevar.amount>&,0))
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI002','1','U','expensevar','S','N','S','S','N',{ts '2007-09-06 13:52:28.797'},'NINO','La dotazione crediti della voce %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}

	]{V}
,0)
- 
isnull(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = 
	[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and nphase = %<sys_expensefinphase>%
	]{V} 
,0)
+ 
ISNULL(&<expensevar.amount>&, 0)
- 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<>%<sys_expensefinphase>%)
or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<&<expensevar.amount>&
or
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI007','1','U','expensevar','S','N','S','S','N',{ts '2013-05-21 09:55:26.093'},'sa','La dotazione crediti di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>% è INSUFFICIENTE!','S','%<expensevar.idunderwriting>% is null
OR

ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	]{V}
,0)
- 
isnull(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = 
	[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	and nphase = %<sys_expensefinphase>%
	]{V} 
,0)
+ 
ISNULL(&<expensevar.amount>&, 0)
- 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<>%<sys_expensefinphase>%)
or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<&<expensevar.amount>&
or
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DIPEN004','1','U','expensevar','S','S','S','N','N',{ts '2007-08-29 11:21:36.813'},'NINO','L''importo lordo del contratto dipendente è minore dei movimenti di spesa che lo contabilizzano','N','--post
(
[SELECT ISNULL(AVG(residual),0)
FROM wageadditionresidual
JOIN expensewageaddition 
ON wageadditionresidual.ncon = expensewageaddition.ncon
AND wageadditionresidual.ycon = expensewageaddition.ycon
WHERE expensewageaddition.idexp = %<expensevar.idexp>%]{V}
>=0)
or
(%<expensevar.amount>% = 0)
OR
ISNULL(%<expensevar.autokind>%,0) = 4')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO009','1','U','expensevar','S','N','S','N','N',{ts '2007-09-27 19:56:25.467'},'NINO','La previsione della voce in spesa  %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
		]{V}
,0)
- 
isnull([SELECT totalcompetency
from upbexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
	[SELECT idupb
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{C}
and nphase = %<sys_expensefinphase>%]{V} ,0)
-
ISNULL(
	[SELECT sum(amount) 
	from pettycashoperation 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
	[SELECT idupb
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{C}
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
,0) 
+ 
ISNULL(&<expensevar.amount>&, 0)
- 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_expensefinphase>%)
or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<&<expensevar.amount>&




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO010','1','U','expensevar','N','S','N','N','N',{ts '2007-09-27 19:56:44.390'},'NINO','La previsione della voce in spesa  %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
		]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears,0)   
from upbexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
	[SELECT idupb
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{C}
and nphase = %<sys_expensefinphase>%]{V} 
,0)
-
ISNULL(
	[SELECT sum(amount)
	from pettycashoperation 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
	[SELECT idupb
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{C}
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
,0) 
+ 
ISNULL(&<expensevar.amount>&, 0)
- 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_expensefinphase>%)
or 
[SELECT idfin 
from expenseyear 
where idexp = %<expensevar.idexp>% 
and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
%<expensevar.amount>%<&<expensevar.amount>&




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO011','2','U','expensevar','S','N','S','S','N',{ts '2007-09-27 19:57:04.657'},'NINO','La dotazione crediti della voce  %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}

	]{V}
,0)
- 
isnull(
	[SELECT totalcompetency
	from upbexpensetotal 
	where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and nphase = %<sys_expensefinphase>%
	]{V} 
,0)
-
ISNULL(
	[SELECT sum(amount)
	from pettycashoperation 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
 ,0)
+ 
ISNULL(&<expensevar.amount>&, 0)
- 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I} <> %<sys_expensefinphase>%)
or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<&<expensevar.amount>&
or
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO012','1','U','expensevar','S','S','S','N','S',{ts '2007-09-27 19:57:40.517'},'NINO','La dotazione incassi della voce  %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}

	]{V}
,0)
- 
isnull(
	[SELECT ISNULL(totalcompetency, 0)+isnull(totalarrears,0) 
	from upbexpensetotal 
	where idfin = 
		[SELECT idfin from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and nphase = %<sys_maxexpensephase>%
	]{V}
,0)
-
ISNULL(
	[SELECT sum(amount) 
	from pettycashoperation 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
 ,0)
+ 
[ISNULL(&<expensevar.amount>&, 0)] 
- 
[ISNULL(%<expensevar.amount>%, 0)] >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<>%<sys_maxexpensephase>%)
or
[SELECT idfin 
from expenseyear 
where idexp = %<expensevar.idexp>% 
and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<&<expensevar.amount>&
or
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO020','1','U','expensevar','S','N','N','N','N',{ts '2007-09-27 19:57:54.860'},'NINO','La previsione della voce di spesa è inferiore alle righe di mandato','S','ISNULL(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) + ISNULL(totalarrears,0) 
	from upbexpensetotal 
	where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and nphase = %<sys_maxexpensephase>%]{V} ,0)
	-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	AND yrestore IS NULL
	AND nrestore IS NULL]{V}
	,0)
- 
ISNULL(%<expensevar.amount>%, 0) 
+
ISNULL(&<expensevar.amount>&, 0) 
 >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_maxexpensephase>%)
OR 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
%<expensevar.amount>%<&<expensevar.amount>&
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO022','1','U','expensevar','S','S','S','N','N',{ts '2007-09-27 19:48:43.267'},'NINO','L''importo attuale del movimento %<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>% è minore dell''importo attuale dei movimenti dipendenti','S','ISNULL([(SELECT available
from expensetotal 
where idexp = %<expensevar.idexp>% 
and ayear = %<sys_esercizio>%)]{V} , 0) 
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = %<expensevar.idexp>%
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(c.curramount)
	FROM pettycashexpense a
	JOIN expense b
	ON b.idexp = a.idexp
	JOIN expensetotal c
	ON b.idexp = c.idexp
	AND a.yoperation = c.ayear
	WHERE b.parentidexp = %<expensevar.idexp>%]{V}
,0)
- 
&<expensevar.amount>&
+ 
%<expensevar.amount>%
>= 0 
or 
[(SELECT count(*) from expense where parentidexp = %<expensevar.idexp>%)]{V} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO022','2','U','expensevar','S','S','S','N','N',{ts '2007-09-27 19:58:23.407'},'NINO','L''importo attuale dei movimenti di spesa della fase %<expenseview.phase>% è maggiore dell''importo attuale del movimento della fase precedente','S','[(SELECT nphase from expense where idexp = %<expensevar.idexp>%)]{I} = 1
or 
ISNULL([(SELECT available
from expensetotal 
join expense 
on expensetotal.idexp = expense.parentidexp 
and expensetotal.ayear = %<expensevar.yvar>% 
where expense.idexp = %<expensevar.idexp>%)]{V} , 0) 
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = 
		[SELECT parentidexp
		FROM expense
		WHERE idexp = %<expensevar.idexp>%]{I}
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(c.curramount)
	FROM pettycashexpense a
	JOIN expense b
	ON b.idexp = a.idexp
	JOIN expensetotal c
	ON b.idexp = c.idexp
	AND a.yoperation = c.ayear
	WHERE b.parentidexp = 
		[SELECT parentidexp
		FROM expense
		WHERE idexp = %<expensevar.idexp>%]{I}
	]{V}
,0)
+ 
&<expensevar.amount>&
- 
%<expensevar.amount>%
>= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO023','1','U','expensevar','S','S','S','N','N',{ts '2009-06-04 09:17:30.620'},'SA','Non può essere modificato l''importo di una variazione di spesa sul movimento %<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>% in quanto la disponibilità negli anni successivi diventa negativa','N','([SELECT COUNT(*)
FROM expensetotal
WHERE idexp = %<expensevar.idexp>%
AND ayear > %<expensevar.yvar>%]{V} = 0)
OR
(ISNULL([SELECT MIN(available)
FROM expensetotal
WHERE idexp = %<expensevar.idexp>%
AND ayear > %<expensevar.yvar>%]{V},0)
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = %<expensevar.idexp>%
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(c.curramount)
	FROM pettycashexpense a
	JOIN expense b
	ON b.idexp = a.idexp
	JOIN expensetotal c
	ON b.idexp = c.idexp
	AND a.yoperation = c.ayear
	WHERE b.parentidexp = %<expensevar.idexp>%]{V}
,0)
/* - (&<expensevar.amount>& - %<expensevar.amount>%)  */
>= 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO023','2','U','expensevar','S','S','S','N','N',{ts '2009-06-04 09:17:41.557'},'SA','Non può essere modificato l''importo della variazione di spesa sul movimento %<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>% in quanto la disponibilità del movimento della fase precedente negli anni successivi diventa negativa','N','([SELECT COUNT(*)
FROM expensetotal
WHERE idexp = 
	[SELECT parentidexp
	FROM expense
	WHERE idexp = %<expensevar.idexp>%]{I}
AND ayear > %<expensevar.yvar>%]{V} = 0)

OR

(ISNULL([SELECT min(available)
from expensetotal 
join expense 
on expensetotal.idexp = expense.parentidexp 
and expensetotal.ayear > %<expensevar.yvar>% 
where expense.idexp = %<expensevar.idexp>%]{V}, 0) 
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = 
		[SELECT parentidexp
		FROM expense
		WHERE idexp = %<expensevar.idexp>%]{I}
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(c.curramount)
	FROM pettycashexpense a
	JOIN expense b
	ON b.idexp = a.idexp
	JOIN expensetotal c
	ON b.idexp = c.idexp
	AND a.yoperation = c.ayear
	WHERE b.parentidexp = 
		[SELECT parentidexp
		FROM expense
		WHERE idexp = %<expensevar.idexp>%]{I}
	]{V}
,0)
 /* + (&<expensevar.amount>& - %<expensevar.amount>%) */
>= 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO034','2','U','expensevar','S','N','S','S','N',{ts '2013-06-19 12:32:37.867'},'assistenza','La dotazione crediti di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>% è INSUFFICIENTE!','S','%<expensevar.idunderwriting>% is null
OR
ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting =  %<expensevar.idunderwriting>%
	]{V}
,0)
- 
isnull(
	[SELECT totalcompetency
	from underwritingexpensetotal 
	where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	and nphase = %<sys_expensefinphase>%
	]{V} 
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and PO.idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and POU.idunderwriting =  %<expensevar.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
 ,0)
+ 
ISNULL(&<expensevar.amount>&, 0)
- 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I} <> %<sys_expensefinphase>%)
or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<&<expensevar.amount>&
or
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO035','2','U','expensevar','S','S','S','N','S',{ts '2013-06-19 12:39:55.577'},'assistenza','La dotazione incassi di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>% è INSUFFICIENTE!','S','%<expensevar.idunderwriting>% is null
OR
ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	]{V}
,0)
- 
isnull(
	[SELECT isnull(totalcompetency,0) +ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%
	]{V} 
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and PO.idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
 ,0)
+ 
ISNULL(&<expensevar.amount>&, 0)
- 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I} <> %<sys_maxexpensephase>%)
or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<&<expensevar.amount>&
or
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO036','1','U','expensevar','S','N','S','N','N',{ts '2013-05-21 10:57:27.590'},'sa','La previsione della voce in spesa di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>%  è INSUFFICIENTE!','S','%<expensevar.idunderwriting>% is null
OR


ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
		]{V}
,0)
- 
isnull([SELECT totalcompetency
from underwritingexpensetotal 
where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
	[SELECT idupb
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
and nphase = %<sys_expensefinphase>%]{V} ,0)
-
ISNULL(
	[SELECT sum(POU.amount) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and PO.idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and POU.idunderwriting = %<expensevar.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
,0) 
+ 
ISNULL(&<expensevar.amount>&, 0)
- 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_expensefinphase>%)
or 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<&<expensevar.amount>&




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO037','1','U','expensevar','N','S','N','N','N',{ts '2013-05-21 10:58:47.137'},'sa','La previsione della voce in spesa di Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>%  è INSUFFICIENTE!','S','
%<expensevar.idunderwriting>% is null
OR
ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
		]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears,0)   
from underwritingexpensetotal 
where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V} 
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and PO.idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and POU.idunderwriting = %<expensevar.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V},0) 
+ 
ISNULL(&<expensevar.amount>&, 0)
- 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_expensefinphase>%)
or 
[SELECT idfin 
from expenseyear 
where idexp = %<expensevar.idexp>% 
and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
%<expensevar.amount>%<&<expensevar.amount>&




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO038','1','U','expensevar','S','N','N','N','N',{ts '2013-05-21 10:59:25.577'},'sa','La previsione della voce di spesa Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>% è inferiore alle righe di mandato ','S','
%<expensevar.idunderwriting>% is null
OR
ISNULL(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) + ISNULL(totalarrears,0) 
	from underwritingexpensetotal 
	where idfin = 
	[SELECT idfin 
	from expenseyear 
	where idexp = %<expensevar.idexp>% 
	and ayear = %<expensevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and idunderwriting = %<expensevar.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%]{V} ,0)
	-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and PO.idupb=
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and POU.idunderwriting = %<expensevar.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
	,0)
- 
ISNULL(%<expensevar.amount>%, 0) 
+
ISNULL(&<expensevar.amount>&, 0) 
 >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_maxexpensephase>%)
OR 
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
%<expensevar.amount>%<&<expensevar.amount>&
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA001','1','U','expensevar','S','S','S','N','N',{ts '2007-04-13 10:40:21.377'},'''SA''','L''importo del documento IVA è minore dei movimenti di spesa che lo contabilizzano','N','(
ISNULL(
	[SELECT ISNULL(AVG(residual),0)
	FROM invoiceavailable
	WHERE idinvkind = %<expensevar.idinvkind>%
	AND ninv = %<expensevar.ninv>%
	AND yinv = %<expensevar.yinv>%]{N}
,0)
>= 0)
OR
(&<expensevar.amount>& >= %<expensevar.amount>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA009','1','U','expensevar','S','S','S','N','N',{ts '2013-04-17 09:56:12.147'},'sara','La variazione deve contabilizzare un documento IVA.','N','(ISNULL(%<expensevar.autokind>%,0) = 10)
OR
(ISNULL(%<expensevar.autokind>%,0) = 11)
OR
(ISNULL(%<expensevar.autokind>%,0) = 22)
OR
(
	ISNULL(%<expensevar.autokind>%,0) = 
	ISNULL(&<expensevar.autokind>&,0)
)
OR
(
	[SELECT COUNT(*) FROM expenseinvoice 
	WHERE idexp = %<expensevar.idexp>%]{I}= 0
)
OR
%<expensevar.idinvkind>% IS NOT NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA019','1','U','expensevar','S','S','S','N','N',{ts '2009-09-16 12:30:14.390'},'SARA','L''importo della variazione che contabilizza il documento  %<expensevar.ninv>% / %<expensevar.yinv>% non può essere diverso dalla somma dei dettagli associati.','N','-- docum

ISNULL(%<expensevar.movkind>%,0) <> 1
OR

(ISNULL(%<expensevar.amount>%,0)= ISNULL(&<expensevar.amount>&,0))

OR
[(select isnull(sum(invoicedetailview.rowtotal), 0)  
from invoicedetailview
where  invoicedetailview.idinvkind =%<expensevar.idinvkind>%
and invoicedetailview.yinv = %<expensevar.yinv>%
and invoicedetailview.ninv = %<expensevar.ninv>%
and invoicedetailview.idexp_taxable = %<expensevar.idexp>%
and invoicedetailview.idexp_iva = %<expensevar.idexp>%
)]{V}
=
-
%<expensevar.amount>%



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA019','2','U','expensevar','S','S','S','N','N',{ts '2009-09-16 12:30:42.860'},'SARA','L''importo della variazione che contabilizza il documento  %<expensevar.ninv>% / %<expensevar.yinv>% non può essere diverso dalla somma dei dettagli associati.','N','-- impon
ISNULL(%<expensevar.movkind>%,0) <> 3
OR

(ISNULL(%<expensevar.amount>%,0)= ISNULL(&<expensevar.amount>&,0))

OR
[(select isnull(sum(invoicedetailview.taxable_euro), 0)  
from invoicedetailview
where  invoicedetailview.idinvkind =%<expensevar.idinvkind>%
and invoicedetailview.yinv = %<expensevar.yinv>%
and invoicedetailview.ninv = %<expensevar.ninv>%
and invoicedetailview.idexp_taxable = %<expensevar.idexp>%
)]{V}
=
-
%<expensevar.amount>%




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA019','3','U','expensevar','S','S','S','N','N',{ts '2009-09-16 12:30:53.767'},'SARA','L''importo della variazione che contabilizza il documento  %<expensevar.ninv>% / %<expensevar.yinv>% non può essere diverso dalla somma dei dettagli associati.','N','-- impos

ISNULL(%<expensevar.movkind>%,0) <> 2
OR

(ISNULL(%<expensevar.amount>%,0)= ISNULL(&<expensevar.amount>&,0))

OR

[(select isnull(sum(invoicedetailview.iva_euro), 0)  
from invoicedetailview
where  invoicedetailview.idinvkind =%<expensevar.idinvkind>%
and invoicedetailview.yinv = %<expensevar.yinv>%
and invoicedetailview.ninv = %<expensevar.ninv>%
and invoicedetailview.idexp_iva = %<expensevar.idexp>%
)]{V}
=
-
%<expensevar.amount>%



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA021','1','U','expensevar','S','S','S','S','S',{ts '2007-08-29 11:32:07.563'},'NINO','La variazione inserita non può contabilizzare una nota di credito ed essere anche di annullamento','S','(%<expensevar.idinvkind>% IS NULL)
OR
(ISNULL(%<expensevar.autokind>%,0) NOT IN (10,11))
OR
ISNULL(%<expensevar.autokind>%,0) = ISNULL(&<expensevar.autokind>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS002','1','U','expensevar','S','S','S','N','S',{ts '2007-09-06 13:54:30.813'},'NINO','La dotazione incassi della voce %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}

	]{V}
,0)
- 
isnull(
	[SELECT ISNULL(totalcompetency, 0)+isnull(totalarrears,0) 
	from upbexpensetotal 
	where idfin = 
		[SELECT idfin 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
	and nphase = %<sys_maxexpensephase>%
	]{V}
,0)
+ 
ISNULL(&<expensevar.amount>&, 0) 
- 
ISNULL(%<expensevar.amount>%, 0) >= 0 
or
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<>%<sys_maxexpensephase>%)
or
[SELECT idfin from expenseyear where idexp = %<expensevar.idexp>% and ayear = %<expensevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} <> %<sys_esercizio>%
or
%<expensevar.amount>%<&<expensevar.amount>&
OR
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		where idexp = %<expensevar.idexp>% 
		and ayear = %<expensevar.yvar>%]{C}
]{C}
= ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM003','1','U','expensevar','S','S','S','N','N',{ts '2009-02-02 13:08:17.497'},'ASSISTENZA','L''importo attuale del movimento %<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>% è minore dell''importo attuale dei movimenti dipendenti','N','ISNULL([(SELECT available from expensetotal
 where idexp = %<expensevar.idexp>% 
and ayear = %<sys_esercizio>%)]{V} , 0)
>= 0 
or 
[(SELECT count(*) from expense where parentidexp = %<expensevar.idexp>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM003','2','U','expensevar','S','S','S','N','N',{ts '2009-02-02 13:10:34.483'},'ASSISTENZA','L''importo attuale dei movimenti di spesa della fase %<expenseview.phase>% è maggiore dell''importo attuale del movimento della fase precedente','N','[(SELECT nphase from expense where idexp = %<expensevar.idexp>%)]{I} = 1
or 
ISNULL([(SELECT expensetotal.available 
from expensetotal 
join expense 
on expensetotal.idexp = expense.parentidexp 
and expensetotal.ayear = %<expensevar.yvar>% 
where expense.idexp = %<expensevar.idexp>%)]{V} , 0)
>= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM004','1','U','expensevar','S','S','S','N','N',{ts '2010-02-18 10:21:21.110'},'SA','L''importo attuale del movimento di spesa %<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>% è NEGATIVO','N','[(SELECT MIN(ISNULL(curramount, 0)) 
from expensetotal 
where idexp = %<expensevar.idexp>%)]{V} 
 >= 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM004','2','U','expensevar','S','S','S','N','N',{ts '2010-02-22 10:46:11.983'},'SARA','L''importo attuale del movimento di spesa %<expenseview.nmov>% del %<expenseview.ymov>% in anni successivi  diventa NEGATIVO','S','%<expensevar.amount>%>0
OR
[(SELECT MIN(ISNULL(curramount, 0) 
- ISNULL(&<expensevar.amount>&,0)
+  ISNULL(%<expensevar.amount>%,0))
from   expensetotal 
where idexp = %<expensevar.idexp>%
and    ayear > %<expensevar.yvar>%)]{V} 
>= 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM007','1','U','expensevar','S','S','S','N','N',{ts '2011-09-15 12:24:09.640'},'sara','L''importo della variazione relativa al movimento finanziario di spesa %<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>% non può essere modificato in quanto il movimento è già incluso nel mandato di pagamento %<expenseview.ypay>% %<expenseview.npay>% .','S','(
ISNULL([SELECT payment.kpaymenttransmission 
FROM expenselast 
JOIN payment 
	ON  payment.kpay = expenselast.kpay 
WHERE expenselast.idexp = %<expensevar.idexp>%]{I},0)=0
)
OR
(ISNULL([SELECT kpay FROM  expenselast 
	WHERE idexp = %<expensevar.idexp>%]{I} ,0)=0)
OR 
(%<expensevar.amount>%=&<expensevar.amount>&)
OR
(%<expensevar.autokind>% in (10,11,12,22))
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'')= ''S'')
AND
[(SELECT COUNT(*)  FROM expensevar  
WHERE idexp = %<expensevar.idexp>%
AND nvar <> %<expensevar.nvar>%
AND kpaymenttransmission IS NULL
AND autokind = 22)]{I} <> 0
AND
-- unicredit non permette le variazioni di dati contabili ma solo del Siope
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM expenselast
JOIN payment 
	ON payment.kpay = expenselast.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},'''' ) <> ''02008''
)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM016','1','U','expensevar','S','S','S','N','N',{ts '2007-11-27 10:23:00.780'},'SARA','Le classificazioni associate al movimento di spesa n. %<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>%sono superiori rispetto all''importo dello stesso','N','--post
(
[SELECT curramount FROM expensetotal
WHERE idexp= %<expensevar.idexp>% 
AND ayear= %<expensevar.yvar>%]{V}
>=
[ISNULL(
	(SELECT TOP 1 SUM(I.amount)
	FROM expensesorted I
	JOIN sorting S
		ON I.idsor = S.idsor
	WHERE I.idexp = %<expensevar.idexp>%
	AND I.ayear = %<sys_esercizio>%
	GROUP BY S.idsorkind,I.idexp 
	ORDER BY SUM(I.amount) DESC)
,0)]{V}
)
OR
(&<expensevar.amount>& < %<expensevar.amount>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM020','1','U','expensevar','S','S','S','N','N',{ts '2009-06-04 09:12:41.697'},'SA','Non può essere modificato l''importo di una variazione di spesa sul movimento %<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>% in quanto la disponibilità negli anni successivi diventa negativa','N','(
	[SELECT COUNT(*)
	FROM expensetotal
	WHERE idexp = %<expensevar.idexp>%
	AND ayear > %<expensevar.yvar>%]{I} = 0
)
OR
(
	(
		ISNULL([SELECT MIN(available)
		FROM expensetotal
		WHERE idexp = %<expensevar.idexp>%
		AND ayear > %<expensevar.yvar>%]{V},0)
		/*-  (&<expensevar.amount>& - %<expensevar.amount>%) */
	) >= 0
)
OR
(
	ISNULL(
		[SELECT MAX(ayear) FROM accountingyear WHERE ((flag&0x0F)>= 5)]{I}
	,%<sys_esercizio>%-1) < %<sys_esercizio>%
)
/* OR (&<expensevar.amount>& - %<expensevar.amount>%)<=0 */')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM020','2','U','expensevar','S','S','S','N','N',{ts '2009-06-04 09:13:04.417'},'SA','Non può essere modificato l''importo della variazione di spesa sul movimento %<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>% in quanto la disponibilità del movimento della fase precedente negli anni successivi diventa negativa','N','(
	[SELECT COUNT(*)
	FROM expensetotal
	WHERE idexp = [select parentidexp from expense where idexp=%<expensevar.idexp>%]{I}
	AND ayear > %<expensevar.yvar>%]{I} = 0
)
OR
(
	(
		ISNULL([SELECT MIN(available)
		FROM expensetotal
		WHERE idexp = [select parentidexp from expense where idexp=%<expensevar.idexp>%]{I}
		AND ayear > %<expensevar.yvar>%]{V},0)
		/*+ (&<expensevar.amount>& - %<expensevar.amount>%)*/
	)>= 0
)
OR
(
	ISNULL(
		[SELECT MAX(ayear) FROM accountingyear WHERE ((flag&0x0F)>= 5)]{I}
	,%<sys_esercizio>%-1) < %<sys_esercizio>%
)
/*OR  (&<expensevar.amount>& - %<expensevar.amount>%)>=0*/')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM021','1','U','expensevar','S','S','S','N','N',{ts '2007-08-29 12:39:11.593'},'NINO','FONDO DI CASSA INIZIALE + totale delle reversali trasmesse in banca deve essere maggiore od uguale al totale dei pagamenti (anche non inclusi in un mandato)','N','--post
[SELECT ISNULL(currentfloatfund,0) FROM currentcashtotal WHERE ayear = %<sys_esercizio>%]{V} >= 0
OR
([(SELECT nphase from expense where idexp = %<expensevar.idexp>%)]{I}<> %<sys_maxexpensephase>%)

OR
(&<expensevar.amount>& = %<expensevar.amount>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM025','1','U','expensevar','S','S','S','N','N',{ts '2011-09-15 16:29:14.343'},'sara','Non può essere modificata una variazione sul movimento di spesa %<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>% in quanto è inserito in un mandato di pagamento','N','--post
ISNULL([SELECT kpay FROM expenselast 
WHERE idexp = %<expensevar.idexp>%
]{I},0) = 0
OR
(
	%<expensevar.amount>%=&<expensevar.amount>&
)
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'')= ''S'')
AND
-- esiste una variazione speciale di modifica dati non ancora trasmessa
[(SELECT count(*)  from expensevar  
WHERE idexp = %<expensevar.idexp>%
AND nvar <> %<expensevar.nvar>%
AND kpaymenttransmission is null
AND autokind = 22)]{I} <> 0
AND
-- unicredit non permette le variazioni di dati contabili ma solo del Siope
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM expenselast
JOIN payment 
	ON payment.kpay = expenselast.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},'''' )<> ''02008''
)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM026','1','U','expensevar','S','N','S','N','N',{ts '2007-09-27 19:52:06.733'},'NINO','Non è possibile inserire una variazione POSITIVA sul movimento di spesa n.%<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>% perchè è un residuo','S','[SELECT flag & 1 from expensetotal 
where %<expensevar.idexp>% = expensetotal.idexp 
and expensetotal.ayear=%<sys_esercizio>%]{C} = 0
or
[SELECT ymov from expense where idexp = %<expensevar.idexp>%]{I} = %<sys_esercizio>%
or
%<expensevar.amount>% <= 0
or

([(SELECT nphase from expense where idexp = %<expensevar.idexp>%)]{I}<> 

 [SELECT appropriationphasecode FROM config where ayear =  %<sys_esercizio>%]{I}  ) 




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM031','1','U','expensevar','S','S','S','N','N',{ts '2013-06-11 16:53:59.853'},'assistenza','La  variazione di spesa modificata rende l''importo attuale del movimento %<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>%negativo o  minore della somma degli importi delle ritenute c/dipendente','N','--post
(
ISNULL(
[SELECT curramount FROM expensetotal
WHERE idexp = %<expensevar.idexp>%
AND ayear = %<expensevar.yvar>%]{V}
,0)
>=0
)
AND
(
(
ISNULL(
[SELECT curramount FROM expensetotal
WHERE idexp = %<expensevar.idexp>%
AND ayear = %<expensevar.yvar>%]{V}
,0)
>=
ISNULL(
[SELECT SUM(employtax)
FROM expensetax
WHERE idexp = %<expensevar.idexp>% ]{V}
,0)
+
ISNULL(
	[SELECT SUM(expensetaxcorrige.employamount	)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expensevar.idexp>%]{V}
,0)
)
OR
([SELECT nphase FROM expense WHERE idexp = %<expensevar.idexp>%]{I} <> %<sys_maxexpensephase>%)
)
OR
(
[SELECT COUNT(*)
FROM expensepayroll
JOIN expenselink
	ON expenselink.idparent = expensepayroll.idexp
WHERE expenselink.idchild = %<expensevar.idexp>%]{I} > 0
AND
[SELECT nphase FROM expense
WHERE idexp = %<expensevar.idexp>%]{I} = %<sys_maxexpensephase>%
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM038','1','U','expensevar','S','S','S','S','N',{ts '2009-01-20 12:31:24.323'},'SA','Il totale dell''accertato è inferiore al totale dell''impegnato per l''UPB scelto','S','[SELECT assured FROM upb
WHERE idupb = 
	[SELECT idupb FROM expenseyear
	WHERE idexp = %<expensevar.idexp>%
	AND ayear = %<expensevar.yvar>%]{C}
]{C} <> ''S''
OR
[SELECT nphase
FROM expense
WHERE idexp = %<expensevar.idexp>%]{I}
<> 
%<sys_appropriationphase>%
OR
ISNULL(
	[SELECT SUM(amount) FROM incomeyear
       join incometotal on incomeyear.idinc=incometotal.idinc AND
                           incomeyear.ayear=incometotal.ayear
       join income on income.idinc=incomeyear.idinc
	WHERE idupb = 
		[SELECT idupb FROM expenseyear
		WHERE idexp = %<expensevar.idexp>%
		AND ayear = %<expensevar.yvar>%]{C}
	AND income.nphase = %<sys_assessmentphase>%
	AND (incometotal.flag & 1)=0
        ]{V}
,0)
+
ISNULL(
	[SELECT SUM(incomevar.amount)
	FROM incomevar
	JOIN incomeyear
		ON incomevar.idinc = incomeyear.idinc
		AND incomeyear.ayear= %<expensevar.yvar>%
       join income on incomeyear.idinc=income.idinc
	WHERE incomevar.yvar <= %<sys_esercizio>%
	AND income.nphase = %<sys_assessmentphase>%
	AND incomeyear.idupb = 
		[SELECT idupb FROM expenseyear
		WHERE idexp = %<expensevar.idexp>%
		AND ayear = %<expensevar.yvar>%]{C}
]{V}
,0)

+
ISNULL(
	[SELECT ISNULL(previousassessment,0) - ISNULL(previousappropriation,0)
	FROM upb WHERE idupb = 
		[SELECT idupb FROM expenseyear
		WHERE idexp = %<expensevar.idexp>%
		AND ayear = %<expensevar.yvar>%]{C}
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(creditvariation)
	FROM upbtotal
	WHERE idupb = 
		[SELECT idupb FROM expenseyear
		WHERE idexp = %<expensevar.idexp>%
		AND ayear = %<expensevar.yvar>%]{C}
	]{V}
,0)
>=
ISNULL([SELECT SUM(amount)
FROM expenseyear
join expensetotal on  
          expensetotal.idexp=expenseyear.idexp AND
	    expensetotal.ayear=expenseyear.ayear
 join expense on expenseyear.idexp=expense.idexp


WHERE idupb =
 		[SELECT idupb FROM expenseyear
		WHERE idexp = %<expensevar.idexp>%
		AND ayear = %<expensevar.yvar>%]{C}
AND expense.nphase = %<sys_appropriationphase>%
AND (expensetotal.flag & 1)=0
]{V},0)
+
ISNULL([SELECT SUM(expensevar.amount) FROM expensevar
JOIN expenseyear
	ON expensevar.idexp = expenseyear.idexp
	AND expenseyear.ayear= %<expensevar.yvar>%
 join expense on expenseyear.idexp=expense.idexp
WHERE expensevar.yvar <= %<sys_esercizio>%
AND expense.nphase = %<sys_appropriationphase>%
AND expenseyear.idupb = 
	[SELECT idupb FROM expenseyear
	WHERE idexp = %<expensevar.idexp>%
	AND ayear = %<expensevar.yvar>%]{C}
]{V}
,0)
- &<expensevar.amount>&
+ %<expensevar.amount>%
OR 
%<expensevar.amount>% <= &<expensevar.amount>&

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM047','1','U','expensevar','S','S','S','N','N',{ts '2007-09-06 14:03:07.937'},'NINO','Non può essere modificata una variazione al mov. di spesa %<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>%  in quanto tale mov. contabilizza un cedolino ed è stato portato a pagamento','S','[SELECT COUNT(*) FROM expensepayroll
 join expenselink on expensepayroll.idexp=expenselink.idparent
WHERE expenselink.idchild = %<expensevar.idexp>%
]{I}= 0
OR

[SELECT COUNT(*) FROM expenselast 
 join expenselink ON  expenselink.idchild= expenselast.idexp
WHERE expenselink.idparent = %<expensevar.idexp>% 
]{I} = 0
OR 
%<expensevar.autokind>% IS NOT NULL
OR 
%<expensevar.amount>% = &<expensevar.amount>&



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM047','2','U','expensevar','S','S','S','N','N',{ts '2007-09-06 14:03:18.093'},'NINO','Non può essere modificata una variazione al mov. di spesa%<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>% in quanto tale mov. contabilizza una prestazione occasionale ed è stato portato a pagamento','S','

[SELECT COUNT(*) FROM expensecasualcontract
 join expenselink on expensecasualcontract.idexp=expenselink.idparent
WHERE expenselink.idchild = %<expensevar.idexp>%
]{I}= 0
OR

[SELECT COUNT(*) FROM expenselast 
 join expenselink ON  expenselink.idchild= expenselast.idexp
WHERE expenselink.idparent = %<expensevar.idexp>% 
]{I} = 0
OR 
%<expensevar.autokind>% IS NOT NULL
OR 
%<expensevar.amount>% = &<expensevar.amount>&



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM047','3','U','expensevar','S','S','S','N','N',{ts '2007-12-12 11:36:10.000'},'PINO','Non può essere modificata una variazione al mov. di spesa %<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>% in quanto tale mov. contabilizza una prestazione professionale ed è stato portato a pagamento','S','
[SELECT COUNT(*) FROM expenseprofservice
 join expenselink on expenseprofservice.idexp=expenselink.idparent
WHERE expenselink.idchild = %<expensevar.idexp>%
AND movkind IN (1,3)
]{I}= 0
OR

[SELECT COUNT(*) FROM expenselast 
 join expenselink ON  expenselink.idchild= expenselast.idexp
WHERE expenselink.idparent = %<expensevar.idexp>% 
]{I} = 0
OR 
%<expensevar.autokind>% IS NOT NULL
OR 
%<expensevar.amount>% = &<expensevar.amount>&


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM047','4','U','expensevar','S','S','S','N','N',{ts '2007-09-06 14:15:52.780'},'NINO','Non può essere modificata una variazione al mov. di spesa %<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>% in quanto tale mov. contabilizza una prestazione dipendente ed è stato portato a pagamento','S','


[SELECT COUNT(*) FROM expensewageaddition
 join expenselink on expensewageaddition.idexp=expenselink.idparent
WHERE expenselink.idchild = %<expensevar.idexp>%
]{I}= 0
OR

[SELECT COUNT(*) FROM expenselast 
 join expenselink ON  expenselink.idchild= expenselast.idexp
WHERE expenselink.idparent = %<expensevar.idexp>% 
]{I} = 0
OR 
%<expensevar.autokind>% IS NOT NULL
OR 
%<expensevar.amount>% = &<expensevar.amount>&



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM047','5','U','expensevar','S','S','S','N','N',{ts '2007-12-04 14:36:01.907'},'pino','Non può essere modificata una variazione al mov. di spesa %<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>% in quanto tale mov. contabilizza una missione ed è stato portato a pagamento','S','
[SELECT COUNT(*) FROM expenseitineration
 join expenselink on expenseitineration.idexp=expenselink.idparent
WHERE expenselink.idchild = %<expensevar.idexp>%
AND movkind = 4
]{I}= 0
OR

[SELECT COUNT(*) FROM expenselast 
 join expenselink ON  expenselink.idchild= expenselast.idexp
WHERE expenselink.idparent = %<expensevar.idexp>% 
]{I} = 0
OR 
%<expensevar.autokind>% IS NOT NULL
OR 
%<expensevar.amount>% = &<expensevar.amount>&




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM053','1','U','expensevar','S','S','S','N','N',{ts '2007-08-29 12:03:00.047'},'NINO','Non si può modificare l''importo di una variazione di spesa creata tramite la procedura automatica Azzeramento Riporti.','S','ISNULL(%<expensevar.autokind>%,0)<> 9
OR
ISNULL(%<expensevar.amount>%,0)=ISNULL(&<expensevar.amount>&,0)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM066','1','U','expensevar','S','S','S','N','N',{ts '2013-03-22 14:35:43.863'},'sa','Deve essere ricalcolata la situazione finanziaria effettiva nell''esercizio precedente poiché non risulta allineata con i movimenti finanziari effettivamente inseriti','N','(%<expensevar.amount>% = &<expensevar.amount>&)
OR
(
[SELECT nphase FROM expense 
 WHERE  expense.idexp = %<expensevar.idexp>%]{I}
< %<sys_maxexpensephase>%)
OR
([(SELECT COUNT(*) 
  FROM currentcashtotal 
  WHERE ayear = (%<sys_esercizio>% - 1))]{I} = 0)
OR
([SELECT  ISNULL(startfloatfund,0)  
   FROM surplus WHERE ayear = %<sys_esercizio>% ]{V}
= 
[SELECT ISNULL(currentfloatfund,0) 
   FROM currentcashtotal 
  WHERE ayear = (%<sys_esercizio>% - 1)]{V}
)
OR
(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = (%<sys_esercizio>%-1)]{I}
,0) & 0x0F)<4
OR
(ISNULL(
	[select locked from surplus where ayear = (%<sys_esercizio>% - 1)]{C},
	''N'') = ''S''
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM095','1','U','expensevar','S','S','S','N','N',{ts '2012-11-09 15:30:12.447'},'sa','La variazione n.%<expensevar.nvar>% deve avere lo stesso Cassiere del relativo pagamento.','N','%<expensevar.kpaymenttransmission>% IS NULL
OR
(
	[SELECT idtreasurer FROM paymenttransmission 
	WHERE  paymenttransmission.kpaymenttransmission =  
	ISNULL(%<expensevar.kpaymenttransmission>%,0) ]{I}
	=
	[SELECT payment.idtreasurer FROM payment
	JOIN expenselast
		ON expenselast.kpay = payment.kpay
	WHERE  expenselast.idexp  =  ISNULL(%<expensevar.idexp>%,0) ]{I}
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','1','U','expensevar','S','S','S','N','N',{ts '2011-07-28 10:33:19.017'},'sara','Nella gestione dell''ordinativo informatico non è possibile modificare variazioni di annullo e variazioni dati già trasmesse, bisogna prima rimuoverle dall''elenco.','N','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'' )= ''N'')
)
OR 
--2)non viene variato l''importo
ISNULL(%<expensevar.amount>%,0)=ISNULL(&<expensevar.amount>&,0)   
OR
-- 3) le variazioni sono di tipo normale
ISNULL(%<expensevar.autokind>%,0) NOT IN (10,11,22)
OR
-- 4) la fase della variazione è inferiore alla fase massima
[SELECT nphase FROM expense
 WHERE expense.idexp = %<expensevar.idexp>%
]{I} < %<sys_maxexpensephase>%
OR
-- 5) le variazioni non sono state trasmesse
%<expensevar.kpaymenttransmission>% IS NULL





 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','2','U','expensevar','S','S','S','N','N',{ts '2012-10-01 15:51:41.183'},'sa','Nella gestione dell''ordinativo informatico non è possibile inserire nello stesso elenco di trasmissione variazioni di annullo e variazioni dati  dello stesso movimento finanziario.','N','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'' )= ''N'')
)
OR 
--2)non viene variato kpaymenttransssion
ISNULL(%<expensevar.kpaymenttransmission>%,0)=ISNULL(&<expensevar.kpaymenttransmission>&,0)   
OR
-- 3) le variazioni sono di tipo normale
ISNULL(%<expensevar.autokind>%,0) NOT IN (10,11,22)
OR
-- 4) la fase della variazione è inferiore alla fase massima
[SELECT nphase FROM expense
 WHERE expense.idexp = %<expensevar.idexp>%
]{I} < %<sys_maxexpensephase>%
OR
-- 5) l''elenco non contiene variaizoni di altro tipo riferite allo stesso mandato
ISNULL([
SELECT COUNT(*) FROM expensevar EV
WHERE EV.idexp=%<expensevar.idexp>%
AND EV.autokind <> %<expensevar.autokind>%
AND ISNULL(%<expensevar.autokind>%,0) IN (10,11,22)
AND EV.kpaymenttransmission = %<expensevar.kpaymenttransmission>% 
]{I} ,0) = 0





 ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','3','U','expensevar','S','S','S','N','N',{ts '2011-09-19 12:56:19.890'},'sara','Al di fuori della gestione dell''ordinativo informatico non è possibile inserire variazioni dati di documenti.','N','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast 
JOIN payment  
	ON expenselast.kpay = payment.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expensevar.idexp>%]{C},''N'' )= ''S'')
)
OR
-- 2) le variazioni non sono di tipo variazione dati
ISNULL(%<expensevar.autokind>%,0) <>22
-- 3)
OR
(
ISNULL(%<expensevar.autokind>%,0) = ISNULL(&<expensevar.autokind>&,0)
)





 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM107','1','U','expensevar','S','S','S','N','N',{ts '2012-11-15 11:34:08.423'},'sa','Saldo iniziale + Tot. reversali emesse + Girofondi in entrata deve essere maggiore od uguale al Tot. pagamenti emessi + Girofondi in uscita.','N','--post
(&<expensevar.amount>& = %<expensevar.amount>%)
OR
([select nphase from expense where idexp=%<expensevar.idexp>%]{I}<> %<sys_maxexpensephase>%)
OR
ISNULL([SELECT currentfloatfund 
FROM treasurercashtotal 
WHERE ayear = %<sys_esercizio>%
and idtreasurer =isnull([select idtreasurer from payment
			join expenselast 
				on payment.kpay= expenselast.kpay 
			where expenselast.idexp = %<expensevar.idexp>%]{I},0)
]{V},0) >= 0



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM109','1','U','expensevar','S','S','S','N','N',{ts '2013-02-07 13:05:42.433'},'sa','Il movimento di spesa non è stato interamente attribuito al/ai Fnanziamento/i.','N','[(SELECT nphase 
	FROM expense
	WHERE idexp = %<expensevar.idexp>%)]{I} 
<> %<sys_expensefinphase>%
OR

(ISNULL(%<expensevar.amount>%,0)= ISNULL(&<expensevar.amount>&,0))
OR
ISNULL(
	[(SELECT ISNULL(SUM(amount),0)
	FROM underwritingappropriation 
	WHERE idexp= %<expensevar.idexp>%)]{V}
	,0)
+
ISNULL (   [select SUM(amount) from expensevar where
		idexp=%<expensevar.idexp>%
		and
		idunderwriting is not null
                 ]{V},0)
	=
	ISNULL([SELECT curramount FROM expensetotal
	WHERE ayear = %<sys_esercizio>%  
	AND   idexp= %<expensevar.idexp>%]{V},0)
OR 
[SELECT assured 
FROM upb  
WHERE idupb = ([select idupb 
		from expenseyear
		where 	ayear = %<sys_esercizio>%
		and idexp=%<expensevar.idexp>%]{C})]{C} =''S'' 




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS003','1','U','expensevar','S','S','S','N','N',{ts '2007-08-29 12:03:15.280'},'NINO','L''importo lordo del contratto occasionale è minore dei movimenti di spesa che lo contabilizzano','N','--post
(
[SELECT ISNULL(AVG(residual),0)
FROM casualcontractresidual
JOIN expensecasualcontract 
ON casualcontractresidual.ncon = expensecasualcontract.ncon
AND casualcontractresidual.ycon = expensecasualcontract.ycon
WHERE expensecasualcontract.idexp = %<expensevar.idexp>%]{V}
>=0)
or
(%<expensevar.amount>% = 0)
OR
ISNULL(%<expensevar.autokind>%,0) = 4')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN001','1','U','expensevar','S','S','S','N','N',{ts '2007-03-21 11:28:56.187'},'''NINO''','L''importo del movimento di spesa  è diverso dalla somma dei dettagli del contratto passivo associati','N','--post
(
[SELECT COUNT(*) 
FROM  expensemandateview 
WHERE expensemandateview.idexp = %<expensevar.idexp>%
AND   ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)
AND   ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0
)
or
isnull(&<expensevar.amount>&,0) > isnull(%<expensevar.amount>%,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS013','1','U','expensevar','S','S','S','N','N',{ts '2007-09-01 11:39:14.063'},'NINO','L''importo del movimento di spesa deve essere identico a quello dell''impegno che contabilizza il cedolino','N','

(
[SELECT COUNT(*)
FROM expensepayroll
    join expenselink on expensepayroll.idexp=expenselink.idparent
WHERE expenselink.idchild =%<expensevar.idexp>%	
]{I} = 0
)
OR
(
[select amount from expenseyear EY 
	JOIN expense E on E.idexp=EY.idexp
			 AND E.ymov=EY.ayear
    where
     EY.idexp=  %<expensevar.idexp>% 
]{V}
+
ISNULL(
[SELECT SUM(amount) FROM expensevar
WHERE  idexp = %<expensevar.idexp>%
	AND ISNULL(autokind,0) <> 4
]{V},0)

 =
[SELECT EY.amount FROM expenseyear EY
   JOIN expense E on E.idexp=EY.idexp and
			   E.ymov=EY.ayear
   JOIN expenselink EL ON EY.idexp=EL.idparent
      
WHERE  EL.nlevel=%<sys_itinerationphase>%
	and EL.idchild = %<expensevar.idexp>%
]{V}
+
ISNULL(
[SELECT SUM(EV.amount) FROM expensevar EV
   JOIN expenselink EL ON EV.idexp=EL.idparent      
WHERE  EL.nlevel=%<sys_itinerationphase>%
	and EL.idchild = %<expensevar.idexp>%
	AND ISNULL(EV.autokind,0) <> 4
]{V}
,0)
)


OR
([select nphase from expense where idexp= %<expensevar.idexp>%]{I} < %<sys_itinerationphase>%)
OR
(%<expensevar.amount>% = &<expensevar.amount>&)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE002','1','U','expensevar','S','S','S','N','N',{ts '2007-08-29 12:10:54.577'},'NINO','L''importo lordo del contratto professionale è minore dei movimenti di spesa che lo contabilizzano','N','--post
(
[SELECT ISNULL(AVG(residual),0)
FROM profserviceresidual
JOIN expenseprofservice 
ON profserviceresidual.ncon = expenseprofservice.ncon
AND profserviceresidual.ycon = expenseprofservice.ycon
WHERE expenseprofservice.idexp = %<expensevar.idexp>%]{V}
>=0)
or
(%<expensevar.amount>% = 0)
OR
ISNULL(%<expensevar.autokind>%,0) = 4')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN004','1','U','expensevar','S','S','S','N','N',{ts '2007-10-26 17:04:23.217'},'SARA','L''importo di un movimento di spesa che annulla delle ritenute deve essere nullo oppure uguale alla somma delle ritenute, cambiata di segno.','N','--post
(  [SELECT curramount from expensetotal where idexp=%<expensevar.idexp>% and ayear=%<expensevar.yvar>%]{V} = 0 )
OR
( 
 isnull( [SELECT SUM(employtax) from expensetax where idexp=%<expensevar.idexp>% ]{I},0) >= 0

)

OR 
(
 isnull([SELECT amount from expenseyear where idexp=%<expensevar.idexp>% and ayear=%<expensevar.yvar>%]{V},0) 
	+
 isnull([SELECT amount from expensevar where idexp=%<expensevar.idexp>% and autokind is null]{V},0) 
	= -
  ISNULL([SELECT SUM(employtax) from expensetax where idexp=%<expensevar.idexp>% ]{V},0)
)

OR
(
 [SELECT COUNT(*) FROM expensepayroll 
JOIN expenselink 
 ON expensepayroll.idexp=expenselink.idparent
WHERE expenselink.idchild= %<expensevar.idexp>% ]{I}<>0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON004','1','U','expensevar','S','N','N','N','N',{ts '2007-09-06 14:16:49.360'},'NINO','La previsione di cassa della voce di spesa %<expenseview.codefin>% e UPB %<expenseview.codeupb>% è INSUFFICIENTE!','N','--post
(
	(
		ISNULL(
			[SELECT
			ISNULL(currentsecondaryprev,0)+		
			ISNULL(secondaryvariation, 0) 
			FROM upbtotal 
			WHERE idfin = 
				[SELECT idfin FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{I}
				and
				idupb = 
				[SELECT idupb FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{C}

			]{V}
		,0)
		- 
		ISNULL(
			[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
			FROM upbexpensetotal
			WHERE idfin = 
				[SELECT idfin FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{I}
			and
				idupb = 
				[SELECT idupb FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{C}
			AND nphase =%<sys_maxexpensephase>%]{V}
		,0)
	) >= 0
)
OR
([select nphase from expense where idexp= %<expensevar.idexp>%]{I}<> %<sys_maxexpensephase>%)
or
%<expensevar.amount>%<&<expensevar.amount>&

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON008','1','U','expensevar','S','N','N','N','N',{ts '2013-05-21 11:04:29.140'},'sa','La previsione di cassa della voce di spesa Finanziamento: %<expensevarview.underwriting>% , UPB: %<expensevarview.upb>% , Bilancio: %<expensevarview.codefin>% è INSUFFICIENTE!','N','
%<expensevar.idunderwriting>% is null
OR
(
	(
		ISNULL(
			[SELECT
			ISNULL(currentsecondaryprev,0)+		
			ISNULL(secondaryvariation, 0) 
			FROM upbunderwritingtotal 
			WHERE idfin = 
				[SELECT idfin FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{I}
				and
				idupb = 
				[SELECT idupb FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{C}
			and idunderwriting = %<expensevar.idunderwriting>%
			]{V}
		,0)
		- 
		ISNULL(
			[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
			FROM underwritingexpensetotal
			WHERE idfin = 
				[SELECT idfin FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{I}
			and
				idupb = 
				[SELECT idupb FROM expenseyear WHERE idexp = %<expensevar.idexp>% AND ayear = %<expensevar.yvar>%]{C}
			and idunderwriting = %<expensevar.idunderwriting>%
			AND nphase =%<sys_maxexpensephase>%]{V}
		,0)
	) >= 0
)
OR
([select nphase from expense where idexp= %<expensevar.idexp>%]{I}<> %<sys_maxexpensephase>%)
or
%<expensevar.amount>%<&<expensevar.amount>&

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','1','U','expensevar','S','S','S','N','N',{ts '2009-03-21 15:21:57.983'},'SARA','Le regole di sicurezza vietano l''inserimento di variazioni di annullamento per i Mandati','S','ISNULL(&<expensevar.autokind>&,0) = ISNULL(%<expensevar.autokind>%,0)
OR
(ISNULL(%<expensevar.autokind>%,0) NOT IN (10,11))
OR
(ISNULL(&<expensevar.autokind>&,0) NOT IN (10,11))
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename  = ''annullamento''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','1','U','expensevar','S','S','S','N','N',{ts '2010-11-08 10:09:03.827'},'sa','L''utente non è abilitato alla modifica di variazioni di fasi finanziarie precedenti alla fase dell''Impengo giuridico.','N','[select nphase from expense where idexp=%<expensevar.idexp>%]{I}  >= %<sys_appropriationphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''pre_impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','2','U','expensevar','S','S','S','N','N',{ts '2010-11-08 10:20:02.157'},'sa','L''utente non è abilitato alla modifica di fasi finanziarie successive alla fase dell''Impengo giuridico.','N','[select nphase from expense where idexp=%<expensevar.idexp>%]{I}   <= %<sys_appropriationphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''post_impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','3','U','expensevar','S','S','S','N','N',{ts '2010-11-08 10:20:40.267'},'sa','L''utente non è abilitato alla modifica di fasi finanziarie equivalenti all''Impengo giuridico.','N','[select nphase from expense where idexp=%<expensevar.idexp>%]{I}  <> %<sys_appropriationphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF002','1','U','expensevar','S','S','S','N','N',{ts '2007-12-05 16:11:09.657'},'PINO','L''importo lordo della missione è minore dei movimenti di spesa che la contabilizzano','N','--post
([
SELECT ISNULL(AVG(residual),0)
FROM itinerationresidual
JOIN expenseitineration
ON itinerationresidual.iditineration = expenseitineration.iditineration
WHERE expenseitineration.idexp = %<expensevar.idexp>%]{N}>=0)
OR
(&<expensevar.amount>& > %<expensevar.amount>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF003','1','U','expensevar','S','S','S','N','N',{ts '2007-12-05 16:12:19.217'},'PINO','Non possono essere modificate le variazioni inerenti le liquidazioni sulle partite di giro perché sono stati liquidati tutti i saldi/pagamenti della missione','N','
--post
[ISNULL(
 [SELECT expenseitineration.movkind FROM expenseitineration
   JOIN expenselink on expenseitineration.idexp=expenselink.idparent
   WHERE expenselink.idchild = %<expensevar.idexp>%]{C},
  ''X'')]{C}<>5

OR

[SELECT ISNULL(SUM(curramount),0) 
FROM expensetotal 
 join  expenselink EL1 
       on EL1.idchild=expensetotal.idexp 
 join expenseitineration IE1
       ON IE1.idexp=EL1.idparent
 join expenseitineration IE2
       ON IE1.iditineration=IE2.iditineration
 join expenselink EL2 
       on EL2.idparent= IE2.idexp
 join expenselast 
       on expenselast.idexp=expensetotal.idexp
 
WHERE EL2.idchild = %<expensevar.idexp>% AND
      expensetotal.ayear = %<sys_esercizio>% AND
      IE1.movkind = 4
]{V}=0
OR
&<expensevar.amount>& = %<expensevar.amount>%

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM046','1','D','expensewageaddition','S','S','S','N','N',{ts '2007-09-21 12:22:50.593'},'NINO','Non è normalmente corretto rimuovere la contabilizzazione del compenso a dipendente n. %<expensewageaddition.ycon>% / %<expensewageaddition.ncon>% in quanto il mov. di spesa è portato a pagamento. Tale mov. di spesa non potrà più essere ricontabilizzato','N','[SELECT COUNT(*)
FROM expenselast
join expenselink 
     on expenselink.idchild=expenselast.idexp
WHERE expenselink.idparent= %<expensewageaddition.idexp>%
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DIPEN003','1','I','expensewageaddition','S','S','S','N','N',{ts '2007-10-01 09:05:45.983'},'NINO','Il contratto dipendente %<ncon>% / %<ycon>% non può essere 
contabilizzato dal movimento selezionato, poichè è stato già (anche in parte) portato a pagamento','S','[SELECT COUNT(*) FROM expenselink 
JOIN expenselast on expenselink.idchild=expenselast.idexp
WHERE idparent=  %<expensewageaddition.idexp>%
]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DIPEN004','1','I','expensewageaddition','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','L''importo lordo del contratto dipendente %<ycon>% %<ncon>% è minore dei movimenti di spesa che lo contabilizzano','N','--post
[SELECT AVG(residual)
FROM wageadditionresidual
WHERE wageadditionresidual.ycon = %<expensewageaddition.ycon>%
AND wageadditionresidual.ncon = %<expensewageaddition.ncon>%]{N}>=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','D','expenseyear','S','S','S','N','N',{ts '2007-12-15 09:39:56.313'},'NINO','Il movimento di spesa %<expenseview.phase>% n. %<expenseview.nmov>% / %<expenseview.ymov>% non può essere cancellato. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR012','1','D','expenseyear','S','S','S','N','N',{ts '2013-01-07 17:03:47.377'},'sa','L''utente non è abilitato a operare su Voci di Bilancio a Movimentazione protetta','S','[SELECT flag
FROM fin
WHERE fin.idfin = %<expenseyear.idfin>%]{I} & 8  = 0 
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''movimprotetta''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BOLLE001','1','I','expenseyear','S','S','S','N','N',{ts '2013-07-08 10:16:07.020'},'nino','La somma dei movimenti di spesa collegati alla bolletta n. %<expenselast.nbill>% NON può essere maggiore dell''importo della bolletta','N','ISNULL([SELECT nbill FROM expenselast 
  WHERE idexp= %<expenseyear.idexp>%]{I}
,0)=0

OR  
ISNULL([SELECT SUM(curramount)
FROM expenselast
join expensetotal
on expenselast.idexp = expensetotal.idexp
WHERE nbill = [SELECT nbill from expenselast   where idexp= %<expenseyear.idexp>%]{I}
AND ayear = %<sys_esercizio>%
]{V},0)
<= 
ISNULL(
[(SELECT ISNULL(total, 0) 
from bill 
where nbill= [SELECT nbill from expenselast   where idexp= %<expenseyear.idexp>%]{I}
	and ybill = %<sys_esercizio>%
	and billkind =''D'')
]{V}
,0)  
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA002','1','I','expenseyear','N','S','N','N','N',{ts '2007-08-27 12:06:37.077'},'NINO','La previsione della voce in spesa %<expenseview.codefin>% e  UPB  %<expenseview.codeupb>%  è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(currentprev,0)+
	ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	and nphase = 
          [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
  ]{V}
,0)
>= 0 
or 
(%<expenseyear.idfin>% IS NULL)

OR
(%<sys_expensefinphase>%<> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I})
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','I','expenseyear','S','S','S','N','N',{ts '2007-12-15 09:40:04.780'},'NINO','Il movimento di spesa %<expenseview.phase>% n. %<expenseview.nmov>% / %<expenseview.ymov>% non può essere cancellato. Esercizio  %<esercizio>% chiuso','N','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE003','1','I','expenseyear','S','N','S','N','N',{ts '2007-08-24 08:43:14.233'},'NINO','La previsione di competenza della voce in spesa %<expenseview.codefin>%  e  UPB  %<expenseview.codeupb>%  è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>% 
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
]{V}
,0)
>= 0 
or 
[select ymov from expense where 
			idexp=%<expenseyear.idexp>%]{I}
<> %<sys_esercizio>%
or 
%<sys_expensefinphase>% <> 
     [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}

or 
%<expenseyear.idfin>% IS NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI002','1','I','expenseyear','S','N','S','S','N',{ts '2007-08-24 08:43:33.077'},'NINO','La dotazione crediti della voce %<expenseview.codefin>%  e  UPB  %<expenseview.codeupb>% è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0)  
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
]{V}
,0)
>= 0 
or 
%<expenseyear.idfin>% IS NULL 
or 
(%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
)

or 
[select ymov from expense where 
			idexp=%<expenseyear.idexp>%]{I}
 <> %<sys_esercizio>%
OR
[SELECT assured
FROM upb
WHERE idupb = %<expenseyear.idupb>%]{C} = ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO009','1','I','expenseyear','S','N','S','N','N',{ts '2007-09-01 12:51:32.517'},'NINO','La previsione della voce in spesa %<expenseview.codefin>%  e  UPB  %<expenseview.codeupb>%  è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>% 
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
	FROM pettycashoperation 
	WHERE idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>% 
	AND yrestore IS NULL 
	AND nrestore IS NULL]{V}
,0)

>= 0 
or 
[select ymov from expense where 
			idexp=%<expenseyear.idexp>%]{I}
 <> %<sys_esercizio>%
or 
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}

or 
%<expenseyear.idfin>% IS NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO010','1','I','expenseyear','N','S','N','N','N',{ts '2007-09-01 12:51:50.297'},'NINO','La previsione della voce in spesa %<expenseview.codefin>% e UPB  %<expenseview.codeupb>% è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears, 0)   
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>% 
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
	FROM pettycashoperation 
	WHERE idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>% 
	AND yrestore IS NULL 
	AND nrestore IS NULL]{V}
,0)

>= 0 
or 
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}

or 
%<expenseyear.idfin>% IS NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO011','1','I','expenseyear','S','N','S','S','N',{ts '2007-08-24 08:44:34.390'},'NINO','La dotazione crediti della voce %<expenseview.codefin>% e  UPB  %<expenseview.codeupb>% è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0)  
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
	FROM pettycashoperation 
	WHERE idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>% 
	AND yrestore IS NULL 
	AND nrestore IS NULL]{V}
,0)
>= 0 
or 
%<expenseyear.idfin>% IS NULL 
or 
%<sys_expensefinphase>% <> [select ymov from expense where 
			idexp=%<expenseyear.idexp>%]{I}

or 
[select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
 <> %<sys_esercizio>%
OR
[SELECT assured
FROM upb
WHERE idupb = %<expenseyear.idupb>%]{C} = ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO012','1','I','expenseyear','S','S','S','N','S',{ts '2007-08-24 08:44:52.140'},'NINO','La dotazione incassi della voce %<expenseview.codefin>%  e  UPB  %<expenseview.codeupb>%  è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)  
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
 ,0)

 >= 0 
or 
[select ymov from expense where 
			idexp=%<expenseyear.idexp>%]{I}
<> %<sys_esercizio>%
or
%<sys_maxexpensephase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}

OR
[SELECT assured
FROM upb
WHERE idupb = %<expenseyear.idupb>%]{C} = ''S''
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO020','1','I','expenseyear','S','N','N','N','N',{ts '2007-08-23 16:16:51.563'},'NINO','La previsione della voce di spesa %<expenseview.codefin>%  e  UPB  %<expenseview.codeupb>% è inferiore alle righe di mandato','N','ISNULL(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	and idupb= %<expenseyear.idupb>%
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) + ISNULL(totalarrears,0) 
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>%
	and idupb = %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
]{V} ,0)
-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
	FROM pettycashoperation 
	where idfin = %<expenseyear.idfin>%
	and idupb= %<expenseyear.idupb>%
	AND yrestore IS NULL
	AND nrestore IS NULL]{V}
	,0)
 >= 0 
OR
(%<expenseyear.idfin>% IS NULL)
OR
(%<sys_maxexpensephase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO022','1','I','expenseyear','S','S','S','N','N',{ts '2007-09-06 09:47:44.093'},'NINO','L''importo attuale dei movimenti di spesa della fase %<expenseview.phase>% è maggiore dell''importo attuale del movimento della fase precedente','N','--post
[SELECT ISNULL(available, 0) 
from expensetotal 
where idexp = [select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I}
and ayear = %<sys_esercizio>%]{V}
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = [select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I}
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(c.curramount)
	FROM pettycashexpense a
	JOIN expense b
	ON a.idexp = b.idexp
	JOIN expensetotal c
	ON b.idexp = c.idexp
	AND a.yoperation = c.ayear
	WHERE b.parentidexp = [select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I}

	]{V}
,0)
 >= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO023','1','I','expenseyear','S','S','S','N','N',{ts '2007-09-27 18:15:10.750'},'NINO','Non può essere inserito un movimento di spesa dipendente dal movimento %<parentexpenseview.phase>% %<parentexpenseview.nmov>% in quanto la disponibilità negli anni successivi diventa negativa','N','--post
([SELECT COUNT(*)
FROM expensetotal
WHERE idexp = [select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I}

AND ayear > %<sys_esercizio>%]{I} = 0)
OR
([select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
 = 1)
OR
(ISNULL([SELECT MIN(available)
FROM expensetotal
WHERE idexp = [select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I}

AND ayear > %<sys_esercizio>%]{V},0)
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = [select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I}
]{V}
,0)
+
ISNULL(
	[SELECT SUM(c.curramount)
	FROM pettycashexpense a
	JOIN expense b
	ON a.idexp = b.idexp
	JOIN expensetotal c
	ON b.idexp = c.idexp
	AND a.yoperation = c.ayear
	WHERE b.parentidexp = [select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I}
     ]
{V}
,0)
>= 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO025','1','I','expenseyear','S','S','S','N','N',{ts '2010-05-03 12:13:39.703'},'SARA','L''apertura del fondo economale NON DEVE essere fatta dalla finestra di SPESA ma bisogna andare dal MENU Fondo Economale - Procedure guidate - Apertura','N','[SELECT COUNT(*) FROM pettycashsetup 
WHERE ayear = %<sys_esercizio>%
AND idfinexpense = %<expenseyear.idfin>%
AND registrymanager = [select idreg from expense where 
			idexp=%<expenseyear.idexp>%]{I}
]{I} = 0

OR

[SELECT flag FROM pettycashsetup 
WHERE ayear = %<sys_esercizio>%
AND idfinexpense = %<expenseyear.idfin>%
]{I} &1 <> 0

OR
[SELECT COUNT(*) FROM pettycashoperation
WHERE yoperation = %<sys_esercizio>%
AND (flag&1)<>0
AND idpettycash IN
	(SELECT idpettycash FROM pettycashsetup 
	WHERE ayear = %<sys_esercizio>%
	AND idfinexpense = %<expenseyear.idfin>%
	AND registrymanager = [select idreg from expense where 
			idexp=%<expenseyear.idexp>%]{I}
)
]{I} > 0
AND
[SELECT COUNT(*) FROM pettycashoperation
WHERE yoperation = %<sys_esercizio>%
AND (flag&1)<>0
AND idpettycash IN
	(SELECT idpettycash FROM pettycashsetup 
	WHERE ayear = %<sys_esercizio>%
	AND idfinexpense = %<expenseyear.idfin>%
	AND registrymanager = [select idreg from expense where 
			idexp=%<expenseyear.idexp>%]{I}
)
]{I} =
[SELECT COUNT(*) FROM pettycashsetup 
WHERE ayear = %<sys_esercizio>%
AND idfinexpense = %<expenseyear.idfin>%
AND registrymanager = [select idreg from expense where 
			idexp=%<expenseyear.idexp>%]{I}
]{I}
OR
([select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
 < %<sys_expensefinphase>%)
OR
([select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
 < %<sys_expenseregphase>%)
OR
[SELECT COUNT(*) from pettycashexpense where idexp = %<expenseyear.idexp>%]{I}>0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS002','1','I','expenseyear','S','S','S','N','S',{ts '2007-08-24 08:45:37.467'},'NINO','La dotazione incassi della voce %<expenseview.codefin>%  e  UPB  %<expenseview.codeupb>%  è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)  
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
]{V}
,0)
>= 0 
or 
[select ymov from expense where 
			idexp=%<expenseyear.idexp>%]{I}
<> %<sys_esercizio>%
or
%<sys_maxexpensephase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}

OR
[SELECT assured
FROM upb
WHERE idupb = %<expenseyear.idupb>%]{C} = ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM001','1','I','expenseyear','S','S','S','N','N',{ts '2007-09-06 09:49:16.420'},'NINO','La voce di bilancio è assente','N','%<sys_expensefinphase>%> 
       [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}

or
%<expenseyear.idfin>% is not NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM001','2','I','expenseyear','S','S','S','N','N',{ts '2007-09-06 09:49:23.877'},'NINO','La voce UPB è assente','N','%<sys_expensefinphase>%> 
   [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}

or
%<expenseyear.idupb>% is not NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM003','1','I','expenseyear','S','S','S','N','N',{ts '2007-09-06 09:51:24.420'},'NINO','L''importo attuale dei movimenti di spesa della fase %<expenseview.phase>% è maggiore dell''importo attuale del movimento della fase precedente','N','--post
ISNULL([select parentidexp from expense where idexp =%<expenseyear.idexp>%]{I},0)=0
or 
[SELECT ISNULL(available, 0) 
from expensetotal 
where idexp = [select parentidexp from expense where idexp =%<expenseyear.idexp>%]{I} 
and ayear = %<expenseyear.ayear>%]{I} >= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM004','1','I','expenseyear','S','S','S','N','N',{ts '2010-02-18 09:32:29.063'},'SARA','L''importo attuale del movimento di spesa %<expenseview.phase>% %<expenseview.nmov>%  del %<expenseview.ymov>% è NEGATIVO','N','[(SELECT MIN(ISNULL(curramount, 0)) 
from expensetotal 
where idexp = %<expenseyear.idexp>%)]{V}  >= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM020','1','I','expenseyear','S','S','S','N','N',{ts '2007-12-13 13:54:03.150'},'SARA','Non può essere inserito una movimento di spesa dipendente dal movimento %<parentexpenseview.phase>% %<parentexpenseview.nmov>% del  %<parentexpenseview.ymov>% in quanto la disponibilità negli anni successivi diventa negativa','N','ISNULL([select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I},0)=0

OR
(
	[SELECT COUNT(*)
	FROM expensetotal
	WHERE idexp = [select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I}

	AND ayear > %<sys_esercizio>%]{V}
	 = 0
)
OR
(
	isnull([SELECT MIN(available)
	FROM expensetotal
	WHERE idexp = [select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I}

	AND ayear > %<sys_esercizio>%]{V},0)
	 >= 0
)
OR
(
	ISNULL(
		[SELECT MAX(ayear) FROM accountingyear WHERE ((flag&0x0F)>=5)]{I}
	,%<sys_esercizio>%-1) < %<sys_esercizio>%
)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM021','1','I','expenseyear','S','S','S','N','N',{ts '2007-08-23 16:54:40.170'},'NINO','FONDO DI CASSA INIZIALE + totale delle reversali trasmesse in banca deve essere maggiore od uguale al totale dei pagamenti (anche non inclusi in un mandato)','N','--post
[SELECT ISNULL(currentfloatfund,0) FROM currentcashtotal WHERE ayear = %<sys_esercizio>%]{V} >= 0
OR
[select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
 <> %<sys_maxexpensephase>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM030','1','I','expenseyear','S','S','S','N','N',{ts '2008-02-05 14:32:27.407'},'NINO','Il movimento di spesa che si sta inserendo ha importo nullo','N','%<expenseyear.amount>% <> 0
OR
(
[SELECT COUNT(*)
FROM expensepayroll
JOIN expenselink
	ON expenselink.idparent = expensepayroll.idexp
WHERE expenselink.idchild = %<expenseyear.idexp>%]{I} > 0
AND
[SELECT nphase FROM expense
WHERE idexp = %<expenseyear.idexp>%]{I} = %<sys_maxexpensephase>%
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM031','1','I','expenseyear','S','S','S','N','N',{ts '2013-06-11 16:54:17.727'},'assistenza','Il movimento di spesa che si sta inserendo ha un importo negativo o inferiore a quello delle ritenute c/dipendente','N','
%<expenseyear.amount>% >= ( ISNULL(
	[SELECT ISNULL(SUM(employtax), 0) 
	FROM expensetax
	WHERE idexp = %<expenseyear.idexp>% ]{V},0) 
+
ISNULL(
	[SELECT SUM(expensetaxcorrige.employamount	)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expenseyear.idexp>%]{V}
,0)
)
OR
[SELECT nphase from expense where idexp=    %<expenseyear.idexp>%]{I} <> %<sys_maxexpensephase>%
OR
(
[SELECT COUNT(*)
FROM expensepayroll
JOIN expenselink
	ON expenselink.idparent = expensepayroll.idexp
WHERE expenselink.idchild = %<expenseyear.idexp>%]{I} > 0
AND
[SELECT nphase FROM expense
WHERE idexp = %<expenseyear.idexp>%]{I} = %<sys_maxexpensephase>%
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM033','1','I','expenseyear','S','S','S','N','N',{ts '2007-12-13 14:08:07.797'},'SARA','Il movimento di spesa non può essere creato perchè la voce di bilancio %<expenseview.codefin>% non esiste nell''esercizio successivo.','S','([SELECT COUNT(*) FROM fin WHERE idfin = 
		[SELECT newidfin
		FROM finlookup
		WHERE oldidfin = %<expenseyear.idfin>%	
		]{I}	
]{V} = 1)
OR
[SELECT COUNT (*) FROM accountingyear WHERE ((flag&0x0F) >= 2)
AND accountingyear.ayear = %<sys_esercizio>%+1]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM038','1','I','expenseyear','S','S','S','S','N',{ts '2009-01-20 12:31:26.883'},'SA','Il totale dell''accertato è inferiore al totale dell''impegnato per l''UPB scelto','N','[SELECT assured FROM upb
WHERE idupb = &<expenseyear.idupb>&]{C} <> ''S''
OR
[select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
 <> %<sys_appropriationphase>%
OR
ISNULL(
	[SELECT SUM(amount) FROM incomeyear
         join income on incomeyear.idinc=income.idinc 
          join incometotal on incometotal.idinc=incomeyear.idinc 
				and incometotal.ayear=incomeyear.ayear
	WHERE idupb = %<expenseyear.idupb>%
	AND income.nphase = %<sys_assessmentphase>%
	AND (incometotal.flag  & 1)= 0
]{V}
,0)
+
ISNULL(
	[SELECT SUM(incomevar.amount)
	FROM incomevar
	JOIN incomeyear
	ON incomevar.idinc = incomeyear.idinc
         join income on incomeyear.idinc=income.idinc 
		AND incomeyear.ayear=%<expenseyear.ayear>%
	WHERE incomevar.yvar <= %<sys_esercizio>%
	AND income.nphase = %<sys_assessmentphase>%
	AND incomeyear.idupb = %<expenseyear.idupb>%
]{V}
,0)
+
[SELECT ISNULL(previousassessment,0) - ISNULL(previousappropriation,0)
FROM upb
WHERE idupb = %<expenseyear.idupb>%]{V}
+
ISNULL(
	[SELECT SUM(creditvariation)
	FROM upbtotal
	WHERE idupb = %<expenseyear.idupb>%]{V}
,0)
>=
ISNULL(
	[SELECT SUM(amount)
	FROM expenseyear 
       join expense on expense.idexp=expenseyear.idexp
       join expensetotal on expensetotal.idexp= expenseyear.idexp 
			and expensetotal.ayear=expenseyear.ayear
	WHERE idupb = %<expenseyear.idupb>%
	AND expense.nphase = %<sys_appropriationphase>%
	AND (expensetotal.flag  & 1)= 0
]{V}
,0)
+
ISNULL(
	[SELECT SUM(expensevar.amount) FROM expensevar
	JOIN expenseyear
		ON expensevar.idexp = expenseyear.idexp
		AND expenseyear.ayear= %<expenseyear.ayear>%
       join expense on expense.idexp=expensevar.idexp
	WHERE expensevar.yvar <= %<sys_esercizio>%
	AND expense.nphase = %<sys_appropriationphase>%
	AND expenseyear.idupb = %<expenseyear.idupb>%
]{V}
,0)
OR %<expenseyear.amount>% = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM039','1','I','expenseyear','S','S','S','N','N',{ts '2007-10-13 19:48:27.203'},'NINO','Il responsabile scelto: %<expenseview.manager>%, è differente da quello dell''UPB : %<expenseview.upb>%.','N','(ISNULL([SELECT idman
FROM upb 
WHERE idupb = %<expenseyear.idupb>%]{I},0)
= 0)
OR
(ISNULL([SELECT idman
FROM expense 
WHERE idexp = %<expenseyear.idexp>%]{I},0)) = 
(ISNULL([SELECT idman
FROM upb 
WHERE idupb = %<expenseyear.idupb>%]{I},0))
OR
ISNULL([SELECT idman
FROM expense 
WHERE idexp = %<expenseyear.idexp>%]{I},0)=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM044','1','I','expenseyear','S','S','S','N','N',{ts '2007-08-24 08:50:23.920'},'NINO','Il movimento di spesa non può essere salvato con una voce di bilancio riferita ad esercizi differenti dall''attuale','S','(
[select ayear from fin where 
			idfin=%<expenseyear.idfin>%]{I}=%<sys_esercizio>%
)
OR
%<expenseyear.idfin>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM059','1','I','expenseyear','S','S','S','N','N',{ts '2007-10-10 12:08:31.563'},'SARA','Esistono delle coppie UPB - Voce di Bilancio per le quali la previsione disponibile di spesa è negativa.','S','[EXECUTE check_prevision_upb_fin %<sys_esercizio>% ,@outvar OUT]{I} = 0 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM076','1','I','expenseyear','S','S','S','N','N',{ts '2008-11-26 11:29:34.297'},'SA','Errore nell''applicazione, dati incoerenti nella gerarchia dei movimenti. (Spesa/Bilancio)','N','(
ISNULL (%<expenseyear.idfin>%,0)= 0
)

OR

ISNULL([select parentidexp from expense where idexp=
	%<expenseyear.idexp>%]{I},  0)=0

OR

(
ISNULL(
	[select idfin from expenseyear  EY
	join expense E on E.parentidexp=EY.idexp
	where E.idexp=%<expenseyear.idexp>%
		and EY.ayear=%<expenseyear.ayear>%]{I},0)
= 0
)

OR

(
ISNULL (%<expenseyear.idfin>%,0)
=
ISNULL(
	[select idfin from expenseyear  EY
	join expense E on E.parentidexp=EY.idexp
	where E.idexp=%<expenseyear.idexp>%
		and EY.ayear=%<expenseyear.ayear>%]{I},0)

)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM076','2','I','expenseyear','S','S','S','N','N',{ts '2008-11-26 11:29:47.047'},'SA','Errore nell''applicazione, dati incoerenti nella gerarchia dei movimenti. (Spesa/Upb)','N','(
ISNULL (%<expenseyear.idupb>%,''0'')= ''0''
)

OR

ISNULL([select parentidexp from expense where idexp=
	%<expenseyear.idexp>%]{I},  0)=0

OR

(
ISNULL(
	[select idupb from expenseyear  EY
	join expense E on E.parentidexp=EY.idexp
	where E.idexp=%<expenseyear.idexp>%
		and EY.ayear=%<expenseyear.ayear>%]{C},''0'')
= ''0''
)

OR

(
ISNULL (%<expenseyear.idupb>%,''0'')
=
ISNULL(
	[select idupb from expenseyear  EY
	join expense E on E.parentidexp=EY.idexp
	where E.idexp=%<expenseyear.idexp>%
		and EY.ayear=%<expenseyear.ayear>%]{C},''0'')

)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE007','1','I','expenseyear','S','S','S','N','N',{ts '2009-09-23 13:08:08.327'},'SARA','Le spese collegate alla parcella professionale saranno considerate pagate in proporzione all''effettivo importo dell''imponibile  liquidato. E'' consigliabile rimuovere le spese e posticiparne l''inserimento  al momento del saldo della prestazione. E'' necessario comunque saldare la prestazione entro l''anno, per non essere costretti a correzioni manuali del modello 770.','N','--post
[select nphase from expense where 
	idexp=%<expenseyear.idexp>%]{I}
 	<  %<sys_maxexpensephase>%
OR
-- non contabilizza un contratto professionale
[SELECT COUNT(*) from expenseprofservice 
    join expenselink on expenselink.idparent=expenseprofservice.idexp
	where expenselink.idchild= %<expenseyear.idexp>% 
]{I}=0
-- pagamento imponibile del contratto
OR
([(select (isnull(totalcost,0) - isnull(ivaamount,0)) 
from  profservice
join  expenseprofservice
on    expenseprofservice.ycon = profservice.ycon
and  expenseprofservice.ncon = profservice.ncon	
join expenselink on expenselink.idparent=expenseprofservice.idexp
and  expenselink.idchild= %<expenseyear.idexp>% 
)]{V}
= 
isnull([(select expenseyear.amount
	from expenseyear
	where expenseyear.idexp = %<expenseyear.idexp>% 
	and expenseyear.ayear = %<sys_esercizio>%
)]{V} , 0.0)
+
isnull([(select sum(expensevar.amount)
from expensevar
where expensevar.idexp = %<expenseyear.idexp>% 
and isnull(expensevar.autokind,0)<>4
and expensevar.yvar=%<sys_esercizio>%
)]{V} , 0.0)
)
OR
-- contabilizzazione dell''''imponibile
[SELECT movkind from expenseprofservice 
    JOIN   expenselink on expenselink.idparent=expenseprofservice.idexp
 AND      expenselink.idchild= %<expenseyear.idexp>% 
]{I} <> 3 
OR
-- non ci sono spese collegate al contratto attualmente pagato
[SELECT COUNT(*) from profservicerefund PR
	JOIN profservice P
		ON   PR.ycon   = P.ycon
		AND  PR.ncon   = P.ncon
	JOIN expenselink EL
		ON   EL.idchild = %<expenseyear.idexp>% 
		AND  EL.nlevel  =  %<sys_itinerationphase>%
	JOIN expenseprofservice EP
		ON   EP.ycon   = P.ycon
		AND  EP.ncon   = P.ncon
		AND  EP.idexp  = EL.idparent]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE007','2','I','expenseyear','S','S','S','N','N',{ts '2009-09-23 10:54:35.420'},'SARA','Le spese collegate alla parcella professionale saranno considerate pagate in proporzione all''effettivo importo liquidato. E'' consigliabile rimuovere le spese e posticiparne l''inserimento  al momento del saldo della prestazione.  E'' necessario comunque saldare la prestazione entro l''anno, per non essere costretti a correzioni manuali del modello 770.','N','--post
[select nphase from expense where 
	idexp=%<expenseyear.idexp>%]{I}
 	<  %<sys_maxexpensephase>%
OR
-- non contabilizza un contratto professionale
[SELECT COUNT(*) from expenseprofservice 
    join expenselink on expenselink.idparent=expenseprofservice.idexp
	where expenselink.idchild= %<expenseyear.idexp>% 
]{I}=0
-- pagamento totale del contratto
OR
([(select totalcost 
from  profservice
join  expenseprofservice
on    expenseprofservice.ycon = profservice.ycon
and  expenseprofservice.ncon = profservice.ncon	
join expenselink on expenselink.idparent=expenseprofservice.idexp
and  expenselink.idchild= %<expenseyear.idexp>% 
)]{V}
= 
isnull([(select expenseyear.amount
	from expenseyear
	where expenseyear.idexp = %<expenseyear.idexp>% 
	and expenseyear.ayear = %<sys_esercizio>%
)]{V} , 0.0)
+
isnull([(select sum(expensevar.amount)
from expensevar
where expensevar.idexp = %<expenseyear.idexp>% 
and isnull(expensevar.autokind,0)<>4
and expensevar.yvar=%<sys_esercizio>%
)]{V} , 0.0)
)
OR
[SELECT movkind from expenseprofservice 
    JOIN   expenselink on expenselink.idparent=expenseprofservice.idexp
 AND      expenselink.idchild= %<expenseyear.idexp>% 
]{I} <> 1 
OR
-- non ci sono spese collegate al contratto attualmente pagato
[SELECT COUNT(*) from profservicerefund PR
	JOIN profservice P
		ON   PR.ycon   = P.ycon
		AND  PR.ncon   = P.ncon
	JOIN expenselink EL
		ON   EL.idchild = %<expenseyear.idexp>% 
		AND  EL.nlevel  =  %<sys_itinerationphase>%
	JOIN expenseprofservice EP
		ON   EP.ycon   = P.ycon
		AND  EP.ncon   = P.ncon
		AND  EP.idexp  = EL.idparent]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE008','1','I','expenseyear','S','S','S','N','N',{ts '2009-09-23 13:13:37.157'},'SARA','Poichè si sta effettuando un pagamento parziale dell''imponibile del contratto professionale, il professionista dovrà emettere una parcella conforme al pagamento.
','N','--post
[select nphase from expense where 
	idexp=%<expenseyear.idexp>%]{I}
 	<  %<sys_maxexpensephase>%
OR
-- non contabilizza un contratto professionale
[SELECT COUNT(*) from expenseprofservice 
    join expenselink on expenselink.idparent=expenseprofservice.idexp
	where expenselink.idchild= %<expenseyear.idexp>% 
]{I}=0
-- pagamento totale del contratto
OR
([(select (isnull(totalcost,0) - isnull(ivaamount,0)) 
from  profservice
join  expenseprofservice
on    expenseprofservice.ycon = profservice.ycon
and  expenseprofservice.ncon = profservice.ncon	
join expenselink on expenselink.idparent=expenseprofservice.idexp
and  expenselink.idchild= %<expenseyear.idexp>% 
)]{V}
= 
isnull([(select expenseyear.amount
	from expenseyear
	where expenseyear.idexp = %<expenseyear.idexp>% 
	and expenseyear.ayear = %<sys_esercizio>%
)]{V} , 0.0)
+
isnull([(select sum(expensevar.amount)
from expensevar
where expensevar.idexp = %<expenseyear.idexp>% 
and isnull(expensevar.autokind,0)<>4
and expensevar.yvar=%<sys_esercizio>%
)]{V} , 0.0)
)
OR
[SELECT movkind from expenseprofservice 
    JOIN   expenselink on expenselink.idparent=expenseprofservice.idexp
 WHERE expenselink.idchild= %<expenseyear.idexp>% 
]{I} <> 3 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE008','2','I','expenseyear','S','S','S','N','N',{ts '2009-09-23 11:39:37.657'},'SARA','Poichè si sta effettuando un pagamento parziale dell''importo  del contratto professionale, il professionista dovrà emettere una parcella conforme al pagamento.
','N','--post
[select nphase from expense where 
	idexp=%<expenseyear.idexp>%]{I}
 	< %<sys_maxexpensephase>%
OR
-- non contabilizza un contratto professionale
[SELECT COUNT(*) from expenseprofservice 
    join expenselink on expenselink.idparent=expenseprofservice.idexp
	where expenselink.idchild= %<expenseyear.idexp>% 
]{I}=0
-- pagamento totale del contratto
OR
([(select totalcost 
from  profservice
join  expenseprofservice
on    expenseprofservice.ycon = profservice.ycon
and  expenseprofservice.ncon = profservice.ncon	
join expenselink on expenselink.idparent=expenseprofservice.idexp
and  expenselink.idchild= %<expenseyear.idexp>% 
)]{V}
= 
isnull([(select expenseyear.amount
	from expenseyear
	where expenseyear.idexp = %<expenseyear.idexp>% 
	and expenseyear.ayear = %<sys_esercizio>%
)]{V} , 0.0)
+
isnull([(select sum(expensevar.amount)
from expensevar
where expensevar.idexp = %<expenseyear.idexp>% 
and isnull(expensevar.autokind,0)<>4
and expensevar.yvar=%<sys_esercizio>%
)]{V} , 0.0)
)
OR
[SELECT movkind from expenseprofservice 
    JOIN   expenselink on expenselink.idparent=expenseprofservice.idexp
 WHERE expenselink.idchild= %<expenseyear.idexp>% 
]{I} <> 1 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN004','1','I','expenseyear','S','S','S','N','N',{ts '2007-10-29 11:21:02.967'},'NINO','L''importo di un movimento di spesa che annulla delle ritenute deve essere nullo oppure uguale alla somma delle ritenute, cambiata di segno.','N','--post
( %<expenseyear.amount>% = 0 )
OR
( 
 ISNULL([SELECT SUM(employtax) from expensetax where idexp=%<expenseyear.idexp>% ]{I},0) >= 0

)
OR 
(
 %<expenseyear.amount>% 
	+
 isnull([SELECT amount from expensevar where idexp=%<expenseyear.idexp>% and autokind is null]{V},0) 
	= -
  ISNULL([SELECT  SUM(employtax) from expensetax where idexp=%<expenseyear.idexp>% ]{V},0)
)

OR
(
 [SELECT COUNT(*) FROM expensepayroll 
JOIN expenselink 
 ON expensepayroll.idexp=expenselink.idparent
WHERE expenselink.idchild= %<expenseyear.idexp>% ]{I}<>0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON004','1','I','expenseyear','S','N','N','N','N',{ts '2007-08-24 09:01:54.483'},'NINO','La previsione di cassa della voce di spesa %<expenseview.codefin>%  e  UPB  %<expenseview.codeupb>%  è INSUFFICIENTE!','N','(
	(
	ISNULL([SELECT
	ISNULL(currentsecondaryprev, 0)+
	ISNULL(secondaryvariation,0) FROM upbtotal 
	 WHERE idfin = %<expenseyear.idfin>%
		AND idupb= %<expenseyear.idupb>%
	]{V},0)
	-
	ISNULL(
		[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0) FROM
			upbexpensetotal WHERE idfin=%<expenseyear.idfin>%
				AND idupb= %<expenseyear.idupb>%
				and nphase= %<sys_maxexpensephase>%
				]{V}
			,0)
	) >= 0
)
OR
(%<sys_maxexpensephase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I})
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR012','1','I','expenseyear','S','S','S','N','N',{ts '2013-01-07 16:52:08.213'},'sa','L''utente non è abilitato a operare su Voci di Bilancio a Movimentazione protetta','S','[SELECT flag
FROM fin
WHERE fin.idfin = %<expenseyear.idfin>%]{I} & 8  = 0 
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''movimprotetta''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BOLLE001','1','U','expenseyear','S','S','S','N','N',{ts '2013-07-08 10:15:25.753'},'nino','La somma dei movimenti di spesa collegati alla bolletta n. %<expenselast.nbill>% NON può essere maggiore dell''importo della bolletta','N','ISNULL([SELECT nbill FROM expenselast 
  WHERE idexp= %<expenseyear.idexp>%]{I}
,0)=0

OR  
ISNULL([SELECT SUM(curramount)
FROM expenselast
join expensetotal
on expenselast.idexp = expensetotal.idexp
WHERE nbill = [SELECT nbill from expenselast   where idexp= %<expenseyear.idexp>%]{I}
AND ayear = %<sys_esercizio>%
]{V},0)
<= 
ISNULL(
[(SELECT ISNULL(total, 0) 
from bill 
where nbill= [SELECT nbill from expenselast   where idexp= %<expenseyear.idexp>%]{I}
	and ybill = %<sys_esercizio>%
	and billkind =''D'')
]{V}
,0)  

OR 
isnull(%<expenseyear.amount>%,0)<=  isnull(&<expenseyear.amount>&,0)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA002','1','U','expenseyear','N','S','N','N','N',{ts '2007-08-27 12:06:54.360'},'NINO','La previsione della voce in spesa %<fin.codefin>%  e  UPB  %<upb.codeupb>%  è INSUFFICIENTE!','S','[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
from upbtotal 
where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
]{V} 
- 
[SELECT ISNULL(totalcompetency, 0) + 
ISNULL(totalarrears, 0) 
from upbexpensetotal 
where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}]{V} 

+ 
ISNULL(&<expenseyear.amount>&, 0)
- 
ISNULL(%<expenseyear.amount>%, 0) 

>= 0
or 
(%<expenseyear.idfin>% IS NULL)
or
(%<expenseyear.idfin>% <> &<expenseyear.idfin>&) 
or
(%<expenseyear.idupb>% <> &<expenseyear.idupb>&) 
or
(%<expenseyear.amount>% < &<expenseyear.amount>&)
OR
(%<sys_expensefinphase>%<> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I})
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA002','2','U','expenseyear','N','S','N','N','N',{ts '2007-08-24 09:33:28.127'},'NINO','La previsione della voce in spesa %<fin.codefin>%  e  UPB  %<upb.codeupb>%  è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}]{V}
,0)

- 
ISNULL(%<expenseyear.amount>%, 0)

-
ISNULL(
	[SELECT ISNULL(sum(amount), 0)
	from expensevar
	where idexp = %<expenseyear.idexp>%
	and yvar = %<sys_esercizio>%]{V}
,0)
>= 0 
or 
(%<expenseyear.idfin>% IS NULL)
OR
(%<expenseyear.idfin>% = &<expenseyear.idfin>&
AND %<expenseyear.idupb>% = &<expenseyear.idupb>&)
OR 
(%<sys_expensefinphase>%<> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I})
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','U','expenseyear','S','S','S','N','N',{ts '2007-12-15 09:39:38.343'},'NINO','Il movimento di spesa %<expenseview.phase>% n. %<expenseview.nmov>% / %<expenseview.ymov>% non può essere modificato. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE003','1','U','expenseyear','S','N','S','N','N',{ts '2007-08-24 09:37:24.217'},'NINO','La previsione di competenza della voce in spesa %<fin.codefin>%  e  UPB  %<upb.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
]{V} 
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from upbexpensetotal 
where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}]{V} ,0)

+ 
ISNULL(&<expenseyear.amount>&, 0)
- 
ISNULL(%<expenseyear.amount>%, 0) 

>= 0 
or 
[select ymov from expense where 
			idexp=%<expenseyear.idexp>%]{I} 
   <> %<sys_esercizio>%
or 
%<expenseyear.idfin>% IS NULL 
or
%<expenseyear.idfin>% <> &<expenseyear.idfin>&
or
%<expenseyear.idupb>% <> &<expenseyear.idupb>&
or 
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
or
%<expenseyear.amount>%<&<expenseyear.amount>&
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE003','2','U','expenseyear','S','N','S','N','N',{ts '2007-08-24 09:37:41.627'},'NINO','La previsione di competenza della voce in spesa %<fin.codefin>%  e  UPB  %<upb.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
]{V} 
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}]{V} 
,0)
-
ISNULL(%<expenseyear.amount>%, 0)

-
ISNULL(
	[SELECT ISNULL(sum(amount), 0)
	from expensevar
	where idexp = %<expenseyear.idexp>%
	and yvar = %<sys_esercizio>%]{V}
,0)
>= 0 
or 
[select ymov from expense where 
			idexp=%<expenseyear.idexp>%]{I} <> %<sys_esercizio>%
or 
%<expenseyear.idfin>% IS NULL 
or
(%<expenseyear.idfin>% = &<expenseyear.idfin>&
and %<expenseyear.idupb>% = &<expenseyear.idupb>& )
or 
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI002','1','U','expenseyear','S','N','S','S','N',{ts '2007-08-24 09:39:22.577'},'NINO','La dotazione crediti della voce %<fin.codefin>%  e  UPB  %<upb.codeupb>%  è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0)  
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from upbexpensetotal 
where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}]{V} ,0)

- 
ISNULL(%<expenseyear.amount>%, 0) 
+ 
ISNULL(&<expenseyear.amount>&, 0) 

>= 0
OR 
%<expenseyear.idfin>% IS NULL 
OR
%<expenseyear.idfin>% <> &<expenseyear.idfin>& 
OR
%<expenseyear.idupb>% <> &<expenseyear.idupb>& 
OR 
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
OR 
[select ymov from expense where 
			idexp=%<expenseyear.idexp>%]{I} <> %<sys_esercizio>%
OR
%<expenseyear.amount>% < &<expenseyear.amount>&
OR
[SELECT assured
FROM upb
WHERE idupb = %<expenseyear.idupb>%]{C} = ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI002','2','U','expenseyear','S','N','S','S','N',{ts '2007-08-24 09:39:37.047'},'NINO','La dotazione crediti della voce %<fin.codefin>%  e  UPB  %<upb.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0)  
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
		AND idupb = %<expenseyear.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>% 
	AND idupb = %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}]{V}
,0)

- 
ISNULL(%<expenseyear.amount>%, 0)

-
ISNULL(
	[SELECT ISNULL(sum(amount), 0)
	from expensevar
	where idexp = %<expenseyear.idexp>%
	and yvar = %<sys_esercizio>%]{V}
,0)
 >= 0
or 
%<expenseyear.idfin>% IS NULL 
or
(%<expenseyear.idfin>% = &<expenseyear.idfin>& and
 %<expenseyear.idupb>% = &<expenseyear.idupb>&
)
or 
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
or 
[select ymov from expense where 
			idexp=%<expenseyear.idexp>%]{I} <> %<sys_esercizio>%
OR
[SELECT assured
FROM upb
WHERE idupb = %<expenseyear.idupb>%]{C} = ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DIPEN004','1','U','expenseyear','S','S','S','N','N',{ts '2007-09-01 12:39:22.517'},'NINO','L''importo lordo del contratto dipendente è minore dei movimenti di spesa che lo contabilizzano','S','(&<expenseyear.amount>& = %<expenseyear.amount>%)
OR
([SELECT COUNT(*) 
FROM expensewageaddition
WHERE idexp = %<expenseyear.idexp>%]{I} = 0)
OR
(
[SELECT ISNULL(residual,0)
FROM wageadditionresidual
WHERE ycon = 
	[SELECT ycon FROM expensewageaddition WHERE idexp = %<expenseyear.idexp>%]{I}
AND ncon =
	[SELECT ncon FROM expensewageaddition WHERE idexp = %<expenseyear.idexp>%]{I}
]{V}
- %<expenseyear.amount>%
+ &<expenseyear.amount>&
>= 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO009','1','U','expenseyear','S','N','S','N','N',{ts '2007-08-24 09:39:49.233'},'NINO','La previsione della voce in spesa %<fin.codefin>%  e  UPB  %<upb.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
	ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
]{V} 
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}]{V} ,0)
-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
	FROM pettycashoperation 
	WHERE idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	AND yrestore IS NULL
	AND nrestore IS NULL]{V}
,0)
+ 
ISNULL(&<expenseyear.amount>&, 0)
- 
ISNULL(%<expenseyear.amount>%, 0) >= 0 
or 
[select ymov from expense where 
			idexp=%<expenseyear.idexp>%]{I} <> %<sys_esercizio>%
or 
%<expenseyear.idfin>% IS NULL 
or
%<expenseyear.idfin>% <> &<expenseyear.idfin>&
or
%<expenseyear.idupb>% <> &<expenseyear.idupb>&
or 
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
or
%<expenseyear.amount>%<&<expenseyear.amount>&

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO009','2','U','expenseyear','S','N','S','N','N',{ts '2007-08-24 09:40:18.063'},'NINO','La previsione della voce in spesa %<fin.codefin>% e UPB  %<upb.codeupb>%  è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
]{V} 
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}]{V} 
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
,0)
- 
ISNULL(%<expenseyear.amount>%, 0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0)
	from expensevar
	where idexp = %<expenseyear.idexp>%
	and yvar = %<sys_esercizio>%]{V}
,0)
>= 0 
or 
[select ymov from expense where 
			idexp=%<expenseyear.idexp>%]{I} <> %<sys_esercizio>%
or 
%<expenseyear.idfin>% IS NULL 
or
(%<expenseyear.idfin>% = &<expenseyear.idfin>&
and %<expenseyear.idupb>% = &<expenseyear.idupb>& )
or 
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO010','1','U','expenseyear','N','S','N','N','N',{ts '2007-08-24 09:40:36.937'},'NINO','La previsione della voce in spesa %<fin.codefin>%  e  UPB  %<upb.codeupb>%  è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
	ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
]{V} 
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears, 0)   
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}]{V} ,0)
-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
	FROM pettycashoperation 
	WHERE idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	AND yrestore IS NULL
	AND nrestore IS NULL]{V}
,0)

+ 
ISNULL(&<expenseyear.amount>&, 0)
- 
ISNULL(%<expenseyear.amount>%, 0) 

>= 0 
or 
%<expenseyear.idfin>% IS NULL 
or
%<expenseyear.idfin>% <> &<expenseyear.idfin>&
or
%<expenseyear.idupb>% <> &<expenseyear.idupb>&
or 
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
or
%<expenseyear.amount>%<&<expenseyear.amount>&

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO010','2','U','expenseyear','N','S','N','N','N',{ts '2007-10-04 10:36:02.077'},'NINO','La previsione della voce in spesa %<fin.codefin>%  e  UPB  %<upb.codeupb>%  è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
]{V} 
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears, 0)   
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}]{V} 
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
,0)
+
ISNULL(&<expenseyear.amount>&, 0)
- 
ISNULL(%<expenseyear.amount>%, 0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0)
	from expensevar
	where idexp = %<expenseyear.idexp>%
	and yvar = %<sys_esercizio>%]{V}
,0)
>= 0 
or 
%<expenseyear.idfin>% IS NULL 
or
(%<expenseyear.idfin>% = &<expenseyear.idfin>&
and %<expenseyear.idupb>% = &<expenseyear.idupb>& )
or 
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}




')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO011','3','U','expenseyear','S','N','S','S','N',{ts '2007-08-24 09:44:33.877'},'NINO','La dotazione crediti della voce %<fin.codefin>%  e  UPB  %<upb.codeupb>%  è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0)  
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from upbexpensetotal 
where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}]{V} ,0)
-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
	FROM pettycashoperation 
	WHERE idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>% 
	AND yrestore IS NULL 
	AND nrestore IS NULL]{V}
,0)

- 
ISNULL(%<expenseyear.amount>%, 0) 
+ 
ISNULL(&<expenseyear.amount>&, 0) 

>= 0
or 
%<expenseyear.idfin>% IS NULL 
or
%<expenseyear.idfin>% <> &<expenseyear.idfin>& 
or
%<expenseyear.idupb>% <> &<expenseyear.idupb>& 
or 
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
or 
[select ymov from expense where 
			idexp=%<expenseyear.idexp>%]{I}
   <> %<sys_esercizio>%
or
%<expenseyear.amount>%<&<expenseyear.amount>&
OR
[SELECT assured
FROM upb
WHERE idupb = %<expenseyear.idupb>%]{C} = ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO011','4','U','expenseyear','S','N','S','S','N',{ts '2007-08-24 09:44:49.140'},'NINO','La dotazione crediti della voce %<fin.codefin>%  e  UPB  %<upb.codeupb>%  è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0)  
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
		AND idupb = %<expenseyear.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>% 
	AND idupb = %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}]{V}
,0)

- 
ISNULL(%<expenseyear.amount>%, 0)

-
ISNULL(
	[SELECT ISNULL(sum(amount), 0)
	from expensevar
	where idexp = %<expenseyear.idexp>%
	and yvar = %<sys_esercizio>%]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
	FROM pettycashoperation 
	WHERE idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>% 
	AND yrestore IS NULL 
	AND nrestore IS NULL]{V}
,0)
 >= 0
or 
%<expenseyear.idfin>% IS NULL 
or
(%<expenseyear.idfin>% = &<expenseyear.idfin>& and
 %<expenseyear.idupb>% = &<expenseyear.idupb>&
)
or 
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
or 
[select ymov from expense where 
			idexp=%<expenseyear.idexp>%]{I} <> %<sys_esercizio>%
OR
[SELECT assured
FROM upb
WHERE idupb = %<expenseyear.idupb>%]{C} = ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO012','1','U','expenseyear','S','S','S','N','S',{ts '2007-08-24 09:45:05.593'},'NINO','La dotazione incassi della voce %<fin.codefin>%  e  UPB  %<upb.codeupb>%  è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0) 
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
		AND idupb = %<expenseyear.idupb>%
]{V}
,0)
-
isnull(
[SELECT ISNULL(totalcompetency, 0) +ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>% 
	AND idupb = %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}]{V} 
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
 ,0)

+ 
ISNULL(&<expenseyear.amount>&, 0)
- 
ISNULL(%<expenseyear.amount>%, 0) 

>= 0 
or 
%<expenseyear.idfin>% IS NULL 
or
%<expenseyear.idfin>% <> &<expenseyear.idfin>&
or
%<expenseyear.idupb>% <> &<expenseyear.idupb>& 
or 
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
or 
[select ymov from expense where 
			idexp=%<expenseyear.idexp>%]{I}<> %<sys_esercizio>% 
or
%<expenseyear.amount>%<&<expenseyear.amount>&
OR
[SELECT assured
FROM upb
WHERE idupb = %<expenseyear.idupb>%]{C} = ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO012','2','U','expenseyear','S','S','S','N','S',{ts '2007-08-24 09:45:21.563'},'NINO','La dotazione incassi della voce %<fin.codefin>%  e  UPB  %<upb.codeupb>%  è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0) 
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
		AND idupb = %<expenseyear.idupb>%
]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0) 
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>% 
	AND idupb = %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}]{V}
,0)

- 
ISNULL(%<expenseyear.amount>%, 0) 

-
ISNULL(
	[SELECT ISNULL(sum(amount), 0)
	from expensevar
	where idexp = %<expenseyear.idexp>%
	and yvar = %<sys_esercizio>%]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
 ,0)

>= 0 
or 
%<expenseyear.idfin>% IS NULL 
or 
(%<expenseyear.idfin>% = &<expenseyear.idfin>& and
 %<expenseyear.idupb>% = &<expenseyear.idupb>& 
)
or 
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
or 
[select ymov from expense where 
			idexp=%<expenseyear.idexp>%]{I} <> %<sys_esercizio>% 
OR
[SELECT assured
FROM upb
WHERE idupb = %<expenseyear.idupb>%]{C} = ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO020','1','U','expenseyear','S','N','N','N','N',{ts '2007-09-06 10:01:26.233'},'NINO','La previsione della voce di spesa %<fin.codefin>%  e  UPB  %<upb.codeupb>%  è inferiore alle righe di mandato','S','ISNULL(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	and idupb= %<expenseyear.idupb>%
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) + ISNULL(totalarrears,0) 
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>%
	and idupb= %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}]{V} ,0)
	-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
	FROM pettycashoperation 
	where idfin = %<expenseyear.idfin>%
	and idupb= %<expenseyear.idupb>%
	AND yrestore IS NULL
	AND nrestore IS NULL]{V}
	,0)

- 
ISNULL(%<expenseyear.amount>%, 0) 
+ 
ISNULL(&<expenseyear.amount>&, 0) 

>= 0 
OR
%<expenseyear.idfin>% IS NULL
OR
(ISNULL(%<expenseyear.idfin>%,0) <> ISNULL(&<expenseyear.idfin>&,0))
OR
(ISNULL(%<expenseyear.idupb>%,'''') <> ISNULL(&<expenseyear.idupb>&,''''))
OR 
%<sys_maxexpensephase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
OR
%<expenseyear.amount>%<&<expenseyear.amount>&
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO020','2','U','expenseyear','S','N','N','N','N',{ts '2007-08-24 09:45:47.157'},'NINO','La previsione della voce di spesa %<fin.codefin>% e  e  UPB  %<upb.codeupb>%  è inferiore alle righe di mandato','S','ISNULL(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
	and idupb= %<expenseyear.idupb>%
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) + ISNULL(totalarrears,0) 
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>%
	and idupb= %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}]{V} ,0)
	-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
	FROM pettycashoperation 
	where idfin = %<expenseyear.idfin>%
	and idupb= %<expenseyear.idupb>%
	AND yrestore IS NULL
	AND nrestore IS NULL]{V}
	,0)
- 
ISNULL(%<expenseyear.amount>%, 0) 
>= 0 
OR
(%<expenseyear.idfin>% IS NULL)
OR
(ISNULL(%<expenseyear.idfin>%,0) = ISNULL(&<expenseyear.idfin>&,0)
 and
 ISNULL(%<expenseyear.idupb>%,'''') = ISNULL(&<expenseyear.idupb>&,'''')
)
OR
(%<sys_maxexpensephase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I})
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO022','1','U','expenseyear','S','S','S','N','N',{ts '2007-09-05 09:29:21.937'},'NINO','L''importo attuale dei movimenti di spesa della fase %<expenseview.phase>% è maggiore dell''importo attuale del movimento della fase precedente','S','([SELECT ISNULL(available,0)
FROM expensetotal
WHERE idexp = [select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I}
AND ayear = %<sys_esercizio>%]{V}
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = [select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I}
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(c.curramount)
	FROM pettycashexpense a
	JOIN expense b
	ON a.idexp = b.idexp
	JOIN expensetotal c
	ON b.idexp = c.idexp
	AND a.yoperation = c.ayear
	WHERE b.parentidexp = [select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I}
	]{V}
,0)
+

[ISNULL(&<expenseyear.amount>&,0)]{V}
-
[ISNULL(%<expenseyear.amount>%,0)]{V}) 

>= 0
OR
[select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I} IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO022','2','U','expenseyear','S','S','S','N','N',{ts '2007-09-06 10:24:28.467'},'NINO','L''importo attuale del movimento %<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>% è minore dell''importo attuale dei movimenti dipendenti','S','[(SELECT ISNULL(available, 0) 
from expensetotal 
where idexp = %<expenseyear.idexp>% 
and ayear = %<sys_esercizio>%)]{V}
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = %<expenseyear.idexp>%]{V}
,0)
+
ISNULL(
	[SELECT SUM(c.curramount)
	FROM pettycashexpense a
	JOIN expense b
	ON a.idexp = b.idexp
	JOIN expensetotal c
	ON b.idexp = c.idexp
	AND a.yoperation = c.ayear
	WHERE b.parentidexp = %<expenseyear.idexp>%]{V}
,0)

- 
[ISNULL(&<expenseyear.amount>&, 0)]{V}
+ 
[ISNULL(%<expenseyear.amount>%, 0)]{V} 

>= 0 

or 
[(SELECT count(*) 
from expense 
where parentidexp = %<expenseyear.idexp>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO023','1','U','expenseyear','S','S','S','N','N',{ts '2009-06-04 09:17:55.433'},'SA','Non può essere modificato l''importo del movimento di spesa dipendente dal movimento %<parentexpenseview.phase>%  %<parentexpenseview.nmov>%  del %<parentexpenseview.ymov>% in quanto la disponibilità negli anni successivi diventa negativa','N','
	[select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I} IS NULL
	OR

	[SELECT COUNT(*)
	FROM expensetotal
	WHERE idexp = [select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I}
	AND ayear > %<sys_esercizio>%]{I} = 0

	OR
	([SELECT ISNULL(MIN(available),0)
	FROM expensetotal
	WHERE idexp = [select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I}
	AND ayear > %<sys_esercizio>%]{V}
	-
	ISNULL(
		[SELECT SUM(amount)
		FROM pettycashoperation
		WHERE idexp = [select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I}]{V}
	,0)
	+
	ISNULL(
		[SELECT SUM(c.curramount)
		FROM pettycashexpense a
		JOIN expense b
		ON a.idexp = b.idexp
		JOIN expensetotal c
		ON b.idexp = c.idexp
		AND a.yoperation = c.ayear
		WHERE b.parentidexp = [select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I}
		]{V}
	,0)
/*	+ 	&<expenseyear.amount>& - %<expenseyear.amount>% */
	>= 0)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO023','2','U','expenseyear','S','S','S','N','N',{ts '2009-06-04 09:18:02.340'},'SA','Non può essere modificato l''importo del movimento di spesa dipendente dal movimento %<parentexpenseview.phase>%  %<parentexpenseview.nmov>%  del %<parentexpenseview.ymov>% in quanto la disponibilità negli anni successivi diventa negativa','N','
	[SELECT COUNT(*)
	FROM expensetotal
	WHERE idexp = %<expenseyear.idexp>%
	AND ayear > %<sys_esercizio>%]{V} = 0
	OR
	([SELECT ISNULL(MIN(available),0)
	FROM expensetotal
	WHERE idexp = %<expenseyear.idexp>%
	AND ayear > %<sys_esercizio>%]{V}
	-
	ISNULL(
		[SELECT SUM(amount)
		FROM pettycashoperation
		WHERE idexp = %<expenseyear.idexp>%]{V}
	,0)
	+
	ISNULL(
		[SELECT SUM(c.curramount)
		FROM pettycashexpense a
		JOIN expense b
		ON a.idexp = b.idexp
		JOIN expensetotal c
		ON b.idexp = c.idexp
		AND a.yoperation = c.ayear
		WHERE b.parentidexp = %<expenseyear.idexp>%]{V}
	,0)
/*	- 	&<expenseyear.amount>& + %<expenseyear.amount>% */
	>= 0)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO031','1','U','expenseyear','S','S','S','N','N',{ts '2008-06-30 11:09:48.287'},'ASSISTENZA','Non si può modificare la voce di bilancio del movimento di spesa del Reintegro del Fondo Economale','N','
[(select isnull(autokind,0)  from expense where
  idexp = %<expenseyear.idexp>%)]{I}   <>3

OR

isnull( &<expenseyear.idfin>&,0) = isnull(%<expenseyear.idfin>%,0)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA001','1','U','expenseyear','S','S','S','N','N',{ts '2007-09-05 10:04:38.860'},'NINO','L''importo del documento IVA %<expenseinvoice.idinvkind>% %<expenseinvoice.ninv>% del %<expenseinvoice.yinv>% è minore dei movimenti di spesa che lo contabilizzano','S','(&<expenseyear.amount>& >= %<expenseyear.amount>%)
OR
(
	[SELECT COUNT(*) 
	FROM expenseinvoice
	WHERE idexp = %<expenseyear.idexp>%]{I} = 0
)
OR
(
	(%<expenseyear.amount>% - &<expenseyear.amount>&)
	<=
	isnull([SELECT ISNULL(residual,0) FROM invoiceavailable 
	where idinvkind = [SELECT idinvkind FROM expenseinvoice WHERE idexp = %<expenseyear.idexp>%]{C}
	AND yinv = [SELECT yinv FROM expenseinvoice WHERE idexp = %<expenseyear.idexp>%]{I}
	AND ninv = [SELECT ninv FROM expenseinvoice WHERE idexp = %<expenseyear.idexp>%]{I}]{V},0)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA030','1','U','expenseyear','S','S','S','N','N',{ts '2009-02-17 12:28:07.703'},'NINO','Modificando l''importo del movimento di spesa si genererà un valore incoerente nella liquidazione iva collegata','S','[select count(*) from ivapayexpense where 
 idexp=%<expense.idexp>%
]{I}=0

or
%<expenseyear.amount>%=&<expenseyear.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS002','1','U','expenseyear','S','S','S','N','S',{ts '2007-08-24 09:47:50.780'},'NINO','La dotazione incassi della voce %<fin.codefin>%  e  UPB  %<upb.codeupb>%  è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0) 
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
		AND idupb = %<expenseyear.idupb>%
]{V}
,0)
-
isnull(
[SELECT ISNULL(totalcompetency, 0) +ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>% 
	AND idupb = %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}]{V} 
,0)
+ 
ISNULL(&<expenseyear.amount>&, 0)
- 
ISNULL(%<expenseyear.amount>%, 0) >= 0 
or 
%<expenseyear.idfin>% IS NULL 
or
%<expenseyear.idfin>% <> &<expenseyear.idfin>&
or
%<expenseyear.idupb>% <> &<expenseyear.idupb>& 
or 
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
or 
[select ymov from expense where 
			idexp=%<expenseyear.idexp>%]{I} <> %<sys_esercizio>% 
or
%<expenseyear.amount>%<&<expenseyear.amount>&
OR
[SELECT assured
FROM upb
WHERE idupb = %<expenseyear.idupb>%]{C} = ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS002','2','U','expenseyear','S','S','S','N','S',{ts '2007-08-24 09:52:05.267'},'NINO','La dotazione incassi della voce %<fin.codefin>% e UPB  %<upb.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0) 
	from upbtotal 
	where idfin = %<expenseyear.idfin>%
		AND idupb = %<expenseyear.idupb>%
]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0) 
	from upbexpensetotal 
	where idfin = %<expenseyear.idfin>% 
	AND idupb = %<expenseyear.idupb>%
	and nphase = [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}]{V}
,0)
- 
[ISNULL(%<expenseyear.amount>%, 0)] 
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0)
	from expensevar
	where idexp = %<expenseyear.idexp>%
	and yvar = %<sys_esercizio>%]{V}
,0)
>= 0 
or 
%<expenseyear.idfin>% IS NULL 
or 
(%<expenseyear.idfin>% = &<expenseyear.idfin>& and
 %<expenseyear.idupb>% = &<expenseyear.idupb>& 
)
or 
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
or 
[select ymov from expense where 
			idexp=%<expenseyear.idexp>%]{I} <> %<sys_esercizio>% 
OR
[SELECT assured
FROM upb
WHERE idupb = %<expenseyear.idupb>%]{C} = ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM001','1','U','expenseyear','S','S','S','N','N',{ts '2007-09-06 10:10:42.483'},'NINO','La voce di bilancio è assente','S','%<sys_expensefinphase>%> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
or
%<expenseyear.idfin>% is not NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM001','2','U','expenseyear','S','S','S','N','N',{ts '2007-09-06 10:10:50.170'},'NINO','La voce UPB è assente','S','%<sys_expensefinphase>% > 
[select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
or 

%<expenseyear.idupb>% is not NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM003','1','U','expenseyear','S','S','S','N','N',{ts '2009-02-02 13:11:02.030'},'ASSISTENZA','L''importo attuale dei movimenti di spesa della fase %<expenseview.phase>% è maggiore dell''importo attuale del movimento della fase precedente','N','[select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I} IS NULL
OR

([SELECT ISNULL(available,0)
FROM expensetotal
WHERE idexp = [select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I}
AND ayear = %<expenseyear.ayear>%]{V}
) >= 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM003','2','U','expenseyear','S','S','S','N','N',{ts '2007-10-19 12:35:17.593'},'NINO','L''importo attuale del movimento %<expenseview.phase>% %<expenseview.nmov>% del %<expenseview.ymov>% è minore dell''importo attuale dei movimenti dipendenti','N','[(SELECT ISNULL(available, 0) 
from expensetotal 
where idexp = %<expenseyear.idexp>% 
and ayear = %<sys_esercizio>%)]{V} >= 0 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM004','1','U','expenseyear','S','S','S','N','N',{ts '2010-02-18 09:32:52.733'},'SARA','L''importo attuale del movimento di spesa %<expenseview.phase>% %<expenseview.nmov>%  del %<expenseview.ymov>% è NEGATIVO','N','[(SELECT MIN(ISNULL(curramount, 0)) 
from expensetotal 
where idexp = %<expenseyear.idexp>%)]{V} 
 >= 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM007','1','U','expenseyear','S','S','S','N','N',{ts '2011-09-15 12:24:31.467'},'sara','Il movimento finanziario è incluso nel mandato di pagamento %<expenseview.ymov>% %<expenseview.npay>% già trasmesso e quindi non può essere modificato','N','(
 (%<expenseyear.amount>% = &<expenseyear.amount>&)  AND
 (%<expenseyear.idfin>% = &<expenseyear.idfin>&) 
)
OR

( [SELECT count(*) from paymenttransmission 
	  join payment 
		on payment.kpaymenttransmission= paymenttransmission.kpaymenttransmission 
        join expenselast 
		on payment.kpay= expenselast.kpay		
        WHERE expenselast.idexp =%<expenseyear.idexp>% and
   		payment.ypay=%<expenseyear.ayear>% 
		
		]{I} 
   =0 )

OR

[SELECT nphase FROM expense WHERE idexp = %<expenseyear.idexp>%]{I} 
< %<sys_maxexpensephase>%
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM expenselast
JOIN payment  
	ON payment.kpay = expenselast.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp = %<expenseyear.idexp>% ]{C},''N'' )= ''S'')
AND
[(SELECT COUNT(*)  FROM expensevar  WHERE idexp = %<expenseyear.idexp>%
AND kpaymenttransmission IS NULL AND autokind = 22)]{I} <> 0
AND
-- unicredit non permette le variazioni di dati contabili ma solo del Siope
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM expenselast
JOIN payment 
	ON payment.kpay = expenselast.kpay
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE expenselast.idexp =  %<expenseyear.idexp>%]{C},'''' ) <> ''02008''
)
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM010','1','U','expenseyear','S','S','S','N','N',{ts '2007-12-05 10:49:15.653'},'SARA','Il capitolo di imputazione non può essere modificato poiché è stato emesso un mandato di pagamento ed esiste un criterio di raggruppamento dei pagamenti per capitolo di imputazione.','S','-- Non è associato alcun mandato al movimento di spesa
(
	[SELECT COUNT(*)
	FROM expenselast join 
       expenselink on expenselink.idchild=expenselast.idexp        
	WHERE expenselink.idparent= %<expenseyear.idexp>% 
	AND expenselast.kpay IS NOT NULL
      ]{I} = 0
)
OR
-- Non esiste alcun raggruppamento per voce di bilancio nel mandato 
([SELECT payment_flag & 2 FROM config  WHERE ayear = %<sys_esercizio>%]{I} = 0)
OR
-- La voce di bilancio non è cambiata
(&<expenseyear.idfin>& = %<expenseyear.idfin>%)
OR
-- Esiste un raggruppamento per voce di bilancio ma è superiore rispetto alla voce che stiamo modificando
(
	([SELECT payment_flag & 2 FROM config  WHERE ayear = %<sys_esercizio>%]{I} <> 0)
	AND
	(
		   ISNULL([SELECT payment_finlevel FROM config  WHERE ayear = %<sys_esercizio>%]{I},
		      [select nlevel from fin where  idfin=%<expenseyear.idfin>%]{I})
               <
		[select nlevel from fin where 
			idfin=%<expenseyear.idfin>%]{I}
	)
	AND
	(
           [SELECT idparent from finlink where idchild= &<expenseyear.idfin>& and 
                           nlevel=    ISNULL([SELECT payment_finlevel FROM config  WHERE ayear = %<sys_esercizio>%]{I},
		      [select nlevel from fin where  idfin=%<expenseyear.idfin>%]{I})

           ]{I} =
           [SELECT idparent from finlink where idchild= %<expenseyear.idfin>% and 
                           nlevel= 	   ISNULL([SELECT payment_finlevel FROM config  WHERE ayear = %<sys_esercizio>%]{I},
		      [select nlevel from fin where  idfin=%<expenseyear.idfin>%]{I})

           ]{I}

	)
)
OR
-- Esiste il raggruppamento, la voce di bilancio ha livello inferiore o lo stesso del raggruppamento ma il movimento di spesa nel mandato è unico e il mandato non è stato trasmesso
(
 ([SELECT payment_flag & 2 FROM config  WHERE ayear = %<sys_esercizio>%]{I} <>0)
 AND
 (
   ISNULL([SELECT payment_finlevel FROM config  WHERE ayear = %<sys_esercizio>%]{I},
		      [select nlevel from fin where  idfin=%<expenseyear.idfin>%]{I})
                

 <=
 [select nlevel from fin where 
			idfin=%<expenseyear.idfin>%]{I}

 )
 AND
 [SELECT COUNT(*)
      from  expenselink 
      join expenselast on expenselast.idexp= expenselink.idchild
	JOIN payment D1
           	ON expenselast.kpay=D1.kpay
      JOIN expenselast EL 
            ON EL.kpay= D1.kpay
      JOIN expense e3 
            ON e3.idexp= EL.idexp
            AND e3.ymov= D1.ypay     
	WHERE  expenselink.idparent= %<expenseyear.idexp>% 
           AND not exists (select * from expenselink EL2 where
                                  EL2.idparent=  %<expenseyear.idexp>%  and
				          EL2.idchild = EL.idexp)
                         
 ]{I}=0

 AND

 [SELECT COUNT(*)
	FROM paymenttransmission t
	JOIN payment d
		ON t.kpaymenttransmission = d.kpaymenttransmission
	JOIN expenselast s
   	     ON s.kpay = d.kpay
      JOIN expense e
		ON s.idexp= e.idexp          
  	      AND d.ypay = e.ymov
      JOIN expenselink EL
           ON EL.idchild= E.idexp
	WHERE EL.idparent = %<expenseyear.idexp>%]{I}=0
)











')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM016','1','U','expenseyear','S','S','S','N','N',{ts '2007-11-27 10:19:09.640'},'SARA','Le classificazioni associate al movimento di spesa %<expenseview.phase>% n. %<expenseview.nmov>% del %<expenseview.ymov>% sono superiori rispetto all''importo dello stesso','N','--post
(
	[SELECT curramount FROM expensetotal
	WHERE idexp = %<expenseyear.idexp>% 
	AND ayear = %<expenseyear.ayear>%]{V}
	>=
	[ISNULL(
		(SELECT TOP 1 SUM(I.amount)
		FROM expensesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE I.idexp = %<expenseyear.idexp>%
		AND I.ayear = %<expenseyear.ayear>%
		GROUP BY S.idsorkind,I.idexp
		ORDER BY SUM(I.amount) DESC)
	,0)]{V}
)
OR
(&<expenseyear.amount>& < %<expenseyear.amount>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM019','1','U','expenseyear','S','S','S','N','N',{ts '2007-09-06 10:14:18.827'},'NINO','La voce di bilancio annuale del movimento di spesa residuo  %<expenseview.phase>%  %<expenseview.nmov>% del %<expenseview.ymov>% non può essere modificata in un esercizio differente da quello di creazione','N','--post
(
	[SELECT COUNT(*) 
	FROM expenseyear
	WHERE ayear < %<expenseyear.ayear>%
	AND idexp = %<expenseyear.idexp>%]{I} = 0
)
OR
(ISNULL(%<expenseyear.idfin>%,0) = ISNULL(&<expenseyear.idfin>&,0))')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM019','2','U','expenseyear','S','S','S','N','N',{ts '2007-09-06 10:22:15.000'},'NINO','La voce di UPB del movimento di spesa residuo  %<expenseview.phase>%  %<expenseview.nmov>% del %<expenseview.ymov>% non può essere modificata in un esercizio differente da quello di creazione','N','--post
(
	[SELECT COUNT(*) 
	FROM expenseyear
	WHERE ayear < %<expenseyear.ayear>%
	AND idexp = %<expenseyear.idexp>%]{I} = 0
)
OR
(ISNULL(%<expenseyear.idupb>%,'''') = ISNULL(&<expenseyear.idupb>&,''''))')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM020','1','U','expenseyear','S','S','S','N','N',{ts '2009-06-04 09:14:26.947'},'SA','Non può essere modificato l''importo del movimento di spesa dipendente dal movimento %<expenseview.phase>%  %<expenseview.nmov>% del %<expenseview.ymov>% in quanto la disponibilità negli anni successivi diventa negativa','N','
(
		[SELECT COUNT(*)
		FROM expensetotal
		WHERE idexp = %<expenseyear.idexp>%
		AND ayear > %<sys_esercizio>%]{I} = 0
)
OR
(
		[SELECT ISNULL(MIN(available),0)
			FROM expensetotal
			WHERE idexp = %<expenseyear.idexp>%
			AND ayear > %<sys_esercizio>%]{V}
			/* -  (&<expenseyear.amount>& - %<expenseyear.amount>%)  */
			>= 0
)
OR
(
	ISNULL(
		[SELECT MAX(ayear) FROM accountingyear WHERE ((flag&0x0F)>=5)]{I}
	,%<sys_esercizio>%-1) < %<sys_esercizio>%
)
/* OR (&<expenseyear.amount>& - %<expenseyear.amount>%)<=0 */
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM020','2','U','expenseyear','S','S','S','N','N',{ts '2009-06-04 09:14:32.260'},'SA','Non può essere modificato l''importo del movimento di spesa dipendente dal movimento %<parentexpenseview.phase>% %<parentexpenseview.nmov>%  del %<parentexpenseview.ymov>% in quanto la disponibilità negli anni successivi diventa negativa','N','

(
	[SELECT COUNT(*)
		FROM expensetotal
		WHERE idexp = [select parentidexp from expense where 
			                  idexp=%<expenseyear.idexp>%]{I}
		AND ayear > %<sys_esercizio>%]{I} = 0
)
OR
(
	[SELECT ISNULL(MIN(available),0)
		FROM expensetotal
		WHERE idexp = [select parentidexp from expense where 
			idexp=%<expenseyear.idexp>%]{I}
		AND ayear > %<sys_esercizio>%]{V}
		/*+  (&<expenseyear.amount>& - %<expenseyear.amount>%) */
		>= 0
)
OR
(
	ISNULL(
		[SELECT MAX(ayear) FROM accountingyear WHERE ((flag&0x0F)>=5)]{I}
	,%<sys_esercizio>%-1) < %<sys_esercizio>%
)
/*or (&<expenseyear.amount>& - %<expenseyear.amount>%) >=0 */
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM021','1','U','expenseyear','S','S','S','N','N',{ts '2007-08-24 10:57:32.203'},'NINO','FONDO DI CASSA INIZIALE + totale delle reversali trasmesse in banca deve essere maggiore od uguale al totale dei pagamenti (anche non inclusi in un mandato)','N','--post
[SELECT ISNULL(currentfloatfund,0) FROM currentcashtotal WHERE ayear = %<sys_esercizio>%]{V} >=0
OR
[select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}<> %<sys_maxexpensephase>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM028','1','U','expenseyear','S','S','S','N','N',{ts '2007-09-06 10:15:54.280'},'NINO','Sul movimento di spesa %<expenseview.nmov>% del %<expenseview.ymov>% non può essere cambiata l''imputazione della voce di bilancio annuale in quanto è considerato residuo per gli esercizi successivi. SE LA REGOLA VIENE IGNORATA SI CONSIGLIA DI EFFETTUARE UNA VARIAZIONE DI DOTAZIONE CREDITI NELL''ESERCIZIO SUCCESSIVO DOVE IL MOVIMENTO E'' CONSIDERATO RESIDUO','S','(
[SELECT COUNT(*)
FROM expenseyear
WHERE ayear > %<sys_esercizio>%
AND idexp = %<expenseyear.idexp>%]{I} = 0
)
OR
(ISNULL(%<expenseyear.idfin>%,0) = ISNULL(&<expenseyear.idfin>&,0))
OR
[select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I} <>%<sys_expensefinphase>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM028','2','U','expenseyear','S','S','S','N','N',{ts '2007-09-06 10:16:18.327'},'NINO','Sul movimento di spesa  %<expenseview.phase>%  %<expenseview.nmov>% del %<expenseview.ymov>% non può essere cambiato l''UPB in quanto è considerato residuo per gli esercizi successivi.
SE LA REGOLA VIENE IGNORATA SI CONSIGLIA DI EFFETTUARE UNA VARIAZIONE DI DOTAZIONE CREDITI NELL''ESERCIZIO SUCCESSIVO DOVE IL MOVIMENTO E'' CONSIDERATO RESIDUO','S','(
[SELECT COUNT(*)
FROM expenseyear
WHERE ayear > %<sys_esercizio>%
AND idexp = %<expenseyear.idexp>%]{I} = 0
)
OR
(ISNULL(%<expenseyear.idupb>%,'''') = ISNULL(&<expenseyear.idupb>&,''''))
OR
([select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}<>%<sys_expensefinphase>%)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM031','1','U','expenseyear','S','S','S','N','N',{ts '2013-06-11 16:54:31.560'},'assistenza','L''importo originale del movimento di spesa  %<expenseview.phase>%  %<expenseview.nmov>% del %<expenseview.ymov>% è minore della somma degli importi delle ritenute c/dipendente','S','
(%<expenseyear.amount>% >= (ISNULL(
	[SELECT ISNULL(SUM(employtax), 0) 
	FROM expensetax
	WHERE idexp = %<expenseyear.idexp>% ]{V},0)  
+
ISNULL(
	[SELECT SUM(expensetaxcorrige.employamount	)
	FROM expensetaxcorrige
	WHERE expensetaxcorrige.idexp = %<expenseyear.idexp>%]{V}
,0)
)
)
OR
(&<expenseyear.amount>& = %<expenseyear.amount>%)
OR
(
[SELECT COUNT(*)
FROM expensepayroll
JOIN expenselink
	ON expenselink.idparent = expensepayroll.idexp
WHERE expenselink.idchild = %<expenseyear.idexp>%]{I} > 0
AND
[SELECT nphase FROM expense
WHERE idexp = %<expenseyear.idexp>%]{I} = %<sys_maxexpensephase>%
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM038','1','U','expenseyear','S','S','S','S','N',{ts '2009-01-20 12:31:29.430'},'SA','Il totale dell''accertato è inferiore al totale dell''impegnato per l''UPB scelto','S','-- Caso in cui cambia l''importo
[SELECT assured FROM upb
WHERE idupb = %<expenseyear.idupb>%]{C} <> ''S''
OR
%<expenseyear.amount>% <= &<expenseyear.amount>&
OR
ISNULL(%<expenseyear.idupb>%,'''') <> ISNULL(&<expenseyear.idupb>&,'''')
OR
[select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I} <> %<sys_appropriationphase>%
OR
ISNULL(
	[SELECT SUM(amount) FROM incomeyear
       join incometotal ON incomeyear.idinc= incometotal.idinc and incometotal.ayear=incomeyear.ayear
       join income on income.idinc= incomeyear.idinc
	WHERE idupb = %<expenseyear.idupb>%
	AND income.nphase = %<sys_assessmentphase>%
	AND (incometotal.flag & 1)=0
  ]{V}
,0)
+
ISNULL(
	[SELECT SUM(incomevar.amount)
	FROM incomevar
	JOIN incomeyear
	ON incomevar.idinc = incomeyear.idinc
         join income on incomeyear.idinc=income.idinc 
		AND incomeyear.ayear=%<expenseyear.ayear>%
	WHERE incomevar.yvar <= %<sys_esercizio>%
	AND income.nphase = %<sys_assessmentphase>%
	AND incomeyear.idupb = %<expenseyear.idupb>%
]{V}
,0)
+
[SELECT ISNULL(previousassessment,0) - ISNULL(previousappropriation,0)
FROM upb
WHERE idupb = %<expenseyear.idupb>%]{V}
+
ISNULL(
	[SELECT SUM(creditvariation)
	FROM upbtotal
	WHERE idupb = %<expenseyear.idupb>%]{V}
,0)
>=
ISNULL(
	[SELECT SUM(amount)
	FROM expenseyear 
       join expense on expense.idexp=expenseyear.idexp
       join expensetotal on expensetotal.idexp= expenseyear.idexp 
			and expensetotal.ayear=expenseyear.ayear
	WHERE idupb = %<expenseyear.idupb>%
	AND expense.nphase = %<sys_appropriationphase>%
	AND (expensetotal.flag  & 1)= 0
]{V}
,0)
+
ISNULL(
	[SELECT SUM(expensevar.amount) FROM expensevar
	JOIN expenseyear
		ON expensevar.idexp = expenseyear.idexp
		AND expenseyear.ayear= %<expenseyear.ayear>%
       join expense on expense.idexp=expensevar.idexp
	WHERE expensevar.yvar <= %<sys_esercizio>%
	AND expense.nphase = %<sys_appropriationphase>%
	AND expenseyear.idupb = %<expenseyear.idupb>%
]{V}
,0)

+ %<expenseyear.amount>% 
- &<expenseyear.amount>&




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM038','2','U','expenseyear','S','S','S','S','N',{ts '2009-01-20 12:31:31.867'},'SA','Il totale dell''accertato è inferiore al totale dell''impegnato per l''UPB scelto','S','-- Caso in cui cambia l''UPB
[SELECT assured FROM upb
WHERE idupb = %<expenseyear.idupb>%]{C} <> ''S''
OR
ISNULL(%<expenseyear.idupb>%,'''') = ISNULL(&<expenseyear.idupb>&,'''')
OR
[select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
<> %<sys_appropriationphase>%
OR
ISNULL(
	[SELECT SUM(amount) FROM incomeyear
       join incometotal ON incomeyear.idinc= incometotal.idinc and incometotal.ayear=incomeyear.ayear
       join income on income.idinc= incomeyear.idinc
	WHERE idupb = %<expenseyear.idupb>%
	AND income.nphase = %<sys_assessmentphase>%
	AND (incometotal.flag & 1)=0
  ]{V}
,0)
+
ISNULL(
	[SELECT SUM(incomevar.amount)
	FROM incomevar
	JOIN incomeyear
	ON incomevar.idinc = incomeyear.idinc
         join income on incomeyear.idinc=income.idinc 
		AND incomeyear.ayear=%<expenseyear.ayear>%
	WHERE incomevar.yvar <= %<sys_esercizio>%
	AND income.nphase = %<sys_assessmentphase>%
	AND incomeyear.idupb = %<expenseyear.idupb>%
]{V}
,0)

+
[SELECT ISNULL(previousassessment,0) - ISNULL(previousappropriation,0)
FROM upb
WHERE idupb = %<expenseyear.idupb>%]{V}
+
ISNULL(
	[SELECT SUM(creditvariation)
	FROM upbtotal
	WHERE idupb = %<expenseyear.idupb>%]{V}
,0)
>=
ISNULL(
	[SELECT SUM(amount)
	FROM expenseyear 
       join expense on expense.idexp=expenseyear.idexp
       join expensetotal on expensetotal.idexp= expenseyear.idexp 
			and expensetotal.ayear=expenseyear.ayear
	WHERE idupb = %<expenseyear.idupb>%
	AND expense.nphase = %<sys_appropriationphase>%
	AND (expensetotal.flag  & 1)= 0
]{V}
,0)
+
ISNULL(
	[SELECT SUM(expensevar.amount) FROM expensevar
	JOIN expenseyear
		ON expensevar.idexp = expenseyear.idexp
		AND expenseyear.ayear= %<expenseyear.ayear>%
       join expense on expense.idexp=expensevar.idexp
	WHERE expensevar.yvar <= %<sys_esercizio>%
	AND expense.nphase = %<sys_appropriationphase>%
	AND expenseyear.idupb = %<expenseyear.idupb>%
]{V}
,0)

- %<expenseyear.amount>%


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM039','1','U','expenseyear','S','S','S','N','N',{ts '2007-10-13 19:49:44.267'},'NINO','Il responsabile del movimento:%<expenseview.manager>%, non è quello dell''UPB : %<expenseview.upb>%.','N','ISNULL(%<expenseyear.idupb>%,'''') = ISNULL(&<expenseyear.idupb>&,'''')
OR
(ISNULL([SELECT idman
FROM upb 
WHERE idupb = %<expenseyear.idupb>%]{I},0)
= 0)
OR
(ISNULL([SELECT idman
FROM expense 
WHERE idexp = %<expenseyear.idexp>%]{I},0)) = 
(ISNULL([SELECT idman
FROM upb 
WHERE idupb = %<expenseyear.idupb>%]{I},0))
OR
ISNULL([SELECT idman
FROM expense 
WHERE idexp = %<expenseyear.idexp>%]{I},0)=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM044','1','U','expenseyear','S','S','S','N','N',{ts '2007-08-24 12:01:30.187'},'NINO','Il movimento di spesa non può essere salvato con una voce di bilancio riferita ad esercizi differenti dall''attuale','S','[select ayear from fin where idfin=%<expenseyear.idfin>%]{I} = %<expenseyear.ayear>%
OR
%<expenseyear.idfin>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM057','1','U','expenseyear','S','S','S','N','N',{ts '2012-07-18 10:21:45.203'},'sara','Il movimento di spesa %<expenseview.nmov>% del %<expense.ymov>% risulta già esitato','S','(
%<expenseyear.amount>% = &<expenseyear.amount>&
AND 
%<expenseyear.idfin>% = &<expenseyear.idfin>&
)
OR
(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 
	 WHERE idexp= %<expenseyear.idexp>%]{V}
	,0) = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM066','1','U','expenseyear','S','S','S','N','N',{ts '2013-03-22 14:36:11.090'},'sa','Deve essere ricalcolata la situazione finanziaria effettiva nell''esercizio precedente poiché non risulta allineata con i movimenti finanziari effettivamente inseriti','N','(
[SELECT nphase FROM expense 
 WHERE  expense.idexp = %<expenseyear.idexp>%]{I}
< %<sys_maxexpensephase>%)
OR
(%<expenseyear.amount>% = 
&<expenseyear.amount>&)
OR
([(SELECT COUNT(*) 
  FROM currentcashtotal 
  WHERE ayear = (%<sys_esercizio>% - 1))]{I} = 0)
OR
([SELECT  ISNULL(startfloatfund,0)  
   FROM surplus WHERE ayear = %<sys_esercizio>% ]{V}
= 
[SELECT ISNULL(currentfloatfund,0) 
   FROM currentcashtotal 
  WHERE ayear = (%<sys_esercizio>% - 1)]{V}
)
OR
(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = (%<sys_esercizio>%-1)]{I}
,0) & 0x0F)<4
OR
(ISNULL(
	[select locked from surplus where ayear = (%<sys_esercizio>% - 1)]{C},
	''N'') = ''S''
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM074','1','U','expenseyear','S','S','S','N','N',{ts '2008-11-07 15:18:30.543'},'NINO','La modifica  al bilancio del  movimento finanziario comporterà la modifica alla stampa Ufficiale del Mandato di pagamento.','N',' (%<expenseyear.idfin>% = &<expenseyear.idfin>&) 
OR
([SELECT count(*) FROM expenselink
	JOIN expenselast 
		on expenselink.idchild =  expenselast.idexp
	JOIN payment 
		on payment.kpay= expenselast.kpay		
        WHERE expenselink.idparent =%<expenseyear.idexp>% AND
   		payment.ypay=%<expenseyear.ayear>% AND 
		payment.printdate IS NOT NULL]{I}    = 0 )
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM074','2','U','expenseyear','S','S','S','N','N',{ts '2008-11-07 15:18:23.387'},'NINO','La modifica all''importo  del  movimento finanziario comporterà la modifica alla stampa Ufficiale del Mandato di pagamento.','N',' (%<expenseyear.amount>% = &<expenseyear.amount>&)

OR
([SELECT count(*) FROM 
	expenselast 
	JOIN payment 
		on payment.kpay= expenselast.kpay		
        WHERE expenselast .idexp =%<expenseyear.idexp>% AND
   		payment.ypay=%<expenseyear.ayear>% AND 
		payment.printdate IS NOT NULL]{I}    = 0 )
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM076','1','U','expenseyear','S','S','S','N','N',{ts '2008-11-26 11:29:58.860'},'SA','Errore nell''applicazione, dati incoerenti nella gerarchia dei movimenti. (Spesa/Bilancio)','N','(
ISNULL (%<expenseyear.idfin>%,0)= 0
)

OR

ISNULL([select parentidexp from expense where idexp=
	%<expenseyear.idexp>%]{I},  0)=0

OR

(
ISNULL(
	[select idfin from expenseyear  EY
	join expense E on E.parentidexp=EY.idexp
	where E.idexp=%<expenseyear.idexp>%
		and EY.ayear=%<expenseyear.ayear>%]{I},0)
= 0
)

OR

(
ISNULL (%<expenseyear.idfin>%,0)
=
ISNULL(
	[select idfin from expenseyear  EY
	join expense E on E.parentidexp=EY.idexp
	where E.idexp=%<expenseyear.idexp>%
		and EY.ayear=%<expenseyear.ayear>%]{I},0)

)

OR

isnull(%<expenseyear.idfin>%,0) = isnull(&<expenseyear.idfin>&,0)

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM076','2','U','expenseyear','S','S','S','N','N',{ts '2008-11-26 11:30:12.563'},'SA','Errore nell''applicazione, dati incoerenti nella gerarchia dei movimenti.(Spesa/Upb)','N','(
ISNULL (%<expenseyear.idupb>%,''0'')= ''0''
)

OR

ISNULL([select parentidexp from expense where idexp=
	%<expenseyear.idexp>%]{I},  0)=0

OR

(
ISNULL(
	[select idupb from expenseyear  EY
	join expense E on E.parentidexp=EY.idexp
	where E.idexp=%<expenseyear.idexp>%
		and EY.ayear=%<expenseyear.ayear>%]{C},''0'')
= ''0''
)

OR

(
ISNULL (%<expenseyear.idupb>%,''0'')
=
ISNULL(
	[select idupb from expenseyear  EY
	join expense E on E.parentidexp=EY.idexp
	where E.idexp=%<expenseyear.idexp>%
		and EY.ayear=%<expenseyear.ayear>%]{C},''0'')

)

OR

isnull(%<expenseyear.idupb>%,''0'') = isnull(&<expenseyear.idupb>&,''0'')

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM079','1','U','expenseyear','S','S','S','N','N',{ts '2009-03-25 14:56:33.983'},'SARA','Si sta modificando l''UPB di un movimento finanziario inserito in un Mandato di Pagamento. Questo comporterà la modifica della stampa, qualora essa preveda la visualizzazione dell''UPB.','N',' (%<expenseyear.idupb>% = &<expenseyear.idupb>&) 
OR
([SELECT count(*) FROM expenselink
	JOIN expenselast 
		on expenselink.idchild =  expenselast.idexp
	JOIN payment 
		on payment.kpay= expenselast.kpay		
        WHERE expenselink.idparent =%<expenseyear.idexp>% AND
   		payment.ypay=%<expenseyear.ayear>% AND 
		payment.printdate IS NOT NULL]{I}    = 0 )

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM079','2','U','expenseyear','S','S','S','N','N',{ts '2009-03-25 14:52:37.640'},'SARA','Si sta modificando l''UPB di un movimento finanziario che contabilizza i dettagli di un Contratto Passivo. Al fine di evitare incoerenze, è necessario adegare opportunamente i dettagli del Contratto Passivo.','N',' (%<expenseyear.idupb>% = &<expenseyear.idupb>&) 
OR
([SELECT count(*) FROM expenselink
	JOIN expensemandate
		on expenselink.idchild =  expensemandate.idexp
	JOIN mandatedetail
		ON mandatedetail.idmankind = expensemandate.idmankind
		AND mandatedetail.yman = expensemandate.yman
		AND mandatedetail.nman = expensemandate.nman
        WHERE expenselink.idparent =%<expenseyear.idexp>% 
		AND mandatedetail.idupb = &<expenseyear.idupb>&
]{I}    = 0 )

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS003','1','U','expenseyear','S','S','S','N','N',{ts '2007-09-06 10:20:15.030'},'NINO','L''importo lordo del contratto occasionale è minore dei movimenti di spesa che lo contabilizzano','S','(&<expenseyear.amount>& = %<expenseyear.amount>%)
OR

ISNULL(
[SELECT ycon FROM expensecasualcontract WHERE idexp = %<expenseyear.idexp>%]{I}
,0)=0


OR
(
[SELECT ISNULL(residual,0)
FROM casualcontractresidual 
WHERE ycon = 
	[SELECT ycon FROM expensecasualcontract WHERE idexp = %<expenseyear.idexp>%]{I}
AND ncon =
	[SELECT ncon FROM expensecasualcontract WHERE idexp = %<expenseyear.idexp>%]{I}
]{V}
- %<expenseyear.amount>%
+ &<expenseyear.amount>&
>= 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS006','1','U','expenseyear','S','S','S','N','N',{ts '2009-10-20 14:12:31.297'},'SARA','Non è normalmente consentito modificare l''importo originale del pagamento di un contratto occasionale in presenza di applicazione quota esente.','N','--post
[select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I}
 <  %<sys_maxexpensephase>%
OR
[SELECT COUNT(*) from expensecasualcontract 
    join expenselink on expenselink.idparent=expensecasualcontract.idexp
	where expenselink.idchild= %<expenseyear.idexp>%  
]{I}=0
OR
[SELECT COUNT(*) from tax T
 	 join servicetax ST on T.taxcode=ST.taxcode
	 join service S ON ST.idser=S.idser
	join motive770service MS on MS.idser= S.idser
             JOIN casualcontract C on C.idser=S.idser
	JOIN expensecasualcontract EC on EC.ycon= C.ycon and EC.ncon=C.ncon
	 join expenselink EL  on EL.idparent = EC.idexp 		
	WHERE  EL.idchild = %<expenseyear.idexp>% 
		AND MS.ayear=%<sys_esercizio>%
		AND  MS.idmot IN (''C'',''V'',''M'')
]{I}=0
OR
ISNULL(%<expenseyear.amount>%,0) = ISNULL(&<expenseyear.amount>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN001','1','U','expenseyear','S','S','S','N','N',{ts '2007-08-23 14:55:42.907'},'NINO','L''importo del movimento di spesa  è diverso dalla somma dei dettagli del contratto passivo associati','N','(isnull(&<expenseyear.amount>&,0) = isnull(%<expenseyear.amount>%,0))
OR
(
[SELECT COUNT(*) 
FROM  expensemandateview 
WHERE expensemandateview.idexp = %<expenseyear.idexp>%
AND   ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)
AND   ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS013','1','U','expenseyear','S','S','S','N','N',{ts '2007-09-01 11:40:20.093'},'NINO','L''importo del movimento di spesa deve essere identico a quello dell''impegno che contabilizza il cedolino','S','(
[SELECT COUNT(*)
FROM expensepayroll 
 join expenselink on expensepayroll.idexp= expenselink.idparent
WHERE expenselink.idchild=%<expenseyear.idexp>%
]{I} = 0
)

OR
&<expenseyear.amount>& = %<expenseyear.amount>%

OR

(
[select amount from expenseyear EY 
	JOIN expense E on E.idexp=EY.idexp
			 AND E.ymov=EY.ayear
    where
     EY.idexp=  %<expenseyear.idexp>% 
]{V}
+
ISNULL(
[SELECT SUM(amount) FROM expensevar
WHERE  idexp = %<expenseyear.idexp>%
	AND ISNULL(autokind,0) <> 4
]{V},0)

 =
[SELECT EY.amount FROM expenseyear EY
   JOIN expense E on E.idexp=EY.idexp and
			   E.ymov=EY.ayear
   JOIN expenselink EL ON EY.idexp=EL.idparent
      
WHERE  EL.nlevel=%<sys_itinerationphase>%
	and EL.idchild = %<expenseyear.idexp>%
]{V}
+
ISNULL(
[SELECT SUM(EV.amount) FROM expensevar EV
   JOIN expenselink EL ON EV.idexp=EL.idparent      
WHERE  EL.nlevel=%<sys_itinerationphase>%
	and EL.idchild = %<expenseyear.idexp>%
	AND ISNULL(EV.autokind,0) <> 4
]{V}
,0)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE002','1','U','expenseyear','S','S','S','N','N',{ts '2007-09-06 10:19:58.627'},'NINO','L''importo lordo del contratto professionale è minore dei movimenti di spesa che lo contabilizzano','S','(&<expenseyear.amount>& = %<expenseyear.amount>%)
OR

ISNULL(
[SELECT ycon FROM expenseprofservice WHERE idexp = %<expenseyear.idexp>%]{I}
,0)=0

OR
(
[SELECT ISNULL(residual,0)
FROM profserviceresidual 
WHERE ycon = 
	[SELECT ycon FROM expenseprofservice WHERE idexp = %<expenseyear.idexp>%]{I}
AND ncon =
	[SELECT ncon FROM expenseprofservice WHERE idexp = %<expenseyear.idexp>%]{I}
]{V}
- %<expenseyear.amount>%
+ &<expenseyear.amount>&
>= 0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE007','1','U','expenseyear','S','S','S','N','N',{ts '2009-09-23 13:08:17.233'},'SARA','Le spese collegate alla parcella professionale  saranno considerate pagate in proporzione all''effettivo importo dell''imponibile liquidato. E'' consigliabile rimuovere le spese e posticiparne l''inserimento  al momento del saldo della prestazione. E'' necessario comunque saldare la prestazione entro l''anno, per non essere costretti a correzioni manuali del modello 770.','N','--post
[select nphase from expense where 
	idexp=%<expenseyear.idexp>%]{I}
 	< %<sys_maxexpensephase>%
OR
-- non contabilizza un contratto professionale
[SELECT COUNT(*) from expenseprofservice 
    join expenselink on expenselink.idparent=expenseprofservice.idexp
	where expenselink.idchild= %<expenseyear.idexp>% 
]{I}=0
-- pagamento totale del contratto
OR
([(select (isnull(totalcost,0) - isnull(ivaamount,0)) 
from  profservice
join  expenseprofservice
on    expenseprofservice.ycon = profservice.ycon
and  expenseprofservice.ncon = profservice.ncon	
join expenselink on expenselink.idparent=expenseprofservice.idexp
and  expenselink.idchild= %<expenseyear.idexp>% 
)]{V}
= 
isnull([(select expenseyear.amount
	from expenseyear
	where expenseyear.idexp = %<expenseyear.idexp>% 
	and expenseyear.ayear = %<sys_esercizio>%
)]{V} , 0.0)
+
isnull([(select sum(expensevar.amount)
from expensevar
where expensevar.idexp = %<expenseyear.idexp>% 
and isnull(expensevar.autokind,0)<>4
and expensevar.yvar=%<sys_esercizio>%
)]{V} , 0.0)
)
OR
[SELECT movkind from expenseprofservice 
    JOIN   expenselink on expenselink.idparent=expenseprofservice.idexp
 AND      expenselink.idchild= %<expenseyear.idexp>% 
]{I} <> 3 
OR
-- non ci sono spese collegate al contratto attualmente pagato
[SELECT COUNT(*) from profservicerefund PR
	JOIN profservice P
		ON   PR.ycon   = P.ycon
		AND  PR.ncon   = P.ncon
	JOIN expenselink EL
		ON   EL.idchild = %<expenseyear.idexp>% 
		AND  EL.nlevel  =  %<sys_itinerationphase>%
	JOIN expenseprofservice EP
		ON   EP.ycon   = P.ycon
		AND  EP.ncon   = P.ncon
		AND  EP.idexp  = EL.idparent]{I} = 0
OR
ISNULL(%<expenseyear.amount>%,0) = ISNULL(&<expenseyear.amount>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE007','2','U','expenseyear','S','S','S','N','N',{ts '2009-09-23 11:36:42.860'},'SARA','Le spese collegate alla parcella professionale saranno considerate pagate in proporzione all''effettivo importo liquidato. E'' consigliabile  rimuovere le spese e posticiparne l''inserimento  al momento del saldo della prestazione.  E'' necessario comunque saldare la prestazione entro l''anno, per non essere costretti a correzioni manuali del modello 770.','N','--post
[select nphase from expense where 
	idexp=%<expenseyear.idexp>%]{I}
 	<  %<sys_maxexpensephase>%
OR
-- non contabilizza un contratto professionale
[SELECT COUNT(*) from expenseprofservice 
    join expenselink on expenselink.idparent=expenseprofservice.idexp
	where expenselink.idchild= %<expenseyear.idexp>% 
]{I}=0
-- pagamento totale del contratto
OR
([(select totalcost 
from  profservice
join  expenseprofservice
on    expenseprofservice.ycon = profservice.ycon
and  expenseprofservice.ncon = profservice.ncon	
join expenselink on expenselink.idparent=expenseprofservice.idexp
and  expenselink.idchild= %<expenseyear.idexp>% 
)]{V}
= 
isnull([(select expenseyear.amount
	from expenseyear
	where expenseyear.idexp = %<expenseyear.idexp>% 
	and expenseyear.ayear = %<sys_esercizio>%
)]{V} , 0.0)
+
isnull([(select sum(expensevar.amount)
from expensevar
where expensevar.idexp = %<expenseyear.idexp>% 
and isnull(expensevar.autokind,0)<>4
and expensevar.yvar=%<sys_esercizio>%
)]{V} , 0.0)
)
OR
[SELECT movkind from expenseprofservice 
    JOIN   expenselink on expenselink.idparent=expenseprofservice.idexp
 AND      expenselink.idchild= %<expenseyear.idexp>% 
]{I} <> 1 
OR
-- non ci sono spese collegate al contratto attualmente pagato
[SELECT COUNT(*) from profservicerefund PR
	JOIN profservice P
		ON   PR.ycon   = P.ycon
		AND  PR.ncon   = P.ncon
	JOIN expenselink EL
		ON   EL.idchild = %<expenseyear.idexp>% 
		AND  EL.nlevel  =  %<sys_itinerationphase>%
	JOIN expenseprofservice EP
		ON   EP.ycon   = P.ycon
		AND  EP.ncon   = P.ncon
		AND  EP.idexp  = EL.idparent]{I} = 0
OR
ISNULL(%<expenseyear.amount>%,0) = ISNULL(&<expenseyear.amount>&,0)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE008','1','U','expenseyear','S','S','S','N','N',{ts '2009-09-23 13:13:46.937'},'SARA','Poichè si sta effettuando un pagamento parziale dell''imponibile del contratto professionale, il professionista dovrà emettere una parcella conforme al pagamento.
','N','--post
[select nphase from expense where 
	idexp=%<expenseyear.idexp>%]{I}
 	<  %<sys_itinerationphase>%
OR
-- non contabilizza un contratto professionale
[SELECT COUNT(*) from expenseprofservice 
    join expenselink on expenselink.idparent=expenseprofservice.idexp
	where expenselink.idchild= %<expenseyear.idexp>% 
]{I}=0
-- pagamento totale del contratto
OR
([(select (isnull(totalcost,0) - isnull(ivaamount,0)) 
from  profservice
join  expenseprofservice
on    expenseprofservice.ycon = profservice.ycon
and  expenseprofservice.ncon = profservice.ncon	
join expenselink on expenselink.idparent=expenseprofservice.idexp
and  expenselink.idchild= %<expenseyear.idexp>% 
)]{V}
= 
isnull([(select expenseyear.amount
	from expenseyear
	where expenseyear.idexp = %<expenseyear.idexp>% 
	and expenseyear.ayear = %<sys_esercizio>%
)]{V} , 0.0)
+
isnull([(select sum(expensevar.amount)
from expensevar
where expensevar.idexp = %<expenseyear.idexp>% 
and isnull(expensevar.autokind,0)<>4
and expensevar.yvar=%<sys_esercizio>%
)]{V} , 0.0)
)
OR
[SELECT movkind from expenseprofservice 
    JOIN   expenselink on expenselink.idparent=expenseprofservice.idexp
 WHERE expenselink.idchild= %<expenseyear.idexp>% 
]{I} <> 3 
OR
ISNULL(%<expenseyear.amount>%,0) = ISNULL(&<expenseyear.amount>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE008','2','U','expenseyear','S','S','S','N','N',{ts '2009-09-23 11:40:00.860'},'SARA','Poichè si sta effettuando un pagamento parziale dell''importo del contratto professionale, il professionista dovrà emettere una parcella conforme al pagamento.
','N','--post
[select nphase from expense where 
	idexp=%<expenseyear.idexp>%]{I}
 	<  %<sys_maxexpensephase>%
OR
-- non contabilizza un contratto professionale
[SELECT COUNT(*) from expenseprofservice 
    join expenselink on expenselink.idparent=expenseprofservice.idexp
	where expenselink.idchild= %<expenseyear.idexp>% 
]{I}=0
-- pagamento totale del contratto
OR
([(select totalcost 
from  profservice
join  expenseprofservice
on    expenseprofservice.ycon = profservice.ycon
and  expenseprofservice.ncon = profservice.ncon	
join expenselink on expenselink.idparent=expenseprofservice.idexp
and  expenselink.idchild= %<expenseyear.idexp>% 
)]{V}
= 
isnull([(select expenseyear.amount
	from expenseyear
	where expenseyear.idexp = %<expenseyear.idexp>% 
	and expenseyear.ayear = %<sys_esercizio>%
)]{V} , 0.0)
+
isnull([(select sum(expensevar.amount)
from expensevar
where expensevar.idexp = %<expenseyear.idexp>% 
and isnull(expensevar.autokind,0)<>4
and expensevar.yvar=%<sys_esercizio>%
)]{V} , 0.0)
)
OR
[SELECT movkind from expenseprofservice 
    JOIN   expenselink on expenselink.idparent=expenseprofservice.idexp
 WHERE expenselink.idchild= %<expenseyear.idexp>% 
]{I} <> 1 
OR
ISNULL(%<expenseyear.amount>%,0) = ISNULL(&<expenseyear.amount>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN004','1','U','expenseyear','S','S','S','N','N',{ts '2007-10-29 11:18:37.233'},'NINO','L''importo di un movimento di spesa che annulla delle ritenute deve essere nullo oppure uguale alla somma delle ritenute, cambiata di segno.','N','--post
(  [SELECT curramount from expensetotal where ayear=%<sys_esercizio>% and idexp=%<expenseyear.idexp>% ]{V} = 0 )
OR
( 
  ISNULL([SELECT SUM(employtax)from expensetax where idexp=%<expenseyear.idexp>% ]{I},0) >= 0

)

OR 
(
 %<expenseyear.amount>% 
	+
 isnull([SELECT amount from expensevar where idexp=%<expenseyear.idexp>% and autokind is null]{V},0) 
	= -
  ISNULL([SELECT  SUM(employtax) from expensetax where idexp=%<expenseyear.idexp>% ]{V},0)
)

OR
(
 [SELECT COUNT(*) FROM expensepayroll 
JOIN expenselink 
 ON expensepayroll.idexp=expenselink.idparent
WHERE expenselink.idchild= %<expenseyear.idexp>% ]{I}<>0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON004','1','U','expenseyear','S','N','N','N','N',{ts '2007-09-06 10:20:50.030'},'NINO','La previsione di cassa della voce di spesa %<expenseview.codefin>%  e UPB %<expenseview.codeupb>%  è INSUFFICIENTE!','N','--Caso in cui NON sia cambiato bilancio-UPB
--deve scattare se è cambiato l''importo E sono in ultima fase
-- ossia non deve scattare se NON è cambiato l''importo O non sono in ultima fase
(
		(
			ISNULL(
				[SELECT
				ISNULL(currentsecondaryprev, 0)+isnull(secondaryvariation,0) 
				FROM upbtotal 
				WHERE idfin = %<expenseyear.idfin>%
				and idupb=%<expenseyear.idupb>%
				]{V}
			,0)
			- 
			ISNULL(		
				[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0) FROM
					upbexpensetotal WHERE idfin=%<expenseyear.idfin>%
					and idupb=%<expenseyear.idupb>%
					and nphase= %<sys_maxexpensephase>%
				]{V}
			,0)
		) >= 0
)
OR
(ISNULL(%<expenseyear.idfin>%,0) <> ISNULL(&<expenseyear.idfin>&,0))
OR
(ISNULL(%<expenseyear.idupb>%,'''') <> ISNULL(&<expenseyear.idupb>&,''''))
OR 
(%<sys_maxexpensephase>% <> [select nphase from expense where 
			idexp=%<expenseyear.idexp>%]{I})
or
%<expenseyear.amount>%<=&<expenseyear.amount>&
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON004','2','U','expenseyear','S','N','N','N','N',{ts '2007-09-06 10:21:03.547'},'NINO','La previsione di cassa della voce di spesa %<expenseview.codefin>%  e  expenseview  %<upb.codeupb>%  è INSUFFICIENTE!','N','--post
-- Caso: Cambio della voce di UPB-bilancio su un movimento di spesa
-- Considero due volte la somma dei movimenti di spesa in quanto il cambio della voce di bilancio avviene
-- in una fase precedente rispetto alla fase di cassa

-- deve scattare a prescindere dalla fase o dal fatto che sia cambiato l''importo
(
	(
		ISNULL(
			[SELECT
				ISNULL(currentsecondaryprev, 0)+isnull(secondaryvariation,0) 
				FROM upbtotal 
				WHERE idfin = %<expenseyear.idfin>%
				and idupb = %<expenseyear.idupb>%
				]{V}
			,0)
		- 
-- Somma di tutti i pagamenti imputati sulla voce di bilancio corrente
		ISNULL(
			[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0) FROM
					upbexpensetotal WHERE 
						idfin=%<expenseyear.idfin>%
						and idupb = %<expenseyear.idupb>%
						and nphase=  %<sys_maxexpensephase>%
			]{V}
			,0)
	) >= 0
)
OR
(%<expenseyear.idfin>% IS NULL)
OR
(ISNULL(%<expenseyear.idfin>%,0) = ISNULL(&<expenseyear.idfin>&,0)
AND
ISNULL(%<expenseyear.idupb>%,'''') = ISNULL(&<expenseyear.idupb>&,'''')
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','1','U','expenseyear','S','S','S','N','N',{ts '2010-11-05 15:19:42.860'},'sa','L''utente non è abilitato alla modifica di fasi finanziarie precedenti alla fase dell''Impengo giuridico.','N','%<expense.nphase>% >= %<sys_appropriationphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''pre_impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

OR
 (%<expenseyear.amount>% = &<expenseyear.amount>&)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','2','U','expenseyear','S','S','S','N','N',{ts '2010-11-05 15:20:05.860'},'sa','L''utente non è abilitato alla modifica di fasi finanziarie equivalenti all''Impengo giuridico.','N','%<expense.nphase>% <> %<sys_appropriationphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

OR

 (%<expenseyear.amount>% = &<expenseyear.amount>&)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','3','U','expenseyear','S','S','S','N','N',{ts '2010-11-05 15:20:37.377'},'sa','L''utente non è abilitato alla modifica di fasi finanziarie successive alla fase dell''Impengo giuridico.','N','%<expense.nphase>%  <= %<sys_appropriationphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''post_impegni''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

OR

 (%<expenseyear.amount>% = &<expenseyear.amount>&)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR012','1','U','expenseyear','S','S','S','N','N',{ts '2013-01-07 16:52:15.390'},'sa','L''utente non è abilitato a operare su Voci di Bilancio a Movimentazione protetta','S','[SELECT flag
FROM fin
WHERE fin.idfin = %<expenseyear.idfin>%]{I} & 8  = 0 
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''movimprotetta''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF002','1','U','expenseyear','S','S','S','N','N',{ts '2007-12-05 16:16:50.157'},'PINO','L''importo lordo della missione è minore dei movimenti di spesa che la contabilizzano','S','(&<expenseyear.amount>& = %<expenseyear.amount>%)
OR
([SELECT count(*) 
FROM expenseitineration
WHERE idexp = %<expenseyear.idexp>%]{I} = 0)
OR
(
(%<expenseyear.amount>% - &<expenseyear.amount>&)<=
[SELECT ISNULL(residual,0) from itinerationresidual 
where iditineration = [SELECT iditineration from expenseitineration where idexp = %<expenseyear.idexp>%]{I}]{V})')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF003','1','U','expenseyear','S','S','S','N','N',{ts '2007-12-05 16:20:50.343'},'PINO','Non possono essere modificati i pagamenti inerenti le partite di giro perché è stata già saldata','N','[ISNULL([SELECT movkind FROM expenseitineration
		JOIN expenselink on expenseitineration.idexp=expenselink.idparent         
            WHERE expenselink.idchild = %<expenseyear.idexp>%]{C},''X'')]{C} <> 5

OR

[
 SELECT ISNULL(SUM(ET.curramount),0) 
 FROM expensetotal ET 
     join expenselink EL1 on EL1.idchild = ET.idexp
     join expenseitineration EI1 on EI1.idexp =  EL1.idparent
     join expenseitineration EI2 on EI1.iditineration= EI2.iditineration
     join expenselink EL2 on EL2.idparent= EI2.idexp     
WHERE ET.ayear = %<sys_esercizio>% AND
      EL2.idchild= %<expenseyear.idexp>% AND
      EI1.movkind=4 AND
      EL1.nlevel= %<sys_maxexpensephase>% AND
      EL2.nlevel= %<sys_itinerationphase>%
]{V} = 0
OR
&<expenseyear.amount>& = %<expenseyear.amount>%



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','expirationkind','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del tipo di scadenza già esistente','S','[(SELECT count(*) 
from expirationkind
where description = %<expirationkind.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','expirationkind','S','S','S','N','N',{ts '2005-08-26 11:51:50.963'},'''LAZZO''','Descrizione del tipo di scadenza gi? esistente','S','[(SELECT count(*) 
from expirationkind
where  idexpirationkind <> %<expirationkind.idexpirationkind>% and description = %<expirationkind.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DICHI001','1','I','f24ep','S','S','S','N','N',{ts '2008-06-26 12:07:16.697'},'NINO','L''F24EP non può essere prodotto in quanto la configurazione della competenza delle ritenute non è coerente con il modello.','S','ISNULL(
	[SELECT taxvaliditykind
	FROM config
	WHERE ayear = %<f24ep.ayear>%]{I}
,0) = 5')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','D','fin','S','S','S','N','N',{ts '2007-12-13 14:22:20.450'},'NINO','la voce di bilancio %<fin.codefin>% non può essere cancellata. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','fin','S','S','S','N','N',{ts '2008-10-20 16:40:15.827'},'SA','Cancellazione Impossibile! Esistono configurazioni dell''IVA collegate alla voce %<finview.codefin>%','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente

[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}

OR
[SELECT COUNT(*) 
FROM config 
WHERE idfinivarefund = %<fin.idfin>% 
OR idfinivapayment = %<fin.idfin>%]{I} = 0
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','fin','S','S','S','N','S',{ts '2008-10-21 16:17:52.267'},'SA','Cancellazione Impossibile! Esistono assegnazioni di incassi collegate alla voce %<finview.codefin>%','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
([SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I})
OR

[SELECT COUNT(*) 
FROM proceedspart 
WHERE idfin = %<fin.idfin>%]{I} = 0
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','fin','S','S','S','N','N',{ts '2008-10-20 16:40:40.860'},'SA','Cancellazione Impossibile! Esistono mandati di pagamento collegati alla voce %<finview.codefin>%','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
[SELECT COUNT(*) 
FROM payment 
WHERE idfin = %<fin.idfin>%]{I} = 0
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','fin','S','S','S','N','N',{ts '2008-10-20 16:40:47.140'},'SA','Cancellazione Impossibile! Esistono variazioni di bilancio collegate alla voce %<finview.finpart>% - %<finview.codefin>%','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
[SELECT COUNT(*) 
FROM finvardetail 
WHERE idfin = %<fin.idfin>%]{I} = 0
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','5','D','fin','S','S','S','N','N',{ts '2008-10-20 16:40:53.797'},'SA','Cancellazione Impossibile! Esistono voci di bilancio dipendenti dalla voce %<finview.finpart>% - %<finview.codefin>%','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
[SELECT COUNT(*) 
FROM fin 
WHERE paridfin = %<fin.idfin>%]{I} = 0
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','6','D','fin','S','S','S','S','N',{ts '2008-10-21 16:38:08.327'},'SA','Cancellazione Impossibile! Esistono assegnazioni crediti collegate alla voce %<finview.codefin>%','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
[(SELECT count(*) 
from creditpart 
where idfin = %<fin.idfin>%)]{I} = 0
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','7','D','fin','S','S','S','N','N',{ts '2008-10-21 09:34:12.877'},'SA','Cancellazione Impossibile! Esistono movimenti di spesa collegati alla voce %<finview.codefin>%','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
[(SELECT count(*) 
from expenseyear 
where idfin = %<fin.idfin>%)]{I} = 0
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','8','D','fin','S','S','S','N','N',{ts '2008-10-21 09:34:48.203'},'SA','Cancellazione Impossibile! Esistono movimenti di entrata collegati alla voce %<finview.codefin>%','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
[(SELECT count(*) 
from incomeyear 
where idfin = %<fin.idfin>%)]{I} = 0
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','9','D','fin','S','S','S','N','N',{ts '2008-10-21 09:43:14.437'},'SA','Cancellazione Impossibile! Esistono reversali di incasso collegate alla voce %<finview.codefin>%','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
[(SELECT count(*) 
from proceeds 
where idfin = %<fin.idfin>%)]{I} = 0
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','10','D','fin','S','S','S','N','N',{ts '2008-10-21 09:46:22.390'},'SA','Cancellazione Impossibile! Esistono ripartizioni automatiche delle entrate collegate alla voce %<finview.codefin>%','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
[SELECT count(*) 
from partincomesetup 
where idfinincome = %<fin.idfin>% 
or idfinexpense = %<fin.idfin>%]{I} = 0
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','13','D','fin','S','S','S','N','N',{ts '2008-10-21 09:50:09.127'},'SA','Cancellazione Impossibile! Esistono configurazioni delle missioni collegate alla voce %<finview.codefin>%','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
[(SELECT count(*) 
from config 
where idfinexpense = %<fin.idfin>%)]{I} = 0
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','14','D','fin','S','S','S','N','N',{ts '2008-10-21 09:54:15.780'},'SA','Cancellazione Impossibile! Esistono operazioni sul fondo economale collegate alla voce %<finview.codefin>%','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
[(SELECT count(*) 
from pettycashoperation 
where idfin = %<fin.idfin>%)]{I} = 0
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','15','D','fin','S','S','S','N','N',{ts '2008-10-21 09:56:10.610'},'SA','Cancellazione Impossibile! Esistono configurazioni del fondo economale collegate alla voce %<finview.codefin>%','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
[(SELECT count(*) 
from pettycashsetup 
where idfinincome = %<fin.idfin>% 
or idfinexpense = %<fin.idfin>%)]{I} = 0
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','16','D','fin','S','S','S','N','N',{ts '2008-10-21 10:01:12.983'},'SA','Cancellazione Impossibile! Esistono configurazioni di automatismi di ritenute collegate alla voce %<finview.codefin>%','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
[(SELECT count(*) 
from taxsetup 
where idfinexpensecontra = %<fin.idfin>% 
or idfinincomecontra = %<fin.idfin>% 
or idfinadmintax = %<fin.idfin>%)]{I} = 0
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','17','D','fin','S','S','S','N','N',{ts '2008-10-21 10:10:45.500'},'SA','Cancellazione Impossibile! Esistono configurazioni di automatismi di recuperi collegate alla voce %<finview.codefin>%','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
[(SELECT count(*) 
from clawbacksetup 
where clawbackfinance = %<fin.idfin>%)]{I} = 0
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','18','D','fin','S','S','S','N','N',{ts '2008-10-21 10:47:12.967'},'SA','Cancellazione Impossibile! Esistono configurazioni dell''IVA collegate alla voce %<finview.codefin>%','S','-- se nlevel <= di  unifiedfinlevel devo cercare in tutti i dipartimenti
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
OR
(
[execute count_idfin_table  ''config'',''idfinivarefund'',  %<fin.idfin>% ,@outvar output]{I}=0 
and
[execute count_idfin_table  ''config'','' idfinivapayment'',  %<fin.idfin>% ,@outvar output]{I}=0 
)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','19','D','fin','S','S','S','N','S',{ts '2008-10-21 16:20:06.813'},'SA','Cancellazione Impossibile! Esistono assegnazioni di incassi collegate alla voce %<finview.codefin>%','S','-- se nlevel <= di  unifiedfinlevel devo cercare in tutti i dipartimenti
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
OR

[execute count_idfin_table  ''proceedspart'',''idfin'',  %<fin.idfin>% ,@outvar output]{I}=0 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','20','D','fin','S','S','S','N','N',{ts '2008-10-21 16:21:26.250'},'SA','Cancellazione Impossibile! Esistono mandati di pagamento collegati alla voce %<finview.codefin>%','S','-- se nlevel <= di  unifiedfinlevel devo cercare in tutti i dipartimenti
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
OR
[execute count_idfin_table  ''payment'',''idfin'',  %<fin.idfin>% ,@outvar output]{I}=0 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','21','D','fin','S','S','S','N','N',{ts '2008-10-22 09:18:50.023'},'SA','Cancellazione Impossibile! Esistono variazioni di bilancio collegate alla voce %<finview.finpart>% - %<finview.codefin>%','S','-- se nlevel <=  unifiedfinlevel devo cercare in tutti i dipartimenti
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
OR
[execute count_idfin_table  ''finvardetail'',''idfin'',  %<fin.idfin>% ,@outvar output]{I}=0 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','22','D','fin','S','S','S','N','N',{ts '2008-10-22 09:19:02.900'},'SA','Cancellazione Impossibile! Esistono voci di bilancio dipendenti dalla voce %<finview.finpart>% - %<finview.codefin>%','S','--se nlevel <=  unifiedfinlevel devo cercare in tutti i dipartimenti
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
OR
[execute count_idfin_table  ''fin'',''paridfin'',  %<fin.idfin>% ,@outvar output]{I}=0 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','23','D','fin','S','S','S','S','N',{ts '2008-10-22 09:19:11.807'},'SA','Cancellazione Impossibile! Esistono assegnazioni crediti collegate alla voce %<finview.codefin>%','S','--se nlevel <=  unifiedfinlevel devo cercare in tutti i dipartimenti
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
OR
[execute count_idfin_table  ''creditpart'',''idfin'',  %<fin.idfin>% ,@outvar output]{I}=0 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','24','D','fin','S','S','S','N','N',{ts '2008-10-22 09:19:25.447'},'SA','Cancellazione Impossibile! Esistono movimenti di spesa collegati alla voce %<finview.codefin>%','S','--se nlevel <=  unifiedfinlevel devo cercare in tutti i dip
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
OR
[execute count_idfin_table  ''expenseyear'',''idfin'',  %<fin.idfin>% ,@outvar output]{I}=0 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','25','D','fin','S','S','S','N','N',{ts '2008-10-22 09:19:34.273'},'SA','Cancellazione Impossibile! Esistono movimenti di entrata collegati alla voce %<finview.codefin>%','S','--se nlevel <=  unifiedfinlevel devo cercare in tutti i dip
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}

OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
OR
[execute count_idfin_table  ''incomeyear'',''idfin'',  %<fin.idfin>% ,@outvar output]{I}=0 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','26','D','fin','S','S','S','N','N',{ts '2008-10-22 09:19:50.867'},'SA','Cancellazione Impossibile! Esistono reversali di incasso collegate alla voce %<finview.codefin>%','S','--se nlevel <=  unifiedfinlevel devo cercare in tutti i dip
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
OR
[execute count_idfin_table  ''proceeds'',''idfin'',  %<fin.idfin>% ,@outvar output]{I}=0 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','27','D','fin','S','S','S','N','N',{ts '2008-10-22 09:27:02.307'},'SA','Cancellazione Impossibile! Esistono ripartizioni automatiche delle entrate collegate alla voce %<finview.codefin>%','S','--se nlevel <=  unifiedfinlevel devo cercare in tutti i dip
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
OR
(
[execute count_idfin_table  ''partincomesetup'',''idfinincome'',  %<fin.idfin>% ,@outvar output]{I}=0 
AND
[execute count_idfin_table  ''partincomesetup'',''idfinexpense'',  %<fin.idfin>% ,@outvar output]{I}=0 
)

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','28','D','fin','S','S','S','N','N',{ts '2008-10-22 09:27:14.587'},'SA','Cancellazione Impossibile! Esistono configurazioni delle missioni collegate alla voce %<finview.codefin>%','S','--se nlevel <=  unifiedfinlevel devo cercare in tutti i dip
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
OR
[execute count_idfin_table  ''config'',''idfinexpense'',  %<fin.idfin>% ,@outvar output]{I}=0 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','29','D','fin','S','S','S','N','N',{ts '2008-10-22 09:27:55.917'},'SA','Cancellazione Impossibile! Esistono operazioni sul fondo economale collegate alla voce %<finview.codefin>%','S','--se nlevel <=  unifiedfinlevel devo cercare i tutti i dip
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
OR
[execute count_idfin_table  ''pettycashoperation'',''idfin'',  %<fin.idfin>% ,@outvar output]{I}=0 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','30','D','fin','S','S','S','N','N',{ts '2008-10-22 09:28:13.757'},'SA','Cancellazione Impossibile! Esistono configurazioni del fondo economale collegate alla voce %<finview.codefin>%','S','--se nlevel <=  unifiedfinlevel devo cercare in tutti i dip
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
OR
(
[execute count_idfin_table  ''pettycashsetup'',''idfinincome'',  %<fin.idfin>% ,@outvar output]{I}=0 
AND
[execute count_idfin_table  ''pettycashsetup'',''idfinexpense'',  %<fin.idfin>% ,@outvar output]{I}=0 
)




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','31','D','fin','S','S','S','N','N',{ts '2008-10-22 09:28:25.807'},'SA','Cancellazione Impossibile! Esistono configurazioni di automatismi di ritenute collegate alla voce %<finview.codefin>%','S','--se nlevel <=  unifiedfinlevel devo cercare in tutti i dip
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
OR
(
[execute count_idfin_table  ''taxsetup'',''idfinexpensecontra'',  %<fin.idfin>% ,@outvar output]{I}=0 
AND
[execute count_idfin_table  ''taxsetup'',''idfinincomecontra'',  %<fin.idfin>% ,@outvar output]{I}=0 
AND
[execute count_idfin_table  ''taxsetup'',''idfinadmintax'',  %<fin.idfin>% ,@outvar output]{I}=0 
)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','32','D','fin','S','S','S','N','N',{ts '2008-10-22 09:28:34.697'},'SA','Cancellazione Impossibile! Esistono configurazioni di automatismi di recuperi collegate alla voce %<finview.codefin>%','S','--se nlevel <=  unifiedfinlevel devo cercare in tutti i dip
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
OR
[execute count_idfin_table  ''clawbacksetup'',''clawbackfinance'',  %<fin.idfin>% ,@outvar output]{I}=0 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','33','D','fin','S','S','S','N','N',{ts '2008-10-22 09:28:43.197'},'SA','Cancellazione Impossibile! Esistono voci di bilancio dipendenti dalla voce %<finview.finpart>% - %<finview.codefin>%','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
[SELECT COUNT(*) 
FROM fin 
WHERE paridfin = %<fin.idfin>%]{I} = 0
OR
%<fin.nlevel>% >=
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','34','D','fin','S','S','S','N','N',{ts '2008-10-21 10:56:09.547'},'SA','Cancellazione Impossibile! Esistono voci di bilancio dipendenti dalla voce %<finview.finpart>% - %<finview.codefin>%','S','-- se nlevel <= di  unifiedfinlevel devo cercare in tutti i dipartimenti
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
%<fin.nlevel>% >=
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}
OR
[execute count_idfin_table  ''fin'',''paridfin'',   %<fin.idfin>% ,@outvar output]{I}=0 



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','35','D','fin','S','S','S','N','N',{ts '2009-01-08 16:37:05.170'},'SA','Il livello della struttura del bilancio che si sta cancellando può essere eliminato solo dall'' amministrazione.','S','--se nlevel <=  unifiedfinlevel è un livello modificabile solo dall''amminstrazione
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}

OR
user=''amministrazione''

OR [ SELECT COUNT(*) FROM dbdepartment]{I}=1

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM004','1','D','fin','S','S','S','N','N',{ts '2008-10-22 09:28:59.570'},'SA','La cancellazione della voce %<finview.codefin>% comporterà la cancellazione di tutte le relative conversioni del bilancio','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
[(SELECT count(*) 
from finlookup 
where oldidfin = %<fin.idfin>% 
or newidfin = %<fin.idfin>%)]{I} = 0
OR
%<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I}


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM004','2','D','fin','S','S','S','N','N',{ts '2008-10-22 09:29:09.743'},'SA','La cancellazione della voce %<finview.codefin>% comporterà la cancellazione di tutte le relative conversioni del bilancio','S','-- se nlevel <= di  unifiedfinlevel devo cercare in tutti i dipartimenti
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
( %<fin.nlevel>% <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0
	AND ayear = %<sys_esercizio>%]{I} ) 

OR
(
[execute count_idfin_table   ''finlookup'',''oldidfin'',   %<fin.idfin>% ,@outvar output]{I}=0 
and
[execute count_idfin_table   ''finlookup'',''newidfin'',   %<fin.idfin>% ,@outvar output]{I}=0 
)

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM008','1','D','fin','S','S','S','N','N',{ts '2008-10-22 09:56:58.617'},'SA','Cancellazione Impossibile! Il capitolo :  %<finview.codefin>% che si sta cancellando esiste nell''anno successivo in quanto è stato trasferito il bilancio.','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}

OR

[SELECT count(*) FROM finlookup WHERE oldidfin = %<fin.idfin>%]{I} =0

OR
(([SELECT flag FROM accountingyear 
where ayear = %<sys_esercizio>%]{I} & 0x0F)<2)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM008','2','D','fin','S','S','S','N','N',{ts '2008-10-22 09:57:59.383'},'SA','Cancellazione Impossibile! Il capitolo :  %<finview.codefin>% che si sta cancellando esiste nell''anno successivo in quanto è stato trasferito il bilancio.','S','-- se nlevel <= di  unifiedfinlevel devo cercare in tutti i dipartimenti
( [SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I} )

OR

(([SELECT flag FROM accountingyear 
where ayear = %<sys_esercizio>%]{I} & 0x0F) < 2)

OR 

[execute count_idfin_table   ''finlookup'',''oldidfin'',%<fin.idfin>%  ,@outvar output]{I}=0 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM010','1','D','fin','S','S','S','N','N',{ts '2008-10-21 13:34:22.640'},'SA','Non si può cancellare un voce di Bilancio dopo aver redatto il Bilancio di Previsione con la procedura guidata. La voce ha dei valori di previsione.','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR

[(select count(*) from prevfindetail
where idfin = %<fin.idfin>%)]{I}=0
OR
[(select count(*) from prevfindetail
WHERE idfin = %<fin.idfin>% 
AND 
(isnull(availableprevision,0) <> 0
OR isnull(cash,0) <> 0
OR isnull(competency,0) <> 0
OR isnull(floatfund,0) <> 0
OR isnull(incometopartitioncash,0) <> 0
OR isnull(incometopartitioncompetency,0) <> 0
OR isnull(supposedcreditsurplus,0) <> 0
OR isnull(supposedexpenditure,0) <> 0
OR isnull(supposedfloatfund,0) <> 0
OR isnull(supposedpayments,0) <> 0
OR isnull(supposedproceeds,0) <> 0
OR isnull(supposedrevenue,0) <> 0
OR isnull(prevision2,0) <> 0
OR isnull(prevision3,0) <> 0
OR isnull(prevision4,0) <> 0
OR isnull(prevision5,0) <> 0
)
)]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM010','2','D','fin','S','S','S','N','N',{ts '2008-10-21 14:40:43.750'},'SA','Non si può cancellare un voce di Bilancio utilizzata nella redazione del Bilancio di Assestamento con la procedura guidata. La voce ha dei valori di previsione.','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR

[(select count(*) from finbalancedetail
where idfin = %<fin.idfin>%)]{I}=0
OR
[(select count(*) from finbalancedetail
WHERE idfin = %<fin.idfin>% 
AND (
isnull(actualavailableprev,0) <> 0
OR isnull(actualcashsurplus,0) <> 0
OR isnull(actualcreditsurplus,0) <> 0
OR isnull(actualprev,0) <> 0
OR isnull(assignedcash,0) <> 0
OR isnull(cashvariation,0) <> 0
OR isnull(creditvariation,0) <> 0
OR isnull(expenditure,0) <> 0
OR isnull(payment,0) <> 0
OR isnull(previsionvariation,0) <> 0
OR isnull(proceeds,0) <> 0
OR isnull(revenue,0) <> 0
OR isnull(secondaryprevvariation,0) <> 0
OR isnull(supposedavailableprev,0) <> 0
OR isnull(supposedcash,0) <> 0
OR isnull(supposedcredits,0) <> 0
OR isnull(supposedexpenditure,0) <> 0
OR isnull(supposedrevenue,0) <> 0
)
)]{I}=0
















')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM010','3','D','fin','S','S','S','N','N',{ts '2008-10-22 09:31:41.243'},'SA','Non si può cancellare un voce di Bilancio dopo aver redatto il Bilancio di Previsione con la procedura guidata. La voce ha dei valori di previsione.','S','--se nlevel <=  unifiedfinlevel devo cercare in tutti i dip

[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR

[execute count_idfin_table_multifield ''prevfindetail'',''idfin'', %<fin.idfin>%,''0'',''0'',
''availableprevision'',''cash'', ''competency'', ''floatfund'',
''incometopartitioncash'', ''incometopartitioncompetency'', ''supposedcreditsurplus'', 
''supposedexpenditure'', ''supposedfloatfund'', ''supposedpayments'', ''supposedproceeds'', ''supposedrevenue'', 
''prevision2'', ''prevision3'', ''prevision4'',''prevision5'',null,null,null,null, @outvar output]{I}=0 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM010','4','D','fin','S','S','S','N','N',{ts '2008-10-22 09:32:14.557'},'SA','Non si può cancellare un voce di Bilancio utilizzata nella redazione del Bilancio di Assestamento con la procedura guidata. La voce ha dei valori di previsione.','S','--se nlevel <=  unifiedfinlevel devo cercare in tutti i dip

[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR

[execute count_idfin_table_multifield ''finbalancedetail'',''idfin'', %<fin.idfin>%,''0'',''0'',
''actualavailableprev'',''actualcashsurplus'',''actualcreditsurplus'',''actualprev'',
''assignedcash'',''cashvariation'',''creditvariation'',''expenditure'',''payment'',
''previsionvariation'',''proceeds'',''revenue'',''secondaryprevvariation'',''supposedavailableprev'',
''supposedcash'',''supposedcredits'',''supposedexpenditure'',''supposedrevenue'',null,null, @outvar output]{I}=0 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM011','1','D','fin','S','S','S','N','N',{ts '2008-10-21 14:41:41.483'},'SA','Non si dovrebbe cancellare un voce di Bilancio dopo aver redatto il Bilancio di Previsione con la procedura guidata.','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR

[(select count(*) from prevfindetail
where idfin = %<fin.idfin>%)]{I}=0
OR
[(select count(*) from prevfindetail
WHERE idfin = %<fin.idfin>% 
AND isnull(availableprevision,0) = 0
AND isnull(cash,0) = 0
AND isnull(competency,0) = 0
AND isnull(floatfund,0) = 0
AND isnull(incometopartitioncash,0) = 0
AND isnull(incometopartitioncompetency,0) = 0
AND isnull(previousarrears,0) = 0
AND isnull(previousprevision,0) = 0
AND isnull(previoussecondaryprev,0) = 0
AND isnull(prevision2,0) = 0
AND isnull(prevision3,0) = 0
AND isnull(prevision4,0) = 0
AND isnull(prevision5,0) = 0
AND isnull(supposedcreditsurplus,0) = 0
AND isnull(supposedexpenditure,0) = 0
AND isnull(supposedfloatfund,0) = 0
AND isnull(supposedpayments,0) = 0
AND isnull(supposedproceeds,0) = 0
AND isnull(supposedrevenue,0) = 0
)]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM011','2','D','fin','S','S','S','N','N',{ts '2008-01-11 16:17:46.360'},'SA','Non si dovrebbe cancellare un voce di Bilancio utilizzata nella redazione del Bilancio di Assestemento con la procedura guidata.','S','[(select count(*) from finbalancedetail
where idfin = %<fin.idfin>%)]{I}=0
OR
[(select count(*) from finbalancedetail
WHERE idfin = %<fin.idfin>% 
AND isnull(actualavailableprev,0) = 0
AND isnull(actualcashsurplus,0) = 0
AND isnull(actualcreditsurplus,0) = 0
AND isnull(actualprev,0) = 0
AND isnull(assignedcash,0) = 0
AND isnull(cashvariation,0) = 0
AND isnull(creditvariation,0) = 0
AND isnull(expenditure,0) = 0
AND isnull(payment,0) = 0
AND isnull(previsionvariation,0) = 0
AND isnull(proceeds,0) = 0
AND isnull(revenue,0) = 0
AND isnull(secondaryprevvariation,0) = 0
AND isnull(supposedavailableprev,0) = 0
AND isnull(supposedcash,0) = 0
AND isnull(supposedcredits,0) = 0
AND isnull(supposedexpenditure,0) = 0
AND isnull(supposedrevenue,0) = 0
)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM011','3','D','fin','S','S','S','N','N',{ts '2008-10-22 09:32:41.570'},'SA','Non si dovrebbe cancellare un voce di Bilancio dopo aver redatto il Bilancio di Previsione con la procedura guidata.','S','--se nlevel <=  unifiedfinlevel devo cercare in tutti i dip
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR

[execute count_idfin_table_multifield ''prevfindetail'',''idfin'', %<fin.idfin>%,''1'',''1'',
''availableprevision'',''cash'',''competency'',''floatfund'',''incometopartitioncash'',
''incometopartitioncompetency'',''previousarrears'',''previousprevision'',''previoussecondaryprev'',
''prevision2'',''prevision3'',''prevision4'',''prevision5'',''supposedcreditsurplus'',
''supposedexpenditure'',''supposedfloatfund'',''supposedpayments'',''supposedproceeds'',''supposedrevenue'',null, @outvar output]{I}=0 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM011','4','D','fin','S','S','S','N','N',{ts '2008-10-22 09:33:22.117'},'SA','Non si dovrebbe cancellare un voce di Bilancio utilizzata nella redazione del Bilancio di Assestemento con la procedura guidata.','S','--se nlevel <=  unifiedfinlevel devo cercare in tutti i dip
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR
[execute count_idfin_table_multifield ''finbalancedetail'',''idfin'', %<fin.idfin>%,''1'',''1'',
''actualavailableprev'',''actualcashsurplus'',''actualcreditsurplus'',''actualprev'',
''assignedcash'',''cashvariation'',''creditvariation'',''expenditure'',
''payment'',''previsionvariation'',''proceeds'',''revenue'',''secondaryprevvariation'',
''supposedavailableprev'',''supposedcash'',''supposedcredits'',''supposedexpenditure'',''supposedrevenue'',null,null, @outvar output]{I}=0 
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM012','1','D','fin','S','S','S','N','N',{ts '2008-10-21 14:51:58.827'},'SA','Non si dovrebbe cancellare un voce di Bilancio dopo aver redatto il Bilancio di Previsione con la procedura guidata. La voce ha dei valori di previsione.','S','--se nlevel >  unifiedfinlevel devo cercare nel dipartimento corrente
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
<=
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR

[(select count(*) from prevfindetail
where idfin = %<fin.idfin>%)]{I}=0
OR
[(select count(*) from prevfindetail
WHERE idfin = %<fin.idfin>% 
AND 
(
isnull(previousarrears,0) <> 0
OR isnull(previousprevision,0) <> 0
OR isnull(previoussecondaryprev,0) <> 0
)
)]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM012','2','D','fin','S','S','S','N','N',{ts '2008-10-22 09:33:47.947'},'SA','Non si dovrebbe cancellare un voce di Bilancio dopo aver redatto il Bilancio di Previsione con la procedura guidata. La voce ha dei valori di previsione.','S','--se nlevel <=  unifiedfinlevel devo cercare in tutti i dip
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}
OR

[execute count_idfin_table_multifield ''prevfindetail'',''idfin'', %<fin.idfin>%,''0'',''0'',
''previousarrears'',''previousprevision'',''previoussecondaryprev'',null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null, @outvar output]{I}=0 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','I','fin','S','S','S','N','N',{ts '2007-12-13 14:22:25.280'},'NINO','la voce di bilancio %<fin.codefin>% non può essere inserita. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','fin','S','S','S','N','N',{ts '2007-09-13 18:44:28.360'},'NINO','Voce %<fin.codefin>% nell''''esercizio %<fin.ayear>% già esistente','S','[(SELECT count(*) 
from fin 
where ayear = %<fin.ayear>% 
and (flag & 1)=  (%<fin.flag>% &1)
and codefin = %<fin.codefin>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','fin','S','S','S','N','N',{ts '2007-09-13 18:45:04.860'},'NINO','Voce con ordine di stampa %<fin.printingorder>% nell''''esercizio %<esercizio>% già esistente','S','[(SELECT count(*) 
from fin 
where ayear = %<fin.ayear>% 
and (flag&1) = (%<fin.flag>% &1)
and printingorder = %<fin.printingorder>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','I','fin','S','S','S','N','S',{ts '2007-09-13 18:45:14.547'},'NINO','Esistono assegnazioni incassi collegate al padre di %<fin.codefin>%','S','[(SELECT count(*) 
from proceedspart 
where idfin = %<fin.paridfin>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','I','fin','S','S','S','N','N',{ts '2007-09-13 18:45:23.517'},'NINO','Esistono mandati di pagamento collegati al padre di %<fin.codefin>%','S','([1]=[1])')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','I','fin','S','S','S','N','N',{ts '2007-09-13 18:45:42.233'},'NINO','Esistono variazioni di bilancio collegate al padre di %<fin.codefin>%','S','[(SELECT count(*) 
from finvardetail 
where idfin = %<fin.paridfin>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','6','I','fin','S','S','S','S','N',{ts '2007-09-13 18:45:51.217'},'NINO','Esistono assegnazioni di crediti collegati al padre di  %<fin.codefin>%','S','[(SELECT count(*) 
from creditpart 
where idfin = %<fin.paridfin>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','7','I','fin','S','S','S','N','N',{ts '2007-09-13 18:45:58.250'},'NINO','Esistono movimenti di spesa collegati al padre di %<fin.codefin>%','S','[(SELECT count(*) 
from expenseyear 
where idfin = %<fin.paridfin>%)]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','8','I','fin','S','S','S','N','N',{ts '2007-09-13 18:46:03.687'},'NINO','Esistono movimenti di entrata collegati al padre di %<fin.codefin>%','S','[(SELECT count(*) 
from incomeyear 
where idfin = %<fin.paridfin>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','9','I','fin','S','S','S','N','N',{ts '2007-09-13 18:46:07.907'},'NINO','Esistono reversali di incasso collegati al padre di  %<fin.codefin>%','S','([1]=[1])')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','12','I','fin','S','S','S','N','N',{ts '2007-09-13 18:46:18.780'},'NINO','Esistono ripartizioni automatiche delle entrate collegate al padre di  %<fin.codefin>%','S','[(SELECT count(*) 
from partincomesetup 
where idfinincome = %<fin.paridfin>% 
or idfinexpense = %<fin.paridfin>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','13','I','fin','S','S','S','N','N',{ts '2009-01-20 12:22:19.667'},'SA','La voce di bilancio %<fin.codefin>% non può essere articolata in quanto è stata già movimentata nell''esercizio successivo','S','-- Controllo per la parte bilancio di SPESA
(
--Parentesi che ingloba tutti gli AND
	(
	(%<fin.flag>% & 1)<> 0
	AND
	([SELECT COUNT(*)
	FROM expenseyear
	WHERE ayear = %<sys_esercizio>% + 1
	AND idfin =	[SELECT newidfin FROM finlookup WHERE oldidfin = %<fin.paridfin>%]{I}
	]{I}=0)	
	AND
	([SELECT COUNT(*)
	FROM finvardetail
	WHERE yvar = %<sys_esercizio>% + 1
	AND idfin =	[SELECT newidfin FROM finlookup WHERE oldidfin = %<fin.paridfin>%]{I}
	]{I}=0)
	AND
	([SELECT COUNT(*)
	FROM creditpart
	WHERE ycreditpart = %<sys_esercizio>% + 1
	AND idfin =	[SELECT newidfin FROM finlookup WHERE oldidfin = %<fin.paridfin>%]{I}
	]{I}=0)
	AND
	([SELECT COUNT(*)
	FROM proceedspart
	WHERE yproceedspart = %<sys_esercizio>% + 1
	AND idfin =	[SELECT newidfin FROM finlookup WHERE oldidfin = %<fin.paridfin>%]{I}
	]{I}=0)
	)
-- Fine degli AND
	OR
	(%<fin.nlevel>% < [SELECT MIN(nlevel) FROM finlevel WHERE ayear = %<sys_esercizio>%]{I})
	OR
	(%<fin.flag>% & 1)= 0

)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','14','I','fin','S','S','S','N','N',{ts '2007-09-13 18:46:32.467'},'NINO','La voce di bilancio %<fin.codefin>% non può essere articolata in quanto è stata già movimentata nell''esercizio successivo','S','(
-- Parentesi che ingloba tutti gli AND
	
	(%<fin.flag>%& 1) = 0
	AND

	[SELECT COUNT(*)
	FROM incomeyear
	WHERE ayear = %<sys_esercizio>% + 1
	AND idfin = [SELECT newidfin FROM finlookup WHERE oldidfin = %<fin.paridfin>%]{I}
	]{I}=0

	AND
	
      [SELECT COUNT(*)
	FROM finvardetail
	WHERE yvar = %<sys_esercizio>% + 1
	AND idfin =[SELECT newidfin FROM finlookup WHERE oldidfin = %<fin.paridfin>%]{I}
	]{I}=0

	)
-- Fine degli AND
	OR
	(%<fin.nlevel>% < [SELECT MIN(nlevel) FROM finlevel WHERE ayear = %<sys_esercizio>%]{I})
	OR
	
      (%<fin.flag>%& 1) <> 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','15','I','fin','S','S','S','N','N',{ts '2007-09-13 18:46:37.047'},'NINO','Esistono operazioni sul fondo economale collegate al padre di %<fin.codefin>%','S','[(SELECT count(*) 
from pettycashoperation 
where idfin = %<fin.paridfin>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','16','I','fin','S','S','S','N','N',{ts '2007-09-13 18:46:42.047'},'NINO','Esistono configurazioni del fondo economale collegate al padre di %<fin.codefin>%','S','[(SELECT count(*) 
from pettycashsetup 
where idfinincome = %<fin.paridfin>% 
or idfinexpense = %<fin.paridfin>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','18','I','fin','S','S','S','N','N',{ts '2007-09-13 18:46:47.030'},'NINO','Esistono configurazioni degli automatismi per la riscossione dei recuperi collegate al padre di %<fin.codefin>%','S','[(SELECT count(*) 
from clawbacksetup 
where clawbackfinance = %<fin.paridfin>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','20','I','fin','S','S','S','N','N',{ts '2007-09-13 18:46:51.640'},'NINO','Esistono configurazioni degli automatismi per la riscossione ed il versamento delle ritenute collegate al padre di %<fin.codefin>%','S','[(SELECT count(*) 
from taxsetup 
where idfinexpensecontra = %<fin.paridfin>% 
or idfinincomecontra = %<fin.paridfin>% 
or idfinadmintax = %<fin.paridfin>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','21','I','fin','S','S','S','N','N',{ts '2009-01-08 16:52:40.640'},'SA','Il livello della struttura del bilancio che si sta inserendo può essere aggiunto solo dall'' amministrazione.','N','--se nlevel <=  unifiedfinlevel è un livello modificabile solo dall''amminstrazione
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}

OR
user=''amministrazione''

OR [SELECT COUNT(*) FROM dbdepartment]{I}=1
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM009','1','I','fin','S','S','S','N','N',{ts '2007-09-13 18:47:15.127'},'NINO','La voce di bilancio %<finview.finpart>% - %<finview.codefin>% non può essere inserita in quanto non ha un padre nell''esercizio successivo','N','[SELECT COUNT(*)
FROM fin
WHERE idfin =  [SELECT newidfin FROM finlookup WHERE oldidfin = %<fin.paridfin>%]{I}
]{I} > 0
OR
%<fin.paridfin>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM009','2','I','fin','S','S','S','N','N',{ts '2007-09-13 18:47:20.687'},'NINO','La voce di bilancio %<finview.finpart>% - %<finview.codefin>% non può essere inserita in quanto il padre nell''esercizio successivo è stato spostato','N','[SELECT COUNT(*)
FROM finlookup
WHERE oldidfin = %<fin.paridfin>%]{I} = 0
OR
%<fin.paridfin>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR012','1','U','fin','S','S','S','N','N',{ts '2013-03-07 14:44:04.550'},'sa','L''utente non è abilitato a modificare l''impostazione "movimentazione protetta" da una voce di bilancio','S','(isnull(%<fin.flag>%,0) & 8) = (isnull(&<fin.flag>&,0) & 8)

OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''movimprotetta''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','fin','S','S','S','N','N',{ts '2007-09-13 18:47:35.313'},'NINO','Voce con ordine di stampa %<finview.printingorder>% della parte %<finview.finpart>% nell''''esercizio  %<fin.ayear>% già esistente','S','[SELECT count(*) 
from fin 
where ayear = %<fin.ayear>% 
and (flag &1) = (%<fin.flag>% &1)
and printingorder = %<fin.printingorder>% 
and idfin <> %<fin.idfin>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','U','fin','S','S','S','N','N',{ts '2009-01-08 16:22:16.577'},'SA','Il livello della struttura del bilancio che si sta correggendo può essere modificato solo dall'' amministrazione.','S','--se nlevel <=  unifiedfinlevel è un livello modificabile solo dall''amminstrazione
[SELECT nlevel FROM fin WHERE idfin = %<fin.idfin>%]{I}
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}

OR
user=''amministrazione''

OR [SELECT COUNT(*) FROM dbdepartment]{I}=1
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM088','1','U','finlast','S','S','S','N','N',{ts '2010-09-14 09:57:06.140'},'sara','Non è possibile cambiare il Responsabile della voce di bilancio essendo stata già trasferita nell''esercizio successivo.','S','--pre
[SELECT COUNT(*) FROM finlookup 
 WHERE finlookup.oldidfin = %<finlast.idfin>%
]{I} = 0
OR
&<finlast.idman>& = %<finlast.idman>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','finlevel','S','S','S','N','N',{ts '2007-09-13 11:57:46.127'},'NINO','Cancellazione Impossibile! Esistono voci di bilancio collegate al livello %<description>%','S','[(SELECT count(*) 
from fin 
where ayear = %<finlevel.ayear>% 
and nlevel = %<finlevel.nlevel>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','finlevel','S','S','S','N','N',{ts '2007-09-13 11:57:51.407'},'NINO','Cancellazione Impossibile! Esistono livelli di bilancio dipendenti dal livello %<description>%','S','[(SELECT count(*) 
from finlevel 
where ayear = %<finlevel.ayear>% 
and nlevel > %<finlevel.nlevel>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','finlevel','S','S','S','N','N',{ts '2009-01-08 16:37:08.890'},'SA','Il livello della struttura del bilancio che si sta cancellando può essere eliminato solo dall'' amministrazione.','S','--se nlevel <=  unifiedfinlevel è un livello modificabile solo dall''amminstrazione
%<finlevel.nlevel>%
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}

OR
user=''amministrazione''

OR [ SELECT COUNT(*) FROM dbdepartment]{I}=1

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','finlevel','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del livello di bilancio già esistente','S','[(SELECT count(*) 
from finlevel 
where ayear = %<finlevel.ayear>% 
and description = %<finlevel.description>%)]{N} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','I','finlevel','S','S','S','N','N',{ts '2007-11-15 14:20:27.207'},'XXNINO','Il livello di bilancio padre di %<description>% è già operativo quindi %<description>% non può essere non operativo','N','((%<finlevel.flag>% & 2) <> 0)
or 
[(SELECT count(*) 
from finlevel 
where ayear = %<finlevel.ayear>% 
and nlevel < %<finlevel.nlevel>% 
and (flag & 2) <> 0)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','22','I','finlevel','S','S','S','N','N',{ts '2009-01-08 16:52:43.217'},'SA','Il livello della struttura del bilancio che si sta inserendo può essere aggiunto solo dall'' amministrazione.','N','--se nlevel <=  unifiedfinlevel è un livello modificabile solo dall''amminstrazione
%<finlevel.nlevel>%
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}

OR
user=''amministrazione''

OR [SELECT COUNT(*) FROM dbdepartment]{I}=1
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','finlevel','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del livello di bilancio già esistente','S','[(SELECT count(*) 
from finlevel 
where ayear = %<finlevel.ayear>% 
and nlevel <> %<finlevel.nlevel>% 
and description = %<finlevel.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','U','finlevel','S','S','S','N','N',{ts '2007-11-15 14:21:34.440'},'XXNINO','Il livello di bilancio padre di %<description>% è già operativo quindi %<description>% non può essere non operativo','S','((%<finlevel.flag>% & 2) <> 0)
or 
[SELECT count(*) 
from finlevel 
where ayear = %<finlevel.ayear>% 
and nlevel < %<finlevel.nlevel>% 
and (flag & 2) <> 0]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','U','finlevel','S','S','S','N','N',{ts '2007-11-15 14:22:22.330'},'XXNINO','Esistono voci di bilancio collegati al livello di bilancio %<description>% per l''esercizio %<esercizio>% quindi gli attributri dei livelli di bilancio non possono essere modificati','S','[SELECT count(*) 
from fin 
where ayear = %<finlevel.ayear>% 
and nlevel = %<finlevel.nlevel>%]{I} = 0 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','U','finlevel','S','S','S','N','N',{ts '2009-01-08 16:25:02.047'},'SA','Il livello della struttura del bilancio che si sta correggendo può essere modificato solo dall'' amministrazione.','S','--se nlevel <=  unifiedfinlevel è un livello modificabile solo dall''amminstrazione
%<finlevel.nlevel>%
>
[SELECT unifiedfinlevel FROM commonconfig WHERE ayear =  %<sys_esercizio>%]{I}

OR
user=''amministrazione''

OR [SELECT COUNT(*) FROM dbdepartment]{I}=1
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','finlookup','S','S','S','N','N',{ts '2007-11-17 23:14:49.097'},'NINO','Voce di bilancio già convertita nell''esercizio','N','[(SELECT count(*) 
from finlookup 
where oldidfin = %<finlookup.oldidfin>%)]{I} = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','finlookup','S','S','S','N','N',{ts '2007-11-17 23:14:59.487'},'NINO','Voce di bilancio già convertita nell''esercizio ','N','[(SELECT count(*) 
from finlookup 
where oldidfin = %<finlookup.oldidfin>%)]{I} = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN008','1','I','finsorting','S','S','S','N','N',{ts '2010-03-29 12:24:23.860'},'SARA','La classificazione del livello superiore al codice selezionato : %<sorting.sortcode>%, non deve superare il 100%.
','N','[ISNULL((SELECT codesorkind
FROM sorting
JOIN sortingkind
	ON sorting.idsorkind = sortingkind.idsorkind
WHERE idsor = %<finsorting.idsor>%),'''')] {C}
NOT IN (''10E_MACROSIOPE_AMMIN'',''10S_MACROSIOPE_AMMIN'',''10E_MACROSIOPE_DIP'', ''10S_MACROSIOPE_DIP'')

OR

(
ISNULL(
	[SELECT  convert(decimal(19,2), round(SUM (quota),2))
	 FROM	 finsorting
	JOIN sorting
		ON finsorting.idsor = sorting.idsor
	WHERE sorting.paridsor IN (select paridsor from sorting
			where idsor = %<finsorting.idsor>%)
	AND finsorting.idfin  = %<finsorting.idfin>%
	] {V}
,0)  
) < = 1


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN008','1','U','finsorting','S','S','S','N','N',{ts '2010-03-29 12:24:40.077'},'SARA','La classificazione del livello superiore al codice selezionato : %<sorting.sortcode>%, non deve superare il 100%.
','N','[ISNULL((SELECT codesorkind
FROM sorting
JOIN sortingkind
	ON sorting.idsorkind = sortingkind.idsorkind
WHERE idsor = %<finsorting.idsor>%),'''')] {C}
NOT IN (''10E_MACROSIOPE_AMMIN'',''10S_MACROSIOPE_AMMIN'',''10E_MACROSIOPE_DIP'', ''10S_MACROSIOPE_DIP'')

OR

(
ISNULL(
	[SELECT  convert(decimal(19,2), round(SUM (quota),2))
	FROM finsorting
	JOIN sorting
		ON finsorting.idsor = sorting.idsor
	WHERE sorting.paridsor IN (select paridsor from sorting
			where idsor = %<finsorting.idsor>%)
	AND finsorting.idfin  = %<finsorting.idfin>%
	] {V}
,0)  
) < = 1
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','D','finvar','S','S','S','N','N',{ts '2007-12-13 14:22:31.030'},'NINO','la variazione di bilancio n. %<finvar.yvar>% / %<finvar.nvar>% non può essere cancellata. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC007','1','D','finvar','S','S','S','N','N',{ts '2012-10-10 15:02:15.247'},'sa','La previsione iniziale di bilancio non può essere cancellata in quanto è stato già redatto il bilancio di previsione.','S','%<finvar.variationkind>% <> 5
OR
--Non è stato ancora eseguito il trasferimento della configurazione di bilancio 
-- per l''esercizio precedente
(
([SELECT COUNT(*) FROM accountingyear 
WHERE ((flag&0x0F) >= 3)
AND accountingyear.ayear=%<finvar.yvar>%
-1]{I}=0 )
 AND 
([SELECT COUNT(*) from accountingyear 
where accountingyear.ayear=%<finvar.yvar>%
-1]{I}>0 )
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR013','1','D','finvar','S','S','S','N','N',{ts '2013-03-07 16:09:40.080'},'sa','L''utente non è abilitato a cancellare variazioni approvate.','S','isnull(%<finvar.idfinvarstatus>%,0) <=4

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''finvarapproved''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR014','1','D','finvar','S','S','S','N','N',{ts '2013-03-07 17:39:37.893'},'sa','L''utente non è abilitato a cancellare variazioni inserite o approvate','S','isnull(%<finvar.idfinvarstatus>%,0) <4

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''finvarapproved''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR015','1','D','finvar','S','S','S','N','N',{ts '2013-06-12 16:32:04.853'},'assistenza','Non è possibile cancellare una variazione di bilancio inserita in un atto. E'' necessario rimuoverla prima dall''atto.','S','%<finvar.idenactment>% is null')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR016','1','D','finvar','S','S','S','N','N',{ts '2013-06-13 16:48:35.437'},'assistenza','L''utente non è abilitato a cancellare storni approvati.','S','isnull(%<finvar.idfinvarstatus>%,0) <=4

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''storniapprove''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')
or 

[select count( distinct idfin) from finvardetail where 
   yvar=%<finvar.yvar>% and nvar = %<finvar.nvar>%]{I} <> 1 

OR
 %<finvar.official>% =''S''
OR 
 %<finvar.variationkind>% <>4
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR017','1','D','finvar','S','S','S','N','N',{ts '2013-06-13 17:01:53.827'},'assistenza','L''utente non è abilitato a cancellare storni inseriti','S','isnull(%<finvar.idfinvarstatus>%,0) <4

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''storniapprove''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')
or 

[select count( distinct idfin) from finvardetail where 
   yvar=%<finvar.yvar>% and nvar = %<finvar.nvar>%]{I} <> 1 

OR
 %<finvar.official>% =''S''
OR 
 %<finvar.variationkind>% <>4
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','I','finvar','S','S','S','N','N',{ts '2007-12-13 14:22:35.810'},'NINO','la variazione di bilancio n. %<finvar.yvar>% / %<finvar.nvar>% non può essere inserita. Esercizio  %<esercizio>% chiuso','N','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM055','1','I','finvar','S','S','S','N','N',{ts '2007-03-08 09:39:19.943'},'''MLUISAS''','Non è possibile avere due variazioni ufficiali con lo stesso numero','N','%<finvar.nofficial>% is null 
OR
[SELECT COUNT(*) from finvar where
 yvar=%<finvar.yvar>% and
 nvar <>%<finvar.nvar>% and
 nofficial= %<finvar.nofficial>%
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM115','1','I','finvar','S','S','S','N','N',{ts '2013-06-19 10:47:15.640'},'nino','Una variazione di tipo "normale" non dovrebbe agire sulla dotazione crediti o sulla dotazione cassa e simultaneamente sulla previsione principale o secondaria','S','(%<finvar.flagprevision>% = ''N'' AND %<finvar.flagsecondaryprev>%=''N'')
OR
(%<finvar.flagcredit>%=''N'' AND %<finvar.flagproceeds>%=''N'')
OR
(%<finvar.variationkind>% <> 1)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM115','2','I','finvar','S','S','S','N','N',{ts '2013-06-20 13:44:09.890'},'nino','Una variazione iniziale non può riguardare dotazione crediti o cassa.','S','%<finvar.variationkind>%<>5
OR
(%<finvar.flagproceeds>%=''N'' AND  %<finvar.flagcredit>%=''N'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM117','1','I','finvar','S','S','S','N','N',{ts '2013-07-18 12:53:09.157'},'sa','In una variazione di tipo "Storno di cassa" il saldo dei dettagli sulle voci di Bilancio di Spesa deve essere pari a zero.','N','ISNULL(%<finvar.moneytransfer>%,''N'') = ''N''
OR
ISNULL([SELECT SUM(amount) FROM finvardetail
JOIN    fin ON finvardetail.idfin = fin.idfin
WHERE   yvar = %<finvar.yvar>%
AND     nvar = %<finvar.nvar>%
AND     (fin.flag & 1) <> 0
]{V},0) = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC007','1','I','finvar','S','S','S','N','N',{ts '2012-10-10 15:02:19.390'},'sa','La previsione iniziale di bilancio non può essere inserita in quanto è stato già redatto il bilancio di previsione.','S','%<finvar.variationkind>% <> 5
OR
--Non è stato ancora eseguito il trasferimento della configurazione di bilancio 
-- per l''esercizio precedente
(
([SELECT COUNT(*) FROM accountingyear 
WHERE ((flag&0x0F) >= 3)
AND accountingyear.ayear=%<finvar.yvar>%
-1]{I}=0 )
 AND 
([SELECT COUNT(*) from accountingyear 
where accountingyear.ayear=%<finvar.yvar>%
-1]{I}>0 )
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR013','1','I','finvar','S','S','S','N','N',{ts '2013-03-07 16:09:49.143'},'sa','L''utente non è abilitato ad inserire variazioni marcandole come approvate.','S','isnull(%<finvar.idfinvarstatus>%,0) <=4

OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''finvarapproved''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR014','1','I','finvar','S','S','S','N','N',{ts '2013-03-07 17:39:45.753'},'sa','L''utente non è abilitato ad inserire variazioni marcandole come inserite o approvate','S','isnull(%<finvar.idfinvarstatus>%,0) <4

OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''finvarapproved''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR015','1','I','finvar','S','S','S','N','N',{ts '2013-06-12 16:31:11.183'},'assistenza','Non è possibile creare una variazione di bilancio inserendola direttamente in un atto.','S','%<finvar.idenactment>% is null')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR016','1','I','finvar','S','S','S','N','N',{ts '2013-06-13 16:50:07.140'},'assistenza','L''utente non è abilitato ad inserire storni marcandole come approvati.','N','isnull(%<finvar.idfinvarstatus>%,0) <=4

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''storniapprove''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')
or 

[select count( distinct idfin) from finvardetail where 
   yvar=%<finvar.yvar>% and nvar = %<finvar.nvar>%]{I} <> 1 

OR
 %<finvar.official>% =''S''
OR 
 %<finvar.variationkind>% <>4
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR017','1','I','finvar','S','S','S','N','N',{ts '2013-06-13 17:04:06.467'},'assistenza','L''utente non è abilitato ad inserire storni marcandoli come inseriti o approvati.','N','isnull(%<finvar.idfinvarstatus>%,0) <4

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''storniapprove''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')
or 

[select count( distinct idfin) from finvardetail where 
   yvar=%<finvar.yvar>% and nvar = %<finvar.nvar>%]{I} <> 1 

OR
 %<finvar.official>% =''S''
OR 
 %<finvar.variationkind>% <>4
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BA_COMPE001','1','U','finvar','N','S','S','N','N',{ts '2012-10-03 09:57:56.397'},'sa','La previsione di una voce di bilancio inclusa nella variazione diventa NEGATIVA','N','[(%<finvar.variationkind>%)]{I} =5
OR
(
isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&,0)
)

OR

(
[SELECT COUNT(*)
FROM finvardetail F 
JOIN fin 
	ON fin.idfin = F.idfin
WHERE F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	AND (
		ISNULL(
		     (SELECT SUM(ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)) 
			FROM upbtotal U
			WHERE U.idfin=F.idfin)
		,0) <0
	)
AND ((fin.flag & 1) = 0)
]{I}
=0
) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BA_COMPE001','2','U','finvar','S','N','N','N','N',{ts '2012-10-03 09:59:14.093'},'sa','La previsione di cassa di una voce di bilancio inclusa nella variazione diventa NEGATIVA','N','[(%<finvar.variationkind>%)]{I} =5
OR

(
isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&,0)
)

OR
(
[SELECT COUNT(*)
FROM finvardetail F 
JOIN fin 
	ON fin.idfin = F.idfin
WHERE F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
	     (SELECT SUM(isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0)) 
		     from upbtotal U
			where U.idfin=F.idfin
		)
			,0
		)
	  <0
	)
AND ((fin.flag & 1) = 0)

]{I}
=0
) 


')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BA_COMPE002','1','U','finvar','N','S','S','N','N',{ts '2012-10-03 10:07:09.333'},'sa','La previsione di una voce di bilancio inclusa nella variazione diventa NEGATIVA','N','[(%<finvar.variationkind>%)]{I} =5 
OR 
(
isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&,0)
)
or
(
[select count(*) from finvardetail F 
JOIN fin
	ON fin.idfin = F.idfin
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
	     (SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
		     from upbtotal U
			WHERE U.idfin=F.idfin
			AND U.idupb=F.idupb
		)
			,0
		)
	  <0
	)
	AND ((fin.flag & 1) <> 0)
]{I}
=0
) 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BA_COMPE002','2','U','finvar','S','N','N','N','N',{ts '2012-10-03 10:07:23.147'},'sa','La previsione di cassa di una voce di bilancio inclusa nella variazione diventa NEGATIVA','N','[(%<finvar.variationkind>%)]{I} =5 
OR 
(
isnull(%<finvar.flagsecondaryprev>%,''N'') = isnull(&<finvar.flagsecondaryprev>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&,0)
)
or
(
[select count(*) from finvardetail F 
JOIN fin 
ON fin.idfin = F.idfin
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
	     (SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
		     from upbtotal U where
			 U.idfin=F.idfin and
			 U.idupb=F.idupb
		)
			,0
		)
	  <0
	)
	AND ((fin.flag & 1) <> 0)
]{I}
=0
) 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','U','finvar','S','S','S','N','N',{ts '2007-12-13 14:22:40.797'},'NINO','la variazione di bilancio n. %<finvar.yvar>% / %<finvar.nvar>% non può essere modificata. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE001','1','U','finvar','N','S','S','N','N',{ts '2012-10-03 10:22:24.480'},'sa','La previsione di una voce di bilancio inclusa nella variazione diventa NEGATIVA','N','[(%<finvar.variationkind>%)]{I} =5 
OR (
isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&,0)
)
or
(
[select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
	     (SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
		     from upbtotal U
			WHERE U.idfin=F.idfin
			AND U.idupb=F.idupb
		)
			,0
		)
	  <0
	)
]{I}
=0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE001','2','U','finvar','S','N','N','N','N',{ts '2012-10-03 10:22:32.403'},'sa','La previsione di cassa di una voce di bilancio inclusa nella variazione diventa NEGATIVA','N','[(%<finvar.variationkind>%)]{I} =5 
OR 
(
isnull(%<finvar.flagsecondaryprev>%,''N'') = isnull(&<finvar.flagsecondaryprev>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&,0)
)

or
(
[select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
	     (SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
		     from upbtotal U where
			 U.idfin=F.idfin and
			 U.idupb=F.idupb
		)
			,0
		)
	  <0
	)
]{I}
=0
) 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE002','1','U','finvar','S','N','S','N','N',{ts '2012-10-03 10:29:19.863'},'sa','La previsione di competenza di qualche voce di bilancio di entrata presente nella variazione diviene INSUFFICIENTE!','N','[(%<finvar.variationkind>%)]{I} =5 
OR 
(
isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&,0)
)
or
(
[select count(*) from finvardetail F 
   join fin on F.idfin=fin.idfin
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and 
	   (fin.flag & 1)= 0
	and (
	  isnull(
			(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)
			   from upbtotal U where
			 U.idfin=F.idfin and
			 U.idupb=F.idupb
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)
			from upbincometotal U2 where 
			 U2.idfin=F.idfin and
			 U2.idupb=F.idupb
			and nphase = %<sys_incomefinphase>%
		  	)			
		      ,0
		)
	  <0
	)
]{I}
=0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE003','1','U','finvar','S','N','S','N','N',{ts '2012-10-03 10:38:11.893'},'sa','La previsione di competenza di qualche voce di bilancio di spesa presente nella variazione diviene INSUFFICIENTE!','N','[(%<finvar.variationkind>%)]{I} =5 
OR 
(isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&,0)
)
or
(
[select count(*) from finvardetail F 
      join fin on fin.idfin=F.idfin
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (fin.flag & 1)<>0
	and (
	  isnull(
			(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)
			   from upbtotal U where
			 U.idfin=F.idfin and
			 U.idupb=F.idupb
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)
			from upbexpensetotal U2 where 
			 U2.idfin=F.idfin and
			 U2.idupb=F.idupb
			and nphase = %<sys_expensefinphase>%
		  	)			
		      ,0
		)
	  <0
	)
]{I}
=0
) 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE004','1','U','finvar','S','N','S','S','N',{ts '2012-10-03 10:41:35.553'},'sa','La previsione di competenza di una della voci in spesa dell variazione diviene inferiore alla relativa assegnazioni dei crediti','N','[(%<finvar.variationkind>%)]{I} =5 
OR 
(
isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
and
isnull(%<finvar.flagcredit>%,''N'') = isnull(&<finvar.flagcredit>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
	join upb on F.idupb=upb.idupb
	join fin on F.idfin=fin.idfin
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (assured<>''S'')
	and (fin.flag & 1)  <>0
	and (
	  isnull(
			(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)- 
			ISNULL(totcreditpart, 0) - 
			ISNULL(creditvariation, 0) 
			  from upbtotal U where
			 U.idfin=F.idfin and
			 U.idupb=F.idupb
			)
			,0
		)
	  <0
	)
]{I}
=0
) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE005','1','U','finvar','N','S','S','N','S',{ts '2012-10-03 10:41:54.380'},'sa','La previsione di una voce in spesa presente nella variazione  diverrebbe inferiore alla relativa assegnazione incassi','N','[(%<finvar.variationkind>%)]{I} =5 
OR 
(
isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
and
isnull(%<finvar.flagproceeds>%,''N'') = isnull(&<finvar.flagproceeds>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
  join fin on F.idfin=fin.idfin
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and 
	   (fin.flag & 1) <> 0
	and (
	  isnull(
			(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)- 
			ISNULL(totproceedspart, 0) - 
			ISNULL(proceedsvariation, 0) 
			  from upbtotal U where
			 U.idfin=F.idfin and
			 U.idupb=F.idupb
			)
			,0
		)
	  <0
	)
]{I}
=0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE006','1','U','finvar','S','N','S','S','N',{ts '2013-05-21 09:57:34.250'},'sa','La previsione di competenza di una della voci in spesa dell variazione diviene inferiore alla relativa assegnazioni dei crediti','N','--[(%<finvar.variationkind>%)]{I} =5 
--OR 
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR
(
isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
and
isnull(%<finvar.flagcredit>%,''N'') = isnull(&<finvar.flagcredit>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
	join upb on F.idupb=upb.idupb
	join fin on F.idfin=fin.idfin
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (assured<>''S'')
	and (fin.flag & 1)  <>0
	and (
	  isnull(
			(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)- 
			ISNULL(totcreditpart, 0) - 
			ISNULL(creditvariation, 0) 
			  from upbunderwritingtotal U where
			 U.idfin=F.idfin 
			and U.idupb=F.idupb
			and U.idunderwriting= F.idunderwriting
			)
			,0
		)
	  <0
	)
]{I}
=0
) 


')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE007','1','U','finvar','N','S','S','N','S',{ts '2013-05-21 09:58:40.217'},'sa','La previsione della voce in spesa %<finvardetailview.codefin>%, Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% è inferiore alle assegnazioni degli incassi.','N','--[(%<finvar.variationkind>%)]{I} =5 
--OR 
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR
(
isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
and
isnull(%<finvar.flagproceeds>%,''N'') = isnull(&<finvar.flagproceeds>&,''N'')

AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
  join fin on F.idfin=fin.idfin
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and 
	   (fin.flag & 1) <> 0
	and (
	  isnull(
			(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)- 
			ISNULL(totproceedspart, 0) - 
			ISNULL(proceedsvariation, 0) 
			  from upbunderwritingtotal U 
			where  U.idfin=F.idfin 
			and U.idupb=F.idupb
			and U.idunderwriting = F.idunderwriting
			)
			,0
		)
	  <0
	)
]{I}
=0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE008','1','U','finvar','N','S','S','N','N',{ts '2013-05-21 12:40:13.510'},'sa','La previsione di una voce di bilancio inclusa nella variazione diventa NEGATIVA','N','--[(%<finvar.variationkind>%)]{I} =5 
--OR 
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR
(
isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&,0)
)
or
(
[select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
	     (SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
		     from upbunderwritingtotal U
			WHERE U.idfin=F.idfin
			AND U.idupb=F.idupb
			AND U.idunderwriting = F.idunderwriting
		)
			,0
		)
	  <0
	)
]{I}
=0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE008','2','U','finvar','S','N','N','N','N',{ts '2013-05-21 10:52:52.540'},'sa','La previsione di cassa di una voce di bilancio inclusa nella variazione diventa NEGATIVA','N','--[(%<finvar.variationkind>%)]{I} =5 
--OR 
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR
(
isnull(%<finvar.flagsecondaryprev>%,''N'') = isnull(&<finvar.flagsecondaryprev>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&,0)
)

or
(
[select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
	     (SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
		     from upbunderwritingtotal U where
			 U.idfin=F.idfin and
			 U.idupb=F.idupb and
			U.idunderwriting = F.idunderwriting
		)
			,0
		)
	  <0
	)
]{I}
=0
) 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE009','1','U','finvar','S','N','S','N','N',{ts '2013-05-21 10:53:59.427'},'sa','La previsione di competenza di qualche voce di bilancio di entrata presente nella variazione diviene INSUFFICIENTE!','N','--[(%<finvar.variationkind>%)]{I} =5 
--OR 
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR
(
isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&,0)
)
or
(
[select count(*) from finvardetail F 
   join fin on F.idfin=fin.idfin
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and 
	   (fin.flag & 1)= 0
	and (
	  isnull(
			(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)
			   from upbunderwritingtotal U where
			 U.idfin=F.idfin and
			 U.idupb=F.idupb and
			U.idunderwriting = F.idunderwriting
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)
			from underwritingincometotal U2 where 
			 U2.idfin=F.idfin and
			 U2.idupb=F.idupb and
			U2.idunderwriting = F.idunderwriting and
			nphase = %<sys_incomefinphase>%
		  	)			
		      ,0
		)
	  <0
	)
]{I}
=0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE010','1','U','finvar','S','N','S','N','N',{ts '2013-05-21 10:55:58.577'},'sa','La previsione di competenza di qualche voce di bilancio di spesa presente nella variazione diviene INSUFFICIENTE!','N','--[(%<finvar.variationkind>%)]{I} =5 
--OR 
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR
(isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&,0)
)
or
(
[select count(*) from finvardetail F 
      join fin on fin.idfin=F.idfin
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (fin.flag & 1)<>0
	and (
	  isnull(
			(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)
			   from upbunderwritingtotal U where
			 U.idfin=F.idfin and
			 U.idupb=F.idupb and
			U.idunderwriting = F.idunderwriting
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)
			from underwritingexpensetotal U2 where 
			 U2.idfin=F.idfin and
			 U2.idupb=F.idupb and 
			U2.idunderwriting = F.idunderwriting and
			nphase = %<sys_expensefinphase>%
		  	)			
		      ,0
		)
	  <0
	)
]{I}
=0
) 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI001','1','U','finvar','S','N','S','S','N',{ts '2012-10-03 10:43:11.567'},'sa','La dotazione crediti su qualche voce di bilancio diviene NEGATIVA!','N','[(%<finvar.variationkind>%)]{I} =5 
OR 
(isnull(%<finvar.flagcredit>%,''N'') = isnull(&<finvar.flagcredit>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
			(select isnull(totcreditpart,0)+isnull(creditvariation,0)
			 from upbtotal U
			 join upb on upb.idupb = U.idupb
			 where U.idfin=F.idfin and
			 U.idupb=F.idupb and
			 isnull(upb.assured,''N'') <> ''S''
			)
			,0
		)
	  <0
	)
]{I}
=0
) 



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI002','1','U','finvar','S','N','S','S','N',{ts '2012-10-03 10:45:54.530'},'sa','La dotazione dei crediti su qualche voce dell''UPB precedente diviene INSUFFICIENTE!','N','[(%<finvar.variationkind>%)]{I} =5 
OR 
(isnull(%<finvar.flagcredit>%,''N'') = isnull(&<finvar.flagcredit>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
			(select isnull(totcreditpart,0)+isnull(creditvariation,0)
			 from upbtotal U 
			 join upb on U.idupb=upb.idupb
			 where		
			 U.idfin=F.idfin and
			 U.idupb=F.idupb and
			 isnull(upb.assured,''N'')<>''S''
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)
			from upbexpensetotal U2 
			 join upb on U2.idupb=upb.idupb
			where 
			 U2.idfin=F.idfin and
			 U2.idupb=F.idupb and
			 isnull(upb.assured,''N'')<>''S''
			and nphase = %<sys_expensefinphase>%
		  	)			
		      ,0
		)
	  <0
	)
]{I}
=0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI006','1','U','finvar','S','N','S','S','N',{ts '2013-05-21 09:50:08.057'},'sa','La dotazione crediti su qualche voce di bilancio della variazione n.%<finvar.nvar>% diviene NEGATIVA!
','N','--[(%<finvar.variationkind>%)]{I} =5 
--OR 
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR
(isnull(%<finvar.flagcredit>%,''N'') = isnull(&<finvar.flagcredit>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
			(select isnull(totcreditpart,0)+isnull(creditvariation,0)
			 from upbunderwritingtotal  U
			 	join upb 
			on upb.idupb = U.idupb
			 where U.idfin=F.idfin 
				and U.idupb=F.idupb 
				and U.idunderwriting = F.idunderwriting
			and isnull(upb.assured,''N'') <> ''S''
			)
			,0
		)
	  <0
	)
]{I}
=0
) 



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI007','1','U','finvar','S','N','S','S','N',{ts '2013-05-21 09:54:26.680'},'sa','La dotazione dei crediti su qualche voce dell''UPB precedente diviene INSUFFICIENTE!','N','--[(%<finvar.variationkind>%)]{I} =5 
--OR 
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR
(isnull(%<finvar.flagcredit>%,''N'') = isnull(&<finvar.flagcredit>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
			(select isnull(totcreditpart,0)+isnull(creditvariation,0)
			 from upbunderwritingtotal U 
			 join upb on U.idupb=upb.idupb
			 where		
			 U.idfin=F.idfin 
			and U.idupb=F.idupb 
			and U.idunderwriting = F.idunderwriting 
			and isnull(upb.assured,''N'')<>''S''
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)
			from underwritingexpensetotal U2 
			 join upb on U2.idupb=upb.idupb
			where U2.idfin=F.idfin 
			and U2.idupb=F.idupb 
			and U2.idunderwriting = F.idunderwriting 
			and isnull(upb.assured,''N'')<>''S''
			and nphase = %<sys_expensefinphase>%
		  	)			
		      ,0
		)
	  <0
	)
]{I}
=0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO009','1','U','finvar','S','N','S','N','N',{ts '2012-10-03 10:47:53.540'},'sa','La previsione di competenza di qualche voce di bilancio di spesa presente nella variazione diviene INSUFFICIENTE!','N','[(%<finvar.variationkind>%)]{I} =5 
OR 
(isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
	 join fin on F.idfin=fin.idfin
  	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and 
	  (fin.flag & 1) <> 0

	and (
	  isnull(
			(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)
			   from upbtotal U where
			 U.idfin=F.idfin and
			 U.idupb=F.idupb
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)
			from upbexpensetotal U2 where 
			 U2.idfin=F.idfin and
			 U2.idupb=F.idupb
			and nphase = %<sys_expensefinphase>%
		  	)			
		      ,0
		)
	-
	ISNULL(
			(SELECT ISNULL(SUM(amount), 0) 
			FROM pettycashoperation PC
			WHERE PC.idfin = F.idfin and
			 PC.idupb=F.idupb
			AND PC.yrestore IS NULL
			AND PC.nrestore IS NULL)
			,0)

	  <0
	)
]{I}
=0
) 

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO010','1','U','finvar','N','S','N','N','N',{ts '2012-10-03 10:58:22.640'},'sa','La previsione di competenza di qualche voce di bilancio di spesa presente nella variazione diviene INSUFFICIENTE!','N','[(%<finvar.variationkind>%)]{I} =5 
OR
(isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
	 join fin on F.idfin=fin.idfin
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and 
	  (fin.flag & 1) <> 0
	and (
	  isnull(
			(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)
			   from upbtotal U where
			 U.idfin=F.idfin and
			 U.idupb=F.idupb
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears, 0)  
			from upbexpensetotal U2 where 
			 U2.idfin=F.idfin and
			 U2.idupb=F.idupb
			and nphase = %<sys_expensefinphase>%
		  	)			
		      ,0
		)
	-
	ISNULL(
			(SELECT ISNULL(SUM(amount), 0) 
			FROM pettycashoperation PC
			WHERE PC.idfin = F.idfin and
			 PC.idupb=F.idupb
			AND PC.yrestore IS NULL
			AND PC.nrestore IS NULL)
			,0)

	  <0
	)
]{I}
=0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO011','1','U','finvar','S','N','S','S','N',{ts '2012-10-03 10:59:59.627'},'sa','La dotazione dei crediti su qualche voce dell''UPB precedente diviene INSUFFICIENTE!','N','[(%<finvar.variationkind>%)]{I} =5 
OR
(isnull(%<finvar.flagcredit>%,''N'') = isnull(&<finvar.flagcredit>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
			(select isnull(totcreditpart,0)+isnull(creditvariation,0)
			 from upbtotal U
			 join upb on U.idupb=upb.idupb
			 where		
			 U.idfin=F.idfin and
			 U.idupb=F.idupb and
			 isnull(upb.assured,''N'')<>''S''
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)
			from upbexpensetotal U2 
			 join upb on U2.idupb=upb.idupb
			  where
			 U2.idfin=F.idfin and
			 U2.idupb=F.idupb and
			 isnull(upb.assured,''N'')<>''S''
			and nphase = %<sys_expensefinphase>%
		  	)			
		      ,0
		)
	-
	ISNULL(
			(SELECT ISNULL(SUM(amount), 0) 
			FROM pettycashoperation PC
			join upb on PC.idupb=upb.idupb
			WHERE PC.idfin = F.idfin and
			 PC.idupb=F.idupb and
			 isnull(upb.assured,''N'')<>''S''
			AND PC.yrestore IS NULL
			AND PC.nrestore IS NULL)
			,0)
	  <0
	)
]{I}
=0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO012','1','U','finvar','S','S','S','N','S',{ts '2012-10-03 11:00:30.180'},'sa','La dotazione incassi su qualche voce di bilancio diviene INSUFFICIENTE!','S','[(%<finvar.variationkind>%)]{I} =5 
OR
(isnull(%<finvar.flagproceeds>%,''N'') = isnull(&<finvar.flagproceeds>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
			(select isnull(totproceedspart,0)+isnull(proceedsvariation,0)
			 from upbtotal U
			 join upb on U.idupb=upb.idupb
			 where U.idfin=F.idfin and
			 U.idupb=F.idupb
			 AND isnull(upb.assured,''N'')<>''S''
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)+isnull(totalarrears,0)
			from upbexpensetotal U2
			 join upb on U2.idupb=upb.idupb
			where U2.idfin=F.idfin and
			 U2.idupb=F.idupb
			 AND isnull(upb.assured,''N'')<>''S''
			and nphase = %<sys_expensefinphase>%
		  	)			
		      ,0
		)
	-
	ISNULL(
			(SELECT ISNULL(SUM(amount), 0) 
			FROM pettycashoperation PC
			 join upb on PC.idupb=upb.idupb
			WHERE PC.idfin = F.idfin and
			 PC.idupb=F.idupb
			 AND isnull(upb.assured,''N'')<>''S''
			AND PC.yrestore IS NULL
			AND PC.nrestore IS NULL)
			,0)
	  <0
	)
]{I}
=0
)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO020','1','U','finvar','S','N','N','N','N',{ts '2012-10-03 11:01:31.087'},'sa','La previsione di cassa di una delle voci di spesa nella variazione è inferiore alle righe di mandato','N','[(%<finvar.variationkind>%)]{I} =5 
OR
(
isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)

OR
(
[select count(*) from finvardetail F 
	join fin on F.idfin=fin.idfin
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and 
	   (fin.flag & 1) <> 0
	and (
	  isnull(
			(SELECT ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0)
			   from upbtotal U 			 
			 	where		
			 	U.idfin=F.idfin and
				 U.idupb=F.idupb 

			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)+isnull(totalarrears,0)
			from upbexpensetotal U2 
			where 
			 U2.idfin=F.idfin and
			 U2.idupb=F.idupb
			and nphase = %<sys_maxexpensephase>%
			 
		  	)			
		      ,0
		)
	-
	ISNULL(
			(SELECT ISNULL(SUM(amount), 0) 
			FROM pettycashoperation PC
			WHERE PC.idfin = F.idfin and
			 PC.idupb=F.idupb
			AND PC.yrestore IS NULL
			AND PC.nrestore IS NULL)
			,0)

	  <0
	)
]{I}
=0
) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO034','1','U','finvar','S','N','S','S','N',{ts '2013-06-19 12:32:48.440'},'assistenza','La dotazione dei crediti su qualche voce dell''UPB precedente diviene INSUFFICIENTE!','N','--[(%<finvar.variationkind>%)]{I} =5 
--OR
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR

(isnull(%<finvar.flagcredit>%,''N'') = isnull(&<finvar.flagcredit>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
			(select isnull(totcreditpart,0)+isnull(creditvariation,0)
			 from upbunderwritingtotal U
			 join upb on U.idupb=upb.idupb
			 where	
			 U.idfin=F.idfin and
			 U.idupb=F.idupb and
			 U.idunderwriting = F.idunderwriting and
			 isnull(upb.assured,''N'')<>''S''
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)
			from underwritingexpensetotal U2 
			 join upb 
				on U2.idupb=upb.idupb
			 where U2.idfin=F.idfin 
				and U2.idupb=F.idupb 
				and U2.idunderwriting = F.idunderwriting 
				and isnull(upb.assured,''N'')<>''S''
				and nphase = %<sys_expensefinphase>%
		  	)			
		      ,0
		)
	-
	ISNULL(
			(SELECT ISNULL(SUM(POU.amount), 0) 
			FROM pettycashoperation PO
			join pettycashoperationunderwriting POU
				on PO.idpettycash=POU.idpettycash
				and PO.yoperation=POU.yoperation
			 	and PO.noperation=POU.noperation
			JOIN upb U
				on PO.idupb=U.idupb
			WHERE PO.idfin = F.idfin 
				and PO.idupb=F.idupb 
				and POU.idunderwriting = F.idunderwriting
				and isnull(U.assured,''N'')<>''S''
				AND PO.yrestore IS NULL
				AND PO.nrestore IS NULL)
			,0)
	  <0
	)
]{I}
=0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO035','1','U','finvar','S','S','S','N','S',{ts '2013-06-19 12:40:04.657'},'assistenza','La dotazione dei incassi su qualche voce dell''UPB precedente diviene INSUFFICIENTE!','S','--[(%<finvar.variationkind>%)]{I} =5 
--OR
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR

(isnull(%<finvar.flagproceeds>%,''N'') = isnull(&<finvar.flagproceeds>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
			(select isnull(totproceedspart,0)+isnull(proceedsvariation,0)
			 from upbunderwritingtotal U
			 join upb on U.idupb=upb.idupb
			 where	
			 U.idfin=F.idfin and
			 U.idupb=F.idupb and
			 U.idunderwriting = F.idunderwriting and
			 isnull(upb.assured,''N'')<>''S''
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0)
			from underwritingexpensetotal U2 
			 join upb 
				on U2.idupb=upb.idupb
			 where U2.idfin=F.idfin 
				and U2.idupb=F.idupb 
				and U2.idunderwriting = F.idunderwriting 
				and isnull(upb.assured,''N'')<>''S''
				and nphase = %<sys_maxexpensephase>%
		  	)			
		      ,0
		)
	-
	ISNULL(
			(SELECT ISNULL(SUM(POU.amount), 0) 
			FROM pettycashoperation PO
			join pettycashoperationunderwriting POU
				on PO.idpettycash=POU.idpettycash
				and PO.yoperation=POU.yoperation
			 	and PO.noperation=POU.noperation
			JOIN upb U
				on PO.idupb=U.idupb
			WHERE PO.idfin = F.idfin 
				and PO.idupb=F.idupb 
				and POU.idunderwriting = F.idunderwriting
				and isnull(U.assured,''N'')<>''S''
				AND PO.yrestore IS NULL
				AND PO.nrestore IS NULL)
			,0)
	  <0
	)
]{I}
=0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO036','1','U','finvar','S','N','S','N','N',{ts '2013-05-21 10:57:37.993'},'sa','La previsione di competenza di qualche voce di bilancio di spesa presente nella variazione diviene INSUFFICIENTE!','N','--[(%<finvar.variationkind>%)]{I} =5 
--OR 
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR
(isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
	 join fin on F.idfin=fin.idfin
  	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and 
	  (fin.flag & 1) <> 0

	and (
	  isnull(
			(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)
			   from upbunderwritingtotal U where
			 U.idfin=F.idfin and
			 U.idupb=F.idupb and
			U.idunderwriting = F.idunderwriting
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)
			from underwritingexpensetotal U2 where 
			 U2.idfin=F.idfin and
			 U2.idupb=F.idupb and
			U2.idunderwriting = F.idunderwriting
			and nphase = %<sys_expensefinphase>%
		  	)			
		      ,0
		)
	-
	ISNULL(
			(SELECT ISNULL(SUM(POU.amount), 0) 
			FROM pettycashoperation PO
			join pettycashoperationunderwriting POU
				on PO.idpettycash=POU.idpettycash
				and PO.yoperation=POU.yoperation
			 	and PO.noperation=POU.noperation
			JOIN upb U
				on PO.idupb=U.idupb
			WHERE PO.idfin = F.idfin 
				and PO.idupb=F.idupb 
				and POU.idunderwriting = F.idunderwriting
			AND PO.yrestore IS NULL
			AND PO.nrestore IS NULL)
			,0)

	  <0
	)
]{I}
=0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO037','1','U','finvar','N','S','N','N','N',{ts '2013-06-06 12:31:52.233'},'nino','La previsione di competenza di qualche voce di bilancio di spesa presente nella variazione diviene INSUFFICIENTE!','N','--[(%<finvar.variationkind>%)]{I} =5 
--OR
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR
(isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
	 join fin on F.idfin=fin.idfin
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and 
	  (fin.flag & 1) <> 0
	and (
	  isnull(
			(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)
			   from upbunderwritingtotal U where
			 U.idfin=F.idfin and
			 U.idupb=F.idupb and
			U.idunderwriting = F.idunderwriting
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears, 0)  
			from underwritingexpensetotal U2 where 
			 U2.idfin=F.idfin and
			 U2.idupb=F.idupb and 
			U2.idunderwriting = F.idunderwriting
			and nphase = %<sys_expensefinphase>%
		  	)			
		      ,0
		)
	-
	ISNULL(
			(SELECT ISNULL(SUM(POU.amount), 0) 
			FROM pettycashoperation PO
			join pettycashoperationunderwriting POU
				on PO.idpettycash=POU.idpettycash
				and PO.yoperation=POU.yoperation
			 	and PO.noperation=POU.noperation
			JOIN upb U
				on PO.idupb=U.idupb
			WHERE PO.idfin = F.idfin 
				and PO.idupb=F.idupb 
				and POU.idunderwriting = F.idunderwriting
			AND PO.yrestore IS NULL
			AND PO.nrestore IS NULL)
			,0)

	  <0
	)
]{I}
=0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO038','1','U','finvar','S','N','N','N','N',{ts '2013-05-21 10:59:35.650'},'sa','La previsione di cassa di una delle voci di spesa nella variazione è inferiore alle righe di mandato','N','--[(%<finvar.variationkind>%)]{I} =5 
--OR
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR
(
isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)

OR
(
[select count(*) from finvardetail F 
	join fin on F.idfin=fin.idfin
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and 
	   (fin.flag & 1) <> 0
	and (
	  isnull(
			(SELECT ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0)
			   from upbunderwritingtotal U 			 
			 	where		
			 	U.idfin=F.idfin and
				 U.idupb=F.idupb and
				U.idunderwriting = F.idunderwriting
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)+isnull(totalarrears,0)
			from underwritingexpensetotal U2 
			where 
			 U2.idfin=F.idfin and
			 U2.idupb=F.idupb and
			U2.idunderwriting = F.idunderwriting
			and nphase = %<sys_maxexpensephase>%
			 
		  	)			
		      ,0
		)
	-
	ISNULL(
			(SELECT ISNULL(SUM(POU.amount), 0) 
			FROM pettycashoperation PO
			join pettycashoperationunderwriting POU
				on PO.idpettycash=POU.idpettycash
				and PO.yoperation=POU.yoperation
			 	and PO.noperation=POU.noperation
			JOIN upb U
				on PO.idupb=U.idupb
			WHERE PO.idfin = F.idfin 
				and PO.idupb=F.idupb 
				and POU.idunderwriting = F.idunderwriting
			AND PO.yrestore IS NULL
			AND PO.nrestore IS NULL)
			,0)

	  <0
	)
]{I}
=0
) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS001','1','U','finvar','S','S','S','N','S',{ts '2012-10-03 11:17:33.670'},'sa','La dotazione incassi su qualche voce di bilancio diviene INSUFFICIENTE!','S','[(%<finvar.variationkind>%)]{I} =5 
OR
(isnull(%<finvar.flagproceeds>%,''N'') = isnull(&<finvar.flagproceeds>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
			(select isnull(totproceedspart,0)+isnull(proceedsvariation,0)
			 from upbtotal U 
			 JOIN upb
			 ON upb.idupb = U.idupb
			 where
			 U.idfin=F.idfin and
			 U.idupb=F.idupb and
			ISNULL(upb.assured,''N'') <> ''S''
			)
			,0
		)
	  <0
	)
]{I}
=0
) 

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS002','1','U','finvar','S','S','S','N','S',{ts '2012-10-03 11:18:46.417'},'sa','La dotazione incassi su qualche voce di bilancio diviene INSUFFICIENTE!','S','[(%<finvar.variationkind>%)]{I} =5 
OR 
(isnull(%<finvar.flagproceeds>%,''N'') = isnull(&<finvar.flagproceeds>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
			(select isnull(totproceedspart,0)+isnull(proceedsvariation,0)
			 from upbtotal U where
			 U.idfin=F.idfin and
			 U.idupb=F.idupb
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)+isnull(totalarrears,0)
			from upbexpensetotal U2 where 
			 U2.idfin=F.idfin and
			 U2.idupb=F.idupb
			and nphase = %<sys_maxexpensephase>%
		  	)			
		      ,0
		)

	  <0
	)
]{I}
=0
) 



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS006','1','U','finvar','S','S','S','N','S',{ts '2013-05-21 10:41:50.130'},'sa','La dotazione incassi su qualche voce di bilancio diviene INSUFFICIENTE!','S','--[(%<finvar.variationkind>%)]{I} =5 
--OR
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR

(isnull(%<finvar.flagproceeds>%,''N'') = isnull(&<finvar.flagproceeds>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
			(select isnull(totproceedspart,0)+isnull(proceedsvariation,0)
			 from upbunderwritingtotal U 
			 JOIN upb
				 ON upb.idupb = U.idupb
			 where  U.idfin=F.idfin 
				and  U.idupb=F.idupb 
				and U.idunderwriting = F.idunderwriting
				and ISNULL(upb.assured,''N'') <> ''S''
			)
			,0
		)
	  <0
	)
]{I}
=0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS007','1','U','finvar','S','S','S','N','S',{ts '2013-05-21 10:43:20.327'},'sa','La dotazione incassi su qualche voce di bilancio diviene INSUFFICIENTE!','S','--[(%<finvar.variationkind>%)]{I} =5 
--OR 
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR

(isnull(%<finvar.flagproceeds>%,''N'') = isnull(&<finvar.flagproceeds>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
or
(
[select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
			(select isnull(totproceedspart,0)+isnull(proceedsvariation,0)
			 from upbunderwritingtotal U where
			 U.idfin=F.idfin and
			 U.idupb=F.idupb and
			U.idunderwriting = F.idunderwriting 
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)+isnull(totalarrears,0)
			from underwritingexpensetotal U2 where 
			 U2.idfin=F.idfin and
			 U2.idupb=F.idupb and 
			U2.idunderwriting = F.idunderwriting and 
			nphase = %<sys_maxexpensephase>%
		  	)			
		      ,0
		)

	  <0
	)
]{I}
=0
) 



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('LE_COMPE003','1','U','finvar','S','N','S','N','N',{ts '2012-08-30 14:39:27.750'},'sa','La previsione di competenza della voce in spesa %<fin.codefin>% e UPB %<upb.codeupb>%  è INSUFFICIENTE!','N','(isnull(%<finvar.flagprevision>%,''N'') = isnull(&<finvar.flagprevision>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)
OR 
ISNULL(%<finvar.idfinvarstatus>%,0)  <> 2
OR
ISNULL (%<finvar.flagprevision>%,''S'') <> ''S''
or
(
[select count(*) from finvardetail F 
  join fin on F.idfin=fin.idfin
 where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
 and 
   (fin.flag & 1) <> 0
 and (
   isnull(
   (SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)
      from upbtotal U where
    U.idfin=F.idfin and
    U.idupb=F.idupb
   )
   ,0
  )

+ 
ISNULL((SELECT SUM(F1.amount) FROM finvardetail F1
		  JOIN finvar ON finvar.yvar= F1.yvar and finvar.nvar= F1.nvar
	    WHERE ISNULL(finvar.flagprevision,''S'') = ''S''
		AND     F1.idfin=F.idfin 
    		AND	F1.idupb=F.idupb
		AND finvar.idfinvarstatus = 2 
		AND finvar.variationkind <> 5 


) ,0)
   -
   isnull(
   (SELECT ISNULL(totalcompetency,0)
   from upbexpensetotal U2 where 
    U2.idfin=F.idfin and
    U2.idupb=F.idupb
   and nphase = %<sys_expensefinphase>%
     )   
        ,0
  )

   <0
 )
]{I}
=0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ019','1','U','finvar','S','S','S','N','N',{ts '2011-11-03 11:01:36.517'},'sa','Attenzione modificando lo stato della variazione il valore di una Card associata ai dettagli variazione potrebbe assumere importo NEGATIVO.','N','isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&,0)

OR
(
[select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and (
	  isnull(
	     (SELECT isnull(amount,0)
		     from lcardtotal L
			WHERE L.idlcard=F.idlcard)
			,0
		)
	  <0
	)
]{I}
=0
) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM038','1','U','finvar','S','S','S','S','N',{ts '2012-10-03 11:21:22.760'},'sa','Il totale dell''accertato è inferiore al totale dell''impegnato per l''UPB scelto','N','[(%<finvar.variationkind>%)]{I} =5 
OR
(
ISNULL(%<finvar.flagcredit>%,''N'') = ISNULL(&<finvar.flagcredit>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&, 0)
)

OR
(
[SELECT COUNT(*) FROM finvardetail F 
WHERE F.yvar= %<finvar.yvar>% AND F.nvar = %<finvar.nvar>%
AND (
	ISNULL(
		(SELECT SUM(creditvariation)
		FROM upbtotal U 
		JOIN upb
		ON U.idupb = upb.idupb
		WHERE U.idupb = F.idupb
		AND ISNULL(upb.assured,''N'') = ''S'')
	,0)
	+
	ISNULL(
		(SELECT ISNULL(previousassessment,0) - ISNULL(previousappropriation,0)
		FROM upb
		WHERE upb.idupb = F.idupb
		AND ISNULL(upb.assured,''N'') = ''S'')
	,0)
	+
	ISNULL(
		(SELECT SUM(totalcompetency)
		FROM upbincometotal U2
		JOIN upb
		ON U2.idupb = upb.idupb
		WHERE U2.idupb = F.idupb
		AND ISNULL(upb.assured,''N'') = ''S''
		AND nphase = %<sys_assessmentphase>%)
	,0)
	-
	ISNULL(
		(SELECT SUM(totalcompetency)
		FROM upbexpensetotal U2 
		JOIN upb
		ON U2.idupb = upb.idupb
		WHERE U2.idfin = F.idfin
		AND U2.idupb = F.idupb
		AND ISNULL(upb.assured,''N'') = ''S''
		AND nphase = %<sys_appropriationphase>%)
	,0)
<0)
]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM055','1','U','finvar','S','S','S','N','N',{ts '2007-03-08 09:40:27.053'},'''MLUISAS''','Il numero ufficiale per la variazione selezionato è già presente in un altra variazione.','N','%<finvar.nofficial>% is null 
OR
[SELECT COUNT(*) from finvar where
 yvar=%<finvar.yvar>% and
 nvar <>%<finvar.nvar>% and
 nofficial= %<finvar.nofficial>%
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM068','1','U','finvar','S','S','S','N','N',{ts '2008-03-31 11:40:48.670'},'NINO','Il saldo della variazione di bilancio deve essere pari a ZERO!','N','[SELECT variationkind
FROM finvar
WHERE yvar = %<finvar.yvar>%
AND nvar = %<finvar.nvar>%]{I} NOT IN (1,4)
OR
ISNULL(
[SELECT total 
FROM finvarview
WHERE yvar = %<finvar.yvar>%
AND nvar = %<finvar.nvar>%]
{V},0) = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM115','1','U','finvar','S','S','S','N','N',{ts '2013-06-19 10:47:44.547'},'nino','Una variazione di tipo "normale" non dovrebbe agire sulla dotazione crediti o sulla dotazione cassa e simultaneamente sulla previsione principale o secondaria','S','(%<finvar.flagprevision>% = ''N'' AND %<finvar.flagsecondaryprev>%=''N'')
OR
(%<finvar.flagcredit>%=''N'' AND %<finvar.flagproceeds>%=''N'')
OR
(%<finvar.variationkind>% <> 1)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM115','2','U','finvar','S','S','S','N','N',{ts '2013-06-20 13:44:30.360'},'nino','Una variazione iniziale non può riguardare dotazione crediti o cassa.','S','%<finvar.variationkind>%<>5
OR
(%<finvar.flagproceeds>%=''N'' AND  %<finvar.flagcredit>%=''N'')')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM117','1','U','finvar','S','S','S','N','N',{ts '2013-07-17 14:20:00.263'},'sa','Esistono delle operazioni di Girofondo collegate alla variazione Es. %<finvar.yvar>%. / n° %<finvar.nvar>% %<finvar.description>%. ','N','(
ISNULL(%<finvar.moneytransfer>%,''N'')  = ISNULL(&<finvar.moneytransfer>&,''N'')
)
OR
[SELECT COUNT(*) FROM moneytransfer 
WHERE yvar = %<finvar.yvar>%
AND      nvar = %<finvar.nvar>%
]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM117','2','U','finvar','S','S','S','N','N',{ts '2013-07-17 14:22:14.600'},'sa','Esistono delle operazioni di Girofondo collegate alla variazione Es. %<finvar.yvar>%. / n° %<finvar.nvar>% %<finvar.description>% perciò non è possibile annullarla o cambiarne lo stato. ','N','(
ISNULL(%<finvar.idfinvarstatus>%,0)  = ISNULL(&<finvar.idfinvarstatus>&,0)
)
OR
(
ISNULL(%<finvar.idfinvarstatus>%,0)  = 5
)
OR
[SELECT COUNT(*) FROM moneytransfer 
WHERE yvar = %<finvar.yvar>%
AND      nvar = %<finvar.nvar>%
]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM117','3','U','finvar','S','S','S','N','N',{ts '2013-07-18 12:53:16.770'},'sa','In una variazione di tipo "Storno di cassa" il saldo dei dettagli sulle voci di Bilancio di Spesa deve essere pari a zero.','N','ISNULL(%<finvar.moneytransfer>%,''N'') = ''N''
OR
ISNULL([SELECT SUM(amount) FROM finvardetail
JOIN    fin ON finvardetail.idfin = fin.idfin
WHERE   yvar = %<finvar.yvar>%
AND     nvar = %<finvar.nvar>%
AND     (fin.flag & 1) <> 0
]{V},0) = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON004','1','U','finvar','S','N','N','N','N',{ts '2012-10-03 11:33:10.280'},'sa','La previsione di cassa di una delle voci di spesa nella variazione è inferiore alle righe di mandato','N','[(%<finvar.variationkind>%)]{I} =5 
OR
(
[select count(*) from finvardetail F 
	join fin on F.idfin=fin.idfin
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and 
	  ( (fin.flag & 1) <> 0 )
	and (
	  isnull(
			(SELECT ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0)
			   from upbtotal U 			 
			 	where		
			 	U.idfin=F.idfin and
				 U.idupb=F.idupb 

			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)+isnull(totalarrears,0)
			from upbexpensetotal U2 
			where 
			 U2.idfin=F.idfin and
			 U2.idupb=F.idupb
			and nphase = %<sys_maxexpensephase>%
			 
		  	)			
		      ,0
		)
	  <0
	)
]{I}
=0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON005','1','U','finvar','S','N','N','N','S',{ts '2012-10-03 11:33:58.280'},'sa','La previsione di cassa di una voce in spesa presente nella variazione  diverrebbe inferiore alla relativa assegnazione incassi','N','[(%<finvar.variationkind>%)]{I} =5 
OR
(
isnull(%<finvar.flagsecondaryprev>%,''N'') = isnull(&<finvar.flagsecondaryprev>&,''N'')
and
isnull(%<finvar.flagproceeds>%,''N'') = isnull(&<finvar.flagproceeds>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&,0)
)
or
(
[select count(*) from finvardetail F 
 	join fin on F.idfin=fin.idfin
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and 
	   (fin.flag & 1) <> 0
	and (
	  isnull(
			(SELECT ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0)- 
			ISNULL(totproceedspart, 0) - 
			ISNULL(proceedsvariation, 0) 
			  from upbtotal U where
			 U.idfin=F.idfin and
			 U.idupb=F.idupb
			)
			,0
		)
	  <0
	)
]{I}
=0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON006','1','U','finvar','S','N','N','N','S',{ts '2013-05-21 10:44:46.287'},'sa','La previsione di cassa di una voce in spesa presente nella variazione  diverrebbe inferiore alla relativa assegnazione incassi.
','N','--[(%<finvar.variationkind>%)]{I} =5 
--OR
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR
(
isnull(%<finvar.flagsecondaryprev>%,''N'') = isnull(&<finvar.flagsecondaryprev>&,''N'')
and
isnull(%<finvar.flagproceeds>%,''N'') = isnull(&<finvar.flagproceeds>&,''N'')
AND
isnull(%<finvar.idfinvarstatus>%,0) = isnull(&<finvar.idfinvarstatus>&,0)
)
or
(
[select count(*) from finvardetail F 
 	join fin on F.idfin=fin.idfin
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and 
	   (fin.flag & 1) <> 0
	and (
	  isnull(
			(SELECT ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0)- 
			ISNULL(totproceedspart, 0) - 
			ISNULL(proceedsvariation, 0) 
			  from upbunderwritingtotal U where
			 U.idfin=F.idfin and
			 U.idupb=F.idupb and
			U.idunderwriting = F.idunderwriting	
			)
			,0
		)
	  <0
	)
]{I}
=0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON008','1','U','finvar','S','N','N','N','N',{ts '2013-05-21 11:04:45.380'},'sa','La previsione di cassa di una delle voci di spesa nella variazione è inferiore alle righe di mandato','N','--[(%<finvar.variationkind>%)]{I} =5 
--OR
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR
(
[select count(*) from finvardetail F 
	join fin on F.idfin=fin.idfin
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and 
	  ( (fin.flag & 1) <> 0 )
	and (
	  isnull(
			(SELECT ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0)
			   from upbunderwritingtotal U 			 
			 	where		
			 	U.idfin=F.idfin and
				 U.idupb=F.idupb and
				U.idunderwriting = F.idunderwriting	
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)+isnull(totalarrears,0)
			from underwritingexpensetotal U2 
			where 
			 U2.idfin=F.idfin and
			 U2.idupb=F.idupb and
			U2.idunderwriting = F.idunderwriting	
			and nphase = %<sys_maxexpensephase>%
			 
		  	)			
		      ,0
		)
	  <0
	)
]{I}
=0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR013','1','U','finvar','S','S','S','N','N',{ts '2013-03-07 16:09:57.910'},'sa','L''utente non è abilitato a modificare variazioni approvate  e nemmeno ad approvarle.','S','(
isnull(%<finvar.idfinvarstatus>%,0) <=4
 AND
isnull(&<finvar.idfinvarstatus>&,0) <=4
)

OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''finvarapproved''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR014','1','U','finvar','S','S','S','N','N',{ts '2013-03-07 17:40:45.017'},'sa','L''utente non è abilitato a modificare variazioni "inserite"  o "approvate"','S','(
isnull(%<finvar.idfinvarstatus>%,0) <4
 AND
isnull(&<finvar.idfinvarstatus>&,0) <4
)

OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''finvarapproved''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR015','1','U','finvar','S','S','S','N','N',{ts '2013-06-25 11:21:13.633'},'assistenza','Non è possibile modificare una variazione di bilancio inserita in un atto. E'' necessario rimuoverla prima dall''atto.','S','%<finvar.idenactment>% is null 
or 
&<finvar.idenactment>& is null
OR
 (
%<finvar.flagcredit>%=&<finvar.flagcredit>&
and
%<finvar.flagprevision>%=&<finvar.flagprevision>&
and
%<finvar.flagproceeds>%=&<finvar.flagproceeds>&
and
%<finvar.flagsecondaryprev>%=&<finvar.flagsecondaryprev>&
and
%<finvar.variationkind>%=&<finvar.variationkind>&
and
[select idenactmentstatus from 
enactment where idenactment = %<finvar.idenactment>%]{I}<> 2
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR016','1','U','finvar','S','S','S','N','N',{ts '2013-06-13 16:51:32.860'},'assistenza','L''utente non è abilitato a modificare storni approvati e nemmeno ad approvarli.','S','(
isnull(%<finvar.idfinvarstatus>%,0) <=4
 AND
isnull(&<finvar.idfinvarstatus>&,0) <=4
)

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''storniapprove''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')
or 

[select count( distinct idfin) from finvardetail where 
   yvar=%<finvar.yvar>% and nvar = %<finvar.nvar>%]{I} <> 1 

OR
 %<finvar.official>% =''S''
OR 
 %<finvar.variationkind>% <>4
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR017','1','U','finvar','S','S','S','N','N',{ts '2013-06-13 17:03:48.920'},'assistenza','L''utente non è abilitato a modificare od inserire storni.','S','(
isnull(%<finvar.idfinvarstatus>%,0) <4
 AND
isnull(&<finvar.idfinvarstatus>&,0) <4
)

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''storniapprove''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')
or 

[select count( distinct idfin) from finvardetail where 
   yvar=%<finvar.yvar>% and nvar = %<finvar.nvar>%]{I} <> 1 

OR
 %<finvar.official>% =''S''
OR 
 %<finvar.variationkind>% <>4
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BA_COMPE001','1','D','finvardetail','S','S','S','N','N',{ts '2012-10-03 10:00:11.423'},'sa','La previsione della voce %<fin.codefin>%  e UPB %<upb.codeupb>%   è NEGATIVA!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 

OR

([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}<>''S'') 
or
(
 [SELECT SUM(ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)) 
	FROM upbtotal 
	WHERE idfin = %<finvardetail.idfin>%
 ]{V} 
 - 
 ISNULL(%<finvardetail.amount>%, 0) >= 0
)
or
%<finvardetail.amount>%<0
or
([SELECT flag FROM fin
WHERE idfin = %<finvardetail.idfin>%]{I}) & 1 <> 0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BA_COMPE001','2','D','finvardetail','S','N','N','N','N',{ts '2012-10-03 10:00:25.647'},'sa','La previsione di cassa della voce %<fin.codefin>%  e UPB %<upb.codeupb>%  è NEGATIVA!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
[select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'') 
or
(	
	[SELECT SUM(ISNULL(currentsecondaryprev,0) + ISNULL(secondaryvariation, 0)) 
	FROM upbtotal 
	WHERE idfin = %<finvardetail.idfin>%
	]{V} 
	- 
	ISNULL(%<finvardetail.amount>%, 0)
      >= 0
 ) 
or
%<finvardetail.amount>%<0
OR
([SELECT flag FROM fin
WHERE idfin = %<finvardetail.idfin>%]{I}) & 1 <> 0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BA_COMPE002','1','D','finvardetail','S','S','S','N','N',{ts '2012-10-03 10:07:40.427'},'sa','La previsione della voce %<fin.codefin>%  e UPB %<upb.codeupb>%   è NEGATIVA!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}<>''S'') 
or
(
 [SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) 
	FROM upbtotal 
	WHERE idfin = %<finvardetail.idfin>%
		and idupb=%<finvardetail.idupb>%
 ]{V} 
 - 
 ISNULL(%<finvardetail.amount>%, 0) >= 0
)
or
%<finvardetail.amount>%<0
OR
([SELECT flag FROM fin
WHERE idfin = %<finvardetail.idfin>%]{I}) & 1 = 0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BA_COMPE002','2','D','finvardetail','S','N','N','N','N',{ts '2012-10-03 10:07:54.963'},'sa','La previsione di cassa della voce %<fin.codefin>%  e UPB %<upb.codeupb>%  è NEGATIVA!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
[select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'') 
or
(	
	[SELECT ISNULL(currentsecondaryprev,0) + ISNULL(secondaryvariation, 0) 
		FROM upbtotal 
		WHERE idfin = %<finvardetail.idfin>%
			and idupb=%<finvardetail.idupb>%
			]{V} 
	- 
	ISNULL(%<finvardetail.amount>%, 0)
      >= 0
 ) 
or
%<finvardetail.amount>%<0
OR
([SELECT flag FROM fin
WHERE idfin = %<finvardetail.idfin>%]{I}) & 1 = 0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA001','1','D','finvardetail','N','S','N','N','N',{ts '2012-10-03 10:14:43.523'},'sa','La previsione della voce in entrata %<fin.codefin>% e UPB %<upb.codeupb>%   è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
[(SELECT ISNULL(currentprev, 0)+isnull(previsionvariation,0) from upbtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%)]{V} 
- 
[ISNULL(%<finvardetail.amount>%, 0)] 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from upbincometotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_incomefinphase>%
	]{V}
,0)
>= 0
OR
%<finvardetail.amount>%<0
or
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S''
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}<>0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA002','1','D','finvardetail','N','S','N','N','N',{ts '2012-10-03 10:20:39.800'},'sa','La previsione della voce in spesa %<fin.codefin>% e UPB %<upb.codeupb>%   è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
[(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)
from upbtotal 
where idfin = %<finvardetail.idfin>%
	and idupb=%<finvardetail.idupb>%
)
]{V} 
- 
ISNULL(%<finvardetail.amount>%, 0) 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
>= 0 
or 
%<finvardetail.amount>%<0
or
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}<>''S''
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I} =0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA003','1','D','finvardetail','N','S','N','N','N',{ts '2013-05-21 10:45:58.883'},'sa','La previsione della voce in entrata Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>%   è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR
[(SELECT ISNULL(currentprev, 0)+isnull(previsionvariation,0) from upbunderwritingtotal 
	where idfin = %<finvardetail.idfin>%
	AND idunderwriting = %<finvardetail.idunderwriting>%
	and idupb = %<finvardetail.idupb>%)]{V} 
- 
[ISNULL(%<finvardetail.amount>%, 0)] 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from underwritingincometotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	AND idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_incomefinphase>%
	]{V}
,0)
>= 0
OR
%<finvardetail.amount>%<0
or
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S''
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}<>0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA004','1','D','finvardetail','N','S','N','N','N',{ts '2013-05-21 10:48:45.127'},'sa','La previsione della voce in spesa di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

[(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
	and idupb=%<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
)
]{V} 
- 
ISNULL(%<finvardetail.amount>%, 0) 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%
	and idunderwriting = %<finvardetail.idunderwriting>%

	]{V}
,0)
>= 0 
or 
%<finvardetail.amount>%<0
or
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}<>''S''
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I} =0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','D','finvardetail','S','S','S','N','N',{ts '2007-12-13 14:22:45.420'},'NINO','Il dettaglio della variazione di bilancio n. %<finvardetail.nvar>% / %<finvardetail.yvar>% non può essere cancellato. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE001','1','D','finvardetail','S','S','S','N','N',{ts '2012-10-03 10:21:23.790'},'sa','La previsione della voce %<fin.codefin>%  e UPB %<upb.codeupb>%   è NEGATIVA!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}<>''S'') 
or
(
 [SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) 
	FROM upbtotal 
	WHERE idfin = %<finvardetail.idfin>%
		and idupb=%<finvardetail.idupb>%
 ]{V} 
 - 
 ISNULL(%<finvardetail.amount>%, 0) >= 0
)
or
%<finvardetail.amount>%<0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE001','2','D','finvardetail','S','N','N','N','N',{ts '2012-10-03 10:21:33.977'},'sa','La previsione di cassa della voce %<fin.codefin>%  e UPB %<upb.codeupb>%  è NEGATIVA!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
[select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'') 
or
(	
	[SELECT ISNULL(currentsecondaryprev,0) + ISNULL(secondaryvariation, 0) 
		FROM upbtotal 
		WHERE idfin = %<finvardetail.idfin>%
			and idupb=%<finvardetail.idupb>%
			]{V} 
	- 
	ISNULL(%<finvardetail.amount>%, 0)
      >= 0
 ) 
or
%<finvardetail.amount>%<0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE002','1','D','finvardetail','S','N','S','N','N',{ts '2012-10-03 10:31:09.250'},'sa','La previsione di competenza della voce in entrata %<fin.codefin>% e UPB %<upb.codeupb>% è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'')
OR
[SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
	and idupb=%<finvardetail.idupb>%
]{V}
- 
[ISNULL(%<finvardetail.amount>%, 0)] 
-
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbincometotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and nphase = %<sys_incomefinphase>%
]{V}
,0)
>= 0
or
(%<finvardetail.amount>%<0)
or
[select flag & 1 from fin where 
   idfin=%<finvardetail.idfin>%]{I}<>0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE003','1','D','finvardetail','S','N','S','N','N',{ts '2012-10-03 10:38:24.283'},'sa','La previsione di competenza della voce in spesa %<fin.codefin>%  e UPB %<upb.codeupb>%  è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'')
OR
(
isnull(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb=%<finvardetail.idupb>%
]{V},0)
- 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
>= 0
)
or
%<finvardetail.amount>%<0
or 

[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE004','1','D','finvardetail','S','N','S','S','N',{ts '2012-10-03 10:40:49.140'},'sa','La previsione di competenza della voce in spesa %<fin.codefin>% e UPB %<upb.codeupb>%  è inferiore alle assegnazioni dei crediti','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(  ISNULL(
	[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')=
   ISNULL(
[select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N''))
OR
[(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) - 
ISNULL(totcreditpart, 0) - 
ISNULL(creditvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
)	
]{V} 
 >= 0
OR
(
--STO AUMENTANDO LA PREVISIONE
ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)<0
)
OR
(
--STO DIMINUENDO CREDITI
ISNULL([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)>0
)
or ((select assured from upb where idupb=%<finvardetail.idupb>%)=''S'')


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE005','1','D','finvardetail','N','S','S','N','S',{ts '2012-10-03 10:42:09.123'},'sa','La previsione della voce in spesa %<fin.codefin>% e  UPB %<upb.codeupb>%  è inferiore alle assegnazioni degli incassi','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
isnull([(SELECT isnull(currentprev,0)+
ISNULL(previsionvariation, 0) - 
ISNULL(totproceedspart, 0) - 
ISNULL(proceedsvariation, 0)
from upbtotal 
where idfin = %<finvardetail.idfin>%
	and idupb= %<finvardetail.idupb>%
)]{V},0) 
 >= 0

or
(  ISNULL(%<finvar.flagprevision>%,''S'') =
   ISNULL(%<finvar.flagproceeds>%,''S'') 
)
or
(
--STO AUMENTANDO LA PREVISIONE
ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)>0
)
OR
(
--STO DIMINUENDO INCASSI
ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)<0
)

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE006','1','D','finvardetail','S','N','S','S','N',{ts '2013-05-21 09:57:45.800'},'sa','La previsione di competenza della voce in spesa  %<finvardetailview.codefin>%, Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>%  è inferiore alle assegnazioni dei crediti','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
(  ISNULL(
	[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')=
   ISNULL(
[select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N''))
OR
[(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) - 
ISNULL(totcreditpart, 0) - 
ISNULL(creditvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
)	
]{V} 
 >= 0
OR
(
--STO AUMENTANDO LA PREVISIONE
ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)<0
)
OR
(
--STO DIMINUENDO CREDITI
ISNULL([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)>0
)
or ((select assured from upb where idupb=%<finvardetail.idupb>%)=''S'')


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE007','1','D','finvardetail','N','S','S','N','S',{ts '2013-05-21 09:58:15.130'},'sa','La previsione della voce in spesa %<finvardetailview.codefin>%, Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% è inferiore alle assegnazioni degli incassi.','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
isnull([(SELECT isnull(currentprev,0)+
ISNULL(previsionvariation, 0) - 
ISNULL(totproceedspart, 0) - 
ISNULL(proceedsvariation, 0)
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
	and idupb= %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
)]{V},0) 
 >= 0

or
(  ISNULL(%<finvar.flagprevision>%,''S'') =
   ISNULL(%<finvar.flagproceeds>%,''S'') 
)
or
(
--STO AUMENTANDO LA PREVISIONE
ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)>0
)
OR
(
--STO DIMINUENDO INCASSI
ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)<0
)

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE008','1','D','finvardetail','S','S','S','N','N',{ts '2013-05-21 10:53:02.900'},'sa','La previsione di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>%  è NEGATIVA!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR

%<finvardetail.idunderwriting>% is null
OR
([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}<>''S'') 
or
(
 [SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) 
	FROM upbunderwritingtotal 
	WHERE idfin = %<finvardetail.idfin>%
		and idupb=%<finvardetail.idupb>%
		and idunderwriting = %<finvardetail.idunderwriting>%
 ]{V} 
 - 
 ISNULL(%<finvardetail.amount>%, 0) >= 0
)
or
%<finvardetail.amount>%<0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE008','2','D','finvardetail','S','N','N','N','N',{ts '2013-05-21 10:53:09.823'},'sa','La previsione di Cassa di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>%  è NEGATIVA!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR

%<finvardetail.idunderwriting>% is null
OR
(
[select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'') 
or
(	
	[SELECT ISNULL(currentsecondaryprev,0) + ISNULL(secondaryvariation, 0) 
		FROM upbunderwritingtotal 
		WHERE idfin = %<finvardetail.idfin>%
			and idupb=%<finvardetail.idupb>%
			and idunderwriting = %<finvardetail.idunderwriting>%
			]{V} 
	- 
	ISNULL(%<finvardetail.amount>%, 0)
      >= 0
 ) 
or
%<finvardetail.amount>%<0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE009','1','D','finvardetail','S','N','S','N','N',{ts '2013-05-21 10:54:11.120'},'sa','La previsione di competenza entrata di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

(
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'')
OR
[SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and idupb=%<finvardetail.idupb>%
]{V}
- 
[ISNULL(%<finvardetail.amount>%, 0)] 
-
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingincometotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_incomefinphase>%
]{V}
,0)
>= 0
or
(%<finvardetail.amount>%<0)
or
[select flag & 1 from fin where 
   idfin=%<finvardetail.idfin>%]{I}<>0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE010','1','D','finvardetail','S','N','S','N','N',{ts '2013-05-21 10:56:08.827'},'sa','La previsione di competenza spesa di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
(
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'')
OR
(
isnull(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb=%<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
]{V},0)
- 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
>= 0
)
or
%<finvardetail.amount>%<0
or 

[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI001','1','D','finvardetail','S','N','S','S','N',{ts '2012-10-03 10:42:42.800'},'sa','La dotazione dei crediti è NEGATIVA!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
ISNULL([(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
FROM upbtotal 
WHERE idfin = %<finvardetail.idfin>%
AND idupb= %<finvardetail.idupb>%	
)]{V},0) 
- 
ISNULL(%<finvardetail.amount>%, 0) >= 0
OR
(ISNULL([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')=''N'')
OR
%<finvardetail.amount>%<0
OR
[SELECT assured FROM upb
WHERE idupb = %<finvardetail.idupb>%]{C} = ''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI002','1','D','finvardetail','S','N','S','S','N',{ts '2012-10-03 10:46:11.347'},'sa','La dotazione crediti della voce %<fin.codefin>% è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
isnull([(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
 and idupb = %<finvardetail.idupb>%
)]{V},0) 
- 
[ISNULL(%<finvardetail.amount>%, 0)] 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
 	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
>= 0
or 
isnull([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%<0
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI006','1','D','finvardetail','S','N','S','S','N',{ts '2013-05-21 09:51:22.223'},'sa','La dotazione dei crediti Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è NEGATIVA!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

ISNULL([(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
FROM upbunderwritingtotal  
WHERE idfin = %<finvardetail.idfin>%
	AND idupb= %<finvardetail.idupb>%	
	AND idunderwriting = %<finvardetail.idunderwriting>%
)]{V},0) 
- 
ISNULL(%<finvardetail.amount>%, 0) >= 0
OR
(ISNULL([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')=''N'')
OR
%<finvardetail.amount>%<0
OR
[SELECT assured FROM upb
WHERE idupb = %<finvardetail.idupb>%]{C} = ''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI007','1','D','finvardetail','S','N','S','S','N',{ts '2013-05-21 09:52:28.557'},'sa','La dotazione crediti di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

isnull([(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
and idupb = %<finvardetail.idupb>%
and idunderwriting = %<finvardetail.idunderwriting>%
)]{V},0) 
- 
[ISNULL(%<finvardetail.amount>%, 0)] 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
 	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	]{V}
,0)
>= 0
or 
isnull([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%<0
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO009','1','D','finvardetail','S','N','S','N','N',{ts '2012-10-03 10:48:11.617'},'sa','La previsione della voce in spesa %<fin.codefin>%  e UPB %<upb.codeupb>%  è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S'')
OR
(
isnull(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb=%<finvardetail.idupb>%
]{V},0)
- 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
,0)
>= 0
)
or
%<finvardetail.amount>%<0
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO010','1','D','finvardetail','N','S','N','N','N',{ts '2012-10-03 10:58:34.250'},'sa','La previsione della voce in spesa %<fin.codefin>% e  UPB %<upb.codeupb>%  è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S'')
OR
(
isnull(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb=%<finvardetail.idupb>%
]{V},0)
- 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears, 0)   
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
,0)
>= 0
)
or
%<finvardetail.amount>%<0
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I} = 0


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO011','1','D','finvardetail','S','N','S','S','N',{ts '2012-10-03 10:59:07.867'},'sa','La dotazione crediti della voce %<fin.codefin>% e  UPB %<upb.codeupb>% è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
isnull([(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
 and idupb = %<finvardetail.idupb>%
)]{V},0) 
- 
[ISNULL(%<finvardetail.amount>%, 0)] 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
 	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
,0)
>= 0
or 
isnull([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%<0
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO012','1','D','finvardetail','S','S','S','N','S',{ts '2012-10-03 11:00:40.810'},'sa','La dotazione incassi della voce %<fin.codefin>% e  UPB %<upb.codeupb>% è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
isnull([(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
 and idupb = %<finvardetail.idupb>%
)]{V},0) 
- 
[ISNULL(%<finvardetail.amount>%, 0)] 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
 	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
,0)
>= 0
or 
isnull([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%<0
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO020','1','D','finvardetail','S','N','N','N','N',{ts '2012-10-03 11:01:06.757'},'sa','La previsione della voce di spesa %<fin.codefin>% e  UPB %<upb.codeupb>% è inferiore alle righe di mandato','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}

,''S'')<>''S'')
OR
(
isnull(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	from upbtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb=%<finvardetail.idupb>%
]{V},0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and nphase = %<sys_maxexpensephase>%]{V}
,0)
-
	ISNULL(
		[SELECT ISNULL(SUM(amount), 0) 
		FROM pettycashoperation 
		WHERE idfin = %<finvardetail.idfin>% 
		and idupb=%<finvardetail.idupb>%
		AND yrestore IS NULL
		AND nrestore IS NULL]{V}
	,0)
- 
	ISNULL(%<finvardetail.amount>%, 0)
>= 0
)
or
%<finvardetail.amount>%<0
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO034','1','D','finvardetail','S','N','S','S','N',{ts '2013-06-19 12:32:57.670'},'assistenza','La dotazione crediti di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

isnull([(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
 and idupb = %<finvardetail.idupb>%
 and idunderwriting = %<finvardetail.idunderwriting>%
)]{V},0) 
- 
[ISNULL(%<finvardetail.amount>%, 0)] 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
 	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin = %<finvardetail.idfin>% 
	and PO.idupb=%<finvardetail.idupb>%
	and POU.idunderwriting = %<finvardetail.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
,0)
>= 0
or 
isnull([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%<0
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO035','1','D','finvardetail','S','S','S','N','S',{ts '2013-06-19 12:40:13.053'},'assistenza','La dotazione incassi di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
isnull([(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
 and idupb = %<finvardetail.idupb>%
 and idunderwriting = %<finvardetail.idunderwriting>%
)]{V},0) 
- 
[ISNULL(%<finvardetail.amount>%, 0)] 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) +ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
 	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%
	]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin = %<finvardetail.idfin>% 
	and PO.idupb=%<finvardetail.idupb>%
	and POU.idunderwriting = %<finvardetail.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
,0)
>= 0
or 
isnull([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%<0
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO036','1','D','finvardetail','S','N','S','N','N',{ts '2013-05-21 10:57:48.213'},'sa','La previsione della voce in spesa di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>%  è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
(ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S'')
OR
(
isnull(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb=%<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
]{V},0)
- 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin = %<finvardetail.idfin>% 
	and PO.idupb=%<finvardetail.idupb>%
	and POU.idunderwriting = %<finvardetail.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
,0)
>= 0
)
or
%<finvardetail.amount>%<0
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO037','1','D','finvardetail','N','S','N','N','N',{ts '2013-05-21 10:58:15.503'},'sa','La previsione della voce in spesa di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>%  è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
(ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S'')
OR
(
isnull(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb=%<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
]{V},0)
- 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears, 0)   
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin = %<finvardetail.idfin>% 
	and PO.idupb=%<finvardetail.idupb>%
	and POU.idunderwriting = %<finvardetail.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
,0)
>= 0
)
or
%<finvardetail.amount>%<0
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I} = 0


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO038','1','D','finvardetail','S','N','N','N','N',{ts '2013-05-21 10:59:45.083'},'sa','La previsione della voce di spesa Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è inferiore alle righe di mandato.','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR

%<finvardetail.idunderwriting>% is null
OR
(ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}

,''S'')<>''S'')
OR
(
isnull(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	from upbunderwritingtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb=%<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
]{V},0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%]{V}
,0)
-
	ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin = %<finvardetail.idfin>% 
	and PO.idupb=%<finvardetail.idupb>%
	and POU.idunderwriting = %<finvardetail.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
	,0)
- 
	ISNULL(%<finvardetail.amount>%, 0)
>= 0
)
or
%<finvardetail.amount>%<0
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS001','1','D','finvardetail','S','S','S','N','S',{ts '2012-10-03 11:17:47.220'},'sa','La dotazione degli incassi è NEGATIVA!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
[(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
 and idupb = %<finvardetail.idupb>%
)]{V} 
- 
ISNULL(%<finvardetail.amount>%,0)
>=0
OR
isnull([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')<>''S''
or
%<finvardetail.amount>%<0
OR
[SELECT assured FROM upb
WHERE idupb = %<finvardetail.idupb>%]{C} = ''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS002','1','D','finvardetail','S','S','S','N','S',{ts '2012-10-03 11:18:20.723'},'sa','La dotazione incassi della voce %<fin.codefin>% e  UPB %<upb.codeupb>% è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
isnull([(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
 and idupb = %<finvardetail.idupb>%
)]{V},0) 
- 
[ISNULL(%<finvardetail.amount>%, 0)] 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) +
	ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
 	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
>= 0
or 
isnull([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%<0
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS006','1','D','finvardetail','S','S','S','N','S',{ts '2013-05-21 10:42:03.843'},'sa','La dotazione incassi di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è NEGATIVA!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

[(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
 and idupb = %<finvardetail.idupb>%
 and idunderwriting = %<finvardetail.idunderwriting>%
)]{V} 
- 
ISNULL(%<finvardetail.amount>%,0)
>=0
OR
isnull([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')<>''S''
or
%<finvardetail.amount>%<0
OR
[SELECT assured FROM upb
WHERE idupb = %<finvardetail.idupb>%]{C} = ''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS007','1','D','finvardetail','S','S','S','N','S',{ts '2013-05-21 10:43:31.533'},'sa','La dotazione incassi di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

isnull([(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
 and idupb = %<finvardetail.idupb>%
 and idunderwriting = %<finvardetail.idunderwriting>%
)]{V},0) 
- 
[ISNULL(%<finvardetail.amount>%, 0)] 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) +
	ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
 	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%
	]{V}
,0)
>= 0
or 
isnull([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%<0
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('LE_COMPE003','1','D','finvardetail','S','N','S','N','N',{ts '2012-08-30 14:40:03.233'},'sa','La previsione di competenza della voce in spesa %<fin.codefin>% e UPB %<upb.codeupb>%  è INSUFFICIENTE!','N','(
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'')
OR
(
ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
]{V} 
,0)
+
ISNULL([SELECT SUM(finvardetail.amount) FROM finvardetail 
		  JOIN finvar 
			ON finvar.yvar= finvardetail.yvar and finvar.nvar= finvardetail.nvar
	    WHERE ISNULL(finvar.flagprevision,''S'') = ''S''
		AND finvar.idfinvarstatus = 2
		AND finvardetail.idfin = %<finvardetail.idfin>%
		AND finvardetail.idupb = %<finvardetail.idupb>%
		AND finvar.variationkind <> 5 


]{V}, 0 )
-
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
>= 0
)
or
%<finvardetail.amount>%>0
or 

[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 2)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM038','1','D','finvardetail','S','S','S','S','N',{ts '2012-10-03 11:21:36.967'},'sa','Il totale dell''accertato è inferiore al totale dell''impegnato per l''UPB scelto','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
ISNULL(
	[SELECT SUM(creditvariation) 
	FROM upbtotal 
	WHERE idupb = %<finvardetail.idupb>%]{V}
,0) 
- 
ISNULL(%<finvardetail.amount>%, 0)
+
ISNULL(
	[SELECT SUM(totalcompetency) 
	FROM upbincometotal 
	WHERE idupb = %<finvardetail.idupb>%
	AND nphase = %<sys_incomefinphase>%]{V}
,0)
- 
ISNULL(
	[SELECT SUM(totalcompetency) 
	FROM upbexpensetotal 
	WHERE idupb = %<finvardetail.idupb>%
	AND nphase = %<sys_expensefinphase>%]{V}
,0)
+
[SELECT ISNULL(previousassessment,0) - ISNULL(previousappropriation,0)
FROM upb
WHERE idupb = %<finvardetail.idupb>%]{V}
>= 0
OR 
ISNULL([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
OR
[SELECT assured FROM upb WHERE idupb=%<finvardetail.idupb>%]{C}<>''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM068','1','D','finvardetail','S','S','S','N','N',{ts '2010-11-26 11:10:01.967'},'sara','Il saldo della variazione di bilancio deve essere pari a ZERO!','N','[SELECT variationkind
FROM finvar
WHERE yvar = %<finvardetail.yvar>%
AND nvar = %<finvardetail.nvar>%]{I} NOT IN (1,4)
OR
ISNULL(
[SELECT total 
FROM finvarview
WHERE yvar = %<finvardetail.yvar>%
AND nvar = %<finvardetail.nvar>%]
{V},0) = 0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM117','1','D','finvardetail','S','S','S','N','N',{ts '2013-07-18 12:58:40.320'},'sa','In una variazione di tipo "Storno di cassa" il saldo dei dettagli sulle voci di Bilancio di Spesa deve essere pari a zero.','S','[SELECT ISNULL(moneytransfer,''N'') 
FROM    finvar
WHERE   yvar = %<finvardetail.yvar>%
AND     nvar = %<finvardetail.nvar>%
]{C} = ''N''
OR
ISNULL([SELECT SUM(amount) FROM finvardetail
JOIN    fin ON finvardetail.idfin = fin.idfin
WHERE   yvar = %<finvardetail.yvar>%
AND     nvar = %<finvardetail.nvar>%
AND     (fin.flag & 1) <> 0
]{V},0) = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC007','1','D','finvardetail','S','S','S','N','N',{ts '2012-10-10 15:02:24.733'},'sa','La previsione iniziale di bilancio non può essere modificata in quanto è stato già redatto il bilancio di previsione.','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and 
nvar=%<finvardetail.nvar>%]{I} <>5) 
OR
--Non è stato ancora eseguito il trasferimento della configurazione di bilancio 
-- per l''esercizio precedente
(
([SELECT COUNT(*) FROM accountingyear 
WHERE ((flag&0x0F) >= 3)
AND accountingyear.ayear=%<finvardetail.yvar>%
-1]{I}=0 )
 AND 
([SELECT COUNT(*) from accountingyear 
where accountingyear.ayear=%<finvardetail.yvar>%
-1]{I}>0 )
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON003','1','D','finvardetail','S','N','N','N','N',{ts '2012-10-03 11:31:29.127'},'sa','La previsione di cassa della voce di entrata %<fin.codefin>% e  UPB %<upb.codeupb>% è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
	ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
)
OR
(
	ISNULL([SELECT ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	FROM upbtotal 
	WHERE idfin = %<finvardetail.idfin>%
		and idupb=%<finvardetail.idupb>%
	]{V},0)
	- 
	ISNULL(%<finvardetail.amount>%, 0)
	- 
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM upbincometotal
		WHERE idfin = %<finvardetail.idfin>%
		and idupb=%<finvardetail.idupb>%
		AND nphase = %<sys_maxincomephase>%]{V}
	,0)
	>= 0
)
or
%<finvardetail.amount>%<0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON004','1','D','finvardetail','S','N','N','N','N',{ts '2012-10-03 11:32:41.510'},'sa','La previsione di cassa della voce di spesa %<fin.codefin>% e  UPB %<upb.codeupb>% è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
	ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') <> ''S''
)
OR
(
	[SELECT ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	FROM upbtotal 
	WHERE idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%]{V} 
	-
	ISNULL(%<finvardetail.amount>%, 0)
	- 
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM upbexpensetotal
		WHERE idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%
		AND nphase = %<sys_maxexpensephase>%]{V}
	,0)
	>= 0
)
or
%<finvardetail.amount>%<0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON005','1','D','finvardetail','S','N','N','N','S',{ts '2012-10-03 11:34:12.243'},'sa','La previsione di cassa della voce di spesa %<fin.codefin>% e  UPB %<upb.codeupb>%  è minore delle assegnazioni degli incassi','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') =
ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') 
)
or
(
[(SELECT ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) - 
ISNULL(totproceedspart, 0) - 
ISNULL(proceedsvariation, 0)
from upbtotal 
where idfin = %<finvardetail.idfin>%
	and idupb=%<finvardetail.idupb>%)
]{V} >= 0
)
OR
(
--STO AUMENTANDO LA PREVISIONE
ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)<0
)
OR
(
--STO DIMINUENDO INCASSI
ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)>0
)

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON006','1','D','finvardetail','S','N','N','N','S',{ts '2013-05-21 10:44:57.423'},'sa','La previsione di cassa della voce di spesa Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>%  è minore delle assegnazioni degli incassi.','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
(
ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') =
ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') 
)
or
(
[(SELECT ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) - 
ISNULL(totproceedspart, 0) - 
ISNULL(proceedsvariation, 0)
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
	and idupb=%<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%)
]{V} >= 0
)
OR
(
--STO AUMENTANDO LA PREVISIONE
ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)<0
)
OR
(
--STO DIMINUENDO INCASSI
ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)>0
)

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON007','1','D','finvardetail','S','N','N','N','N',{ts '2013-05-21 11:03:01.080'},'sa','La previsione di cassa della voce di entrata di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR

%<finvardetail.idunderwriting>% is null
OR
(
	ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
)
OR
(
	ISNULL([SELECT ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	FROM upbunderwritingtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%	
	and idunderwriting = %<finvardetail.idunderwriting>%
	]{V},0)
	- 
	ISNULL(%<finvardetail.amount>%, 0)
	- 
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM underwritingincometotal
		where idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%	
		and idunderwriting = %<finvardetail.idunderwriting>%
		AND nphase = %<sys_maxincomephase>%]{V}
	,0)
	>= 0
)
or
%<finvardetail.amount>%<0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON008','1','D','finvardetail','S','N','N','N','N',{ts '2013-05-21 11:04:54.740'},'sa','La previsione di cassa della voce di spesa Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
(
	ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') <> ''S''
)
OR
(
	[SELECT ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	FROM upbunderwritingtotal 
	WHERE idfin = %<finvardetail.idfin>%
		and idunderwriting = %<finvardetail.idunderwriting>%	
		and idupb = %<finvardetail.idupb>%]{V} 

	-
	ISNULL(%<finvardetail.amount>%, 0)
	- 
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM underwritingexpensetotal
		WHERE idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%
		and idunderwriting = %<finvardetail.idunderwriting>%	
		AND nphase = %<sys_maxexpensephase>%]{V}
	,0)
	>= 0
)
or
%<finvardetail.amount>%<0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR013','1','D','finvardetail','S','S','S','N','N',{ts '2013-03-07 16:10:08.127'},'sa','L''utente non è abilitato a cancellare dettagli da variazioni approvate.','S','(
ISNULL([select idfinvarstatus from finvar where  yvar=%<finvardetail.yvar>% and
  nvar=%<finvardetail.nvar>%]{I},0) <=4
)
OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''finvarapproved''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR014','1','D','finvardetail','S','S','S','N','N',{ts '2013-03-07 17:41:22.017'},'sa','L''utente non è abilitato a cancellare dettagli da variazioni inserite o approvate.','S','(
ISNULL([select idfinvarstatus from finvar where  yvar=%<finvardetail.yvar>% and
  nvar=%<finvardetail.nvar>%]{I},0) <4
)
OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''finvarapproved''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR015','1','D','finvardetail','S','S','S','N','N',{ts '2013-06-12 16:39:10.447'},'assistenza','Non è possibile cancellare dettagli da una variazione di bilancio inserita in un atto amministrativo.','S','[select idenactment from finvar where yvar= %<finvardetail.yvar>%
		and nvar=%<finvardetail.nvar>% ]{I} is null
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR016','1','D','finvardetail','S','S','S','N','N',{ts '2013-06-13 16:53:15.407'},'assistenza','L''utente non è abilitato a cancellare dettagli da storni approvati.','S','(
ISNULL([select idfinvarstatus from finvar where  yvar=%<finvardetail.yvar>% and
  nvar=%<finvardetail.nvar>%]{I},0) <=4
)
OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''storniapprove''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')
or 

[select count( distinct idfin) from finvardetail where 
   yvar=%<finvardetail.yvar>% and nvar = %<finvardetail.nvar>%]{I} <> 1 
OR
 [select official from finvar where
  yvar=%<finvardetail.yvar>% and nvar = %<finvardetail.nvar>%]{C} =''S''
OR
 [select variationkind from finvar where
  yvar=%<finvardetail.yvar>% and nvar = %<finvardetail.nvar>%]{I} <>4
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR017','1','D','finvardetail','S','S','S','N','N',{ts '2013-06-13 17:04:48.953'},'assistenza','L''utente non è abilitato a cancellare dettagli da storni inseriti.','S','(
ISNULL([select idfinvarstatus from finvar where  yvar=%<finvardetail.yvar>% and
  nvar=%<finvardetail.nvar>%]{I},0) <4
)
OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''storniapprove''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')
or 

[select count( distinct idfin) from finvardetail where 
   yvar=%<finvardetail.yvar>% and nvar = %<finvardetail.nvar>%]{I} <> 1 
OR
 [select official from finvar where
  yvar=%<finvardetail.yvar>% and nvar = %<finvardetail.nvar>%]{C} =''S''
OR
 [select variationkind from finvar where
  yvar=%<finvardetail.yvar>% and nvar = %<finvardetail.nvar>%]{I} <>4
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','finvardetail','S','S','S','N','N',{ts '2013-07-16 12:07:05.823'},'sa','Cancellazione impossibile! Esistono delle operazioni di Girofondo collegate al dettaglio variazione Es. %<finvardetail.yvar>%. / n° %<finvardetail.nvar>% %<finvardetail.description>%. ','S','[SELECT COUNT(*) FROM moneytransfer 
WHERE yvar = %<finvardetail.yvar>%
AND      nvar = %<finvardetail.nvar>%
AND 	 rownum = %<finvardetail.rownum>%
]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BA_COMPE001','1','I','finvardetail','S','S','S','N','N',{ts '2012-10-03 10:00:36.520'},'sa','La previsione della voce  %<fin.codefin>%  e UPB %<upb.codeupb>%  è NEGATIVA!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}<>''S'') 
or
( 
     [SELECT SUM(isnull(currentprev,0)+ISNULL(previsionvariation, 0)) 
     from upbtotal 
     where idfin = %<finvardetail.idfin>%
]{V} 
    >= 0  
  )
or
%<finvardetail.amount>%>0
OR
([SELECT flag FROM fin
WHERE idfin = %<finvardetail.idfin>%]{I}) & 1 <> 0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BA_COMPE001','2','I','finvardetail','S','N','N','N','N',{ts '2012-10-03 10:00:44.350'},'sa','La previsione di cassa della voce  %<fin.codefin>% e UPB %<upb.codeupb>%   è NEGATIVA!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'') 
or
 (
	[SELECT SUM(ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0))
		from upbtotal 
		where idfin = %<finvardetail.idfin>%]{V} 
	
	>= 0
 ) 
or
%<finvardetail.amount>%>0
OR
([SELECT flag FROM fin
WHERE idfin = %<finvardetail.idfin>%]{I}) & 1 <> 0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BA_COMPE002','1','I','finvardetail','S','S','S','N','N',{ts '2012-10-03 10:08:03.040'},'sa','La previsione della voce  %<fin.codefin>%  e UPB %<upb.codeupb>%  è NEGATIVA!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}<>''S'') 
or
( 
     [SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
     from upbtotal 
     where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
]{V} 
    >= 0  
  )
or
%<finvardetail.amount>%>0
OR
([SELECT flag FROM fin
WHERE idfin = %<finvardetail.idfin>%]{I}) & 1 = 0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BA_COMPE002','2','I','finvardetail','S','N','N','N','N',{ts '2012-10-03 10:08:11.117'},'sa','La previsione di cassa della voce  %<fin.codefin>% e UPB %<upb.codeupb>%   è NEGATIVA!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'') 
or
 (
	[SELECT ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
		from upbtotal 
		where idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%]{V} 
	
	>= 0
 ) 
or
%<finvardetail.amount>%>0
OR
([SELECT flag FROM fin
WHERE idfin = %<finvardetail.idfin>%]{I}) & 1 = 0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA001','1','I','finvardetail','N','S','N','N','N',{ts '2012-10-03 10:14:51.567'},'sa','La previsione della voce in entrata %<fin.codefin>%  e  UPB %<upb.codeupb>%   è INSUFFICIENTE!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
ISNULL(
	[SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from upbincometotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_incomefinphase>%
	]{V}
,0)
>= 0
or
%<finvardetail.amount>%>0
or
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C} <>''S''
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}<>0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA002','1','I','finvardetail','N','S','N','N','N',{ts '2012-10-03 10:20:48.720'},'sa','La previsione della voce in spesa %<fin.codefin>% e UPB %<upb.codeupb>% è INSUFFICIENTE!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
ISNULL(
	[SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal where idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
>= 0 
or
%<finvardetail.amount>%>0
or
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}<>''S''
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I} =0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA003','1','I','finvardetail','N','S','N','N','N',{ts '2013-05-21 10:46:04.427'},'sa','La previsione della voce in entrata Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>%   è INSUFFICIENTE!','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR
ISNULL(
	[SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = %<finvardetail.idfin>%
		AND idunderwriting = %<finvardetail.idunderwriting>%
		and idupb = %<finvardetail.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from underwritingincometotal 
	where idfin = %<finvardetail.idfin>% 
	AND idunderwriting = %<finvardetail.idunderwriting>%
	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_incomefinphase>%
	]{V}
,0)
>= 0
or
%<finvardetail.amount>%>0
or
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C} <>''S''
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}<>0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA004','1','I','finvardetail','N','S','N','N','N',{ts '2013-05-21 10:48:53.227'},'sa','La previsione della voce in spesa di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

ISNULL(
	[SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal where idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%

]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
>= 0 
or
%<finvardetail.amount>%>0
or
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}<>''S''
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I} =0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','I','finvardetail','S','S','S','N','N',{ts '2007-12-13 14:22:50.123'},'NINO','Il dettaglio della variazione di bilancio n. %<finvardetail.nvar>% / %<finvardetail.yvar>% non può essere inserito. Esercizio  %<esercizio>% chiuso','N','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE001','1','I','finvardetail','S','S','S','N','N',{ts '2012-10-03 10:21:41.327'},'sa','La previsione della voce  %<fin.codefin>%  e UPB %<upb.codeupb>%  è NEGATIVA!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}<>''S'') 
or
( 
     [SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
     from upbtotal 
     where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
]{V} 
    >= 0  
  )
or
%<finvardetail.amount>%>0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE001','2','I','finvardetail','S','N','N','N','N',{ts '2012-10-03 10:21:49.117'},'sa','La previsione di cassa della voce  %<fin.codefin>% e UPB %<upb.codeupb>%   è NEGATIVA!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'') 
or
 (
	[SELECT ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
		from upbtotal 
		where idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%]{V} 
	
	>= 0
 ) 
or
%<finvardetail.amount>%>0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE002','1','I','finvardetail','S','N','S','N','N',{ts '2012-10-03 10:31:16.380'},'sa','La previsione di competenza della voce in entrata %<fin.codefin>% e  UPB %<upb.codeupb>% è INSUFFICIENTE!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'')
OR
ISNULL(
 [SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbincometotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_incomefinphase>%]{V}
,0)
>= 0
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}<>0


or
%<finvardetail.amount>%>0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE003','1','I','finvardetail','S','N','S','N','N',{ts '2012-10-03 10:38:32.173'},'sa','La previsione di competenza della voce in spesa %<fin.codefin>% e UPB %<upb.codeupb>%  è INSUFFICIENTE!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'')
OR
(
ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
]{V} 
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
>= 0
)
or
%<finvardetail.amount>%>0
or 

[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE004','1','I','finvardetail','S','N','S','S','N',{ts '2012-10-03 10:40:55.537'},'sa','La previsione di competenza della voce in spesa %<fin.codefin>% e  UPB %<upb.codeupb>%  è inferiore alle assegnazioni dei crediti','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(  ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')=
   ISNULL(
[select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')
)
OR
[(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) - 
ISNULL(totcreditpart, 0) - 
ISNULL(creditvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
)	
]{V} 
 >= 0
or
--STO AUMENTANDO LA PREVISIONE
(
ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)>0
)
OR
(
--STO DIMINUENDO CREDITI
ISNULL([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)<0
)
or ((select assured from upb where idupb=%<finvardetail.idupb>%)=''S'')

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE005','1','I','finvardetail','N','S','S','N','S',{ts '2012-10-03 10:42:16.013'},'sa','La previsione della voce in spesa %<fin.codefin>% e  UPB %<upb.codeupb>%   è inferiore alle assegnazioni degli incassi','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(  ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') =
   ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') 
)
or
isnull([(SELECT ISNULL(currentprev,0)+
ISNULL(previsionvariation, 0) -
ISNULL(totproceedspart, 0) -
ISNULL(proceedsvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
)]{V},0) 
>= 0
OR
(
--STO AUMENTANDO LA PREVISIONE
ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)>0
)
OR
(
--STO DIMINUENDO INCASSI
ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)<0
)
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE006','1','I','finvardetail','S','N','S','S','N',{ts '2013-05-21 09:57:51.067'},'sa','La previsione di competenza della voce in spesa  %<finvardetailview.codefin>%, Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>%  è inferiore alle assegnazioni dei crediti','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
(  ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')=
   ISNULL(
[select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')
)
OR
[(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) - 
ISNULL(totcreditpart, 0) - 
ISNULL(creditvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%

)	
]{V} 
 >= 0
or
--STO AUMENTANDO LA PREVISIONE
(
ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)>0
)
OR
(
--STO DIMINUENDO CREDITI
ISNULL([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)<0
)
or ((select assured from upb where idupb=%<finvardetail.idupb>%)=''S'')

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE007','1','I','finvardetail','N','S','S','N','S',{ts '2013-05-21 09:58:20.937'},'sa','La previsione della voce in spesa %<finvardetailview.codefin>%, Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% è inferiore alle assegnazioni degli incassi.','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
(  ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') =
   ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') 
)
or
isnull([(SELECT ISNULL(currentprev,0)+
ISNULL(previsionvariation, 0) -
ISNULL(totproceedspart, 0) -
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
)]{V},0) 
>= 0
OR
(
--STO AUMENTANDO LA PREVISIONE
ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)>0
)
OR
(
--STO DIMINUENDO INCASSI
ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)<0
)
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE008','1','I','finvardetail','S','S','S','N','N',{ts '2013-05-21 10:53:16.767'},'sa','La previsione di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>%  è NEGATIVA!','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}<>''S'') 
or
( 
     [SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
     from upbunderwritingtotal 
     where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
]{V} 
    >= 0  
  )
or
%<finvardetail.amount>%>0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE008','2','I','finvardetail','S','N','N','N','N',{ts '2013-05-21 10:53:23.640'},'sa','La previsione di Cassa di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>%  è NEGATIVA!','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

(
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'') 
or
 (
	[SELECT ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
		from upbunderwritingtotal 
		where idfin = %<finvardetail.idfin>%
		and idunderwriting = %<finvardetail.idunderwriting>%
		and idupb = %<finvardetail.idupb>%]{V} 
	>= 0
 ) 
or
%<finvardetail.amount>%>0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE009','1','I','finvardetail','S','N','S','N','N',{ts '2013-05-21 10:54:19.347'},'sa','La previsione di competenza entrata di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

(
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'')
OR
ISNULL(
 [SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%	
	and idunderwriting = %<finvardetail.idunderwriting>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingincometotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_incomefinphase>%]{V}
,0)
>= 0
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}<>0


or
%<finvardetail.amount>%>0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE010','1','I','finvardetail','S','N','S','N','N',{ts '2013-05-21 10:56:15.800'},'sa','La previsione di competenza spesa di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
(
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'')
OR
(
ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
]{V} 
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
>= 0
)
or
%<finvardetail.amount>%>0
or 

[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI001','1','I','finvardetail','S','N','S','S','N',{ts '2012-10-03 10:42:48.670'},'sa','La dotazione dei crediti è NEGATIVA!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
isnull([(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>% and
	idupb= %<finvardetail.idupb>%	
)]{V},0) 
>= 0
or
(isnull([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')=''N'')
or
%<finvardetail.amount>%>0
OR
[SELECT assured FROM upb
WHERE idupb = %<finvardetail.idupb>%]{C} = ''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI002','1','I','finvardetail','S','N','S','S','N',{ts '2012-10-03 10:46:20.707'},'sa','La dotazione crediti della voce %<fin.codefin>% e  UPB %<upb.codeupb>% è INSUFFICIENTE!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
isnull([(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
	and	idupb = %<finvardetail.idupb>%
)
]{V} ,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and	idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
>= 0
or 
isnull([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%>0
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI006','1','I','finvardetail','S','N','S','S','N',{ts '2013-05-21 09:51:44.347'},'sa','La dotazione dei crediti Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è NEGATIVA!','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

isnull([(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbunderwritingtotal  
where idfin = %<finvardetail.idfin>%
	and idupb= %<finvardetail.idupb>%	
	and idunderwriting = %<finvardetail.idunderwriting>%

)]{V},0) 
>= 0
or
(isnull([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')=''N'')
or
%<finvardetail.amount>%>0
OR
[SELECT assured FROM upb
WHERE idupb = %<finvardetail.idupb>%]{C} = ''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI007','1','I','finvardetail','S','N','S','S','N',{ts '2013-05-21 09:52:35.273'},'sa','La dotazione crediti di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

isnull([(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
	and	idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
)
]{V} ,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and	idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
>= 0
or 
isnull([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%>0
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO009','1','I','finvardetail','S','N','S','N','N',{ts '2012-10-03 10:48:18.510'},'sa','La previsione della voce in spesa %<fin.codefin>% e  UPB %<upb.codeupb>%  è INSUFFICIENTE!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S'')
OR
(
ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
]{V} 
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
-
ISNULL(
	[(SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL)]{V}
,0)

>= 0
)
or
%<finvardetail.amount>%>0
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO010','1','I','finvardetail','N','S','N','N','N',{ts '2012-10-03 10:58:40.840'},'sa','La previsione della voce in spesa %<fin.codefin>% e  UPB %<upb.codeupb>% è INSUFFICIENTE!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S'')
OR
(
ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
]{V} 
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0)   
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
-
ISNULL(
	[(SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL)]{V}
,0)

>= 0
)
or
%<finvardetail.amount>%>0
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}
	=0


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO011','1','I','finvardetail','S','N','S','S','N',{ts '2012-10-03 10:59:14.227'},'sa','La dotazione crediti della voce %<fin.codefin>% e  UPB %<upb.codeupb>% è INSUFFICIENTE!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
isnull([(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
	and	idupb = %<finvardetail.idupb>%
)
]{V} ,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and	idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
,0)

>= 0
or 
isnull([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%>0
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO012','1','I','finvardetail','S','S','S','N','S',{ts '2012-10-03 11:00:46.460'},'sa','La dotazione incassi della voce %<fin.codefin>% e UPB %<upb.codeupb>%  è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
isnull([(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
and idupb = %<finvardetail.idupb>%
)
]{V} ,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	+ ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and	idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
,0)
>= 0
or 
isnull([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%>0
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO020','1','I','finvardetail','S','N','N','N','N',{ts '2012-10-03 11:01:12.580'},'sa','La previsione della voce di spesa %<fin.codefin>% e  UPB %<upb.codeupb>%  è inferiore alle righe di mandato','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S'')
OR
(
isnull(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	from upbtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb=%<finvardetail.idupb>%
]{V},0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and nphase = %<sys_maxexpensephase>%]{V}
,0)
-
	ISNULL(
		[SELECT ISNULL(SUM(amount), 0) 
		FROM pettycashoperation 
		WHERE idfin = %<finvardetail.idfin>% 
		and idupb=%<finvardetail.idupb>%
		AND yrestore IS NULL
		AND nrestore IS NULL]{V}
	,0)
	
>= 0
)
or
%<finvardetail.amount>%>0
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO034','1','I','finvardetail','S','N','S','S','N',{ts '2013-06-19 12:38:23.553'},'assistenza','La dotazione crediti di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

isnull([(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
)
]{V} ,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin = %<finvardetail.idfin>% 
	and PO.idupb=%<finvardetail.idupb>%
	and POU.idunderwriting = %<finvardetail.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
,0)

>= 0
or 
isnull([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%>0
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO035','1','I','finvardetail','S','S','S','N','S',{ts '2013-06-19 12:40:20.667'},'assistenza','La dotazione incassi di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

isnull([(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
)
]{V} ,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) +ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%
	]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin = %<finvardetail.idfin>% 
	and PO.idupb=%<finvardetail.idupb>%
	and POU.idunderwriting = %<finvardetail.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
,0)

>= 0
or 
isnull([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%>0
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO036','1','I','finvardetail','S','N','S','N','N',{ts '2013-05-21 10:57:53.647'},'sa','La previsione della voce in spesa di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>%  è INSUFFICIENTE!','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
(ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S'')
OR
(
ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
]{V} 
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
-
ISNULL(
	[(SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin = %<finvardetail.idfin>% 
	and PO.idupb=%<finvardetail.idupb>%
	and POU.idunderwriting = %<finvardetail.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL)]{V}
,0)

>= 0
)
or
%<finvardetail.amount>%>0
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO037','1','I','finvardetail','N','S','N','N','N',{ts '2013-05-21 10:58:21.863'},'sa','La previsione della voce in spesa di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>%  è INSUFFICIENTE!','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
(ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S'')
OR
(
ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb=%<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
]{V} 
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0)   
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin = %<finvardetail.idfin>% 
	and PO.idupb=%<finvardetail.idupb>%
	and POU.idunderwriting = %<finvardetail.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
,0)

>= 0
)
or
%<finvardetail.amount>%>0
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}
	=0


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO038','1','I','finvardetail','S','N','N','N','N',{ts '2013-05-21 10:59:51.867'},'sa','La previsione della voce di spesa Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è inferiore alle righe di mandato','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR

%<finvardetail.idunderwriting>% is null
OR
(ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S'')
OR
(
isnull(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	from upbunderwritingtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb=%<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
]{V},0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%]{V}
,0)
-
	ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin = %<finvardetail.idfin>% 
	and PO.idupb=%<finvardetail.idupb>%
	and POU.idunderwriting = %<finvardetail.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
	,0)
	
>= 0
)
or
%<finvardetail.amount>%>0
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS001','1','I','finvardetail','S','S','S','N','S',{ts '2012-10-03 11:17:52.973'},'sa','La dotazione degli incassi è NEGATIVA!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
isnull([(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>% and
	idupb= %<finvardetail.idupb>%	
)]{V},0) 
 >= 0
or
(isnull([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')=''N'')
or
%<finvardetail.amount>%>0
OR
[SELECT assured FROM upb
WHERE idupb = %<finvardetail.idupb>%]{C} = ''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS002','1','I','finvardetail','S','S','S','N','S',{ts '2012-10-03 11:18:26.300'},'sa','La dotazione incassi della voce %<fin.codefin>% e UPB %<upb.codeupb>% è INSUFFICIENTE!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
isnull([(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
and idupb = %<finvardetail.idupb>%
)
]{V} ,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	+ ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and	idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
>= 0
or 
isnull([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%>0
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS006','1','I','finvardetail','S','S','S','N','S',{ts '2013-05-21 10:42:10.567'},'sa','La dotazione incassi di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è NEGATIVA!','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

isnull([(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>% and
	idupb= %<finvardetail.idupb>%	
       and idunderwriting = %<finvardetail.idunderwriting>%

)]{V},0) 
 >= 0
or
(isnull([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')=''N'')
or
%<finvardetail.amount>%>0
OR
[SELECT assured FROM upb
WHERE idupb = %<finvardetail.idupb>%]{C} = ''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS007','1','I','finvardetail','S','S','S','N','S',{ts '2013-05-21 10:43:37.783'},'sa','La dotazione incassi di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

isnull([(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
and idupb = %<finvardetail.idupb>%
and idunderwriting = %<finvardetail.idunderwriting>%
)
]{V} ,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	+ ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%
	]{V}
,0)
>= 0
or 
isnull([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%>0
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('LE_COMPE003','1','I','finvardetail','S','N','S','N','N',{ts '2012-08-30 14:40:15.360'},'sa','La previsione di competenza della voce in spesa %<fin.codefin>% e UPB %<upb.codeupb>%  è INSUFFICIENTE!','N','(
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'')
OR
(
ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
]{V} 
,0)

+
ISNULL([SELECT SUM(finvardetail.amount) FROM finvardetail 
		  JOIN finvar 
			ON finvar.yvar= finvardetail.yvar and finvar.nvar= finvardetail.nvar
	    WHERE ISNULL(finvar.flagprevision,''S'') = ''S''
		AND finvar.idfinvarstatus = 2
		AND finvardetail.idfin = %<finvardetail.idfin>%
		AND finvardetail.idupb = %<finvardetail.idupb>%
		AND finvar.variationkind <> 5 


]{V}, 0 )

- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
>= 0
)
or
%<finvardetail.amount>%>0
or 

[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 2)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ019','1','I','finvardetail','S','S','S','N','N',{ts '2012-08-30 14:44:41.627'},'sa','Attenzione con la presente variazione il dettaglio della CARD associato potrebbe assumere importo negativo.','N','%<finvardetail.idlcard>% is null
OR
ISNULL(  [SELECT SUM(amount) FROM lcardtotal  
WHERE idlcard = %<finvardetail.idlcard>% ]{V}  ,0)   > = 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM038','1','I','finvardetail','S','S','S','S','N',{ts '2012-10-03 11:25:29.330'},'sa','Il totale dell''accertato è inferiore al totale dell''impegnato per l''UPB scelto','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
ISNULL(
	[SELECT SUM(creditvariation)
	FROM upbtotal 
	WHERE idupb = %<finvardetail.idupb>%]{V}
,0) 
+
ISNULL(
	[SELECT SUM(totalcompetency) 
	FROM upbincometotal 
	WHERE idupb = %<finvardetail.idupb>%
	AND nphase = %<sys_incomefinphase>%]{V}
,0)
- 
ISNULL(
	[SELECT SUM(totalcompetency) 
	FROM upbexpensetotal 
	WHERE idupb = %<finvardetail.idupb>%
	AND nphase = %<sys_expensefinphase>%]{V}
,0)
+
[SELECT ISNULL(previousassessment,0) - ISNULL(previousappropriation,0)
FROM upb
WHERE idupb = %<finvardetail.idupb>%]{V}
>= 0
OR 
ISNULL([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
OR
[SELECT assured FROM upb WHERE idupb=%<finvardetail.idupb>%]{C}<>''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM068','1','I','finvardetail','S','S','S','N','N',{ts '2010-11-26 11:10:07.967'},'sara','Il saldo della variazione di bilancio deve essere pari a ZERO!','N','[SELECT variationkind
FROM finvar
WHERE yvar = %<finvardetail.yvar>%
AND nvar = %<finvardetail.nvar>%]{I} NOT IN (1,4)
OR
ISNULL(
[SELECT total 
FROM finvarview
WHERE yvar = %<finvardetail.yvar>%
AND nvar = %<finvardetail.nvar>%]
{V},0) = 0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM117','1','I','finvardetail','S','S','S','N','N',{ts '2013-07-18 12:52:47.350'},'sa','In una variazione di tipo "Storno di cassa" il saldo dei dettagli sulle voci di Bilancio di Spesa deve essere pari a zero.','N','[SELECT ISNULL(moneytransfer,''N'') 
FROM    finvar
WHERE   yvar = %<finvardetail.yvar>%
AND     nvar = %<finvardetail.nvar>%
]{C} = ''N''
OR
ISNULL([SELECT SUM(amount) FROM finvardetail
JOIN    fin ON finvardetail.idfin = fin.idfin
WHERE   yvar = %<finvardetail.yvar>%
AND     nvar = %<finvardetail.nvar>%
AND     (fin.flag & 1) <> 0
]{V},0) = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC007','1','I','finvardetail','S','S','S','N','N',{ts '2012-10-10 15:02:33.770'},'sa','La previsione iniziale di bilancio non può essere modificata in quanto è stato già redatto il bilancio di previsione.','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and 
nvar=%<finvardetail.nvar>%]{I} <>5) 
OR
--Non è stato ancora eseguito il trasferimento della configurazione di bilancio 
-- per l''esercizio precedente
(
([SELECT COUNT(*) FROM accountingyear 
WHERE ((flag&0x0F) >= 3)
AND accountingyear.ayear=%<finvardetail.yvar>%
-1]{I}=0 )
 AND 
([SELECT COUNT(*) from accountingyear 
where accountingyear.ayear=%<finvardetail.yvar>%
-1]{I}>0 )
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON003','1','I','finvardetail','S','N','N','N','N',{ts '2012-10-03 11:31:36.270'},'sa','La previsione di cassa della voce di entrata %<fin.codefin>% e  UPB %<upb.codeupb>% è INSUFFICIENTE!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
	ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
)
OR
(
	
	isnull([SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	FROM upbtotal 
	WHERE idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%
	]{V},0) 
	
	- 
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM upbincometotal
		WHERE idfin = %<finvardetail.idfin>%
			and idupb = %<finvardetail.idupb>%
			AND nphase = %<sys_maxincomephase>%]{V}
	,0)
	>= 0
)
or
%<finvardetail.amount>%>0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON004','1','I','finvardetail','S','N','N','N','N',{ts '2012-10-03 11:32:48.533'},'sa','La previsione di cassa della voce di spesa %<fin.codefin>% e  UPB %<upb.codeupb>%  è INSUFFICIENTE!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
	ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') <> ''S''
)
OR
(
	ISNULL([SELECT ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	FROM upbtotal 
	WHERE idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%
	]{V} 
	,0)
	
	- 
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM upbexpensetotal
		WHERE idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%
		AND nphase =%<sys_maxexpensephase>%]{V}
	,0)
	>= 0
)
or
%<finvardetail.amount>%>0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON005','1','I','finvardetail','S','N','N','N','S',{ts '2012-10-03 11:34:18.000'},'sa','La previsione di cassa della voce di spesa %<fin.codefin>% e  UPB %<upb.codeupb>%  è minore delle assegnazioni degli incassi','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR 
(
	ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') =
	ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')
 ) 
or
(
[(SELECT isnull(currentsecondaryprev,0)+ ISNULL(secondaryvariation, 0) -
ISNULL(totproceedspart, 0) -
ISNULL(proceedsvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
)]{V} 
 >= 0
)
OR
(
--STO AUMENTANDO LA PREVISIONE
ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)>0
)
OR
(
--STO DIMINUENDO INCASSI
ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)<0
)
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON006','1','I','finvardetail','S','N','N','N','S',{ts '2013-05-21 10:45:03.923'},'sa','La previsione di cassa della voce di spesa Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>%  è minore delle assegnazioni degli incassi.','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR 
%<finvardetail.idunderwriting>% is null
OR
(
	ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') =
	ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')
 ) 
or
(
[(SELECT isnull(currentsecondaryprev,0)+ ISNULL(secondaryvariation, 0) -
ISNULL(totproceedspart, 0) -
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
)]{V} 
 >= 0
)
OR
(
--STO AUMENTANDO LA PREVISIONE
ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)>0
)
OR
(
--STO DIMINUENDO INCASSI
ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
ISNULL(%<finvardetail.amount>%, 0)<0
)
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON007','1','I','finvardetail','S','N','N','N','N',{ts '2013-05-21 11:03:06.897'},'sa','La previsione di cassa della voce di entrata di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR

%<finvardetail.idunderwriting>% is null
OR
(
	ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
)
OR
(
	
	isnull([SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	FROM upbunderwritingtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%	
	and idunderwriting = %<finvardetail.idunderwriting>%
	]{V},0) 
	
	- 
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM underwritingincometotal
		where idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%	
		and idunderwriting = %<finvardetail.idunderwriting>%
			AND nphase = %<sys_maxincomephase>%]{V}
	,0)
	>= 0
)
or
%<finvardetail.amount>%>0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON008','1','I','finvardetail','S','N','N','N','N',{ts '2013-05-21 11:05:00.473'},'sa','La previsione di cassa della voce di spesa Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
(
	ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') <> ''S''
)
OR
(
	ISNULL([SELECT ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	FROM upbunderwritingtotal 
	WHERE idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%
		and idunderwriting = %<finvardetail.idunderwriting>%	
	]{V} 
	,0)
	
	- 
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM underwritingexpensetotal
		WHERE idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%
		and idunderwriting = %<finvardetail.idunderwriting>%	
		AND nphase =%<sys_maxexpensephase>%]{V}
	,0)
	>= 0
)
or
%<finvardetail.amount>%>0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR013','1','I','finvardetail','S','S','S','N','N',{ts '2013-03-07 16:10:16.673'},'sa','L''utente non è abilitato a modificare variazioni approvate.','N','(
ISNULL([select idfinvarstatus from finvar where  yvar=%<finvardetail.yvar>% and
  nvar=%<finvardetail.nvar>%]{I},0) <=4
)
OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''finvarapproved''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
or 
(isnull(%<sys_idflowchart>%,'''')='''')')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR014','1','I','finvardetail','S','S','S','N','N',{ts '2013-03-07 17:41:50.127'},'sa','L''utente non è abilitato a modificare variazioni inserite o approvate.','N','(
ISNULL([select idfinvarstatus from finvar where  yvar=%<finvardetail.yvar>% and
  nvar=%<finvardetail.nvar>%]{I},0) <4
)
OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''finvarapproved''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
or 
(isnull(%<sys_idflowchart>%,'''')='''')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR015','1','I','finvardetail','S','S','S','N','N',{ts '2013-06-12 16:38:05.260'},'assistenza','Non è possibile aggiungere dettagli ad una variazione di bilancio inserita in un atto amministrativo.','N','[select idenactment from finvar where yvar= %<finvardetail.yvar>%
		and nvar=%<finvardetail.nvar>% ]{I} is null
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR016','1','I','finvardetail','S','S','S','N','N',{ts '2013-06-13 16:54:22.313'},'assistenza','L''utente non è abilitato a modificare variazioni approvate.','N','(
ISNULL([select idfinvarstatus from finvar where  yvar=%<finvardetail.yvar>% and
  nvar=%<finvardetail.nvar>%]{I},0) <=4
)
OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''storniapprove''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')
or 

[select count( distinct idfin) from finvardetail where 
   yvar=%<finvardetail.yvar>% and nvar = %<finvardetail.nvar>%]{I} <> 1 
OR
 [select official from finvar where
  yvar=%<finvardetail.yvar>% and nvar = %<finvardetail.nvar>%]{C} =''S''
OR
 [select variationkind from finvar where
  yvar=%<finvardetail.yvar>% and nvar = %<finvardetail.nvar>%]{I} <>4
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR017','1','I','finvardetail','S','S','S','N','N',{ts '2013-06-13 17:05:53.483'},'assistenza','L''utente non è abilitato a modificare storni inseriti.','N','(
ISNULL([select idfinvarstatus from finvar where  yvar=%<finvardetail.yvar>% and
  nvar=%<finvardetail.nvar>%]{I},0) <4
)
OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''storniapprove''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')
or 

[select count( distinct idfin) from finvardetail where 
   yvar=%<finvardetail.yvar>% and nvar = %<finvardetail.nvar>%]{I} <> 1 
OR
 [select official from finvar where
  yvar=%<finvardetail.yvar>% and nvar = %<finvardetail.nvar>%]{C} =''S''
OR
 [select variationkind from finvar where
  yvar=%<finvardetail.yvar>% and nvar = %<finvardetail.nvar>%]{I} <>4
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BA_COMPE001','1','U','finvardetail','S','S','S','N','N',{ts '2012-10-03 10:00:52.863'},'sa','La previsione della voce  %<fin.codefin>% e UPB %<upb.codeupb>%   è NEGATIVA!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'') 
or
(
[SELECT SUM(isnull(currentprev,0)+ISNULL(previsionvariation, 0))
from upbtotal 
where idfin = %<finvardetail.idfin>%
]{V} 
>= 0
) 
or
%<finvardetail.amount>%>&<finvardetail.amount>&
OR
([SELECT flag FROM fin
WHERE idfin = %<finvardetail.idfin>%]{I}) & 1 <> 0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BA_COMPE001','2','U','finvardetail','S','N','N','N','N',{ts '2012-10-03 10:01:03.050'},'sa','La previsione di cassa della voce %<finvardetailview.finpart>% %<fin.codefin>% è NEGATIVA!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
[select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'') 
or
(
	[SELECT SUM(isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0))
		from upbtotal
		where idfin = %<finvardetail.idfin>%
]{V} 
>= 0
 ) 
or
%<finvardetail.amount>%>&<finvardetail.amount>&
OR
([SELECT flag FROM fin
WHERE idfin = %<finvardetail.idfin>%]{I}) & 1 <> 0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BA_COMPE002','1','U','finvardetail','S','S','S','N','N',{ts '2012-10-03 10:08:18.003'},'sa','La previsione della voce  %<fin.codefin>% e UPB %<upb.codeupb>%   è NEGATIVA!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'') 
or
(
[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
]{V} 
>= 0
) 
or
%<finvardetail.amount>%>&<finvardetail.amount>&
OR
([SELECT flag FROM fin
WHERE idfin = %<finvardetail.idfin>%]{I}) & 1 = 0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BA_COMPE002','2','U','finvardetail','S','N','N','N','N',{ts '2012-10-03 10:08:25.770'},'sa','La previsione di cassa della voce %<finvardetailview.finpart>% %<fin.codefin>% è NEGATIVA!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
[select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'') 
or
(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
		from upbtotal
		where idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%
]{V} 
>= 0
 ) 
or
%<finvardetail.amount>%>&<finvardetail.amount>&
OR
([SELECT flag FROM fin
WHERE idfin = %<finvardetail.idfin>%]{I}) & 1 = 0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA001','1','U','finvardetail','N','S','N','N','N',{ts '2012-10-03 10:14:59.230'},'sa','La previsione della voce in entrata %<fin.codefin>% e  UPB %<upb.codeupb>%   è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
[(SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
)]{V} 
- 
ISNULL(&<finvardetail.amount>&, 0) 
+ 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from upbincometotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_incomefinphase>%
	]{V}
,0)
>= 0
)
or
(%<finvardetail.amount>%>&<finvardetail.amount>&)
or
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}<>''S''
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}<>0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA002','1','U','finvardetail','N','S','N','N','N',{ts '2012-10-03 10:20:59.947'},'sa','La previsione della voce in spesa %<fin.codefin>% e  UPB %<upb.codeupb>%   è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
[(SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
)]{V} 
- 
ISNULL(&<finvardetail.amount>&, 0)
+ 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
>= 0 
or
%<finvardetail.amount>%>&<finvardetail.amount>&
or
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}<>''S''
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I} =0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA003','1','U','finvardetail','N','S','N','N','N',{ts '2013-05-21 10:46:09.683'},'sa','La previsione della voce in entrata Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>%   è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
([select count(*) from finvardetail F 
	where F.yvar= %<finvar.yvar>% and F.nvar=%<finvar.nvar>%
	and F.idunderwriting  is not null]{I}=0)
OR
(
[(SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	AND idunderwriting = %<finvardetail.idunderwriting>%
)]{V} 
- 
ISNULL(&<finvardetail.amount>&, 0) 
+ 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from underwritingincometotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	AND idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_incomefinphase>%
	]{V}
,0)
>= 0
)
or
(%<finvardetail.amount>%>&<finvardetail.amount>&)
or
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}<>''S''
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}<>0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA004','1','U','finvardetail','N','S','N','N','N',{ts '2013-05-21 10:49:03.800'},'sa','La previsione della voce in spesa di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

[(SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
)]{V} 
- 
ISNULL(&<finvardetail.amount>&, 0)
+ 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	]{V}
,0)
>= 0 
or
%<finvardetail.amount>%>&<finvardetail.amount>&
or
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}<>''S''
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I} =0
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','U','finvardetail','S','S','S','N','N',{ts '2007-12-13 14:22:54.857'},'NINO','Il dettaglio della variazione di bilancio n. %<finvardetail.nvar>% / %<finvardetail.yvar>% non può essere modificato. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE001','1','U','finvardetail','S','S','S','N','N',{ts '2012-10-03 10:21:56.853'},'sa','La previsione della voce  %<fin.codefin>% e UPB %<upb.codeupb>%   è NEGATIVA!','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'') 
or
(
[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
]{V} 
>= 0
) 
or
%<finvardetail.amount>%>&<finvardetail.amount>&
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE001','2','U','finvardetail','S','N','N','N','N',{ts '2012-10-03 10:22:04.697'},'sa','La previsione di cassa della voce %<finvardetailview.finpart>% %<fin.codefin>% è NEGATIVA!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
[select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'') 
or
(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
		from upbtotal
		where idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%
]{V} 
>= 0
 ) 
or
%<finvardetail.amount>%>&<finvardetail.amount>&
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE002','1','U','finvardetail','S','N','S','N','N',{ts '2012-10-03 10:31:23.970'},'sa','La previsione di competenza della voce in entrata %<fin.codefin>% e  UPB %<upb.codeupb>%  è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'')
OR
ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
]{V} 
,0)
- 
ISNULL(&<finvardetail.amount>&, 0) 
+ 
ISNULL(%<finvardetail.amount>%, 0) 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbincometotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_incomefinphase>%]{V}
,0)
>= 0

OR
%<finvardetail.amount>%>&<finvardetail.amount>&

OR
[select flag & 1 from fin where 
   idfin=%<finvardetail.idfin>%]{I}<>0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE003','1','U','finvardetail','S','N','S','N','N',{ts '2012-10-03 10:38:39.157'},'sa','La previsione di competenza della voce in spesa %<fin.codefin>% e UPB %<upb.codeupb>%  è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S''
)
OR
(
isnull([SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
]{V},0)
- 
ISNULL(&<finvardetail.amount>&, 0)
+ 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
>= 0
)
or
%<finvardetail.amount>%>&<finvardetail.amount>&
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE004','1','U','finvardetail','S','N','S','S','N',{ts '2012-10-03 10:41:02.387'},'sa','La previsione di competenza della voce in spesa %<fin.codefin>% e  UPB %<finview.upb>%   è inferiore alle assegnazioni dei crediti','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(  ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')=
   ISNULL([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N''))
OR
[(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) - 
ISNULL(totcreditpart, 0) - 
ISNULL(creditvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
)	
]{V} 
 >= 0
or
(
--STO AUMENTANDO LA PREVISIONE
ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
(%<finvardetail.amount>%>&<finvardetail.amount>&)
)
OR
(
--STO DIMINUENDO CREDITI
ISNULL([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
(%<finvardetail.amount>%<&<finvardetail.amount>&)
)
or ((select assured from upb where idupb=%<finvardetail.idupb>%)=''S'')



OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE005','1','U','finvardetail','N','S','S','N','S',{ts '2012-10-03 10:42:23.620'},'sa','La previsione della voce in spesa %<fin.codefin>% e  UPB %<upb.codeupb>%  è inferiore alle assegnazioni degli incassi','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') 
= ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S''))
OR
ISNULL(
	[(SELECT isnull(currentprev,0)+
	ISNULL(previsionvariation, 0) - 
	ISNULL(totproceedspart, 0) - 
	ISNULL(proceedsvariation, 0) 
	from upbtotal 
	where idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%
	)]{V}
,0) >= 0
OR
(
--STO AUMENTANDO LA PREVISIONE
ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
(%<finvardetail.amount>%>&<finvardetail.amount>&)
)
OR
(
--STO DIMINUENDO INCASSI
ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
(%<finvardetail.amount>%<&<finvardetail.amount>&)
)


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE006','1','U','finvardetail','S','N','S','S','N',{ts '2013-05-21 09:57:56.737'},'sa','La previsione di competenza della voce in spesa  %<finvardetailview.codefin>%, Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>%  è inferiore alle assegnazioni dei crediti','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
(  ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')=
   ISNULL([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N''))
OR
[(SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) - 
ISNULL(totcreditpart, 0) - 
ISNULL(creditvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	)	
]{V} 
 >= 0
or
(
--STO AUMENTANDO LA PREVISIONE
ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
(%<finvardetail.amount>%>&<finvardetail.amount>&)
)
OR
(
--STO DIMINUENDO CREDITI
ISNULL([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
(%<finvardetail.amount>%<&<finvardetail.amount>&)
)
or ((select assured from upb where idupb=%<finvardetail.idupb>%)=''S'')



OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE007','1','U','finvardetail','N','S','S','N','S',{ts '2013-05-21 09:58:27.650'},'sa','La previsione della voce in spesa %<finvardetailview.codefin>%, Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% è inferiore alle assegnazioni degli incassi.','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
(ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') 
= ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S''))
OR
ISNULL(
	[(SELECT isnull(currentprev,0)+
	ISNULL(previsionvariation, 0) - 
	ISNULL(totproceedspart, 0) - 
	ISNULL(proceedsvariation, 0) 
	from upbunderwritingtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	)]{V}
,0) >= 0
OR
(
--STO AUMENTANDO LA PREVISIONE
ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
(%<finvardetail.amount>%>&<finvardetail.amount>&)
)
OR
(
--STO DIMINUENDO INCASSI
ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
(%<finvardetail.amount>%<&<finvardetail.amount>&)
)


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE008','1','U','finvardetail','S','S','S','N','N',{ts '2013-05-21 10:53:30.870'},'sa','La previsione di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>%  è NEGATIVA!','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'') 
or
(
[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
]{V} 
>= 0
) 
or
%<finvardetail.amount>%>&<finvardetail.amount>&
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE008','2','U','finvardetail','S','N','N','N','N',{ts '2013-05-21 10:53:40.307'},'sa','La previsione di Cassa di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>%  è NEGATIVA!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

(
[select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'') 
or
(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
		from upbunderwritingtotal
		where idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%
		and idunderwriting = %<finvardetail.idunderwriting>%
]{V} 
>= 0
 ) 
or
%<finvardetail.amount>%>&<finvardetail.amount>&
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE009','1','U','finvardetail','S','N','S','N','N',{ts '2013-05-21 10:54:25.497'},'sa','La previsione di competenza entrata di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

(
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'')
OR
ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = %<finvardetail.idfin>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and idupb = %<finvardetail.idupb>%
]{V} 
,0)
- 
ISNULL(&<finvardetail.amount>&, 0) 
+ 
ISNULL(%<finvardetail.amount>%, 0) 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingincometotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_incomefinphase>%]{V}
,0)
>= 0

OR
%<finvardetail.amount>%>&<finvardetail.amount>&

OR
[select flag & 1 from fin where 
   idfin=%<finvardetail.idfin>%]{I}<>0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE010','1','U','finvardetail','S','N','S','N','N',{ts '2013-05-21 10:56:21.523'},'sa','La previsione di competenza spesa di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
(
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S''
)
OR
(
isnull([SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
]{V},0)
- 
ISNULL(&<finvardetail.amount>&, 0)
+ 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
>= 0
)
or
%<finvardetail.amount>%>&<finvardetail.amount>&
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI001','11','U','finvardetail','S','N','S','S','N',{ts '2012-10-03 10:42:54.613'},'sa','La dotazione dei crediti è NEGATIVA!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
isnull([SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
	FROM upbtotal 
	WHERE idfin = %<finvardetail.idfin>%
	 and idupb=  %<finvardetail.idupb>%
]{V} ,0)
+ 
ISNULL(%<finvardetail.amount>%, 0) 
- 
ISNULL(&<finvardetail.amount>&, 0) 
>= 0
or
%<finvardetail.amount>%>&<finvardetail.amount>&
or
isnull([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')<>''S''
OR
[SELECT assured FROM upb
WHERE idupb = %<finvardetail.idupb>%]{C} = ''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI002','1','U','finvardetail','S','N','S','S','N',{ts '2012-10-03 10:46:29.770'},'sa','La dotazione crediti della voce %<fin.codefin>% e  UPB %<upb.codeupb>%  è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
[(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0)  
from upbtotal 
where idfin = %<finvardetail.idfin>%
 and idupb = %<finvardetail.idupb>%
)
]{V} 
- 
[ISNULL(&<finvardetail.amount>&, 0)] 
+ 
[ISNULL(%<finvardetail.amount>%, 0)] 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
 	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
>= 0
or 
isnull([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%>&<finvardetail.amount>&
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI006','11','U','finvardetail','S','N','S','S','N',{ts '2013-05-21 09:51:58.007'},'sa','La dotazione dei crediti Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è NEGATIVA!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
isnull([SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0) 
	FROM upbunderwritingtotal  
	WHERE idfin = %<finvardetail.idfin>%
	 and idupb=  %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
]{V} ,0)
+ 
ISNULL(%<finvardetail.amount>%, 0) 
- 
ISNULL(&<finvardetail.amount>&, 0) 
>= 0
or
%<finvardetail.amount>%>&<finvardetail.amount>&
or
isnull([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')<>''S''
OR
[SELECT assured FROM upb
WHERE idupb = %<finvardetail.idupb>%]{C} = ''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI007','1','U','finvardetail','S','N','S','S','N',{ts '2013-05-21 09:52:42.813'},'sa','La dotazione crediti di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>%  è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

[(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0)  
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
and idupb = %<finvardetail.idupb>%
and idunderwriting = %<finvardetail.idunderwriting>%

)
]{V} 
- 
[ISNULL(&<finvardetail.amount>&, 0)] 
+ 
[ISNULL(%<finvardetail.amount>%, 0)] 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
 	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	]{V}
,0)
>= 0
or 
isnull([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%>&<finvardetail.amount>&
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO009','1','U','finvardetail','S','N','S','N','N',{ts '2012-10-03 10:48:25.340'},'sa','La previsione della voce in spesa %<fin.codefin>% e  UPB %<upb.codeupb>%   è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S'')
OR
(
isnull([SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
]{V},0)
- 
ISNULL(&<finvardetail.amount>&, 0)
+ 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
-
ISNULL(
	[(SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL)]{V}
,0)

>= 0
)
or
%<finvardetail.amount>%>&<finvardetail.amount>&
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO010','1','U','finvardetail','N','S','N','N','N',{ts '2012-10-03 10:58:46.903'},'sa','La previsione della voce in spesa %<fin.codefin>% e  UPB %<upb.codeupb>% è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S'')
OR
(
isnull([SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
]{V},0)
- 
ISNULL(&<finvardetail.amount>&, 0)
+ 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears, 0)   
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
-
ISNULL(
	[(SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL)]{V}
,0)

>= 0
)
or
%<finvardetail.amount>%>&<finvardetail.amount>&
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO011','1','U','finvardetail','S','N','S','S','N',{ts '2012-10-03 10:59:20.980'},'sa','La dotazione crediti della voce %<fin.codefin>% e  UPB %<upb.codeupb>% è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
[(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0)  
from upbtotal 
where idfin = %<finvardetail.idfin>%
 and idupb = %<finvardetail.idupb>%
)
]{V} 
- 
[ISNULL(&<finvardetail.amount>&, 0)] 
+ 
[ISNULL(%<finvardetail.amount>%, 0)] 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
 	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
,0)
>= 0
or 
isnull([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%>&<finvardetail.amount>&
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO012','1','U','finvardetail','S','S','S','N','S',{ts '2012-10-03 11:00:53.500'},'sa','La dotazione incassi della voce %<fin.codefin>% e  UPB %<upb.codeupb>% è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
[(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0)  
from upbtotal 
where idfin = %<finvardetail.idfin>%
and idupb = %<finvardetail.idupb>%
)
]{V} 
- 
ISNULL(&<finvardetail.amount>&, 0)
+ 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	+ ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
 	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
,0)
>= 0
or 
isnull([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%>&<finvardetail.amount>&
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO020','1','U','finvardetail','S','N','N','N','N',{ts '2012-10-03 11:01:18.887'},'sa','La previsione della voce di spesa %<fin.codefin>% e  UPB %<upb.codeupb>% è inferiore alle righe di mandato','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S'')
OR
(
isnull(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	from upbtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb=%<finvardetail.idupb>%
]{V},0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and nphase = %<sys_maxexpensephase>%]{V}
,0)
-
	ISNULL(
		[SELECT ISNULL(SUM(amount), 0) 
		FROM pettycashoperation 
		WHERE idfin = %<finvardetail.idfin>% 
		and idupb=%<finvardetail.idupb>%
		AND yrestore IS NULL
		AND nrestore IS NULL]{V}
	,0)
	-
	ISNULL([&<finvardetail.amount>&]{V}, 0)
	+
	ISNULL(%<finvardetail.amount>%, 0)
>= 0
)
or
%<finvardetail.amount>%>0
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO034','1','U','finvardetail','S','N','S','S','N',{ts '2013-06-19 12:38:31.860'},'assistenza','La dotazione crediti di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

[(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0)  
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
 and idupb = %<finvardetail.idupb>%
and idunderwriting = %<finvardetail.idunderwriting>%
)
]{V} 
- 
[ISNULL(&<finvardetail.amount>&, 0)] 
+ 
[ISNULL(%<finvardetail.amount>%, 0)] 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
 	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin = %<finvardetail.idfin>% 
	and PO.idupb=%<finvardetail.idupb>%
	and POU.idunderwriting = %<finvardetail.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
,0)
>= 0
or 
isnull([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%>&<finvardetail.amount>&
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO035','1','U','finvardetail','S','S','S','N','S',{ts '2013-06-19 12:40:26.743'},'assistenza','La dotazione incassi di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

[(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0)  
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
 and idupb = %<finvardetail.idupb>%
and idunderwriting = %<finvardetail.idunderwriting>%
)
]{V} 
- 
[ISNULL(&<finvardetail.amount>&, 0)] 
+ 
[ISNULL(%<finvardetail.amount>%, 0)] 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) +ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
 	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%
	]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin = %<finvardetail.idfin>% 
	and PO.idupb=%<finvardetail.idupb>%
	and POU.idunderwriting = %<finvardetail.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
,0)
>= 0
or 
isnull([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%>&<finvardetail.amount>&
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO036','1','U','finvardetail','S','N','S','N','N',{ts '2013-05-21 10:57:58.823'},'sa','La previsione della voce in spesa di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>%  è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
(ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S'')
OR
(
isnull([SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
]{V},0)
- 
ISNULL(&<finvardetail.amount>&, 0)
+ 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
-
ISNULL(
	[(SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash = POU.idpettycash
		and PO.yoperation = POU.yoperation
		and PO.noperation = POU.noperation
	where PO.idfin = %<finvardetail.idfin>% 
	and PO.idupb =%<finvardetail.idupb>%
	and POU.idunderwriting = %<finvardetail.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL)]{V}
,0)

>= 0
)
or
%<finvardetail.amount>%>&<finvardetail.amount>&
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO037','1','U','finvardetail','N','S','N','N','N',{ts '2013-05-21 10:58:28.097'},'sa','La previsione della voce in spesa di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>%  è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
(ISNULL([select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S'')
OR
(
isnull([SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
]{V},0)
- 
ISNULL(&<finvardetail.amount>&, 0)
+ 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears, 0)   
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin = %<finvardetail.idfin>% 
	and PO.idupb=%<finvardetail.idupb>%
	and POU.idunderwriting = %<finvardetail.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
,0)

>= 0
)
or
%<finvardetail.amount>%>&<finvardetail.amount>&
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0


OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO038','1','U','finvardetail','S','N','N','N','N',{ts '2013-05-21 10:59:56.930'},'sa','La previsione della voce di spesa Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è inferiore alle righe di mandato','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR

%<finvardetail.idunderwriting>% is null
OR
(ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S'')
OR
(
isnull(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	from upbunderwritingtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb=%<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
]{V},0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb=%<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%]{V}
,0)
-
	ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin = %<finvardetail.idfin>% 
	and PO.idupb=%<finvardetail.idupb>%
	and POU.idunderwriting = %<finvardetail.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{V}
	,0)
	-
	ISNULL([&<finvardetail.amount>&]{V}, 0)
	+
	ISNULL(%<finvardetail.amount>%, 0)
>= 0
)
or
%<finvardetail.amount>%>0
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS001','1','U','finvardetail','S','S','S','N','S',{ts '2012-10-03 11:18:01.740'},'sa','La dotazione degli incassi è NEGATIVA!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
isnull([SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
	FROM upbtotal 
	WHERE idfin = %<finvardetail.idfin>%
	 and idupb= %<finvardetail.idupb>%
]{V} ,0)
+ 
ISNULL(%<finvardetail.amount>%, 0) 
- 
ISNULL(&<finvardetail.amount>&, 0) 
>= 0
or
%<finvardetail.amount>%>&<finvardetail.amount>&
or
isnull([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')<>''S''
OR
[SELECT assured FROM upb
WHERE idupb = %<finvardetail.idupb>%]{C} = ''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS002','1','U','finvardetail','S','S','S','N','S',{ts '2012-10-03 11:18:33.283'},'sa','La dotazione incassi della voce %<fin.codefin>% e  UPB %<upb.codeupb>% è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
isnull([(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
and idupb = %<finvardetail.idupb>%
)
]{V} ,0)
+
ISNULL(&<finvardetail.amount>&, 0)
- 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	+ ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and	idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
>= 0
or 
isnull([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%>0
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS006','1','U','finvardetail','S','S','S','N','S',{ts '2013-05-21 10:42:17.587'},'sa','La dotazione incassi di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è NEGATIVA!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

isnull([SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
	FROM upbunderwritingtotal 
	WHERE idfin = %<finvardetail.idfin>%
	 and idupb= %<finvardetail.idupb>%
	 and idunderwriting = %<finvardetail.idunderwriting>%
]{V} ,0)
+ 
ISNULL(%<finvardetail.amount>%, 0) 
- 
ISNULL(&<finvardetail.amount>&, 0) 
>= 0
or
%<finvardetail.amount>%>&<finvardetail.amount>&
or
isnull([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''N'')<>''S''
OR
[SELECT assured FROM upb
WHERE idupb = %<finvardetail.idupb>%]{C} = ''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS007','1','U','finvardetail','S','S','S','N','S',{ts '2013-05-21 10:43:43.517'},'sa','La dotazione incassi di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR

isnull([(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal 
where idfin = %<finvardetail.idfin>%
and idupb = %<finvardetail.idupb>%
and idunderwriting = %<finvardetail.idunderwriting>%
)
]{V} ,0)
+
ISNULL(&<finvardetail.amount>&, 0)
- 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	+ ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and	idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%
	]{V}
,0)
>= 0
or 
isnull([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
or
%<finvardetail.amount>%>0
or
[select assured from upb
	where idupb=%<finvardetail.idupb>%
]{C}=''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('LE_COMPE003','1','U','finvardetail','S','N','S','N','N',{ts '2012-08-30 14:40:29.217'},'sa','La previsione di competenza della voce in spesa %<fin.codefin>% e UPB %<upb.codeupb>%  è INSUFFICIENTE!','S','(
[select flagprevision from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S''
)
OR
(
isnull([SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
from upbtotal 
where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
]{V},0)

+
ISNULL([SELECT SUM(finvardetail.amount) FROM finvardetail 
		  JOIN finvar 
			ON finvar.yvar= finvardetail.yvar and finvar.nvar= finvardetail.nvar
	    WHERE ISNULL(finvar.flagprevision,''S'') = ''S''
		AND finvar.idfinvarstatus = 2
		AND finvardetail.idfin = %<finvardetail.idfin>%
		AND finvardetail.idupb = %<finvardetail.idupb>%
		AND finvar.variationkind <> 5 


]{V}, 0 )
- 
ISNULL(&<finvardetail.amount>&, 0)
+ 
ISNULL(%<finvardetail.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<finvardetail.idfin>% 
	and idupb = %<finvardetail.idupb>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)
>= 0
)
or
%<finvardetail.amount>%>&<finvardetail.amount>&
or 
[select flag & 1 from fin where idfin=%<finvardetail.idfin>%]{I}=0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 2)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ019','1','U','finvardetail','S','S','S','N','N',{ts '2012-08-30 14:45:35.047'},'sa','Attenzione con la presente variazione il dettaglio della CARD associato potrebbe assumere importo negativo.','N','%<finvardetail.idlcard>% is null
OR

ISNULL(  [SELECT SUM(amount) FROM lcardtotal  
WHERE idlcard = %<finvardetail.idlcard>% ]{V}  ,0)   > = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM038','1','U','finvardetail','S','S','S','S','N',{ts '2012-10-03 11:25:36.907'},'sa','Il totale dell''accertato è inferiore al totale dell''impegnato per l''UPB scelto','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
ISNULL(
	[SELECT SUM(creditvariation) 
	FROM upbtotal 
	WHERE idupb = %<finvardetail.idupb>%]{V}
,0) 
- 
ISNULL(&<finvardetail.amount>&, 0)
+ 
ISNULL(%<finvardetail.amount>%, 0)
+
ISNULL(
	[SELECT SUM(totalcompetency) 
	FROM upbincometotal 
	WHERE idupb = %<finvardetail.idupb>%
	AND nphase = %<sys_incomefinphase>%]{V}
,0)
- 
ISNULL(
	[SELECT SUM(totalcompetency) 
	FROM upbexpensetotal 
	WHERE idupb = %<finvardetail.idupb>%
	AND nphase = %<sys_expensefinphase>%]{V}
,0)
+
[SELECT ISNULL(previousassessment,0) - ISNULL(previousappropriation,0)
FROM upb
WHERE idupb = %<finvardetail.idupb>%]{V}
>= 0
OR 
ISNULL([select flagcredit from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
OR
[SELECT assured FROM upb WHERE idupb=%<finvardetail.idupb>%]{C}<>''S''

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM068','1','U','finvardetail','S','S','S','N','N',{ts '2010-11-26 11:10:22.077'},'sara','Il saldo della variazione di bilancio deve essere pari a ZERO!','N','[SELECT variationkind
FROM finvar
WHERE yvar = %<finvardetail.yvar>%
AND nvar = %<finvardetail.nvar>%]{I} NOT IN (1,4)
OR
ISNULL(
[SELECT total 
FROM finvarview
WHERE yvar = %<finvardetail.yvar>%
AND nvar = %<finvardetail.nvar>%]
{V},0) = 0

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM117','1','U','finvardetail','S','S','S','N','N',{ts '2013-07-18 12:04:26.803'},'sa','Esistono dei girofondi collegati alla variazione Es. %<finvardetail.yvar>%. / n° %<finvardetail.nvar>% %<finvardetail.description>%. . La modifica dell''importo della variazione potrebbe causare un residuo da trasferire negativo.','N','ISNULL(%<finvardetail.amount>%,0)  = ISNULL(&<finvardetail.amount>&,0)
OR
[SELECT COUNT(*) FROM moneytotransfer_available_view
WHERE y = %<finvardetail.yvar>%
AND      kind = ''storno''
AND      n = %<finvardetail.nvar>%
AND      ndet = %<finvardetail.rownum>%
AND     isnull(moneytotransfer,0) < 0
]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM117','2','U','finvardetail','S','S','S','N','N',{ts '2013-07-18 12:52:53.933'},'sa','In una variazione di tipo "Storno di cassa" il saldo dei dettagli sulle voci di Bilancio di Spesa deve essere pari a zero.','N','[SELECT ISNULL(moneytransfer,''N'') 
FROM    finvar
WHERE   yvar = %<finvardetail.yvar>%
AND     nvar = %<finvardetail.nvar>%
]{C} = ''N''
OR
ISNULL(%<finvardetail.amount>%,0)  = ISNULL(&<finvardetail.amount>&,0)
OR
ISNULL([SELECT SUM(amount) FROM finvardetail
JOIN    fin ON finvardetail.idfin = fin.idfin
WHERE   yvar = %<finvardetail.yvar>%
AND     nvar = %<finvardetail.nvar>%
AND     (fin.flag & 1) <> 0
]{V},0) = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC007','1','U','finvardetail','S','S','S','N','N',{ts '2012-10-10 15:02:38.257'},'sa','La previsione iniziale di bilancio non può essere modificata in quanto è stato già redatto il bilancio di previsione.','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and 
nvar=%<finvardetail.nvar>%]{I} <>5) 
OR
--Non è stato ancora eseguito il trasferimento della configurazione di bilancio 
-- per l''esercizio precedente
(
([SELECT COUNT(*) FROM accountingyear 
WHERE ((flag&0x0F) >= 3)
AND accountingyear.ayear=%<finvardetail.yvar>%
-1]{I}=0 )
 AND 
([SELECT COUNT(*) from accountingyear 
where accountingyear.ayear=%<finvardetail.yvar>%
-1]{I}>0 )
)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON003','1','U','finvardetail','S','N','N','N','N',{ts '2012-10-03 11:31:43.780'},'sa','La previsione di cassa della voce di entrata %<fin.codefin>% e  UPB %<upb.codeupb>%  è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
	ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
)
OR
(
	isnull([SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 	
		FROM upbtotal 
		WHERE idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%
	]{V} ,0)
	- 
	ISNULL(&<finvardetail.amount>&, 0)
	+ 
	ISNULL(%<finvardetail.amount>%, 0)
	- 
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM upbincometotal
		WHERE idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%
		AND nphase = %<sys_maxincomephase>%]{V}
	,0)
	>= 0
)
or
%<finvardetail.amount>%>&<finvardetail.amount>&
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON004','1','U','finvardetail','S','N','N','N','N',{ts '2012-10-03 11:32:54.780'},'sa','La previsione di cassa della voce di spesa %<fin.codefin>% e UPB %<upb.codeupb>%  è INSUFFICIENTE!','S','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
	ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') <> ''S''
)
OR
(
	
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	FROM upbtotal 
	WHERE idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	]{V} 
	-
	ISNULL([&<finvardetail.amount>&]{V}, 0)
	+
	ISNULL(%<finvardetail.amount>%, 0)
	- 
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM upbexpensetotal
		WHERE idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%
		AND nphase =%<sys_maxexpensephase>%]{V}
	,0)
	>= 0
)
or
%<finvardetail.amount>%>&<finvardetail.amount>&
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON005','1','U','finvardetail','S','N','N','N','S',{ts '2012-11-19 15:46:48.153'},'sa','La previsione di cassa della voce di spesa %<fin.codefin>% e  UPB %<upb.codeupb>% è minore delle assegnazioni degli incassi','N','([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
OR
(
	ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') =
	ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') 
)
or
(
[(SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) - 
ISNULL(totproceedspart, 0) - 
ISNULL(proceedsvariation, 0) 
from upbtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
)]{V} 
 >= 0
)
or
(
--STO AUMENTANDO LA PREVISIONE
ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
(%<finvardetail.amount>%>&<finvardetail.amount>&)
)
OR
(
--STO DIMINUENDO INCASSI
ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
(%<finvardetail.amount>%<&<finvardetail.amount>&)
)

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  

OR ((select assured from upb where idupb=%<finvardetail.idupb>%)=''S'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON006','1','U','finvardetail','S','N','N','N','S',{ts '2013-05-21 10:45:09.343'},'sa','La previsione di cassa della voce di spesa Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>%  è minore delle assegnazioni degli incassi.','N','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
(
	ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') =
	ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') 
)
or
(
[(SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) - 
ISNULL(totproceedspart, 0) - 
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%
)]{V} 
 >= 0
)
or
(
--STO AUMENTANDO LA PREVISIONE
ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
(%<finvardetail.amount>%>&<finvardetail.amount>&)
)
OR
(
--STO DIMINUENDO INCASSI
ISNULL([select flagproceeds from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') = ''S''
AND
(%<finvardetail.amount>%<&<finvardetail.amount>&)
)

OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  

OR ((select assured from upb where idupb=%<finvardetail.idupb>%)=''S'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON007','1','U','finvardetail','S','N','N','N','N',{ts '2013-05-21 11:03:13.793'},'sa','La previsione di cassa della voce di entrata di Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR

%<finvardetail.idunderwriting>% is null
OR
(
	ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'')<>''S''
)
OR
(
	isnull([SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 	
		FROM upbunderwritingtotal 
	where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%	
	and idunderwriting = %<finvardetail.idunderwriting>%
	]{V} ,0)
	- 
	ISNULL(&<finvardetail.amount>&, 0)
	+ 
	ISNULL(%<finvardetail.amount>%, 0)
	- 
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM underwritingincometotal
	where idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%	
	and idunderwriting = %<finvardetail.idunderwriting>%
		AND nphase = %<sys_maxincomephase>%]{V}
	,0)
	>= 0
)
or
%<finvardetail.amount>%>&<finvardetail.amount>&
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON008','1','U','finvardetail','S','N','N','N','N',{ts '2013-05-21 11:05:07.060'},'sa','La previsione di cassa della voce di spesa Finanziamento: %<finvardetailview.underwriting>% , UPB: %<finvardetailview.upb>% , Bilancio: %<finvardetailview.codefin>% è INSUFFICIENTE!','S','--([select variationkind from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{I}=5) 
--OR
%<finvardetail.idunderwriting>% is null
OR
(
	ISNULL([select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
,''S'') <> ''S''
)
OR
(
	
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	FROM upbunderwritingtotal 
	WHERE idfin = %<finvardetail.idfin>%
	and idupb = %<finvardetail.idupb>%
	and idunderwriting = %<finvardetail.idunderwriting>%	
	]{V} 
	-
	ISNULL([&<finvardetail.amount>&]{V}, 0)
	+
	ISNULL(%<finvardetail.amount>%, 0)
	- 
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM underwritingexpensetotal
		WHERE idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%
		and idunderwriting = %<finvardetail.idunderwriting>%	
		AND nphase =%<sys_maxexpensephase>%]{V}
	,0)
	>= 0
)
or
%<finvardetail.amount>%>&<finvardetail.amount>&
OR
(isnull([select idfinvarstatus
	from finvar 
	where yvar=%<finvardetail.yvar>% 
	and nvar=%<finvardetail.nvar>%]{I},0)<> 5)  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR013','1','U','finvardetail','S','S','S','N','N',{ts '2013-03-07 16:10:30.720'},'sa','L''utente non è abilitato a modificare variazioni approvate.','S','(
ISNULL([select idfinvarstatus from finvar where  yvar=%<finvardetail.yvar>% and
  nvar=%<finvardetail.nvar>%]{I},0) <=4
)
OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''finvarapproved''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR014','1','U','finvardetail','S','S','S','N','N',{ts '2013-03-07 17:42:56.220'},'sa','L''utente non è abilitato a modificare variazioni inserite o approvate.','S','(
ISNULL([select idfinvarstatus from finvar where  yvar=%<finvardetail.yvar>% and
  nvar=%<finvardetail.nvar>%]{I},0) <4
)
OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''finvarapproved''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR015','1','U','finvardetail','S','S','S','N','N',{ts '2013-06-12 16:37:51.197'},'assistenza','Non è possibile modificare dettagli di una variazione di bilancio inserita in un atto amministrativo.','S','[select idenactment from finvar where yvar= %<finvardetail.yvar>%
		and nvar=%<finvardetail.nvar>% ]{I} is null
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR016','1','U','finvardetail','S','S','S','N','N',{ts '2013-06-13 16:55:09.047'},'assistenza','L''utente non è abilitato a modificare variazioni approvate.','S','(
ISNULL([select idfinvarstatus from finvar where  yvar=%<finvardetail.yvar>% and
  nvar=%<finvardetail.nvar>%]{I},0) <=4
)
OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''storniapprove''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')
or 

[select count( distinct idfin) from finvardetail where 
   yvar=%<finvardetail.yvar>% and nvar = %<finvardetail.nvar>%]{I} <> 1 
OR
 [select official from finvar where
  yvar=%<finvardetail.yvar>% and nvar = %<finvardetail.nvar>%]{C} =''S''
OR
 [select variationkind from finvar where
  yvar=%<finvardetail.yvar>% and nvar = %<finvardetail.nvar>%]{I} <>4
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR017','1','U','finvardetail','S','S','S','N','N',{ts '2013-06-13 17:06:40.407'},'assistenza','L''utente non è abilitato a modificare variazioni inserite.','S','(
ISNULL([select idfinvarstatus from finvar where  yvar=%<finvardetail.yvar>% and
  nvar=%<finvardetail.nvar>%]{I},0) <4
)
OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''storniapprove''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

or 
(isnull(%<sys_idflowchart>%,'''')='''')
or 

[select count( distinct idfin) from finvardetail where 
   yvar=%<finvardetail.yvar>% and nvar = %<finvardetail.nvar>%]{I} <> 1 
OR
 [select official from finvar where
  yvar=%<finvardetail.yvar>% and nvar = %<finvardetail.nvar>%]{C} =''S''
OR
 [select variationkind from finvar where
  yvar=%<finvardetail.yvar>% and nvar = %<finvardetail.nvar>%]{I} <>4
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','D','finyear','S','S','S','N','N',{ts '2007-12-13 14:22:59.077'},'NINO','la previsione iniziale della voce di bilancio %<finview.codefin>% non può essere cancellata. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE001','1','D','finyear','S','S','S','N','N',{ts '2009-01-20 19:48:52.727'},'NINO','La previsione della voce %<fin.codefin>%  e UPB %<upb.codeupb>%  è NEGATIVA!','S','(
	ISNULL([SELECT 
			ISNULL(currentprev, 0) + 
			ISNULL(previsionvariation, 0) 
		from upbtotal 
		where idfin = %<finyear.idfin>%
		and idupb=%<finyear.idupb>%
		]{V},0)
		- ISNULL(%<finyear.prevision>%,0)
		>= 0
)
OR
[select nlevel from fin where idfin= %<finyear.idfin>%]{I} < 
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0  AND ayear = %<sys_esercizio>%]{I}

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE001','2','D','finyear','S','N','N','N','N',{ts '2009-01-20 19:49:32.900'},'NINO','La previsione di cassa della voce %<fin.codefin>%  e UPB %<upb.codeupb>%  è NEGATIVA!','S','(
ISNULL([SELECT
			ISNULL(currentsecondaryprev, 0) + 
			ISNULL(secondaryvariation, 0) 
		from upbtotal  
		where idfin = %<finyear.idfin>%
		and idupb=%<finyear.idupb>%
		]{V},0)

		- ISNULL(%<finyear.secondaryprev>%,0)
		>= 0
)
OR
(
 [select nlevel from fin where idfin= %<finyear.idfin>%]{I} < 
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0 AND ayear = %<sys_esercizio>%]{I}
)
	')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','I','finyear','S','S','S','N','N',{ts '2007-12-13 14:23:04.747'},'NINO','la previsione iniziale della voce di bilancio %<finview.codefin>% non può essere inserita. Esercizio  %<esercizio>% chiuso','N','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE001','1','I','finyear','S','S','S','N','N',{ts '2008-02-05 10:40:15.267'},'NINO','La previsione della voce %<fin.codefin>%  e UPB %<upb.codeupb>%  è NEGATIVA!','N','(
		ISNULL([SELECT 
			ISNULL(currentprev, 0) + 
			ISNULL(previsionvariation, 0) 
		from upbtotal 
		where idfin = %<finyear.idfin>%
		and idupb=%<finyear.idupb>%
		]{V},0)
		>= 0
)
OR
[select nlevel from fin where idfin= %<finyear.idfin>%]{I} < 
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0  AND ayear = %<sys_esercizio>%]{I}

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE001','2','I','finyear','S','N','N','N','N',{ts '2008-02-05 10:40:32.937'},'NINO','La previsione di cassa della voce %<fin.codefin>%  e UPB %<upb.codeupb>%  è NEGATIVA!','N','(
		ISNULL([SELECT
			ISNULL(currentsecondaryprev, 0) + 
			ISNULL(secondaryvariation, 0) 
		from upbtotal  
		where idfin = %<finyear.idfin>%
		and idupb=%<finyear.idupb>%
		]{V},0)
		>= 0
)
OR
(
 [select nlevel from fin where idfin= %<finyear.idfin>%]{I} < 
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0 AND ayear = %<sys_esercizio>%]{I}
)
	')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC001','1','I','finyear','S','S','S','N','N',{ts '2007-11-15 15:02:14.377'},'XXNINO','La previsione corrente del livello %<finview.leveldescr>% è superiore a quella del livello da cui dipende','N','isnull([SELECT SUM(prevision)
from finyear 
join fin on fin.idfin= finyear.idfin
where idupb=%<finyear.idupb>% and
      fin.paridfin= [select paridfin from fin where idfin=%<finyear.idfin>%]{I}
]{V},0)
<= 
isnull(
[SELECT prevision
from finyear
where idupb=%<finyear.idupb>% and
	idfin = [select paridfin from fin where idfin=%<finyear.idfin>%]{I}
]{V}
,0) 
or 
([SELECT finlevel.flag 
from finlevel 
join fin 
on finlevel.nlevel = fin.nlevel 
and fin.idfin = [select paridfin from fin where idfin=%<finyear.idfin>%]{I}
and finlevel.ayear = [select ayear from fin where idfin = %<finyear.idfin>%]{I}
]{I}& 2) = 0
or 
[select nlevel from fin where idfin=%<finyear.idfin>%]{I} =1
or
isnull(%<finyear.prevision>%,0)=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC002','1','I','finyear','S','S','S','N','N',{ts '2007-11-15 15:03:03.330'},'XXNINO','La previsione precedente del livello %<finview.leveldescr>%  è superiore a quella del livello da cui dipende','N','
isnull([SELECT SUM(previousprevision)
from finyear 
join fin on fin.idfin= finyear.idfin
where idupb=%<finyear.idupb>% and
      fin.paridfin= [select paridfin from fin where idfin=%<finyear.idfin>%]{I}
]{V},0)
<= 
isnull(
[SELECT ISNULL(previousprevision, 0) 
from finyear
where idupb=%<finyear.idupb>% and
	idfin = [select paridfin from fin where idfin=%<finyear.idfin>%]{I}
]{V}
,0) 
or 
([SELECT finlevel.flag 
from finlevel 
join fin 
on finlevel.nlevel = fin.nlevel 
and fin.idfin = [select paridfin from fin where idfin=%<finyear.idfin>%]{I}
and finlevel.ayear = %<sys_esercizio>%]{I} & 2)=0
or 
[select nlevel from fin where idfin=%<finyear.idfin>%]{I} =1
or
isnull(%<finyear.previousprevision>%,0)=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC003','1','I','finyear','S','S','S','N','N',{ts '2007-11-15 15:03:41.160'},'XXNINO','I residui presunti del livello %<finview.leveldescr>%  è superiore a quella del livello da cui dipende','N','isnull([SELECT SUM(currentarrears)
from finyear 
join fin on fin.idfin= finyear.idfin
where idupb=%<finyear.idupb>% and
      fin.paridfin= [select paridfin from fin where idfin=%<finyear.idfin>%]{I}
]{V},0)
<= 
isnull(
[SELECT ISNULL(currentarrears, 0) 
from finyear
where idupb=%<finyear.idupb>% and
	idfin = [select paridfin from fin where idfin=%<finyear.idfin>%]{I}
]{V}
,0) 
or 
([SELECT finlevel.flag 
from finlevel 
join fin 
on finlevel.nlevel = fin.nlevel 
and fin.idfin = [select paridfin from fin where idfin=%<finyear.idfin>%]{I}
and finlevel.ayear = %<sys_esercizio>%]{I} & 2) = 0
or 
[select nlevel from fin where idfin=%<finyear.idfin>%]{I} =1
or
isnull(%<finyear.currentarrears>%,0)=0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC004','1','I','finyear','S','S','S','N','N',{ts '2007-11-15 15:04:07.177'},'XXNINO','I residui effettivi del livello %<finview.leveldescr>%  è superiore a quella del livello da cui dipende','N','

isnull([SELECT SUM(previousarrears)
from finyear 
join fin on fin.idfin= finyear.idfin
where idupb=%<finyear.idupb>% and
      fin.paridfin= [select paridfin from fin where idfin=%<finyear.idfin>%]{I}
]{V},0)
<= 
isnull(
[SELECT ISNULL(previousarrears, 0) 
from finyear
where idupb=%<finyear.idupb>% and
	idfin = [select paridfin from fin where idfin=%<finyear.idfin>%]{I}
]{V}
,0) 
or 
([SELECT finlevel.flag 
from finlevel 
join fin 
on finlevel.nlevel = fin.nlevel 
and fin.idfin = [select paridfin from fin where idfin=%<finyear.idfin>%]{I}
and finlevel.ayear = %<sys_esercizio>%]{I} & 2) = 0
or 
[select nlevel from fin where idfin=%<finyear.idfin>%]{I} =1
or
isnull(%<finyear.previousarrears>%,0)=0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC005','1','I','finyear','S','S','S','N','N',{ts '2007-12-13 14:20:59.277'},'SARA','La previsione iniziale della nuova voce di bilancio non può essere inserita in quanto è stato già redatto il bilancio di previsione e ciò comporterebbe la modifica di un documento ufficiale. Eseguire una variazione della previsione sulla nuova voce di bilancio.','N','--Voce operativa ma di livello superiore al minimo livello operativo
[SELECT nlevel
FROM fin
WHERE idfin = %<finyear.idfin>%]{I} >
[SELECT MIN(nlevel) FROM finlevel
WHERE ayear = %<finyear.ayear>%
AND (flag & 2)<>0]{I}
OR
--Non è stato ancora eseguito il trasferimento della configurazione di bilancio 
-- per l''esercizio precedente
(

([SELECT COUNT(*) from accountingyear 
  WHERE ((flag&0x0F) >= 3)
  AND accountingyear.ayear= %<finyear.ayear>%-1]{I}= 0)
 AND 
([SELECT COUNT(*) from accountingyear 
where accountingyear.ayear= %<finyear.ayear>%-1]{I}>0 )
)

OR
--Controlli sulle previsioni iniziali principale e secondaria
(
(ISNULL(%<finyear.prevision>%,0) = 0)
AND
(ISNULL(%<finyear.secondaryprev>%,0) = 0)
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC006','1','I','finyear','S','S','S','N','N',{ts '2007-12-17 12:46:47.467'},'PINO','Il valore dei residui presunti attivi/passivi dell''anno in corso per la voce di bilancio %<fin.codefin>% non può essere negativo','S','ISNULL(%<finyear.currentarrears>%, 0) >= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC006','2','I','finyear','S','S','S','N','N',{ts '2007-12-17 12:46:53.377'},'PINO','Il valore dei residui presunti attivi/passivi dell''anno precedente per la voce di bilancio %<fin.codefin>% non può essere negativo','S','ISNULL(%<finyear.previousarrears>%, 0) >= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON001','1','I','finyear','S','N','N','N','N',{ts '2007-11-15 15:05:15.143'},'XXNINO','La previsione corrente del livello %<finview.leveldescr>%  è superiore a quella del livello da cui dipende','N','


isnull([SELECT SUM(secondaryprev)
from finyear 
join fin on fin.idfin= finyear.idfin
where idupb=%<finyear.idupb>% and
      fin.paridfin= [select paridfin from fin where idfin=%<finyear.idfin>%]{I}
]{V},0)
<= 
isnull(
[SELECT ISNULL(secondaryprev, 0) 
from finyear
where idupb=%<finyear.idupb>% and
	idfin = [select paridfin from fin where idfin=%<finyear.idfin>%]{I}
]{V}
,0) 
or 
([SELECT finlevel.flag 
from finlevel 
join fin 
on finlevel.nlevel = fin.nlevel 
and fin.idfin = [select paridfin from fin where idfin=%<finyear.idfin>%]{I}
and finlevel.ayear = [select ayear from fin where idfin = %<finyear.idfin>%]{I}]{I} & 2) = 0
or 
[select nlevel from fin where idfin=%<finyear.idfin>%]{I} =1
or
isnull(%<finyear.secondaryprev>%,0)=0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON002','1','I','finyear','S','N','N','N','N',{ts '2007-11-15 15:10:36.973'},'XXNINO','La previsione precedente del livello %<finview.leveldescr>%  è superiore a quella del livello da cui dipende','N','

isnull([SELECT SUM(previoussecondaryprev)
from finyear 
join fin on fin.idfin= finyear.idfin
where idupb=%<finyear.idupb>% and
      fin.paridfin= [select paridfin from fin where idfin=%<finyear.idfin>%]{I}
]{V},0)
<= 
isnull(
[SELECT ISNULL(previoussecondaryprev, 0) 
from finyear
where idupb=%<finyear.idupb>% and
	idfin = [select paridfin from fin where idfin=%<finyear.idfin>%]{I}
]{V}
,0) 
or 
([SELECT finlevel.flag 
from finlevel 
join fin 
on finlevel.nlevel = fin.nlevel 
and fin.idfin = [select paridfin from fin where idfin=%<finyear.idfin>%]{I}
and finlevel.ayear = %<sys_esercizio>%]{I} & 2) = 0
or 
[select nlevel from fin where idfin=%<finyear.idfin>%]{I} =1
or
isnull(%<finyear.previoussecondaryprev>%,0)=0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA001','5','U','finyear','N','S','N','N','N',{ts '2007-11-15 15:28:18.440'},'XXNINO','La previsione della voce in entrata %<finview.finpart>% %<finview.codefin>% e UPB %<finview.upb>% è INSUFFICIENTE!','S','ISNULL(%<finyear.prevision>%, 0)
+ 
ISNULL(
	[SELECT 
	ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = %<finyear.idfin>%
	and idupb = %<finyear.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from upbincometotal 
	where idfin = %<finyear.idfin>% 
	and idupb = %<finyear.idupb>%
	and nphase = %<sys_incomefinphase>%
	]{V}
,0)
>= 0
OR
([select nlevel from fin where idfin= %<finyear.idfin>%]{I}  < 
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0 AND ayear = %<sys_esercizio>%]{I}
)
or
(
%<finyear.prevision>%>&<finyear.prevision>&
)
or 
([select flag from fin where idfin= %<finyear.idfin>%]{I} & 1)<>0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA002','13','U','finyear','N','S','N','N','N',{ts '2007-11-15 15:28:42.317'},'XXNINO','La previsione della voce in spesa %<finview.finpart>% %<finview.codefin>%  e UPB %<finview.codeupb>%  è INSUFFICIENTE!','S','ISNULL(%<finyear.prevision>%, 0)
+ 
ISNULL(
	[SELECT ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = %<finyear.idfin>%
	and idupb = %<finyear.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from upbexpensetotal 
	where idfin = %<finyear.idfin>%
	and idupb = %<finyear.idupb>%
	and nphase = %<sys_expensefinphase>%
	]{V}
,0)
>= 0
OR
( [select nlevel from fin where idfin= %<finyear.idfin>%]{I} <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0 AND ayear = %<sys_esercizio>%]{I}
 )
or
(%<finyear.prevision>%>&<finyear.prevision>&)
or 
([select flag from fin where idfin= %<finyear.idfin>%]{I} & 1) =0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','U','finyear','S','S','S','N','N',{ts '2007-12-13 14:23:11.530'},'NINO','la previsione iniziale della voce di bilancio %<finview.codefin>% non può essere modificata. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE001','1','U','finyear','S','S','S','N','N',{ts '2008-02-05 10:40:41.390'},'NINO','La previsione della voce %<finview.finpart>% %<finview.codefin>%   e UPB %<finview.codeupb>%  è NEGATIVA!','N','(
		ISNULL([SELECT
			ISNULL(currentprev, 0) + 
			ISNULL(previsionvariation, 0) 
		from upbtotal 
		where idfin = %<finyear.idfin>%
		and idupb=%<finyear.idupb>%
		]{V},0)
		>= 0
)
OR
[select nlevel from fin where idfin= %<finyear.idfin>%]{I} < 
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0  AND ayear = %<sys_esercizio>%]{I}

	
or
isnull(%<finyear.prevision>%,0)>=isnull(&<finyear.prevision>&,0)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE001','2','U','finyear','S','N','N','N','N',{ts '2008-02-05 10:40:54.077'},'NINO','La previsione di cassa della voce %<finview.finpart>% %<finview.codefin>% e UPB %<finview.codeupb>%  è NEGATIVA!','N','(
		ISNULL([SELECT
			ISNULL(currentsecondaryprev, 0) + 
			ISNULL(secondaryvariation, 0) 
		from upbtotal  
		where idfin = %<finyear.idfin>%
		and idupb=%<finyear.idupb>%
		]{V},0)
		>= 0
)
OR
(
 [select nlevel from fin where idfin= %<finyear.idfin>%]{I} < 
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0 AND ayear = %<sys_esercizio>%]{I}
)
	
or
isnull(%<finyear.secondaryprev>%,0)>=isnull(&<finyear.secondaryprev>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE002','5','U','finyear','S','N','S','N','N',{ts '2007-11-15 15:29:30.143'},'XXNINO','La previsione di competenza della voce in entrata %<finview.codefin>% e UPB %<finview.codeupb>% è INSUFFICIENTE!','S','ISNULL(%<finyear.prevision>%, 0)
+ 
ISNULL(
	[SELECT ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<finyear.idfin>%
	and idupb= %<finyear.idupb>%
]{V} 
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbincometotal 
	where idfin = %<finyear.idfin>% 
	and idupb= %<finyear.idupb>%
	and nphase = %<sys_incomefinphase>%]{V}
,0)
>= 0
OR
[select nlevel from fin where idfin= %<finyear.idfin>%]{I} < 
	[SELECT MIN(nlevel) FROM finlevel  WHERE (flag & 2)<>0  AND ayear = %<sys_esercizio>%]{I}

OR
(%<finyear.prevision>%<&<finyear.prevision>&)
or 
([select flag  from fin where idfin= %<finyear.idfin>%]{I} & 1) <>0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE003','1','U','finyear','S','N','S','N','N',{ts '2007-11-15 15:29:58.910'},'XXNINO','La previsione di competenza della voce in spesa %<finview.codefin>%  e UPB %<finview.codeupb>%   è INSUFFICIENTE!','S','(
ISNULL(%<finyear.prevision>%, 0)
+ 
ISNULL(
	[SELECT ISNULL(previsionvariation, 0)
	from upbtotal
	where idfin = %<finyear.idfin>%
	and idupb = %<finyear.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<finyear.idfin>% 
	and idupb=%<finyear.idupb>% 
	and nphase = %<sys_expensefinphase>%]{V}
,0)
>= 0
)
OR
([select nlevel from fin where idfin= %<finyear.idfin>%]{I} < 
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0  AND ayear = %<sys_esercizio>%]{I}
)
or
%<finyear.prevision>%>&<finyear.prevision>&
or 
([select flag from fin where idfin= %<finyear.idfin>%]{I}& 1)=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE004','1','U','finyear','S','N','S','S','N',{ts '2007-11-15 15:16:48.660'},'XXNINO','La previsione di competenza della voce in spesa %<finview.codefin>% e UPB %<finview.codeupb>%  è inferiore alle assegnazioni dei crediti','S','(
ISNULL(%<finyear.prevision>%, 0)
+
ISNULL( 
	[SELECT ISNULL(previsionvariation, 0) - 
	ISNULL(totcreditpart, 0) -
	ISNULL(creditvariation, 0) 
	from upbtotal 
	where idfin = %<finyear.idfin>%
	and idupb = %<finyear.idupb>%
	]{V}
,0)
>= 0
)
OR
([select nlevel from fin where idfin= %<finyear.idfin>%]{I} < 
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0 AND ayear = %<sys_esercizio>%]{I}
)
or
(
%<finyear.prevision>%>&<finyear.prevision>&
)
or 
((select assured from upb where idupb=%<finyear.idupb>%)=''S'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE005','1','U','finyear','N','S','S','N','S',{ts '2007-11-15 15:17:03.457'},'XXNINO','La previsione della voce in spesa %<finview.codefin>% e UPB %<finview.codeupb>%  è inferiore alle assegnazioni degli incassi','S','(
ISNULL(%<finyear.prevision>%, 0)
+ 
isnull([SELECT ISNULL(previsionvariation, 0) - 
ISNULL(totproceedspart, 0) - 
ISNULL(proceedsvariation, 0) 
from upbtotal 
where idfin = %<finyear.idfin>%
 and idupb = %<finyear.idupb>%
]{V},0) >= 0
)
OR
([select nlevel from fin where idfin= %<finyear.idfin>%]{I}  < 
	[SELECT MIN(nlevel) FROM finlevel WHERE 	(flag & 2)<>0 	AND ayear = %<sys_esercizio>%]{I}
)
or
(
%<finyear.prevision>%>&<finyear.prevision>&
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO009','1','U','finyear','S','N','S','N','N',{ts '2007-11-15 15:30:53.427'},'XXNINO','La previsione della voce in spesa %<finview.codefin>% e UPB %<finview.codeupb>%   è INSUFFICIENTE!','S','(
ISNULL(%<finyear.prevision>%, 0)
+ 
ISNULL(
	[SELECT ISNULL(previsionvariation, 0)
	from upbtotal
	where idfin = %<finyear.idfin>%
	and idupb = %<finyear.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<finyear.idfin>% 
	and idupb=%<finyear.idupb>% 
	and nphase = %<sys_expensefinphase>%]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
		FROM pettycashoperation 
		WHERE idfin = %<finyear.idfin>% 
		and idupb=%<finyear.idupb>% 
		AND yrestore IS NULL
		AND nrestore IS NULL]{V}
	,0)

>= 0
)
OR
([select nlevel from fin where idfin= %<finyear.idfin>%]{I} < 
	[SELECT MIN(nlevel) FROM finlevel 
	WHERE (flag & 2)<>0 AND ayear = %<sys_esercizio>%]{I}
)
or
%<finyear.prevision>%>&<finyear.prevision>&
or 
([select flag  from fin where idfin= %<finyear.idfin>%]{I} & 1) =0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO010','1','U','finyear','N','S','N','N','N',{ts '2007-11-15 15:31:22.957'},'XXNINO','La previsione della voce in spesa %<finview.codefin>% e UPB %<finview.codeupb>%  è INSUFFICIENTE!','S','(
ISNULL(%<finyear.prevision>%, 0)
+ 
ISNULL(
	[SELECT ISNULL(previsionvariation, 0)
	from upbtotal
	where idfin = %<finyear.idfin>%
	and idupb = %<finyear.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears, 0)   
	from upbexpensetotal 
	where idfin = %<finyear.idfin>% 
	and idupb=%<finyear.idupb>% 
	and nphase = %<sys_expensefinphase>%]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
		FROM pettycashoperation 
		WHERE idfin = %<finyear.idfin>% 
		and idupb=%<finyear.idupb>% 
		AND yrestore IS NULL
		AND nrestore IS NULL]{V}
	,0)

>= 0
)
OR
([select nlevel from fin where idfin= %<finyear.idfin>%]{I} <
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0 AND ayear = %<sys_esercizio>%]{I}
)
or
%<finyear.prevision>%>&<finyear.prevision>&
or 
([select flag from fin where idfin= %<finyear.idfin>%]{I} & 1)=0 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO020','1','U','finyear','S','N','N','N','N',{ts '2007-11-15 15:31:47.550'},'XXNINO','La previsione della voce di spesa %<finview.codefin>% e UPB %<finview.codeupb>% è inferiore alle righe di mandato','S','(
ISNULL(%<finyear.secondaryprev>%, 0)
+ 
	ISNULL(
	[SELECT ISNULL(secondaryvariation, 0)
	from upbtotal
	where idfin = %<finyear.idfin>%
	and idupb = %<finyear.idupb>%
]{V}
,0)
- 
	ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<finyear.idfin>% 
	and idupb=%<finyear.idupb>% 
	and nphase = %<sys_maxexpensephase>%]{V}
,0)
   -
	ISNULL(
		[SELECT ISNULL(SUM(amount), 0) 
		FROM pettycashoperation 
		where idfin = %<finyear.idfin>% 
		and idupb=%<finyear.idupb>% 
		AND yrestore IS NULL
		AND nrestore IS NULL]{V}
		,0)	
>= 0
)
OR
(
 [select nlevel from fin where idfin= %<finyear.idfin>%]{I} < 
	[SELECT MIN(nlevel) FROM finlevel 
	WHERE (flag & 2)<>0  AND ayear = %<sys_esercizio>%]{I}
)
or
isnull(%<finyear.secondaryprev>%,0)>=isnull(&<finyear.secondaryprev>&,0)
or 
([select flag from fin where idfin= %<finyear.idfin>%]{I} & 1)=0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM021','1','U','finyear','S','S','S','N','N',{ts '2007-08-25 15:11:33.280'},'NINO','FONDO DI CASSA INIZIALE + totale delle reversali trasmesse in banca deve essere maggiore od uguale al totale dei pagamenti (anche non inclusi in un mandato)','N','
[SELECT ISNULL(currentfloatfund,0) FROM currentcashtotal WHERE ayear = %<sys_esercizio>%]{V} >= 0

OR

[select idfinexpensesurplus from config where ayear= %<sys_esercizio>%]{I} IS NOT NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC001','1','U','finyear','S','S','S','N','N',{ts '2007-11-15 15:18:35.613'},'XXNINO','La previsione corrente del livello %<finview.leveldescr>% è superiore a quella del livello da cui dipende','N','
isnull([SELECT sum(prevision)
from finyear
join fin on fin.idfin=finyear.idfin
where idupb=%<finyear.idupb>% and
      fin.paridfin=[select paridfin from fin where idfin= %<finyear.idfin>%]{I} 
]{V} ,0)
<= 
isnull(
[SELECT prevision
from finyear
where idupb=%<finyear.idupb>% and
	idfin = [select paridfin from fin where idfin= %<finyear.idfin>%]{I} 
]{V}
,0) 

or 

([SELECT finlevel.flag 
from finlevel 
join fin 
on finlevel.nlevel = fin.nlevel 
and fin.idfin = [select paridfin from fin where idfin= %<finyear.idfin>%]{I} 
and finlevel.ayear = [select ayear from fin where idfin = %<finyear.idfin>%]{I}]{I} & 2) = 0

or 
[select nlevel from fin where idfin= %<finyear.idfin>%]{I} =1
or

isnull(%<finyear.prevision>%,0)<=isnull(&<finyear.prevision>&,0)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC001','2','U','finyear','S','S','S','N','N',{ts '2009-02-17 13:23:50.170'},'NINO','La previsione corrente del livello %<finview.leveldescr>%  è inferiore a quella dei  livelli dipendenti','N','--post
isnull([SELECT sum(prevision)
from finyear
join fin 
 on fin.idfin=finyear.idfin
where idupb=%<finyear.idupb>% and
      fin.paridfin=  %<finyear.idfin>%
]{V} ,0)
<= 
isnull(%<finyear.prevision>%,0)
or 
([SELECT finlevel.flag 
from finlevel 
join fin 
on finlevel.nlevel = fin.nlevel 
where fin.idfin=%<finyear.idfin>%
	and finlevel.ayear =%<finyear.ayear>%
]{I} & 2) = 0

or
isnull(%<finyear.prevision>%,0)>= isnull(&<finyear.prevision>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC002','1','U','finyear','S','S','S','N','N',{ts '2007-11-15 15:19:42.003'},'XXNINO','La previsione precedente del livello %<finview.leveldescr>%  è superiore a quella del livello da cui dipende','N','--post
isnull([SELECT ISNULL(sum(previousprevision), 0) 
from finyear
join fin on finyear.idfin=fin.idfin
where idupb=%<finyear.idupb>% and
	fin.paridfin = 	[select nlevel from fin where idfin= %<finyear.idfin>%]{I} 
]{V} ,0)
<= 
isnull(
[SELECT ISNULL(previousprevision, 0) 
from finyear
where idupb=%<finyear.idupb>% and
	idfin = [select nlevel from fin where idfin= %<finyear.idfin>%]{I} 
]{V}
,0) 

or 

([SELECT finlevel.flag 
from finlevel 
join fin 
on finlevel.nlevel = fin.nlevel 
and fin.idfin = [select paridfin from fin where idfin= %<finyear.idfin>%]{I} 
and finlevel.ayear = %<sys_esercizio>%]{I} & 2) = 0

or 
[select nlevel from fin where idfin= %<finyear.idfin>%]{I} =1
or

isnull(%<finyear.previousprevision>%,0)<=isnull(&<finyear.previousprevision>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC002','2','U','finyear','S','S','S','N','N',{ts '2009-02-17 13:25:56.360'},'NINO','La previsione precedente del livello %<finview.leveldescr>%  è inferiore a quella dei  livelli dipendenti','N','--post
isnull([SELECT ISNULL(sum(previousprevision), 0) 
from finyear
join fin on fin.idfin=finyear.idfin
where idupb=%<finyear.idupb>% and
      fin.paridfin= %<finyear.idfin>%

]{V} ,0)
<= 
isnull(%<finyear.previousprevision>%,0)

or 

([SELECT finlevel.flag 
from finlevel 
join fin 
on finlevel.nlevel = fin.nlevel 
where fin.idfin=%<finyear.idfin>%
	and finlevel.ayear =%<finyear.ayear>%
]{I} & 2) = 0

or

isnull(%<finyear.previousprevision>%,0)>=isnull(&<finyear.previousprevision>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC003','1','U','finyear','S','S','S','N','N',{ts '2007-11-15 15:21:28.613'},'XXNINO','I residui presunti del livello %<finview.leveldescr>%  è superiore a quella del livello da cui dipende','N','--post
isnull([SELECT ISNULL(sum(currentarrears), 0) 
from finyear
join fin on finyear.idfin= fin.idfin
where idupb=%<finyear.idupb>% and
	fin.paridfin= [select paridfin from fin where idfin= %<finyear.idfin>%]{I} 
]{V} ,0)
<= 
isnull(
[SELECT ISNULL(currentarrears, 0) 
from finyear
where idupb=%<finyear.idupb>% and
	idfin = [select paridfin from fin where idfin= %<finyear.idfin>%]{I} 
]{V}
,0) 
or 
([SELECT finlevel.flag 
from finlevel 
join fin 
on finlevel.nlevel = fin.nlevel 
and fin.idfin = [select paridfin from fin where idfin= %<finyear.idfin>%]{I} 
and finlevel.ayear = %<sys_esercizio>%]{I}& 2) = 0
or 
[select nlevel from fin where idfin= %<finyear.idfin>%]{I} =1

or
isnull(%<finyear.currentarrears>%,0)<=isnull(&<finyear.currentarrears>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC003','2','U','finyear','S','S','S','N','N',{ts '2009-02-17 13:26:18.670'},'NINO','I residui presunti del livello %<finview.leveldescr>%  è superiore a quella dei livelli dipendenti','N','--post
isnull([SELECT ISNULL(sum(currentarrears), 0) 
from finyear
join fin on fin.idfin=finyear.idfin
where idupb=%<finyear.idupb>% and
      fin.paridfin= %<finyear.idfin>%
]{V} ,0)
<= 
isnull(%<finyear.currentarrears>%,0)
or 

([SELECT finlevel.flag 
from finlevel 
join fin 
on finlevel.nlevel = fin.nlevel 
where fin.idfin=%<finyear.idfin>%
	and finlevel.ayear =%<finyear.ayear>%
]{I} & 2) = 0

or
isnull(%<finyear.currentarrears>%,0)>= isnull(&<finyear.currentarrears>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC004','1','U','finyear','S','S','S','N','N',{ts '2007-11-15 15:22:22.707'},'XXNINO','I residui effettivi del livello %<finview.leveldescr>%  è superiore a quella del livello da cui dipende','N','--post
isnull([SELECT ISNULL(sum(previousarrears), 0) 
from finyear
join fin on fin.idfin=finyear.idfin
where idupb= %<finyear.idupb>% and
	fin.paridfin = [select paridfin from fin where idfin= %<finyear.idfin>%]{I} 
]{V} ,0)
<= 
isnull(
[SELECT ISNULL(previousarrears, 0) 
from finyear
where idupb= %<finyear.idupb>% and
	idfin = [select paridfin from fin where idfin= %<finyear.idfin>%]{I} 
]{V}
,0) 
or 
([SELECT finlevel.flag 
from finlevel 
join fin 
on finlevel.nlevel = fin.nlevel 
and fin.idfin = [select paridfin from fin where idfin= %<finyear.idfin>%]{I} 
and finlevel.ayear = %<sys_esercizio>%]{I} & 2) = 0
or 
[select paridfin from fin where idfin= %<finyear.idfin>%]{I} is null

or
isnull(%<finyear.previousarrears>%,0)<=isnull(&<finyear.previousarrears>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC004','2','U','finyear','S','S','S','N','N',{ts '2009-02-17 13:27:11.920'},'NINO','I residui effettivi del livello %<finview.leveldescr>%  è superiore a quelle dei livelli dipendenti','N','isnull([SELECT ISNULL(sum(previousarrears), 0) 
from finyear
join fin on fin.idfin=finyear.idfin
where idupb=%<finyear.idupb>% and
	fin.paridfin= %<finyear.idfin>%
]{V} ,0)
<= 
isnull(%<finyear.previousarrears>%,0)
or 

([SELECT finlevel.flag 
from finlevel 
join fin 
on finlevel.nlevel = fin.nlevel 
where fin.idfin=%<finyear.idfin>%
	and finlevel.ayear =%<finyear.ayear>%
]{I} & 2) = 0

or
isnull(%<finyear.previousarrears>%,0)>= isnull(&<finyear.previousarrears>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC005','8','U','finyear','S','S','S','N','N',{ts '2007-12-13 14:20:44.393'},'SARA','La previsione iniziale della voce di bilancio %<finview.finpart>% %<finview.codefin>% e UPB %<finview.codeupb>% non può essere modificata in quanto è stato già redatto il bilancio di previsione e ciò comporterebbe la modifica di un documento ufficiale. Eseguire una variazione della previsione sulla voce di bilancio.','S','--Voce operativa ma di livello superiore al minimo livello operativo
[SELECT nlevel FROM fin
WHERE fin.idfin = %<finyear.idfin>%]{I} >
[SELECT MIN(nlevel) FROM finlevel
WHERE ayear = %<finyear.ayear>%
AND (flag & 2)<>0]{I}
OR
--Non è stato ancora eseguito il trasferimento della configurazione di bilancio 
-- per l''esercizio precedente
(
([SELECT COUNT(*) FROM accountingyear 
WHERE ((flag&0x0F) >= 3)
AND accountingyear.ayear=%<finyear.ayear>%
-1]{I}=0 )
 AND 
([SELECT COUNT(*) from accountingyear 
where accountingyear.ayear=%<finyear.ayear>%
-1]{I}>0 )
)

OR
--Controlli sulle previsioni iniziali principale e secondaria
(
(ISNULL(%<finyear.prevision>%,0) = ISNULL(&<finyear.prevision>&,0))
AND
(ISNULL(%<finyear.secondaryprev>%,0) = ISNULL(&<finyear.secondaryprev>&,0))
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC006','1','U','finyear','S','S','S','N','N',{ts '2007-12-17 12:49:12.530'},'PINO','Il valore dei residui presunti attivi/passivi dell''anno in corso per la voce di bilancio %<fin.codefin>% non può essere negativo','S','ISNULL(%<finyear.currentarrears>%, 0) >= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PRINC006','2','U','finyear','S','S','S','N','N',{ts '2007-12-17 12:48:52.250'},'PINO','Il valore dei residui presunti attivi/passivi dell''anno precedente per la voce di bilancio %<fin.codefin>% non può essere negativo','S','ISNULL(%<finyear.previousarrears>%, 0) >= 0

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON001','1','U','finyear','S','N','N','N','N',{ts '2007-11-15 15:24:08.533'},'XXNINO','La previsione corrente del livello %<finview.leveldescr>%  è superiore a quella del livello da cui dipende','N','--post
isnull([SELECT ISNULL(sum(secondaryprev), 0) 
from finyear
join fin on finyear.idfin=fin.idfin
where idupb=%<finyear.idupb>% and
      fin.paridfin=[select paridfin from fin where idfin= %<finyear.idfin>%]{I} 
]{V} ,0)
<= 
isnull(
[SELECT ISNULL(secondaryprev, 0) 
from finyear
where idupb=%<finyear.idupb>% and
	idfin = [select paridfin from fin where idfin= %<finyear.idfin>%]{I} 
]{V}
,0) 
or 
([SELECT finlevel.flag 
from finlevel 
join fin 
on finlevel.nlevel = fin.nlevel 
and fin.idfin = [select paridfin from fin where idfin= %<finyear.idfin>%]{I} 
and finlevel.ayear = [select ayear from fin where idfin = %<finyear.idfin>%]{I}
]{I} & 2) = 0
or 
[select nlevel from fin where idfin= %<finyear.idfin>%]{I}=1
or
isnull(%<finyear.secondaryprev>%,0)<=isnull(&<finyear.secondaryprev>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON001','2','U','finyear','S','N','N','N','N',{ts '2009-02-17 13:29:00.797'},'NINO','La previsione corrente del livello %<finview.leveldescr>%  è superiore a quella del livello da cui dipende','N','isnull([SELECT ISNULL(sum(secondaryprev), 0) 
from finyear
join fin on finyear.idfin=fin.idfin
where idupb=%<finyear.idupb>% and
	fin.paridfin= %<finyear.idfin>%
]{V} ,0)
<= 
isnull(%<finyear.secondaryprev>%,0)
or 
([SELECT finlevel.flag 
from finlevel 
join fin 
on finlevel.nlevel = fin.nlevel 
where fin.idfin=%<finyear.idfin>%
	and finlevel.ayear =%<finyear.ayear>%
]{I} & 2) = 0

or
isnull(%<finyear.secondaryprev>%,0)>= isnull(&<finyear.secondaryprev>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON002','1','U','finyear','S','N','N','N','N',{ts '2007-11-15 15:25:25.877'},'XXNINO','La previsione precedente del livello %<finview.leveldescr>%  è superiore a quella del livello da cui dipende','N','--post
isnull([SELECT ISNULL(sum(previoussecondaryprev), 0) 
from finyear
join fin on fin.idfin=finyear.idfin
where idupb=%<finyear.idupb>% and
      fin.paridfin=[select paridfin from fin where idfin= %<finyear.idfin>%]{I} 
]{V} ,0)
<= 
isnull(
[SELECT ISNULL(previoussecondaryprev, 0) 
from finyear
where idupb=%<finyear.idupb>% and
	idfin = [select paridfin from fin where idfin= %<finyear.idfin>%]{I} 
]{V}
,0) 
or 
([SELECT finlevel.flag 
from finlevel 
join fin 
on finlevel.nlevel = fin.nlevel 
and fin.idfin =  [select paridfin from fin where idfin= %<finyear.idfin>%]{I} 
and finlevel.ayear = %<sys_esercizio>%
]{I} & 2) = 0
or 
[select nlevel from fin where idfin= %<finyear.idfin>%]{I} =1
or
isnull(%<finyear.previoussecondaryprev>%,0)<=isnull(&<finyear.previoussecondaryprev>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON002','2','U','finyear','S','N','N','N','N',{ts '2009-02-17 13:29:21.890'},'NINO','La previsione precedente del livello %<finview.leveldescr>%  è superiore a quella del livello da cui dipende','N','isnull([SELECT ISNULL(sum(previoussecondaryprev), 0) 
from finyear
join fin on fin.idfin=finyear.idfin
where idupb=%<finyear.idupb>% and
	fin.paridfin= %<finyear.idfin>%
]{V} ,0)
<= 
isnull(%<finyear.previoussecondaryprev>%,0)
or 
([SELECT finlevel.flag 
from finlevel 
join fin 
on finlevel.nlevel = fin.nlevel 
where fin.idfin=%<finyear.idfin>%
	and finlevel.ayear =%<finyear.ayear>%
]{I} & 2) = 0

or
isnull(%<finyear.previoussecondaryprev>%,0)>=isnull(&<finyear.previoussecondaryprev>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON003','1','U','finyear','S','N','N','N','N',{ts '2007-11-15 15:34:30.190'},'XXNINO','La previsione di cassa della voce di entrata %<finview.codefin>% e UPB %<finview.codeupb>% è INSUFFICIENTE!','S','(
-- modificato da francesco da post a pre: questo valore lo conosco anche prima di salvare!!
	(
		ISNULL(%<finyear.secondaryprev>%, 0)
		+ 
		ISNULL(
			[SELECT
			ISNULL(SUM(secondaryvariation), 0) 
			FROM upbtotal 
			WHERE idfin = %<finyear.idfin>%
				and idupb = %<finyear.idupb>%
			]{V}
		,0)
		- 
		ISNULL(
			[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
			FROM upbincometotal
			WHERE idfin = %<finyear.idfin>%
			and idupb = %<finyear.idupb>%
			AND nphase = %<sys_maxincomephase>%]{V}
		,0)
	) >= 0
)

OR
([select flag from fin where idfin= %<finyear.idfin>%]{I}& 1) <> 0

OR
([select nlevel from fin where idfin= %<finyear.idfin>%]{I}  < 
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2) <>0 AND ayear = %<sys_esercizio>%]{I}
)
or
%<finyear.secondaryprev>%>&<finyear.secondaryprev>&
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON004','1','U','finyear','S','N','N','N','N',{ts '2007-11-15 15:34:49.927'},'XXNINO','La previsione di cassa della voce di spesa %<finview.codefin>% e UPB %<finview.codeupb>% è INSUFFICIENTE!','S','(
-- modificato da francesco da post a pre: questo valore lo conosco anche prima di salvare!!
	(ISNULL(%<finyear.secondaryprev>%, 0)
	+ 
	ISNULL(
		[SELECT
		ISNULL(secondaryvariation, 0) 
		FROM upbtotal 
		WHERE idfin = %<finyear.idfin>%
		and idupb = %<finyear.idupb>%]{V}
		,0)
	- 
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM upbexpensetotal
		WHERE idfin = %<finyear.idfin>%
		and idupb = %<finyear.idupb>%
		AND nphase = %<sys_maxexpensephase>%]{V}
		,0)
	 )
	 >= 0
)	
OR
([select flag from fin where idfin= %<finyear.idfin>%]{I} & 1) = 0
OR
([select nlevel from fin where idfin= %<finyear.idfin>%]{I} < 
	[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2) <>0 AND ayear = %<sys_esercizio>%]{I}
)
or
(%<finyear.secondaryprev>%>&<finyear.secondaryprev>&)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON005','1','U','finyear','S','N','N','N','S',{ts '2007-11-15 15:27:40.330'},'Nino07032012','La previsione di cassa della voce di spesa %<finview.codefin>% e UPB %<finview.codeupb>% è minore delle assegnazioni degli incassi','N','([ISNULL(%<finyear.secondaryprev>%, 0)] + 
   ISNULL(
	[SELECT ISNULL(secondaryvariation, 0) - 
	ISNULL(totproceedspart, 0) - 
	ISNULL(proceedsvariation, 0) 
	from upbtotal 
	where idfin = %<finyear.idfin>%
	and idupb = %<finyear.idupb>%

]{V},0) 
   >= 0
 )

OR
([select nlevel from fin where idfin= %<finyear.idfin>%]{I}  < 
		[SELECT MIN(nlevel) FROM finlevel WHERE (flag & 2)<>0 AND ayear = %<sys_esercizio>%]{I}
)
OR
(
%<finyear.secondaryprev>%>&<finyear.secondaryprev>&
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','flowchart','S','S','S','N','N',{ts '2013-07-15 16:17:09.057'},'nino','Non è possibile cancellare il nodo dell''organigramma, esistono voci figlie.','N','[select count(*) from flowchart where paridflowchart=%<flowchart.idflowchart>%]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM015','1','D','flowchart','S','S','S','N','N',{ts '2009-03-19 11:52:18.160'},'SARA','Cancellazione impossibile! Esistono utenti associati','S','[SELECT COUNT(*) FROM flowchartuser
WHERE idflowchart = %<flowchart.idflowchart>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR001','1','U','flowchart','S','S','S','N','N',{ts '2009-01-20 12:23:07.900'},'SA','Il nodo %<flowchart.codeflowchart>% non può essere modificato in quanto l''utente non ha i permessi per farlo','S','[SELECT COUNT(*) FROM flowchartuser
WHERE idcustomuser = %<sys_idcustomuser>%
AND %<flowchart.idflowchart>% LIKE idflowchart + ''%''
AND %<flowchart.idflowchart>% <> idflowchart]{I} > 0
OR
%<flowchart.title>% = &<flowchart.title>&
OR
%<flowchart.printingorder>% = &<flowchart.printingorder>&
OR
ISNULL(%<flowchart.idcity>%,-1) = ISNULL(&<flowchart.idcity>&,-1)
OR
ISNULL(%<flowchart.location>%,'''') = ISNULL(&<flowchart.title>&,'''')
OR
ISNULL(%<flowchart.address>%,'''') = ISNULL(&<flowchart.address>&,'''')
OR
ISNULL(%<flowchart.phone>%,'''') = ISNULL(&<flowchart.phone>&,'''')
OR
ISNULL(%<flowchart.fax>%,'''') = ISNULL(&<flowchart.fax>&,'''')')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR001','1','D','flowchartfin','S','S','S','N','N',{ts '2009-01-20 12:23:19.430'},'SA','L''utente non ha i diritti per poter cancellare l''assegnazione della voce di bilancio %<fin.codefin>% al nodo corrente','S','[SELECT COUNT(*) FROM flowchartuser WHERE idcustomuser = %<sys_idcustomuser>%]{I} = 0
OR
[SELECT COUNT(*) FROM flowchartuser
WHERE idcustomuser = %<sys_idcustomuser>%
AND %<flowchartfin.idflowchart>% LIKE idflowchart + ''%''
AND %<flowchartfin.idflowchart>% <> idflowchart]{I} > 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR001','1','I','flowchartfin','S','S','S','N','N',{ts '2009-01-20 12:23:23.353'},'SA','L''utente non ha i diritti per poter assegnare la voce di bilancio %<fin.codefin>% al nodo corrente','S','[SELECT COUNT(*) FROM flowchartuser WHERE idcustomuser = %<sys_idcustomuser>%]{I} = 0
OR
[SELECT COUNT(*) FROM flowchartuser
WHERE idcustomuser = %<sys_idcustomuser>%
AND %<flowchartfin.idflowchart>% LIKE idflowchart + ''%''
AND %<flowchartfin.idflowchart>% <> idflowchart]{I} > 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR002','1','I','flowchartfin','S','S','S','N','N',{ts '2011-03-30 17:01:16.777'},'sa','L''utente non può assegnare permessi su di una voce di bilancio in quanto non ha permessi sulla stessa.','S','[SELECT COUNT(*) FROM flowchartuser WHERE idcustomuser = %<sys_idcustomuser>%]{I} = 0
OR
[SELECT COUNT(*)
FROM flowchartfin ff
JOIN flowchartuser fu
ON ff.idflowchart = fu.idflowchart
WHERE fu.idcustomuser = %<sys_idcustomuser>%
AND %<flowchartfin.idfin>% LIKE ff.idfin + ''%'']{I} > 0

OR 

[SELECT COUNT(*)
FROM flowchartrestrictedfunction ff
JOIN flowchartuser fu ON ff.idflowchart = fu.idflowchart
join restrictedfunction r on ff.idrestrictedfunction=r.idrestrictedfunction
WHERE fu.idcustomuser = %<sys_idcustomuser>%
AND r.variablename=''all_fin'']{I} > 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR001','1','D','flowchartmanager','S','S','S','N','N',{ts '2009-01-20 12:23:29.353'},'SA','L''utente non ha i diritti per poter cancellare l''assegnazione del responsabile %<manager.title>% al nodo corrente','S','[SELECT COUNT(*) FROM flowchartuser WHERE idcustomuser = %<sys_idcustomuser>%]{I} = 0
OR
[SELECT COUNT(*) FROM flowchartuser
WHERE idcustomuser = %<sys_idcustomuser>%
AND %<flowchartmanager.idflowchart>% LIKE idflowchart + ''%''
AND %<flowchartmanager.idflowchart>% <> idflowchart]{I} > 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR001','1','I','flowchartmanager','S','S','S','N','N',{ts '2009-01-20 12:23:33.087'},'SA','L''utente non ha i diritti per poter assegnare il responsabile %<manager.title>% al nodo corrente','S','[SELECT COUNT(*) FROM flowchartuser WHERE idcustomuser = %<sys_idcustomuser>%]{I} = 0
OR
[SELECT COUNT(*) FROM flowchartuser
WHERE idcustomuser = %<sys_idcustomuser>%
AND %<flowchartmanager.idflowchart>% LIKE idflowchart + ''%''
AND %<flowchartmanager.idflowchart>% <> idflowchart]{I} > 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR002','1','I','flowchartmanager','S','S','S','N','N',{ts '2011-03-30 17:01:38.243'},'sa','L''utente non può assegnare permessi su di una voce di bilancio in quanto non ha permessi sulla stessa.','S','[SELECT COUNT(*) FROM flowchartuser WHERE idcustomuser = %<sys_idcustomuser>%]{I} = 0
OR
[SELECT COUNT(*)
FROM flowchartmanager ff
JOIN flowchartuser fu
ON ff.idflowchart = fu.idflowchart
WHERE fu.idcustomuser = %<sys_idcustomuser>%
AND %<flowchartmanager.idman>% = ff.idman]{I} > 0


OR 

[SELECT COUNT(*)
FROM flowchartrestrictedfunction ff
JOIN flowchartuser fu ON ff.idflowchart = fu.idflowchart
join restrictedfunction r on ff.idrestrictedfunction=r.idrestrictedfunction
WHERE fu.idcustomuser = %<sys_idcustomuser>%
AND r.variablename=''all_man'']{I} > 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR002','1','I','flowchartrestrictedfunction','S','S','S','N','N',{ts '2009-01-20 12:23:50.040'},'SA','L''utente non ha i diritti per assegnare la funzione ad un suo dipendente','S','[SELECT COUNT(*) FROM flowchartuser WHERE idcustomuser = %<sys_idcustomuser>%]{I} = 0
OR
[SELECT COUNT(*) FROM flowchartrestrictedfunction FF
JOIN restrictedfunction RF
ON RF.idrestrictedfunction = FF.idrestrictedfunction
WHERE FF.idflowchart IN (SELECT idflowchart FROM flowchartuser WHERE idcustomuser = %<sys_idcustomuser>% AND stop IS NULL)
AND RF.idrestrictedfunction = %<flowchartrestrictedfunction.idrestrictedfunction>%]{I} > 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR001','1','D','flowchartupb','S','S','S','N','N',{ts '2009-01-20 12:23:58.367'},'SA','L''utente non ha i diritti per poter cancellare l''assegnazione della U.P.B. %<upb.codeupb>% al nodo corrente','S','[SELECT COUNT(*) FROM flowchartuser WHERE idcustomuser = %<sys_idcustomuser>%]{I} = 0
OR
[SELECT COUNT(*) FROM flowchartuser
WHERE idcustomuser = %<sys_idcustomuser>%
AND %<flowchartupb.idflowchart>% LIKE idflowchart + ''%''
AND %<flowchartupb.idflowchart>% <> idflowchart]{I} > 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR001','1','I','flowchartupb','S','S','S','N','N',{ts '2009-01-20 12:24:02.073'},'SA','L''utente non ha i diritti per poter assegnare la U.P.B. %<upb.codeupb>% al nodo corrente','S','[SELECT COUNT(*) FROM flowchartuser WHERE idcustomuser = %<sys_idcustomuser>%]{I} = 0
OR
[SELECT COUNT(*) FROM flowchartuser
WHERE idcustomuser = %<sys_idcustomuser>%
AND %<flowchartupb.idflowchart>% LIKE idflowchart + ''%''
AND %<flowchartupb.idflowchart>% <> idflowchart]{I} > 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR002','1','I','flowchartupb','S','S','S','N','N',{ts '2011-03-30 17:02:08.463'},'sa','L''utente non può assegnare permessi su di una voce di bilancio in quanto non ha permessi sulla stessa.','S','[SELECT COUNT(*) FROM flowchartuser WHERE idcustomuser = %<sys_idcustomuser>%]{I} = 0
OR
[SELECT COUNT(*)
FROM flowchartupb ff
JOIN flowchartuser fu
ON ff.idflowchart = fu.idflowchart
WHERE fu.idcustomuser = %<sys_idcustomuser>%
AND %<flowchartupb.idupb>% = ff.idupb]{I} > 0


OR 

[SELECT COUNT(*)
FROM flowchartrestrictedfunction ff
JOIN flowchartuser fu ON ff.idflowchart = fu.idflowchart
join restrictedfunction r on ff.idrestrictedfunction=r.idrestrictedfunction
WHERE fu.idcustomuser = %<sys_idcustomuser>%
AND r.variablename=''all_upb'']{I} > 0

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR001','1','D','flowchartuser','S','S','S','N','N',{ts '2009-01-20 12:24:10.917'},'SA','L''utente non ha i diritti per poter cancellare l''assegnazione dell''utente %<flowchartuser.idcustomuser>% al nodo corrente','S','[SELECT COUNT(*) FROM flowchartuser WHERE idcustomuser = %<sys_idcustomuser>%]{I} = 0
OR
[SELECT COUNT(*) FROM flowchartuser
WHERE idcustomuser = %<sys_idcustomuser>%
AND %<flowchartuser.idflowchart>% LIKE idflowchart + ''%''
AND %<flowchartuser.idflowchart>% <> idflowchart]{I} > 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR001','1','I','flowchartuser','S','S','S','N','N',{ts '2009-01-20 12:24:15.150'},'SA','L''utente non ha i diritti per poter assegnare l''utente %<flowchartuser.idcustomuser>% al nodo corrente','S','[SELECT COUNT(*) FROM flowchartuser WHERE idcustomuser = %<sys_idcustomuser>%]{I} = 0
OR
[SELECT COUNT(*) FROM flowchartuser
WHERE idcustomuser = %<sys_idcustomuser>%
AND %<flowchartuser.idflowchart>% LIKE idflowchart + ''%''
AND %<flowchartuser.idflowchart>% <> idflowchart]{I} > 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR003','1','I','flowchartuser','S','S','S','N','N',{ts '2009-03-28 09:54:06.487'},'NINO','Il nodo corrente non può essere marcato di default perché ne esiste già un altro marcato come tale','N','[SELECT COUNT(*) FROM flowchartuser FU 
 join flowchart F on F.idflowchart=FU.idflowchart 
WHERE FU.idcustomuser = %<flowchartuser.idcustomuser>%
AND F.ayear=%<sys_esercizio>%
AND FU.flagdefault = ''S''
]{I} <= 1
OR
%<flowchartuser.flagdefault>% = ''N''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR003','1','U','flowchartuser','S','S','S','N','N',{ts '2009-04-09 10:54:28.400'},'SARA','Il nodo corrente non può essere marcato di default perché ne esiste già un altro marcato come tale','N','[SELECT COUNT(*) FROM flowchartuser FU 
 join flowchart F on F.idflowchart=FU.idflowchart 
WHERE FU.idcustomuser = %<flowchartuser.idcustomuser>%
AND FU.idflowchart <> %<flowchartuser.idflowchart>%
AND F.ayear=%<sys_esercizio>%
AND FU.flagdefault = ''S''
]{I} = 0
OR
%<flowchartuser.flagdefault>% = ''N''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','foreigncountry','S','S','S','N','N',{ts '2008-02-22 11:57:18.857'},'SARA','Cancellazione Impossibile! Esistono tappe delle missioni collegate alla località %<description>%','S','[execute count_table_field ''itinerationlap'',''idforeigncountry'',
%<foreigncountry.idforeigncountry>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','foreigncountry','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Località %<idforeigncountry>% già esistente','S','[(SELECT count(*) 
from foreigncountry 
where idforeigncountry = %<foreigncountry.idforeigncountry>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','foreigncountry','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione della località già esistente','S','[(SELECT count(*) 
from foreigncountry 
where description = %<foreigncountry.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','foreigncountry','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione della località già esistente','S','[(SELECT count(*) 
from foreigncountry 
where description = %<foreigncountry.description>% 
and idforeigncountry <>  %<foreigncountry.idforeigncountry>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','foreigngroup','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Gruppo estero %<foreigngroupnumber>% con data di decorrenza a partire da %<start>% già esistente','S','[(SELECT count(*) 
from foreigngroup 
where start = %<foreigngroup.start>% 
and foreigngroupnumber = %<foreigngroup.foreigngroupnumber>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','D','income','S','S','S','N','N',{ts '2007-12-15 09:44:20.077'},'NINO','Il movimento di entrata %<incomeview.phase>% n. %<incomeview.nmov>% / %<incomeview.ymov>% non può essere cancellato. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','1','D','income','S','S','S','N','N',{ts '2010-11-05 16:13:17.327'},'sa','L''utente non è abilitato alla cancellazione di fasi finanziarie precedenti alla fase dell'' Accertamento giuridico.','N','%<income.nphase>% >= %<sys_assessmentphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''pre_accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','2','D','income','S','S','S','N','N',{ts '2010-11-05 16:11:11.920'},'sa','L''utente non è abilitato alla cancellazione di fasi finanziarie successive alla fase dell'' Accertamento giuridico.','N','%<income.nphase>% <= %<sys_assessmentphase>%

OR 

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''post_accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL






')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','3','D','income','S','S','S','N','N',{ts '2010-11-05 16:11:26.703'},'sa','L''utente non è abilitato alla cancellazione di fasi finanziarie equivalenti all'' Accertamento giuridico.','N','%<income.nphase>% <> %<sys_assessmentphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','income','S','S','S','S','N',{ts '2007-09-13 11:58:59.813'},'NINO','Cancellazione Impossibile! Esistono assegnazioni di crediti collegate al movimento di entrata %<nmov>% / %<ymov>%','N','--post
[(SELECT count(*) 
from creditpart 
where idinc = %<income.idinc>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','income','S','S','S','N','N',{ts '2007-09-13 11:59:07.703'},'NINO','Cancellazione Impossibile! Esistono movimenti di entrata dipendenti dal movimento di entrata %<nmov>% / %<ymov>%','N','--post
[(SELECT count(*) 
from income 
where parentidinc = %<income.idinc>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','income','S','S','S','N','N',{ts '2007-09-13 11:59:14.063'},'NINO','Cancellazione Impossibile! Esistono variazioni di entrata collegati al movimento di entrata %<nmov>% / %<ymov>%','N','--post
[(SELECT count(*) 
from incomevar 
where idinc = %<income.idinc>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','income','S','S','S','N','S',{ts '2007-09-13 11:59:19.063'},'NINO','Cancellazione Impossibile! Esistono assegnazioni di incassi collegate al movimento di entrata %<nmov>% / %<ymov>%','N','--post
[(SELECT count(*) 
from proceedspart 
where idinc = %<income.idinc>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','5','D','income','S','S','S','N','N',{ts '2007-09-13 11:59:28.250'},'NINO','Cancellazione Impossibile! Esistono buoni di scarico collegati al movimento di entrata %<nmov>% / %<ymov>%','S','[(SELECT count(*) 
from assetunloadincome
where idinc = %<income.idinc>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR025','1','I','income','S','S','S','N','N',{ts '2009-01-10 15:26:56.983'},'SARA','Operazione non consentita per l''anagrafica %<registry.title>% perchè di tipo Anagrafica non utilizzabile.','S','(SELECT registryclass.idregistryclass FROM registry 
     JOIN registryclass ON registry.idregistryclass = registryclass.idregistryclass
WHERE registry.idreg =%<income.idreg>%  )
<> ''25''  
-- anagrafiche non utilizzabili')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','I','income','S','S','S','N','N',{ts '2007-12-15 09:44:06.827'},'NINO','Il movimento di entrata %<incomeview.phase>% n. %<incomeview.nmov>% / %<incomeview.ymov>% non può essere inserito. Esercizio  %<esercizio>% chiuso','N','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN005','1','I','income','S','S','S','N','N',{ts '2008-03-21 13:16:02.250'},'SA','Non sono state effettuate sul movimento %<income.ymov>% / %<income.nmov>% tutte le classificazioni obblligatorie','N','--post
(
[SELECT COUNT(*) FROM sortingkind T
WHERE T.nphaseincome = %<income.nphase>%
AND (T.flag&1)<>0
AND %<sys_esercizio>% between ISNULL(T.start,1900) AND ISNULL(T.stop,2099)  
AND
(
	ISNULL(
		(SELECT ISNULL(SUM(amount),0)
		FROM incomesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind= T.idsorkind
		AND I.idinc= %<income.idinc>%
		AND ayear = %<sys_esercizio>%)
	,0)
	<
	[SELECT curramount FROM incometotal
	WHERE ayear = %<sys_esercizio>%  
	AND   idinc= %<income.idinc>%]{V}
)
]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM002','1','I','income','S','S','S','N','N',{ts '2007-10-09 10:42:35.327'},'NINO','Il versante è assente','S','%<sys_incomeregphase>%<>%<income.nphase>%
or 
%<income.idreg>% is not NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM008','1','I','income','S','S','S','N','N',{ts '2007-10-03 17:02:56.427'},'SA','Non è consentito immettere movimenti di entrata di competenza di esercizi diversi da %<ymov>%.','S','%<income.ymov>% = %<sys_esercizio>%
OR
[SELECT MIN(ayear) 
FROM accountingyear]{I} = %<sys_esercizio>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM009','1','I','income','S','S','S','N','N',{ts '2007-09-25 14:05:26.233'},'NINO','E'' già presente un documento del versante %<registry.title>% con il numero %<doc>% emesso in data %<docdate>% ','S','[SELECT count(*) 
from income 
where nphase = %<income.nphase>% 
and idreg = %<income.idreg>% 
and doc = %<income.doc>% 
and docdate = %<income.docdate>% 
]{I} = 0
OR
(%<income.doc>% IS NULL)
OR
(%<income.docdate>% IS NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM023','1','I','income','S','S','S','N','N',{ts '2010-03-17 10:14:23.533'},'SARA','Non possono essere generati nuovi automatismi sul movimento di spesa in quanto ne esistono di precedenti','S','([SELECT COUNT(*) FROM income
WHERE (idpayment = %<income.idpayment>%) 
AND (autokind = %<income.autokind>%)]{I} = 0)
AND
([SELECT COUNT(*) FROM expense
WHERE idpayment = %<income.idpayment>%
AND autokind = %<income.autokind>%]{I} = 0)

OR

(
[(SELECT autokind FROM income
WHERE idinc =  %<income.parentidinc>%)]{I} 
IS NOT NULL 
AND 
  %<income.nphase>% > 1 
)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM039','1','I','income','S','S','S','N','N',{ts '2007-10-13 19:50:02.267'},'NINO','Il responsabile scelto:%<incomeview.manager>%, è differente da quello dell''UPB: %<incomeview.upb>%.','N','(ISNULL([SELECT idman
FROM upb 
WHERE idupb = 
		[SELECT idupb 
		FROM incomeyear 
		WHERE idinc = %<income.idinc>% 
		AND ayear = %<sys_esercizio>%]{C} 
	   ]{I},0)
= 0)
OR
(isnull(%<income.idman>%,0) = (ISNULL([SELECT idman
FROM upb 
WHERE idupb = 
		[SELECT idupb 
		FROM incomeyear 
		WHERE idinc = %<income.idinc>% 
		AND ayear = %<sys_esercizio>%]{C} 
	   ]{I},0)))
OR
isnull(%<income.idman>%,0) =0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM076','1','I','income','S','S','S','N','N',{ts '2008-11-25 14:42:07.453'},'NINO','Errore nell''applicazione, dati incoerenti nella gerarchia dei movimenti.(Entrata/Versante)','N','%<income.nphase>% <= %<sys_incomeregphase>%

OR
%<income.idreg>% =
[(SELECT idreg from income where idinc=%<income.parentidinc>%)]{I}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM087','1','I','income','S','S','S','N','N',{ts '2010-03-25 10:12:45.903'},'SARA','Il movimento di entrata %<incomeview.phase>% n. %<incomeview.nmov>% / %<incomeview.ymov>%  ha una data contabile anteriore rispetto alle fasi precedenti.','N','[SELECT COUNT(*) 
FROM income 
join incomelink 
	ON income.idinc= incomelink.idparent
WHERE incomelink.idchild =%<income.idinc>%
AND   income.adate > %<income.adate>%
]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','1','I','income','S','S','S','N','N',{ts '2010-11-05 16:11:35.577'},'sa','L''utente non è abilitato all''inserimento di fasi finanziarie precedenti alla fase dell''Accertamento giuridico.','N','%<income.nphase>% >= %<sys_assessmentphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''pre_accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','2','I','income','S','S','S','N','N',{ts '2010-11-05 16:11:45.797'},'sa','L''utente non è abilitato all''inserimento di fasi finanziarie equivalenti all''Accertamento giuridico.','N','%<income.nphase>% <> %<sys_assessmentphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','3','I','income','S','S','S','N','N',{ts '2010-11-05 16:11:52.030'},'sa','L''utente non è abilitato all''inserimento di fasi finanziarie successive alla fase dell''Accertamento giuridico.','N','%<income.nphase>% <= %<sys_assessmentphase>%

OR 

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''post_accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL






')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM003','1','I','income','S','S','S','N','N',{ts '2007-08-25 09:12:21.610'},'NINO','ID entrata malformato','N','( 
	(%<income.nphase>% <= %<sys_maxincomephase>%)
	AND
	(
		(%<income.parentidinc>% IS NULL) OR 
             ( [SELECT nphase from income where idinc= %<income.parentidinc>%]{I} =
                       %<income.nphase>%-1
		 )
	)
	AND
	(
		(%<income.nphase>% = 1) OR (%<income.parentidinc>% is not null)
	) 
	AND 
	(
	      (%<income.parentidinc>%  IS NULL) OR 
		(EXISTS (SELECT idinc FROM income S WHERE S.idinc= %<income.parentidinc>% ))
  	)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM014','1','I','income','S','S','S','N','N',{ts '2009-02-26 15:19:27.453'},'ASSISTENZA','Non è possibile salvare un movimento di entrata con numero negativo','N','%<income.nmov>%>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR025','1','U','income','S','S','S','N','N',{ts '2009-01-10 15:26:59.827'},'SARA','Operazione non consentita per l''anagrafica %<registry.title>% perchè di tipo Anagrafica non utilizzabile.','S','(SELECT registryclass.idregistryclass FROM registry 
     JOIN registryclass ON registry.idregistryclass = registryclass.idregistryclass
WHERE registry.idreg =%<income.idreg>%  )
<> ''25''  
-- anagrafiche non utilizzabili')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','U','income','S','S','S','N','N',{ts '2007-12-15 09:47:35.327'},'NINO','Il movimento di entrata %<incomeview.phase>% n. %<incomeview.nmov>% / %<incomeview.ymov>% non può essere modificato. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6
OR
(
	(%<income.adate>% = &<income.adate>&)
	AND (ISNULL(%<income.expiration>%, {D ''1900-01-01''}) =ISNULL(&<income.expiration>&, {D ''1900-01-01''}))
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE001','2','U','income','S','N','N','N','N',{ts '2007-10-03 17:01:57.973'},'SA','La previsione di cassa della voce %<finview.finpart>% %<fin.codefin>% è NEGATIVA!','S','(
[select flagsecondaryprev from finvar where yvar=%<finvardetail.yvar>% and nvar=%<finvardetail.nvar>%]{C}
<>''S'') 
or
(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
		from upbtotal
		where idfin = %<finvardetail.idfin>%
		and idupb = %<finvardetail.idupb>%
]{V} 
	- 
	ISNULL(&<finvardetail.amount>&, 0) 
	+ 
	ISNULL(%<finvardetail.amount>%, 0)
	>= 0
 ) 
or
%<finvardetail.amount>%>&<finvardetail.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN005','1','U','income','S','S','S','N','N',{ts '2008-03-21 13:17:31.733'},'SA','Non sono state effettuate sul movimento %<income.ymov>% / %<income.nmov>% tutte le classificazioni obblligatorie','N','--post
(
[SELECT COUNT(*) FROM sortingkind T
WHERE T.nphaseincome = %<income.nphase>%
AND (T.flag&1)<>0
AND %<sys_esercizio>% between ISNULL(T.start,1900) AND ISNULL(T.stop,2099)  
AND
(
	ISNULL(
		(SELECT ISNULL(SUM(amount),0)
		FROM incomesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind= T.idsorkind
		AND I.idinc= %<income.idinc>%
		AND ayear = %<sys_esercizio>%)
	,0)
	<
	[SELECT curramount FROM incometotal
	WHERE ayear = %<sys_esercizio>%  
	AND   idinc= %<income.idinc>%]{V}
)
]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM002','1','U','income','S','S','S','N','N',{ts '2007-08-25 09:46:17.407'},'NINO','Il versante è assente','S','%<sys_incomeregphase>%<>%<income.nphase>%
or 
%<income.idreg>% is not NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM007','1','U','income','S','S','S','N','N',{ts '2011-09-15 12:24:50.063'},'sara','Il movimento finanziario è incluso nella reversale di incasso %<incomeview.npro>% / %<incomeview.ypro>% già trasmessa e quindi  non può essere corretto','S','(
  (%<income.adate>% = &<income.adate>&)
  AND
 (ISNULL(%<income.expiration>%,{d ''1900-01-01''}) = ISNULL(&<income.expiration>&,{d ''1900-01-01''}))
  AND
 (ISNULL(%<income.idreg>%,0) = ISNULL(&<income.idreg>&,0))
AND
 (ISNULL(%<income.description>%,'''') = ISNULL(&<income.description>&,''''))
)
OR
(%<income.nphase>% <> %<sys_maxincomephase>%)
OR 
( ISNULL([SELECT proceedstransmission.kproceedstransmission  
	from proceedstransmission 
	JOIN proceeds
		ON proceedstransmission.kproceedstransmission =  proceeds.kproceedstransmission
	JOIN incomelast 
		ON proceeds.kpro= incomelast.kpro
      WHERE incomelast.idinc =%<income.idinc>%]{I},0)=0
)
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds 
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<income.idinc>%]{C},''N'' )= ''S'')
AND
[(SELECT count(*)  from incomevar  where idinc = %<income.idinc>%
AND kproceedstransmission is null AND autokind = 22)]{I} <> 0
AND
-- unicredit non permette le variazioni di dati contabili ma solo del Siope
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM incomelast
JOIN proceeds 
	ON proceeds.kpro = incomelast.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<income.idinc>%]{C},'''' )<> ''02008''
)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM009','1','U','income','S','S','S','N','N',{ts '2007-09-25 14:05:06.280'},'NINO','E'' già presente un documento del versante %<registry.title>% con il numero %<doc>% emesso in data %<docdate>% ','S','[SELECT count(*) 
from income 
where nphase = %<income.nphase>% 
and idreg = %<income.idreg>% 
and doc = %<income.doc>% 
and docdate = %<income.docdate>% 
and idinc <> %<income.idinc>%]{I} = 0
OR
(%<income.doc>% IS NULL)
OR
(%<income.docdate>% IS NULL)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM011','1','U','income','S','S','S','N','N',{ts '2007-12-05 10:58:51.480'},'SARA','Il versante non può essere modificato poiché è stato emessa una reversale di incasso ed esiste un criterio di raggruppamento degli incassi per versante','S','
[SELECT COUNT(*) 
FROM incomelast 
join incomelink on incomelast.idinc= incomelink.idchild
WHERE incomelink.idparent =%<income.idinc>%
	AND incomelast.kpro IS NOT NULL]{I} = 0 
or 
[SELECT proceeds_flag & 4 from config where ayear = %<sys_esercizio>%]{I} = 0
or 
ISNULL(&<income.idreg>&,0) = ISNULL(%<income.idreg>%,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM012','1','U','income','S','S','S','N','N',{ts '2007-12-05 11:00:29.577'},'SARA','Il responsabile del movimento non può essere modificato poiché è stata emessa una reversale di incasso ed esiste un criterio di raggruppamento degli incassi per responsabile.','S','
[SELECT COUNT(*) 
FROM incomelast WHERE incomelast.idinc =%<income.idinc>%
	AND incomelast.kpro IS NOT NULL]{I} = 0 

or 
[SELECT proceeds_flag & 16 from config where ayear = %<sys_esercizio>%]{I} = 0
or 
ISNULL(&<income.idman>&,0) = ISNULL(%<income.idman>%,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM039','1','U','income','S','S','S','N','N',{ts '2007-10-13 19:50:07.703'},'NINO','Il responsabile del movimento:%<incomeview.manager>%, non è associato all''UPB : %<incomeview.upb>%.','N','ISNULL(&<income.idman>&,0) = ISNULL(%<income.idman>%,0)
OR
(ISNULL([SELECT idman
FROM upb 
WHERE idupb = 
		[SELECT idupb 
		FROM incomeyear 
		WHERE idinc = %<income.idinc>% 
		AND ayear = %<sys_esercizio>%]{C} 
	   ]{I},0)
= 0)
OR
(ISNULL(%<income.idman>%,0) = (ISNULL([SELECT idman
FROM upb 
WHERE idupb = 
		[SELECT idupb 
		FROM incomeyear 
		WHERE idinc = %<income.idinc>% 
		AND ayear = %<sys_esercizio>%]{C} 
	   ]{I},0)))
OR
isnull(%<income.idman>%,0) =0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM048','1','U','income','S','S','S','N','N',{ts '2011-09-20 13:00:06.233'},'sara','Non si può modificare il percipiente del movimento di entrata n. %<income.nmov>%/%<income.ymov>% in quanto esiste un movimento figlio inserito in una reversale già trasmessa.','S','[SELECT COUNT(*) 
FROM income 
join incomelast on income.idinc= incomelast.idinc
JOIN proceeds 
	ON proceeds.kpro = incomelast.kpro 
join incomelink 
	on incomelink.idchild= income.idinc
	WHERE incomelink.idparent= %<income.idinc>% 
	AND kproceedstransmission IS NOT NULL ]{I} = 0 
OR
ISNULL(&<income.idreg>&,0) = ISNULL(%<income.idreg>%,0)
OR
-- Controlla che il cassiere del singolo incasso non abbia abilitato il mandato informatico
[SELECT COUNT(*)
FROM income 
JOIN incomelast 
	ON income.idinc=incomelast.idinc 
JOIN proceeds  
	ON incomelast.kpro = proceeds.kpro
JOIN  incomelink 
	ON incomelink.idchild= income.idinc
	AND incomelink.idparent = %<income.idinc>% 
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE ISNULL(treasurer.flagedisp,''N'')  = ''N''
]{I}= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM048','2','U','income','S','S','S','N','N',{ts '2011-09-19 16:48:12.140'},'sara','Nella gestione dell''ordinativo informatico non si può modificare il percipiente del movimento di entrata n. %<income.nmov>%/%<income.ymov>% in quanto esiste un movimento figlio inserito in una reversale già trasmessa.','S','[SELECT COUNT(*) 
FROM income 
join incomelast on income.idinc= incomelast.idinc
JOIN proceeds 
	ON proceeds.kpro = incomelast.kpro 
WHERE kproceedstransmission IS NOT NULL
AND incomelast.idinc = %<income.idinc>% ]{I} = 0 
OR
ISNULL(&<income.idreg>&,0) = ISNULL(%<income.idreg>%,0)
OR
(%<income.nphase>% <> %<sys_maxincomephase>%)
OR 
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM income 
JOIN incomelast 
	on income.idinc=incomelast.idinc 
JOIN proceeds  
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<income.idinc>%
 ]{C},''N'' )= ''S'')
AND
[(SELECT COUNT(*)  FROM incomevar  WHERE idinc = %<income.idinc>%
AND kproceedstransmission IS NULL AND autokind = 22)]{I} <> 0
AND
-- unicredit non permette le variazioni di dati contabili ma solo del Siope
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM incomelast
JOIN proceeds
	ON proceeds.kpro = incomelast.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<income.idinc>%]{C},'''' )<> ''02008''
)
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM057','1','U','income','S','S','S','N','N',{ts '2012-07-26 15:11:21.323'},'sa','Il movimento di entrata %<income.ymov>% / %<income.nmov>% risulta già esitato','S','

(%<income.nphase>% <> %<sys_maxincomephase>%)
OR
(
%<income.idreg>% = &<income.idreg>&
AND 
%<income.description>% = &<income.description>&
)
OR
(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 
	 WHERE idinc= %<income.idinc>%]{V}
	,0) = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM076','1','U','income','S','S','S','N','N',{ts '2008-11-25 14:34:28.233'},'NINO','Errore nell''applicazione, dati incoerenti nella gerarchia dei movimenti.(Entrata/Versante)','N','%<income.nphase>% <= %<sys_incomeregphase>%

OR
%<income.idreg>% =
[(SELECT idreg from income where idinc=%<income.parentidinc>%)]{I}

OR

%<income.idreg>%=&<income.idreg>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM087','1','U','income','S','S','S','N','N',{ts '2010-03-25 10:14:05.033'},'SARA','Il movimento di entrata %<incomeview.phase>% n. %<incomeview.nmov>% / %<incomeview.ymov>%  ha una data contabile anteriore rispetto alle fasi precedenti.','N','ISNULL( %<income.adate>%,{D ''1900-01-01''}) = 
ISNULL( &<income.adate>&,{D ''1900-01-01''})
OR
[SELECT COUNT(*) 
FROM income 
join incomelink 
	ON income.idinc= incomelink.idparent
WHERE incomelink.idchild =%<income.idinc>%
AND   income.adate > %<income.adate>%
]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM087','2','U','income','S','S','S','N','N',{ts '2010-03-25 10:10:46.957'},'SARA','Il movimento di entrata %<incomeview.phase>% n. %<incomeview.nmov>% / %<incomeview.ymov>%   ha una data contabile più recente rispetto alle fasi successive.','N','ISNULL( %<income.adate>%,{D ''1900-01-01''}) = 
ISNULL( &<income.adate>&,{D ''1900-01-01''})
OR
[SELECT COUNT(*) 
FROM income 
join incomelink 
	ON income.idinc= incomelink.idchild
WHERE incomelink.idparent =%<income.idinc>%
AND   income.adate < %<income.adate>%
]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM098','3','U','income','S','S','S','N','N',{ts '2011-09-27 14:19:35.983'},'sara','Non si può modificare il codice CUP del movimento di entrata n. %<income.nmov>%/%<income.ymov>% in quanto esiste un movimento figlio inserito in una reversale già trasmessa.','S','[SELECT COUNT(*) 
FROM income 
join incomelast on income.idinc= incomelast.idinc
JOIN proceeds 
	ON proceeds.kpro = incomelast.kpro 
join incomelink 
	on incomelink.idchild= income.idinc
	WHERE incomelink.idparent= %<income.idinc>% 
	AND kproceedstransmission IS NOT NULL ]{I} = 0 
OR
ISNULL(&<income.cupcode>&,0) = ISNULL(%<income.cupcode>%,0)
OR
-- Controlla che il cassiere del singolo incasso non abbia abilitato il mandato informatico
[SELECT COUNT(*)
FROM income 
JOIN incomelast 
	ON income.idinc=incomelast.idinc 
JOIN proceeds  
	ON incomelast.kpro = proceeds.kpro
JOIN  incomelink 
	ON incomelink.idchild= income.idinc
	AND incomelink.idparent = %<income.idinc>% 
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE ISNULL(treasurer.flagedisp,''N'')  = ''N''
]{I}= 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM098','4','U','income','S','S','S','N','N',{ts '2011-09-27 15:35:02.000'},'sara','Nella gestione dell''odinativo informatico non si può modificare il codice CUP del movimento di entrata n. %<income.nmov>% del %<income.ymov>% in quanto esiste un movimento figlio inserito in una reversale già trasmessa.','S','-- L''idinc è quello dell''accertamento
-- Il controllo deve agire sull''incasso
[SELECT COUNT(*) 
FROM income 
join incomelast 
	on income.idinc=incomelast.idinc
JOIN proceeds 
	ON proceeds.kpro = incomelast.kpro 
join incomelink 
	on incomelink.idchild= income.idinc
WHERE incomelink.idparent = %<income.idinc>% 
	AND kproceedstransmission IS NOT NULL ]{I} = 0 
OR
ISNULL(&<income.cupcode>&,0) = ISNULL(%<income.cupcode>%,0)
OR
(
-- non esistono incassi trasmessi a unicredit
[SELECT COUNT(*)
FROM income 
JOIN incomelast 
	ON income.idinc=incomelast.idinc 
JOIN proceeds  
	ON incomelast.kpro = proceeds.kpro
JOIN  incomelink 
	ON incomelink.idchild= income.idinc
	AND incomelink.idparent = %<income.idinc>% 
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE ISNULL(treasurer.idbank,'''')  = ''02008''
AND proceeds.kproceedstransmission IS NOT NULL
]{I}= 0
AND
-- non esistono incassi trasmessi privi di  variazioni
-- di modifica dati
[SELECT COUNT(*)
FROM income 
JOIN incomelast 
	ON income.idinc=incomelast.idinc 
JOIN proceeds  
	ON incomelast.kpro = proceeds.kpro
JOIN  incomelink 
	ON incomelink.idchild= income.idinc
	AND incomelink.idparent = %<income.idinc>% 
LEFT OUTER JOIN incomevar
	ON incomevar.idinc = incomelast.idinc
	AND ISNULL(incomevar.autokind,0) = 22 
	AND incomevar.kproceedstransmission IS NULL
WHERE proceeds.kproceedstransmission IS  NOT NULL
	AND incomevar.idinc IS NULL
]{I}= 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','1','U','income','S','S','S','N','N',{ts '2010-11-05 16:11:58.610'},'sa','L''utente non è abilitato alla modifica di fasi finanziarie precedenti alla fase dell''Accertamento giuridico.','N','%<income.nphase>%  >= %<sys_assessmentphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''pre_accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','2','U','income','S','S','S','N','N',{ts '2010-11-05 16:12:04.360'},'sa','L''utente non è abilitato alla modifica di fasi finanziarie successive alla fase dell''Accertamento giuridico.','N','%<income.nphase>%  <= %<sys_assessmentphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''post_accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','3','U','income','S','S','S','N','N',{ts '2010-11-05 16:12:11.467'},'sa','L''utente non è abilitato alla modifica di fasi finanziarie equivalenti all''Accertamento giuridico.','N','%<income.nphase>% <> %<sys_assessmentphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM005','1','D','incomeestimate','S','S','S','N','N',{ts '2007-09-28 14:16:27.717'},'NINO','Il movimento di entrata n. %<income.nmov>% / %<income.ymov>% contabilizza alcuni dettagli del contratto %<incomeestimate.idestimkind>%  n. %<incomeestimate.nestim>% / %<incomeestimate.yestim>% che non possono essere decontabilizzati in quanto collegati a  dettagli  fatture già incassati.','S','([SELECT COUNT(*) 
FROM estimatedetail 
WHERE estimatedetail.idestimkind = %<incomeestimate.idestimkind>% 
AND estimatedetail.yestim = %<incomeestimate.yestim>% 
AND estimatedetail.nestim = %<incomeestimate.nestim>% 
AND estimatedetail.idinc_taxable = %<incomeestimate.idinc>%
]{I} = 0)
OR
([SELECT COUNT(*) 
FROM estimatedetail 
JOIN invoicedetail 
ON   estimatedetail.idestimkind= invoicedetail.idestimkind and
     estimatedetail.yestim = invoicedetail.yestim and
     estimatedetail.nestim = invoicedetail.nestim and
     estimatedetail.rownum = invoicedetail.estimrownum 
JOIN incomeinvoice 
ON   incomeinvoice.idinvkind = invoicedetail.idinvkind and
     incomeinvoice.yinv = invoicedetail.yinv and
     incomeinvoice.ninv = invoicedetail.ninv
JOIN incomelink
ON incomelink.idchild = incomeinvoice.idinc
WHERE incomelink.idparent = %<incomeestimate.idinc>%
AND estimatedetail.idestimkind = %<incomeestimate.idestimkind>% 
AND estimatedetail.yestim = %<incomeestimate.yestim>% 
AND estimatedetail.nestim = %<incomeestimate.nestim>% 
]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM005','2','D','incomeestimate','S','S','S','N','N',{ts '2007-09-28 14:16:35.327'},'NINO','Il movimento di entrata n. %<income.nmov>% / %<income.ymov>% contabilizza alcuni dettagli del contratto %<incomeestimate.idestimkind>%  n. %<incomeestimate.nestim>% / %<incomeestimate.yestim>% che non possono essere decontabilizzati in quanto collegati a  dettagli  fatture già incassati.','S','([SELECT COUNT(*) 
FROM estimatedetail 
WHERE estimatedetail.idestimkind = %<incomeestimate.idestimkind>% 
AND estimatedetail.yestim = %<incomeestimate.yestim>% 
AND estimatedetail.nestim = %<incomeestimate.nestim>% 
AND estimatedetail.idinc_iva = %<incomeestimate.idinc>%
]{I} = 0)
OR
([SELECT COUNT(*) 
FROM estimatedetail 
JOIN invoicedetail 
ON   estimatedetail.idestimkind= invoicedetail.idestimkind and
     estimatedetail.yestim = invoicedetail.yestim and
     estimatedetail.nestim = invoicedetail.nestim and
     estimatedetail.rownum = invoicedetail.estimrownum 
JOIN incomeinvoice 
ON   incomeinvoice.idinvkind = invoicedetail.idinvkind and
     incomeinvoice.yinv = invoicedetail.yinv and
     incomeinvoice.ninv = invoicedetail.ninv
JOIN incomelink
ON incomelink.idchild = incomeinvoice.idinc
WHERE incomelink.idparent = %<incomeestimate.idinc>%
AND estimatedetail.idestimkind = %<incomeestimate.idestimkind>% 
AND estimatedetail.yestim = %<incomeestimate.yestim>% 
AND estimatedetail.nestim = %<incomeestimate.nestim>% 
]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM011','1','D','incomeestimate','S','S','S','N','N',{ts '2008-04-04 12:27:33.140'},'SARA','Non è possibile rimuovere la contabilizzazione di un contratto attivo da un movimento di entrata residuo.','S','[select count(*) from incomeyear 
where idinc=%<incomeestimate.idinc>%]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM005','1','D','incomeestimate','S','S','S','N','N',{ts '2007-02-23 23:05:08.310'},'''NINO''','Esistono ancora dettagli contratto attivo associati al movimento di entrata','N','[SELECT count(*) from estimatedetail where 
idinc_iva=%<incomeestimate.idinc>%
OR
idinc_taxable=%<incomeestimate.idinc>%
]{I}= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM001','1','I','incomeestimate','S','S','S','N','N',{ts '2007-03-21 11:27:36.063'},'''NINO''','L''importo del movimento di entrata è diverso dalla somma dei dettagli del contratto attivo %<idestimkind>%/%<yestim>%/%<nestim>%  associati','N','--post

(

[SELECT COUNT(*) 

FROM  incomeestimateview 

WHERE incomeestimateview.idinc = %<incomeestimate.idinc>%

AND   ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)

AND   ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0

)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM018','1','I','incomeestimate','S','S','S','N','N',{ts '2006-09-19 14:26:45.420'},'Software and more','Il versante del contratto %<idestimkind>% / %<nestim>% / %<yestim>% da contabilizzare è differente da quello del movimento di entrata','S','(
[SELECT COUNT(*) FROM income
WHERE idinc = %<incomeestimate.idinc>%]{I}
=0
)
OR
(
[SELECT idreg FROM income
WHERE idinc = %<incomeestimate.idinc>%]{I}
=
[SELECT idreg FROM estimate
WHERE idestimkind = %<incomeestimate.idestimkind>%
AND nestim = %<incomeestimate.nestim>%
AND yestim = %<incomeestimate.yestim>%]{I}
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA001','1','I','incomeinvoice','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','L''importo del documento IVA %<idinvkind>% %<ninv>%/%<yinv>% è minore dei movimenti di entrata che lo contabilizzano
','N','--post
isnull([(SELECT AVG(residual)
FROM invoiceavailable
WHERE invoiceavailable.yinv = %<incomeinvoice.yinv>% AND
invoiceavailable.ninv = %<incomeinvoice.ninv>% AND
invoiceavailable.idinvkind = %<incomeinvoice.idinvkind>%)]{N},0)>=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA019','1','I','incomeinvoice','S','S','S','N','N',{ts '2007-12-12 10:48:36.860'},'pino','L''importo del movimento di entrata che contabilizza la fattura  di vendita %<incomeinvoice.idinvkind>%  %<incomeinvoice.ninv>% / %<incomeinvoice.yinv>% è diverso dalla somma dei dettagli associati','N','--post
(
%<incomeinvoice.movkind>% = 1
AND
[(select isnull(sum(invoicedetailview.rowtotal), 0.0)  
from invoicedetailview
where  invoicedetailview.idinvkind =%<incomeinvoice.idinvkind>%
and invoicedetailview.yinv = %<incomeinvoice.yinv>%
and invoicedetailview.ninv = %<incomeinvoice.ninv>%
and invoicedetailview.idinc_taxable = %<incomeinvoice.idinc>%
and invoicedetailview.idinc_iva = %<incomeinvoice.idinc>%
)]{V}
=
[(select isnull(incomeyear.amount, 0.0) 
from incomeyear
where incomeyear.idinc = %<incomeinvoice.idinc>%
	and incomeyear.ayear=%<sys_esercizio>%
)]{V} 
)
OR
(
%<incomeinvoice.movkind>% = 3
AND
[(select isnull(sum(invoicedetailview.taxable_euro), 0.0)  
from invoicedetailview
where  invoicedetailview.idinvkind =%<incomeinvoice.idinvkind>%
and invoicedetailview.yinv = %<incomeinvoice.yinv>%
and invoicedetailview.ninv = %<incomeinvoice.ninv>%
and invoicedetailview.idinc_taxable = %<incomeinvoice.idinc>%
)]{V}
=
[(select isnull(incomeyear.amount, 0.0) 
from incomeyear
where incomeyear.idinc = %<incomeinvoice.idinc>%
and incomeyear.ayear=%<sys_esercizio>%

)]{V} 
)
OR
(
%<incomeinvoice.movkind>% = 2
AND
[(select isnull(sum(invoicedetailview.iva_euro), 0.0)  
from invoicedetailview
where  invoicedetailview.idinvkind =%<incomeinvoice.idinvkind>%
and invoicedetailview.yinv = %<incomeinvoice.yinv>%
and invoicedetailview.ninv = %<incomeinvoice.ninv>%
and invoicedetailview.idinc_iva = %<incomeinvoice.idinc>%
)]{V}
=
[(select isnull(incomeyear.amount, 0.0) 
from incomeyear
where incomeyear.idinc = %<incomeinvoice.idinc>%
and incomeyear.ayear=%<sys_esercizio>%

)]{V} 
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM018','1','I','incomeinvoice','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il versante del documento IVA %<ninv>% / %<yinv>% da contabilizzare è differente da quello del movimento di entrata','S','(
[SELECT COUNT(*) from income
WHERE idinc = %<incomeinvoice.idinc>% ]{I}=0
)
OR
(
[SELECT idreg FROM income
WHERE idinc = %<incomeinvoice.idinc>% ]{I}
=
[SELECT idreg FROM invoice
WHERE
idinvkind =%<incomeinvoice.idinvkind>% AND
ninv = %<incomeinvoice.ninv>% AND yinv = %<incomeinvoice.yinv>%]{I}
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','D','incomelast','S','S','S','N','N',{ts '2007-12-15 09:40:59.030'},'NINO','Il movimento di entrata %<incomeview.phase>% n. %<incomeview.nmov>% / %<incomeview.ymov>% non può essere cancellato. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM007','2','D','incomelast','S','S','S','N','N',{ts '2007-12-05 10:07:24.590'},'SARA','Il movimento finanziario è incluso nella reversale di incasso %<incomelastview.npro>% già trasmessa e quindi non può essere cancellato','S','isnull([SELECT kproceedstransmission 
from proceeds 
where kpro = %<incomelast.kpro>%]{I},0)=0
OR
%<incomelast.kpro>% IS NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM025','1','D','incomelast','S','S','S','N','N',{ts '2007-12-05 11:29:54.980'},'SARA','Non può essere cancellato il movimento di entrata %<income.nmov>%/%<income.ymov>% in quanto è inserito in una reversale di incasso','S','%<incomelast.kpro>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM057','1','D','incomelast','S','S','S','N','N',{ts '2012-07-26 15:12:07.793'},'sa','Il movimento di entrata %<income.ymov>% / %<income.nmov>% risulta già esitato','S','(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 
	 WHERE idinc= %<incomelast.idinc>%]{V}
	,0) = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM107','1','D','incomelast','S','S','S','N','N',{ts '2012-11-19 11:27:42.130'},'sa','Saldo iniziale + Tot. reversali emesse + Girofondi in entrata deve essere maggiore od uguale al Tot. pagamenti emessi + Girofondi in uscita.','N','ISNULL([SELECT currentfloatfund 
FROM treasurercashtotal 
WHERE ayear = %<sys_esercizio>%
and idtreasurer =isnull([select idtreasurer from proceeds
			where proceeds.kpro= &<incomelast.kpro>& ]{I},0)
]{V},0) >= 0

OR
&<incomelast.kpro>& IS NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BOLLE001','1','I','incomelast','S','S','S','N','N',{ts '2013-07-08 10:26:30.737'},'nino','La somma dei movimenti di spesa collegati alla bolletta n. %<incomelast.nbill>% NON può essere maggiore dell''importo della bolletta','N','(%<incomelast.nbill>% IS NULL) 
OR  
ISNULL([SELECT SUM(curramount)
FROM incomelast
join incometotal
on incomelast.idinc = incometotal.idinc
WHERE nbill = %<incomelast.nbill>%
AND ayear = %<sys_esercizio>%]{V},0)
<= 
ISNULL(
[SELECT ISNULL(total, 0) 
from bill
where nbill= %<incomelast.nbill>% 
	and ybill = %<sys_esercizio>%
	and billkind =''C'']{V}
,0) 



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','I','incomelast','S','S','S','N','N',{ts '2007-12-15 09:40:40.233'},'NINO','Il movimento di entrata %<incomeview.phase>% n. %<incomeview.nmov>% / %<incomeview.ymov>% non può essere inserito. Esercizio  %<esercizio>% chiuso','N','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM052','1','I','incomelast','S','S','S','N','N',{ts '2009-05-14 13:24:21.530'},'SA','Non è possibile inserire più di 15 classificazioni SIOPE per il movimento di entrata %<incomelastview.ymov>% / %<incomelastview.nmov>% inserito nella Reversale  N.%<incomelastview.npro>%.','N','ISNULL([
	(SELECT COUNT(distinct incomesorted.idsor)  FROM incomesorted
	JOIN sorting
		ON incomesorted.idsor = sorting.idsor
	JOIN sortingkind
		ON sortingkind.idsorkind = sorting.idsorkind
	WHERE ''07E_SIOPE''= sortingkind.codesorkind 
		AND incomesorted.idinc = %<incomelast.idinc>%)
	]{I} 
	,0) 
<=15

OR 
%<incomelast.kpro>% is null

OR
(
[SELECT ymov FROM income
	WHERE idinc = %<incomelast.idinc>%]{I} <
ISNULL([SELECT isnull(start,1900) FROM sortingkind
	WHERE codesorkind = ''07E_SIOPE'']{I},3000)
)

OR 

( ISNULL([(SELECT idbank FROM treasurer 
	JOIN proceeds
		ON treasurer.idtreasurer = proceeds.idtreasurer
	WHERE  proceeds.kpro  =  %<incomelast.kpro>% )]{C} ,'''')<>''01030'')



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM060','1','I','incomelast','S','S','S','N','N',{ts '2007-12-05 15:16:08.060'},'SARA','Il mov. di entrata n. %<incomelastview.nmov>% / %<incomelastview.ymov>% ha una imputazione (competenza / residui) differente rispetto alla reversale al quale è associato','N','%<incomelast.kpro>% IS NULL
OR
ISNULL(
	[SELECT proceeds_flag FROM config WHERE ayear = %<proceeds.ypro>%]{I}
,0) & 8 <> 8
OR
([SELECT flag FROM proceeds
WHERE proceeds.kpro = %<incomelast.kpro>%
]{I} & 2) 
= ( [SELECT totflag FROM incomelastview WHERE idinc = %<incomelast.idinc>%]{I} & 1)*2 



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM107','1','I','incomelast','S','S','S','N','N',{ts '2012-11-16 10:14:55.343'},'sa','Saldo iniziale + Tot. reversali emesse + Girofondi in entrata deve essere maggiore od uguale al Tot. pagamenti emessi + Girofondi in uscita','N','-- Creazioone del pagamento e del mandato contemporaneamente
ISNULL([SELECT currentfloatfund 
FROM treasurercashtotal 
WHERE ayear = %<sys_esercizio>%
and idtreasurer =isnull([select idtreasurer from proceeds
			where proceeds.kpro= %<incomelast.kpro>% ]{I},0)
]{V},0) >= 0

OR
%<incomelast.kpro>% IS NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BOLLE001','1','U','incomelast','S','S','S','N','N',{ts '2013-07-08 10:27:04.457'},'nino','La somma dei movimenti di spesa collegati alla bolletta n. %<incomelast.nbill>% NON può essere maggiore dell''importo della bolletta','N','(%<incomelast.nbill>% IS NULL) 
OR  
ISNULL([SELECT SUM(curramount)
FROM incomelast
join incometotal
on incomelast.idinc = incometotal.idinc
WHERE nbill = %<incomelast.nbill>%
AND ayear = %<sys_esercizio>%]{V},0)
<= 
ISNULL(
[SELECT ISNULL(total, 0) 
from bill
where nbill= %<incomelast.nbill>% 
	and ybill = %<sys_esercizio>%
	and billkind =''C'']{V}
,0) 



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','U','incomelast','S','S','S','N','N',{ts '2007-12-13 14:23:16.170'},'NINO','Il movimento di entrata %<incomeview.phase>% n. %<incomeview.nmov>% / %<incomeview.ymov>% non può essere modificato. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA005','1','U','incomelast','S','S','S','N','N',{ts '2007-12-04 14:24:07.233'},'SARA','Attenzione, la liquidazione IVA  è stata effettuata. Se si procede bisognerà effettuare una nuova liquidazione','S','-- Controllo sull''inserimento di un mov. di entrata in una reversale
-- Contabilizzazione del doc. IVA mediante MOVIMENTO DI ENTRATA
(
	ISNULL(
		[SELECT deferredincomephase
		FROM config
		WHERE ayear = %<sys_esercizio>%]{C}
	,''X'') <> ''E''
)
OR
(
	[SELECT COUNT(*) FROM incomeinvoice
	WHERE idinc = %<incomelast.idinc>%]{I} = 0
)
OR
(
	[SELECT COUNT(*) FROM invoicedeferred
	JOIN incomeinvoice
	ON invoicedeferred.idinvkind = incomeinvoice.idinvkind
	AND invoicedeferred.yinv = incomeinvoice.yinv
	AND invoicedeferred.ninv = incomeinvoice.ninv
	WHERE incomeinvoice.idinc = %<incomelast.idinc>%]{I} = 0
)
OR
(
	ISNULL(&<incomelast.kpro>&,0) = ISNULL(%<incomelast.kpro>%,0)
)
OR
(
	[SELECT COUNT(*)
	FROM invoice
	JOIN invoicedeferred
	ON invoice.idinvkind = invoicedeferred.idinvkind
	AND invoice.yinv = invoicedeferred.yinv
	AND invoice.ninv = invoicedeferred.ninv
	JOIN incomeinvoice
	ON invoice.idinvkind = incomeinvoice.idinvkind
	AND invoice.yinv = incomeinvoice.yinv
	AND invoice.ninv = incomeinvoice.ninv
	WHERE incomeinvoice.idinc = %<incomelast.idinc>%
	AND invoice.flagdeferred = ''S'']{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA005','2','U','incomelast','S','S','S','N','N',{ts '2007-12-04 14:24:46.657'},'SARA','Attenzione, la liquidazione IVA  è stata effettuata. Se si procede bisognerà effettuare una nuova liquidazione','S','-- Controllo sull''inserimento di un mov. di spesa in un mandato
-- Contabilizzazione del doc. IVA mediante VARIAZIONE DI SPESA
(
	ISNULL(
		[SELECT deferredincomephase
		FROM config
		WHERE ayear = %<sys_esercizio>%]{C}
	,''X'') <> ''E''
)
OR
(
	[SELECT COUNT(*) FROM incomevar
	WHERE idinc = %<incomelast.idinc>%
	AND idinvkind IS NOT NULL]{I} = 0
)
OR
(
	[SELECT COUNT(*) FROM invoicedeferred
	JOIN incomevar
	ON invoicedeferred.idinvkind = incomevar.idinvkind
	AND invoicedeferred.yinv = incomevar.yinv
	AND invoicedeferred.ninv = incomevar.ninv
	WHERE incomevar.idinc = %<incomelast.idinc>%]{I} = 0
)
OR
(
	ISNULL(&<incomelast.kpro>&,0) = ISNULL(%<incomelast.kpro>%,0)
)
OR
(
	[SELECT COUNT(*)
	FROM invoice
	JOIN invoicedeferred
	ON invoice.idinvkind = invoicedeferred.idinvkind
	AND invoice.yinv = invoicedeferred.yinv
	AND invoice.ninv = invoicedeferred.ninv
	JOIN incomevar
	ON invoice.idinvkind = incomevar.idinvkind
	AND invoice.yinv = incomevar.yinv
	AND invoice.ninv = incomevar.ninv
	WHERE incomevar.idinc = %<incomelast.idinc>%
	AND invoice.flagdeferred = ''S'']{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM007','1','U','incomelast','S','S','S','N','N',{ts '2011-09-21 11:34:09.937'},'sara','Il movimento finanziario è incluso nella reversale di incasso %<incomelastview.npro>% / %<incomelastview.ypro>% già trasmessa e quindi  non può essere corretto','S','(
(
	isnull([SELECT kproceedstransmission 
	FROM proceeds 
	WHERE kpro = &<incomelast.kpro>&]{I} ,0)=0
	OR
	&<incomelast.kpro>& IS NULL
)
AND
-- Caso di inserimento del movimento di entrata nella reversale di incasso
(
	ISNULL([SELECT kproceedstransmission
	FROM proceeds
	WHERE kpro = %<incomelast.kpro>%]{I} ,0)=0
	OR
	%<incomelast.kpro>% IS NULL

)
)
OR
(&<incomelast.kpro>& IS NULL AND %<incomelast.kpro>% IS NULL)

OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds 
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomelast.idinc>%]{C},''N'' )= ''S'')
AND
[(SELECT count(*)  from incomevar  where idinc = %<incomelast.idinc>%
AND kproceedstransmission is null AND autokind = 22)]{I} <> 0
AND
-- unicredit non permette le variazioni di dati contabili ma solo del Siope
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM incomelast
JOIN proceeds 
	ON proceeds.kpro = incomelast.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomelast.idinc>%]{C},'''' )<> ''02008''
)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM029','1','U','incomelast','S','S','S','N','N',{ts '2007-12-05 13:08:48.590'},'SARA','Non possono essere presenti nella reversale %<incomelastview.npro>% / %<incomelastview.ypro>% sia movimenti che hanno copertura di iniziativa sia movimenti che non la hanno','N','--post
[SELECT COUNT(*) FROM incomelast
 join income on income.idinc= incomelast.idinc
WHERE income.ymov = %<sys_esercizio>%
AND kpro = %<incomelast.kpro>%
AND (flag & 1) <> (%<incomelast.flag>% & 1) ]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM049','1','U','incomelast','S','S','S','N','N',{ts '2007-12-05 14:15:15.310'},'SARA','Non si può rimuovere il movimento di entrata  %<income.nmov>% / %<income.ymov>% dalla reversale perchè già esitato','N','
(%<incomelast.kpro>% IS NOT NULL)
OR
(
(ISNULL(%<incomelast.kpro>%,0) = ISNULL(&<incomelast.kpro>&,0))
)
OR 
[(SELECT count(*) 
from banktransaction 
where idinc = %<incomelast.idinc>%)]{V} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM052','1','U','incomelast','S','S','S','N','N',{ts '2009-05-14 13:24:26.577'},'SA','Non è possibile inserire più di 15 classificazioni SIOPE per il movimento di entrata %<incomelastview.ymov>% / %<incomelastview.nmov>% inserito nella Reversale N.%<proceeds.npro>%.','N','ISNULL([
	(SELECT COUNT(distinct incomesorted.idsor)  FROM incomesorted
	JOIN sorting
		ON incomesorted.idsor = sorting.idsor
	JOIN sortingkind
		ON sortingkind.idsorkind = sorting.idsorkind
	WHERE ''07E_SIOPE''= sortingkind.codesorkind 
		AND incomesorted.idinc = %<incomelast.idinc>%)
	]{I} 
	,0) 
<=15

OR 
ISNULL(%<incomelast.kpro>%,0) = ISNULL(&<incomelast.kpro>&,0)
OR
%<incomelast.kpro>% is null

OR
(
[SELECT ymov FROM income
	WHERE idinc = %<incomelast.idinc>%]{I} <
ISNULL([SELECT isnull(start,1900) FROM sortingkind
	WHERE codesorkind = ''07E_SIOPE'']{I},3000)
)

OR 

( ISNULL([(SELECT idbank FROM treasurer 
	JOIN proceeds
		ON treasurer.idtreasurer = proceeds.idtreasurer
	WHERE  proceeds.kpro  =  %<incomelast.kpro>% )]{C} ,'''')<>''01030'')



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM057','1','U','incomelast','S','S','S','N','N',{ts '2012-07-26 15:11:09.247'},'sa','Il movimento di entrata %<income.ymov>% / %<income.nmov>% risulta già esitato','S','(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 
	 WHERE idinc= %<incomelast.idinc>%]{V}
	,0) = 0)
OR
(
%<incomelast.kpro>% is null
AND
&<incomelast.kpro>& is null
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM060','1','U','incomelast','S','S','S','N','N',{ts '2008-02-11 13:20:28.137'},'SA','Il mov. di entrata n. %<incomelastview.nmov>% / %<incomelastview.ymov>% ha una imputazione (competenza / residui) differente rispetto alla reversale al quale è associato','N','%<incomelast.kpro>% IS NULL
OR
ISNULL(
	[SELECT proceeds_flag FROM config WHERE ayear = %<proceeds.ypro>%]{I}
,0) & 8 <> 8
OR
( [SELECT flag 
FROM proceeds
WHERE proceeds.kpro = %<incomelast.kpro>%
]{I} & 2) 
= ( [SELECT totflag FROM incomelastview WHERE idinc = %<incomelast.idinc>%]{I}  & 1)*2 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM086','1','U','incomelast','S','S','S','N','N',{ts '2009-10-20 16:05:22.873'},'SARA','Non è di solito corretto modificare manualmente il conto di credito di un movimento finanziario.','S','isnull(%<incomelast.idacccredit>%,'' '') = isnull(&<incomelast.idacccredit>&,'' '')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','1','U','incomelast','S','S','S','N','N',{ts '2013-03-12 09:36:56.627'},'mluisas','Nella gestione dell''ordinativo informatico per la Banca Popolare di Sondrio  non è possibile annullare parzialmente un documento.','N','%<incomelast.kpro>% = &<incomelast.kpro>& 
OR
%<incomelast.kpro>% IS NULL   
OR
(
ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM proceeds 
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE proceeds.kpro = %<incomelast.kpro>%] {C},''N'' )= ''N''
)
OR
(
ISNULL([SELECT ISNULL(treasurer.idbank,''N'') 
FROM proceeds 
JOIN treasurer 
	ON proceeds .idtreasurer = treasurer.idtreasurer
WHERE proceeds.kpro = %<incomelast.kpro>% 
]{C},'''' )<>   ''05696''
)
OR
ISNULL([
SELECT COUNT(*) FROM incomevar EV
WHERE EV.idinc IN ( 
SELECT idinc FROM incomelast WHERE 
incomelast.kpro = %<incomelast.kpro>%)
AND ISNULL(EV.autokind,0) IN (10,11)
]{I} ,0) = 0
OR
ISNULL([
SELECT COUNT(*) FROM incomelastview EV
WHERE EV.idinc IN ( 
SELECT idinc FROM incomelast WHERE 
incomelast.kpro = %<incomelast.kpro>%)
AND ISNULL(EV.curramount,0) <> 0
]{I} ,0) = 0

 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','2','U','incomelast','S','S','S','N','N',{ts '2013-03-12 11:09:33.370'},'mluisas','Nella gestione dell''ordinativo informatico per la Banca Popolare di Sondrio  non è possibile rimuovere Riscossioni da una Reversale già trasmessa. L''ordine e il numero delle Riscossioni devono restare invariati e sono consentite solo variazioni ai dati.','S','-- caso rimozione di una Riscossione da una reversale
%<incomelast.kpro>% = &<incomelast.kpro>& 
OR
%<incomelast.kpro>% IS NOT  NULL
OR
(
ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM proceeds 
JOIN treasurer 
	ON proceeds .idtreasurer = treasurer.idtreasurer
WHERE proceeds.kpro= &<incomelast.kpro>&] {C},''N'' )= ''N''
)
OR
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM proceeds 
JOIN treasurer 
	ON proceeds .idtreasurer = treasurer.idtreasurer
WHERE proceeds.kpro= &<incomelast.kpro>&
]{C},'''' )<>   ''05696''
)
OR
ISNULL([
SELECT COUNT(*) FROM incomevar EV
WHERE EV.idinc IN ( 
SELECT idinc FROM incomelast WHERE 
incomelast.kpro= &<incomelast.kpro>&)
AND ISNULL(EV.autokind,0) = 22
]{I} ,0) = 0

 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','3','U','incomelast','S','S','S','N','N',{ts '2013-03-12 11:02:23.673'},'mluisas','Nella gestione dell''ordinativo informatico per la Banca Popolare di Sondrio  non è possibile aggiungere Riscossioni ad una Reversale trasmessa se questi non erano presenti anche nel primo invio. L''ordine e il numero delle Riscossioni devono restare invariati e sono consentite solo variazioni ai dati.','N','--caso aggiuta di una riscossione a una reversale
%<incomelast.kpro>% = &<incomelast.kpro>& 
OR
%<incomelast.kpro>% IS NULL
OR
(
ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM proceeds 
JOIN treasurer 
	ON proceeds .idtreasurer = treasurer.idtreasurer
WHERE proceeds.kpro= %<incomelast.kpro>%] {C},''N'' )= ''N''
)
OR
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM proceeds 
JOIN treasurer 
	ON proceeds .idtreasurer = treasurer.idtreasurer
WHERE proceeds.kpro = %<incomelast.kpro>% 
]{C},'''' )<>   ''05696''
)
OR
ISNULL([
SELECT COUNT(*) FROM incomevar EV
WHERE EV.idinc IN ( 
SELECT idinc  FROM incomelast WHERE 
incomelast.kpro= %<incomelast.kpro>%)
AND ISNULL(EV.autokind,0) = 22
]{I} ,0) = 0

 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM107','1','U','incomelast','S','S','S','N','N',{ts '2012-11-15 11:34:20.263'},'sa','Saldo iniziale + Tot. reversali emesse + Girofondi in entrata deve essere maggiore od uguale al Tot. pagamenti emessi + Girofondi in uscita.','N','-- Rimozione dell''incasso dalla reversale
ISNULL([SELECT currentfloatfund 
FROM treasurercashtotal 
WHERE ayear = %<sys_esercizio>%
and idtreasurer =isnull([select idtreasurer from proceeds
				where proceeds.kpro= &<incomelast.kpro>&]{I},0)
]{V},0) >= 0

OR
(%<incomelast.kpro>% IS NOT NULL)
OR
(
(ISNULL(%<incomelast.kpro>%,0) = ISNULL(&<incomelast.kpro>&,0))
)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM006','1','U','incomelast','S','S','S','N','N',{ts '2009-01-20 12:24:42.790'},'SA','errore di programma','N','ISNULL(%<incomelast.kpro>%,0) = ISNULL(&<incomelast.kpro>&,0)
OR
(&<incomelast.kpro>& IS NULL AND %<incomelast.kpro>% IS NOT NULL)OR
(&<incomelast.kpro>& IS NOT NULL AND %<incomelast.kpro>% IS NULL)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','incomephase','S','S','S','N','N',{ts '2007-09-13 11:59:36.627'},'NINO','Cancellazione Impossibile! Esistono movimenti di entrata collegati alla fase %<description>%','S','[(SELECT count(*) 
from income 
where nphase = %<incomephase.nphase>%)]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','incomephase','S','S','S','N','N',{ts '2007-09-13 11:59:44.750'},'NINO','Cancellazione Impossibile! Esistono fasi di entrata dipendenti dalla fase %<description>%','S','[(SELECT count(*) 
from incomephase 
where nphase > %<incomephase.nphase>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','incomephase','S','S','S','N','N',{ts '2007-09-13 11:59:50.877'},'NINO','Cancellazione Impossibile! Esistono tipi di classificazione collegati alla fase di entrata %<description>%','S','[(SELECT count(*) 
from sortingkind 
where nphaseincome = %<incomephase.nphase>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','incomephase','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione della fase di entrata già esistente','S','[(SELECT count(*) 
from incomephase 
where description = %<incomephase.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','I','incomephase','S','S','S','N','N',{ts '2009-01-20 12:24:50.947'},'SA','Non può essere inserita una nuova fase di entrata in quanto esistono già dei movimenti finanziari.','S','[SELECT COUNT(*) FROM income]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','incomephase','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione della fase di entrata già esistente','S','[(SELECT count(*) 
from incomephase 
where nphase <> %<incomephase.nphase>% 
and description = %<incomephase.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN002','1','D','incomesorted','S','S','S','N','N',{ts '2008-01-29 09:21:59.000'},'NINO','La previsione di entrata della classificazione movimenti %<sorting.sortcode>% è INSUFFICIENTE!','N','--post
ISNULL(
	[SELECT incomeprevision
	from sortingprev 
	where idsor = %<incomesorted.idsor>% 
	and ayear = %<incomesorted.ayear>%]{V} 
,0)
+ 
ISNULL(
	[SELECT ISNULL(totincomevariation, 0) - 
	ISNULL(totalincome, 0) - 
	ISNULL(totalmakings, 0) 
	from sortedmovementtotal 
	where idsor = %<incomesorted.idsor>% 
	and ayear = %<incomesorted.ayear>%]{V} 
,0)
>=0
OR
([SELECT flag 
from sortingkind 
join sorting
	on sortingkind.idsorkind= sorting.idsorkind
where idsor = %<incomesorted.idsor>%]{I} & 2) = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN005','1','D','incomesorted','S','S','S','N','N',{ts '2008-03-21 13:17:21.250'},'SA','Il movimento di entrata non è stato interamente classificato secondo la classificazione obbligatoria .','N','--post
([SELECT flag from sortingkind 
join sorting
	on sortingkind.idsorkind = sorting.idsorkind  
where idsor = %<incomesorted.idsor>%
	AND ( %<sys_esercizio>% between ISNULL(sortingkind.start,1900) AND ISNULL(sortingkind.stop,2099) )
	AND ( sortingkind.codesorkind IN ( ''SIOPE'' , ''07E_SIOPE'' ) )
]{I} & 1) = 0
OR
(
(
[(SELECT ISNULL(sum(amount),0) from incomesorted I
		join sorting S
			on I.idsor = S.idsor
		where S.idsorkind = [select idsorkind 
					from sorting 
					where idsor = %<incomesorted.idsor>%]{I}
	          and  I.idinc= %<incomesorted.idinc>%
  		 and  ayear = %<incomesorted.ayear>%
 )]{V}
)
=
[(SELECT curramount from incometotal where idinc= %<incomesorted.idinc>% and
				ayear = %<incomesorted.ayear>% 
 )]{V}	
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM037','1','D','incomesorted','S','S','S','N','N',{ts '2011-09-15 13:02:06.563'},'sara','La classificazione SIOPE del movimento finanziario di entrata %<income.ymov>%/%<income.nmov>% non può essere eliminata in quanto è già incluso nella reversale di incasso  che risulta trasmessa.','S','[(select count(*)
from income 
join incomelast
on income.idinc = incomelast.idinc
join proceeds 
	on proceeds.kpro = incomelast.kpro 
where income.idinc = %<incomesorted.idinc>%
and proceeds.kproceedstransmission  is not null)]{I} = 0
OR
[select kpro from incomelast where idinc = %<incomesorted.idinc>%]{I} IS NULL
OR
([select codesorkind from sortingkind 
				join sorting
					on sortingkind.idsorkind = sorting.idsorkind  
				where idsor = %<incomesorted.idsor>%]{C}<>''SIOPE'')
OR
[SELECT ymov FROM income WHERE idinc = %<incomesorted.idinc>%]{I} > 2006
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds 
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomesorted.idinc>%]{C},''N'' )= ''S'')
AND
[(SELECT count(*)  from incomevar  where idinc = %<incomesorted.idinc>%
AND kproceedstransmission is null AND autokind = 22)]{I} <> 0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM052','1','D','incomesorted','S','S','S','N','N',{ts '2011-09-15 13:05:18.390'},'sara','La classificazione SIOPE del movimento finanziario di entrata %<incomeview.ymov>%/%<incomeview.nmov>% non può essere eliminata in quanto è già incluso nella reversale di incasso  %<incomeview.ypro>%/%<incomeview.npro>% che risulta trasmessa.','S','[select count(*)
from income 
join incomelast
	on income.idinc = incomelast.idinc
join proceeds 
	on proceeds.kpro = incomelast.kpro 
where income.idinc = %<incomesorted.idinc>%
	and proceeds.kproceedstransmission  is not null]{I} = 0
OR
[select kpro from incomelast where idinc = %<incomesorted.idinc>%]{I} IS NULL
OR
([select codesorkind from sortingkind 
  join sorting
  on sortingkind.idsorkind = sorting.idsorkind  
  where idsor = %<incomesorted.idsor>%]{C}
 <>''07E_SIOPE'')
OR
(
[SELECT ymov FROM income
	WHERE idinc = %<incomesorted.idinc>%]{I} <
ISNULL([SELECT isnull(start,1900) FROM sortingkind
	WHERE codesorkind = ''07E_SIOPE'']{I},3000)
)

OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds 
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomesorted.idinc>%]{C},''N'' )= ''S'')
AND
[(SELECT count(*)  from incomevar  where idinc = %<incomesorted.idinc>%
AND kproceedstransmission is null AND autokind = 22)]{I} <> 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN002','1','I','incomesorted','S','S','S','N','N',{ts '2008-01-29 09:22:14.407'},'NINO','La previsione di entrata della classificazione movimenti %<incomesortedview.codesorkind>% - %<incomesortedview.sortcode>% è INSUFFICIENTE!','N','--post
ISNULL(
	[SELECT incomeprevision
	from sortingprev 
	where idsor = %<incomesorted.idsor>% 
	and ayear = %<incomesorted.ayear>%]{V} 
,0)
+ 
ISNULL(
	[SELECT ISNULL(totincomevariation, 0) - 
	ISNULL(totalincome, 0) - 
	ISNULL(totalmakings, 0) 
	from sortedmovementtotal 
	where idsor = %<incomesorted.idsor>% 
	and ayear = %<incomesorted.ayear>%]{V} 
,0)
>=0
OR
([SELECT flag
from sortingkind 
join sorting
	on sortingkind.idsorkind= sorting.idsorkind
where idsor = %<incomesorted.idsor>%]{I} & 2) = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN005','1','I','incomesorted','S','S','S','N','N',{ts '2008-03-21 13:17:11.437'},'SA','Il movimento di entrata non è stato interamente classificato secondo la classificazione obbligatoria %<incomesortedview.codesorkind>% .','N','--post
([SELECT flag FROM sortingkind 
join sorting
	on sortingkind.idsorkind = sorting.idsorkind  
WHERE idsor = %<incomesorted.idsor>%
	AND ( %<sys_esercizio>% between ISNULL(sortingkind.start,1900) AND ISNULL(sortingkind.stop,2099) )
	AND ( sortingkind.codesorkind IN ( ''SIOPE'' , ''07E_SIOPE'' ) )
]{I} & 1) = 0
OR
(
	[SELECT ISNULL(SUM(I.amount),0) FROM incomesorted I
		join sorting S
			on I.idsor = S.idsor
		where S.idsorkind = [select idsorkind 
					from sorting 
					where idsor = %<incomesorted.idsor>%]{I}
		AND I.idinc= %<incomesorted.idinc>%
		AND ayear = %<incomesorted.ayear>%]{V}  
	=
	[SELECT curramount
	FROM incometotal
	WHERE idinc= %<incomesorted.idinc>%
	AND ayear = %<incomesorted.ayear>%]{V}	
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN007','1','I','incomesorted','S','S','S','N','N',{ts '2011-09-16 11:26:59.780'},'sa','L''importo classificato come %<incomesortedview.codesorkind>%   %<incomesortedview.sortcode>%   supera l''importo classificato della fase precedente.','N','([SELECT COUNT(*) 
FROM sortingkind 
JOIN sorting
	ON sortingkind.idsorkind= sorting.idsorkind
WHERE  idsor = %<incomesorted.idsor>% 
	AND idparentkind is not null ]{I} ) = 0

OR 

(
--incasso
	ISNULL(
		[SELECT ISNULL(SUM(I.amount),0)
		FROM incomesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind = [select sortingkind.idsorkind
					from sortingkind 
					join sorting
						on sortingkind.idsorkind= sorting.idsorkind
					where idsor = %<incomesorted.idsor>%]{I}
		AND I.idinc= %<incomesorted.idinc>%
		AND  I.idsor = %<incomesorted.idsor>%
		AND I.ayear = %<incomesorted.ayear>%]{N}
	,0)
	<=
	ISNULL(
-- accertamento 
		[SELECT ISNULL(SUM(I.amount),0)
		FROM incomesorted I
		JOIN incomelink EL 
			ON EL.idparent=I.idinc
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind = [select idparentkind 
					from sortingkind 
					join sorting
						on sortingkind.idsorkind= sorting.idsorkind
					where idsor = %<incomesorted.idsor>%]{I}
		AND S.sortcode = [select sortcode 
				     from sorting
				     where idsor = %<incomesorted.idsor>%]{C}
		AND EL.idchild= %<incomesorted.idinc>%
		AND I.ayear = %<incomesorted.ayear>%]{N}
	,0)

)




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM016','1','I','incomesorted','S','S','S','N','N',{ts '2007-11-27 10:16:59.687'},'SARA','Le classificazioni associate al movimento di entrata n. %<income.nmov>%/%<income.ymov>% sono superiori rispetto all''importo dello stesso.','N','--post
(
	ISNULL(
		[SELECT ISNULL(SUM(I.amount),0)
		FROM incomesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind = [select idsorkind 
					from sorting 
					where idsor = %<incomesorted.idsor>%]{I}
		AND I.idinc= %<incomesorted.idinc>%
		AND I.ayear = %<incomesorted.ayear>%]{N}
	,0)
	<=
	ISNULL(
		[SELECT curramount FROM incometotal WHERE idinc= %<incomesorted.idinc>%
		AND ayear = %<incomesorted.ayear>%]{N}
	,0)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM037','1','I','incomesorted','S','S','S','N','N',{ts '2011-09-15 13:02:55.703'},'sara','La classificazione SIOPE del movimento finanziario di entrata %<income.nmov>%/%<income.nmov>%  non può essere inserita in quanto è già incluso nella reversale di incasso che risulta trasmessa.','S','[select count(*)
from 
income
join incomelast on incomelast.idinc=income.idinc 
join proceeds 
	on proceeds.kpro = incomelast.kpro 
where income.idinc = %<incomesorted.idinc>%
	and proceeds.kproceedstransmission  is not null]{I} = 0
OR
[select kpro from incomelast where idinc = %<incomesorted.idinc>%]{I} IS NULL
OR
([select codesorkind from sortingkind 
				join sorting
					on sortingkind.idsorkind = sorting.idsorkind  
				where idsor = %<incomesorted.idsor>%]{C}
    <>''SIOPE'')
OR
%<incomesorted.idinc>%  is null
OR
[SELECT ymov FROM income  WHERE idinc = %<incomesorted.idinc>%]{I} > 2006
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds 
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomesorted.idinc>%]{C},''N'' )= ''S'')
AND
[(SELECT count(*)  from incomevar  where idinc = %<incomesorted.idinc>%
AND kproceedstransmission is null AND autokind = 22)]{I} <> 0
)




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM037','2','I','incomesorted','S','S','S','N','N',{ts '2007-11-29 14:45:40.483'},'SARA','La classificazione SIOPE del movimento finanziario di entrata non può avere codice %<sorting.sortcode>% poichè questo è un codice di spesa.','S','[ISNULL((select substring(sorting.sortcode,1,1)
from sorting
join sortingkind 
	on sortingkind.idsorkind = sorting.idsorkind  
where sortingkind.codesorkind = ''SIOPE''
and sorting.idsor =%<incomesorted.idsor>% ),''E'')]{C} =''E''

OR 
([select codesorkind from sortingkind 
				join sorting
					on sortingkind.idsorkind = sorting.idsorkind  
				where idsor = %<incomesorted.idsor>%]{C}
 <> ''SIOPE'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM037','3','I','incomesorted','S','S','S','N','N',{ts '2007-11-29 14:46:00.000'},'SARA','La classificazione MIUR del movimento finanziario di entrata non può avere codice %<sorting.sortcode>% poichè questo è un codice di spesa.','S','[ISNULL((select substring(sorting.sortcode,1,1)
from sorting
join sortingkind 
	on sortingkind.idsorkind = sorting.idsorkind  
where sortingkind.codesorkind = ''MIUR''
and sorting.idsor =%<incomesorted.idsor>% ),''E'')]{C} =''E''
OR 
([select codesorkind from sortingkind 
				join sorting
					on sortingkind.idsorkind = sorting.idsorkind  
				where idsor = %<incomesorted.idsor>%]{C} <> ''MIUR'')
OR
[SELECT ymov FROM income WHERE idinc = %<incomesorted.idinc>%]{I} > 2006
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM052','1','I','incomesorted','S','S','S','N','N',{ts '2011-09-15 13:06:27.343'},'sara','La classificazione SIOPE del movimento finanziario di entrata %<income.nmov>%/%<income.nmov>%  non può essere inserita in quanto è già incluso nella reversale di incasso %<incomeview.ypro>%/%<incomeview.npro>%  che risulta trasmessa.','S','[(select count(*)
from 
income
join incomelast  on incomelast.idinc=income.idinc
join proceeds 
	on proceeds.kpro = incomelast.kpro 
where income.idinc = %<incomesorted.idinc>%
	and proceeds.kproceedstransmission  is not null)]{I} = 0
OR
[select kpro from incomelast where idinc = %<incomesorted.idinc>%]{I} IS NULL
OR
([select codesorkind  from sortingkind 
				join sorting
					on sortingkind.idsorkind = sorting.idsorkind  
				where idsor = %<incomesorted.idsor>%]{C}<>''07E_SIOPE'')
OR
%<incomesorted.idinc>%  is null
OR
(
[SELECT ymov FROM income
	WHERE idinc = %<incomesorted.idinc>%]{I} <
ISNULL([SELECT isnull(start,1900) FROM sortingkind
	WHERE codesorkind = ''07E_SIOPE'']{I},3000)
)

OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds 
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomesorted.idinc>%]{C},''N'' )= ''S'')
AND
[(SELECT count(*)  from incomevar  where idinc = %<incomesorted.idinc>%
AND kproceedstransmission is null AND autokind = 22)]{I} <> 0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM052','2','I','incomesorted','S','S','S','N','N',{ts '2009-05-14 13:24:45.717'},'SA','Non è possibile inserire più di 15 classificazioni SIOPE per il movimento di entrata %<incomelastview.ymov>% / %<incomelastview.nmov>% inserito nella Reversale N.%<incomelastview.npro>%.','N','ISNULL([(select kpro 
from 
incomelast 
where idinc = %<incomesorted.idinc>%)]{I},-1) = -1

OR 

( ISNULL([(SELECT treasurer.idbank FROM treasurer 
	JOIN proceeds
		ON treasurer.idtreasurer = proceeds.idtreasurer
	JOIN incomelast
		ON proceeds.kpro = incomelast.kpro
	WHERE  incomelast.idinc =  %<incomesorted.idinc>% )]{C} ,'''')<>''01030'')

OR
[([select codesorkind from sortingkind 
   join sorting
   on sortingkind.idsorkind = sorting.idsorkind  
   where idsor = %<incomesorted.idsor>%]{C}
  <>''07E_SIOPE'')]

OR

%<incomesorted.idinc>%  is null

OR
(
[SELECT ymov FROM income
	WHERE idinc = %<incomesorted.idinc>%]{I} <
ISNULL([SELECT isnull(start,1900) FROM sortingkind
	WHERE codesorkind = ''07E_SIOPE'']{I},3000)
)

OR

ISNULL([
	(SELECT COUNT(distinct incomesorted.idsor) FROM incomesorted
	JOIN incomelast 
		ON incomelast.idinc=incomesorted.idinc
	JOIN sorting
		ON incomesorted.idsor = sorting.idsor
	JOIN sortingkind
		ON sortingkind.idsorkind = sorting.idsorkind
	WHERE ''07E_SIOPE''= sortingkind.codesorkind 
		AND incomelast.idinc = %<incomesorted.idinc>%)
	]{I} 
	,0) 
<=15

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM101','1','I','incomesorted','S','S','S','N','N',{ts '2012-03-05 13:34:11.207'},'assistenza','Attenzione! In fase di trasmissione questo movimento di Entrata raggruppato eventualmente con altri in una stessa Reversale (aventi la stessa anagrafica, stessa voce di bilancio ecc.) potrebbe determinare il superamento del limite di 15 codici SIOPE distinti previsto da UNICREDIT.','N','(
[SELECT ymov FROM income
	WHERE idinc = %<incomesorted.idinc>%
]{I} <
ISNULL([SELECT isnull(start,1900) FROM sortingkind
	WHERE codesorkind = ''07E_SIOPE'']{I},3000)
)

OR

ISNULL([
	(SELECT COUNT(distinct incomesorted.idsor)  
	 FROM incomesorted
	JOIN incomelast
		ON incomesorted.idinc = incomelast.idinc
	JOIN incomeview
		ON incomeview.idinc = incomesorted.idinc
	JOIN sorting
		ON incomesorted.idsor = sorting.idsor
	JOIN sortingkind
		ON sortingkind.idsorkind = sorting.idsorkind
	JOIN incomelast IL1
		ON IL1.idinc = %<incomesorted.idinc>%
	JOIN incomeview I1 
		ON  I1.idinc =  IL1.idinc 
	JOIN sorting S1
		ON  S1.idsor = %<incomesorted.idsor>%
	JOIN sortingkind SK1
		ON SK1.idsorkind = S1.idsorkind
	WHERE ''07E_SIOPE''= sortingkind.codesorkind
	AND   ''07E_SIOPE''= SK1.codesorkind
AND incomeview.transmissiondate is null and I1.transmissiondate is null
AND incomeview.ayear = I1.ayear
AND incomeview.idreg = I1.idreg AND incomeview.idfin = I1.idfin
AND incomeview.flagarrear = I1.flagarrear 
AND ISNULL(incomeview.cupcode,'''') = ISNULL(I1.cupcode,'''')
	)
	]{I} 
	,0) 
<=15

OR 

( ISNULL([(SELECT treasurer.idbank FROM treasurer 
	WHERE  ISNULL(flagdefault,''N'') = ''S'')]{C} ,'''')<>''02008'')

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN002','1','U','incomesorted','S','S','S','N','N',{ts '2008-01-29 09:22:23.437'},'NINO','La previsione di entrata della classificazione movimenti %<incomesortedview.codesorkind>% - %<incomesortedview.sortcode>% è INSUFFICIENTE!','N','--post
ISNULL(
	[SELECT incomeprevision
	from sortingprev 
	where idsor = %<incomesorted.idsor>% 
	and ayear = %<incomesorted.ayear>%]{V} 
,0)
+ 
ISNULL(
	[SELECT ISNULL(totincomevariation, 0) - 
	ISNULL(totalincome, 0) - 
	ISNULL(totalmakings, 0) 
	from sortedmovementtotal 
	where idsor = %<incomesorted.idsor>% 
	and ayear = %<incomesorted.ayear>%]{V} 
,0)
>= 0 
or 
([SELECT flag
from sortingkind 
join sorting
	on sortingkind.idsorkind= sorting.idsorkind
where idsor = %<incomesorted.idsor>%]{I} & 2) = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN005','1','U','incomesorted','S','S','S','N','N',{ts '2008-03-21 13:17:00.093'},'SA','Il movimento di entrata non è stato interamente classificato secondo la classificazione obbligatoria %<incomesortedview.codesorkind>% .','N','--post
([SELECT flag FROM sortingkind 
join sorting
	on sortingkind.idsorkind = sorting.idsorkind  
WHERE idsor = %<incomesorted.idsor>%
	AND ( %<sys_esercizio>% between ISNULL(sortingkind.start,1900) AND ISNULL(sortingkind.stop,2099) )
	AND ( sortingkind.codesorkind IN ( ''SIOPE'' , ''07E_SIOPE'' ) )
]{I} & 1) = 0
OR
(
	[SELECT ISNULL(SUM(I.amount),0)
	FROM incomesorted I
		join sorting S
			on I.idsor = S.idsor
		where S.idsorkind = [select idsorkind 
					from sorting 
					where idsor = %<incomesorted.idsor>%]{I}
	AND I.idinc= %<incomesorted.idinc>%
	AND I.ayear = %<incomesorted.ayear>%]{V}
	=
	[SELECT curramount
	FROM incometotal
	WHERE idinc= %<incomesorted.idinc>%
	AND ayear = %<incomesorted.ayear>%]{V}	
)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN007','1','U','incomesorted','S','S','S','N','N',{ts '2012-10-01 15:55:40.450'},'sa','L''importo classificato come %<incomesortedview.codesorkind>%   %<incomesortedview.sortcode>%   supera l''importo classificato della fase precedente.','N','([SELECT COUNT(*) 
FROM sortingkind 
JOIN sorting
	ON sortingkind.idsorkind= sorting.idsorkind
WHERE  idsor = %<incomesorted.idsor>% 
	AND idparentkind is not null ]{I} ) = 0

OR 

(
--incasso
	ISNULL(
		[SELECT ISNULL(SUM(I.amount),0)
		FROM incomesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind = [select sortingkind.idsorkind
					from sortingkind 
					join sorting
						on sortingkind.idsorkind= sorting.idsorkind
					where idsor = %<incomesorted.idsor>%]{I}
		AND I.idinc= %<incomesorted.idinc>%
		AND I.idsor = %<incomesorted.idsor>%
		AND I.ayear = %<incomesorted.ayear>%]{N}
	,0)
	<=
	ISNULL(
--accertamento
		[SELECT ISNULL(SUM(I.amount),0)
		FROM incomesorted I
		JOIN incomelink EL 
			ON EL.idparent=I.idinc
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind = [select idparentkind 
					from sortingkind 
					join sorting
						on sortingkind.idsorkind= sorting.idsorkind
					where idsor = %<incomesorted.idsor>%]{I}
		AND S.sortcode = [select sortcode 
				     from sorting
				     where idsor = %<incomesorted.idsor>%]{C}
		AND EL.idchild= %<incomesorted.idinc>%
		AND I.ayear = %<incomesorted.ayear>%]{N}
	,0)

)

 OR  (&<incomesorted.amount>& = %<incomesorted.amount>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM016','1','U','incomesorted','S','S','S','N','N',{ts '2007-11-27 10:17:28.377'},'SARA','Le classificazioni associate al movimento di entrata n. %<income.nmov>%/%<income.ymov>% sono superiori rispetto all''importo dello stesso.','N','--post
(
	ISNULL(
		[SELECT ISNULL(SUM(I.amount),0)
		FROM incomesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind = [select idsorkind 
					from sorting 
					where idsor = %<incomesorted.idsor>%]{I}
		AND I.idinc= %<incomesorted.idinc>%
		AND I.ayear = %<incomesorted.ayear>%]{N}
	,0)
	<=
	ISNULL(
		[SELECT curramount FROM incometotal WHERE idinc= %<incomesorted.idinc>%
		AND ayear = %<incomesorted.ayear>%]{N}
	,0)
)
OR
(&<incomesorted.amount>& = %<incomesorted.amount>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM037','1','U','incomesorted','S','S','S','N','N',{ts '2011-09-15 12:51:35.313'},'sara','La classificazione SIOPE del movimento finanziario di entrata %<incomeview.ymov>%/%<incomeview.nmov>%  non può essere variata in quanto è già incluso nella reversale di incasso %<incomeview.ypro>% / %<incomeview.npro>% che risulta trasmessa.','S','[(select count(*)
from 
income 
join incomelast on incomelast.idinc=income.idinc
join proceeds 
	on proceeds.kpro = incomelast.kpro 
where income.idinc = %<incomesorted.idinc>%
	and proceeds.kproceedstransmission  is not null	)]{I} = 0
OR
(%<incomesorted.amount>%= &<incomesorted.amount>& )
OR
([select codesorkind from sortingkind 
				join sorting
					on sortingkind.idsorkind = sorting.idsorkind  
				where idsor = %<incomesorted.idsor>%]{C} <> ''SIOPE'')
OR
[SELECT ymov FROM income
WHERE idinc = %<incomesorted.idinc>%]{I} > 2006
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds 
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomesorted.idinc>%]{C},''N'' )= ''S'')
AND
[(SELECT count(*)  from incomevar  where idinc = %<incomesorted.idinc>%
AND kproceedstransmission is null AND autokind = 22)]{I} <> 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM052','1','U','incomesorted','S','S','S','N','N',{ts '2011-09-15 13:06:57.687'},'sara','La classificazione SIOPE del movimento finanziario di entrata %<income.ymov>%/%<income.nmov>%  non può essere variata in quanto è già incluso nella reversale di incasso %<incomeview.ypro>% / %<incomeview.npro>% che risulta trasmessa.','N','[(select count(*)
from 
income 
join incomelast
	on incomelast.idinc=income.idinc
join proceeds 
	on proceeds.kpro = incomelast.kpro 
where income.idinc = %<incomesorted.idinc>%
	and proceeds.kproceedstransmission  is not null	)]{I} = 0
OR
(%<incomesorted.amount>%= &<incomesorted.amount>& )
OR
([select codesorkind from sortingkind 
				join sorting
					on sortingkind.idsorkind = sorting.idsorkind  
				where idsor = %<incomesorted.idsor>%]{C} <> ''07E_SIOPE'')
OR
(
[SELECT ymov FROM income
	WHERE idinc = %<incomesorted.idinc>%]{I} <
ISNULL([SELECT isnull(start,1900) FROM sortingkind
	WHERE codesorkind = ''07E_SIOPE'']{I},3000)
)

OR
(
 [select count(*) from incomevar
	where idinc = %<incomesorted.idinc>% and autokind in (10,11)]{I} > 0 
)
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds 
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomesorted.idinc>%]{C},''N'' )= ''S'')
AND
[(SELECT count(*)  from incomevar  where idinc = %<incomesorted.idinc>%
AND kproceedstransmission is null AND autokind = 22)]{I} <> 0
)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM101','1','U','incomesorted','S','S','S','N','N',{ts '2012-03-05 13:34:22.253'},'assistenza','Attenzione! In fase di trasmissione questo movimento di Entrata raggruppato eventualmente con altri in una stessa Reversale (aventi la stessa anagrafica, stessa voce di bilancio ecc.) potrebbe determinare il superamento del limite di 15 codici SIOPE distinti previsto da UNICREDIT.','N','(%<incomesorted.idinc>% = &<incomesorted.idinc>&) 
OR
(
[SELECT ymov FROM income
	WHERE idinc = %<incomesorted.idinc>%
]{I} <
ISNULL([SELECT isnull(start,1900) FROM sortingkind
	WHERE codesorkind = ''07E_SIOPE'']{I},3000)
)

OR

ISNULL([
	(SELECT COUNT(distinct incomesorted.idsor)  
	 FROM incomesorted
	JOIN incomelast
		ON incomesorted.idinc = incomelast.idinc
	JOIN incomeview
		ON incomeview.idinc = incomesorted.idinc
	JOIN sorting
		ON incomesorted.idsor = sorting.idsor
	JOIN sortingkind
		ON sortingkind.idsorkind = sorting.idsorkind
	JOIN incomelast IL1
		ON IL1.idinc = %<incomesorted.idinc>%
	JOIN incomeview I1 
		ON  I1.idinc =  IL1.idinc 
	JOIN sorting S1
		ON  S1.idsor = %<incomesorted.idsor>%
	JOIN sortingkind SK1
		ON SK1.idsorkind = S1.idsorkind
	WHERE ''07E_SIOPE''= sortingkind.codesorkind
	AND   ''07E_SIOPE''= SK1.codesorkind
AND incomeview.transmissiondate is null and I1.transmissiondate is null
AND incomeview.ayear = I1.ayear
AND incomeview.idreg = I1.idreg AND incomeview.idfin = I1.idfin
AND incomeview.flagarrear = I1.flagarrear 
AND ISNULL(incomeview.cupcode,'''') = ISNULL(I1.cupcode,'''')
	)
	]{I} 
	,0) 
<=15

OR 

( ISNULL([(SELECT treasurer.idbank FROM treasurer 
	WHERE  ISNULL(flagdefault,''N'') = ''S'')]{C} ,'''')<>''02008'')

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BOLLE001','1','D','incomevar','S','S','S','N','N',{ts '2013-07-08 10:22:49.410'},'nino','Cancellando la variazione, la somma dei movimenti di entrata collegati alla bolletta diventa maggiore dell''importo della bolletta.','N','[select nphase from income where idinc=%<incomevar.idinc>%]{I}
<> %<sys_maxincomephase>% 

OR 

[select nbill from incomelast where idinc = %<incomevar.idinc>%]{I} IS NULL


OR


ISNULL([SELECT SUM(curramount)
FROM incometotal
join incomelast on incometotal.idinc=incomelast.idinc
where incomelast.idinc= %<incomevar.idinc>%
and ayear = %<sys_esercizio>%
and incomelast.nbill=  [select nbill from incomelast where idinc = %<incomevar.idinc>%]{I}

]{V},0)
<= 
ISNULL(
[SELECT ISNULL(total, 0) from bill 
	where  ybill = %<sys_esercizio>% 	
	and 	nbill= [select nbill from incomelast where idinc = %<incomevar.idinc>%]{I} 
	and 	billkind =''C''
]{V}
,0) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA001','1','D','incomevar','N','S','N','N','N',{ts '2007-10-03 19:33:37.547'},'NINO','La previsione della voce in entrata %<incomeview.codefin>% e UPB %<incomeview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT 
	ISNULL(currentprev,0)+
	ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{C}
	]{V}
,0)
- 
[SELECT ISNULL(totalcompetency, 0) + 
ISNULL(totalarrears, 0) 
from upbincometotal 
where idfin = 
	[SELECT idfin 
	from incomeyear 
	where idinc = %<incomevar.idinc>% 
	and ayear = %<incomevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{I}
	and nphase = %<sys_incomefinphase>%
]{V}
+ 
[ISNULL(%<incomevar.amount>%, 0)] >= 0 
or
[select nphase from income where idinc=%<incomevar.idinc>%]{I}<> %<sys_incomefinphase>%
or 
[(SELECT idfin 
from incomeyear 
where idinc = %<incomevar.idinc>% 
and ayear = %<incomevar.yvar>%)]{I} IS NULL 
or
%<incomevar.amount>%>0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA003','1','D','incomevar','N','S','N','N','N',{ts '2013-05-21 10:46:53.933'},'sa','La previsione della voce in entrata Finanziamento: %<incomevarview.underwriting>% , UPB: %<incomevarview.upb>% , Bilancio: %<incomevarview.codefin>%  è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<incomevar.idinc>%]{I},0)=0)  
OR
ISNULL(
	[SELECT 
	ISNULL(currentprev,0)+
	ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{C}
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomevar.idinc>%]{I}	
	]{V}
,0)
- 
[SELECT ISNULL(totalcompetency, 0) + 
ISNULL(totalarrears, 0) 
from underwritingincometotal 
where idfin = 
	[SELECT idfin 
	from incomeyear 
	where idinc = %<incomevar.idinc>% 
	and ayear = %<incomevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{I}
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomevar.idinc>%]{I}	
	and nphase = %<sys_incomefinphase>%
]{V}
+ 
[ISNULL(%<incomevar.amount>%, 0)] >= 0 
or
[select nphase from income where idinc=%<incomevar.idinc>%]{I}<> %<sys_incomefinphase>%
or 
[(SELECT idfin 
from incomeyear 
where idinc = %<incomevar.idinc>% 
and ayear = %<incomevar.yvar>%)]{I} IS NULL 
or
%<incomevar.amount>%>0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','D','incomevar','S','S','S','N','N',{ts '2007-12-14 13:54:11.590'},'NINO','La variazione al movimento di entrata %<incomeview.phase>% n. %<incomeview.nmov>% / %<incomeview.ymov>% non può essere cancellata. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE002','1','D','incomevar','S','N','S','N','N',{ts '2007-10-03 19:33:43.827'},'NINO','La previsione di competenza della voce in entrata %<incomeview.codefin>% e UPB %<incomeview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{I}
	and idupb=	[SELECT idupb 
			from incomeyear 
			where idinc = %<incomevar.idinc>% 
			and ayear = %<incomevar.yvar>%]{C}
	]{V} 
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbincometotal 
	where idfin = 
		[SELECT idfin 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{I}
	and idupb= 	[SELECT idupb 
	from incomeyear 
	where idinc = %<incomevar.idinc>% 
	and ayear = %<incomevar.yvar>%]{C} 
	and nphase = %<sys_incomefinphase>%]{V}
,0)
+ 
ISNULL(%<incomevar.amount>%, 0)
>= 0 
or
([select nphase from income where idinc=%<incomevar.idinc>%]{I}<>%<sys_incomefinphase>%)
or 
[SELECT idfin from incomeyear where idinc = %<incomevar.idinc>% and ayear = %<incomevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from income where idinc = %<incomevar.idinc>%]{I} <> %<sys_esercizio>%
or
%<incomevar.amount>%<0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE009','1','D','incomevar','S','N','S','N','N',{ts '2013-05-21 10:54:38.027'},'sa','La previsione di competenza entrata di Finanziamento: %<incomevarview.underwriting>% , UPB: %<incomevarview.upb>% , Bilancio: %<incomevarview.codefin>% è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<incomevar.idinc>%]{I},0)=0)  
OR
ISNULL(
	[SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{I}
	and idupb=	[SELECT idupb 
			from incomeyear 
			where idinc = %<incomevar.idinc>% 
			and ayear = %<incomevar.yvar>%]{C}
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomevar.idinc>%]{I}	
	]{V} 
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingincometotal 
	where idfin = 
		[SELECT idfin 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{I}
	and idupb= 	[SELECT idupb 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{C} 
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomevar.idinc>%]{I}	
	and nphase = %<sys_incomefinphase>%]{V}
,0)
+ 
ISNULL(%<incomevar.amount>%, 0)
>= 0 
or
([select nphase from income where idinc=%<incomevar.idinc>%]{I}<>%<sys_incomefinphase>%)
or 
[SELECT idfin from incomeyear where idinc = %<incomevar.idinc>% and ayear = %<incomevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from income where idinc = %<incomevar.idinc>%]{I} <> %<sys_esercizio>%
or
%<incomevar.amount>%<0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN005','1','D','incomevar','S','S','S','N','N',{ts '2008-03-21 13:16:46.750'},'SA','Il movimento di entrata non è stato interamente classificato secondo la classificazione obbligatoria.','N','--post
(
[SELECT COUNT(*) FROM sortingkind T
WHERE T.nphaseincome = [SELECT nphase FROM income 
                        WHERE  idinc = %<incomevar.idinc>%]{I}
AND (T.flag & 1) <>0
AND %<sys_esercizio>% between ISNULL(T.start,1900) AND ISNULL(T.stop,2099)  
AND
(
	ISNULL(
		(SELECT ISNULL(SUM(I.amount),0)
		FROM incomesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind= T.idsorkind
		AND I.idinc= %<incomevar.idinc>%
		AND I.ayear = %<sys_esercizio>%)
	,0)
	<
	[SELECT curramount FROM incometotal
	WHERE ayear = %<sys_esercizio>%  
	AND   idinc= %<incomevar.idinc>%]{V}
)
]{I} = 0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI004','1','D','incomevar','S','S','S','S','N',{ts '2007-09-28 11:32:27.233'},'NINO','Il movimento di entrata è inferiore rispetto alle assegnazioni crediti','N','isnull(
ISNULL([(SELECT curramount
from incometotal 
where idinc = &<incomevar.idinc>&
 and ayear = %<sys_esercizio>%
)]{V}, 0) 
,0)
-
isnull(
[(SELECT sum(amount) 
from creditpart 
where idinc = &<incomevar.idinc>&
and ycreditpart = %<sys_esercizio>%)]{V}
,0)
>= 0
or
%<incomevar.amount>%<0
OR
[SELECT nphase FROM income
WHERE idinc = %<incomevar.idinc>%]{C} <> %<sys_assessmentphase>%
OR
[SELECT assured
FROM upb
WHERE idupb = 
	[SELECT idupb FROM incomeyear
	WHERE idinc = %<incomevar.idinc>%
	AND ayear = %<sys_esercizio>%]{C}
]{C} = ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM001','1','D','incomevar','S','S','S','N','N',{ts '2007-03-21 11:27:07.860'},'''NINO''','L''importo del movimento di entrata è diverso dalla somma dei dettagli del contratto attivo associati','N','--post

(

[SELECT COUNT(*) 

FROM  incomeestimateview 

WHERE incomeestimateview.idinc = %<incomevar.idinc>%

AND   ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)

AND   ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0

)

OR

&<incomevar.amount>& = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS004','1','D','incomevar','S','S','S','N','S',{ts '2007-08-30 15:23:54.030'},'NINO','Il movimento di entrata è inferiore rispetto alle assegnazioni incassi','N','[(SELECT ISNULL(curramount, 0) 
from incometotal 
where idinc = &<incomevar.idinc>&
 and ayear = %<sys_esercizio>%
)]{V}
-
[(SELECT ISNULL(sum(amount), 0) 
from proceedspart 
where idinc = &<incomevar.idinc>&)]{V} >= 0
or
%<incomevar.amount>%<0
OR
[SELECT nphase FROM income
WHERE idinc = %<incomevar.idinc>%]{I} <> %<sys_maxincomephase>%
OR
[SELECT assured
FROM upb
WHERE idupb = 
	[SELECT idupb FROM incomeyear
	WHERE idinc = %<incomevar.idinc>%
	AND ayear = %<sys_esercizio>%]{C}
]{C} = ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM003','1','D','incomevar','S','S','S','N','N',{ts '2007-09-28 13:51:47.017'},'NINO','L''importo attuale del movimento %<incomephase.description>% %<income.nmov>%/%<income.ymov>% è minore dell''importo attuale dei movimenti dipendenti','N','--post
ISNULL([(SELECT available
from incometotal 
where idinc = %<incomevar.idinc>% 
and ayear = %<incomevar.yvar>%)]{V} , 0) 
>= 0 
or 
[(SELECT count(*) 
from income 
where parentidinc = %<incomevar.idinc>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM003','2','D','incomevar','S','S','S','N','N',{ts '2007-09-28 13:52:51.967'},'NINO','L''importo attuale dei movimenti di entrata della fase %<incomephase.description>% è maggiore dell''importo attuale del movimento della fase precedente','N','--post
[(SELECT nphase 
from income 
where idinc = %<incomevar.idinc>%)]{I} = 1 
or 
ISNULL([(SELECT available
from incometotal 
join income 
on incometotal.idinc = income.parentidinc 
where income.idinc = %<incomevar.idinc>% and 
	incometotal.ayear = %<incomevar.yvar>%)]{V} , 0) 
 >= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM007','1','D','incomevar','S','S','S','N','N',{ts '2011-09-15 12:25:18.640'},'sara','La variazione relativa al movimento finanziario di entrata %<income.ymov>% %<income.nmov>% non può essere annullata in quanto il movimento è già incluso nella reversale di incasso %<incomeview.ypro>% %<incomeview.npro>%.','S','ISNULL([SELECT proceeds.kproceedstransmission 
from incomelast 
join proceeds 
	on proceeds.kpro = incomelast.kpro 
where incomelast.idinc = %<incomevar.idinc>%]{I},0)=0
or
isnull([SELECT kpro 
from incomelast 
where idinc = %<incomevar.idinc>%]{I} ,0)=0
or 
(%<incomevar.autokind>% in (10,11,22))
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast
JOIN proceeds 
	ON proceeds.kpro = incomelast.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'' )= ''S'')
AND
[(SELECT COUNT(*)  FROM incomevar  
WHERE idinc = %<incomevar.idinc>%
AND nvar <> %<incomevar.nvar>%
AND kproceedstransmission IS NULL AND autokind = 22)]{I} <> 0
AND
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM incomelast
JOIN proceeds 
	ON proceeds.kpro = incomelast.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},'''' ) <> ''02008''
)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM016','1','D','incomevar','S','S','S','N','N',{ts '2007-11-27 10:23:23.047'},'SARA','Le classificazioni associate al movimento di entrata n. %<income.nmov>%/%<income.ymov>% sono superiori rispetto all''importo dello stesso','N','--post
[SELECT curramount FROM incometotal
WHERE idinc= %<incomevar.idinc>% 
AND ayear= %<incomevar.yvar>%]{N}
>=
[ISNULL(
	(SELECT TOP 1 SUM(I.amount)
	FROM incomesorted I
	JOIN sorting S
		ON I.idsor = S.idsor
	WHERE I.idinc = %<incomevar.idinc>%
	AND I.ayear = %<sys_esercizio>%
	GROUP BY S.idsorkind,I.idinc  
	ORDER BY SUM(I.amount) desc)
,0)]{N}')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM020','1','D','incomevar','S','S','S','N','N',{ts '2007-12-13 13:47:35.523'},'SARA','Non può essere cancellato l''importo di una variazione di entrata sul movimento %<income.idinc>% / %<income.ymov>% in quanto la disponibilità negli anni successivi diventa negativa','S','(
	[SELECT COUNT(*)
	FROM incometotal
	WHERE idinc = %<incomevar.idinc>%
	AND ayear > %<sys_esercizio>%]{I} = 0
)
OR
(
	ISNULL([SELECT MIN(available)
	FROM incometotal
	WHERE idinc = %<incomevar.idinc>%
	AND ayear > %<sys_esercizio>%]{V},0)
	-
	%<incomevar.amount>%
	>= 0
)
OR
(
	ISNULL(
		[SELECT MAX(ayear) FROM accountingyear WHERE ((flag&0x0F)>=4)]{I}
	,%<sys_esercizio>%-1) < %<sys_esercizio>%
)
OR
%<incomevar.amount>%<0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM020','2','D','incomevar','S','S','S','N','N',{ts '2007-12-13 13:47:47.397'},'SARA','Non può essere cancellata la variazione di entrata sul movimento %<income.idinc>% / %<income.ymov>% in quanto la disponibilità del movimento della fase precedente negli anni successivi diventa negativa','N','(
	[SELECT COUNT(*)
	FROM incometotal
	WHERE idinc = [select parentidinc from income where idinc = %<incomevar.idinc>%]{I}
	AND ayear > %<sys_esercizio>%]{I} = 0
)
OR
(
	ISNULL([SELECT MIN(available)
	FROM incometotal
	WHERE idinc =[select parentidinc from income where idinc = %<incomevar.idinc>%]{I}
	AND ayear > %<sys_esercizio>%]{V},0)
	>= 0
)
OR
(
	ISNULL(
		[SELECT MAX(ayear) FROM accountingyear WHERE ((flag&0x0F)>=4)]{I}
	,%<sys_esercizio>%-1) < %<sys_esercizio>%
)
OR
%<incomevar.amount>%>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM021','1','D','incomevar','S','S','S','N','N',{ts '2007-09-28 11:40:28.267'},'NINO','FONDO DI CASSA INIZIALE + totale delle reversali trasmesse in banca deve essere maggiore od uguale al totale dei pagamenti (anche non inclusi in un mandato)','N','--post
ISNULL([SELECT currentfloatfund FROM currentcashtotal WHERE ayear = %<sys_esercizio>%]{V},0) >= 0
OR
([SELECT nphase FROM income
WHERE idinc = %<incomevar.idinc>%]{I}<> %<sys_maxincomephase>%)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM024','1','D','incomevar','S','S','S','S','N',{ts '2007-09-28 13:51:00.860'},'NINO','Le assegnazioni dei crediti sono superiori al movimento di entrata %<income.nmov>% / %<income.ymov>%','N','--post
(
 ISNULL([SELECT SUM(amount) FROM creditpart
	WHERE idinc = %<incomevar.idinc>%
	AND ycreditpart = %<sys_esercizio>%
 ]{V},0)
-
 [SELECT curramount FROM incometotal
	WHERE idinc = %<incomevar.idinc>% 
	AND ayear = %<sys_esercizio>%
 ]{V}
) <= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM024','2','D','incomevar','S','S','S','N','S',{ts '2007-09-28 11:30:37.327'},'NINO','Le assegnazioni degli incassi sono superiori al movimento di entrata %<income.nmov>% / %<income.ymov>%','N','--post
(ISNULL([SELECT SUM(amount) FROM proceedspart
WHERE idinc = %<incomevar.idinc>% AND
yproceedspart = %<sys_esercizio>%]{V},0) -
[SELECT curramount FROM incometotal
WHERE idinc = %<incomevar.idinc>% 
AND ayear = %<sys_esercizio>%]{V}) <= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM025','1','D','incomevar','S','S','S','N','N',{ts '2011-09-15 16:29:56.813'},'sara','Non può essere cancellata una variazione sul movimento di entrata %<income.nmov>%/%<income.ymov>% in quanto è inserito in una reversale di incasso','N','--post
ISNULL([SELECT kpro FROM incomelast 
WHERE idinc = %<incomevar.idinc>%
]{I},0) = 0

OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast
JOIN proceeds 
	ON proceeds.kpro = incomelast.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'' )= ''S'')
AND
[(SELECT COUNT(*)  FROM incomevar  
WHERE idinc = %<incomevar.idinc>%
AND nvar <> %<incomevar.nvar>%
AND kproceedstransmission IS NULL AND autokind = 22)]{I} <> 0
AND
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM incomelast
JOIN proceeds 
	ON proceeds.kpro = incomelast.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},'''' ) <> ''02008''
)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM026','1','D','incomevar','S','N','S','N','N',{ts '2007-09-01 15:06:52.890'},'NINO','Non è possibile cancellare una variazione NEGATIVA dal movimento di entrata n. %<income.nmov>% / %<income.ymov>%  perchè è un residuo','S','[SELECT flag & 1 from incometotal
where incometotal.idinc =%<incomevar.idinc>% 
and incometotal.ayear=%<sys_esercizio>%]{I} = 0
or
[SELECT ymov from income
where income.idinc = %<incomevar.idinc>%]{I} = %<sys_esercizio>%
or
%<incomevar.amount>% >= 0
or
%<incomevar.yvar>% =%<sys_esercizio>%
or

([SELECT nphase FROM income WHERE idinc = %<incomevar.idinc>%]{I}  <> 

[SELECT assessmentphasecode FROM config  where ayear =  %<sys_esercizio>%]{I}  ) 





')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM027','1','D','incomevar','S','N','S','N','N',{ts '2007-08-30 16:26:28.157'},'NINO','Non è possibile cancellare una variazione POSITIVA dal movimento di entrata n. %<income.nmov>%/%<income.ymov>% perchè è un residuo','S','

[SELECT flag & 1 from incometotal
where incometotal.idinc =%<incomevar.idinc>% 
and incometotal.ayear=%<sys_esercizio>%]{I} = 0

or
[SELECT ymov from income where income.idinc = %<incomevar.idinc>%]{I} = %<sys_esercizio>%
or
%<incomevar.amount>% <= 0
or


([SELECT nphase FROM income WHERE idinc = %<incomevar.idinc>%]{I}  <> 

[SELECT assessmentphasecode FROM config where ayear =  %<sys_esercizio>%]{I}  ) 





')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM038','1','D','incomevar','S','S','S','S','N',{ts '2009-01-20 12:31:44.367'},'SA','Il totale dell''accertato è inferiore al totale dell''impegnato per l''UPB scelto','S','[SELECT assured FROM upb
WHERE idupb = 
	[SELECT idupb FROM incomeyear
	WHERE idinc = %<incomevar.idinc>%
	AND ayear = %<incomevar.yvar>%]{C}
]{C} <> ''S''
OR
[SELECT nphase FROM income WHERE idinc = %<incomevar.idinc>%]{I}
<> 
%<sys_assessmentphase>%
OR
ISNULL([SELECT SUM(amount) FROM incomeyear
 join income on incomeyear.idinc=income.idinc
 join incometotal on incometotal.idinc= incomeyear.idinc
              and incometotal.idinc= incomeyear.idinc
WHERE idupb = 
	[SELECT idupb FROM incomeyear
	WHERE idinc = %<incomevar.idinc>%
	AND ayear = %<incomevar.yvar>%]{C}
AND income.nphase = %<sys_assessmentphase>%
AND (incometotal.flag & 1)=0
]{V},0)
- %<incomevar.amount>%
+
ISNULL(
	[SELECT SUM(incomevar.amount)
	FROM incomevar
	JOIN incomeyear
			ON incomevar.idinc = incomeyear.idinc
			AND incomeyear.ayear= %<incomevar.yvar>%
	join income 
			on incomeyear.idinc=income.idinc
 	
	WHERE incomevar.yvar <= %<sys_esercizio>%
	AND incomeyear.idupb = 
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
	AND income.nphase = %<sys_assessmentphase>%	
]{V}
,0)
+
ISNULL(
	[SELECT ISNULL(previousassessment,0) - ISNULL(previousappropriation,0)
	FROM upb WHERE idupb = 
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(creditvariation)
	FROM upbtotal
	WHERE idupb = 
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
	]{V}
,0)
>=
ISNULL(
	[SELECT SUM(amount)
	FROM expenseyear
	join expense 
			on expenseyear.idexp=expense .idexp
 	join expensetotal 
			on expensetotal.idexp= expenseyear.idexp
              	and expensetotal.ayear= expenseyear.ayear
	WHERE idupb =
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
	AND expense.nphase = %<sys_appropriationphase>%
	AND (expensetotal.flag & 1)=0

]{V}
,0)
+
ISNULL(
	[SELECT SUM(expensevar.amount) FROM expensevar
	JOIN expenseyear
			ON expensevar.idexp = expenseyear.idexp
			AND expenseyear.ayear=%<incomevar.yvar>%
	join expense 
			on expenseyear.idexp=expense .idexp
	WHERE expensevar.yvar <= %<sys_esercizio>%
	AND expenseyear.idupb = 
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
	AND expense.nphase = %<sys_appropriationphase>%
]{V}
,0)
OR %<incomevar.amount>% <= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM056','1','D','incomevar','S','N','S','S','N',{ts '2007-09-01 09:25:19.017'},'NINO','L''importo dell''assegnazione crediti deve essere uguale a quello del movimento di entrata','N','ISNULL(
	[SELECT SUM(amount) FROM creditpart
	WHERE idinc = %<incomevar.idinc>%]{V}
,0) = 
ISNULL(
	[SELECT curramount
	FROM incometotal
	WHERE idinc = %<incomevar.idinc>%
	AND ayear = %<incomevar.yvar>%]{V}
,0)
OR
[SELECT nphase FROM income
WHERE idinc = %<incomevar.idinc>%]{I}
<> %<sys_incomefinphase>%
OR
ISNULL(
	[SELECT assured FROM upb
	WHERE idupb =
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
]{C}
,''N'') = ''S''
OR
[SELECT flag & 1 FROM incometotal
WHERE idinc = %<incomevar.idinc>%
AND ayear = %<incomevar.yvar>%]{I} <> 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM056','2','D','incomevar','S','S','N','N','S',{ts '2007-09-01 09:25:32.140'},'NINO','L''importo dell''assegnazione incassi deve essere uguale a quello del movimento di entrata','N','ISNULL(
	[SELECT SUM(amount) FROM proceedspart
	WHERE idinc = %<incomevar.idinc>%]{V}
,0) = 
ISNULL(
	[SELECT curramount
	FROM incometotal
	WHERE idinc = %<incomevar.idinc>%
	AND ayear = %<incomevar.yvar>%]{V}
,0)
OR
[SELECT nphase FROM income
WHERE idinc = %<incomevar.idinc>%]{I}
<> %<sys_maxincomephase>%
OR
ISNULL(
	[SELECT assured FROM upb
	WHERE idupb =
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
]{C}
,''N'') = ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','1','D','incomevar','S','S','S','N','N',{ts '2011-07-28 10:24:42.170'},'sara','Nella gestione dell''ordinativo informatico non è possibile cancellare variazioni di annullo e variazioni dati già trasmesse, bisogna prima rimuoverle dall''elenco..','S','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds  
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'' )= ''N'')
)
OR
-- 2) le variazioni sono di tipo normale
ISNULL(%<incomevar.autokind>%,0) NOT IN (10,11,22)
OR
-- 3) la fase della variazione è inferiore alla fase massima
[SELECT nphase FROM income
 WHERE income.idinc = %<incomevar.idinc>%
]{I} < %<sys_maxincomephase>%
OR
-- 4) le variaizoni non sono state trasmesse
%<incomevar.kproceedstransmission>% IS NULL





 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','2','D','incomevar','S','S','S','N','N',{ts '2011-09-15 10:26:10.780'},'sara','Nella gestione dell''ordinativo informatico non è possibile cancellare variazioni dati non trasmesse, perchè la  reversale potrebbe essere stata già modificata','S','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds  
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds  .idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'' )= ''N'')
)
OR
-- 2) le variazioni non sono di tipo modifica dati
ISNULL(%<incomevar.autokind>%,0) <>22
OR
-- 3) la fase della variazione è inferiore alla fase massima
[SELECT nphase FROM income
 WHERE income.idinc = %<incomevar.idinc>%
]{I} < %<sys_maxincomephase>%
OR
-- 4)  gli incassi non sono stati trasmessi
([SELECT proceeds.kproceedstransmission 
FROM incomelast 
JOIN proceeds  
	ON incomelast.kpro = proceeds.kpro
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C}
) IS NULL


 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM107','1','D','incomevar','S','S','S','N','N',{ts '2012-11-15 11:35:03.803'},'sa','Saldo iniziale + Tot. reversali emesse + Girofondi in entrata deve essere maggiore od uguale al Tot. pagamenti emessi + Girofondi in uscita.','N','([select nphase from income where idinc=%<incomevar.idinc>%]{I}<> %<sys_maxincomephase>%)
OR
ISNULL([SELECT currentfloatfund 
FROM treasurercashtotal 
WHERE ayear = %<sys_esercizio>%
and idtreasurer =isnull([select idtreasurer from proceeds
			join incomelast 
				on proceeds.kpro= incomelast.kpro 
			where incomelast.idinc = %<incomevar.idinc>%]{I},0)
]{V},0) >= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON003','1','D','incomevar','S','N','N','N','N',{ts '2007-08-30 16:10:30.377'},'NINO','La previsione di cassa della voce di entrata %<fin.codefin>% e %<upb.codeupb>% è INSUFFICIENTE!','N','--post
   (
	ISNULL([SELECT
		    ISNULL(currentsecondaryprev,0)+
		    ISNULL(secondaryvariation, 0) 
		    FROM upbtotal 
		    WHERE 
			idfin = 
	    	    [SELECT idfin FROM incomeyear WHERE 
			idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{I}
			and
			idupb = 
	    	    [SELECT idupb FROM incomeyear WHERE 
			idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{C}
		]{V}
	,0)
	- 
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM upbincometotal
		WHERE idfin = 
			[SELECT idfin FROM incomeyear WHERE 
			idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{I}
			and
			idupb = 
	    	    [SELECT idupb FROM incomeyear WHERE 
			idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{C}
		AND nphase =%<sys_maxincomephase>%]{V}
	,0)
      ) >= 0

OR
([select nphase from income where idinc=%<incomevar.idinc>%]{I} <> %<sys_maxincomephase>%)
or
%<incomevar.amount>%>0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON007','1','D','incomevar','S','N','N','N','N',{ts '2013-05-21 11:03:24.890'},'sa','La previsione di cassa della voce di entrata di Finanziamento: %<incomevarview.underwriting>% , UPB: %<incomevarview.upb>% , Bilancio: %<incomevarview.codefin>% è INSUFFICIENTE!','N','--post
(isnull([select idunderwriting from income where idinc = %<incomevar.idinc>%]{I},0)=0)  
OR
   (
	ISNULL([SELECT
		    ISNULL(currentsecondaryprev,0)+
		    ISNULL(secondaryvariation, 0) 
		    FROM upbunderwritingtotal 
		    WHERE 
			idfin = 
	    	    [SELECT idfin FROM incomeyear WHERE 
			idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{I}
			and
			idupb = 
	    	    [SELECT idupb FROM incomeyear WHERE 
			idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{C}
		and idunderwriting= [select idunderwriting 
			from income 
			where idinc = %<incomevar.idinc>%]{I}	

		]{V}
	,0)
	- 
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM underwritingincometotal
		WHERE idfin = 
			[SELECT idfin FROM incomeyear WHERE 
			idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{I}
			and
			idupb = 
	    	    [SELECT idupb FROM incomeyear WHERE 
			idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{C}
		and idunderwriting= [select idunderwriting 
			from income 
			where idinc = %<incomevar.idinc>%]{I}	
		AND nphase =%<sys_maxincomephase>%]{V}
	,0)
      ) >= 0

OR
([select nphase from income where idinc=%<incomevar.idinc>%]{I} <> %<sys_maxincomephase>%)
or
%<incomevar.amount>%>0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','1','D','incomevar','S','S','S','N','N',{ts '2010-11-08 10:34:15.297'},'sa','L''utente non è abilitato alla cancellazione di variazioni di fasi finanziarie precedenti alla fase dell'' Accertamento giuridico.','N','[SELECT nphase FROM income WHERE idinc = %<incomevar.idinc>%]{I}  >= %<sys_assessmentphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''pre_accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','2','D','incomevar','S','S','S','N','N',{ts '2010-11-08 10:34:33.250'},'sa','L''utente non è abilitato alla cancellazione di variazioni di fasi finanziarie successive alla fase dell'' Accertamento giuridico.','N','[SELECT nphase FROM income WHERE idinc = %<incomevar.idinc>%]{I} <= %<sys_assessmentphase>%

OR 

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''post_accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL






')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','3','D','incomevar','S','S','S','N','N',{ts '2010-11-08 10:34:39.547'},'sa','L''utente non è abilitato alla cancellazione di variazioni di fasi finanziarie equivalenti all'' Accertamento giuridico.','N','[SELECT nphase FROM income WHERE idinc = %<incomevar.idinc>%]{I} <> %<sys_assessmentphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BOLLE001','1','I','incomevar','S','S','S','N','N',{ts '2013-07-08 10:19:50.080'},'nino','Con la variazione effettuata, la somma dei movimenti di entrata collegati alla bolletta diventa maggiore dell''importo della bolletta.','N','[select nphase from income where idinc=%<incomevar.idinc>%]{I}
<> %<sys_maxincomephase>% 

OR 

[select nbill from incomelast where idinc = %<incomevar.idinc>%]{I} IS NULL


OR


ISNULL([SELECT SUM(curramount)
FROM incometotal
join incomelast on incometotal.idinc=incomelast.idinc
where incomelast.idinc= %<incomevar.idinc>%
and ayear = %<sys_esercizio>%
and incomelast.nbill=  [select nbill from incomelast where idinc = %<incomevar.idinc>%]{I}

]{V},0)
<= 
ISNULL(
[SELECT ISNULL(total, 0) from bill 
	where  ybill = %<sys_esercizio>% 	
	and 	nbill= [select nbill from incomelast where idinc = %<incomevar.idinc>%]{I} 
	and 	billkind =''C''
]{V}
,0) 


')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA001','1','I','incomevar','N','S','N','N','N',{ts '2007-08-31 12:23:48.343'},'NINO','La previsione della voce in entrata %<fin.codefin>% e UPB %<upb.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT 
	isnull(currentprev,0)+
	ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{C}
	]{V}
,0)
- 
[(SELECT ISNULL(totalcompetency, 0) + 
ISNULL(totalarrears, 0) 
from upbincometotal 
where idfin = 
		[(SELECT idfin 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%)]{I}
	and idupb = 
		[SELECT idupb 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{C}

and nphase = %<sys_incomefinphase>%)]{V} 
- 
ISNULL(%<incomevar.amount>%, 0) >= 0 
or
[select nphase from income where idinc=%<incomevar.idinc>%]{I}<> %<sys_incomefinphase>%

or
%<incomevar.amount>%<0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA003','1','I','incomevar','N','S','N','N','N',{ts '2013-05-21 10:47:01.147'},'sa','La previsione della voce in entrata Finanziamento: %<incomevarview.underwriting>% , UPB: %<incomevarview.upb>% , Bilancio: %<incomevarview.codefin>%  è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<incomevar.idinc>%]{I},0)=0)  
OR
ISNULL(
	[SELECT 
	isnull(currentprev,0)+
	ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{I}
	and idupb=	[SELECT idupb 
			from incomeyear 
			where idinc = %<incomevar.idinc>% 
			and ayear = %<incomevar.yvar>%]{C}
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomevar.idinc>%]{I}	
	]{V}
,0)
- 
[(SELECT ISNULL(totalcompetency, 0) + 
ISNULL(totalarrears, 0) 
from underwritingincometotal 
where idfin = 
		[(SELECT idfin 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%)]{I}
	and idupb = 
		[SELECT idupb 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{C}
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomevar.idinc>%]{I}	
and nphase = %<sys_incomefinphase>%)]{V} 
- 
ISNULL(%<incomevar.amount>%, 0) >= 0 
or
[select nphase from income where idinc=%<incomevar.idinc>%]{I}<> %<sys_incomefinphase>%

or
%<incomevar.amount>%<0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','I','incomevar','S','S','S','N','N',{ts '2007-12-14 13:53:41.793'},'NINO','La variazione al movimento di entrata %<incomeview.phase>% n. %<incomeview.nmov>% / %<incomeview.ymov>% non può essere inserita. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE002','1','I','incomevar','S','N','S','N','N',{ts '2007-10-03 19:34:56.453'},'NINO','La previsione di competenza della voce in entrata %<incomeview.codefin>% e UPB %<incomeview.codeupb>%  è INSUFFICIENTE!','N','ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{I}
	and idupb=
	[SELECT idupb 
	from incomeyear 
	where idinc = %<incomevar.idinc>% 
	and ayear = %<incomevar.yvar>%]{C}
	]{V}
,0)
- 
ISNULL([SELECT ISNULL(totalcompetency, 0) 
from upbincometotal 
where idfin = 
	[SELECT idfin 
	from incomeyear 
	where idinc = %<incomevar.idinc>% 
	and ayear = %<incomevar.yvar>%]{I}
and idupb=
	[SELECT idupb 
	from incomeyear 
	where idinc = %<incomevar.idinc>% 
	and ayear = %<incomevar.yvar>%]{C}

and nphase = %<sys_incomefinphase>%]{V},0)
/*- 
ISNULL(%<incomevar.amount>%, 0) 
*/
>= 0 
or
%<incomevar.amount>%<0
or
([select nphase from income where idinc=%<incomevar.idinc>%]{I} <> %<sys_incomefinphase>%)
or 
[SELECT idfin from incomeyear where idinc = %<incomevar.idinc>% 
and ayear = %<incomevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from income where idinc = %<incomevar.idinc>%]{I} <> %<sys_esercizio>%
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE009','1','I','incomevar','S','N','S','N','N',{ts '2013-05-21 10:54:47.027'},'sa','La previsione di competenza entrata di Finanziamento: %<incomevarview.underwriting>% , UPB: %<incomevarview.upb>% , Bilancio: %<incomevarview.codefin>% è INSUFFICIENTE!','N','(isnull([select idunderwriting from income where idinc = %<incomevar.idinc>%]{I},0)=0)  
OR
ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{I}
	and idupb=
	[SELECT idupb 
	from incomeyear 
	where idinc = %<incomevar.idinc>% 
	and ayear = %<incomevar.yvar>%]{C}
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomevar.idinc>%]{I}	
]{V}
,0)
- 
ISNULL([SELECT ISNULL(totalcompetency, 0) 
from underwritingincometotal 
where idfin = 
	[SELECT idfin 
	from incomeyear 
	where idinc = %<incomevar.idinc>% 
	and ayear = %<incomevar.yvar>%]{I}
and idupb=
	[SELECT idupb 
	from incomeyear 
	where idinc = %<incomevar.idinc>% 
	and ayear = %<incomevar.yvar>%]{C}
and idunderwriting= [select idunderwriting 
	from income 
	where idinc = %<incomevar.idinc>%]{I}	
and nphase = %<sys_incomefinphase>%]{V},0)
/*- 
ISNULL(%<incomevar.amount>%, 0) 
*/
>= 0 
or
%<incomevar.amount>%<0
or
([select nphase from income where idinc=%<incomevar.idinc>%]{I} <> %<sys_incomefinphase>%)
or 
[SELECT idfin from incomeyear where idinc = %<incomevar.idinc>% 
and ayear = %<incomevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov from income where idinc = %<incomevar.idinc>%]{I} <> %<sys_esercizio>%
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN005','1','I','incomevar','S','S','S','N','N',{ts '2008-03-21 13:16:37.780'},'SA','Il movimento di entrata non è stato interamente classificato secondo la classificazione obbligatoria.','N','--post
(
[SELECT COUNT(*) FROM sortingkind T
WHERE T.nphaseincome = [SELECT nphase FROM income 
                        WHERE  idinc = %<incomevar.idinc>%]{I}
AND (T.flag & 1) <> 0
AND %<sys_esercizio>% between ISNULL(T.start,1900) AND ISNULL(T.stop,2099)  
AND
(
	ISNULL(
		(SELECT ISNULL(SUM(I.amount),0)
		FROM incomesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind= T.idsorkind
		AND I.idinc= %<incomevar.idinc>%
		AND I.ayear = %<sys_esercizio>%)
	,0)
	<
	[SELECT curramount FROM incometotal
	WHERE ayear = %<sys_esercizio>%  
	AND   idinc= %<incomevar.idinc>%]{V}
)
]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI004','1','I','incomevar','S','S','S','S','N',{ts '2007-08-31 12:26:24.877'},'NINO','Il movimento di entrata è inferiore rispetto alle assegnazioni crediti','N','--post
isnull([(SELECT ISNULL(curramount, 0) 
from incometotal 
where idinc = %<incomevar.idinc>%
 and ayear = %<sys_esercizio>%
)]{V}
,0)
-
isnull(
[(SELECT ISNULL(sum(amount), 0) 
from creditpart 
where idinc = %<incomevar.idinc>%
and ycreditpart = %<sys_esercizio>%)]{V}
,0)
>= 0
or
%<incomevar.amount>%>0
OR
[SELECT nphase FROM income WHERE idinc = %<incomevar.idinc>%]{I} <> %<sys_assessmentphase>%
OR
[SELECT assured
FROM upb
WHERE idupb = 
	[SELECT idupb FROM incomeyear
	WHERE idinc = %<incomevar.idinc>%
	AND ayear = %<sys_esercizio>%]{C}
]{C} = ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM001','1','I','incomevar','S','S','S','N','N',{ts '2007-03-21 11:26:55.047'},'''NINO''','L''importo del movimento di entrata è diverso dalla somma dei dettagli del contratto attivo associati','N','--post

(

[SELECT COUNT(*) 

FROM  incomeestimateview 

WHERE incomeestimateview.idinc = %<incomevar.idinc>%

AND   ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)

AND   ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0

)

OR

%<incomevar.amount>% = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA001','1','I','incomevar','S','S','S','N','N',{ts '2007-04-13 10:14:25.500'},'''SA''','L''importo del documento IVA %<idinvkind>% %<ninv>%/%<yinv>% è minore delle variazioni di entrata che lo contabilizzano','N','--post
%<incomevar.idinvkind>% IS NULL
OR
isnull([(SELECT AVG(residual)
FROM invoiceavailable
WHERE invoiceavailable.yinv = %<incomevar.yinv>% AND
invoiceavailable.ninv = %<incomevar.ninv>% AND
invoiceavailable.idinvkind = %<incomevar.idinvkind>%)]{N},0)>=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA009','1','I','incomevar','S','S','S','N','N',{ts '2013-04-17 10:01:21.910'},'sara','La variazione inserita deve contabilizzare un documento IVA.','N','(ISNULL(%<incomevar.autokind>%,0) = 10)
OR
(ISNULL(%<incomevar.autokind>%,0) = 11)
OR
(ISNULL(%<incomevar.autokind>%,0) = 22)
OR
(
[SELECT COUNT(*) FROM incomeinvoice 
WHERE idinc = %<incomevar.idinc>%]{I}= 0
)
OR %<incomevar.idinvkind>% IS NOT NULL')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA009','2','I','incomevar','S','S','S','N','N',{ts '2013-04-17 10:01:27.993'},'sara','La variazione inserita che contabilizza la nota di credito deve essere coerente con la contabilizzazione del movimento principale','N','(%<incomevar.idinvkind>% IS NULL)
OR
(ISNULL(%<incomevar.autokind>%,0) = 10)
OR
(ISNULL(%<incomevar.autokind>%,0) = 11)
OR
(ISNULL(%<incomevar.autokind>%,0) = 22)
OR
[SELECT COUNT(*)
FROM incomeinvoice
WHERE idinc = %<incomevar.idinc>%
AND movkind = %<incomevar.movkind>%]{I} = 1
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA016','1','I','incomevar','S','S','S','N','N',{ts '2007-12-12 11:41:45.437'},'PINO','La nota di credito deve avere una causale selezionata','S','%<incomevar.idinvkind>% IS NULL
OR
ISNULL(%<incomevar.movkind>%,0) <> 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA019','1','I','incomevar','S','S','S','N','N',{ts '2009-09-16 12:31:05.953'},'SARA','L''importo della variazione che contabilizza il documento  %<incomevar.ninv>% / %<incomevar.yinv>% non può essere diverso dalla somma dei dettagli associati.','N','-- docum
%<incomevar.idinvkind>% IS NULL
OR
ISNULL(%<incomevar.movkind>%,0) <> 1
OR
[(select isnull(sum(invoicedetailview.rowtotal), 0)  
from invoicedetailview
where  invoicedetailview.idinvkind =%<incomevar.idinvkind>%
and invoicedetailview.yinv = %<incomevar.yinv>%
and invoicedetailview.ninv = %<incomevar.ninv>%
and invoicedetailview.idinc_taxable = %<incomevar.idinc>%
and invoicedetailview.idinc_iva = %<incomevar.idinc>%
)]{V}
=
-
%<incomevar.amount>%


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA019','2','I','incomevar','S','S','S','N','N',{ts '2009-09-16 12:31:16.797'},'SARA','L''importo della variazione che contabilizza il documento  %<incomevar.ninv>% / %<incomevar.yinv>% non può essere diverso dalla somma dei dettagli associati.','N','
-- impon
%<incomevar.idinvkind>% IS NULL
OR
ISNULL(%<incomevar.movkind>%,0) <> 3
OR
[(select isnull(sum(invoicedetailview.taxable_euro), 0)  
from invoicedetailview
where  invoicedetailview.idinvkind =%<incomevar.idinvkind>%
and invoicedetailview.yinv = %<incomevar.yinv>%
and invoicedetailview.ninv = %<incomevar.ninv>%
and invoicedetailview.idinc_taxable = %<incomevar.idinc>%
)]{V}
=
-
%<incomevar.amount>%




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA019','3','I','incomevar','S','S','S','N','N',{ts '2009-09-16 12:31:28.080'},'SARA','L''importo della variazione che contabilizza il documento  %<incomevar.ninv>% / %<incomevar.yinv>% non può essere diverso dalla somma dei dettagli associati.','N','-- impos
%<incomevar.idinvkind>% IS NULL
OR
ISNULL(%<incomevar.movkind>%,0) <> 2
OR

[(select isnull(sum(invoicedetailview.iva_euro), 0)  
from invoicedetailview
where  invoicedetailview.idinvkind =%<incomevar.idinvkind>%
and invoicedetailview.yinv = %<incomevar.yinv>%
and invoicedetailview.ninv = %<incomevar.ninv>%
and invoicedetailview.idinc_iva = %<incomevar.idinc>%
)]{V}
=
-
%<incomevar.amount>%



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA021','1','I','incomevar','S','S','S','N','N',{ts '2009-01-20 12:25:20.367'},'SA','La variazione inserita non può contabilizzare una nota di credito ed essere anche di annullamento','S','(%<incomevar.idinvkind>% IS NULL)
OR
(ISNULL(%<incomevar.autokind>%,0) NOT IN (10,11))
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS004','1','I','incomevar','S','S','S','N','S',{ts '2007-08-31 12:28:30.640'},'NINO','Il movimento di entrata è inferiore rispetto alle assegnazioni incassi','N','isnull(
	[(SELECT ISNULL(curramount, 0) 
	from incometotal 
	where idinc = %<incomevar.idinc>%
	 and ayear = %<sys_esercizio>%
	)]{V}
,0)
-
isnull(
	[(SELECT ISNULL(sum(amount), 0) 
	from proceedspart 
	where idinc = %<incomevar.idinc>%)]{V}
,0)
 >= 0
or
%<incomevar.amount>%>0
OR
[SELECT nphase FROM income
WHERE idinc = %<incomevar.idinc>%]{I} <> %<sys_maxincomephase>%
OR
[SELECT assured
FROM upb
WHERE idupb = 
	[SELECT idupb FROM incomeyear
	WHERE idinc = %<incomevar.idinc>%
	AND ayear = %<sys_esercizio>%]{C}
]{C} = ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM003','1','I','incomevar','S','S','S','N','N',{ts '2006-05-22 15:25:24.377'},'''SARA''','L''importo attuale del movimento %<incomephase.description>% %<income.nmov>%/%<income.ymov>% è minore dell''importo attuale dei movimenti dipendenti','N','[(SELECT ISNULL(available, 0) 
from incometotal 
where idinc = %<incomevar.idinc>% 
and ayear = %<sys_esercizio>%)]{N} 
--+ [ISNULL(%<incomevar.amount>%, 0)]{N}
 >= 0  
or 
[(SELECT count(*) 
from income 
where parentidinc = %<incomevar.idinc>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM003','2','I','incomevar','S','S','S','N','N',{ts '2009-02-02 13:11:33.047'},'ASSISTENZA','L''importo attuale dei movimenti di entrata della fase %<incomephase.description>% è maggiore dell''importo attuale del movimento della fase precedente','N','[(SELECT nphase 
from income 
where idinc = %<incomevar.idinc>%)]{I} = 1 
or 
[(SELECT ISNULL(incometotal.available, 0) 
from incometotal
join income 
on incometotal.idinc = income.parentidinc 
and incometotal.ayear = %<incomevar.yvar>%
where income.idinc = %<incomevar.idinc>%)]{V} 
 >= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM004','1','I','incomevar','S','S','S','N','N',{ts '2010-02-18 10:25:08.420'},'SA','L''importo attuale del movimento di entrata %<income.ymov>% %<income.nmov>% è NEGATIVO','N','[(SELECT MIN(ISNULL(curramount, 0)) 
from incometotal 
where idinc = %<incomevar.idinc>%)]{V} 
>= 0


')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM004','2','I','incomevar','S','S','S','N','N',{ts '2010-02-22 10:47:28.217'},'SARA','L''importo attuale del movimento di entrata %<income.ymov>% %<income.nmov>% in anni successivi diventa NEGATIVO','S','%<incomevar.amount>%>0
OR
[(SELECT MIN(ISNULL(curramount, 0) + ISNULL(%<incomevar.amount>%,0))
from incometotal 
where idinc = %<incomevar.idinc>%
and ayear > %<incomevar.yvar>%
)]{V} 
>= 0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM007','1','I','incomevar','S','S','S','N','N',{ts '2011-09-15 16:21:01.030'},'sara','Il movimento finanziario di entrata %<income.ymov>% %<income.nmov>% non può essere variato in quanto è già incluso nella reversale di incasso %<incomeview.ypro>% %<incomeview.npro>%.','N','ISNULL([SELECT proceeds.kproceedstransmission 
from incomelast 
join proceeds 
	on proceeds.kpro = incomelast.kpro 
where incomelast.idinc = %<incomevar.idinc>%]{I},0)=0
or
isnull([SELECT kpro 
from incomelast 
where idinc = %<incomevar.idinc>%]{I},0) =0
or 
-- variazioni di annullo e variazioni di modifica dati
(%<incomevar.autokind>% in (10,11,22))
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast
JOIN proceeds 
	ON proceeds.kpro = incomelast.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'' )= ''S'')
AND
[(SELECT count(*)  from incomevar  
where idinc = %<incomevar.idinc>%
AND kproceedstransmission is null AND autokind = 22)]{I} <> 0
AND
-- unicredit non ammette variazioni di dati contabili ma solo di dati non contabili
-- classificazione SIOPE
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM incomelast
JOIN proceeds 
	ON proceeds.kpro = incomelast.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},'''' ) <> ''02008''
)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM016','1','I','incomevar','S','S','S','N','N',{ts '2007-11-27 10:23:50.327'},'SARA','Le classificazioni associate al movimento di entrata n. %<income.nmov>%/%<income.ymov>% sono superiori rispetto all''importo dello stesso','N','--post
[SELECT curramount FROM incometotal
WHERE idinc= %<incomevar.idinc>% 
AND ayear= %<incomevar.yvar>%]{N}
>=
[ISNULL(
	(SELECT TOP 1 SUM(I.amount)
	FROM incomesorted I
	JOIN sorting S
		ON I.idsor = S.idsor
	WHERE I.idinc = %<incomevar.idinc>%
	AND I.ayear = %<sys_esercizio>%
	GROUP BY S.idsorkind,I.idinc  
	ORDER BY SUM(I.amount) desc)
,0)]{N}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM020','1','I','incomevar','S','S','S','N','N',{ts '2007-12-13 13:48:30.033'},'SARA','Non può essere inserita una variazione di entrata sul movimento %<income.idinc>% / %<income.ymov>% in quanto la disponibilità negli anni successivi diventa negativa','N','(
	[SELECT COUNT(*)
	FROM incometotal
	WHERE idinc = %<incomevar.idinc>%
	AND ayear > %<sys_esercizio>%]{I} = 0
)
OR
(
	ISNULL([SELECT MIN(available)
	FROM incometotal
	WHERE idinc = %<incomevar.idinc>%
	AND ayear > %<sys_esercizio>%]{V},0)
	--+ %<incomevar.amount>% 
>= 0
)
OR
(
	ISNULL(
		[SELECT MAX(ayear) FROM accountingyear WHERE ((flag&0x0F)>=4)]{I}
	,%<sys_esercizio>%-1) < %<sys_esercizio>%
)
OR
%<incomevar.amount>%>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM020','2','I','incomevar','S','S','S','N','N',{ts '2007-12-13 13:48:54.080'},'SARA','Non può essere inserita una variazione di entrata sul movimento %<income.idinc>% / %<income.ymov>% in quanto la disponibilità del movimento della fase precedente negli anni successivi diventa negativa','S','(
	[SELECT COUNT(*)
	FROM incometotal
	WHERE idinc = [select parentidinc from income where idinc= %<incomevar.idinc>%]{I}
	AND ayear > %<sys_esercizio>%]{I} = 0
)
OR
(
	ISNULL([SELECT MIN(available)
	FROM incometotal
	WHERE idinc = [select parentidinc from income where idinc= %<incomevar.idinc>%]{I}
	AND ayear > %<sys_esercizio>%]{V},0)
	-
	%<incomevar.amount>%
	>= 0
)
OR
(
	ISNULL(
		[SELECT MAX(ayear) FROM accountingyear WHERE ((flag&0x0F)>= 4)]{I}
	,%<sys_esercizio>%-1) < %<sys_esercizio>%
)
OR
%<incomevar.amount>%<0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM021','1','I','incomevar','S','S','S','N','N',{ts '2007-09-28 11:45:21.170'},'NINO','FONDO DI CASSA INIZIALE + totale delle reversali trasmesse in banca deve essere maggiore od uguale al totale dei pagamenti (anche non inclusi in un mandato)','N','--post
ISNULL([SELECT currentfloatfund FROM currentcashtotal WHERE ayear = %<sys_esercizio>%]{V},0) >= 0
OR
([select nphase from income where idinc= %<incomevar.idinc>%]{I} <> %<sys_maxincomephase>%)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM024','1','I','incomevar','S','S','S','S','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Le assegnazioni dei crediti sono superiori al movimento di entrata %<income.nmov>% / %<income.ymov>%','N','--post
([SELECT SUM(ISNULL(amount,0)) FROM creditpart
WHERE idinc = %<incomevar.idinc>% AND
ycreditpart = %<sys_esercizio>%]{N} -
[SELECT curramount FROM incometotal
WHERE idinc = %<incomevar.idinc>% 
AND ayear = %<sys_esercizio>%]{N}) <= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM024','2','I','incomevar','S','S','S','N','S',{ts '2006-01-01 00:00:00.000'},'Software and more','Le assegnazioni degli incassi sono superiori al movimento di entrata %<income.nmov>% / %<income.ymov>%','N','--post
([SELECT SUM(ISNULL(amount,0)) FROM proceedspart
WHERE idinc = %<incomevar.idinc>% AND
yproceedspart = %<sys_esercizio>%]{N} -
[SELECT curramount FROM incometotal
WHERE idinc = %<incomevar.idinc>% 
AND ayear = %<sys_esercizio>%]{N}) <= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM025','1','I','incomevar','S','S','S','N','N',{ts '2011-09-15 16:30:05.953'},'sara','Non può essere inserita una variazione sul movimento di entrata %<income.nmov>%/%<income.ymov>% in quanto è inserito in una reversale di incasso','N','ISNULL([SELECT kpro FROM incomelast 
WHERE idinc = %<incomevar.idinc>%
]{I},0) = 0
OR
%<incomevar.autokind>% IS NOT NULL
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast
JOIN proceeds 
	ON proceeds.kpro = incomelast.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'' )= ''S'')
AND
[(SELECT COUNT(*)  FROM incomevar  
WHERE idinc = %<incomevar.idinc>%
AND nvar <> %<incomevar.nvar>%
AND kproceedstransmission IS NULL AND autokind = 22)]{I} <> 0
AND
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM incomelast
JOIN proceeds 
	ON proceeds.kpro = incomelast.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},'''' ) <> ''02008''
)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM025','3','I','incomevar','S','S','S','N','N',{ts '2007-08-31 12:37:44.593'},'NINO','Una variazione di annullamento deve necessariamente rendere nullo l''importo del movimento di entrata a cui si applica.','N','(%<incomevar.autokind>% IS NULL)
OR
(%<incomevar.autokind>% <> 11)
OR
([select nphase from income where idinc= %<incomevar.idinc>%]{I}
<> %<sys_maxincomephase>%)
OR
(isnull(
	[SELECT SUM(curramount) FROM incometotal 
	 WHERE idinc = %<incomevar.idinc>%
	and ayear=%<sys_esercizio>%
	]{V}		
	,0)=0
)

			

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM026','1','I','incomevar','S','N','S','N','N',{ts '2007-09-01 15:07:00.327'},'NINO','Non è possibile inserire una variazione POSITIVA sul movimento di entrata n. %<income.nmov>% / %<income.ymov>%  perchè è un residuo','S','[SELECT flag & 1 from incometotal
where %<incomevar.idinc>% = incometotal.idinc
and incometotal.ayear=%<sys_esercizio>%]{I} = 0
or
[SELECT ymov from income
where income.idinc = %<incomevar.idinc>%]{I} = %<sys_esercizio>%
or
%<incomevar.amount>% <= 0
or

([select nphase from income where idinc= %<incomevar.idinc>%]{I}  <> 

 [SELECT assessmentphasecode FROM config where ayear =  %<sys_esercizio>%]{I}) 





')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM027','1','I','incomevar','S','N','S','N','N',{ts '2007-09-28 13:17:45.610'},'NINO','Non è possibile inserire una variazione NEGATIVA sul movimento di entrata n. %<income.nmov>%/%<income.ymov>% perchè è un residuo','S','[SELECT flag&1 from incometotal 
where %<incomevar.idinc>% = incometotal.idinc 
and incometotal.ayear=%<sys_esercizio>%]{I} = 0
or
[SELECT ymov from income
where income.idinc = %<incomevar.idinc>%]{I} = %<sys_esercizio>%
or
%<incomevar.amount>% >= 0
or
([select nphase from income where idinc= %<incomevar.idinc>%]{I} <> 
 [SELECT assessmentphasecode FROM config where ayear =  %<sys_esercizio>%]{I} )  




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM038','1','I','incomevar','S','S','S','S','N',{ts '2009-01-20 12:31:47.510'},'SA','Il totale dell''accertato è inferiore al totale dell''impegnato per l''UPB scelto','S','[SELECT assured FROM upb
WHERE idupb = 
	[SELECT idupb FROM incomeyear
	WHERE idinc = %<incomevar.idinc>%
	AND ayear = %<incomevar.yvar>%]{C}
]{C} <> ''S''
OR
[SELECT nphase
FROM income
WHERE idinc = %<incomevar.idinc>%]{C}
<> 
%<sys_assessmentphase>%
OR
ISNULL([SELECT SUM(amount) FROM incomeyear
join income on income.idinc= incomeyear.idinc
join incometotal on incometotal.idinc= incomeyear.idinc	
		and incometotal.ayear=incomeyear.ayear
WHERE idupb = 
	[SELECT idupb FROM incomeyear
	WHERE idinc = %<incomevar.idinc>%
	AND ayear = %<incomevar.yvar>%]{C}
AND income.nphase = %<sys_assessmentphase>%
AND (incometotal.flag&1)=0
]{V},0)
+ %<incomevar.amount>%
+
ISNULL(
	[SELECT SUM(incomevar.amount)
	FROM incomevar
	JOIN incomeyear
			ON incomevar.idinc = incomeyear.idinc
			AND incomeyear.ayear= %<incomevar.yvar>%
	join income 
			on incomeyear.idinc=income.idinc
 	
	WHERE incomevar.yvar <= %<sys_esercizio>%
	AND incomeyear.idupb = 
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
	AND income.nphase = %<sys_assessmentphase>%	
]{V}
,0)
+
ISNULL(
	[SELECT ISNULL(previousassessment,0) - ISNULL(previousappropriation,0)
	FROM upb WHERE idupb = 
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(creditvariation)
	FROM upbtotal
	WHERE idupb = 
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
	]{V}
,0)
>=
ISNULL(
	[SELECT SUM(amount)
	FROM expenseyear
	join expense 
			on expenseyear.idexp=expense .idexp
 	join expensetotal 
			on expensetotal.idexp= expenseyear.idexp
              	and expensetotal.ayear= expenseyear.ayear
	WHERE idupb =
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
	AND expense.nphase = %<sys_appropriationphase>%
	AND (expensetotal.flag & 1)=0

]{V}
,0)
+
ISNULL(
	[SELECT SUM(expensevar.amount) FROM expensevar
	JOIN expenseyear
			ON expensevar.idexp = expenseyear.idexp
			AND expenseyear.ayear=%<incomevar.yvar>%
	join expense 
			on expenseyear.idexp=expense .idexp
	WHERE expensevar.yvar <= %<sys_esercizio>%
	AND expenseyear.idupb = 
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
	AND expense.nphase = %<sys_appropriationphase>%
]{V}
,0)
OR 
%<incomevar.amount>% >= 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM041','1','I','incomevar','S','S','S','N','N',{ts '2011-09-08 14:18:10.813'},'sara','Non può essere annullato il movimento di entrata %<income.nmov>%/%<income.ymov>% in quanto renderebbe l''esitato della reversale relativa superiore all''importo totale della reversale stessa.','N','--post
([SELECT COUNT(*) FROM incomelast 
WHERE idinc= %<incomevar.idinc>%
AND kpro IS NOT NULL]{V} = 0)
OR
(%<incomevar.autokind>% not in (10,11))
OR
(
[select nphase from income where idinc= %<incomevar.idinc>%]{I} 
<> %<sys_maxincomephase>%)
OR
(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 	
	 WHERE idinc = %<incomevar.idinc>%]{V}
	,0)
 <= 
 isnull(
	[SELECT SUM(ET.curramount) FROM incometotal ET
		JOIN incomelast EL on EL.idinc= ET.idinc
		JOIN incomeyear EY on EL.idinc=EY.idinc
	 WHERE EL.idinc =%<incomevar.idinc>% AND 
             EY.ayear=%<sys_esercizio>%]{V}
	,0)
)
			
OR		
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds  
	ON  incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'')= ''S'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM041','2','I','incomevar','S','S','S','N','N',{ts '2013-03-08 13:23:22.423'},'mluisas','Non può essere annullato il movimento di entrata %<income.nmov>%/%<income.ymov>% in quanto risulta già esitato.','N','--post
([SELECT COUNT(*) FROM incomelast 
WHERE idinc= %<incomevar.idinc>%
AND kpro IS NOT NULL]{V} = 0)
OR
(%<incomevar.autokind>% not in (10,11))
OR
(
[select nphase from income where idinc= %<incomevar.idinc>%]{I} 
<> %<sys_maxincomephase>%)
OR
(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 
	 WHERE idinc= %<incomevar.idinc>%]{V}
	,0) = 0)		
OR		
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds  
	ON  incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'')= ''N'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM056','1','I','incomevar','S','N','S','S','N',{ts '2007-09-01 09:25:45.593'},'NINO','L''importo dell''assegnazione crediti deve essere uguale a quello del movimento di entrata','N','ISNULL(
	[SELECT SUM(amount) FROM creditpart
	WHERE idinc = %<incomevar.idinc>%]{V}
,0) = 
ISNULL(
	[SELECT curramount
	FROM incometotal
	WHERE idinc = %<incomevar.idinc>%
	AND ayear = %<incomevar.yvar>%]{V}
,0)
OR
[SELECT nphase FROM income
WHERE idinc = %<incomevar.idinc>%]{I}
<> %<sys_incomefinphase>%
OR
ISNULL(
	[SELECT assured FROM upb
	WHERE idupb =
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
]{C}
,''N'') = ''S''
OR
[SELECT flag & 1 FROM incometotal
WHERE idinc = %<incomevar.idinc>%
AND ayear = %<incomevar.yvar>%]{I} <> 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM056','2','I','incomevar','S','S','N','N','S',{ts '2007-09-01 09:25:55.657'},'NINO','L''importo dell''assegnazione incassi deve essere uguale a quello del movimento di entrata','N','ISNULL(
	[SELECT SUM(amount) FROM proceedspart
	WHERE idinc = %<incomevar.idinc>%]{V}
,0) = 
ISNULL(
	[SELECT curramount
	FROM incometotal
	WHERE idinc = %<incomevar.idinc>%
	AND ayear = %<incomevar.yvar>%]{V}
,0)
OR
[SELECT nphase FROM income
WHERE idinc = %<incomevar.idinc>%]{I}
<> %<sys_maxincomephase>%
OR
ISNULL(
	[SELECT assured FROM upb
	WHERE idupb =
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
]{C}
,''N'') = ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','1','I','incomevar','S','S','S','N','N',{ts '2011-07-28 09:36:30.797'},'sara','Nella gestione dell''ordinativo informatico non è possibile inserire variazioni di annullo e variazioni dati di documenti non ancora trasmessi.','N','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds  
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'' )= ''N'')
)
OR
-- 2) le variazioni sono di tipo normale
ISNULL(%<incomevar.autokind>%,0) NOT IN (10,11,22)
OR
-- 3) la fase della variazione è inferiore alla fase massima
[SELECT nphase FROM income
 WHERE income.idinc = %<incomevar.idinc>%
]{I} < %<sys_maxincomephase>%
OR
-- 4) gli incassi sono inseriti in reversali trasmesse
ISNULL([
SELECT COUNT(*) FROM incomelast EL 
JOIN proceeds P
  ON P.kpro = EL.kpro
WHERE EL.idinc=%<incomevar.idinc>%
AND P.kproceedstransmission IS NOT NULL
]{I} ,0) > 0





 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','2','I','incomevar','S','S','S','N','N',{ts '2011-09-07 14:53:36.750'},'sara','Al di fuori della gestione dell''ordinativo informatico non è possibile inserire variazioni dati di documenti.','N','-- 1) viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds  
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'' )= ''S'')
)
OR
-- 2) le variazioni sono di tipo normale o annullamento
ISNULL(%<incomevar.autokind>%,0) <>22




 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','3','I','incomevar','S','S','S','N','N',{ts '2011-09-19 12:43:24.483'},'sara','Nella gestione dell''ordinativo informatico non è possibile inserire variazioni dati di documenti  in presenza di variaizoni annullamento dello stesso mandato a meno che non siano state trasmesse.','N','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds  
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'' )= ''N'')
)
OR
-- 2) le variazioni sono di tipo normale
ISNULL(%<incomevar.autokind>%,0)  <> 22
OR
-- 3) la fase della variazione è inferiore alla fase massima
[SELECT nphase FROM income
 WHERE income.idinc = %<incomevar.idinc>%
]{I} < %<sys_maxincomephase>%
OR
-- 4) le eventuali variaizoni di annullamento sono state trasmesse
ISNULL([
SELECT COUNT(*) FROM incomevar EV
WHERE EV.idinc=%<incomevar.idinc>%
AND ISNULL(EV.autokind,0) IN (10,11)
AND EV.kproceedstransmission IS NULL
]{I} ,0) = 0



 ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','4','I','incomevar','S','S','S','N','N',{ts '2011-09-19 12:43:40.000'},'sara','Nella gestione dell''ordinativo informatico non è possibile inserire variazioni di annullamento di documenti  in presenza di variaizoni dati dello stesso mandato a meno che non siano state trasmesse.','N','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds  
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'' )= ''N'')
)
OR
-- 2) le variazioni sono di tipo normale
ISNULL(%<incomevar.autokind>%,0)  NOT IN (10,11)
OR
-- 3) la fase della variazione è inferiore alla fase massima
[SELECT nphase FROM income
 WHERE income.idinc = %<incomevar.idinc>%
]{I} < %<sys_maxincomephase>%
OR
-- 4) le eventuali variaizoni di modifica dati sono state trasmesse
ISNULL([
SELECT COUNT(*) FROM incomevar EV
WHERE EV.idinc=%<incomevar.idinc>%
AND ISNULL(EV.autokind,0)  = 22
AND EV.kproceedstransmission IS NULL
]{I} ,0) = 0



 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','5','I','incomevar','S','S','S','N','N',{ts '2011-09-19 12:43:55.077'},'sara','Nella gestione dell''ordinativo informatico non è possibile inserire variazioni dati di documenti  in presenza di variaizoni dati dello stesso mandato a meno che non siano state trasmesse.','N','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds  
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'' )= ''N'')
)
OR
-- 2) le variazioni sono di tipo normale
ISNULL(%<incomevar.autokind>%,0)  <> 22
OR
-- 3) la fase della variazione è inferiore alla fase massima
[SELECT nphase FROM income
 WHERE income.idinc = %<incomevar.idinc>%
]{I} < %<sys_maxincomephase>%
OR
-- 4) le eventuali variaizoni di annullamento sono state trasmesse
ISNULL([SELECT COUNT(*) FROM incomevar EV
WHERE EV.idinc=%<incomevar.idinc>%
AND EV.nvar <> %<incomevar.nvar>%
AND ISNULL(EV.autokind,0) = 22
AND EV.kproceedstransmission IS NULL
]{I} ,0) = 0



 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','6','I','incomevar','S','S','S','N','N',{ts '2011-09-19 12:44:38.717'},'sara','Nella gestione del mandato informatico una variazione di annullamento deve necessariamente rendere nullo l''importo del movimento di entrata a cui si applica.','N','--Controlla che si gestisca il mandato informatico

(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'' )= ''N'')
)
OR
(%<incomevar.autokind>% IS NULL)
OR
(ISNULL(%<incomevar.autokind>%,0) <> 10)
OR
([select nphase from income where idinc=%<incomevar.idinc>%]{I}<> %<sys_maxincomephase>%)
OR
(isnull(
	[SELECT SUM(curramount) FROM incometotal 
	 WHERE idinc= %<incomevar.idinc>%
	and ayear=%<sys_esercizio>%
	]{V}
,0)=0
)

OR
-- Unicredit non ammette annulli parziali di sub-ordinativi
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM incomelast
JOIN proceeds 
	ON proceeds.kpro = incomelast.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},'''' )<> ''02008''
)			

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','7','I','incomevar','S','S','S','N','N',{ts '2011-09-19 12:40:11.407'},'sara','Nella gestione dell''ordinativo informatico non è possibile inserire variazioni di modifica di documenti  annullati. ','N','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds  
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'' )= ''N'')
)
OR
-- 2) le variazioni sono di tipo normale
ISNULL(%<incomevar.autokind>%,0)  <> 22
OR
-- 3) la fase della variazione è inferiore alla fase massima
[SELECT nphase FROM income
 WHERE income.idinc = %<incomevar.idinc>%
]{I} < %<sys_maxincomephase>%
OR
-- 4) non ci sono variaizoni di annullamenti sullo stesso pagamento
ISNULL([
SELECT COUNT(*) FROM incomevar EV
WHERE EV.idinc=%<incomevar.idinc>%
AND ISNULL(EV.autokind,0)  IN (10,11)
]{I} ,0) = 0



 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM107','1','I','incomevar','S','S','S','N','N',{ts '2012-11-15 11:35:24.447'},'sa','Saldo iniziale + Tot. reversali emesse + Girofondi in entrata deve essere maggiore od uguale al Tot. pagamenti emessi + Girofondi in uscita.','N','([select nphase from income where idinc=%<incomevar.idinc>%]{I}<> %<sys_maxincomephase>%)
OR
ISNULL([SELECT currentfloatfund 
FROM treasurercashtotal 
WHERE ayear = %<sys_esercizio>%
and idtreasurer =isnull([select idtreasurer from proceeds
			join incomelast 
				on proceeds.kpro= incomelast.kpro 
			where incomelast.idinc = %<incomevar.idinc>%]{I},0)
]{V},0) >= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON003','1','I','incomevar','S','N','N','N','N',{ts '2007-08-31 13:02:58.983'},'NINO','La previsione di cassa della voce di entrata %<incomeview.codefin>% e UPB %<incomeview.codeupb>% è INSUFFICIENTE!','N',' (	ISNULL([SELECT
		isnull(currentsecondaryprev,0)+ isnull(secondaryvariation, 0) 
		FROM upbtotal 
		WHERE idfin = [SELECT idfin FROM incomeyear WHERE 
				idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{I}
		   and idupb= [SELECT idupb FROM incomeyear WHERE 
				idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{C}
		]{V}
		,0)
	- 
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM upbincometotal
		WHERE idfin = 
			[SELECT idfin FROM incomeyear WHERE idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{I}
		   and idupb= [SELECT idupb FROM incomeyear WHERE 
				idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{C}
		AND nphase = %<sys_maxincomephase>%]{V}
	,0)
     >= 0
)
OR
(
[SELECT nphase FROM income
WHERE idinc = %<incomevar.idinc>%]{I} <> 
%<sys_maxincomephase>%)
or
%<incomevar.amount>%<0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON007','1','I','incomevar','S','N','N','N','N',{ts '2013-05-21 11:03:31.640'},'sa','La previsione di cassa della voce di entrata di Finanziamento: %<incomevarview.underwriting>% , UPB: %<incomevarview.upb>% , Bilancio: %<incomevarview.codefin>% è INSUFFICIENTE!','N','(isnull([select idunderwriting from income where idinc = %<incomevar.idinc>%]{I},0)=0)  
OR
 (	ISNULL([SELECT
		isnull(currentsecondaryprev,0)+ isnull(secondaryvariation, 0) 
		FROM upbunderwritingtotal 
		WHERE idfin = [SELECT idfin FROM incomeyear WHERE 
				idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{I}
		   and idupb= [SELECT idupb FROM incomeyear WHERE 
				idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{C}
		and idunderwriting= [select idunderwriting 
			from income 
			where idinc = %<incomevar.idinc>%]{I}	
		]{V}
		,0)
	- 
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM underwritingincometotal
		WHERE idfin = 
			[SELECT idfin FROM incomeyear WHERE idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{I}
		   and idupb= [SELECT idupb FROM incomeyear WHERE 
				idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{C}
		and idunderwriting= [select idunderwriting 
				from income 
				where idinc = %<incomevar.idinc>%]{I}	
		AND nphase = %<sys_maxincomephase>%]{V}
	,0)
     >= 0
)
OR
(
[SELECT nphase FROM income
WHERE idinc = %<incomevar.idinc>%]{I} <> 
%<sys_maxincomephase>%)
or
%<incomevar.amount>%<0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','1','I','incomevar','S','S','S','N','N',{ts '2009-03-21 15:08:54.390'},'SARA','Le regole di sicurezza vietano l''inserimento di variazioni di annullamento per le Reversali','S','(ISNULL(%<incomevar.autokind>%,0) NOT IN (10,11))
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename  = ''annullamento''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','1','I','incomevar','S','S','S','N','N',{ts '2010-11-08 10:34:45.827'},'sa','L''utente non è abilitato all''inserimento di variazioni di fasi finanziarie precedenti alla fase dell''Accertamento giuridico.','N','[SELECT nphase FROM income WHERE idinc = %<incomevar.idinc>%]{I} >= %<sys_assessmentphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''pre_accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','2','I','incomevar','S','S','S','N','N',{ts '2010-11-08 10:34:53.563'},'sa','L''utente non è abilitato all''inserimento di variazioni di fasi finanziarie equivalenti all''Accertamento giuridico.','N','[SELECT nphase FROM income WHERE idinc = %<incomevar.idinc>%]{I} <> %<sys_assessmentphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','3','I','incomevar','S','S','S','N','N',{ts '2010-11-08 10:34:57.953'},'sa','L''utente non è abilitato all''inserimento di variazioni di fasi finanziarie successive alla fase dell''Accertamento giuridico.','N','[SELECT nphase FROM income WHERE idinc = %<incomevar.idinc>%]{I} <= %<sys_assessmentphase>%

OR 

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''post_accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL






')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BOLLE001','1','U','incomevar','S','S','S','N','N',{ts '2013-07-08 10:20:58.190'},'nino','Con la variazione effettuata, la somma dei movimenti di entrata collegati alla bolletta diventa maggiore dell''importo della bolletta.','N','[select nphase from income where idinc=%<incomevar.idinc>%]{I} <> %<sys_maxincomephase>% 

OR 

[select nbill from incomelast where idinc = %<incomevar.idinc>%]{I} IS NULL


OR


ISNULL([SELECT SUM(curramount)
FROM incometotal
join incomelast on incometotal.idinc=incomelast.idinc
where incomelast.idinc= %<incomevar.idinc>%
and ayear = %<sys_esercizio>%
and incomelast.nbill=  [select nbill from incomelast where idinc = %<incomevar.idinc>%]{I}

]{V},0)
<= 
ISNULL(
[SELECT ISNULL(total, 0) from bill 
	where  ybill = %<sys_esercizio>% 	
	and 	nbill= [select nbill from incomelast where idinc = %<incomevar.idinc>%]{I} 
	and 	billkind =''C''
]{V}
,0) 

OR 

ISNULL(%<incomevar.amount>%,0) <= ISNULL(&<incomevar.amount>&,0)  

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA001','1','U','incomevar','N','S','N','N','N',{ts '2007-08-31 14:00:50.967'},'NINO','La previsione della voce in entrata %<incomeview.codefin>% e UPB %<incomeview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT isnull(currentprev,0)+
	ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = 
		[SELECT idfin 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{C}

	]{V}
,0)
- 
[SELECT ISNULL(totalcompetency, 0) + 
ISNULL(totalarrears, 0) 
FROM upbincometotal 
WHERE idfin = 
	[SELECT idfin 
	from incomeyear 
	where idinc = %<incomevar.idinc>% 
	and ayear = %<incomevar.yvar>%]{I}
AND idupb = 
	[SELECT idupb 
	from incomeyear 
	where idinc = %<incomevar.idinc>% 
	and ayear = %<incomevar.yvar>%]{C}
AND nphase = %<sys_incomefinphase>%]{V}
+ 
ISNULL(&<incomevar.amount>&, 0)
- 
ISNULL(%<incomevar.amount>%, 0) >= 0 

or
[select nphase from income where idinc=%<incomevar.idinc>%]{I}<> %<sys_incomefinphase>%
or 

[(SELECT idfin from incomeyear where idinc = %<incomevar.idinc>% 
and ayear = %<incomevar.yvar>%)]{I} IS NULL 
or
%<incomevar.amount>%< &<incomevar.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA003','1','U','incomevar','N','S','N','N','N',{ts '2013-05-21 10:47:09.813'},'sa','La previsione della voce in entrata Finanziamento: %<incomevarview.underwriting>% , UPB: %<incomevarview.upb>% , Bilancio: %<incomevarview.codefin>%  è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<incomevar.idinc>%]{I},0)=0)  
OR

ISNULL(
	[SELECT isnull(currentprev,0)+
	ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{I}
	and idupb = 
		[SELECT idupb 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{C}
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomevar.idinc>%]{I}	
	]{V}	
,0)
- 
[SELECT ISNULL(totalcompetency, 0) + 
ISNULL(totalarrears, 0) 
FROM underwritingincometotal 
WHERE idfin = 
	[SELECT idfin 
	from incomeyear 
	where idinc = %<incomevar.idinc>% 
	and ayear = %<incomevar.yvar>%]{I}
AND idupb = 
	[SELECT idupb 
	from incomeyear 
	where idinc = %<incomevar.idinc>% 
	and ayear = %<incomevar.yvar>%]{C}
and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomevar.idinc>%]{I}	
AND nphase = %<sys_incomefinphase>%]{V}
+ 
ISNULL(&<incomevar.amount>&, 0)
- 
ISNULL(%<incomevar.amount>%, 0) >= 0 

or
[select nphase from income where idinc=%<incomevar.idinc>%]{I}<> %<sys_incomefinphase>%
or 

[(SELECT idfin from incomeyear where idinc = %<incomevar.idinc>% 
and ayear = %<incomevar.yvar>%)]{I} IS NULL 
or
%<incomevar.amount>%< &<incomevar.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','U','incomevar','S','S','S','N','N',{ts '2007-12-14 13:53:57.840'},'NINO','La variazione al movimento di entrata %<incomeview.phase>% n. %<incomeview.nmov>% / %<incomeview.ymov>% non può essere modificata. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE002','1','U','incomevar','S','N','S','N','N',{ts '2007-08-31 14:01:12.297'},'NINO','La previsione di competenza della voce in entrata %<incomeview.codefin>% e UPB %<incomeview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 	
		from upbtotal 
	where idfin = 
		[SELECT idfin 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{I}
		and idupb=
			[SELECT idupb 
			from incomeyear 
			where idinc = %<incomevar.idinc>% 
			and ayear = %<incomevar.yvar>%]{C}
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from upbincometotal 
where idfin = 
	[SELECT idfin 
	from incomeyear 
	where idinc = %<incomevar.idinc>% 
	and ayear = %<incomevar.yvar>%]{I}
and idupb=
			[SELECT idupb 
			from incomeyear 
			where idinc = %<incomevar.idinc>% 
			and ayear = %<incomevar.yvar>%]{C}

	and nphase = %<sys_incomefinphase>%]{V},0)
+ 
ISNULL(&<incomevar.amount>&, 0)
- 
ISNULL(%<incomevar.amount>%, 0) >= 0 
or
([select nphase from income where idinc=%<incomevar.idinc>%]{I} <> %<sys_incomefinphase>%)
or 
[SELECT idfin 
from incomeyear 
where idinc = %<incomevar.idinc>% 
and ayear = %<incomevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov 
from income 
where idinc = %<incomevar.idinc>%]{I} <> %<sys_esercizio>%
or
%<incomevar.amount>%<&<incomevar.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE009','1','U','incomevar','S','N','S','N','N',{ts '2013-05-21 10:54:52.730'},'sa','La previsione di competenza entrata di Finanziamento: %<incomevarview.underwriting>% , UPB: %<incomevarview.upb>% , Bilancio: %<incomevarview.codefin>% è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<incomevar.idinc>%]{I},0)=0)  
OR
ISNULL(
	[SELECT isnull(currentprev,0)+ISNULL(previsionvariation, 0) 	
		from upbunderwritingtotal 
	where idfin = 
		[SELECT idfin 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{I}
		and idupb=
			[SELECT idupb 
			from incomeyear 
			where idinc = %<incomevar.idinc>% 
			and ayear = %<incomevar.yvar>%]{C}
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomevar.idinc>%]{I}	
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from underwritingincometotal 
where idfin = 
	[SELECT idfin 
	from incomeyear 
	where idinc = %<incomevar.idinc>% 
	and ayear = %<incomevar.yvar>%]{I}
	and idupb=
		[SELECT idupb 
		from incomeyear 
		where idinc = %<incomevar.idinc>% 
		and ayear = %<incomevar.yvar>%]{C}
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomevar.idinc>%]{I}	
	and nphase = %<sys_incomefinphase>%]{V},0)
+ 
ISNULL(&<incomevar.amount>&, 0)
- 
ISNULL(%<incomevar.amount>%, 0) >= 0 
or
([select nphase from income where idinc=%<incomevar.idinc>%]{I} <> %<sys_incomefinphase>%)
or 
[SELECT idfin 
from incomeyear 
where idinc = %<incomevar.idinc>% 
and ayear = %<incomevar.yvar>%]{I} IS NULL 
or 
[SELECT ymov 
from income 
where idinc = %<incomevar.idinc>%]{I} <> %<sys_esercizio>%
or
%<incomevar.amount>%<&<incomevar.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN005','1','U','incomevar','S','S','S','N','N',{ts '2008-03-21 13:16:28.877'},'SA','Il movimento di entrata non è stato interamente classificato secondo la classificazione obbligatoria','N','--post
(
[SELECT COUNT(*) FROM sortingkind T
WHERE T.nphaseincome = [SELECT nphase FROM income 
                        WHERE  idinc = %<incomevar.idinc>%]{I}
AND (T.flag & 1) <> 0
AND %<sys_esercizio>% between ISNULL(T.start,1900) AND ISNULL(T.stop,2099)  
AND
(
	ISNULL(
		(SELECT ISNULL(SUM(I.amount),0)
		FROM incomesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE S.idsorkind= T.idsorkind
		AND I.idinc= %<incomevar.idinc>%
		AND I.ayear = %<sys_esercizio>%)
	,0)
	<
	[SELECT curramount FROM incometotal
	WHERE ayear = %<sys_esercizio>%  
	AND   idinc= %<incomevar.idinc>%]{V}
)
]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI004','1','U','incomevar','S','S','S','S','N',{ts '2007-09-28 09:21:09.000'},'NINO','Il movimento di entrata è inferiore rispetto alle assegnazioni crediti','N','isnull([(SELECT curramount
from incometotal 
where idinc = %<incomevar.idinc>%
 and ayear = %<sys_esercizio>%
)]{V},0)
-
isnull([(SELECT sum(amount) 
from creditpart 
where idinc = %<incomevar.idinc>%
and ycreditpart = %<sys_esercizio>%)]{V},0)
>= 0
or
%<incomevar.amount>%>&<incomevar.amount>&
OR
[SELECT nphase FROM income
WHERE idinc = %<incomevar.idinc>%]{I} <> %<sys_assessmentphase>%
OR
[SELECT assured
FROM upb
WHERE idupb = 
	[SELECT idupb FROM incomeyear
	WHERE idinc = %<incomevar.idinc>%
	AND ayear = %<sys_esercizio>%]{C}
]{C} = ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM001','1','U','incomevar','S','S','S','N','N',{ts '2007-03-21 11:26:47.030'},'''NINO''','L''importo del movimento di entrata è diverso dalla somma dei dettagli del contratto attivo associati','N','--post

(

[SELECT COUNT(*) 

FROM  incomeestimateview 

WHERE incomeestimateview.idinc = %<incomevar.idinc>%

AND   ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)

AND   ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0

)

or

isnull(&<incomevar.amount>&,0) > isnull(%<incomevar.amount>%,0)

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA001','1','U','incomevar','S','S','S','N','N',{ts '2007-04-13 10:41:33.733'},'''SA''','L''importo del documento IVA è minore dei movimenti di entrata che lo contabilizzano','N','--post
(
ISNULL(
	[SELECT ISNULL(AVG(residual),0)
	FROM invoiceavailable
	WHERE idinvkind = %<incomevar.idinvkind>%
	AND ninv = %<incomevar.ninv>%
	AND yinv = %<incomevar.yinv>%]{N}
,0)
>= 0)
OR
(&<incomevar.amount>& > %<incomevar.amount>%)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA009','1','U','incomevar','S','S','S','N','N',{ts '2013-04-17 10:01:41.967'},'sara','La variazione deve contabilizzare un documento IVA.','N','(isnull(%<incomevar.autokind>%,0) = 10)
OR
(ISNULL(%<incomevar.autokind>%,0) = 11)
OR
(ISNULL(%<incomevar.autokind>%,0) = 22)
OR
(
isnull(%<incomevar.autokind>%,0) = 
isnull(&<incomevar.autokind>&,0)
)
OR
(
[select  count (*)   from  incomeinvoice 
 where  idinc = %<incomevar.idinc>%]{I}= 0
)
OR %<incomevar.idinvkind>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA019','1','U','incomevar','S','S','S','N','N',{ts '2009-09-16 12:18:00.093'},'SA','L''importo della variazione che contabilizza il documento  %<incomevar.ninv>% / %<incomevar.yinv>% non può essere diverso dalla somma dei dettagli associati.','N','-- docum
isnull(%<incomevar.movkind>%,0) <> 1
OR

(ISNULL(%<incomevar.amount>%,0)= ISNULL(&<incomevar.amount>&,0))

OR

[(select isnull(sum(invoicedetailview.rowtotal), 0)  
from invoicedetailview
where  invoicedetailview.idinvkind =%<incomevar.idinvkind>%
and invoicedetailview.yinv = %<incomevar.yinv>%
and invoicedetailview.ninv = %<incomevar.ninv>%
and invoicedetailview.idinc_taxable = %<incomevar.idinc>%
and invoicedetailview.idinc_iva = %<incomevar.idinc>%
)]{V}
=
-
%<incomevar.amount>%



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA019','2','U','incomevar','S','S','S','N','N',{ts '2009-09-16 12:34:12.860'},'SARA','L''importo della variazione che contabilizza il documento  %<incomevar.ninv>% / %<incomevar.yinv>% non può essere diverso dalla somma dei dettagli associati.','N','-- impon
%<incomevar.idinvkind>% IS NULL
OR
ISNULL(%<incomevar.movkind>%,0) <> 3
OR

(ISNULL(%<incomevar.amount>%,0)= ISNULL(&<incomevar.amount>&,0))
OR
[(select isnull(sum(invoicedetailview.taxable_euro), 0)  
from invoicedetailview
where  invoicedetailview.idinvkind =%<incomevar.idinvkind>%
and invoicedetailview.yinv = %<incomevar.yinv>%
and invoicedetailview.ninv = %<incomevar.ninv>%
and invoicedetailview.idinc_taxable = %<incomevar.idinc>%
)]{V}
=
-
%<incomevar.amount>%





')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA019','3','U','incomevar','S','S','S','N','N',{ts '2009-09-16 12:18:57.563'},'SA','L''importo della variazione che contabilizza il documento  %<incomevar.ninv>% / %<incomevar.yinv>% non può essere diverso dalla somma dei dettagli associati.','N','-- impos

isnull (%<incomevar.movkind>%,0) <> 2
OR

(ISNULL(%<incomevar.amount>%,0)= ISNULL(&<incomevar.amount>&,0))

OR

[(select isnull(sum(invoicedetailview.iva_euro), 0)  
from invoicedetailview
where  invoicedetailview.idinvkind =%<incomevar.idinvkind>%
and invoicedetailview.yinv = %<incomevar.yinv>%
and invoicedetailview.ninv = %<incomevar.ninv>%
and invoicedetailview.idinc_iva = %<incomevar.idinc>%
)]{V}
=
-
%<incomevar.amount>%




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA021','1','U','incomevar','S','S','S','N','N',{ts '2009-01-20 12:25:39.150'},'SA','La variazione inserita non può contabilizzare una nota di credito ed essere anche di annullamento','S','(%<incomevar.idinvkind>% IS NULL)
OR
(ISNULL(%<incomevar.autokind>%,0) NOT IN (10,11))
OR
ISNULL(%<incomevar.autokind>%,0) = 
ISNULL(&<incomevar.autokind>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS004','1','U','incomevar','S','S','S','N','S',{ts '2007-09-28 09:21:49.843'},'NINO','Il movimento di entrata è inferiore rispetto alle assegnazioni incassi','N','isnull(
	[(SELECT curramount
	from incometotal 
	where idinc = %<incomevar.idinc>%
	 and ayear = %<sys_esercizio>%
	)]{V}
,0)
-
isnull(
	[(SELECT sum(amount) 
	from proceedspart 
	where idinc = %<incomevar.idinc>%)]{V}
,0)
 >= 0
or
%<incomevar.amount>%>&<incomevar.amount>&
OR
[SELECT nphase FROM income
WHERE idinc = %<incomevar.idinc>%]{I} <> %<sys_maxincomephase>%
OR
[SELECT assured
FROM upb
WHERE idupb = 
	[SELECT idupb FROM incomeyear
	WHERE idinc = %<incomevar.idinc>%
	AND ayear = %<sys_esercizio>%]{C}
]{C} = ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM003','1','U','incomevar','S','S','S','N','N',{ts '2009-02-02 13:11:46.813'},'ASSISTENZA','L''importo attuale del movimento %<incomephase.description>% %<income.nmov>%/%<income.ymov>% è minore dell''importo attuale dei movimenti dipendenti','N','ISNULL([(SELECT available
from incometotal 
where idinc = %<incomevar.idinc>% 
and ayear = %<sys_esercizio>%)]{V} , 0) 
 >= 0 
or 
[(SELECT count(*) 
from income 
where parentidinc = %<incomevar.idinc>%)]{V} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM003','2','U','incomevar','S','S','S','N','N',{ts '2009-02-02 13:08:42.293'},'ASSISTENZA','L''importo attuale dei movimenti di entrata della fase %<incomephase.description>% è maggiore dell''importo attuale del movimento della fase precedente','N','[(SELECT nphase 
from income 
where idinc = %<incomevar.idinc>%)]{I} = 1
or 
ISNULL([(SELECT available
from incometotal 
join income 
on incometotal.idinc = income.parentidinc 
and incometotal.ayear = %<incomevar.yvar>%
where income.idinc = %<incomevar.idinc>%)]{V} , 0) 
 >= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM004','1','U','incomevar','S','S','S','N','N',{ts '2010-02-18 10:25:16.937'},'SA','L''importo attuale del movimento di entrata %<income.ymov>% %<income.nmov>% è NEGATIVO','N','[(SELECT MIN(ISNULL(curramount, 0)) 
from incometotal 
where idinc = %<incomevar.idinc>%)]{V} 
>= 0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM004','2','U','incomevar','S','S','S','N','N',{ts '2010-02-22 10:49:29.920'},'SARA','L''importo attuale del movimento di entrata %<income.ymov>% %<income.nmov>% in anni successivi diventa NEGATIVO','S','%<incomevar.amount>%>0
OR
[(SELECT MIN(ISNULL(curramount, 0) 
- ISNULL(&<incomevar.amount>&,0)
+  ISNULL(%<incomevar.amount>%,0))
from incometotal 
where idinc = %<incomevar.idinc>%
and ayear > %<incomevar.yvar>%
)]{V} 
>= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM007','1','U','incomevar','S','S','S','N','N',{ts '2011-09-15 12:26:12.017'},'sara','L''importo della variazione relativa al movimento finanziario di entrata %<income.ymov>% %<income.nmov>% non può essere modificato in quanto il movimento è già incluso nella reversale di incasso %<incomeview.ypro>% %<incomeview.npro>%.','S','(
ISNULL([SELECT proceeds.kproceedstransmission 
from incomelast 
join proceeds 
	ON proceeds.kpro = incomelast.kpro 
where incomelast.idinc = %<incomevar.idinc>%]{I},0)=0
)
or
(
isnull([SELECT kpro 
from incomelast 
where idinc = %<incomevar.idinc>%]{I},0)=0)
OR
(%<incomevar.amount>%=&<incomevar.amount>&)
or 
(%<incomevar.autokind>% in (10,11,22))
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast
JOIN proceeds 
	ON proceeds.kpro = incomelast.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'' )= ''S'')
AND
[(SELECT count(*)  from incomevar  where idinc = %<incomevar.idinc>%
AND kproceedstransmission  IS NULL AND autokind = 22)]{I} <> 0
AND
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM incomelast
JOIN proceeds 
	ON proceeds.kpro = incomelast.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},'''' ) <> ''02008''
)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM016','1','U','incomevar','S','S','S','N','N',{ts '2007-11-27 10:24:13.500'},'SARA','Le classificazioni associate al movimento di entrata n. %<income.nmov>%/%<income.ymov>% sono superiori rispetto all''importo dello stesso','N','--post
(
[SELECT curramount FROM incometotal
WHERE idinc= %<incomevar.idinc>% 
AND ayear= %<incomevar.yvar>%]{N}
>=
[ISNULL(
	(SELECT TOP 1 SUM(I.amount)
	FROM incomesorted I
	JOIN sorting S
		ON I.idsor = S.idsor
	WHERE I.idinc = %<incomevar.idinc>%
	AND I.ayear = %<sys_esercizio>%
	GROUP BY S.idsorkind,I.idinc  
	ORDER BY SUM(I.amount) desc)
,0)]{N}
)
OR
(&<incomevar.amount>& < %<incomevar.amount>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM020','1','U','incomevar','S','S','S','N','N',{ts '2009-06-04 09:13:50.543'},'SA','Non può essere modificato l''importo di una variazione di entrata sul movimento %<income.idinc>% / %<income.ymov>% in quanto la disponibilità negli anni successivi diventa negativa','N','(
	[SELECT COUNT(*)
	FROM incometotal
	WHERE idinc = %<incomevar.idinc>%
	AND ayear > %<sys_esercizio>%]{I} = 0
)
OR
(
	ISNULL([SELECT MIN(available)
	FROM incometotal
	WHERE idinc = %<incomevar.idinc>%
	AND ayear > %<sys_esercizio>%]{V},0)
	/*- (&<incomevar.amount>& - %<incomevar.amount>%)*/
	>= 0
)
OR
(
	ISNULL(
		[SELECT MAX(ayear) FROM accountingyear WHERE ((flag&0x0F)>= 4)]{I}
	,%<sys_esercizio>%-1) < %<sys_esercizio>%
)
/* OR (&<incomevar.amount>& - %<incomevar.amount>%)<=0  */
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM020','2','U','incomevar','S','S','S','N','N',{ts '2009-06-04 09:14:09.340'},'SA','Non può essere modificato l''importo della variazione di entrata sul movimento %<income.idinc>% / %<income.ymov>% in quanto la disponibilità del movimento della fase precedente negli anni successivi diventa negativa','N','(
	[SELECT COUNT(*)
	FROM incometotal
	WHERE idinc = [select parentidinc from income where idinc = %<incomevar.idinc>%]{I}
	AND ayear > %<sys_esercizio>%]{I} = 0
)
OR
(
	ISNULL([SELECT MIN(available)
	FROM incometotal
	WHERE idinc = [select parentidinc from income where idinc = %<incomevar.idinc>%]{I}
	AND ayear > %<sys_esercizio>%]{V},0)
	/*+ 	(&<incomevar.amount>& - %<incomevar.amount>%)*/
	>= 0
)
OR
(
	ISNULL(
		[SELECT MAX(ayear) FROM accountingyear WHERE ((flag&0x0F)>= 4)]{I}
	,%<sys_esercizio>%-1) < %<sys_esercizio>%
)
/* OR (&<incomevar.amount>& - %<incomevar.amount>%)>=0 */
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM021','1','U','incomevar','S','S','S','N','N',{ts '2007-09-28 11:45:45.797'},'NINO','FONDO DI CASSA INIZIALE + totale delle reversali trasmesse in banca deve essere maggiore od uguale al totale dei pagamenti (anche non inclusi in un mandato)','N','--post
ISNULL([SELECT currentfloatfundFROM currentcashtotal WHERE ayear = %<sys_esercizio>%]{V},0)  >= 0
OR
([select nphase from income where idinc = %<incomevar.idinc>%]{I}
<> %<sys_maxincomephase>%)
OR
(&<incomevar.amount>& = %<incomevar.amount>%)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM024','1','U','incomevar','S','S','S','S','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Le assegnazioni dei crediti sono superiori al movimento di entrata %<income.nmov>% / %<income.ymov>%','N','--post
([SELECT SUM(ISNULL(amount,0)) FROM creditpart
WHERE idinc = %<incomevar.idinc>% AND
ycreditpart = %<sys_esercizio>%]{N} -
[SELECT curramount FROM incometotal
WHERE idinc = %<incomevar.idinc>% 
AND ayear = %<sys_esercizio>%]{N}) <= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM024','2','U','incomevar','S','S','S','N','S',{ts '2007-09-28 09:52:06.140'},'NINO','Le assegnazioni degli incassi sono superiori al movimento di entrata %<income.nmov>% / %<income.ymov>%','N','--post
(ISNULL([SELECT SUM(amount) FROM proceedspart
WHERE idinc = %<incomevar.idinc>% AND
yproceedspart = %<sys_esercizio>%]{V},0) -
[SELECT curramount FROM incometotal
WHERE idinc = %<incomevar.idinc>% 
AND ayear = %<sys_esercizio>%]{V}) <= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM025','1','U','incomevar','S','S','S','N','N',{ts '2011-09-15 16:30:14.047'},'sara','Non può essere modificata una variazione sul movimento di entrata %<income.nmov>%/%<income.ymov>% in quanto è inserito in una reversale di incasso','N','ISNULL([SELECT kpro FROM incomelast 
WHERE idinc = %<incomevar.idinc>%
]{I},0) = 0
or
(
%<incomevar.amount>%=&<incomevar.amount>&
)

OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast
JOIN proceeds 
	ON proceeds.kpro = incomelast.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'' )= ''S'')
AND
[(SELECT COUNT(*)  FROM incomevar  
WHERE idinc = %<incomevar.idinc>%
AND nvar <> %<incomevar.nvar>%
AND kproceedstransmission IS NULL AND autokind = 22)]{I} <> 0
AND
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM incomelast
JOIN proceeds 
	ON proceeds.kpro = incomelast.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},'''' ) <> ''02008''
)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM026','1','U','incomevar','S','N','S','N','N',{ts '2007-08-31 14:09:00.377'},'NINO','Non è possibile inserire una variazione POSITIVA sul movimento di entrata n. %<income.nmov>% / %<income.ymov>%  perchè è un residuo','S','[SELECT flag & 1 from incometotal
where %<incomevar.idinc>% = incometotal.idinc
and incometotal.ayear=%<sys_esercizio>%]{I} = 0
or
[SELECT ymov from income
where income.idinc = %<incomevar.idinc>%]{I} = %<sys_esercizio>%
or
%<incomevar.amount>% <= 0
or

([select nphase from income where idinc = %<incomevar.idinc>%]{I}  <> 
 [SELECT assessmentphasecode FROM config where ayear =  %<sys_esercizio>%]{I} 
)  





')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM027','1','U','incomevar','S','N','S','N','N',{ts '2007-08-31 14:09:58.187'},'NINO','Non è possibile inserire una variazione NEGATIVA sul movimento di entrata n. %<income.nmov>%/%<income.ymov>% perchè è un residuo','S','[SELECT flag & 1 from incometotal
where %<incomevar.idinc>% = incometotal.idinc
and incometotal.ayear=%<sys_esercizio>%]{I} = 0
or
[SELECT ymov from income
where income.idinc = %<incomevar.idinc>%]{I} = %<sys_esercizio>%

or
%<incomevar.amount>% >= 0
or

([select nphase from income where idinc = %<incomevar.idinc>%]{I}  <> 
 [SELECT assessmentphasecode FROM config where ayear =  %<sys_esercizio>%]{I} 
)  






')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM038','1','U','incomevar','S','S','S','S','N',{ts '2009-01-20 12:31:50.417'},'SA','Il totale dell''accertato è inferiore al totale dell''impegnato per l''UPB scelto','S','[SELECT assured FROM upb
WHERE idupb = 
	[SELECT idupb FROM incomeyear
	WHERE idinc = %<incomevar.idinc>%
	AND ayear = %<incomevar.yvar>%]{C}
]{C} <> ''S''
OR
[SELECT nphase
FROM income
WHERE idinc = %<incomevar.idinc>%]{C}
<> 
%<sys_assessmentphase>%
OR
ISNULL([SELECT SUM(amount) FROM incomeyear
join income on income.idinc=incomeyear.idinc
join incometotal on incometotal.idinc=incomeyear.idinc and
                 incometotal.ayear= incomeyear.ayear
WHERE idupb = 
	[SELECT idupb FROM incomeyear
	WHERE idinc = %<incomevar.idinc>%
	AND ayear = %<incomevar.yvar>%]{C}
AND income.nphase = %<sys_assessmentphase>%
AND (incometotal.flag & 1)=0
]{V},0)
- &<incomevar.amount>& + %<incomevar.amount>%
+
ISNULL(
	[SELECT SUM(incomevar.amount)
	FROM incomevar
	JOIN incomeyear
			ON incomevar.idinc = incomeyear.idinc
			AND incomeyear.ayear= %<incomevar.yvar>%
	join income 
			on incomeyear.idinc=income.idinc
 	
	WHERE incomevar.yvar <= %<sys_esercizio>%
	AND incomeyear.idupb = 
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
	AND income.nphase = %<sys_assessmentphase>%	
]{V}
,0)
+
ISNULL(
	[SELECT ISNULL(previousassessment,0) - ISNULL(previousappropriation,0)
	FROM upb WHERE idupb = 
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
	]{V}
,0)
+
ISNULL(
	[SELECT SUM(creditvariation)
	FROM upbtotal
	WHERE idupb = 
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
	]{V}
,0)
>=
ISNULL(
	[SELECT SUM(amount)
	FROM expenseyear
	join expense 
			on expenseyear.idexp=expense .idexp
 	join expensetotal 
			on expensetotal.idexp= expenseyear.idexp
              	and expensetotal.ayear= expenseyear.ayear
	WHERE idupb =
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
	AND expense.nphase = %<sys_appropriationphase>%
	AND (expensetotal.flag & 1)=0

]{V}
,0)
+
ISNULL(
	[SELECT SUM(expensevar.amount) FROM expensevar
	JOIN expenseyear
			ON expensevar.idexp = expenseyear.idexp
			AND expenseyear.ayear=%<incomevar.yvar>%
	join expense 
			on expenseyear.idexp=expense .idexp
	WHERE expensevar.yvar <= %<sys_esercizio>%
	AND expenseyear.idupb = 
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
	AND expense.nphase = %<sys_appropriationphase>%
]{V}
,0)
OR %<incomevar.amount>% <= &<incomevar.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM056','1','U','incomevar','S','N','S','S','N',{ts '2007-09-01 09:26:05.640'},'NINO','L''importo dell''assegnazione crediti deve essere uguale a quello del movimento di entrata','N','ISNULL(
	[SELECT SUM(amount) FROM creditpart
	WHERE idinc = %<incomevar.idinc>%]{V}
,0) = 
ISNULL(
	[SELECT curramount
	FROM incometotal
	WHERE idinc = %<incomevar.idinc>%
	AND ayear = %<incomevar.yvar>%]{V}
,0)
OR
[SELECT nphase FROM income
WHERE idinc = %<incomevar.idinc>%]{I}
<> %<sys_incomefinphase>%
OR
ISNULL(
	[SELECT assured FROM upb
	WHERE idupb =
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
]{C}
,''N'') = ''S''
OR
[SELECT flag & 1 FROM incometotal
WHERE idinc = %<incomevar.idinc>%
AND ayear = %<incomevar.yvar>%]{I} <> 0
OR 
%<incomevar.amount>% = &<incomevar.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM056','2','U','incomevar','S','S','N','N','S',{ts '2007-09-01 09:26:18.983'},'NINO','L''importo dell''assegnazione incassi deve essere uguale a quello del movimento di entrata','N','ISNULL(
	[SELECT SUM(amount) FROM proceedspart
	WHERE idinc = %<incomevar.idinc>%]{V}
,0) = 
ISNULL(
	[SELECT curramount
	FROM incometotal
	WHERE idinc = %<incomevar.idinc>%
	AND ayear = %<incomevar.yvar>%]{V}
,0)
OR
[SELECT nphase FROM income
WHERE idinc = %<incomevar.idinc>%]{I}
<> %<sys_maxincomephase>%
OR
ISNULL(
	[SELECT assured FROM upb
	WHERE idupb =
		[SELECT idupb FROM incomeyear
		WHERE idinc = %<incomevar.idinc>%
		AND ayear = %<incomevar.yvar>%]{C}
]{C}
,''N'') = ''S''
OR 
%<incomevar.amount>% = &<incomevar.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM095','1','U','incomevar','S','S','S','N','N',{ts '2012-11-09 15:30:22.497'},'sa','La variazione n.%<incomevar.nvar>% deve avere lo stesso Cassiere del relativo incasso.','N','%<incomevar.kproceedstransmission>% IS NULL
OR
(
	[SELECT idtreasurer FROM proceedstransmission 
	WHERE  proceedstransmission.kproceedstransmission =  
	ISNULL(%<incomevar.kproceedstransmission>%,0) ]{I}
	=
	[SELECT proceeds.idtreasurer FROM proceeds
	JOIN incomelast
		ON incomelast.kpro = proceeds.kpro
	WHERE  incomelast.idinc  = ISNULL(%<incomevar.idinc>%,0) ]{I}
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','1','U','incomevar','S','S','S','N','N',{ts '2011-07-28 10:34:17.797'},'sara','Nella gestione dell''ordinativo informatico non è possibile modificare variazioni di annullo e variazioni dati già trasmesse, bisogna prima rimuoverle dall''elenco..','N','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds  
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'' )= ''N'')
)
--2) non viene modificato l''importo
OR 
ISNULL(%<incomevar.amount>%,0)=ISNULL(&<incomevar.amount>&,0)   
OR
-- 3) le variazioni sono di tipo normale
ISNULL(%<incomevar.autokind>%,0) NOT IN (10,11,22)
OR
-- 4) la fase della variazione è inferiore alla fase massima
[SELECT nphase FROM income
 WHERE income.idinc = %<incomevar.idinc>%
]{I} < %<sys_maxincomephase>%
OR
-- 5) le variaizoni non sono state trasmesse
%<incomevar.kproceedstransmission>% IS NULL





 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','2','U','incomevar','S','S','S','N','N',{ts '2011-09-07 16:39:13.390'},'sara','Nella gestione dell''ordinativo informatico non è possibile inserire nello stesso elenco di trasmissione variazioni di annullo e variazioni dati  dello stesso movimento finanziario.','N','-- 1) non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds  
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'' )= ''N'')
)
--2) non viene modificato l''importo
OR 
ISNULL(%<incomevar.amount>%,0)=ISNULL(&<incomevar.amount>&,0)   
OR
-- 3) le variazioni sono di tipo normale
ISNULL(%<incomevar.autokind>%,0) NOT IN (10,11,22)
OR
-- 4) la fase della variazione è inferiore alla fase massima
[SELECT nphase FROM income
 WHERE income.idinc = %<incomevar.idinc>%
]{I} < %<sys_maxincomephase>%
OR
-- 5) l''elenco non contiene variazioni di altro tipo riferite allo stesso mandato
ISNULL([
SELECT COUNT(*) FROM incomevar IV
WHERE IV.idinc=%<incomevar.idinc>%
AND IV.autokind <> %<incomevar.autokind>%
AND ISNULL(%<incomevar.autokind>%,0) IN (10,11,22)
AND IV.kproceedstransmission = %<incomevar.kproceedstransmission>% 
]{I} ,0) = 0







 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','3','U','incomevar','S','S','S','N','N',{ts '2011-09-19 12:57:02.453'},'sara','Al di fuori della gestione dell''ordinativo informatico non è possibile inserire variazioni dati di documenti.','N','-- 1) viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast 
JOIN proceeds  
	ON incomelast.kpro = proceeds.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomevar.idinc>%]{C},''N'' )= ''S'')
)
OR
-- 2) le variazioni sono di tipo normale o annullamento
ISNULL(%<incomevar.autokind>%,0) <>22
--3)
OR
(
ISNULL(%<incomevar.autokind>%,0) = ISNULL(&<incomevar.autokind>&,0)
)





 



 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM107','1','U','incomevar','S','S','S','N','N',{ts '2012-11-15 11:35:35.227'},'sa','Saldo iniziale + Tot. reversali emesse + Girofondi in entrata deve essere maggiore od uguale al Tot. pagamenti emessi + Girofondi in uscita.','N','(&<incomevar.amount>& = %<incomevar.amount>%)
OR
([select nphase from income where idinc=%<incomevar.idinc>%]{I}<> %<sys_maxincomephase>%)
OR
ISNULL([SELECT currentfloatfund 
FROM treasurercashtotal 
WHERE ayear = %<sys_esercizio>%
and idtreasurer =isnull([select idtreasurer from proceeds
			join incomelast 
				on proceeds.kpro= incomelast.kpro 
			where incomelast.idinc = %<incomevar.idinc>%]{I},0)
]{V},0) >= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON003','1','U','incomevar','S','N','N','N','N',{ts '2007-08-31 14:18:40.983'},'NINO','La previsione di cassa della voce di entrata %<incomeview.codefin>% e UPB %<incomeview.codeupb>% è INSUFFICIENTE!','N','  (	
	ISNULL([SELECT ISNULL(currentsecondaryprev,0)+
		ISNULL(secondaryvariation, 0) 
		FROM upbtotal 
		WHERE idfin = 
			[SELECT idfin FROM incomeyear WHERE idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{I}
		and idupb = 
			[SELECT idupb FROM incomeyear WHERE idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{C}

		]{V}
		,0)
	-
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM upbincometotal
		WHERE idfin = 
			[SELECT idfin FROM incomeyear WHERE idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{I}
		and idupb = 
			[SELECT idupb FROM incomeyear WHERE idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{C}
		AND nphase = %<sys_maxincomephase>%]{V}
	,0)
      >= 0
)
OR
([select nphase from income where idinc = %<incomevar.idinc>%]{I} <> %<sys_maxincomephase>%)
or
%<incomevar.amount>%<&<incomevar.amount>&')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON007','1','U','incomevar','S','N','N','N','N',{ts '2013-05-21 11:03:38.960'},'sa','La previsione di cassa della voce di entrata di Finanziamento: %<incomevarview.underwriting>% , UPB: %<incomevarview.upb>% , Bilancio: %<incomevarview.codefin>% è INSUFFICIENTE!','N','(isnull([select idunderwriting from income where idinc = %<incomevar.idinc>%]{I},0)=0)  
OR
  (	
	ISNULL([SELECT ISNULL(currentsecondaryprev,0)+
		ISNULL(secondaryvariation, 0) 
		FROM upbunderwritingtotal 
		WHERE idfin = 
			[SELECT idfin FROM incomeyear WHERE idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{I}
		and idupb = 
			[SELECT idupb FROM incomeyear WHERE idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{C}
		and idunderwriting= [select idunderwriting 
			from income 
			where idinc = %<incomevar.idinc>%]{I}	
		]{V}
		,0)
	-
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM underwritingincometotal
		WHERE idfin = 
			[SELECT idfin FROM incomeyear WHERE idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{I}
		and idupb = 
			[SELECT idupb FROM incomeyear WHERE idinc = %<incomevar.idinc>% AND ayear = %<incomevar.yvar>%]{C}
		and idunderwriting= [select idunderwriting 
			from income 
			where idinc = %<incomevar.idinc>%]{I}	
		AND nphase = %<sys_maxincomephase>%]{V}
	,0)
      >= 0
)
OR
([select nphase from income where idinc = %<incomevar.idinc>%]{I} <> %<sys_maxincomephase>%)
or
%<incomevar.amount>%<&<incomevar.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','1','U','incomevar','S','S','S','N','N',{ts '2009-03-21 15:11:46.733'},'SARA','Le regole di sicurezza vietano l''inserimento di variazioni di annullamento per le Reversali','S','ISNULL(&<incomevar.autokind>&,0) = ISNULL(%<incomevar.autokind>%,0)
OR
(ISNULL(%<incomevar.autokind>%,0) NOT IN (10,11))
OR
(ISNULL(&<incomevar.autokind>&,0) NOT IN (10,11))
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename  = ''annullamento''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','1','U','incomevar','S','S','S','N','N',{ts '2010-11-08 10:35:02.203'},'sa','L''utente non è abilitato alla modifica di variazioni di fasi finanziarie precedenti alla fase dell''Accertamento giuridico.','N','[SELECT nphase FROM income WHERE idinc = %<incomevar.idinc>%]{I}  >= %<sys_assessmentphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''pre_accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','2','U','incomevar','S','S','S','N','N',{ts '2010-11-08 10:35:06.170'},'sa','L''utente non è abilitato alla modifica di variazioni di fasi finanziarie successive alla fase dell''Accertamento giuridico.','N','[SELECT nphase FROM income WHERE idinc = %<incomevar.idinc>%]{I}  <= %<sys_assessmentphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''post_accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','3','U','incomevar','S','S','S','N','N',{ts '2010-11-08 10:35:10.063'},'sa','L''utente non è abilitato alla modifica di variazioni di fasi finanziarie equivalenti all''Accertamento giuridico.','N','[SELECT nphase FROM income WHERE idinc = %<incomevar.idinc>%]{I} <> %<sys_assessmentphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','D','incomeyear','S','S','S','N','N',{ts '2007-12-15 09:38:44.610'},'NINO','Il movimento di entrata %<incomeview.phase>% n. %<incomeview.nmov>% / %<incomeview.ymov>% non può essere cancellato. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM038','1','D','incomeyear','S','S','S','S','N',{ts '2007-08-30 16:59:58.420'},'NINO','Il totale dell''accertato è inferiore al totale dell''impegnato per l''UPB scelto','S','[SELECT assured FROM upb
WHERE idupb = %<incomeyear.idupb>%]{C} <> ''S''
OR
[select nphase from income where idinc=%<incomeyear.idinc>%]{I}  <> %<sys_assessmentphase>%
OR
isnull([SELECT SUM(amount) FROM incomeyear
  JOIN incometotal 
    ON incometotal.idinc=incomeyear.idinc AND
      incometotal.ayear=incomeyear.ayear
      JOIN income ON incomeyear.idinc= income.idinc
WHERE idupb = %<incomeyear.idupb>%
AND income.nphase = %<sys_assessmentphase>%
AND (incometotal.flag & 1 = 0)
]{V},0)
- %<incomeyear.amount>%
+
ISNULL(
	[SELECT SUM(incomevar.amount)
	FROM incomevar
	JOIN incomeyear
	           ON incomevar.idinc = incomeyear.idinc
			AND incomeyear.ayear= %<incomeyear.ayear>%
      JOIN income ON incomevar.idinc= income.idinc
	WHERE incomevar.yvar <= %<sys_esercizio>%
	AND incomeyear.idupb = %<incomeyear.idupb>%
	AND income.nphase = %<sys_assessmentphase>%
]{V}
,0)
+
[SELECT ISNULL(previousassessment,0) - ISNULL(previousappropriation,0)
FROM upb
WHERE idupb = %<incomeyear.idupb>%]{V}
+
ISNULL(
	[SELECT SUM(creditvariation)
	FROM upbtotal
	WHERE idupb = %<incomeyear.idupb>%]{V}
,0)
>=
ISNULL(
	[SELECT SUM(amount)
	FROM expenseyear
      join expense on expenseyear.idexp=expense.idexp
      JOIN expensetotal 
                 ON expensetotal.idexp=expenseyear.idexp AND
                    expensetotal.ayear=expenseyear.ayear
	WHERE idupb = %<incomeyear.idupb>%
	AND expense.nphase = %<sys_appropriationphase>%
	AND (expensetotal.flag & 1 = 0)
]{V}
,0)
+
ISNULL(
	[SELECT SUM(expensevar.amount) FROM expensevar
	JOIN expenseyear
		ON expensevar.idexp = expenseyear.idexp
		AND expenseyear.ayear= %<incomeyear.ayear>%
      JOIN expense ON expense.idexp=expensevar.idexp
	WHERE expensevar.yvar <= %<sys_esercizio>%
	AND expenseyear.idupb = %<incomeyear.idupb>%
	AND expense.nphase = %<sys_appropriationphase>%	
]{V}
,0)
OR %<incomeyear.amount>% = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR012','1','D','incomeyear','S','S','S','N','N',{ts '2013-01-07 16:52:26.500'},'sa','L''utente non è abilitato a operare su Voci di Bilancio a Movimentazione protetta','S','[SELECT flag
FROM fin
WHERE fin.idfin = %<incomeyear.idfin>%]{I} & 8  = 0 
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''movimprotetta''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BOLLE001','1','I','incomeyear','S','S','S','N','N',{ts '2013-07-08 10:24:41.503'},'nino','La somma dei movimenti di entrata collegati alla bolletta n. %<incomeview.nbill>% NON può essere maggiore dell''importo della bolletta1','N','([SELECT nbill from incomelast   where idinc= %<incomeyear.idinc>%]{I}
  IS NULL
) 

OR 
ISNULL([SELECT SUM(curramount)
FROM incomelast
join incometotal
on incomelast.idinc = incometotal.idinc
WHERE nbill = [SELECT nbill from incomelast  where idinc= %<incomeyear.idinc>%]{I}
AND ayear = %<sys_esercizio>%]{V},0)
<= 
ISNULL(
[(SELECT ISNULL(total, 0) 
from bill
where nbill= [SELECT nbill from incomelast  where idinc= %<incomeyear.idinc>%]{I}
	and ybill = %<sys_esercizio>%
	and billkind =''C'')]{V}
,0)  

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA001','1','I','incomeyear','N','S','N','N','N',{ts '2007-10-23 16:59:21.267'},'NINO','La previsione della voce in entrata %<incomeview.codefin>% e UPB %<incomeview.codeupb>% è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<incomeyear.idfin>%
	and idupb=%<incomeyear.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from upbincometotal 
	where idfin = %<incomeyear.idfin>% 
	and idupb=%<incomeyear.idupb>%
	and nphase = [select nphase from income where idinc=%<incomeyear.idinc>%]{I}
  ]{V}
,0)
>= 0 
or 
(%<incomeyear.idfin>% IS NULL)
or 

[select nphase from income where idinc=%<incomeyear.idinc>%]{I}<> %<sys_incomefinphase>%
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA003','1','I','incomeyear','N','S','N','N','N',{ts '2013-05-21 10:47:34.983'},'sa','La previsione della voce in entrata Finanziamento: %<incomeview.underwriting>% , UPB: %<incomeview.upb>% , Bilancio: %<incomeview.codefin>% è INSUFFICIENTE!','N','(isnull([select idunderwriting from income where idinc = %<incomeyear.idinc>%]{I},0)=0)  
OR

ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbunderwritingtotal 
	where idfin = %<incomeyear.idfin>%
	and idupb=%<incomeyear.idupb>%
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomeyear.idinc>%]{I}	
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from underwritingincometotal 
	where idfin = %<incomeyear.idfin>% 
	and idupb=%<incomeyear.idupb>%
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomeyear.idinc>%]{I}	
	and nphase = [select nphase from income where idinc=%<incomeyear.idinc>%]{I}
  ]{V}
,0)
>= 0 
or 
(%<incomeyear.idfin>% IS NULL)
or 

[select nphase from income where idinc=%<incomeyear.idinc>%]{I}<> %<sys_incomefinphase>%
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','I','incomeyear','S','S','S','N','N',{ts '2007-12-15 09:38:52.047'},'NINO','Il movimento di entrata %<incomeview.phase>% n. %<incomeview.nmov>% / %<incomeview.ymov>% non può essere inserito. Esercizio  %<esercizio>% chiuso','N','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE002','1','I','incomeyear','S','N','S','N','N',{ts '2007-10-05 10:07:25.233'},'LAGONIGRO','La previsione di competenza della voce in entrata %<incomeview.codefin>% e UPB %<incomeview.codeupb>% è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = %<incomeyear.idfin>%
	and idupb= %<incomeyear.idupb>%

]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbincometotal 
	where idfin = %<incomeyear.idfin>% 
	and idupb= %<incomeyear.idupb>%
	and nphase = [select nphase from income where idinc=%<incomeyear.idinc>%]{I}]{V}
,0)
 >= 0 
or 
[select ymov from income where idinc=%<incomeyear.idinc>%]{I} <> %<sys_esercizio>%
or 
%<incomeyear.idfin>% IS NULL
or 
%<sys_incomefinphase>% <> [select nphase from income where idinc=%<incomeyear.idinc>%]{I}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE009','1','I','incomeyear','S','N','S','N','N',{ts '2013-05-21 10:55:04.050'},'sa','La previsione di competenza entrata di Finanziamento: %<incomeview.underwriting>% , UPB: %<incomeview.upb>% , Bilancio: %<incomeview.codefin>% è INSUFFICIENTE!','N','(isnull([select idunderwriting from income where idinc = %<incomeyear.idinc>%]{I},0)=0)  
OR
ISNULL(
	[SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = %<incomeyear.idfin>%
	and idupb= %<incomeyear.idupb>%
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomeyear.idinc>%]{I}	
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingincometotal 
	where idfin = %<incomeyear.idfin>% 
	and idupb= %<incomeyear.idupb>%
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomeyear.idinc>%]{I}	
	and nphase = [select nphase from income where idinc=%<incomeyear.idinc>%]{I}]{V}
,0)
 >= 0 
or 
[select ymov from income where idinc=%<incomeyear.idinc>%]{I} <> %<sys_esercizio>%
or 
%<incomeyear.idfin>% IS NULL
or 
%<sys_incomefinphase>% <> [select nphase from income where idinc=%<incomeyear.idinc>%]{I}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM001','1','I','incomeyear','S','S','S','N','N',{ts '2007-08-25 10:47:01.907'},'NINO','La voce di bilancio è assente','N','%<sys_incomefinphase>%<>[select nphase from income where idinc=%<incomeyear.idinc>%]{I}
or 
%<incomeyear.idfin>% is not NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM001','2','I','incomeyear','S','S','S','N','N',{ts '2007-08-25 10:47:18.717'},'NINO','La voce UPB è assente','N','%<sys_incomefinphase>%<>
 [select nphase from income where idinc=%<incomeyear.idinc>%]{I}
or 
%<incomeyear.idupb>% is not NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM003','1','I','incomeyear','S','S','S','N','N',{ts '2007-08-25 10:47:49.217'},'NINO','L''importo attuale dei movimenti di entrata della fase %<incomephase.description>% è maggiore dell''importo attuale del movimento della fase precedente','N','--post
[(SELECT count(*) 
from income 
where idinc = [select parentidinc from income where idinc=%<incomeyear.idinc>%]{I})]{V} = 0 
or 
[(SELECT ISNULL(available, 0) 
from incometotal 
where idinc = [select parentidinc from income where idinc=%<incomeyear.idinc>%]{I}
and ayear = %<sys_esercizio>%)]{V} >= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM004','1','I','incomeyear','S','S','S','N','N',{ts '2010-02-18 09:33:16.140'},'SARA','L''importo attuale del movimento di entrata %<incomephase.description>% %<income.ymov>% %<income.nmov>% è NEGATIVO','N','[(SELECT MIN(ISNULL(curramount, 0)) 
from incometotal 
where idinc = %<incomeyear.idinc>% )]{V}  >= 0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM020','1','I','incomeyear','S','S','S','N','N',{ts '2007-12-13 13:49:42.590'},'SARA','Non può essere inserito una movimento di entrata dipendente dal movimento %<income.parentidinc>% in quanto la disponibilità negli anni successivi diventa negativa','N','(
		[SELECT COUNT(*)
			FROM incometotal
			WHERE idinc = %<incomeyear.idinc>%
			AND ayear > %<sys_esercizio>%]{V} = 0
)
OR
(
	isnull([SELECT ISNULL(MIN(available),0)
	FROM incometotal
	WHERE idinc = [select parentidinc from income where idinc=%<incomeyear.idinc>%]{I} 
	AND ayear > %<sys_esercizio>%]{V},0)
	 >= 0
)
OR
(
	ISNULL(
		[SELECT MAX(ayear) FROM accountingyear WHERE ((flag&0x0F)>= 4)]{I}
	,%<sys_esercizio>%-1) < %<sys_esercizio>%
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM030','1','I','incomeyear','S','S','S','N','N',{ts '2007-08-24 14:18:16.530'},'NINO','Il movimento di entrata che si sta inserendo ha importo nullo','S','%<incomeyear.amount>% <> 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM033','1','I','incomeyear','S','S','S','N','N',{ts '2007-12-13 14:08:14.753'},'SARA','Il movimento di entrata non può essere creato perchè la voce di bilancio %<fin.codefin>% non esiste nell''esercizio successivo.','S','
([SELECT COUNT(*) FROM fin WHERE idfin = 
		[SELECT newidfin
		FROM finlookup
		WHERE oldidfin = %<incomeyear.idfin>%	
		]{I}	
]{V} = 1)
OR
[SELECT COUNT (*) FROM accountingyear WHERE ((flag&0x0F) >= 2)
AND accountingyear.ayear = %<sys_esercizio>%+1]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM039','1','I','incomeyear','S','S','S','N','N',{ts '2007-10-13 19:50:34.517'},'NINO','Il responsabile scelto:%<incomeview.manager>%, è differente da quello dell''UPB: %<incomeview.upb>%.','N','(ISNULL([SELECT idman
FROM upb 
WHERE idupb = %<incomeyear.idupb>%]{I},0)
= 0)
OR
(ISNULL([SELECT idman
FROM income 
WHERE idinc = %<incomeyear.idinc>%]{I},0)) = 
(ISNULL([SELECT idman
FROM upb 
WHERE idupb = %<incomeyear.idupb>%]{I},0))
OR
ISNULL([SELECT idman
FROM income 
WHERE idinc = %<incomeyear.idinc>%]{I},0)=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM044','1','I','incomeyear','S','S','S','N','N',{ts '2007-08-25 10:52:43.203'},'NINO','Il movimento di entrata non può essere salvato con una voce di bilancio riferita ad esercizi differenti dall''attuale','S','[select ayear from fin where idfin=%<incomeyear.idfin>%]{I}
   =%<sys_esercizio>%
OR
%<incomeyear.idfin>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM056','1','I','incomeyear','S','N','S','S','N',{ts '2007-08-25 11:13:12.780'},'NINO','L''importo dell''assegnazione crediti deve essere uguale a quello del movimento di entrata','N','ISNULL(
	[SELECT SUM(amount) FROM creditpart
	WHERE idinc = %<incomeyear.idinc>%]{V}
,0) = 
ISNULL(
	[SELECT curramount
	FROM incometotal
	WHERE idinc = %<incomeyear.idinc>%
	AND ayear = %<incomeyear.ayear>%]{V}
,0)
OR
[select nphase from income where idinc=%<incomeyear.idinc>%]{I}
 <> %<sys_incomefinphase>%
OR
ISNULL(
	[SELECT assured FROM upb
	WHERE idupb = %<incomeyear.idupb>%]{C}
,''N'') = ''S''
OR 
[select flag & 1 from incometotal where idinc=%<incomeyear.idinc>% and ayear=%<incomeyear.ayear>%]{I} <> 0

OR 
([select autokind from income where idinc=%<incomeyear.idinc>%]{I} is not null)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM056','2','I','incomeyear','S','S','N','N','S',{ts '2007-08-25 11:13:40.860'},'NINO','L''importo dell''assegnazione incassi deve essere uguale a quello del movimento di entrata','N','ISNULL(
	[SELECT SUM(amount) FROM proceedspart
	WHERE idinc = %<incomeyear.idinc>%]{V}
,0) = 
ISNULL(
	[SELECT curramount
	FROM incometotal
	WHERE idinc = %<incomeyear.idinc>%
	AND ayear = %<incomeyear.ayear>%]{V}
,0)
OR
[select nphase from income where idinc=%<incomeyear.idinc>%]{I} <> %<sys_maxincomephase>%
OR
ISNULL(
	[SELECT assured FROM upb
	WHERE idupb = %<incomeyear.idupb>%]{C}
,''N'') = ''S''
OR
[select ymov from income where idinc=%<incomeyear.idinc>%]{I} <> %<sys_esercizio>%
OR
( [select autokind from income where idinc=%<incomeyear.idinc>%]{I} is not null)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM076','1','I','incomeyear','S','S','S','N','N',{ts '2008-11-26 11:30:45.780'},'SA','Errore nell''applicazione, dati incoerenti nella gerarchia dei movimenti.(Entrata/Bilancio)','N','(
ISNULL (%<incomeyear.idfin>%,0)= 0
)

OR

ISNULL([select parentidinc from income where idinc=
	%<incomeyear.idinc>%]{I},  0)=0

OR

(
ISNULL(
	[select idfin from incomeyear  EY
	join income  E on E.parentidinc=EY.idinc
	where E.idinc=%<incomeyear.idinc>%
		and EY.ayear=%<incomeyear.ayear>%]{I},0)
= 0
)

OR

(
ISNULL (%<incomeyear.idfin>%,0)
=
ISNULL(
	[select idfin from incomeyear  EY
	join income E on E.parentidinc=EY.idinc
	where E.idinc=%<incomeyear.idinc>%
		and EY.ayear=%<incomeyear.ayear>%]{I},0)

)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM076','2','I','incomeyear','S','S','S','N','N',{ts '2008-11-26 11:30:54.703'},'SA','Errore nell''applicazione, dati incoerenti nella gerarchia dei movimenti.(Entrata/Upb)','N','(
ISNULL (%<incomeyear.idupb>%,''0'')= ''0''
)

OR

ISNULL([select parentidinc from income where idinc=
	%<incomeyear.idinc>%]{I},  0)=0

OR

(
ISNULL(
	[select idupb from incomeyear  EY
	join income  E on E.parentidinc=EY.idinc
	where E.idinc=%<incomeyear.idinc>%
		and EY.ayear=%<incomeyear.ayear>%]{C},''0'')
= ''0''
)

OR

(
ISNULL (%<incomeyear.idupb>%,''0'')
=
ISNULL(
	[select idupb from incomeyear  EY
	join income E on E.parentidinc=EY.idinc
	where E.idinc=%<incomeyear.idinc>%
		and EY.ayear=%<incomeyear.ayear>%]{C},''0'')

)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON003','1','I','incomeyear','S','N','N','N','N',{ts '2007-08-25 11:02:21.030'},'NINO','La previsione di cassa della voce di entrata %<incomeview.codefin>% e UPB %<incomeview.codeupb>% è INSUFFICIENTE!','N','(
		(
			ISNULL(
				[SELECT
				ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
				FROM upbtotal 
				WHERE idfin = %<incomeyear.idfin>% AND
					idupb = %<incomeyear.idupb>%
				]{V}
			,0)
			- 
			ISNULL(
				[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
				FROM upbincometotal
				WHERE idfin = %<incomeyear.idfin>% 
				AND idupb = %<incomeyear.idupb>%
				AND nphase = %<sys_maxincomephase>%]{V}
			,0)
      	) >= 0
)
OR
(%<sys_maxincomephase>% <> [select nphase from income where idinc=%<incomeyear.idinc>%]{I})')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON007','1','I','incomeyear','S','N','N','N','N',{ts '2013-05-21 11:03:49.640'},'sa','La previsione di cassa della voce di entrata di Finanziamento: %<incomeview.underwriting>% , UPB: %<incomeview.upb>% , Bilancio: %<incomeview.codefin>% è INSUFFICIENTE!','N','(isnull([select idunderwriting from income where idinc = %<incomeyear.idinc>%]{I},0)=0)  
OR
(
		(
			ISNULL(
				[SELECT
				ISNULL(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
				FROM upbunderwritingtotal 
				WHERE idfin = %<incomeyear.idfin>% AND
					idupb = %<incomeyear.idupb>%
					and idunderwriting= [select idunderwriting 
						from income 
						where idinc = %<incomeyear.idinc>%]{I}	
				]{V}
			,0)
			- 
			ISNULL(
				[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
				FROM underwritingincometotal
				WHERE idfin = %<incomeyear.idfin>% 
				AND idupb = %<incomeyear.idupb>%
				and idunderwriting= [select idunderwriting 
						from income 
						where idinc = %<incomeyear.idinc>%]{I}	
				AND nphase = %<sys_maxincomephase>%]{V}
			,0)
      	) >= 0
)
OR
(%<sys_maxincomephase>% <> [select nphase from income where idinc=%<incomeyear.idinc>%]{I})')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR012','1','I','incomeyear','S','S','S','N','N',{ts '2013-01-07 16:52:35.883'},'sa','L''utente non è abilitato a operare su Voci di Bilancio a Movimentazione protetta','S','[SELECT flag
FROM fin
WHERE fin.idfin = %<incomeyear.idfin>%]{I} & 8  = 0 
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''movimprotetta''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BOLLE001','1','U','incomeyear','S','S','S','N','N',{ts '2007-10-03 17:38:53.257'},'SA','La somma dei movimenti di entrata collegati alla bolletta n. %<incomeview.nbill>% NON può essere maggiore dell''importo della bolletta1','N','([SELECT nbill from incomelast 
  where idinc= %<incomeyear.idinc>%]{I}
  IS NULL
) 

OR 
ISNULL([SELECT SUM(curramount)
FROM incomelast
join incometotal
on incomelast.idinc = incometotal.idinc
WHERE nbill = [SELECT nbill from incomelast  where idinc= %<incomeyear.idinc>%]{I}
AND ayear = %<sys_esercizio>%]{V},0)
<= 
ISNULL(
[(SELECT ISNULL(total, 0) 
from bill
where nbill= [SELECT nbill from incomelast  where idinc= %<incomeyear.idinc>%]{I}
	and ybill = %<sys_esercizio>%
	and billkind =''C'')]{V}
,0)  
OR 
isnull(%<incomeyear.amount>%,0)<=isnull(&<incomeyear.amount>&,0)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA001','1','U','incomeyear','N','S','N','N','N',{ts '2007-08-25 11:27:41.860'},'NINO','La previsione della voce in entrata %<fin.codefin>% e UPB %<upb.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)  
	from upbtotal 
	where idfin = %<incomeyear.idfin>%
		AND idupb = %<incomeyear.idupb>%
]{V}
,0)
- 
[SELECT ISNULL(totalcompetency, 0) + 
ISNULL(totalarrears, 0) 
from upbincometotal 
where idfin = %<incomeyear.idfin>% 
	AND idupb = %<incomeyear.idupb>%
	and nphase = [select nphase from income where idinc= %<incomeyear.idinc>%]{I}
]{V}
+
%<incomeyear.amount>%-
&<incomeyear.amount>&
>= 0 
or 
(%<incomeyear.idfin>% IS NULL)
or
(%<incomeyear.idfin>% <> &<incomeyear.idfin>&)
or
(%<incomeyear.idupb>% <> &<incomeyear.idupb>&)
or 
(%<sys_incomefinphase>% <> [select nphase from income where idinc= %<incomeyear.idinc>%]{I})
or
%<incomeyear.amount>%<&<incomeyear.amount>&

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA001','2','U','incomeyear','N','S','N','N','N',{ts '2007-08-25 11:28:36.420'},'NINO','La previsione della voce in entrata %<fin.codefin>% e UPB %<upb.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbtotal 
	where idfin = %<incomeyear.idfin>%
	AND idupb = %<incomeyear.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from upbincometotal 
	where idfin = %<incomeyear.idfin>% 
	AND idupb = %<incomeyear.idupb>%
	and nphase = [select nphase from income where idinc= %<incomeyear.idinc>%]{I}]{V}
,0)
- 
ISNULL(%<incomeyear.amount>%, 0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0)
	from incomevar
	where idinc = %<incomeyear.idinc>%
	and yvar = %<sys_esercizio>%]{V}
,0)

>= 0
or 
(%<incomeyear.idfin>% IS NULL)
or
((%<incomeyear.idfin>% = &<incomeyear.idfin>&)AND
(%<incomeyear.idupb>% = &<incomeyear.idupb>&)
)
or 
(%<sys_incomefinphase>% <> [select nphase from income where idinc= %<incomeyear.idinc>%]{I})
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA003','1','U','incomeyear','N','S','N','N','N',{ts '2013-05-21 10:47:41.467'},'sa','La previsione della voce in entrata Finanziamento: %<incomeview.underwriting>% , UPB: %<incomeview.upb>% , Bilancio: %<incomeview.codefin>% è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<incomeyear.idinc>%]{I},0)=0)  
OR
ISNULL(
	[SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)  
	from upbunderwritingtotal 
	where idfin = %<incomeyear.idfin>%
		AND idupb = %<incomeyear.idupb>%
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomeyear.idinc>%]{I}	
]{V}
,0)
- 
[SELECT ISNULL(totalcompetency, 0) + 
ISNULL(totalarrears, 0) 
from underwritingincometotal 
where idfin = %<incomeyear.idfin>% 
	AND idupb = %<incomeyear.idupb>%
	and nphase = [select nphase from income where idinc= %<incomeyear.idinc>%]{I}
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomeyear.idinc>%]{I}	
]{V}
+
%<incomeyear.amount>%-
&<incomeyear.amount>&
>= 0 
or 
(%<incomeyear.idfin>% IS NULL)
or
(%<incomeyear.idfin>% <> &<incomeyear.idfin>&)
or
(%<incomeyear.idupb>% <> &<incomeyear.idupb>&)
or 
(%<sys_incomefinphase>% <> [select nphase from income where idinc= %<incomeyear.idinc>%]{I})
or
%<incomeyear.amount>%<&<incomeyear.amount>&

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CASSA003','2','U','incomeyear','N','S','N','N','N',{ts '2013-05-21 10:47:49.443'},'sa','La previsione della voce in entrata Finanziamento: %<incomeview.underwriting>% , UPB: %<incomeview.upb>% , Bilancio: %<incomeview.codefin>% è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<incomeyear.idinc>%]{I},0)=0)  
OR
ISNULL(
	[SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) 
	from upbunderwritingtotal 
	where idfin = %<incomeyear.idfin>%
	AND idupb = %<incomeyear.idupb>%
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomeyear.idinc>%]{I}	
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from underwritingincometotal 
	where idfin = %<incomeyear.idfin>% 
	AND idupb = %<incomeyear.idupb>%
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomeyear.idinc>%]{I}	
	and nphase = [select nphase from income where idinc= %<incomeyear.idinc>%]{I}]{V}
,0)
- 
ISNULL(%<incomeyear.amount>%, 0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0)
	from incomevar
	where idinc = %<incomeyear.idinc>%
	and yvar = %<sys_esercizio>%]{V}
,0)

>= 0
or 
(%<incomeyear.idfin>% IS NULL)
or
((%<incomeyear.idfin>% = &<incomeyear.idfin>&)AND
(%<incomeyear.idupb>% = &<incomeyear.idupb>&)
)
or 
(%<sys_incomefinphase>% <> [select nphase from income where idinc= %<incomeyear.idinc>%]{I})
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','U','incomeyear','S','S','S','N','N',{ts '2007-12-14 13:52:56.090'},'NINO','Il movimento di entrata %<incomeview.phase>% n. %<incomeview.nmov>% / %<incomeview.ymov>% non può essere modificato. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE002','1','U','incomeyear','S','N','S','N','N',{ts '2007-08-25 11:29:27.077'},'NINO','La previsione di competenza della voce in entrata %<fin.codefin>% e UPB %<upb.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<incomeyear.idfin>%
	AND idupb= %<incomeyear.idupb>%
]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from upbincometotal 
where idfin = %<incomeyear.idfin>% 
	AND idupb= %<incomeyear.idupb>%
	and nphase = [select nphase from income where idinc= %<incomeyear.idinc>%]{I}]{V},0)
+ 
ISNULL(&<incomeyear.amount>&, 0)
- 
ISNULL(%<incomeyear.amount>%, 0) >= 0 
or 
[select ymov from income where idinc= %<incomeyear.idinc>%]{I} <> %<sys_esercizio>%
or 
%<incomeyear.idfin>% IS NULL
or
%<incomeyear.idfin>% <> &<incomeyear.idfin>&
or
%<incomeyear.idupb>% <> &<incomeyear.idupb>&
or 
%<sys_incomefinphase>% <> [select nphase from income where idinc= %<incomeyear.idinc>%]{I}
or
%<incomeyear.amount>%<&<incomeyear.amount>&
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE002','2','U','incomeyear','S','N','S','N','N',{ts '2007-08-25 11:29:55.110'},'NINO','La previsione di competenza della voce in entrata %<fin.codefin>% e UPB %<upb.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) 	
		from upbtotal 
	where idfin = %<incomeyear.idfin>%
	AND idupb= %<incomeyear.idupb>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbincometotal 
	where idfin = %<incomeyear.idfin>% 
	AND idupb= %<incomeyear.idupb>%
	and nphase = [select nphase from income where idinc= %<incomeyear.idinc>%]{I}]{V}
,0)
- 
ISNULL(%<incomeyear.amount>%, 0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0)
	from incomevar
	where idinc = %<incomeyear.idinc>%
	and yvar = %<sys_esercizio>%]{V}
,0)
>= 0 
or 
[select ymov from income where idinc= %<incomeyear.idinc>%]{I} <> %<sys_esercizio>%
or 
%<incomeyear.idfin>% IS NULL
or
((%<incomeyear.idfin>% = &<incomeyear.idfin>&)AND
(%<incomeyear.idupb>% = &<incomeyear.idupb>&)
)
or 
%<sys_incomefinphase>% <>[select nphase from income where idinc= %<incomeyear.idinc>%]{I}

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE009','1','U','incomeyear','S','N','S','N','N',{ts '2013-05-21 10:55:09.747'},'sa','La previsione di competenza entrata di Finanziamento: %<incomeview.underwriting>% , UPB: %<incomeview.upb>% , Bilancio: %<incomeview.codefin>% è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<incomeyear.idinc>%]{I},0)=0)  
OR
ISNULL(
	[SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0)
	from upbunderwritingtotal 
	where idfin = %<incomeyear.idfin>%
	AND idupb= %<incomeyear.idupb>%
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomeyear.idinc>%]{I}	
]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from underwritingincometotal 
where idfin = %<incomeyear.idfin>% 
	AND idupb= %<incomeyear.idupb>%
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomeyear.idinc>%]{I}	
	and nphase = [select nphase from income where idinc= %<incomeyear.idinc>%]{I}]{V},0)
+ 
ISNULL(&<incomeyear.amount>&, 0)
- 
ISNULL(%<incomeyear.amount>%, 0) >= 0 
or 
[select ymov from income where idinc= %<incomeyear.idinc>%]{I} <> %<sys_esercizio>%
or 
%<incomeyear.idfin>% IS NULL
or
%<incomeyear.idfin>% <> &<incomeyear.idfin>&
or
%<incomeyear.idupb>% <> &<incomeyear.idupb>&
or 
%<sys_incomefinphase>% <> [select nphase from income where idinc= %<incomeyear.idinc>%]{I}
or
%<incomeyear.amount>%<&<incomeyear.amount>&
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE009','2','U','incomeyear','S','N','S','N','N',{ts '2013-05-21 10:55:15.617'},'sa','La previsione di competenza entrata di Finanziamento: %<incomeview.underwriting>% , UPB: %<incomeview.upb>% , Bilancio: %<incomeview.codefin>% è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<incomeyear.idinc>%]{I},0)=0)  
OR
ISNULL(
	[SELECT ISNULL(currentprev,0)+ISNULL(previsionvariation, 0) 	
		from upbunderwritingtotal 
	where idfin = %<incomeyear.idfin>%
	AND idupb= %<incomeyear.idupb>%
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomeyear.idinc>%]{I}	
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingincometotal 
	where idfin = %<incomeyear.idfin>% 
	AND idupb= %<incomeyear.idupb>%
	and idunderwriting= [select idunderwriting 
		from income 
		where idinc = %<incomeyear.idinc>%]{I}	
	and nphase = [select nphase from income where idinc= %<incomeyear.idinc>%]{I}]{V}
,0)
- 
ISNULL(%<incomeyear.amount>%, 0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0)
	from incomevar
	where idinc = %<incomeyear.idinc>%
	and yvar = %<sys_esercizio>%]{V}
,0)
>= 0 
or 
[select ymov from income where idinc= %<incomeyear.idinc>%]{I} <> %<sys_esercizio>%
or 
%<incomeyear.idfin>% IS NULL
or
((%<incomeyear.idfin>% = &<incomeyear.idfin>&)AND
(%<incomeyear.idupb>% = &<incomeyear.idupb>&)
)
or 
%<sys_incomefinphase>% <>[select nphase from income where idinc= %<incomeyear.idinc>%]{I}

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI004','1','U','incomeyear','S','S','S','S','N',{ts '2007-09-01 14:16:25.733'},'NINO','Il movimento di entrata è inferiore rispetto alle assegnazioni crediti','N','isnull([SELECT ISNULL(curramount, 0) 
from incometotal 
where idinc = %<incomeyear.idinc>%
and ayear = %<sys_esercizio>%
]{V},0)
-
isnull([SELECT ISNULL(sum(amount), 0) 
from creditpart 
where idinc = %<incomeyear.idinc>%
and ycreditpart = %<sys_esercizio>%]{V}
,0)
 >= 0
or 
%<incomeyear.amount>%>=&<incomeyear.amount>&
OR
[select nphase from income where idinc= %<incomeyear.idinc>% ]{I} <> %<sys_assessmentphase>%
OR
[SELECT assured
FROM upb
WHERE idupb =  %<incomeyear.idupb>%

]{C} = ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ESTIM001','1','U','incomeyear','S','S','S','N','N',{ts '2007-08-24 15:41:16.610'},'NINO','L''importo del movimento di entrata è diverso dalla somma dei dettagli del contratto attivo associati','N','(isnull(&<incomeyear.amount>&,0) = isnull(%<incomeyear.amount>%,0))

OR

(

[SELECT COUNT(*) 

FROM  incomeestimateview 

WHERE incomeestimateview.idinc = %<incomeyear.idinc>%

AND   ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)

AND   ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0

)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO012','1','U','incomeyear','S','S','S','N','S',{ts '2007-09-26 14:20:31.750'},'NINO','La dotazione degli incassi su qualche voce dell''UPB precedente diviene INSUFFICIENTE!','N','%<incomeyear.idupb>% = &<incomeyear.idupb>&
or
&<incomeyear.idupb>& is null
or
[select count(*) from proceedspart P 
	where P.idinc =  %<incomeyear.idinc>%
	and (
	  isnull(
			(select isnull(totproceedspart,0)+isnull(proceedsvariation,0)
			 from upbtotal U where
			 U.idfin=P.idfin and
			 U.idupb=&<incomeyear.idupb>&
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0)
			from upbexpensetotal U2
			where U2.idfin =P.idfin 
 			and U2.idupb = &<incomeyear.idupb>&
			and nphase = %<sys_maxexpensephase>%
		  	)			
		      ,0
		)
	-
	ISNULL(
			(SELECT ISNULL(SUM(amount), 0) 
			FROM pettycashoperation PC
			where PC.idfin =P.idfin 
 			and PC.idupb = &<incomeyear.idupb>&
			AND PC.yrestore IS NULL
			AND PC.nrestore IS NULL)
			,0)
	  <0
	)
]{I}
=0
OR
[SELECT assured
FROM upb
WHERE idupb = &<incomeyear.idupb>&]{C} = ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA001','1','U','incomeyear','S','S','S','N','N',{ts '2007-12-06 09:17:24.517'},'SARA','L''importo del documento IVA %<incomeinvoice.idinvkind>% %<banktransactionview.npro>%/%<banktransactionview.ypro>% è minore dei movimenti di entrata che lo contabilizzano','S','(&<incomeyear.amount>& >= %<incomeyear.amount>%)
OR
(
	[SELECT COUNT(*) 
	FROM incomeinvoice
	WHERE idinc = %<incomeyear.idinc>%]{I} = 0
)
OR
(
	(%<incomeyear.amount>% - &<incomeyear.amount>&)
	<=
	isnull([SELECT ISNULL(residual,0) FROM invoiceavailable 
	WHERE idinvkind = [SELECT idinvkind FROM incomeinvoice WHERE idinc = %<incomeyear.idinc>%]{C}
	AND yinv = [SELECT yinv FROM incomeinvoice WHERE idinc = %<incomeyear.idinc>%]{I}
	AND ninv = [SELECT ninv FROM incomeinvoice WHERE idinc = %<incomeyear.idinc>%]{I}]{V},0)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS001','1','U','incomeyear','S','S','S','N','S',{ts '2007-08-25 11:45:46.187'},'NINO','La dotazione degli incassi è NEGATIVA!','N','%<incomeyear.idupb>% = &<incomeyear.idupb>&
or
&<incomeyear.idupb>& is null
or
[select count(*) from proceedspart P 
     join incomelink 
         on incomelink.idchild= P.idinc 
	where incomelink.idparent=  %<incomeyear.idinc>%
	and (
	  isnull(
			(select isnull(totproceedspart,0)+isnull(proceedsvariation,0)
			 from upbtotal U where
			 U.idfin=P.idfin and
			 U.idupb=&<incomeyear.idupb>&
			)
			,0
		)
	  <0
	)
]{I}
=0
OR
[SELECT assured
FROM upb
WHERE idupb = &<incomeyear.idupb>&]{C} = ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS002','1','U','incomeyear','S','S','S','N','S',{ts '2007-08-25 11:48:08.610'},'NINO','La dotazione degli incassi su qualche voce dell''UPB precedente diviene INSUFFICIENTE!','N','%<incomeyear.idupb>% = &<incomeyear.idupb>&
or
&<incomeyear.idupb>& is null
or
[select count(*) from proceedspart P  
      join incomelink on P.idinc=incomelink.idchild
	where incomelink.idparent = %<incomeyear.idinc>%
	and (
	  isnull(
			(select isnull(totproceedspart,0)+isnull(proceedsvariation,0)
			 from upbtotal U where
			 U.idfin=P.idfin and
			 U.idupb=&<incomeyear.idupb>&
			)
			,0
		)
	  -
	  isnull(
			(SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0)
			from upbexpensetotal U2
			where U2.idfin =P.idfin 
 			and U2.idupb = &<incomeyear.idupb>&
			and nphase = %<sys_maxexpensephase>%
		  	)			
		      ,0
		)
	  <0
	)
]{I}
=0
OR
[SELECT assured
FROM upb
WHERE idupb = &<incomeyear.idupb>&]{C} = ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS004','1','U','incomeyear','S','S','S','N','S',{ts '2007-08-24 16:20:38.420'},'NINO','Il movimento di entrata è inferiore rispetto alle assegnazioni incassi','N','isnull([(SELECT ISNULL(curramount, 0) 
from incometotal 
where idinc = %<incomeyear.idinc>%
 and ayear = %<incomeyear.ayear>%
)]{V}
,0)
-
isnull(
[(SELECT ISNULL(sum(amount), 0) 
from proceedspart 
where idinc = %<incomeyear.idinc>%)]{V}
,0)
 >= 0
or
%<incomeyear.amount>%>&<incomeyear.amount>&
OR
[select nphase from income where idinc= %<incomeyear.idinc>%]{I} <> %<sys_maxincomephase>%
OR
[SELECT assured
FROM upb
WHERE idupb = %<incomeyear.idupb>%
]{C} = ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM001','1','U','incomeyear','S','S','S','N','N',{ts '2007-08-25 11:50:58.797'},'NINO','La voce di bilancio è assente','S','%<sys_incomefinphase>%<>[select nphase from income where idinc= %<incomeyear.idinc>%]{I}
or 
%<incomeyear.idfin>% is not NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM001','2','U','incomeyear','S','S','S','N','N',{ts '2007-08-25 11:51:18.233'},'NINO','La voce UPB è assente','S','%<sys_incomefinphase>%<>
[select nphase from income where idinc= %<incomeyear.idinc>%]{I}
or %<incomeyear.idupb>% is not NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM003','1','U','incomeyear','S','S','S','N','N',{ts '2009-02-02 13:09:13.073'},'ASSISTENZA','L''importo attuale dei movimenti di entrata della fase %<incomephase.description>% è maggiore dell''importo attuale del movimento della fase precedente','N','[SELECT ISNULL(available, 0) 
from incometotal 
where idinc = 
[select parentidinc from income where 
idinc= %<incomeyear.idinc>%]{I}

and ayear = %<sys_esercizio>%]{V} 
 >= 0 
or 
[select parentidinc from income where 
idinc= %<incomeyear.idinc>%]{I} IS NULL')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM003','4','U','incomeyear','S','S','S','N','N',{ts '2007-10-19 12:35:22.047'},'NINO','L''importo attuale del movimento %<incomephase.description>% %<income.nmov>%/%<income.ymov>% è minore dell''importo attuale dei movimenti dipendenti','N','[SELECT ISNULL(available, 0) 
from incometotal 
where idinc = %<incomeyear.idinc>% 
and ayear =  %<incomeyear.ayear>% ]{V} >= 0 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM004','1','U','incomeyear','S','S','S','N','N',{ts '2010-02-18 09:33:56.187'},'SARA','L''importo attuale del movimento di entrata %<incomephase.description>% %<income.ymov>% %<income.nmov>% è NEGATIVO','N','[(SELECT MIN(ISNULL(curramount, 0)) 
from incometotal 
where idinc = %<incomeyear.idinc>%)]{V} 
>= 0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM007','1','U','incomeyear','S','S','S','N','N',{ts '2011-09-15 12:26:39.953'},'sara','Il movimento finanziario è incluso nella reversale di incasso %<incomelastview.npro>% / %<income.ymov>% già trasmessa e quindi  non può essere corretto','S','( ISNULL([SELECT count(*)
		from proceedstransmission 
		JOIN proceeds
			ON proceeds.kproceedstransmission = proceedstransmission.kproceedstransmission
        	join incomelast 	
			on proceeds.kpro= incomelast.kpro
        WHERE incomelast.idinc =%<incomeyear.idinc>%
		 and proceeds.ypro  =%<incomeyear.ayear>%]{I} 
   ,0)=0 )

OR
(%<incomeyear.amount>% = &<incomeyear.amount>& AND
%<incomeyear.idfin>% = &<incomeyear.idfin>& 
) 
or
[select nphase from income where idinc = %<incomeyear.idinc>%]{I} 
< %<sys_maxincomephase>%
OR
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM incomelast
JOIN proceeds  
	ON proceeds.kpro = incomelast.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc = %<incomeyear.idinc>% ]{C},''N'' )= ''S'')
AND
[(SELECT COUNT(*)  FROM incomevar  WHERE idinc = %<incomeyear.idinc>%
AND kproceedstransmission IS NULL AND autokind = 22)]{I} <> 0
AND
-- unicredit non permette le variazioni di dati contabili ma solo del Siope
(
ISNULL([SELECT ISNULL(treasurer.idbank,'''') 
FROM incomelast
JOIN proceeds  
	ON proceeds.kpro = incomelast.kpro
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE incomelast.idinc =  %<incomeyear.idinc>%]{C},'''' ) <> ''02008''
)
)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM010','1','U','incomeyear','S','S','S','N','N',{ts '2007-12-06 09:20:59.843'},'SARA','Il capitolo di imputazione non può essere modificato poiché è stata emessa una reversale di incasso ed esiste un criterio di raggruppamento degli incassi per capitolo di imputazione.','S','-- Non è associato alcun mandato al movimento di spesa
(
	[SELECT COUNT(*)
	FROM incomelast join 
       incomelink on incomelink.idchild=incomelast.idinc
	WHERE incomelink.idparent= %<incomeyear.idinc>% 
	AND incomelast.kpro IS NOT NULL
      ]{I} = 0
)
OR
-- Non esiste alcun raggruppamento per voce di bilancio nel mandato 
([SELECT proceeds_flag & 2 FROM config  WHERE ayear = %<sys_esercizio>%]{I} = 0)
OR
-- La voce di bilancio non è cambiata
(&<incomeyear.idfin>& = %<incomeyear.idfin>%)
OR
-- Esiste un raggruppamento per voce di bilancio ma è superiore rispetto alla voce che stiamo modificando
(
	([SELECT proceeds_flag & 2 FROM config  WHERE ayear = %<sys_esercizio>%]{C} <> 0)
	AND
	(
		   ISNULL([SELECT proceeds_finlevel FROM config  WHERE ayear = %<sys_esercizio>%]{I},
		      [select nlevel from fin where  idfin=%<incomeyear.idfin>%]{I})
               <
		[select nlevel from fin where 
			idfin=%<incomeyear.idfin>%]{I}
	)
	AND
	(
           [SELECT idparent from finlink where idchild= &<incomeyear.idfin>& and 
                           nlevel=    ISNULL([SELECT proceeds_finlevel FROM config  WHERE ayear = %<sys_esercizio>%]{I},
		      [select nlevel from fin where  idfin=%<incomeyear.idfin>%]{I})

           ]{I} =
           [SELECT idparent from finlink where idchild= %<incomeyear.idfin>% and 
                           nlevel= 	   ISNULL([SELECT proceeds_finlevel FROM config  WHERE ayear = %<sys_esercizio>%]{I},
		      [select nlevel from fin where  idfin=%<incomeyear.idfin>%]{I})

           ]{I}

	)
)
OR
-- Esiste il raggruppamento, la voce di bilancio ha livello inferiore o lo stesso del raggruppamento ma il movimento di spesa nel mandato è unico e il mandato non è stato trasmesso
(
 ([SELECT proceeds_flag & 2  FROM config  WHERE ayear = %<sys_esercizio>%]{C} <> 0 )
 AND
 (
   ISNULL([SELECT proceeds_finlevel FROM config  WHERE ayear = %<sys_esercizio>%]{I},
		      [select nlevel from fin where  idfin=%<incomeyear.idfin>%]{I})
                

 <=
 [select nlevel from fin where 
			idfin=%<incomeyear.idfin>%]{I}

 )
 AND
 [SELECT COUNT(*)
      from  incomelink 
      join incomelast on incomelast.idinc= incomelink .idchild
	JOIN proceeds  D1
           	ON incomelast.kpro=D1.kpro
      JOIN incomelast EL 
            ON EL.kpro= D1.kpro
      JOIN income e3 
            ON e3.idinc= EL.idinc
            AND e3.ymov= D1.ypro 
	WHERE  incomelink.idparent= %<incomeyear.idinc>% 
           AND not exists (select * from incomelink EL2 where
                                  EL2.idparent=  %<incomeyear.idinc>%  and
				          EL2.idchild = EL.idinc)
                         
 ]{I}=0

 AND

 [SELECT COUNT(*)
	FROM proceedstransmission t
	JOIN proceeds  d
		ON t.kproceedstransmission = d.kproceedstransmission
	JOIN incomelast s
   	     ON s.kpro= d.kpro
      JOIN income  e
		ON s.idinc= e.idinc          
  	      AND d.ypro = e.ymov
      JOIN incomelink EL
           ON EL.idchild= E.idinc
	WHERE EL.idparent = %<incomeyear.idinc>%]{I}=0
)






')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM016','1','U','incomeyear','S','S','S','N','N',{ts '2007-11-27 10:19:53.233'},'SARA','Le classificazioni associate al movimento di entrata n. %<income.nmov>%/%<income.ymov>% sono superiori rispetto all''importo dello stesso','N','--post
(
	[SELECT curramount FROM incometotal
	WHERE idinc = %<incomeyear.idinc>% 
	AND ayear = %<incomeyear.ayear>%]{V}
	>=
	[ISNULL(
		(SELECT TOP 1 SUM(I.amount)
		FROM incomesorted I
		JOIN sorting S
			ON I.idsor = S.idsor
		WHERE I.idinc = %<incomeyear.idinc>%
		AND I.ayear = %<incomeyear.ayear>%
		GROUP BY S.idsorkind,I.idinc
		ORDER BY SUM(I.amount) DESC)
	,0)]{V}
)
OR
(&<incomeyear.amount>& < %<incomeyear.amount>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM019','1','U','incomeyear','S','S','S','N','N',{ts '2007-08-25 12:17:20.577'},'NINO','La voce di bilancio annuale del movimento di entrata residuo %<income.nmov>%/%<income.ymov>% non può essere modificata in un esercizio differente da quello di creazione','N','--post
(
	[SELECT COUNT(*) 
	FROM incomeyear
	WHERE ayear < %<incomeyear.ayear>% 
	AND idinc = %<incomeyear.idinc>%]{I} = 0
)
OR
(ISNULL(%<incomeyear.idfin>%,0) = ISNULL(&<incomeyear.idfin>&,0))')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM019','2','U','incomeyear','S','S','S','N','N',{ts '2010-09-09 10:04:41.297'},'sa','La voce di UPB del movimento di entrata residuo  %<incomeview.phase>%  %<incomeview.nmov>% del %<incomeview.ymov>% non può essere modificata in un esercizio differente da quello di creazione','N','--post
(
	[SELECT COUNT(*) 
	FROM incomeyear
	WHERE ayear < %<incomeyear.ayear>%
	AND idinc = %<incomeyear.idinc>%]{I} = 0
)
OR
(ISNULL(%<incomeyear.idupb>%,'''') = ISNULL(&<incomeyear.idupb>&,''''))')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM020','1','U','incomeyear','S','S','S','N','N',{ts '2009-06-04 09:15:00.947'},'SA','Non può essere modificato l''importo del movimento di entrata dipendente dal movimento %<income.idinc>% in quanto la disponibilità negli anni successivi diventa negativa','N','(
		[SELECT COUNT(*)
			FROM incometotal
			WHERE idinc = [select parentidinc from income where idinc=%<incomeyear.idinc>%]{I}
			AND ayear > %<sys_esercizio>%]{I} = 0
)
OR
(
		[SELECT ISNULL(MIN(available),0)
			FROM incometotal
			WHERE idinc = [select parentidinc from income where idinc=%<incomeyear.idinc>%]{I}
			AND ayear > %<sys_esercizio>%]{V}
			/*+(&<incomeyear.amount>& - %<incomeyear.amount>%)*/
			>= 0
)
OR
(
	ISNULL(
		[SELECT MAX(ayear) FROM accountingyear WHERE ((flag&0x0F)>= 4)]{I}
		,%<sys_esercizio>%-1) < %<sys_esercizio>%
)
/*or (&<incomeyear.amount>& - %<incomeyear.amount>%)>=0*/
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM020','2','U','incomeyear','S','S','S','N','N',{ts '2009-06-04 09:15:27.683'},'SA','Non può essere modificato l''importo del movimento di entrata dipendente dal movimento %<income.idinc>% in quanto la disponibilità negli anni successivi diventa negativa','N','(
	[SELECT COUNT(*)
		FROM incometotal
		WHERE idinc = %<incomeyear.idinc>%
		AND ayear > %<sys_esercizio>%]{V} = 0
)
OR
(
	[SELECT ISNULL(MIN(available),0)
			FROM incometotal
			WHERE idinc = %<incomeyear.idinc>%
			AND ayear > %<sys_esercizio>%]{V}
			/*-  (&<incomeyear.amount>& - %<incomeyear.amount>%)*/
			>= 0
)
OR
(
	ISNULL(
		[SELECT MAX(ayear) FROM accountingyear WHERE ((flag&0x0F)>= 4)]{I}
	,%<sys_esercizio>%-1) < %<sys_esercizio>%
)
/* or (&<incomeyear.amount>& - %<incomeyear.amount>%)<=0 */
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM038','1','U','incomeyear','S','S','S','S','N',{ts '2007-09-01 14:47:20.937'},'NINO','Il totale dell''accertato è inferiore al totale dell''impegnato per l''UPB scelto','S','-- Caso in cui cambia l''importo
[SELECT assured FROM upb
WHERE idupb = %<incomeyear.idupb>%]{C} <> ''S''
OR
%<incomeyear.amount>% >= &<incomeyear.amount>&
OR
ISNULL(%<incomeyear.idupb>%,'''') <> ISNULL(&<incomeyear.idupb>&,'''')
OR
[select nphase from income where idinc=%<incomeyear.idinc>%]{I} <> %<sys_assessmentphase>%
OR
isnull([SELECT SUM(amount) FROM incomeyear
join income on income.idinc=incomeyear.idinc
join incometotal on incometotal.idinc= incomeyear.idinc 
    and incometotal.ayear=incomeyear.ayear
WHERE idupb = %<incomeyear.idupb>%
AND income.nphase = %<sys_assessmentphase>%
AND (incometotal.flag & 1)=0
]{V},0)
+ %<incomeyear.amount>% - &<incomeyear.amount>&
+
ISNULL(
	[SELECT SUM(incomevar.amount)
	FROM incomevar
	JOIN incomeyear
	           ON incomevar.idinc = incomeyear.idinc
			AND incomeyear.ayear= %<incomeyear.ayear>%
      JOIN income ON incomevar.idinc= income.idinc
	WHERE incomevar.yvar <= %<sys_esercizio>%
	AND incomeyear.idupb = %<incomeyear.idupb>%
	AND income.nphase = %<sys_assessmentphase>%
]{V}
,0)
++
[SELECT ISNULL(previousassessment,0) - ISNULL(previousappropriation,0)
FROM upb
WHERE idupb = %<incomeyear.idupb>%]{V}
+
ISNULL(
	[SELECT SUM(creditvariation)
	FROM upbtotal
	WHERE idupb = %<incomeyear.idupb>%]{V}
,0)
>=
ISNULL(
	[SELECT SUM(amount)
	FROM expenseyear
      join expense on expenseyear.idexp=expense.idexp
      JOIN expensetotal 
                 ON expensetotal.idexp=expenseyear.idexp AND
                    expensetotal.ayear=expenseyear.ayear
	WHERE idupb = %<incomeyear.idupb>%
	AND expense.nphase = %<sys_appropriationphase>%
	AND (expensetotal.flag & 1 = 0)
]{V}
,0)
+
ISNULL(
	[SELECT SUM(expensevar.amount) FROM expensevar
	JOIN expenseyear
		ON expensevar.idexp = expenseyear.idexp
		AND expenseyear.ayear= %<incomeyear.ayear>%
      JOIN expense ON expense.idexp=expensevar.idexp
	WHERE expensevar.yvar <= %<sys_esercizio>%
	AND expenseyear.idupb = %<incomeyear.idupb>%
	AND expense.nphase = %<sys_appropriationphase>%	
]{V}
,0)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM038','2','U','incomeyear','S','S','S','S','N',{ts '2007-09-01 14:47:29.407'},'NINO','Il totale dell''accertato è inferiore al totale dell''impegnato per l''UPB scelto','S','-- Caso in cui cambia l''UPB
[SELECT assured FROM upb
WHERE idupb = &<incomeyear.idupb>&]{C} <> ''S''
OR
ISNULL(%<incomeyear.idupb>%,'''') = ISNULL(&<incomeyear.idupb>&,'''')
OR
[select nphase from income where idinc=%<incomeyear.idinc>%]{I} <> %<sys_assessmentphase>%
OR
ISNULL([SELECT SUM(amount) FROM incomeyear
  join incometotal ON
         incometotal.idinc=incomeyear.idinc AND
	   incometotal.ayear=incomeyear.ayear
   join income ON 
         income.idinc= incomeyear.idinc
WHERE idupb = &<incomeyear.idupb>&
AND income.nphase = %<sys_assessmentphase>%
AND (incometotal.flag & 1)=0
]{V},0)
- &<incomeyear.amount>&
+
ISNULL(
	[SELECT SUM(incomevar.amount)
	FROM incomevar
	JOIN incomeyear
	           ON incomevar.idinc = incomeyear.idinc
			AND incomeyear.ayear= %<incomeyear.ayear>%
      JOIN income ON incomevar.idinc= income.idinc
	WHERE incomevar.yvar <= %<sys_esercizio>%
	AND incomeyear.idupb = %<incomeyear.idupb>%
	AND income.nphase = %<sys_assessmentphase>%
]{V}
,0)
+
[SELECT ISNULL(previousassessment,0) - ISNULL(previousappropriation,0)
FROM upb
WHERE idupb = &<incomeyear.idupb>&]{V}
+
ISNULL(
	[SELECT SUM(creditvariation)
	FROM upbtotal
	WHERE idupb = &<incomeyear.idupb>&]{V}
,0)
>=
ISNULL(
	[SELECT SUM(amount)
	FROM expenseyear
      join expense on expenseyear.idexp=expense.idexp
      JOIN expensetotal 
                 ON expensetotal.idexp=expenseyear.idexp AND
                    expensetotal.ayear=expenseyear.ayear
	WHERE idupb = %<incomeyear.idupb>%
	AND expense.nphase = %<sys_appropriationphase>%
	AND (expensetotal.flag & 1 = 0)
]{V}
,0)
+
ISNULL(
	[SELECT SUM(expensevar.amount) FROM expensevar
	JOIN expenseyear
		ON expensevar.idexp = expenseyear.idexp
		AND expenseyear.ayear= %<incomeyear.ayear>%
      JOIN expense ON expense.idexp=expensevar.idexp
	WHERE expensevar.yvar <= %<sys_esercizio>%
	AND expenseyear.idupb = %<incomeyear.idupb>%
	AND expense.nphase = %<sys_appropriationphase>%	
]{V}
,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM039','1','U','incomeyear','S','S','S','N','N',{ts '2007-10-13 19:50:45.467'},'NINO','Il responsabile del movimento:%<incomeview.manager>%, non è associato all''UPB : %<incomeview.upb>%.','N','ISNULL(%<incomeyear.idupb>%,'''') = ISNULL(&<incomeyear.idupb>&,'''')
OR
(ISNULL([SELECT idman
FROM upb 
WHERE idupb = %<incomeyear.idupb>%]{I},0)
= 0)
OR
(ISNULL([SELECT idman
FROM income 
WHERE idinc = %<incomeyear.idinc>%]{I},0)) = 
(ISNULL([SELECT idman
FROM upb 
WHERE idupb = %<incomeyear.idupb>%]{I},0))
OR
ISNULL([SELECT idman
FROM income 
WHERE idinc = %<incomeyear.idinc>%]{I},0)=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM044','1','U','incomeyear','S','S','S','N','N',{ts '2007-08-25 12:37:26.467'},'NINO','Il movimento di entrata non può essere salvato con una voce di bilancio riferita ad esercizi differenti dall''attuale','S','[select ayear from fin where idfin=%<incomeyear.idfin>%]{I}= %<sys_esercizio>%
OR
%<incomeyear.idfin>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM056','1','U','incomeyear','S','N','S','S','N',{ts '2007-08-25 12:49:13.890'},'NINO','L''importo dell''assegnazione crediti deve essere uguale a quello del movimento di entrata','N','ISNULL(
	[SELECT SUM(amount) FROM creditpart
	WHERE idinc = %<incomeyear.idinc>%]{V}
,0) = 
ISNULL(
	[SELECT curramount
	FROM incometotal
	WHERE idinc = %<incomeyear.idinc>%
	AND ayear = %<incomeyear.ayear>%]{V}
,0)
OR
[select nphase from income where idinc= %<incomeyear.idinc>%]{I}
 <> %<sys_incomefinphase>%
OR
ISNULL(
	[SELECT assured FROM upb
	WHERE idupb = %<incomeyear.idupb>%]{C}
,''N'') = ''S''
OR 
[select flag&1 from incometotal where 
  idinc= %<incomeyear.idinc>% and
  ayear= %<incomeyear.ayear>% 
]{I}<>0

OR
  &<incomeyear.amount>& = %<incomeyear.amount>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM056','2','U','incomeyear','S','S','N','N','S',{ts '2007-09-01 14:18:11.267'},'NINO','L''importo dell''assegnazione incassi deve essere uguale a quello del movimento di entrata','N','ISNULL(
	[SELECT SUM(amount) FROM proceedspart
	WHERE idinc = %<incomeyear.idinc>%]{V}
,0) = 
ISNULL(
	[SELECT curramount
	FROM incometotal
	WHERE idinc = %<incomeyear.idinc>%
	AND ayear = %<incomeyear.ayear>%]{V}
,0)
OR
[select nphase from income where idinc= %<incomeyear.idinc>%]{I} <> %<sys_maxincomephase>%
OR
ISNULL(
	[SELECT assured FROM upb
	WHERE idupb = %<incomeyear.idupb>%]{C}
,''N'') = ''S''
OR
[SELECT ymov from income 
  where idinc= %<incomeyear.idinc>%]{I} <> %<sys_esercizio>%
OR
&<incomeyear.amount>& = %<incomeyear.amount>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM057','1','U','incomeyear','S','S','S','N','N',{ts '2012-07-26 15:10:44.060'},'sa','Il movimento di entrata %<income.ymov>% / %<income.nmov>% risulta già esitato','S','(
%<incomeyear.amount>% = &<incomeyear.amount>&
AND 
%<incomeyear.idfin>% = &<incomeyear.idfin>&
)
OR
(ISNULL(
	[SELECT SUM(amount) FROM banktransaction 
	 WHERE idinc= %<incomeyear.idinc>%]{V}
	,0) = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM076','1','U','incomeyear','S','S','S','N','N',{ts '2008-11-26 11:31:02.000'},'SA','Errore nell''applicazione, dati incoerenti nella gerarchia dei movimenti.(Entrata/Bilancio)','N','(
ISNULL (%<incomeyear.idfin>%,0)= 0
)

OR

ISNULL([select parentidinc from income where idinc=
	%<incomeyear.idinc>%]{I},  0)=0

OR

(
ISNULL(
	[select idfin from incomeyear  EY
	join income  E on E.parentidinc=EY.idinc
	where E.idinc=%<incomeyear.idinc>%
		and EY.ayear=%<incomeyear.ayear>%]{I},0)
= 0
)

OR

(
ISNULL (%<incomeyear.idfin>%,0)
=
ISNULL(
	[select idfin from incomeyear  EY
	join income E on E.parentidinc=EY.idinc
	where E.idinc=%<incomeyear.idinc>%
		and EY.ayear=%<incomeyear.ayear>%]{I},0)

)
OR

ISNULL (%<incomeyear.idfin>%,0)=ISNULL(&<incomeyear.idfin>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM076','2','U','incomeyear','S','S','S','N','N',{ts '2008-11-26 11:31:08.407'},'SA','Errore nell''applicazione, dati incoerenti nella gerarchia dei movimenti.(Entrata/Upb)','N','(
ISNULL (%<incomeyear.idupb>%,''0'')= ''0''
)

OR

ISNULL([select parentidinc from income where idinc=
	%<incomeyear.idinc>%]{I},  0)=0

OR

(
ISNULL(
	[select idupb from incomeyear  EY
	join income  E on E.parentidinc=EY.idinc
	where E.idinc=%<incomeyear.idinc>%
		and EY.ayear=%<incomeyear.ayear>%]{C},''0'')
= ''0''
)

OR

(
ISNULL (%<incomeyear.idupb>%,''0'')
=
ISNULL(
	[select idupb from incomeyear  EY
	join income E on E.parentidinc=EY.idinc
	where E.idinc=%<incomeyear.idinc>%
		and EY.ayear=%<incomeyear.ayear>%]{C},''0'')

)
OR 
ISNULL(%<incomeyear.idupb>%,''0'')=ISNULL(&<incomeyear.idupb>&,''0'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM079','1','U','incomeyear','S','S','S','N','N',{ts '2009-03-25 14:59:56.547'},'SARA','Si sta modificando l''UPB di un movimento finanziario inserito in una Reversale di Incasso.Questo comporterà la modifica della stampa, qualora essa preveda la visualizzazione dell''UPB.','N',' (%<incomeyear.idupb>% = &<incomeyear.idupb>&) 
OR
([SELECT count(*) FROM incomelink
	JOIN incomelast 
		on incomelink.idchild =  incomelast.idinc
	JOIN proceeds 
		on proceeds.kpro= incomelast.kpro		
        WHERE incomelink.idparent =%<incomeyear.idinc>% AND
   		proceeds.ypro=%<incomeyear.ayear>% AND 
		proceeds.printdate IS NOT NULL]{I}    = 0 )')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM079','2','U','incomeyear','S','S','S','N','N',{ts '2009-03-25 14:58:33.750'},'SARA','Si sta modificando l''UPB di un movimento finanziario che contabilizza i dettagli di un Contratto Attivo. Al fine di evitare incoerenze, è necessario adegare opportunamente i dettagli del Contratto Attivo.','N',' (%<incomeyear.idupb>% = &<incomeyear.idupb>&) 
OR
([SELECT count(*) FROM incomelink
	JOIN incomeestimate
		on incomelink.idchild =  incomeestimate.idinc
	JOIN estimatedetail
		ON estimatedetail.idestimkind = incomeestimate.idestimkind
		AND estimatedetail.yestim = incomeestimate.yestim
		AND estimatedetail.nestim = incomeestimate.nestim
        WHERE incomelink.idparent =%<incomeyear.idinc>% 
		AND estimatedetail.idupb = &<incomeyear.idupb>&
]{I}    = 0 )

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON003','1','U','incomeyear','S','N','N','N','N',{ts '2007-08-25 12:41:19.030'},'NINO','La previsione di cassa della voce di entrata %<incomeview.codefin>% e UPB %<incomeview.codeupb>% è INSUFFICIENTE!','N','--post
  (	ISNULL(
		[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation,0) 
			FROM upbtotal 
		WHERE idfin = %<incomeyear.idfin>%	AND idupb= %<incomeyear.idupb>%]{V}
		,0)
	- 
-- inserito ISNULL( di SELECT......
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM upbincometotal
		WHERE idfin = %<incomeyear.idfin>%
		AND idupb= %<incomeyear.idupb>%
		AND nphase = %<sys_maxincomephase>%]{V}
	,0)
     ) >= 0
OR
(ISNULL(%<incomeyear.idfin>%,'''') <> ISNULL([&<incomeyear.idfin>&]{C},''''))
OR
(ISNULL(%<incomeyear.idupb>%,'''') <> ISNULL([&<incomeyear.idupb>&]{C},''''))
OR 
(%<sys_maxincomephase>% <> [select nphase from income where idinc= %<incomeyear.idinc>%]{I})
or
%<incomeyear.amount>%<&<incomeyear.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON003','2','U','incomeyear','S','N','N','N','N',{ts '2007-08-25 12:47:55.233'},'NINO','La previsione della voce di entrata %<fin.codefin>% e UPB %<upb.codeupb>% è INSUFFICIENTE!','S','(  ISNULL([SELECT ISNULL(currentsecondaryprev,0)+
		ISNULL(secondaryvariation,0) 
		FROM upbtotal 
		WHERE idfin = %<incomeyear.idfin>%
			AND idupb = %<incomeyear.idupb>%
		]{V}
		,0)
	- 
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM upbincometotal
		WHERE idfin = %<incomeyear.idfin>%
		AND idupb = %<incomeyear.idupb>%
		AND nphase = %<sys_maxincomephase>%]{V}
	,0)
	-
	ISNULL(
		[SELECT 
		SUM(ISNULL(curramount,0))
		  FROM incometotal i1 
              JOIN incomeyear i2
		            ON i1.idinc = i2.idinc AND i1.ayear = i2.ayear
   		  join income i3 on i2.idinc=i3.idinc
              join incomelink IL on 
                  IL.idchild= i3.idinc
		WHERE i2.ayear = %<sys_esercizio>% 
		AND IL.idparent = %<incomeyear.idinc>% 
		AND i3.nphase = %<sys_maxincomephase>%]{V}
		,0)
	) >= 0          
    
OR
(ISNULL(%<incomeyear.idfin>%,'''') = ISNULL([&<incomeyear.idfin>&]{C},'''') 
 AND
 ISNULL(%<incomeyear.idupb>%,'''') = ISNULL([&<incomeyear.idupb>&]{C},'''')
)
OR 
(%<sys_maxincomephase>% <> [select nphase from income where idinc= %<incomeyear.idinc>%]{I})

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON007','1','U','incomeyear','S','N','N','N','N',{ts '2013-05-21 11:03:55.387'},'sa','La previsione di cassa della voce di entrata di Finanziamento: %<incomeview.underwriting>% , UPB: %<incomeview.upb>% , Bilancio: %<incomeview.codefin>% è INSUFFICIENTE!','N','--post
(isnull([select idunderwriting from income where idinc = %<incomeyear.idinc>%]{I},0)=0)  
OR
  (	ISNULL(
		[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation,0) 
			FROM upbunderwritingtotal 
		WHERE idfin = %<incomeyear.idfin>%	
		AND idupb= %<incomeyear.idupb>%
		and idunderwriting= [select idunderwriting 
				from income 
				where idinc = %<incomeyear.idinc>%]{I}	
]{V}
		,0)
	- 
-- inserito ISNULL( di SELECT......
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM underwritingincometotal
		WHERE idfin = %<incomeyear.idfin>%
		AND idupb= %<incomeyear.idupb>%
		AND nphase = %<sys_maxincomephase>%
		and idunderwriting= [select idunderwriting 
			from income 
			where idinc = %<incomeyear.idinc>%]{I}	
]{V}
	,0)
     ) >= 0
OR
(ISNULL(%<incomeyear.idfin>%,'''') <> ISNULL([&<incomeyear.idfin>&]{C},''''))
OR
(ISNULL(%<incomeyear.idupb>%,'''') <> ISNULL([&<incomeyear.idupb>&]{C},''''))
OR 
(%<sys_maxincomephase>% <> [select nphase from income where idinc= %<incomeyear.idinc>%]{I})
or
%<incomeyear.amount>%<&<incomeyear.amount>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON007','2','U','incomeyear','S','N','N','N','N',{ts '2013-05-21 11:04:01.920'},'sa','La previsione di cassa della voce di entrata di Finanziamento: %<incomeview.underwriting>% , UPB: %<incomeview.upb>% , Bilancio: %<incomeview.codefin>% è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<incomeyear.idinc>%]{I},0)=0)  
OR
(  ISNULL([SELECT ISNULL(currentsecondaryprev,0)+
		ISNULL(secondaryvariation,0) 
		FROM upbunderwritingtotal 
		WHERE idfin = %<incomeyear.idfin>%
			AND idupb = %<incomeyear.idupb>%
			and idunderwriting= [select idunderwriting 
					from income 
					where idinc = %<incomeyear.idinc>%]{I}	
		]{V}
		,0)
	- 
	ISNULL(
		[SELECT ISNULL(totalcompetency,0) + ISNULL(totalarrears,0)
		FROM underwritingincometotal
		WHERE idfin = %<incomeyear.idfin>%
		AND idupb = %<incomeyear.idupb>%
		and idunderwriting= [select idunderwriting 
				from income 
				where idinc = %<incomeyear.idinc>%]{I}	
		AND nphase = %<sys_maxincomephase>%]{V}
	,0)
	-
	ISNULL(
		[SELECT 
		SUM(ISNULL(curramount,0))
		FROM incometotal i1 
	            JOIN incomeyear i2
			ON i1.idinc = i2.idinc AND i1.ayear = i2.ayear
	   	 join income i3 
			on i2.idinc=i3.idinc
	              join incomelink IL on 
                  IL.idchild= i3.idinc
		WHERE i2.ayear = %<sys_esercizio>% 
		AND IL.idparent = %<incomeyear.idinc>% 
		AND i3.nphase = %<sys_maxincomephase>%]{V}
		,0)
	) >= 0          
    
OR
(ISNULL(%<incomeyear.idfin>%,'''') = ISNULL([&<incomeyear.idfin>&]{C},'''') 
 AND
 ISNULL(%<incomeyear.idupb>%,'''') = ISNULL([&<incomeyear.idupb>&]{C},'''')
)
OR 
(%<sys_maxincomephase>% <> [select nphase from income where idinc= %<incomeyear.idinc>%]{I})

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','1','U','incomeyear','S','S','S','N','N',{ts '2010-11-05 16:12:20.047'},'sa','L''utente non è abilitato alla modifica di fasi finanziarie precedenti alla fase dell'' Accertamento giuridico.','N','%<income.nphase>% >= %<sys_assessmentphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''pre_accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

OR
 (%<incomeyear.amount>% = &<incomeyear.amount>&)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','2','U','incomeyear','S','S','S','N','N',{ts '2010-11-05 16:12:25.827'},'sa','L''utente non è abilitato alla modifica di fasi finanziarie equivalenti all''Accertamento giuridico.','N','%<income.nphase>% <> %<sys_assessmentphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

OR

 (%<incomeyear.amount>% = &<incomeyear.amount>&)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR009','3','U','incomeyear','S','S','S','N','N',{ts '2010-11-05 16:12:34.297'},'sa','L''utente non è abilitato alla modifica di fasi finanziarie successive alla fase dell'' Accertamento giuridico.','N','%<income.nphase>%  <= %<sys_assessmentphase>%

OR

[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename =''post_accertamenti''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR

%<sys_idflowchart>% IS NULL

OR

 (%<incomeyear.amount>% = &<incomeyear.amount>&)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR012','1','U','incomeyear','S','S','S','N','N',{ts '2013-01-07 16:52:45.580'},'sa','L''utente non è abilitato a operare su Voci di Bilancio a Movimentazione protetta','S','[SELECT flag
FROM fin
WHERE fin.idfin = %<incomeyear.idfin>%]{I} & 8  = 0 
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''movimprotetta''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','D','inventory','S','S','S','N','N',{ts '2009-01-20 12:26:26.697'},'SA','L''inventario %<inventory.description>% non può essere cancellato','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','D','inventory','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI032','1','D','inventory','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','inventory','S','S','S','N','N',{ts '2007-09-13 12:00:11.937'},'NINO','Cancellazione Impossibile! Esistono carichi di cespiti inventariabili collegati all''inventario %<description>%','S','[(SELECT count(*) 
from assetacquire 
where idinventory = %<inventory.idinventory>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','inventory','S','S','S','N','N',{ts '2007-09-13 12:00:24.657'},'NINO','Cancellazione Impossibile! Esistono buoni di carico collegati all''inventario %<description>%','S','[(SELECT count(*) 
from assetloadkind 
where idinventory = %<inventory.idinventory>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','inventory','S','S','S','N','N',{ts '2007-09-13 12:00:31.797'},'NINO','Cancellazione Impossibile! Esistono buoni di scarico collegati all''inventario %<description>%','S','[(SELECT count(*) 
from assetunloadkind 
where idinventory = %<inventory.idinventory>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','I','inventory','S','S','S','N','N',{ts '2009-01-20 12:26:30.307'},'SA','L''inventario %<inventory.description>% non può essere inserito','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','I','inventory','S','S','S','N','N',{ts '2007-05-25 13:05:31.327'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','inventory','S','S','S','N','N',{ts '2007-11-09 14:56:27.233'},'SA','Inventario %<codeinventory>% già esistente','S','[(SELECT count(*) 
from inventory 
where codeinventory = %<inventory.codeinventory>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','inventory','S','S','S','N','N',{ts '2007-11-08 16:23:04.527'},'NINO','Descrizione dell''inventario già esistente','S','[(SELECT count(*) 
from inventory 
where description = %<inventory.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI001','1','U','inventory','S','S','S','N','N',{ts '2011-07-27 11:35:33.657'},'sa','Esistono dei cespiti inventariati posseduti il cui numero di inventario non è compreso nell''intervallo 0 - %<startnumber>%','S','[(SELECT count(*) 
from assetacquire 
join asset 
on asset.nassetacquire = assetacquire.nassetacquire 
and asset.ninventory > %<inventory.startnumber>%
where assetacquire.flag & 2 <> 0
and assetacquire.idinventory = %<inventory.idinventory>%
and asset.idpiece = 1)
]{I} = 0




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI002','1','U','inventory','S','S','S','N','N',{ts '2007-11-09 15:31:47.360'},'NINO','Esistono dei cespiti inventariati di nuova acquisizione il cui numero di inventario è compreso nell''intervallo 0 - %<startnumber>% riservato ai cespiti posseduti','S','[(SELECT count(*) 
from assetacquire 
join asset 
on asset.nassetacquire = assetacquire.nassetacquire 
and asset.ninventory <= %<inventory.startnumber>%
where assetacquire.flag & 2 = 0
and assetacquire.idinventory = %<inventory.idinventory>%)
]{I} 
= 0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','U','inventory','S','S','S','N','N',{ts '2009-01-20 12:26:33.680'},'SA','L''inventario %<inventory.description>% non può essere modificato','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','U','inventory','S','S','S','N','N',{ts '2007-05-25 13:05:43.627'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','inventory','S','S','S','N','N',{ts '2007-11-08 16:25:06.037'},'NINO','Descrizione dell''inventario già esistente','S','[(SELECT count(*) 
from inventory 
where idinventory <> %<inventory.idinventory>% 
and description = %<inventory.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','D','inventoryagency','S','S','S','N','N',{ts '2009-01-20 12:26:38.197'},'SA','L''ente inventariale %<inventoryagency.description>% non può essere cancellato','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','D','inventoryagency','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI032','1','D','inventoryagency','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','inventoryagency','S','S','S','N','N',{ts '2007-09-13 12:00:50.327'},'NINO','Cancellazione Impossibile! Esistono inventari collegati all''ente inventariale %<description>%','S','[(SELECT count(*) 
from inventory 
where idinventoryagency = %<inventoryagency.idinventoryagency>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','I','inventoryagency','S','S','S','N','N',{ts '2009-01-20 12:26:41.133'},'SA','L''ente inventariale %<inventoryagency.description>% non può essere inserito','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','I','inventoryagency','S','S','S','N','N',{ts '2007-05-25 13:05:31.327'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','inventoryagency','S','S','S','N','N',{ts '2007-11-12 11:07:18.267'},'SA','Ente inventariale %<codeinventoryagency>% già esistente','S','[(SELECT count(*) 
from inventoryagency 
where idinventoryagency = %<inventoryagency.idinventoryagency>%)]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','inventoryagency','S','S','S','N','N',{ts '2007-11-08 16:25:59.527'},'NINO','Descrizione dell''ente inventariale già esistente','S','[(SELECT count(*) 
from inventoryagency 
where description = %<inventoryagency.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','U','inventoryagency','S','S','S','N','N',{ts '2009-01-20 12:26:44.680'},'SA','L''ente inventariale %<inventoryagency.description>% non può essere modificato','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','U','inventoryagency','S','S','S','N','N',{ts '2007-05-25 13:05:43.627'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','inventoryagency','S','S','S','N','N',{ts '2007-11-08 16:26:18.723'},'NINO','Descrizione dell''ente inventariale già esistente','S','[(SELECT count(*) 
from inventoryagency 
where idinventoryagency <> %<inventoryagency.idinventoryagency>% 
and description = %<inventoryagency.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','D','inventoryamortization','S','S','S','N','N',{ts '2009-01-20 12:26:47.900'},'SA','Il tipo di rivalutazione/svalutazione %<inventoryamortization.description>% non può essere cancellato','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','D','inventoryamortization','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI032','1','D','inventoryamortization','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','inventoryamortization','S','S','S','N','N',{ts '2007-09-13 12:00:57.093'},'NINO','Il tipo di rivalutazione %<description>% non può essere cancellato in quanto esistono rivalutazioni di beni inventariali che lo referenziano.','S','[(SELECT count(*) 
from assetamortization 
where idinventoryamortization = %<inventoryamortization.idinventoryamortization>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','I','inventoryamortization','S','S','S','N','N',{ts '2009-01-20 12:26:50.617'},'SA','Il tipo di rivalutazione/svalutazione %<inventoryamortization.description>% non può essere inserito','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','I','inventoryamortization','S','S','S','N','N',{ts '2007-05-25 13:05:31.327'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','inventoryamortization','S','S','S','N','N',{ts '2007-11-12 11:12:50.327'},'SA','Tipo di ammortamento %<codeinventoryamortization>% già esistente','S','[(SELECT count(*) 
from inventoryamortization 
where idinventoryamortization = %<inventoryamortization.idinventoryamortization>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','inventoryamortization','S','S','S','N','N',{ts '2007-11-08 16:26:35.077'},'NINO','Descrizione del tipo di ammortamento già esistente','S','[(SELECT count(*) 
from inventoryamortization 
where description = %<inventoryamortization.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','U','inventoryamortization','S','S','S','S','S',{ts '2007-04-02 14:08:52.437'},'''NINO''','Il tipo di rivalutazione/svalutazione %<inventoryamortization.description>% non può essere modificato','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','U','inventoryamortization','S','S','S','N','N',{ts '2007-05-25 13:05:43.627'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','inventoryamortization','S','S','S','N','N',{ts '2007-11-08 16:26:43.337'},'NINO','Descrizione del tipo di ammortamento già esistente','S','[(SELECT count(*) 
from inventoryamortization 
where idinventoryamortization <> %<inventoryamortization.idinventoryamortization>% 
and description = %<inventoryamortization.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','D','inventorykind','S','S','S','N','N',{ts '2009-01-20 12:26:54.010'},'SA','Il tipo di inventario %<inventorykind.description>% non può essere cancellato','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','D','inventorykind','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI032','1','D','inventorykind','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','inventorykind','S','S','S','N','N',{ts '2007-09-13 12:01:05.407'},'NINO','Il tipo di inventario %<description>% non può essere cancellato in quanto esistono inventari che lo referenziano.','S','[(SELECT count(*) 
from inventory 
where idinventorykind = %<inventorykind.idinventorykind>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','I','inventorykind','S','S','S','N','N',{ts '2009-01-20 12:26:57.290'},'SA','Il tipo di inventario %<inventorykind.description>% non può essere inserito','S','1 = 2')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','I','inventorykind','S','S','S','N','N',{ts '2007-05-25 13:05:31.327'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','inventorykind','S','S','S','N','N',{ts '2007-11-12 11:13:59.063'},'SA','Tipo di inventario %<codeinventorykind>% già esistente','S','[(SELECT count(*) 
from inventorykind 
where idinventorykind = %<inventorykind.idinventorykind>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','inventorykind','S','S','S','N','N',{ts '2007-11-08 16:28:24.167'},'NINO','Descrizione del tipo di inventario già esistente','S','[(SELECT count(*) 
from inventorykind 
where description = %<inventorykind.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','U','inventorykind','S','S','S','N','N',{ts '2009-01-20 12:27:01.260'},'SA','Il tipo di inventario %<inventorykind.description>% non può essere modificato','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','U','inventorykind','S','S','S','N','N',{ts '2007-05-25 13:05:43.627'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','inventorykind','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del tipo di inventario già esistente','S','[(SELECT count(*) 
from inventorykind 
where idinventorykind <> %<inventorykind.idinventorykind>% 
and description = %<inventorykind.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','D','inventorysortinglevel','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI032','1','D','inventorysortinglevel','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','inventorysortinglevel','S','S','S','N','N',{ts '2008-02-22 12:02:36.633'},'SARA','Cancellazione Impossibile! Esistono classificazioni inventariali collegate al livello %<description>%','S','[execute count_table_field ''inventorytree'',''nlevel'',
%<inventorysortinglevel.nlevel>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','inventorysortinglevel','S','S','S','N','N',{ts '2007-09-13 12:01:19.953'},'NINO','Cancellazione Impossibile! Esistono livelli della classificazione inventariale dipendenti dal livello %<description>%','S','[(SELECT count(*) 
from inventorysortinglevel 
where nlevel > %<inventorysortinglevel.nlevel>%)]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','I','inventorysortinglevel','S','S','S','N','N',{ts '2007-05-25 13:05:31.327'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','inventorysortinglevel','S','S','S','N','N',{ts '2007-11-08 16:30:46.650'},'NINO','Descrizione del livello della classificazione inventariale già esistente','S','[(SELECT count(*) 
from inventorysortinglevel 
where description = %<inventorysortinglevel.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','I','inventorysortinglevel','S','S','S','N','N',{ts '2007-11-08 17:24:51.467'},'NINO','Il livello della classificazione inventariale padre di %<description>% è già operativo quindi %<description>% non può essere non operativo','S','((%<inventorysortinglevel.flag>% & 2) <> 0)
or 
[SELECT count(*) 
from inventorysortinglevel 
where nlevel < %<inventorysortinglevel.nlevel>% 
and ((flag & 2) <> 0 )]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','U','inventorysortinglevel','S','S','S','N','N',{ts '2007-05-25 13:05:43.627'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','inventorysortinglevel','S','S','S','N','N',{ts '2007-11-08 16:30:55.960'},'NINO','Descrizione del livello della classificazione inventariale già esistente','S','[(SELECT count(*) 
from inventorysortinglevel 
where nlevel <> %<inventorysortinglevel.nlevel>% 
and description = %<inventorysortinglevel.description>%)]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','U','inventorysortinglevel','S','S','S','N','N',{ts '2007-11-08 17:27:11.920'},'NINO','Il livello della classificazione inventariale padre di %<description>% è già operativo quindi %<description>% non può essere non operativo','S','((%<inventorysortinglevel.flag>% & 2) <> 0)
or 
[SELECT count(*) 
from inventorysortinglevel 
where nlevel < %<inventorysortinglevel.nlevel>% 
and ((flag & 2) <> 0)
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','U','inventorysortinglevel','S','S','S','N','N',{ts '2007-11-08 17:26:41.247'},'NINO','Esistono classificazioni inventariali collegate al livello della classificazione %<description>% per l''esercizio attuale quindi gli attributri dei livelli della classificazione inventariale non possono essere modificati','S','[(SELECT count(*) 
from inventorytree 
where nlevel = %<inventorysortinglevel.nlevel>%)]{I} = 0 
or 
[(SELECT count(*) 
from inventorysortinglevel 
where nlevel = %<inventorysortinglevel.nlevel>% 
and flag = %<inventorysortinglevel.flag>% 
and codelen = %<inventorysortinglevel.codelen>%)]{I} = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','D','inventorytree','S','S','S','N','N',{ts '2009-01-20 12:27:05.743'},'SA','Voce di classificazione inventariale non cancellabile','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','D','inventorytree','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI032','1','D','inventorytree','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','inventorytree','S','S','S','N','N',{ts '2008-02-22 13:56:15.500'},'SARA','Cancellazione Impossibile! Esistono carichi di cespiti inventariabili collegati alla voce della classificazione inventariale %<codeinv>%','S','[execute count_table_field ''assetacquire'',''idinv'',
%<inventorytree.idinv>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','inventorytree','S','S','S','N','N',{ts '2008-02-22 13:57:10.047'},'SARA','Cancellazione Impossibile! Esistono variazioni patrimoniali collegate alla voce della classificazione inventariale %<codeinv>%','S','[execute count_table_field ''assetvardetail'',''idinv'',
%<inventorytree.idinv>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','inventorytree','S','S','S','N','N',{ts '2007-09-13 12:02:09.467'},'NINO','Cancellazione Impossibile! Esistono voci della classificazione inventariale dipendenti dalla voce %<codeinv>%','S','[(SELECT count(*) 
from inventorytree 
where paridinv = %<inventorytree.idinv>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','inventorytree','S','S','S','N','N',{ts '2008-02-22 13:58:11.457'},'SARA','Cancellazione Impossibile! Esistono buoni d''ordine di cespiti inventariabili collegati alla voce della classificazione inventariale %<codeinv>%','S','[execute count_table_field ''mandatedetail'',''idinv'',
%<inventorytree.idinv>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','5','D','inventorytree','S','S','S','N','N',{ts '2008-07-22 14:53:35.840'},'SARA','Cancellazione Impossibile! Esistono classificazioni collegate alla voce della classificazione inventariale %<codeinv>%','S','[execute count_table_field ''inventorytreesorting'',''idinv'',
%<inventorytree.idinv>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','6','D','inventorytree','S','S','S','N','N',{ts '2008-07-24 14:07:20.077'},'SARA','Cancellazione Impossibile! Esistono quote di ammortamento collegate alla voce della classificazione inventariale %<codeinv>%','S','[execute count_table_field ''inventorysortingamortizationyear'',''idinv'',
%<inventorytree.idinv>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','I','inventorytree','S','S','S','N','N',{ts '2009-01-20 12:27:08.727'},'SA','Voce di classificazione inventariale non inseribile','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','I','inventorytree','S','S','S','N','N',{ts '2007-05-25 13:05:31.327'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','inventorytree','S','S','S','N','N',{ts '2007-11-08 16:35:12.503'},'NINO','Classificazione inventariale %<codeinv>% già esistente','S','[(SELECT count(*) 
from inventorytree 
where codeinv = %<inventorytree.codeinv>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','I','inventorytree','S','S','S','N','N',{ts '2007-09-13 12:02:38.703'},'NINO','Esistono classificazioni alternative alla classificazione inventariale collegate al padre di %<codeinv>%','S','[(SELECT count(*) 
from inventorytreesorting 
where idinv = %<inventorytree.paridinv>%)]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','I','inventorytree','S','S','S','N','N',{ts '2007-09-13 12:02:44.517'},'NINO','Esistono carichi di cespiti inventariabili collegati al padre di %<codeinv>%','S','[(SELECT count(*) 
from assetacquire
where idinv = %<inventorytree.paridinv>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','I','inventorytree','S','S','S','N','N',{ts '2007-09-13 12:02:50.360'},'NINO','Esistono variazioni patrimoniali collegate al padre di %<codeinv>%','S','[(SELECT count(*) 
from assetvardetail
where idinv = %<inventorytree.paridinv>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','I','inventorytree','S','S','S','N','N',{ts '2007-09-13 12:02:58.157'},'NINO','Esistono buoni d''ordine collegati al padre di %<codeinv>%','S','[(SELECT count(*) 
from mandatedetail
where idinv = %<inventorytree.paridinv>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','U','inventorytree','S','S','S','N','N',{ts '2009-01-20 12:27:12.057'},'SA','Voce di classificazione inventariale non modificabile','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','U','inventorytree','S','S','S','N','N',{ts '2007-05-25 13:05:43.627'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA005','1','D','invoice','S','S','S','N','N',{ts '2005-12-20 13:48:31.610'},'''INFORMATICA''','Operazione Impossibile, la liquidazione IVA del periodo che comprende la data di registrazione %<adate>% è stata effettuata','S','%<invoice.flagdeferred>% <> ''S''
OR
[SELECT COUNT(*)
FROM invoicedeferred
WHERE idinvkind = %<invoice.idinvkind>%
AND yinv = %<invoice.yinv>%
AND ninv = %<invoice.ninv>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA011','1','D','invoice','S','S','S','N','N',{ts '2013-03-25 14:50:29.517'},'sa','Operazione Impossibile, la liquidazione IVA del periodo che comprende la data di registrazione %<invoice.adate>% è stata effettuata.','S','[SELECT COUNT(*)
FROM invoicedeferred
WHERE idinvkind = %<invoice.idinvkind>%
	AND yinv = %<invoice.yinv>%
	AND ninv = %<invoice.ninv>%]{I}
= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA015','1','D','invoice','S','S','S','N','N',{ts '2010-04-30 09:26:19.627'},'SARA','Il documento IVA %<invoicekind.description>% - %<invoice.yinv>% / %<invoice.ninv>% non può essere cancellato in quanto esistono altri documenti successivi','S','[SELECT COUNT(*) FROM invoice
WHERE idinvkind = %<invoice.idinvkind>%
AND yinv = %<invoice.yinv>%
AND ninv > %<invoice.ninv>%]{I} = 0
OR (%<invoice.ninv>%=1)
OR
[SELECT COUNT(*) FROM invoicekindregisterkind
JOIN ivaregisterkind
ON   ivaregisterkind.idivaregisterkind = 
     invoicekindregisterkind.idivaregisterkind
WHERE invoicekindregisterkind.idinvkind = %<invoice.idinvkind>%
AND   ivaregisterkind.registerclass = ''A'']{I}> 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA043','1','D','invoice','S','S','S','N','N',{ts '2011-03-31 14:05:32.047'},'sa','Il documento %<invoicekind.description>% - %<invoice.yinv>% / %<invoice.ninv>% non può essere cancellato perchè esiste un'' autofattura ad esso collegata.','S','[SELECT COUNT(*) 
FROM invoice
WHERE idinvkind_real = %<invoice.idinvkind>%
	and yinv_real = %<invoice.yinv>%
	and ninv_real = %<invoice.ninv>%]{I}=0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','invoice','S','S','S','N','N',{ts '2010-04-28 13:27:08.237'},'Nino07032012','Cancellazione Impossibile! Esistono movimenti finanziari collegati al documento IVA %<idinvkind>% num. %<ninv>% / %<yinv>%','S','([SELECT COUNT(*) 
from incomeinvoice
where idinvkind =%<invoice.idinvkind>%
and yinv = %<invoice.yinv>%
and ninv = %<invoice.ninv>%]{I} = 0)
AND
([SELECT COUNT(*) 
from expenseinvoice
where idinvkind =%<invoice.idinvkind>%
and yinv = %<invoice.yinv>%
and ninv = %<invoice.ninv>%]{I} = 0)
AND
([SELECT COUNT(*) 
from incomevar
where idinvkind =%<invoice.idinvkind>%
and yinv = %<invoice.yinv>%
and ninv = %<invoice.ninv>%]{I} = 0)
AND
([SELECT COUNT(*) 
from expensevar
where idinvkind =%<invoice.idinvkind>%
and yinv = %<invoice.yinv>%
and ninv = %<invoice.ninv>%]{I} = 0)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','invoice','S','S','S','N','N',{ts '2010-04-28 14:19:58.220'},'SARADECA','Cancellazione Impossibile! Esistono operazioni di Piccola Spesa collegate al documento IVA: %<invoicekind.description>%  Num. %<ninv>% / %<yinv>%','S','([SELECT COUNT(*) 
from pettycashoperationinvoice
where idinvkind =%<invoice.idinvkind>%
and yinv = %<invoice.yinv>%
and ninv = %<invoice.ninv>%]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA003','1','I','invoice','S','S','S','N','N',{ts '2007-11-21 10:42:13.843'},'NINO','Il documento IVA %<idinvkind>% %<yinv>% %<ninv>% non può essere inserito in quanto la sua data contabile viola la sequenza cronologica dei documenti IVA','S','[SELECT adate 
FROM invoice 
WHERE idinvkind = %<invoice.idinvkind>% 
AND yinv = %<invoice.yinv>% 
AND ninv = 
	[SELECT MAX(ninv)
	FROM invoice
	WHERE idinvkind = %<invoice.idinvkind>%
	AND yinv = %<invoice.yinv>%]{I}
]{D}
<=
%<invoice.adate>%
or
%<invoice.ninv>% = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA006','1','I','invoice','S','S','S','N','N',{ts '2011-03-29 15:54:51.530'},'sa','Righe di dettaglio assenti! Impossibile salvare il documento IVA %<idinvkind>% %<yinv>% %<ninv>%','N','--post
[SELECT COUNT(*) 
FROM invoicedetail
WHERE idinvkind = %<invoice.idinvkind>%
AND yinv = %<invoice.yinv>%
AND ninv = %<invoice.ninv>%
]{I} <> 0

OR
%<invoice.idinvkind_real>% is not null')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA011','1','I','invoice','S','S','S','N','N',{ts '2013-03-25 16:05:47.887'},'sa','Attenzione, la liquidazione IVA del periodo che comprende la data di registrazione %<invoice.adate>% è stata effettuata. Se si procede bisognerà effettuare una nuova liquidazione.','S','-- controllo che la fattura in base alla data di registrazione 
-- non ricada in una liquidazione IVA già effettuata 
( 
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoice.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[select count(*) from ivapay where
 %<invoice.adate>% between ivapay.start and ivapay.stop
 and (ivapay.flag&1)<>0  ]{I}=0
)

OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoice.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0
AND
[select count(*) from ivapay where
 %<invoice.adate>% between ivapay.start and ivapay.stop
 and (ivapay.flag&2)<>0  ]{I}=0 )
OR
-- fattura a iva differita
[SELECT flagdeferred
FROM invoice
WHERE idinvkind = %<invoice.idinvkind>%
AND yinv = %<invoice.yinv>%
AND ninv = %<invoice.ninv>%]{C} = ''S''
OR
-- aggiungere la condizione che non sia rilevante ai fini iva
-- istituzionali non intracom, 
[SELECT COUNT(*)
FROM ivaregisterkind
JOIN ivaregister
	ON ivaregister.idivaregisterkind = ivaregisterkind.idivaregisterkind
JOIN invoice
	ON invoice.idinvkind = ivaregister.idinvkind
	AND invoice.yinv = ivaregister.yinv
	AND invoice.ninv = ivaregister.ninv
WHERE ISNULL(flagintracom,''N'') = ''N''
AND ivaregisterkind.flagactivity = 1
AND invoice.idinvkind = %<invoice.idinvkind>%
AND invoice.yinv = %<invoice.yinv>%
AND invoice.ninv = %<invoice.ninv>%
]{I}>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA013','1','I','invoice','S','S','S','N','N',{ts '2009-11-13 14:33:32.420'},'SA','Una fattura di acquisto relativa ad un contratto professionale deve necessariamente non essere utilizzabile per la contabilizzazione.','N','%<invoice.active>%=''N''
OR
[SELECT COUNT(*)  from profservice where 
	idinvkind = %<invoice.idinvkind>% and
	yinv=%<invoice.yinv>% and
	ninv=%<invoice.ninv>%]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA013','2','I','invoice','S','S','S','N','N',{ts '2006-01-12 13:16:18.217'},'''INFORMATICA''','Una fattura di acquisto relativa ad un contratto professionale deve necessariamente di tipo ''Iva immediata'' ossia non di tipo ''Iva differita''','S','%<invoice.flagdeferred>%=''N''
OR
[SELECT COUNT(*)  from profservice where 
	idinvkind = %<invoice.idinvkind>% and
	yinv=%<invoice.yinv>% and
	ninv=%<invoice.ninv>%]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA014','1','I','invoice','S','S','S','N','N',{ts '2007-11-21 10:43:34.670'},'NINO','E'' già presente un documento IVA di acquisto con fornitore  %<registry.title>% con documento %<doc>%  ed emesso in data %<docdate>% ','S','[SELECT flag
from invoicekind where
idinvkind = %<invoice.idinvkind>% 
]{I} & 1 <> 0
OR
[SELECT COUNT(*) 
from invoice WHERE
idreg = %<invoice.idreg>% 
and doc = %<invoice.doc>% 
and docdate = %<invoice.docdate>% 
]{I} = 0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA015','1','I','invoice','S','S','S','N','N',{ts '2010-05-11 11:18:51.813'},'SARA','Il numero del documento IVA: %<invoicekind.description>% - %<invoice.yinv>% / %<invoice.ninv>% non può essere inserito in quanto manca il documento precedente. L''inserimento causerebbe salti nelle numerazione!','N','[SELECT isnull(invoice_flagregister,''N'')
FROM config
WHERE ayear = %<sys_esercizio>%]{C}  = ''S''

OR

([SELECT COUNT(*) FROM invoice
WHERE idinvkind = %<invoice.idinvkind>%
AND yinv = %<invoice.yinv>%
AND ninv = %<invoice.ninv>% - 1 ]{I} <> 0) 
OR (%<invoice.ninv>%=1)
OR
[SELECT COUNT(*) FROM invoicekindregisterkind
JOIN ivaregisterkind
ON   ivaregisterkind.idivaregisterkind = 
     invoicekindregisterkind.idivaregisterkind
WHERE invoicekindregisterkind.idinvkind = %<invoice.idinvkind>%
AND   ivaregisterkind.registerclass = ''A'']{I}> 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA015','2','I','invoice','S','S','S','N','N',{ts '2010-05-11 13:28:31.483'},'SARA','Il numero del documento IVA: %<invoicekind.description>% - %<invoice.yinv>% / %<invoice.ninv>% non può essere inserito, in quanto nel registro associato manca il documento precedente. L''inserimento causerebbe salti nelle numerazione!','N','[SELECT isnull(invoice_flagregister,''N'')
FROM config
WHERE ayear = %<sys_esercizio>%]{C}  = ''N''

OR (%<invoice.ninv>%=1)

OR

[SELECT COUNT(*) FROM invoicekindregisterkind
JOIN ivaregisterkind
ON   ivaregisterkind.idivaregisterkind = 
     invoicekindregisterkind.idivaregisterkind
WHERE invoicekindregisterkind.idinvkind = %<invoice.idinvkind>%
AND   ivaregisterkind.registerclass = ''A'']{I}> 0

OR

([SELECT COUNT(*)  FROM ivaregister
WHERE idivaregisterkind IN
				([SELECT IR.idivaregisterkind 
				FROM invoicekindregisterkind IR
				JOIN ivaregisterkind IRK
					ON IRK.idivaregisterkind = IR.idivaregisterkind
				WHERE IRK.registerclass = ''V'' AND IR.idinvkind =  %<invoice.idinvkind>%]{C})
AND yivaregister = %<invoice.yinv>%
AND nivaregister = %<invoice.ninv>% - 1 ]{I} <> 0) 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA024','1','I','invoice','S','S','S','N','N',{ts '2008-01-07 11:13:21.047'},'SARA','La data del documento per una fattura di vendita è obbligatoria.','S','%<invoice.docdate>% IS NOT NULL
OR 
--non è di vendita
[SELECT count(*) from invoicekind where 
	idinvkind = %<invoice.idinvkind>% 
	and ((flag & 1) <> 0)
]{I}=0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA033','1','I','invoice','S','S','S','N','N',{ts '2009-05-25 10:44:20.297'},'SARA','La data del documento per una fattura di vendita deve essere pari alla data di registrazione.','S','ISNULL(%<invoice.docdate>%,{D ''1900-01-01''}) = 
ISNULL(%<invoice.adate>%,{D ''1900-01-01''})
OR 
--non è di vendita
[SELECT count(*) from invoicekind where 
	idinvkind = %<invoice.idinvkind>% 
	and ((flag & 1) <> 0)
]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA038','1','I','invoice','S','S','S','N','N',{ts '2010-10-22 10:15:15.313'},'sara','Per la  fattura  %<idinvkind>% %<yinv>% %<ninv>%  è obbligatorio specificare nella scheda "Blacklist" se deve essere effettuata la comunicazione all''Agenzia delle Entrate delle operazioni con paesi a fiscalità privilegiata.','N','--post
ISNULL(%<invoice.flag>%,2) <> 2
OR
%<invoice.idblacklist>% is null
OR
[SELECT COUNT(*) FROM ivaregisterkind IK 
	join invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
	where 
		 IKR.idinvkind=%<invoice.idinvkind>%
		AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} =0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA039','1','I','invoice','S','S','S','N','N',{ts '2013-04-30 14:33:51.983'},'sara','Inserire la partita IVA di %<registry.title>%','S','--- la regola non deve scattare per le fattur exntra-ue
%<invoice.flagintracom>% =''X''
OR
[(SELECT count(*) from invoicekind IK
	join invoicekindregisterkind IKRK
		on IK.idinvkind = IKRK.idinvkind
	join ivaregisterkind IRK
		on IKRK.idivaregisterkind = IRK.idivaregisterkind
WHERE IK.idinvkind=%<invoice.idinvkind>%
AND IRK.registerclass = ''V'')]{I} > 0

OR

[(SELECT count(*) from registry 
where idreg=%<invoice.idreg>% and p_iva is not null)]{I} > 0

OR

[(SELECT count(*) from registry 
where idreg=%<invoice.idreg>% and foreigncf is not null)]{I} > 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA043','1','I','invoice','S','S','S','N','N',{ts '2011-03-31 12:14:04.687'},'sa','Il documento %<invoicekind.description>% - %<invoice.yinv>% / %<invoice.ninv>% non può essere creato perchè la fattura principale è stata contrassegnata come Autofattura.','N','(%<invoice.idinvkind_real>% IS NULL)
OR
[SELECT COUNT(*) 
FROM invoice
WHERE idinvkind = %<invoice.idinvkind_real>%
	and yinv = %<invoice.yinv_real>%
	and ninv = %<invoice.ninv_real>%
	and isnull(autoinvoice,''N'')=''S'']{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA043','2','I','invoice','S','S','S','N','N',{ts '2011-04-06 17:49:00.140'},'sa','La data di registrazione del documento %<invoicekind.description>% - %<invoice.yinv>% / %<invoice.ninv>% deve essere uguale a quella della fattura principale.','N','%<invoice.idinvkind_real>% is null

OR

%<invoice.adate>% =
[SELECT adate
FROM invoice
WHERE idinvkind = %<invoice.idinvkind_real>%
	and yinv = %<invoice.yinv_real>%
	and ninv = %<invoice.ninv_real>%
]{C}




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA043','3','I','invoice','S','S','S','N','N',{ts '2011-04-06 17:49:39.610'},'sa','Il documento %<invoicekind.description>% - %<invoice.yinv>% / %<invoice.ninv>% deve avere lo stesso Cliente/Fornitore della fattura principale.','N','%<invoice.idinvkind_real>% is null

OR

%<invoice.idreg>% =
[SELECT idreg
FROM invoice
WHERE idinvkind = %<invoice.idinvkind_real>%
	and yinv = %<invoice.yinv_real>%
	and ninv = %<invoice.ninv_real>%
]{C}



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA043','4','I','invoice','S','S','S','N','N',{ts '2011-04-06 17:52:46.687'},'sa','Il documento %<invoicekind.description>% - %<invoice.yinv>% / %<invoice.ninv>% deve essere a IVA differita come lo è la fattura principale.','N','%<invoice.idinvkind_real>% is null

OR

ISNULL(%<invoice.flagdeferred>%,''N'') =
[SELECT ISNULL(flagdeferred,''N'') 
FROM invoice
WHERE idinvkind = %<invoice.idinvkind_real>%
	and yinv = %<invoice.yinv_real>%
	and ninv = %<invoice.ninv_real>%
]{C}

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA043','5','I','invoice','S','S','S','N','N',{ts '2011-04-06 17:52:36.860'},'sa','Il documento %<invoicekind.description>% - %<invoice.yinv>% / %<invoice.ninv>% deve essere contrassegnato come Intra/Extra-Ue allo stesso modo della fattura principale.','N','%<invoice.idinvkind_real>% is null

OR

ISNULL(%<invoice.flagintracom>%,''N'') =
[SELECT ISNULL(flagintracom,''N'') 
FROM invoice
WHERE idinvkind = %<invoice.idinvkind_real>%
	and yinv = %<invoice.yinv_real>%
	and ninv = %<invoice.ninv_real>%
]{C}

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA043','6','I','invoice','S','S','S','N','N',{ts '2011-04-07 11:29:31.343'},'sa','Esiste già un''autofattura collegata al documento %<invoiceview.invkind_real>% - %<invoice.yinv_real>% / %<invoice.ninv_real>% .


','N','[SELECT COUNT(*) 
FROM invoice
WHERE idinvkind_real = %<invoice.idinvkind_real>%
	and yinv_real = %<invoice.yinv_real>%
	and ninv_real = %<invoice.ninv_real>%]{I}<=1
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA045','1','I','invoice','S','S','S','N','N',{ts '2013-07-05 13:15:43.240'},'sa','Nella fattura di vendita   inserita dovrebbe essere specificato il Tesoriere per l''incasso','S','ISNULL(%<invoice.idtreasurer>%,0) <> 0
OR 
--non è di vendita
[SELECT count(*) from invoicekind where 
	idinvkind = %<invoice.idinvkind>% 
	and ((flag & 1) <> 0)
]{I}=0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM014','1','I','invoice','S','S','S','N','N',{ts '2009-02-26 15:19:03.907'},'ASSISTENZA','Non è possibile salvare un documento iva con numero negativo','N','%<invoice.ninv>%>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA001','1','U','invoice','S','S','S','N','N',{ts '2006-02-24 10:46:50.587'},'''PINO''','L''importo del documento IVA %<idinvkind>% %<ninv>%/%<yinv>% è minore delle variazioni di entrata che lo contabilizzano','N','(
ISNULL(
	[SELECT ISNULL(AVG(residual),0) FROM invoiceavailable 
	WHERE invoiceavailable.idinvkind = %<invoice.idinvkind>%
	AND invoiceavailable.ninv = %<invoice.ninv>%
	AND invoiceavailable.yinv = %<invoice.yinv>%
]{N}
,0)>=0
)
OR
(
ISNULL(&<invoice.exchangerate>&,1) = ISNULL(%<invoice.exchangerate>%,1)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA003','1','U','invoice','S','S','S','N','N',{ts '2005-12-21 11:07:11.093'},'''INFORMATICA''','Il documento IVA %<idinvkind>% %<yinv>% %<ninv>% non può essere modificato in quanto la sua data contabile viola la sequenza cronologica dei documenti IVA','N','--post
%<invoice.adate>% >= 
(ISNULL([SELECT MAX(adate) FROM invoice 
WHERE ninv < %<invoice.ninv>% 
AND idinvkind = %<invoice.idinvkind>%
AND yinv = %<invoice.yinv>%]{D},
%<invoice.adate>%))
AND
%<invoice.adate>% <= 
(ISNULL([SELECT MIN(adate) FROM invoice
WHERE ninv > %<invoice.ninv>% 
AND idinvkind = %<invoice.idinvkind>%
AND yinv = %<invoice.yinv>%]{D},
%<invoice.adate>%))')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA010','1','U','invoice','S','S','S','N','N',{ts '2009-02-12 13:23:07.127'},'ASSISTENZA','Per la fattura di tipo %<invoiceview.invoicekind>% / n. %<invoice.ninv>% del %<invoice.yinv>% non si può cambiare l''opzione IVA immediata/ IVA differita perchè essa risulta già liquidata.','S','[SELECT COUNT(*)  from invoicedeferred where 
	idinvkind = %<invoice.idinvkind>% and
	yinv=%<invoice.yinv>% and
	ninv=%<invoice.ninv>%]{I}=0
OR
%<invoice.flagdeferred>%=&<invoice.flagdeferred>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA010','2','U','invoice','S','S','S','N','N',{ts '2013-03-25 10:27:49.407'},'sa','Per la fattura di tipo %<invoiceview.invoicekind>% / n. %<invoice.ninv>% del %<invoice.yinv>% non si può cambiare l''opzione IVA immediata/ IVA differita perchè il periodo di liquidazione è già trascorso','S','%<invoice.flagdeferred>%=&<invoice.flagdeferred>&
OR
( 
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoice.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[select count(*) from ivapay where
 %<invoice.adate>% between ivapay.start and ivapay.stop
 and (ivapay.flag&1)<>0  ]{I}=0
)

OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoice.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0
AND
[select count(*) from ivapay where
 %<invoice.adate>% between ivapay.start and ivapay.stop
 and (ivapay.flag&2)<>0  ]{I}=0 )

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA011','1','U','invoice','S','S','S','N','N',{ts '2013-03-25 16:06:01.127'},'sa','Attenzione, la liquidazione IVA del periodo che comprende la data di registrazione %<invoice.adate>% è stata effettuata. Se si procede bisognerà effettuare una nuova liquidazione.','S','-- controllo che la fattura in base alla data di registrazione 
-- non ricada in una liquidazione IVA già effettuata 
( 
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoice.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[select count(*) from ivapay where
 %<invoice.adate>% between ivapay.start and ivapay.stop
 and (ivapay.flag&1)<>0  ]{I}=0
)

OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoice.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0
AND
[select count(*) from ivapay where
 %<invoice.adate>% between ivapay.start and ivapay.stop
 and (ivapay.flag&2)<>0  ]{I}=0 )
OR
--fattura a iva differita
[SELECT flagdeferred
FROM invoice
WHERE idinvkind = %<invoice.idinvkind>%
AND yinv = %<invoice.yinv>%
AND ninv = %<invoice.ninv>%]{C} = ''S''
OR
(
%<invoice.exchangerate>% = &<invoice.exchangerate>&
and %<invoice.idreg>% = &<invoice.idreg>&
and %<invoice.description>% = &<invoice.description>&
and isnull(%<invoice.doc>%,'''') = isnull(&<invoice.doc>&,'''')
)
-- aggiungere la condizione che non sia rilevante ai fini iva
OR
-- istituzionali non intracom, queste devono essere escluse dalla regola
[SELECT COUNT(*)
FROM ivaregisterkind
JOIN ivaregister
	ON ivaregister.idivaregisterkind = ivaregisterkind.idivaregisterkind
JOIN invoice
	ON invoice.idinvkind = ivaregister.idinvkind
	AND invoice.yinv = ivaregister.yinv
	AND invoice.ninv = ivaregister.ninv
WHERE ISNULL(flagintracom,''N'') = ''N''
AND ivaregisterkind.flagactivity = 1
AND invoice.idinvkind = %<invoicedetail.idinvkind>%
AND invoice.yinv = %<invoicedetail.yinv>%
AND invoice.ninv = %<invoicedetail.ninv>%
]{I}>0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA012','1','U','invoice','S','S','S','N','N',{ts '2010-03-22 10:41:44.877'},'SARA','L''importo dell''IVA sui dettagli della fattura  di tipo %<invoicekind.description>%,  %<invoice.yinv>% / %<invoice.ninv>%, deve essere pari a zero perchè la fattura è in valuta diversa dall''Euro.','N','(
ISNULL(%<invoice.idcurrency>%, 0) = 
ISNULL(&<invoice.idcurrency>&, 0) 
)
OR
(
ISNULL(
[SELECT codecurrency FROM currency
WHERE idcurrency = %<invoice.idcurrency>%]{C}
,'''') = ''EUR''
)

OR
(

[SELECT ROUND(SUM(ISNULL(tax,0.00)),2) FROM invoicedetail 
  WHERE idinvkind = %<invoice.idinvkind>% AND
        yinv      = %<invoice.yinv>%  AND 
        ninv	= %<invoice.ninv>%  
	  ]{N} = 0.00 
)

-- il controllo agisce se la fattura è semplice, ossia non è intracom.
OR

ISNULL(%<invoice.flagintracom>%,''N'') <> ''N''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA012','2','U','invoice','S','S','S','N','N',{ts '2010-03-22 11:21:52.203'},'SARA','L''importo dell''IVA indetraibile sui dettagli della fattura   di tipo %<invoicekind.description>%,  %<invoice.yinv>% / %<invoice.ninv>%, deve essere pari a zero perchè la fattura è in valuta diversa dall''Euro.','N','(
ISNULL(%<invoice.idcurrency>%, 0) = 
ISNULL(&<invoice.idcurrency>&, 0) 
)

OR
(
ISNULL(
[SELECT codecurrency FROM currency
WHERE idcurrency = %<invoice.idcurrency>%]{C}
,'''') = ''EUR''
)

OR

(

[SELECT ROUND(SUM(ISNULL(unabatable,0.00)),2) FROM invoicedetail 
  WHERE idinvkind = %<invoice.idinvkind>% AND
        yinv      = %<invoice.yinv>%  AND 
        ninv	= %<invoice.ninv>%  
	  ]{N} = 0.00 
)
-- il controllo agisce se la fattura è semplice, ossia non è intracom.
OR

ISNULL(%<invoice.flagintracom>%,''N'') <> ''N''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA013','1','U','invoice','S','S','S','N','N',{ts '2009-11-13 14:34:01.203'},'SA','Una fattura di acquisto relativa ad un contratto professionale deve necessariamente non essere utilizzabile per la contabilizzazione.','N','%<invoice.active>%=''N''
OR
[SELECT COUNT(*)  from profservice where 
	idinvkind = %<invoice.idinvkind>% and
	yinv=%<invoice.yinv>% and
	ninv=%<invoice.ninv>%]{I}=0
OR 
%<invoice.active>%=&<invoice.active>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA013','2','U','invoice','S','S','S','N','N',{ts '2006-01-12 13:19:09.563'},'''INFORMATICA''','Una fattura di acquisto relativa ad un contratto professionale deve necessariamente di tipo ''Iva immediata'' ossia non di tipo ''Iva differita''','S','%<invoice.flagdeferred>%=''N''
OR
[SELECT COUNT(*)  from profservice where 
	idinvkind = %<invoice.idinvkind>% and
	yinv=%<invoice.yinv>% and
	ninv=%<invoice.ninv>%]{I}=0
OR
%<invoice.flagdeferred>%=&<invoice.flagdeferred>&')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA014','1','U','invoice','S','S','S','N','N',{ts '2007-11-21 10:51:23.030'},'NINO','E'' già presente un documento IVA di acquisto con fornitore  %<registry.title>% con documento %<doc>%  ed emesso in data %<docdate>% ','S','(isnull(%<invoice.idreg>%,0) = isnull(&<invoice.idreg>&,0) 
AND
isnull(%<invoice.doc>%,'''') = isnull(&<invoice.doc>&,'''') 
AND
isnull(%<invoice.docdate>%,{D ''1900-01-01''})= isnull(&<invoice.docdate>&,{D ''1900-01-01''}))
OR
[SELECT flag
from invoicekind where
idinvkind = %<invoice.idinvkind>% 
]{I} & 1 <> 0
OR
[SELECT COUNT(*) 
from invoice where
idreg = %<invoice.idreg>% 
and doc = %<invoice.doc>% 
and docdate = %<invoice.docdate>% 
]{I} = 0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA024','1','U','invoice','S','S','S','N','N',{ts '2008-01-07 11:13:23.593'},'SARA','La data del documento per una fattura di vendita è obbligatoria.','S','(%<invoice.docdate>% = &<invoice.docdate>&)
OR
%<invoice.docdate>% IS NOT NULL
OR 
--non è di vendita
[SELECT count(*) from invoicekind where 
	idinvkind = %<invoice.idinvkind>%
	and ((flag & 1) <> 0)
]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA027','1','U','invoice','S','S','S','N','N',{ts '2011-03-04 12:10:06.780'},'sa','Non è possibile inserire ulteriori documenti relativi ad un periodo di cui è stata  già effettuata la liquidazione iva.','S','(%<invoice.adate>% =&<invoice.adate>&) 
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoice.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[select count(*) from ivapay where
 %<invoice.adate>% between ivapay.start and ivapay.stop
 and ivapay.flag IN (1,3)]{I}=0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoice.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0
AND
[select count(*) from ivapay where
 %<invoice.adate>% between ivapay.start and ivapay.stop
 and ivapay.flag IN (2,3)]{I}=0
 )
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoice.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[select count(*) from ivapay where
 &<invoice.adate>& between ivapay.start and ivapay.stop
 and ivapay.flag IN (1,3)]{I}=0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoice.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0
AND
[select count(*) from ivapay where
 &<invoice.adate>& between ivapay.start and ivapay.stop
 and ivapay.flag IN (2,3)]{I}=0
)




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA033','1','U','invoice','S','S','S','N','N',{ts '2009-05-25 10:44:20.297'},'SARA','La data del documento per una fattura di vendita deve essere pari alla data di registrazione.','S','( 
  (
  	ISNULL(%<invoice.docdate>%,{D ''1900-01-01''}) =  
  	ISNULL(&<invoice.docdate>&,{D ''1900-01-01''})
   )
AND
 (
	ISNULL(%<invoice.adate>%,{D ''1900-01-01''}) =  
  	ISNULL(&<invoice.adate>&,{D ''1900-01-01''})
  )
)
OR
ISNULL(%<invoice.docdate>%,{D ''1900-01-01''}) = 
ISNULL(%<invoice.adate>%,{D ''1900-01-01''})
OR 
--non è di vendita
[SELECT count(*) from invoicekind where 
	idinvkind = %<invoice.idinvkind>% 
	and ((flag & 1) <> 0)
]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA038','1','U','invoice','S','S','S','N','N',{ts '2010-10-22 10:15:23.733'},'sara','Per la  fattura  %<idinvkind>% %<yinv>% %<ninv>% è obbligatorio specificare nella scheda "Blacklist"  se deve essere effettuata la comunicazione all''Agenzia delle Entrate delle operazioni con paesi a fiscalità privilegiata.','N','--post
(
ISNULL(&<invoice.flag>&,2)  = ISNULL(%<invoice.flag>%,2) 
AND
ISNULL(&<invoice.idreg>&,0)  = ISNULL(%<invoice.idreg>%,0)
AND
ISNULL(&<invoice.adate>&,0)  = ISNULL(%<invoice.adate>%,0)
AND
ISNULL(&<invoice.idblacklist>&,0)  = ISNULL(%<invoice.idblacklist>%,0)
)
OR
%<invoice.idblacklist>% is null
OR
ISNULL(%<invoice.flag>%,2) <> 2
OR
[SELECT COUNT(*) FROM ivaregisterkind IK 
	join invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
	where 
		 IKR.idinvkind=%<invoice.idinvkind>%
		AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} =0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA038','2','U','invoice','S','S','S','N','N',{ts '2010-10-22 16:23:25.250'},'sara','Per i dettagli associati ad aliquota IVA commerciale o promiscua della  fattura  %<idinvkind>% %<yinv>% %<ninv>%  è obbligatorio specificare  nella scheda "Comunicazioni" la tipologia Beni/Servizi ai fini della trasmissione all''Agenzia delle Entrate.','N','--post
(
ISNULL(&<invoice.flag>&,2)  = ISNULL(%<invoice.flag>%,2) 
AND
ISNULL(&<invoice.idreg>&,0)  = ISNULL(%<invoice.idreg>%,0)
AND
ISNULL(&<invoice.adate>&,0)  = ISNULL(%<invoice.adate>%,0)
AND
ISNULL(&<invoice.idblacklist>&,0)  = ISNULL(%<invoice.idblacklist>%,0)
)
OR
%<invoice.idblacklist>% is null
OR
ISNULL(%<invoice.flag>%,2) <>0
OR
(
	[SELECT COUNT(*)
	FROM invoicedetail ID
	JOIN ivakind IVK
		ON   IVK.idivakind= ID.idivakind
	WHERE ID.idinvkind = %<invoice.idinvkind>%
	AND ID.yinv = %<invoice.yinv>%
	AND ID.ninv = %<invoice.ninv>%
	AND isnull(ID.flag, 2) = 2
-- AND tipo iva non istituzionale 
	AND ((ISNULL(IVK.flag,0) & 1) = 0) 
	]{I} =  0
)
OR
[SELECT COUNT(*) FROM ivaregisterkind IK 
	join invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
	where 
		 IKR.idinvkind=%<invoice.idinvkind>%
		AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} =0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA039','1','U','invoice','S','S','S','N','N',{ts '2013-04-30 14:33:58.683'},'sara','Inserire la partita IVA di %<registry.title>%','S','--- la regola non deve scattare per le fattur exntra-ue
%<invoice.flagintracom>% =''X''
OR

[(SELECT count(*) from invoicekind IK
	join invoicekindregisterkind IKRK
		on IK.idinvkind = IKRK.idinvkind
	join ivaregisterkind IRK
		on IKRK.idivaregisterkind = IRK.idivaregisterkind
WHERE IK.idinvkind=%<invoice.idinvkind>%
AND IRK.registerclass = ''V'')]{I} > 0

OR

[(SELECT count(*) from registry where idreg=%<invoice.idreg>% and p_iva is not null)]{I} > 0

OR

[(SELECT count(*) from registry where idreg=%<invoice.idreg>% and foreigncf is not null)]{I} > 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA043','1','U','invoice','S','S','S','N','N',{ts '2011-03-31 14:11:17.877'},'sa','Il documento %<invoicekind.description>% - %<invoice.yinv>% / %<invoice.ninv>% non può essere contrassegnato come Autofattura perchè esiste un''autofattura ad esso collegata.','N','isnull(%<invoice.autoinvoice>% ,''N'') =''N''
OR
[SELECT COUNT(*) 
FROM invoice
WHERE idinvkind_real = %<invoice.idinvkind>%
	and yinv_real = %<invoice.yinv>%
	and ninv_real = %<invoice.ninv>%]{I}=0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA043','2','U','invoice','S','S','S','N','N',{ts '2011-04-05 09:54:21.187'},'sa','Il documento %<invoicekind.description>% - %<invoice.yinv>% / %<invoice.ninv>% deve essere contrassegnato come Intra/Extra-Ue allo stesso modo della fattura principale.','N','%<invoice.idinvkind_real>% is null

OR

ISNULL(%<invoice.flagintracom>%,''N'') =
[SELECT ISNULL(flagintracom,''N'') 
FROM invoice
WHERE idinvkind = %<invoice.idinvkind_real>%
	and yinv = %<invoice.yinv_real>%
	and ninv = %<invoice.ninv_real>%
]{C}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA043','4','U','invoice','S','S','S','N','N',{ts '2011-04-05 09:57:05.267'},'sa','Il documento %<invoicekind.description>% - %<invoice.yinv>% / %<invoice.ninv>% deve essere a IVA differita come lo è la fattura principale.','N','%<invoice.idinvkind_real>% is null

OR

ISNULL(%<invoice.flagdeferred>%,''N'') =
[SELECT ISNULL(flagdeferred,''N'') 
FROM invoice
WHERE idinvkind = %<invoice.idinvkind_real>%
	and yinv = %<invoice.yinv_real>%
	and ninv = %<invoice.ninv_real>%
]{C}
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA043','5','U','invoice','S','S','S','N','N',{ts '2011-04-06 17:39:11.327'},'sa','Il documento %<invoicekind.description>% - %<invoice.yinv>% / %<invoice.ninv>% deve avere lo stesso Cliente/Fornitore della fattura principale.','N','%<invoice.idinvkind_real>% is null

OR

%<invoice.idreg>% =
[SELECT idreg
FROM invoice
WHERE idinvkind = %<invoice.idinvkind_real>%
	and yinv = %<invoice.yinv_real>%
	and ninv = %<invoice.ninv_real>%
]{C}


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA043','6','U','invoice','S','S','S','N','N',{ts '2011-04-06 17:39:46.140'},'sa','La data di registrazione del documento %<invoicekind.description>% - %<invoice.yinv>% / %<invoice.ninv>% deve essere uguale a quella della fattura principale.','N','%<invoice.idinvkind_real>% is null

OR

%<invoice.adate>% =
[SELECT adate
FROM invoice
WHERE idinvkind = %<invoice.idinvkind_real>%
	and yinv = %<invoice.yinv_real>%
	and ninv = %<invoice.ninv_real>%
]{C}



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA045','1','U','invoice','S','S','S','N','N',{ts '2013-07-05 13:15:45.577'},'sa','Nella fattura di vendita  %<invoicekind.description>% - %<invoice.yinv>% / %<invoice.ninv>%  dovrebbe essere specificato il Tesoriere per l''incasso','N','(ISNULL(%<invoice.idtreasurer>%,0)  = ISNULL(&<invoice.idtreasurer>&,0) )
OR
ISNULL(%<invoice.idtreasurer>%,0) <> 0
OR 
--non è di vendita
[SELECT count(*) from invoicekind where 
	idinvkind = %<invoice.idinvkind>% 
	and ((flag & 1) <> 0)
]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM015','1','U','invoice','S','S','S','N','N',{ts '2005-09-07 15:59:48.687'},'''SA''','Non si può modificare il percipiente/versante in un documento IVA totalmente o parzialmente contabilizzato.','S','[SELECT COUNT(*)
FROM expenseinvoice
WHERE idinvkind = %<invoice.idinvkind>%
AND yinv = %<invoice.yinv>%
AND ninv = %<invoice.ninv>%]{I} = 0
AND
[SELECT COUNT(*)
FROM incomeinvoice
WHERE idinvkind = %<invoice.idinvkind>%
AND yinv = %<invoice.yinv>%
AND ninv = %<invoice.ninv>%]{I} = 0
OR
(%<invoice.idreg>% = &<invoice.idreg>&)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA001','1','D','invoicedetail','S','S','S','N','N',{ts '2005-12-20 16:15:23.563'},'''INFORMATICA''','L''importo del documento IVA %<idinvkind>% %<ninv>%/%<yinv>% è minore dei movimenti di entrata/spesa che lo contabilizzano','N','--post
isnull([(SELECT ISNULL(AVG(residual),0) FROM invoiceavailable 
WHERE 
invoiceavailable.idinvkind = %<invoicedetail.idinvkind>% AND
invoiceavailable.ninv = %<invoicedetail.ninv>% AND
invoiceavailable.yinv = %<invoicedetail.yinv>%) ]{N},0)>=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA006','1','D','invoicedetail','S','S','S','N','N',{ts '2011-03-29 15:41:40.250'},'sa','Righe di dettaglio assenti! Impossibile salvare il documento IVA %<idinvkind>% %<yinv>% %<ninv>%','N','--post
(
	[SELECT count(*) 
	from invoicedetail
	where idinvkind = %<invoicedetail.idinvkind>%
	and yinv = %<invoicedetail.yinv>%
	and ninv = %<invoicedetail.ninv>%
	]{I} <> 0
)
OR
(
	[SELECT count(*) 
	from invoice
	where idinvkind = %<invoicedetail.idinvkind>%
	and yinv = %<invoicedetail.yinv>%
	and ninv = %<invoicedetail.ninv>%
	]{I} = 0
)
OR
[SELECT isnull(idinvkind_real, 0)
FROM invoice
WHERE idinvkind = %<invoicedetail.idinvkind>%
AND yinv = %<invoicedetail.yinv>%
AND ninv = %<invoicedetail.ninv>%]{I}<>0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA011','2','D','invoicedetail','S','S','S','N','N',{ts '2013-03-25 13:32:37.630'},'sa','Operazione Impossibile, la liquidazione IVA del periodo che comprende la data di registrazione %<invoice.adate>% è stata effettuata.','N','[SELECT COUNT(*)
FROM invoicedeferred
WHERE idinvkind = %<invoicedetail.idinvkind>%
	AND yinv = %<invoicedetail.yinv>%
	AND ninv = %<invoicedetail.ninv>%]{I}
= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA019','1','D','invoicedetail','S','S','S','N','N',{ts '2006-12-13 13:10:10.797'},'''SARA''','L''importo del movimento che contabilizza la fattura  %<invoicedetail.idinvkind>%  %<invoicedetail.ninv>% / %<invoicedetail.yinv>% è diverso dalla somma dei dettagli associati','N','(
%<invoicedetail.idinc_iva>% is null AND
%<invoicedetail.idinc_taxable>% is null AND
%<invoicedetail.idexp_iva>% is null AND
%<invoicedetail.idexp_taxable>% is null 
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','1','D','invoicedetail','S','S','S','N','N',{ts '2011-03-07 16:26:35.717'},'sa','Non si può rimuovere un dettaglio della fattura  se il periodo della liquidazione è trascorso.','S','(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM paymenttransmission
JOIN payment
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
JOIN expenselast
	ON payment.kpay = expenselast.kpay
WHERE expenselast.idexp = &<invoicedetail.idexp_taxable>& 
	AND transmissiondate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay 
		WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag&1) <>0     ), {d ''1900-01-01''} )
		
),0)
]{I} = 0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM paymenttransmission
JOIN payment
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
JOIN expenselast
	ON payment.kpay = expenselast.kpay
WHERE expenselast.idexp = &<invoicedetail.idexp_taxable>& 
	AND transmissiondate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay 
		WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag&2)<>0     ), {d ''1900-01-01''})
		
),0)
]{I} = 0
)
OR

( &<invoicedetail.idexp_taxable>& IS NULL  )






')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','2','D','invoicedetail','S','S','S','N','N',{ts '2011-03-07 16:27:53.640'},'sa','Non si può rimuovere un dettaglio della fattura  se il periodo della liquidazione è trascorso.','S','(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM paymenttransmission
JOIN payment
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
JOIN expenselast
	ON payment.kpay = expenselast.kpay
WHERE expenselast.idexp = &<invoicedetail.idexp_iva>& 
	AND transmissiondate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay 
		WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag&1)<> 0    ), {d ''1900-01-01''} )
		
),0)
]{I} = 0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM paymenttransmission
JOIN payment
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
JOIN expenselast
	ON payment.kpay = expenselast.kpay
WHERE expenselast.idexp = &<invoicedetail.idexp_iva>& 
	AND transmissiondate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay 
		WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag&2)<> 0      ), {d ''1900-01-01''})
		
),0)
]{I} = 0
)
OR

( &<invoicedetail.idexp_iva>& IS NULL  )






')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','3','D','invoicedetail','S','S','S','N','N',{ts '2011-03-07 16:28:46.063'},'sa','Non si può rimuovere un dettaglio della fattura  se il periodo della liquidazione è trascorso.','S','(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM proceeds
jOIN incomelast
	ON proceeds.kpro = incomelast.kpro
WHERE incomelast.idinc =&<invoicedetail.idinc_taxable>&
	AND adate <= 
		ISNULL((SELECT  MAX (stop) 
				FROM ivapay WHERE yivapay>=%<sys_esercizio>%
				AND  (ivapay.flag &1) <>0   ), {d ''1900-01-01''})

),0)
]{I} = 0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM proceeds
jOIN incomelast
	ON proceeds.kpro = incomelast.kpro
WHERE incomelast.idinc =&<invoicedetail.idinc_taxable>&
	AND adate <= 
		ISNULL((SELECT  MAX (stop) 
				FROM ivapay WHERE yivapay>=%<sys_esercizio>%
				AND  (ivapay.flag &2) <>0 ), {d ''1900-01-01''})

),0)
]{I} = 0
)
OR
(  &<invoicedetail.idinc_taxable>& IS NULL  )





')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','4','D','invoicedetail','S','S','S','N','N',{ts '2011-03-07 16:29:29.280'},'sa','Non si può rimuovere un dettaglio della fattura  se il periodo della liquidazione è trascorso.','S','(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM proceeds
jOIN incomelast
	ON proceeds.kpro = incomelast.kpro
WHERE incomelast.idinc =&<invoicedetail.idinc_iva>&
	AND adate <= 
		ISNULL((SELECT  MAX (stop) 
				FROM ivapay WHERE yivapay>=%<sys_esercizio>%
				AND  (ivapay.flag &1) <>0   ), {d ''1900-01-01''})

),0)
]{I} = 0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM proceeds
jOIN incomelast
	ON proceeds.kpro = incomelast.kpro
WHERE incomelast.idinc =&<invoicedetail.idinc_iva>&
	AND adate <= 
		ISNULL((SELECT  MAX (stop) 
				FROM ivapay WHERE yivapay>=%<sys_esercizio>%
				AND  (ivapay.flag &2) <>0  ), {d ''1900-01-01''})

),0)
]{I} = 0
)
OR
(  &<invoicedetail.idinc_iva>& IS NULL  )




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI013','1','I','invoicedetail','S','S','S','N','N',{ts '2006-10-31 09:19:30.280'},'''SA''','L''IVA detraibile  dei dettagli fatture associati al dettaglio  n. %<invoicedetail.manrownum>% dell''ordine %<invoicedetail.idmankind>%,  %<invoicedetail.yman>% / %<invoicedetail.nman>%,  deve essere uguale all''IVA detraibile  totale dei carichi cespite/accessori ad esso collegati.','N','(%<invoicedetail.idmankind>% IS NULL)
OR
(
[SELECT ISNULL(residual,0)
FROM mandatedetailavailable
WHERE idmankind = %<invoicedetail.idmankind>%
AND yman = %<invoicedetail.yman>%
AND nman = %<invoicedetail.nman>%
AND idgroup = [select idgroup from mandatedetail 
						where idmankind = %<invoicedetail.idmankind>% 
						AND yman = %<invoicedetail.yman>%
						AND nman = %<invoicedetail.nman>%
					AND rownum = %<invoicedetail.manrownum>%
			]{N}
]{N}
--AND rownum = %<invoicedetail.manrownum>%]{N}
> 0
)

OR
(
isnull(
[SELECT SUM(ISNULL(abatable,0))
FROM assetacquire
WHERE idmankind = %<invoicedetail.idmankind>%
AND yman = %<invoicedetail.yman>%
AND nman = %<invoicedetail.nman>%
AND rownum = [select idgroup from mandatedetail 
						where idmankind = %<invoicedetail.idmankind>% 
						AND yman = %<invoicedetail.yman>%
						AND nman = %<invoicedetail.nman>%
					AND rownum = %<invoicedetail.manrownum>%
			]{N}
]{N},0) 
--and rownum = %<invoicedetail.manrownum>%]{N} 
=
isnull(
[SELECT SUM(
	ROUND((ISNULL(invoicedetail.tax,0) - ISNULL(invoicedetail.unabatable,0))
		* invoicekindyearview.abatablerate,2))
FROM invoicedetail
JOIN invoicekindyearview
	ON invoicedetail.idinvkind = invoicekindyearview.idinvkind
	AND invoicedetail.yinv = invoicekindyearview.ayear
JOIN mandatedetail
	ON invoicedetail.idmankind = mandatedetail.idmankind
	AND invoicedetail.yman = mandatedetail.yman
	AND invoicedetail.nman = mandatedetail.nman
	AND invoicedetail.manrownum = mandatedetail.rownum
WHERE invoicedetail.idmankind = %<invoicedetail.idmankind>%
AND invoicedetail.yman = %<invoicedetail.yman>%
AND invoicedetail.nman = %<invoicedetail.nman>%
AND mandatedetail.idgroup = [(select idgroup from mandatedetail 
						where idmankind = %<invoicedetail.idmankind>% 
						AND yman = %<invoicedetail.yman>%
						AND nman = %<invoicedetail.nman>%
					AND rownum = %<invoicedetail.manrownum>%
			]{N}

--AND manrownum = %<invoicedetail.manrownum>%
]{N},0)
)

OR 
(
[SELECT COUNT(*)
FROM mandatedetail
WHERE idmankind = %<invoicedetail.idmankind>%
AND yman = %<invoicedetail.yman>%
AND nman = %<invoicedetail.nman>%
AND idgroup = [(select idgroup from mandatedetail 
						where idmankind = %<invoicedetail.idmankind>% 
						AND yman = %<invoicedetail.yman>%
						AND nman = %<invoicedetail.nman>%
					AND rownum = %<invoicedetail.manrownum>%
			]{N}

--AND rownum = %<invoicedetail.manrownum>%
AND mandatedetail.assetkind =''S'']{N}
> 0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI014','1','I','invoicedetail','S','S','S','N','N',{ts '2006-10-27 10:27:00.030'},'''SA''','L''IVA detraibile  dei dettagli fatture associati al dettaglio  n. %<invoicedetail.manrownum>% dell''ordine %<invoicedetail.idmankind>%,  %<invoicedetail.yman>% / %<invoicedetail.nman>%,  deve essere maggiore o uguale dell''IVA detraibile  totale dei carichi cespite/accessori ad esso collegati.','N','(%<invoicedetail.idmankind>% IS NULL
)
OR
(
[SELECT ISNULL(residual,0)
FROM mandatedetailavailable
WHERE idmankind = %<invoicedetail.idmankind>%
AND yman = %<invoicedetail.yman>%
AND nman = %<invoicedetail.nman>%
AND idgroup = [select idgroup from mandatedetail 
						where idmankind = %<invoicedetail.idmankind>% 
						AND yman = %<invoicedetail.yman>%
						AND nman = %<invoicedetail.nman>%
					AND rownum = %<invoicedetail.manrownum>%
			]{N}
]{N}
--AND rownum = %<invoicedetail.manrownum>%]{N} 
= 0
)
OR
(
[SELECT SUM(ISNULL(abatable,0))
FROM assetacquire
WHERE idmankind = %<invoicedetail.idmankind>%
AND yman = %<invoicedetail.yman>%
AND nman = %<invoicedetail.nman>%
AND rownum = [select idgroup from mandatedetail 
						where idmankind = %<invoicedetail.idmankind>% 
						AND yman = %<invoicedetail.yman>%
						AND nman = %<invoicedetail.nman>%
					AND rownum = %<invoicedetail.manrownum>%
			]{N}
]{N} 
--AND rownum = %<invoicedetail.manrownum>%]{N} 
<=
[SELECT SUM(
	ROUND((ISNULL(invoicedetail.tax,0) - ISNULL(invoicedetail.unabatable,0))
		* invoicekindyearview.abatablerate,2))
FROM invoicedetail
JOIN invoicekindyearview
	ON invoicedetail.idinvkind = invoicekindyearview.idinvkind
	AND invoicedetail.yinv = invoicekindyearview.ayear
JOIN mandatedetail
	ON invoicedetail.idmankind = mandatedetail.idmankind
	AND invoicedetail.yman = mandatedetail.yman
	AND invoicedetail.nman = mandatedetail.nman
	AND invoicedetail.manrownum = mandatedetail.rownum
WHERE invoicedetail.idmankind = %<invoicedetail.idmankind>%
AND invoicedetail.yman = %<invoicedetail.yman>%
AND invoicedetail.nman = %<invoicedetail.nman>%
--AND rownum = %<invoicedetail.manrownum>%
AND mandatedetail.idgroup = [(select idgroup from mandatedetail 
						where idmankind = %<invoicedetail.idmankind>% 
						AND yman = %<invoicedetail.yman>%
						AND nman = %<invoicedetail.nman>%
					AND rownum = %<invoicedetail.manrownum>%
			]{N}
]{N}
)

OR 
(
[SELECT COUNT(*)
FROM mandatedetail
WHERE idmankind = %<invoicedetail.idmankind>%
AND yman = %<invoicedetail.yman>%
AND nman = %<invoicedetail.nman>%
AND idgroup = [(select idgroup from mandatedetail 
						where idmankind = %<invoicedetail.idmankind>% 
						AND yman = %<invoicedetail.yman>%
						AND nman = %<invoicedetail.nman>%
					AND rownum = %<invoicedetail.manrownum>%
			]{N}
--AND rownum = %<invoicedetail.manrownum>%
AND mandatedetail.assetkind =''S'']{N}
> 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA013','1','I','invoicedetail','S','S','S','N','N',{ts '2012-03-16 09:45:32.327'},'sa','Bisogna specificare la data inizio e la data fine competenza per il dettaglio fattura n.  %<rownum>%  e descrizione %<invoicedetail.detaildescription>%  perchè collegato ad un conto di costo.','S','(
	%<invoicedetail.idaccmotive>% IS NULL
)
OR
(
	[select count(*) from account 
	join accmotivedetail 
	on 	accmotivedetail.idacc = account.idacc 
	and   accmotivedetail.ayear = %<sys_esercizio>%
	where accmotivedetail.idaccmotive = 
		%<invoicedetail.idaccmotive>%
	and isnull(flagcompetency,''N'') = ''S'' 
	]{I} = 0
)
OR
(
	%<invoicedetail.competencystart>% IS NOT NULL
	AND %<invoicedetail.competencystop>% IS NOT NULL
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA007','1','I','invoicedetail','S','S','S','N','N',{ts '2005-12-23 09:17:21.280'},'''INFORMATICA''','La data inizio e la data fine per il dettaglio fattura n.  %<rownum>%  e descrizione %<invoicedetail.detaildescription>%  sono obbligatorie perchè collegato ad un dettaglio ordine di tipo "servizio".','S','(
	%<invoicedetail.idmankind>% IS NULL
	AND %<invoicedetail.manrownum>% IS NULL
	AND %<invoicedetail.yman>% IS NULL
	AND %<invoicedetail.nman>% IS NULL
)
OR
(
	[SELECT assetkind FROM mandatedetail
	WHERE mandatedetail.idmankind = %<invoicedetail.idmankind>%
	AND mandatedetail.yman = %<invoicedetail.yman>%
	AND mandatedetail.nman = %<invoicedetail.nman>%
	AND mandatedetail.rownum = %<invoicedetail.manrownum>%
	]{C} <> ''S''
)
OR
(
	%<invoicedetail.competencystart>% IS NOT NULL
	AND %<invoicedetail.competencystop>% IS NOT NULL
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA008','1','I','invoicedetail','S','S','S','N','N',{ts '2013-06-19 10:55:51.417'},'assistenza','Quantità della riga ordine Eserc. %<invoicedetail.yman>% Num.  %<invoicedetail.nman>% Riga %<invoicedetail.manrownum>% minore della somma delle quantità dei dettagli fatture collegati.','N','(%<invoicedetail.idmankind>% IS NULL AND
%<invoicedetail.manrownum>% IS NULL AND
%<invoicedetail.yman>% IS NULL AND 
%<invoicedetail.nman>% IS NULL)
OR
(
[SELECT  isnull(number,0)
  FROM mandatedetail
  WHERE mandatedetail.idmankind = %<invoicedetail.idmankind>%
  AND mandatedetail.yman = %<invoicedetail.yman>%
  AND mandatedetail.nman = %<invoicedetail.nman>%
  AND mandatedetail.rownum = %<invoicedetail.manrownum>%
]{N} >= 
ISNULL(
	[SELECT SUM(iv.number)
	  FROM (SELECT DISTINCT invoicedetail.idinvkind, invoicedetail.yinv, invoicedetail.ninv,invoicedetail.idgroup as invidgroup,
				      invoicedetail.number,invoicedetail.idmankind,invoicedetail.yman,invoicedetail.nman,
				      mandatedetail.idgroup as manidgroup
		FROM invoicedetail 
                          JOIN mandatedetail 
		    ON invoicedetail.idmankind = mandatedetail.idmankind AND
		          invoicedetail.yman = mandatedetail.yman AND
	                      invoicedetail.nman = mandatedetail.nman AND
		          invoicedetail.manrownum = mandatedetail.rownum 
		    WHERE  invoicedetail.idmankind = %<invoicedetail.idmankind>% AND
	                              invoicedetail.yman = %<invoicedetail.yman>% AND
		                  invoicedetail.nman = %<invoicedetail.nman>% AND
			      invoicedetail.manrownum =  %<invoicedetail.manrownum>% 
			) AS iv ] {N}   

,0)
)


	')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA008','2','I','invoicedetail','S','S','S','N','N',{ts '2013-06-19 10:55:07.703'},'assistenza','Quantità della riga contratto Eserc. %<invoicedetail.yestim>%  Num.%<invoicedetail.nestim>% Riga: %<invoicedetail.estimrownum>% minore della somma delle quantità dei dettagli fatture collegati.','N','(%<invoicedetail.idestimkind>% IS NULL AND
%<invoicedetail.estimrownum>% IS NULL AND
%<invoicedetail.yestim>% IS NULL AND 
%<invoicedetail.nestim>% IS NULL)
OR
(
[SELECT isnull(number,0)
  FROM estimatedetail
  WHERE estimatedetail.idestimkind = %<invoicedetail.idestimkind>%
  AND estimatedetail.yestim = %<invoicedetail.yestim>%
  AND estimatedetail.nestim = %<invoicedetail.nestim>%
  AND estimatedetail.rownum = %<invoicedetail.estimrownum>%
]{N} >=
ISNULL(
	[SELECT SUM(iv.number)
	  FROM (SELECT DISTINCT invoicedetail.idinvkind, invoicedetail.yinv, invoicedetail.ninv,invoicedetail.idgroup as invidgroup,
				      invoicedetail.number,invoicedetail.idestimkind,invoicedetail.yestim,invoicedetail.nestim,
				      estimatedetail.idgroup as estimidgroup
		FROM invoicedetail 
                          JOIN estimatedetail
		    ON invoicedetail.idestimkind = estimatedetail.idestimkind AND
		          invoicedetail.yestim= estimatedetail.yestim AND
	                      invoicedetail.nestim = estimatedetail.nestim AND
		          invoicedetail.estimrownum = estimatedetail.rownum 
		    WHERE  invoicedetail.idestimkind= %<invoicedetail.idestimkind>% AND
	                              invoicedetail.yestim= %<invoicedetail.yestim>% AND
		                  invoicedetail.nestim = %<invoicedetail.nestim>% AND
			      invoicedetail.estimrownum = %<invoicedetail.estimrownum>% 
			) AS iv ] {N}   

,0)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA011','1','I','invoicedetail','S','S','S','N','N',{ts '2013-03-25 16:06:21.937'},'sa','Attenzione, la liquidazione IVA del periodo che comprende la data di registrazione %<invoice.adate>% è stata effettuata. Se si procede bisognerà effettuare una nuova liquidazione.','N','-- controllo che la fattura in base alla data di registrazione 
-- non ricada in una liquidazione IVA già effettuata 
( 
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[select count(*) from ivapay where
 [SELECT adate
FROM invoice
WHERE idinvkind = %<invoicedetail.idinvkind>%
AND yinv = %<invoicedetail.yinv>%
AND ninv = %<invoicedetail.ninv>%]{D}   between ivapay.start and ivapay.stop
 and (ivapay.flag&1)<>0  ]{I}=0
)

OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0
AND
[select count(*) from ivapay where
 [SELECT adate
FROM invoice
WHERE idinvkind = %<invoicedetail.idinvkind>%
AND yinv = %<invoicedetail.yinv>%
AND ninv = %<invoicedetail.ninv>%]{D}   between ivapay.start and ivapay.stop
 and (ivapay.flag&2)<>0  ]{I}=0 )
OR
[SELECT flagdeferred
FROM invoice
WHERE idinvkind = %<invoicedetail.idinvkind>%
AND yinv = %<invoicedetail.yinv>%
AND ninv = %<invoicedetail.ninv>%]{C} = ''S''
OR
-- dettagli splittati, gli importi dei dettagli originali vengono preservati
[select count(*) from invoicedetail where
     idinvkind  = %<invoicedetail.idinvkind>% and   
     yinv =  %<invoicedetail.yinv>% and
     ninv =  %<invoicedetail.ninv>% and
     idgroup =  %<invoicedetail.idgroup>%]{I} >1
-- aggiungere la condizione che non sia rilevante ai fini iva
OR
-- istituzionali non intracom, queste devono essere escluse dalla regola
[SELECT COUNT(*)
FROM ivaregisterkind
JOIN ivaregister
	ON ivaregister.idivaregisterkind = ivaregisterkind.idivaregisterkind
JOIN invoice
	ON invoice.idinvkind = ivaregister.idinvkind
	AND invoice.yinv = ivaregister.yinv
	AND invoice.ninv = ivaregister.ninv
WHERE ISNULL(flagintracom,''N'') = ''N''
AND ivaregisterkind.flagactivity = 1
AND invoice.idinvkind = %<invoicedetail.idinvkind>%
AND invoice.yinv = %<invoicedetail.yinv>%
AND invoice.ninv = %<invoicedetail.ninv>%
]{I}>0










')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA012','1','I','invoicedetail','S','S','S','N','N',{ts '2010-03-22 10:40:45.170'},'SARA','L''importo dell''IVA sul dettaglio  n. %<invoicedetail.rownum>% della fattura  di tipo %<invoicekind.description>%,  %<invoicedetail.yinv>% / %<invoicedetail.ninv>%, deve essere pari a zero perchè la fattura è in valuta diversa dall''Euro.','N','(
ISNULL(
 [SELECT codecurrency FROM invoice
JOIN currency
ON currency.idcurrency = invoice.idcurrency
WHERE 
 idinvkind = %<invoicedetail.idinvkind>%   and
 yinv = %<invoicedetail.yinv>%  and
 ninv =  %<invoicedetail.ninv>% ]{C},'''') = ''EUR''
)
OR
(
 ISNULL(%<invoicedetail.tax>%, 0) = 0 
)


-- il controllo agisce se la fattura è semplice, ossia non è intracom.
OR

[SELECT ISNULL(flagintracom,''N'') FROM invoice
WHERE 
idinvkind = %<invoicedetail.idinvkind>% AND
yinv = %<invoicedetail.yinv>% AND
ninv = %<invoicedetail.ninv>%]{C}
<> ''N''')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA012','2','I','invoicedetail','S','S','S','N','N',{ts '2010-03-22 11:21:30.250'},'SARA','L''importo dell''IVA indetraibile sul dettaglio  n. %<invoicedetail.rownum>% della fattura  di tipo  %<invoicekind.description>%,  %<invoicedetail.yinv>% / %<invoicedetail.ninv>%, deve essere pari a zero perchè la fattura è in valuta diversa dall''Euro.','N','(
ISNULL(
 [SELECT codecurrency FROM invoice
JOIN currency
ON currency.idcurrency = invoice.idcurrency
WHERE 
 idinvkind = %<invoicedetail.idinvkind>%   and
 yinv = %<invoicedetail.yinv>%  and
 ninv =  %<invoicedetail.ninv>% ]{C},'''') = ''EUR''
)

OR

(
 ISNULL(%<invoicedetail.unabatable>%, 0) = 0 
)

-- il controllo agisce se la fattura è semplice, ossia non è intracom.
OR

[SELECT ISNULL(flagintracom,''N'') FROM invoice
WHERE 
idinvkind = %<invoicedetail.idinvkind>% AND
yinv = %<invoicedetail.yinv>% AND
ninv = %<invoicedetail.ninv>%]{C}
<> ''N''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA017','1','I','invoicedetail','S','S','S','N','N',{ts '2012-02-07 10:09:01.417'},'sa','Le quantità dei dettagli fatture collegati a righe di Contratto Passivo aventi lo  stesso raggruppamento devo essere  uguali.','N','(%<invoicedetail.idmankind>% IS NULL AND
%<invoicedetail.manrownum>% IS NULL AND
%<invoicedetail.yman>% IS NULL AND 
%<invoicedetail.nman>% IS NULL )
 
OR 
( ISNULL(
[SELECT COUNT(*)
FROM  invoicedetail ivd2
JOIN mandatedetail man2
	ON ivd2.idmankind = man2.idmankind
	AND ivd2.yman = man2.yman
	AND ivd2.nman = man2.nman
	AND ivd2.manrownum = man2.rownum
WHERE ivd2.idinvkind = %<invoicedetail.idinvkind>%
	AND ivd2.yinv = %<invoicedetail.yinv>%
	AND ivd2.ninv = %<invoicedetail.ninv>%	
	AND ivd2.manrownum <> %<invoicedetail.manrownum>%
	and ivd2.number<>%<invoicedetail.number>%

	and man2.idgroup= 
	[select idgroup from mandatedetail where 
		idmankind=%<invoicedetail.idmankind>% AND
		yman=%<invoicedetail.yman>% AND
		nman=%<invoicedetail.nman>% AND
		rownum=%<invoicedetail.manrownum>% ]{I}
	and man2.idmankind=%<invoicedetail.idmankind>% 
	and man2.yman=%<invoicedetail.yman>% 
	and man2.nman=%<invoicedetail.nman>% 
		
]{I},0)=0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA017','2','I','invoicedetail','S','S','S','N','N',{ts '2012-02-07 14:04:56.937'},'sara','Le quantità dei dettagli fatture collegati a righe di Contratto Attivo aventi lo  stesso raggruppamento devo essere  uguali.','N','(%<invoicedetail.idestimkind>% IS NULL AND
%<invoicedetail.estimrownum>% IS NULL AND
%<invoicedetail.yestim>% IS NULL AND 
%<invoicedetail.nestim>% IS NULL )
 
OR 
( ISNULL(
[SELECT COUNT(*)
FROM invoicedetail ivd2
JOIN estimatedetail estim2
	ON ivd2.idestimkind = estim2.idestimkind
	AND ivd2.yestim = estim2.yestim
	AND ivd2.nestim = estim2.nestim
	AND ivd2.estimrownum = estim2.rownum
WHERE ivd2.idinvkind = %<invoicedetail.idinvkind>%
	AND ivd2.yinv = %<invoicedetail.yinv>%
	AND ivd2.ninv = %<invoicedetail.ninv>%
	AND ivd2.estimrownum <> %<invoicedetail.estimrownum>%
	and ivd2.number<>%<invoicedetail.number>%
	AND estim2.idgroup=[select idgroup from estimatedetail where 
		idestimkind=%<invoicedetail.idestimkind>% AND
		yestim=%<invoicedetail.yestim>% AND
		nestim=%<invoicedetail.nestim>% AND
		rownum=%<invoicedetail.estimrownum>% ]{I}
	and estim2.idestimkind=%<invoicedetail.idestimkind>% 
	and estim2.yestim=%<invoicedetail.yestim>% 
	and estim2.nestim=%<invoicedetail.nestim>% 
]{I},0)=0
)



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA025','1','I','invoicedetail','S','S','S','N','N',{ts '2008-02-01 10:04:12.000'},'SARA','SE si sta volutamente fatturando PARTE del dettaglio #%<invoicedetail.manrownum>% del contratto passivo %<invoicedetail.idmankind>%  %<invoicedetail.yman>% / %<invoicedetail.nman>%,  e si intende proseguire in seguito a fatturare il RESTO del dettaglio, allora ignorare questo messaggio. Altrimenti è indispensabile ANNULLARE questa operazione, procedere alla variazione del dettaglio del contratto e SUCCESSIVAMENTE associarlo ad una fattura.','N','(%<invoicedetail.idmankind>% IS NULL AND
%<invoicedetail.manrownum>% IS NULL AND
%<invoicedetail.yman>% IS NULL AND 
%<invoicedetail.nman>% IS NULL)
OR
(
[SELECT ISNULL(residual,0) 
 FROM mandatedetailtoinvoice iv
 WHERE iv.idmankind = %<invoicedetail.idmankind>%
 AND iv.yman = %<invoicedetail.yman>%
 AND iv.nman = %<invoicedetail.nman>%
 AND iv.rownum = %<invoicedetail.manrownum>%
]{N} <= 0
)


	')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA025','2','I','invoicedetail','S','S','S','N','N',{ts '2008-02-01 10:04:21.313'},'SARA','SE si sta volutamente fatturando PARTE del dettaglio #%<invoicedetail.estimrownum>% del contratto attivo %<invoicedetail.idestimkind>%   %<invoicedetail.yestim>% /%<invoicedetail.nestim>%, e si intende proseguire in seguito a fatturare il RESTO del dettaglio, allora ignorare questo messaggio. Altrimenti è indispensabile ANNULLARE questa operazione, procedere alla variazione del dettaglio del contratto e SUCCESSIVAMENTE associarlo ad una fattura.','N','(%<invoicedetail.idestimkind>% IS NULL AND
%<invoicedetail.estimrownum>% IS NULL AND
%<invoicedetail.yestim>% IS NULL AND 
%<invoicedetail.nestim>% IS NULL)
OR
(
[SELECT ISNULL(residual,0) 
 FROM estimatedetailtoinvoice iv
 WHERE iv.idestimkind = %<invoicedetail.idestimkind>%
 AND iv.yestim = %<invoicedetail.yestim>%
 AND iv.nestim = %<invoicedetail.nestim>%
 AND iv.rownum = %<invoicedetail.estimrownum>%
]{N} <= 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA026','1','I','invoicedetail','S','S','S','N','N',{ts '2008-02-01 11:52:20.170'},'SARA','Non si può modificare la fattura perchè contabilizzata con una operazione del Fondo Economale.','S','(
	[SELECT count(*) 
	from pettycashoperationinvoice
	where idinvkind = %<invoicedetail.idinvkind>%
	and yinv = %<invoicedetail.yinv>%
	and ninv = %<invoicedetail.ninv>%
	]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','1','I','invoicedetail','S','S','S','N','N',{ts '2011-03-07 16:31:18.967'},'sa','Non si può contabilizzare l''IVA di una fattura  se il periodo della liquidazione è trascorso.','N','-- da rivedere
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM paymenttransmission
JOIN payment
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
JOIN expenselast
	ON payment.kpay = expenselast.kpay
WHERE expenselast.idexp = %<invoicedetail.idexp_iva>% 
	AND transmissiondate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
			AND  (ivapay.flag &1) <>0  ), {d ''1900-01-01''})
),0)
]{I} = 0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM paymenttransmission
JOIN payment
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
JOIN expenselast
	ON payment.kpay = expenselast.kpay
WHERE expenselast.idexp = %<invoicedetail.idexp_iva>% 
	AND transmissiondate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &2) <>0   ), {d ''1900-01-01''})
),0)
]{I} = 0
)
OR
(  %<invoicedetail.idexp_iva>% IS NULL  )




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','2','I','invoicedetail','S','S','S','N','N',{ts '2011-03-07 16:31:55.860'},'sa','Non si può contabilizzare l''imponibile di una fattura  se il periodo della liquidazione è trascorso.','N','-- da rivedere
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM paymenttransmission
JOIN payment
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
JOIN expenselast
	ON payment.kpay = expenselast.kpay
WHERE expenselast.idexp = %<invoicedetail.idexp_taxable>% 
	AND transmissiondate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &1) <>0  ), {d ''1900-01-01''})
),0)
]{I} = 0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM paymenttransmission
JOIN payment
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
JOIN expenselast
	ON payment.kpay = expenselast.kpay
WHERE expenselast.idexp = %<invoicedetail.idexp_taxable>% 
	AND transmissiondate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &2) <>0      ), {d ''1900-01-01''})
),0)
]{I} = 0
)
OR
(  %<invoicedetail.idexp_taxable>% IS NULL  )








')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','3','I','invoicedetail','S','S','S','N','N',{ts '2011-03-07 16:32:35.360'},'sa','Non si può contabilizzare l''IVA di una fattura  se il periodo della liquidazione è trascorso.','N','(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM proceeds
jOIN incomelast
	ON proceeds.kpro = incomelast.kpro
WHERE incomelast.idinc =%<invoicedetail.idinc_iva>%
	AND adate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &1) <>0 ) , {d ''1900-01-01''} )

),0)
]{I} = 0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM proceeds
jOIN incomelast
	ON proceeds.kpro = incomelast.kpro
WHERE incomelast.idinc =%<invoicedetail.idinc_iva>%
	AND adate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &2) <>0), {d ''1900-01-01''} )

),0)
]{I} = 0
)
OR
(  %<invoicedetail.idinc_iva>% IS NULL  )



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','4','I','invoicedetail','S','S','S','N','N',{ts '2012-07-18 11:34:52.187'},'sara','Non si può contabilizzare l''imponibile di una fattura se il periodo della liquidazione è trascorso.','N','(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM proceeds
jOIN incomelast
	ON proceeds.kpro = incomelast.kpro
WHERE incomelast.idinc =%<invoicedetail.idinc_taxable>%
	AND adate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &1) <>0  ), {d ''1900-01-01''} )

),0)
]{I} = 0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM proceeds
jOIN incomelast
	ON proceeds.kpro = incomelast.kpro
WHERE incomelast.idinc =%<invoicedetail.idinc_taxable>%
	AND adate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &2) <>0      ), {d ''1900-01-01''} )

),0)
]{I} = 0
)
OR

(  %<invoicedetail.idinc_taxable>% IS NULL  )



')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA037','1','I','invoicedetail','S','S','S','N','N',{ts '2012-11-23 16:39:37.103'},'sa','E'' necessario specificare le informazioni per il quadro VF24','S','isnull([SELECT flagva3 from config where ayear=%<sys_esercizio>%]{C},''N'')=''N''

OR

isnull([SELECT flagva3 from config where ayear=%<sys_esercizio>%]{C},''N'')=''S''

OR

%<invoicedetail.va3type>% is not null

OR

[SELECT COUNT(*) FROM ivaregisterkind IK 
	join invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
	where 
		 IKR.idinvkind=%<invoicedetail.idinvkind>%
		AND IK.registerclass=''A''
		AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} =0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA037','2','I','invoicedetail','S','S','S','N','N',{ts '2012-11-23 16:49:23.643'},'sa','E'' necessario specificare le informazioni per il quadro VF24','S','isnull([SELECT flagva3 from config where ayear=%<sys_esercizio>%]{C},''N'')=''N''

OR

isnull([SELECT flagva3 from config where ayear=%<sys_esercizio>%]{C},''N'')=''X''

OR

%<invoicedetail.va3type>% is not null

OR

[SELECT COUNT(*) FROM ivaregisterkind IK 
	join invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
	where 
		 IKR.idinvkind=%<invoicedetail.idinvkind>%
		AND IK.registerclass=''A''
		AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} =0
OR
[SELECT COUNT(*) FROM ivakind IVK
	WHERE 
		 IVK.idivakind=%<invoicedetail.idivakind>%
		AND ((ISNULL(IVK.flag,0) & 1) = 0) 		
]{I} =0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA038','1','I','invoicedetail','S','S','S','N','N',{ts '2010-10-22 16:23:49.670'},'sara','Per il dettaglio fattura  %<invoicedetail.detaildescription>% associato ad aliquota IVA commerciale o promiscua  è obbligatorio specificare nella scheda "Comunicazioni" se si tratta di bene o servizio, ai fini della comunicazione all''Agenzia delle Entrate delle operazioni con paesi a fiscalità privilegiata.','N','--post
ISNULL(%<invoicedetail.flag>%,2) <> 2
OR
[SELECT isnull(invoice.flag, 2)
FROM invoice
WHERE invoice.idinvkind = %<invoicedetail.idinvkind>%
AND invoice.yinv = %<invoicedetail.yinv>%
AND invoice.ninv = %<invoicedetail.ninv>%]{I} <> 0
OR
[SELECT COUNT(*) FROM ivaregisterkind IK 
	join invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
	where 
		 IKR.idinvkind=%<invoicedetail.idinvkind>%
		AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} =0
-- oppure il tipo iva è istituzionale
OR
[SELECT COUNT(*) FROM ivakind IVK
	WHERE 
		 IVK.idivakind=%<invoicedetail.idivakind>%
		AND ((ISNULL(IVK.flag,0) & 1) = 0) 		
]{I} =0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA040','1','I','invoicedetail','S','S','S','N','N',{ts '2012-01-31 16:58:05.640'},'sa','Specificare i dati per il Modello INTRA-12 nei dettagli fattura .','N','-- Fattura Intracom/Extra UE
[SELECT isnull(flagintracom, ''N'')
FROM invoice
WHERE idinvkind = %<invoicedetail.idinvkind>%
AND yinv = %<invoicedetail.yinv>%
AND ninv = %<invoicedetail.ninv>%]{C}=''N''

OR
%<invoicedetail.intra12operationkind>% is not null

-- Fattura di Acquisto
OR
(select flag
from invoicekind
where idinvkind=%<invoicedetail.idinvkind>%)&1<>0

-- Fattura associata a registro Istituzionale
OR
(SELECT count(*)
FROM ivaregister IR
JOIN ivaregisterkind IRK
	ON IRK.idivaregisterkind = IR.idivaregisterkind
WHERE IR.idinvkind = %<invoicedetail.idinvkind>%
	AND IR.yinv = %<invoicedetail.yinv>%
	AND IR.ninv = %<invoicedetail.ninv>%
	AND IRK.flagactivity = 1	
	AND isnull(IRK.registerclass,''X'')<>''P''
	) = 0



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA040','2','I','invoicedetail','S','S','S','N','N',{ts '2011-02-16 13:11:19.467'},'sara','Specificare i dati per il Modello INTRA nei dettagli fattura .','N','-- Fattura Intracom
[SELECT isnull(flagintracom, ''N'')
FROM invoice
WHERE idinvkind = %<invoicedetail.idinvkind>%
AND yinv = %<invoicedetail.yinv>%
AND ninv = %<invoicedetail.ninv>%]{C}<>''S''

OR
%<invoicedetail.intrastatoperationkind>% is not null

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ002','1','I','invoicedetail','S','S','S','N','N',{ts '2010-07-13 14:46:28.203'},'SA','Il listino del dettaglio n. %<invoicedetail.idgroup>% e descrizione " %<invoicedetail.detaildescription>%  " non può essere modificato perchè collegato al dettaglio ordine N. %<invoicedetail.yman>% / %<invoicedetail.nman>% / %<invoicedetail.manrownum>%','N','( %<invoicedetail.idlist>% IS NULL )

OR

( %<invoicedetail.idmankind>% IS NULL )

OR

([SELECT count(*)
FROM mandatedetail
WHERE idmankind = %<invoicedetail.idmankind>% 
AND yman = %<invoicedetail.yman>% 
AND nman = %<invoicedetail.nman>% 
AND rownum = %<invoicedetail.manrownum>%
AND idlist is not null]{I}=0)

OR

 ISNULL(%<invoicedetail.idlist>%,0)
 = ISNULL(
([SELECT idlist
FROM mandatedetail
WHERE idmankind = %<invoicedetail.idmankind>% 
AND yman = %<invoicedetail.yman>% 
AND nman = %<invoicedetail.nman>% 
AND rownum = %<invoicedetail.manrownum>%]{I})
,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ002','2','I','invoicedetail','S','S','S','N','N',{ts '2010-07-14 11:07:20.267'},'SA','La quantità deve essere maggione di zero.','N','%<invoicedetail.npackage>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ007','1','I','invoicedetail','S','S','S','N','N',{ts '2010-07-09 16:39:39.937'},'SA','Valorizzare il Tipo IVA e l'' Imponibile del dettaglio fattura N.%<invoicedetail.rownum>%.','N','isnull(%<invoicedetail.idivakind>%,0) <> 0

OR

%<invoicedetail.taxable>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ008','1','I','invoicedetail','S','S','S','N','N',{ts '2010-07-12 11:30:39.750'},'SA','La fattura è di tipo "non accompagnatoria", pertanto il dettaglio %<invoicedetail.rownum>% deve essere collegato ad una bolla di ingresso registrata in magazzino. 
Se non vi è una bolla a cui collegare il dettaglio, esso dovrà essere inserito in una fattura "accompagnatoria".','N','%<invoicedetail.idlist>% IS NULL
OR
[SELECT isnull(flag_ddt, ''N'')
FROM invoice
WHERE idinvkind = %<invoicedetail.idinvkind>%
AND yinv = %<invoicedetail.yinv>%
AND ninv = %<invoicedetail.ninv>%]{C}=''N''
OR
[(SELECT COUNT(*) FROM stock
WHERE idinvkind = %<invoicedetail.idinvkind>%
AND yinv = %<invoicedetail.yinv>%
AND ninv = %<invoicedetail.ninv>%
AND inv_idgroup = %<invoicedetail.idgroup>%
AND idddt_in is not null
)]{I}<>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI013','1','U','invoicedetail','S','S','S','N','N',{ts '2006-10-30 09:24:57.187'},'''SA''','L''IVA detraibile  dei dettagli fatture associati al dettaglio  n. %<invoicedetail.manrownum>% dell''ordine %<invoicedetail.idmankind>%,  %<invoicedetail.yman>% / %<invoicedetail.nman>%,  deve essere uguale all''IVA detraibile  totale dei carichi cespite/accessori ad esso collegati.','N','(%<invoicedetail.idmankind>% IS NULL)
OR
(
ISNULL(%<invoicedetail.tax>%,0) = ISNULL(&<invoicedetail.tax>&,0)
AND
ISNULL(%<invoicedetail.unabatable>%,0) = ISNULL(&<invoicedetail.unabatable>&,0)
AND
%<invoicedetail.number>%=&<invoicedetail.number>&
)

OR
(
[SELECT ISNULL(residual,0)
FROM mandatedetailavailable
WHERE idmankind = %<invoicedetail.idmankind>%
AND yman = %<invoicedetail.yman>%
AND nman = %<invoicedetail.nman>%
AND idgroup = [select idgroup from mandatedetail 
						where idmankind = %<invoicedetail.idmankind>% 
						AND yman = %<invoicedetail.yman>%
						AND nman = %<invoicedetail.nman>%
					AND rownum = %<invoicedetail.manrownum>%
			]{N}
]{N}
> 0
)

OR
(
isnull([SELECT SUM(ISNULL(abatable,0))
FROM assetacquire
WHERE idmankind = %<invoicedetail.idmankind>%
AND yman = %<invoicedetail.yman>%
AND nman = %<invoicedetail.nman>%
AND rownum = [select idgroup from mandatedetail 
						where idmankind = %<invoicedetail.idmankind>% 
						AND yman = %<invoicedetail.yman>%
						AND nman = %<invoicedetail.nman>%
					AND rownum = %<invoicedetail.manrownum>%
			]{N}
]{N} ,0)

--	%<invoicedetail.manrownum>%]{N} 
=
isnull(
[SELECT SUM(
	ROUND((ISNULL(invoicedetail.tax,0) - ISNULL(invoicedetail.unabatable,0))
		* invoicekindyearview.abatablerate,2))
FROM invoicedetail
JOIN invoicekindyearview
	ON invoicedetail.idinvkind = invoicekindyearview.idinvkind
	AND invoicedetail.yinv = invoicekindyearview.ayear
JOIN mandatedetail
	ON invoicedetail.idmankind = mandatedetail.idmankind
	AND invoicedetail.yman = mandatedetail.yman
	AND invoicedetail.nman = mandatedetail.nman
	AND invoicedetail.manrownum = mandatedetail.rownum
WHERE invoicedetail.idmankind = %<invoicedetail.idmankind>%
AND invoicedetail.yman = %<invoicedetail.yman>%
AND invoicedetail.nman = %<invoicedetail.nman>%
AND mandatedetail.idgroup = [(select idgroup from mandatedetail 
						where idmankind = %<invoicedetail.idmankind>% 
						AND yman = %<invoicedetail.yman>%
						AND nman = %<invoicedetail.nman>%
					AND rownum = %<invoicedetail.manrownum>%
			]{N}
--%<invoicedetail.manrownum>%
]{N},0)
)
 		
OR 
(
[SELECT COUNT(*)
FROM mandatedetail
WHERE idmankind = %<invoicedetail.idmankind>%
AND yman = %<invoicedetail.yman>%
AND nman = %<invoicedetail.nman>%
AND idgroup = [(select idgroup from mandatedetail 
						where idmankind = %<invoicedetail.idmankind>% 
						AND yman = %<invoicedetail.yman>%
						AND nman = %<invoicedetail.nman>%
					AND rownum = %<invoicedetail.manrownum>%
			]{N}
--AND rownum = %<invoicedetail.manrownum>%
AND mandatedetail.assetkind =''S'']{N}
> 0
)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI014','1','U','invoicedetail','S','S','S','N','N',{ts '2006-10-30 09:48:09.627'},'''SA''','L''IVA detraibile  dei dettagli fatture associati al dettaglio  n. %<invoicedetail.manrownum>% dell''ordine %<invoicedetail.idmankind>%,  %<invoicedetail.yman>% / %<invoicedetail.nman>%,  deve essere maggiore o uguale dell''IVA detraibile  totale dei carichi cespite/accessori ad esso collegati.','N','(%<invoicedetail.idmankind>% IS NULL
)
OR

(
ISNULL(%<invoicedetail.tax>%,0) = ISNULL(&<invoicedetail.tax>&,0)
AND
ISNULL(%<invoicedetail.unabatable>%,0) = ISNULL(&<invoicedetail.unabatable>&,0)
AND
%<invoicedetail.number>%=&<invoicedetail.number>&

)
OR
(
[SELECT ISNULL(residual,0)
FROM mandatedetailavailable
WHERE idmankind = %<invoicedetail.idmankind>%
AND yman = %<invoicedetail.yman>%
AND nman = %<invoicedetail.nman>%
AND idgroup = [select idgroup from mandatedetail 
						where idmankind = %<invoicedetail.idmankind>% 
						AND yman = %<invoicedetail.yman>%
						AND nman = %<invoicedetail.nman>%
					AND rownum = %<invoicedetail.manrownum>%
			]{N}
]{N}
--%<invoicedetail.manrownum>%]{N} 
= 0
)
OR
(
isnull(
[SELECT SUM(ISNULL(abatable,0))
FROM assetacquire
WHERE idmankind = %<invoicedetail.idmankind>%
AND yman = %<invoicedetail.yman>%
AND nman = %<invoicedetail.nman>%
--AND rownum = %<invoicedetail.manrownum>%]{N} 
AND rownum = [select idgroup from mandatedetail 
						where idmankind = %<invoicedetail.idmankind>% 
						AND yman = %<invoicedetail.yman>%
						AND nman = %<invoicedetail.nman>%
					AND rownum = %<invoicedetail.manrownum>%
			]{N}
]{N},0)  
<=
isnull(
[SELECT SUM(
	ROUND((ISNULL(invoicedetail.tax,0) - ISNULL(invoicedetail.unabatable,0))
		* invoicekindyearview.abatablerate,2))
FROM invoicedetail
JOIN invoicekindyearview
	ON invoicedetail.idinvkind = invoicekindyearview.idinvkind
	AND invoicedetail.yinv = invoicekindyearview.ayear
JOIN mandatedetail
	ON invoicedetail.idmankind = mandatedetail.idmankind
	AND invoicedetail.yman = mandatedetail.yman
	AND invoicedetail.nman = mandatedetail.nman
	AND invoicedetail.manrownum = mandatedetail.rownum
WHERE invoicedetail.idmankind = %<invoicedetail.idmankind>%
AND invoicedetail.yman = %<invoicedetail.yman>%
AND invoicedetail.nman = %<invoicedetail.nman>%
AND mandatedetail.idgroup = [(select idgroup from mandatedetail 
						where idmankind = %<invoicedetail.idmankind>% 
						AND yman = %<invoicedetail.yman>%
						AND nman = %<invoicedetail.nman>%
					AND rownum = %<invoicedetail.manrownum>%
			]{N}
]{N},0)
)
OR 
(
[SELECT COUNT(*)
FROM mandatedetail
WHERE idmankind = %<invoicedetail.idmankind>%
AND yman = %<invoicedetail.yman>%
AND nman = %<invoicedetail.nman>%
--AND rownum = %<invoicedetail.manrownum>%
AND idgroup = [(select idgroup from mandatedetail 
						where idmankind = %<invoicedetail.idmankind>% 
						AND yman = %<invoicedetail.yman>%
						AND nman = %<invoicedetail.nman>%
					AND rownum = %<invoicedetail.manrownum>%
			]{N}
AND mandatedetail.assetkind =''S'']{N}
> 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ECOPA013','1','U','invoicedetail','S','S','S','N','N',{ts '2012-03-16 09:49:55.657'},'sa','Bisogna specificare la data inizio e la data fine competenza per il dettaglio fattura n.  %<rownum>%  e descrizione %<invoicedetail.detaildescription>%  perchè collegato ad un conto di costo.','S','isnull(%<invoicedetail.idaccmotive>% ,0) = isnull(&<invoicedetail.idaccmotive>&  ,0) 

OR

(
	%<invoicedetail.idaccmotive>% IS NULL
)
OR
(
	[select count(*) from account 
	join accmotivedetail 
	on accmotivedetail.idacc = account.idacc 
	and   accmotivedetail.ayear = %<sys_esercizio>%
	where accmotivedetail.idaccmotive = 
		%<invoicedetail.idaccmotive>%
	and isnull(flagcompetency,''N'') = ''S'' 
	]{I} = 0
)
OR
(
	%<invoicedetail.competencystart>% IS NOT NULL
	AND %<invoicedetail.competencystop>% IS NOT NULL
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA001','1','U','invoicedetail','S','S','S','N','N',{ts '2005-12-20 16:15:37.267'},'''INFORMATICA''','L''importo del documento IVA %<idinvkind>% %<ninv>%/%<yinv>% è minore dei movimenti di entrata/spesa che lo contabilizzano','N','--post
isnull([(SELECT ISNULL(AVG(residual),0) FROM invoiceavailable 
WHERE 
invoiceavailable.idinvkind = %<invoicedetail.idinvkind>% AND
invoiceavailable.ninv = %<invoicedetail.ninv>% AND
invoiceavailable.yinv = %<invoicedetail.yinv>%) ]{N},0)>=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA008','1','U','invoicedetail','S','S','S','N','N',{ts '2013-06-19 10:56:26.220'},'assistenza','Quantità della riga ordine Eserc. %<invoicedetail.yman>% Num.  %<invoicedetail.nman>% Riga %<invoicedetail.manrownum>% minore della somma delle quantità dei dettagli fatture collegati.','N','(%<invoicedetail.idmankind>% IS NULL AND
%<invoicedetail.manrownum>% IS NULL AND
%<invoicedetail.yman>% IS NULL AND 
%<invoicedetail.nman>% IS NULL)
OR
(
[SELECT isnull(number,0)
  FROM mandatedetail
  WHERE mandatedetail.idmankind = %<invoicedetail.idmankind>%
  AND mandatedetail.yman = %<invoicedetail.yman>%
  AND mandatedetail.nman = %<invoicedetail.nman>%
  AND mandatedetail.rownum = %<invoicedetail.manrownum>%
]{N} >= 
ISNULL(
	[SELECT SUM(iv.number)
	  FROM (SELECT DISTINCT invoicedetail.idinvkind, invoicedetail.yinv, invoicedetail.ninv,invoicedetail.idgroup as invidgroup,
				      invoicedetail.number,invoicedetail.idmankind,invoicedetail.yman,invoicedetail.nman,
				      mandatedetail.idgroup as manidgroup
		FROM invoicedetail 
                          JOIN mandatedetail 
		    ON invoicedetail.idmankind = mandatedetail.idmankind AND
		          invoicedetail.yman = mandatedetail.yman AND
	                      invoicedetail.nman = mandatedetail.nman AND
		          invoicedetail.manrownum = mandatedetail.rownum 
		    WHERE  invoicedetail.idmankind = %<invoicedetail.idmankind>% AND
	                              invoicedetail.yman = %<invoicedetail.yman>% AND
		                  invoicedetail.nman = %<invoicedetail.nman>% AND
			      invoicedetail.manrownum =  %<invoicedetail.manrownum>% 
			) AS iv ] {N}   

,0
)
)
OR
(
isnull(%<invoicedetail.number>%,0) <=
isnull(&<invoicedetail.number>&,0) 
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA008','2','U','invoicedetail','S','S','S','N','N',{ts '2013-06-19 10:48:50.210'},'assistenza','Quantità della riga contratto Eserc. %<invoicedetail.yestim>%  Num.%<invoicedetail.nestim>% Riga: %<invoicedetail.estimrownum>% minore della somma delle quantità dei dettagli fatture collegati.','N','(%<invoicedetail.idestimkind>% IS NULL AND
%<invoicedetail.estimrownum>% IS NULL AND
%<invoicedetail.yestim>% IS NULL AND 
%<invoicedetail.nestim>% IS NULL)
OR
(
[SELECT isnull(number,0)
  FROM estimatedetail
  WHERE estimatedetail.idestimkind = %<invoicedetail.idestimkind>%
  AND estimatedetail.yestim = %<invoicedetail.yestim>%
  AND estimatedetail.nestim = %<invoicedetail.nestim>%
  AND estimatedetail.rownum = %<invoicedetail.estimrownum>%
]{N} >= 

ISNULL(
	[SELECT SUM(iv.number)
	  FROM (SELECT DISTINCT invoicedetail.idinvkind, invoicedetail.yinv, invoicedetail.ninv,invoicedetail.idgroup as invidgroup,
				      invoicedetail.number,invoicedetail.idestimkind,invoicedetail.yestim,invoicedetail.nestim,
				      estimatedetail.idgroup as estimidgroup
		FROM invoicedetail 
                          JOIN estimatedetail
		    ON invoicedetail.idestimkind = estimatedetail.idestimkind AND
		          invoicedetail.yestim= estimatedetail.yestim AND
	                      invoicedetail.nestim = estimatedetail.nestim AND
		          invoicedetail.estimrownum = estimatedetail.rownum 
		    WHERE  invoicedetail.idestimkind= %<invoicedetail.idestimkind>% AND
	                              invoicedetail.yestim= %<invoicedetail.yestim>% AND
		                  invoicedetail.nestim = %<invoicedetail.nestim>% AND
			     invoicedetail.estimrownum= %<invoicedetail.estimrownum>% 
			) AS iv ] {N}   

,0)
)
OR
(
isnull(%<invoicedetail.number>%,0) <=
isnull(&<invoicedetail.number>&,0) 
)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA011','3','U','invoicedetail','S','S','S','N','N',{ts '2013-03-25 16:06:32.373'},'sa','Attenzione, la liquidazione IVA del periodo che comprende la data di registrazione %<invoice.adate>% è stata effettuata. Se si procede bisognerà effettuare una nuova liquidazione.','N','(
	%<invoicedetail.number>% = &<invoicedetail.number>&
	AND %<invoicedetail.taxable>% = &<invoicedetail.taxable>&
	AND ISNULL(%<invoicedetail.tax>%,-99999) = ISNULL(&<invoicedetail.tax>&,-99999)
	AND ISNULL(%<invoicedetail.unabatable>%, -99999) = ISNULL(&<invoicedetail.unabatable>&, -99999) 
	AND %<invoicedetail.idivakind>% = &<invoicedetail.idivakind>&
)
-- controllo che la fattura in base alla data di registrazione 
-- non ricada in una liquidazione IVA già effettuata 
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[select count(*) from ivapay 
where	[(select adate from invoice where idinvkind= %<invoicedetail.idinvkind>%
		and yinv = %<invoicedetail.yinv>%
		and ninv = %<invoicedetail.ninv>%)]{D}
	 between ivapay.start and ivapay.stop
 and (ivapay.flag&1)<>0  ]{I}=0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0
AND
[select count(*) from ivapay 
where [(select adate from invoice where idinvkind= %<invoicedetail.idinvkind>%
		and yinv = %<invoicedetail.yinv>%
		and ninv = %<invoicedetail.ninv>%)]{D}
	between ivapay.start and ivapay.stop
 and (ivapay.flag&2)<>0  ]{I}=0 )
OR
[SELECT flagdeferred
FROM invoice
WHERE idinvkind = %<invoicedetail.idinvkind>%
AND yinv = %<invoicedetail.yinv>%
AND ninv = %<invoicedetail.ninv>%]{C} = ''S''
OR 
-- dettagli splittati, è possibile modificare gli importi perchè 
-- i valori del dettaglio originale sono preservati
[select count(*) from invoicedetail where
     idinvkind  = %<invoicedetail.idinvkind>% and   
     yinv =  %<invoicedetail.yinv>% and
     ninv =  %<invoicedetail.ninv>% and
     idgroup =  %<invoicedetail.idgroup>%]{I} >1
-- aggiungere la condizione che non sia rilevante ai fini iva
OR
-- istituzionali non intracom, queste devono essere escluse dalla regola
[SELECT COUNT(*)
FROM ivaregisterkind
JOIN ivaregister
	ON ivaregister.idivaregisterkind = ivaregisterkind.idivaregisterkind
JOIN invoice
	ON invoice.idinvkind = ivaregister.idinvkind
	AND invoice.yinv = ivaregister.yinv
	AND invoice.ninv = ivaregister.ninv
WHERE ISNULL(flagintracom,''N'') = ''N''
AND ivaregisterkind.flagactivity = 1
AND invoice.idinvkind = %<invoicedetail.idinvkind>%
AND invoice.yinv = %<invoicedetail.yinv>%
AND invoice.ninv = %<invoicedetail.ninv>%
]{I}>0



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA012','1','U','invoicedetail','S','S','S','N','N',{ts '2010-03-22 10:41:02.813'},'SARA','L''importo dell''IVA sul dettaglio  n. %<invoicedetail.rownum>% della fattura   di tipo  %<invoicekind.description>%,  %<invoicedetail.yinv>% / %<invoicedetail.ninv>%, deve essere pari a zero perchè la fattura è in valuta diversa dall''Euro.','N','(
ISNULL(%<invoicedetail.tax>%, 0) = 
ISNULL(&<invoicedetail.tax>&, 0) 
)
OR
(
ISNULL(
[SELECT codecurrency FROM invoice
JOIN currency
	ON currency.idcurrency = invoice.idcurrency
WHERE idinvkind = %<invoicedetail.idinvkind>%
	AND yinv = %<invoicedetail.yinv>%
	AND ninv =  %<invoicedetail.ninv>%]{C}
,'''') = ''EUR''
)
OR
(
 ISNULL(%<invoicedetail.tax>%, 0) = 0 
)

-- il controllo agisce se la fattura è semplice, ossia non è intracom.
OR

[SELECT ISNULL(flagintracom,''N'') FROM invoice
WHERE 
idinvkind = %<invoicedetail.idinvkind>% AND
yinv = %<invoicedetail.yinv>% AND
ninv = %<invoicedetail.ninv>%]{C}
<> ''N''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA012','2','U','invoicedetail','S','S','S','N','N',{ts '2010-03-22 11:21:37.267'},'SARA','L''importo dell''IVA indetraibile sul dettaglio  n. %<invoicedetail.rownum>% della fattura di tipo   %<invoicekind.description>%,  %<invoicedetail.yinv>% / %<invoicedetail.ninv>%, deve essere pari a zero perchè la fattura è in valuta diversa dall''Euro.','N','(
ISNULL(%<invoicedetail.unabatable>%, 0) = 
ISNULL(&<invoicedetail.unabatable>&, 0) 
)
OR
(
ISNULL(
 [SELECT codecurrency FROM invoice
JOIN currency
ON currency.idcurrency = invoice.idcurrency
WHERE 
 idinvkind = %<invoicedetail.idinvkind>%   and
 yinv = %<invoicedetail.yinv>%  and
 ninv =  %<invoicedetail.ninv>% ]{C}
,'''') = ''EUR''
)
OR
(
 ISNULL(%<invoicedetail.unabatable>%, 0) = 0 
)
-- il controllo agisce se la fattura è semplice, ossia non è intracom.
OR

[SELECT ISNULL(flagintracom,''N'') FROM invoice
WHERE 
idinvkind = %<invoicedetail.idinvkind>% AND
yinv = %<invoicedetail.yinv>% AND
ninv = %<invoicedetail.ninv>%]{C}
<> ''N''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA017','1','U','invoicedetail','S','S','S','N','N',{ts '2012-02-07 13:58:33.297'},'sara','Le quantità dei dettagli fatture collegati a righe di Contratto Passivo aventi lo  stesso raggruppamento devo essere  uguali.','N','(%<invoicedetail.idmankind>% IS NULL AND
%<invoicedetail.manrownum>% IS NULL AND
%<invoicedetail.yman>% IS NULL AND 
%<invoicedetail.nman>% IS NULL )
OR 
(
%<invoicedetail.number>% = &<invoicedetail.number>&
)
 
OR 
( ISNULL(
[SELECT COUNT(*)
FROM  invoicedetail ivd2
JOIN mandatedetail man2
	ON ivd2.idmankind = man2.idmankind
	AND ivd2.yman = man2.yman
	AND ivd2.nman = man2.nman
	AND ivd2.manrownum = man2.rownum
WHERE ivd2.idinvkind = %<invoicedetail.idinvkind>%
	AND ivd2.yinv = %<invoicedetail.yinv>%
	AND ivd2.ninv = %<invoicedetail.ninv>%	
	AND ivd2.manrownum <> %<invoicedetail.manrownum>%
	and ivd2.number<>%<invoicedetail.number>%

	and man2.idgroup= 
	[select idgroup from mandatedetail where 
		idmankind=%<invoicedetail.idmankind>% AND
		yman=%<invoicedetail.yman>% AND
		nman=%<invoicedetail.nman>% AND
		rownum=%<invoicedetail.manrownum>% ]{I}
	and man2.idmankind=%<invoicedetail.idmankind>% 
	and man2.yman=%<invoicedetail.yman>% 
	and man2.nman=%<invoicedetail.nman>% 
		
]{I},0)=0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA017','2','U','invoicedetail','S','S','S','N','N',{ts '2012-02-07 14:05:22.297'},'sara','Le quantità dei dettagli fatture collegati a righe di Contratto Attivo aventi lo  stesso raggruppamento devo essere  uguali.','N','(%<invoicedetail.idestimkind>% IS NULL AND
%<invoicedetail.estimrownum>% IS NULL AND
%<invoicedetail.yestim>% IS NULL AND 
%<invoicedetail.nestim>% IS NULL )
 OR 
(
%<invoicedetail.number>% = &<invoicedetail.number>&
)
OR 
( ISNULL(
[SELECT COUNT(*)
FROM invoicedetail ivd2
JOIN estimatedetail estim2
	ON ivd2.idestimkind = estim2.idestimkind
	AND ivd2.yestim = estim2.yestim
	AND ivd2.nestim = estim2.nestim
	AND ivd2.estimrownum = estim2.rownum
WHERE ivd2.idinvkind = %<invoicedetail.idinvkind>%
	AND ivd2.yinv = %<invoicedetail.yinv>%
	AND ivd2.ninv = %<invoicedetail.ninv>%
	AND ivd2.estimrownum <> %<invoicedetail.estimrownum>%
	and ivd2.number<>%<invoicedetail.number>%
	AND estim2.idgroup=[select idgroup from estimatedetail where 
		idestimkind=%<invoicedetail.idestimkind>% AND
		yestim=%<invoicedetail.yestim>% AND
		nestim=%<invoicedetail.nestim>% AND
		rownum=%<invoicedetail.estimrownum>% ]{I}
	and estim2.idestimkind=%<invoicedetail.idestimkind>% 
	and estim2.yestim=%<invoicedetail.yestim>% 
	and estim2.nestim=%<invoicedetail.nestim>% 
]{I},0)=0
)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA020','1','U','invoicedetail','S','S','S','N','N',{ts '2007-11-20 15:51:13.517'},'NINO','Il documento IVA %<invoicedetail.idinvkind>%  %<invoicedetail.ninv>% /%<invoicedetail.yinv>%  ha già una contabilizzazione generica associata. Non si può aggiungere  una contabilizzazione specifica del dettaglio %<invoicedetail.detaildescription>%.','N','([SELECT flag
from invoicekind where
idinvkind = %<invoicedetail.idinvkind>% 
]{I} & 1) <> 0
OR
(
	ISNULL(&<invoicedetail.idexp_taxable>&,0) = ISNULL(%<invoicedetail.idexp_taxable>%,0)
	AND ISNULL(&<invoicedetail.idexp_iva>&,0) = ISNULL(%<invoicedetail.idexp_iva>%,0)
)
OR
(&<invoicedetail.idexp_taxable>& is not null and %<invoicedetail.idexp_taxable>% is null)
OR
(&<invoicedetail.idexp_iva>& is not null and %<invoicedetail.idexp_iva>% is null)
OR
(&<invoicedetail.idexp_taxable>& is null and %<invoicedetail.idexp_taxable>% is not null
AND
[SELECT COUNT(expenseinvoice.idexp) 
FROM 	expenseinvoice
WHERE expenseinvoice.idinvkind = %<invoicedetail.idinvkind>% 
AND 	expenseinvoice.yinv = %<invoicedetail.yinv>% 
AND 	expenseinvoice.ninv = %<invoicedetail.ninv>% 
AND   expenseinvoice.idexp < %<invoicedetail.idexp_taxable>%
AND 	NOT  EXISTS 
	(SELECT * 
	FROM	invoicedetail
	WHERE invoicedetail.idinvkind = %<invoicedetail.idinvkind>% 
	AND 	invoicedetail.yinv = %<invoicedetail.yinv>% 
	AND 	invoicedetail.ninv = %<invoicedetail.ninv>% 
	AND   (invoicedetail.idexp_taxable = expenseinvoice.idexp OR
		invoicedetail.idexp_iva = expenseinvoice.idexp) 
	)
]{I} = 0
)
OR
(&<invoicedetail.idexp_iva>& is null and %<invoicedetail.idexp_iva>% is not null
AND
[SELECT COUNT(expenseinvoice.idexp) 
FROM 	expenseinvoice
WHERE expenseinvoice.idinvkind = %<invoicedetail.idinvkind>% 
AND 	expenseinvoice.yinv = %<invoicedetail.yinv>% 
AND 	expenseinvoice.ninv = %<invoicedetail.ninv>% 
AND   expenseinvoice.idexp < %<invoicedetail.idexp_iva>%
AND 	NOT  EXISTS 
	(SELECT * 
	FROM	invoicedetail
	WHERE invoicedetail.idinvkind = %<invoicedetail.idinvkind>% 
	AND 	invoicedetail.yinv = %<invoicedetail.yinv>% 
	AND 	invoicedetail.ninv = %<invoicedetail.ninv>% 
	AND   (invoicedetail.idexp_taxable = expenseinvoice.idexp OR
		invoicedetail.idexp_iva = expenseinvoice.idexp) 
	)
]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA020','2','U','invoicedetail','S','S','S','N','N',{ts '2007-11-20 15:51:00.233'},'NINO','Il documento IVA %<invoicedetail.idinvkind>%  %<invoicedetail.ninv>% /%<invoicedetail.yinv>%  ha già una contabilizzazione generica associata. Non si può aggiungere  una contabilizzazione specifica del dettaglio %<invoicedetail.detaildescription>%.','N','([SELECT flag 
from invoicekind where
idinvkind = %<invoicedetail.idinvkind>% 
]{I} & 1) = 0
OR
(
	ISNULL(&<invoicedetail.idinc_taxable>&,0) = ISNULL(%<invoicedetail.idinc_taxable>%,0)
	AND ISNULL(&<invoicedetail.idinc_iva>&,0) = ISNULL(%<invoicedetail.idinc_iva>%,0)
)
OR
(&<invoicedetail.idinc_taxable>& is not null and %<invoicedetail.idinc_taxable>% is null)
OR
(&<invoicedetail.idinc_iva>& is not null and %<invoicedetail.idinc_iva>% is null)
OR
(&<invoicedetail.idinc_taxable>& is null and %<invoicedetail.idinc_taxable>% is not null
AND
[SELECT COUNT(incomeinvoice.idinc) 
FROM 	incomeinvoice
WHERE incomeinvoice.idinvkind = %<invoicedetail.idinvkind>% 
AND 	incomeinvoice.yinv = %<invoicedetail.yinv>% 
AND 	incomeinvoice.ninv = %<invoicedetail.ninv>% 
AND   incomeinvoice.idinc< %<invoicedetail.idinc_taxable>%
AND 	NOT  EXISTS 
	(SELECT * 
	FROM	invoicedetail
	WHERE invoicedetail.idinvkind = %<invoicedetail.idinvkind>% 
	AND 	invoicedetail.yinv = %<invoicedetail.yinv>% 
	AND 	invoicedetail.ninv = %<invoicedetail.ninv>% 
	AND   (invoicedetail.idinc_taxable = incomeinvoice.idinc OR
		invoicedetail.idinc_iva = incomeinvoice.idinc) 
	)
]{I} = 0
)
OR
(&<invoicedetail.idinc_iva>& is null and %<invoicedetail.idinc_iva>% is not null
AND
[SELECT COUNT(incomeinvoice.idinc) 
FROM 	incomeinvoice
WHERE incomeinvoice.idinvkind = %<invoicedetail.idinvkind>% 
AND 	incomeinvoice.yinv = %<invoicedetail.yinv>% 
AND 	incomeinvoice.ninv = %<invoicedetail.ninv>% 
AND   incomeinvoice.idinc< %<invoicedetail.idinc_iva>%
AND 	NOT  EXISTS 
	(SELECT * 
	FROM	invoicedetail
	WHERE invoicedetail.idinvkind = %<invoicedetail.idinvkind>% 
	AND 	invoicedetail.yinv = %<invoicedetail.yinv>% 
	AND 	invoicedetail.ninv = %<invoicedetail.ninv>% 
	AND   (invoicedetail.idinc_taxable = incomeinvoice.idinc OR
		invoicedetail.idinc_iva = incomeinvoice.idinc) 
	)
]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA022','1','U','invoicedetail','S','S','S','N','N',{ts '2009-01-20 12:27:16.447'},'SA','Il dettaglio fattura deve avere una causale di contabilizzazione congura con quella del contratto passivo','N','%<invoicedetail.idmankind>% IS NULL
OR
%<invoicedetail.idexp_iva>% IS NULL
OR
[SELECT idexp_iva
FROM mandatedetail
WHERE idmankind = %<invoicedetail.idmankind>%
AND yman = %<invoicedetail.yman>%
AND nman = %<invoicedetail.nman>%
AND rownum = %<invoicedetail.manrownum>%]{I} IS NULL
OR
[SELECT idexp_iva
FROM mandatedetail
WHERE idmankind = %<invoicedetail.idmankind>%
AND yman = %<invoicedetail.yman>%
AND nman = %<invoicedetail.nman>%
AND rownum = %<invoicedetail.manrownum>%]{I} =
[SELECT idparent
FROM expenselink
WHERE idchild = %<invoicedetail.idexp_iva>%
AND nlevel = %<sys_mandatephase>%]{I}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA022','2','U','invoicedetail','S','S','S','N','N',{ts '2009-01-20 12:27:30.930'},'SA','Il dettaglio fattura deve avere una causale di contabilizzazione congura con quella del contratto passivo','N','%<invoicedetail.idmankind>% IS NULL
OR
%<invoicedetail.idexp_taxable>% IS NULL
OR
[SELECT idexp_taxable
FROM mandatedetail
WHERE idmankind = %<invoicedetail.idmankind>%
AND yman = %<invoicedetail.yman>%
AND nman = %<invoicedetail.nman>%
AND rownum = %<invoicedetail.manrownum>%]{I} IS NULL
OR
[SELECT idexp_taxable
FROM mandatedetail
WHERE idmankind = %<invoicedetail.idmankind>%
AND yman = %<invoicedetail.yman>%
AND nman = %<invoicedetail.nman>%
AND rownum = %<invoicedetail.manrownum>%]{I} =
[SELECT idparent
FROM expenselink
WHERE idchild = %<invoicedetail.idexp_taxable>%
AND nlevel = %<sys_mandatephase>%]{I}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA022','3','U','invoicedetail','S','S','S','N','N',{ts '2009-01-20 12:27:34.010'},'SA','Il dettaglio fattura deve avere una causale di contabilizzazione congura con quella del contratto attivo','N','%<invoicedetail.idestimkind>% IS NULL
OR
%<invoicedetail.idinc_iva>% IS NULL
OR
[SELECT idinc_iva
FROM estimatedetail
WHERE idestimkind = %<invoicedetail.idestimkind>%
AND yestim = %<invoicedetail.yestim>%
AND nestim = %<invoicedetail.nestim>%
AND rownum = %<invoicedetail.estimrownum>%]{I} IS NULL
OR
[SELECT idinc_iva
FROM estimatedetail
WHERE idestimkind = %<invoicedetail.idestimkind>%
AND yestim = %<invoicedetail.yestim>%
AND nestim = %<invoicedetail.nestim>%
AND rownum = %<invoicedetail.estimrownum>%]{I} =
[SELECT idparent
FROM incomelink
WHERE idchild = %<invoicedetail.idinc_iva>%
AND nlevel = %<sys_estimatephase>%]{I}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA022','4','U','invoicedetail','S','S','S','N','N',{ts '2009-01-20 12:27:37.260'},'SA','Il dettaglio fattura deve avere una causale di contabilizzazione congura con quella del contratto attivo','N','%<invoicedetail.idestimkind>% IS NULL
OR
%<invoicedetail.idinc_taxable>% IS NULL
OR
[SELECT idinc_taxable
FROM estimatedetail
WHERE idestimkind = %<invoicedetail.idestimkind>%
AND yestim = %<invoicedetail.yestim>%
AND nestim = %<invoicedetail.nestim>%
AND rownum = %<invoicedetail.estimrownum>%]{I} IS NULL
OR
[SELECT idinc_taxable
FROM estimatedetail
WHERE idestimkind = %<invoicedetail.idestimkind>%
AND yestim = %<invoicedetail.yestim>%
AND nestim = %<invoicedetail.nestim>%
AND rownum = %<invoicedetail.estimrownum>%]{I} =
[SELECT idparent
FROM incomelink
WHERE idchild = %<invoicedetail.idinc_taxable>%
AND nlevel = %<sys_estimatephase>%]{I}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA025','1','U','invoicedetail','S','S','S','N','N',{ts '2008-02-01 10:04:31.047'},'SARA','SE si sta volutamente diminuendo la quantità di un dettaglio fattura associato al dettaglio #%<invoicedetail.manrownum>% del contratto passivo %<invoicedetail.idmankind>%   %<invoicedetail.yman>% /%<invoicedetail.nman>%, e si intende proseguire in seguito a fatturare il RESTO del dettaglio, allora ignorare questo messaggio. Altrimenti è indispensabile ANNULLARE questa operazione, procedere alla variazione del dettaglio del contratto e SUCCESSIVAMENTE associarlo ad una fattura','N','(%<invoicedetail.idmankind>% IS NULL  AND
%<invoicedetail.manrownum>% IS NULL AND
%<invoicedetail.yman>% IS NULL AND 
%<invoicedetail.nman>% IS NULL)
OR
(
[SELECT ISNULL(residual,0) 
 FROM mandatedetailtoinvoice iv
 WHERE iv.idmankind = %<invoicedetail.idmankind>%
 AND iv.yman = %<invoicedetail.yman>%
 AND iv.nman = %<invoicedetail.nman>%
 AND iv.rownum = %<invoicedetail.manrownum>%
]{N} <= 0
)
OR
(
isnull(%<invoicedetail.number>%,0) =
isnull(&<invoicedetail.number>&,0) 
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA025','2','U','invoicedetail','S','S','S','N','N',{ts '2008-02-01 10:04:42.030'},'SARA','SE si sta volutamente diminuendo la quantità di un dettaglio fattura relativo al dettaglio #%<invoicedetail.estimrownum>% del contratto attivo %<invoicedetail.idestimkind>%   %<invoicedetail.yestim>% /%<invoicedetail.nestim>%,  e si intende proseguire in seguito a fatturare il resto del dettaglio, allora ignorare questo messaggio. Altrimenti è indispensabile ANNULLARE questa operazione, procedere alla variazione del dettaglio del contratto e SUCCESSIVAMENTE associarlo ad una fattura','N','(%<invoicedetail.idestimkind>% IS NULL  AND
%<invoicedetail.estimrownum>% IS NULL AND
%<invoicedetail.yestim>% IS NULL AND 
%<invoicedetail.nestim>% IS NULL)
OR
(
[SELECT ISNULL(residual,0) 
 FROM estimatedetailtoinvoice iv
 WHERE iv.idestimkind = %<invoicedetail.idestimkind>%
 AND iv.yestim = %<invoicedetail.yestim>%
 AND iv.nestim = %<invoicedetail.nestim>%
 AND iv.rownum = %<invoicedetail.estimrownum>%
]{N} <= 0
)
OR
(
isnull(%<invoicedetail.number>%,0) =
isnull(&<invoicedetail.number>&,0) 
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA026','1','U','invoicedetail','S','S','S','N','N',{ts '2008-02-01 11:49:26.030'},'SARA','Non si possono modificare i dettagli della fattura perchè essa è stata contabilizzata con una operazione del Fondo Economale.','N','(
	[SELECT count(*) 
	from pettycashoperationinvoice
	where idinvkind = %<invoicedetail.idinvkind>%
	and yinv = %<invoicedetail.yinv>%
	and ninv = %<invoicedetail.ninv>%
	]{I} = 0
)
OR
(
isnull(&<invoicedetail.taxable>&,0) = isnull(%<invoicedetail.taxable>%,0)
AND
isnull(&<invoicedetail.tax>&,0) = isnull(%<invoicedetail.tax>%,0)
AND
isnull(&<invoicedetail.unabatable>&,0) = isnull(%<invoicedetail.unabatable>%,0)
AND
isnull(&<invoicedetail.number>&,0) = isnull(%<invoicedetail.number>%,0)
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','1','U','invoicedetail','S','S','S','N','N',{ts '2012-07-18 11:34:06.530'},'sara','Non si può rimuovere la contabilizzare dell''IVA della fattura  perchè il movimento che lo contabilizzava supera il periodo della liquidazione.','N','(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM paymenttransmission
JOIN payment
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
JOIN expenselast
	ON payment.kpay = expenselast.kpay
WHERE expenselast.idexp = &<invoicedetail.idexp_iva>& 
	AND transmissiondate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &1) <>0      ), {d ''1900-01-01''} )
),0)
]{I} = 0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM paymenttransmission
JOIN payment
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
JOIN expenselast
	ON payment.kpay = expenselast.kpay
WHERE expenselast.idexp = &<invoicedetail.idexp_iva>& 
	AND transmissiondate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &2) <>0    ), {d ''1900-01-01''} )
),0)
]{I} = 0
)
OR
( isnull(%<invoicedetail.idexp_iva>%,0)=isnull(&<invoicedetail.idexp_iva>&,0)  )






')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','2','U','invoicedetail','S','S','S','N','N',{ts '2012-07-18 11:34:13.827'},'sara','Non si può rimuovere la contabilizzare dell''Imponibile della fattura  perchè il movimento che lo contabilizzava supera il periodo della liquidazione.','N','(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM paymenttransmission
JOIN payment
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
JOIN expenselast
	ON payment.kpay = expenselast.kpay
WHERE expenselast.idexp = &<invoicedetail.idexp_taxable>& 
	AND transmissiondate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &1) <>0     )
		, {d ''1900-01-01''})
),0)
]{I} = 0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM paymenttransmission
JOIN payment
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
JOIN expenselast
	ON payment.kpay = expenselast.kpay
WHERE expenselast.idexp = &<invoicedetail.idexp_taxable>& 
	AND transmissiondate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &2) <>0   )
		, {d ''1900-01-01''})
),0)
]{I} = 0
)
OR
(isnull(%<invoicedetail.idexp_taxable>%,0) = isnull( &<invoicedetail.idexp_taxable>& ,0) )

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','3','U','invoicedetail','S','S','S','N','N',{ts '2011-03-07 16:34:31.327'},'sa','Non si può modificare la contabilizzare dell''Imponibile di una fattura  perchè il nuovo movimento che lo contabilizza supera il periodo della liquidazione.','N','(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM paymenttransmission
JOIN payment
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
JOIN expenselast
	ON payment.kpay = expenselast.kpay
WHERE expenselast.idexp = %<invoicedetail.idexp_taxable>% 
	AND transmissiondate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &1) <>0   )
		, {d ''1900-01-01''} )
),0)
]{I} = 0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM paymenttransmission
JOIN payment
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
JOIN expenselast
	ON payment.kpay = expenselast.kpay
WHERE expenselast.idexp = %<invoicedetail.idexp_taxable>% 
	AND transmissiondate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &2) <>0    )
		, {d ''1900-01-01''} )
),0)
]{I} = 0
)
OR
( isnull(%<invoicedetail.idexp_taxable>%,0)=isnull(&<invoicedetail.idexp_taxable>&,0)  )


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','4','U','invoicedetail','S','S','S','N','N',{ts '2011-03-07 16:36:10.640'},'sa','Non si può modificare la contabilizzare dell''IVA di una fattura  perchè il nuovo movimento che lo contabilizza supera il periodo della liquidazione.','N','(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM paymenttransmission
JOIN payment
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
JOIN expenselast
	ON payment.kpay = expenselast.kpay
WHERE expenselast.idexp = %<invoicedetail.idexp_iva>% 
	AND transmissiondate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &1) <>0    )
		, {d ''1900-01-01''})
),0)
]{I} = 0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM paymenttransmission
JOIN payment
	ON paymenttransmission.kpaymenttransmission = payment.kpaymenttransmission
JOIN expenselast
	ON payment.kpay = expenselast.kpay
WHERE expenselast.idexp = %<invoicedetail.idexp_iva>% 
	AND transmissiondate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &2) <>0     )
		, {d ''1900-01-01''})
),0)
]{I} = 0
)
OR
( isnull(%<invoicedetail.idexp_iva>%,0) = isnull(&<invoicedetail.idexp_iva>&,0)  )




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','5','U','invoicedetail','S','S','S','N','N',{ts '2011-03-07 16:36:38.767'},'sa','Non si può rimuovere la contabilizzare dell''IVA di una fattura  perchè il movimento che lo contabilizzava supera il periodo della liquidazione.','N','(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM proceeds
jOIN incomelast
	ON proceeds.kpro = incomelast.kpro
WHERE incomelast.idinc = &<invoicedetail.idinc_iva>&
	AND adate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &1) <>0    )
		, {d ''1900-01-01''} )

),0)
]{I} = 0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM proceeds
jOIN incomelast
	ON proceeds.kpro = incomelast.kpro
WHERE incomelast.idinc = &<invoicedetail.idinc_iva>&
	AND adate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &2) <>0    )
		, {d ''1900-01-01''} )

),0)
]{I} = 0
)
OR
( isnull(%<invoicedetail.idinc_iva>%,0) = isnull(&<invoicedetail.idinc_iva>&,0)  )








')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','6','U','invoicedetail','S','S','S','N','N',{ts '2011-03-07 16:37:07.420'},'sa','Non si può rimuovere la contabilizzare dell''Imponibile di una fattura  perchè il movimento che lo contabilizzava supera il periodo della liquidazione.','N','(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM proceeds
jOIN incomelast
	ON proceeds.kpro = incomelast.kpro
WHERE incomelast.idinc = &<invoicedetail.idinc_taxable>&
	AND adate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &1) <>0    )
		, {d ''1900-01-01''})

),0)
]{I} = 0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM proceeds
jOIN incomelast
	ON proceeds.kpro = incomelast.kpro
WHERE incomelast.idinc = &<invoicedetail.idinc_taxable>&
	AND adate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &2) <>0    )
		, {d ''1900-01-01''})

),0)
]{I} = 0
)
OR
( isnull(%<invoicedetail.idinc_taxable>%,0) = isnull(&<invoicedetail.idinc_taxable>&,0)  )












')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','7','U','invoicedetail','S','S','S','N','N',{ts '2011-03-07 16:37:29.890'},'sa','Non si può modificare la contabilizzare dell''Imponibile di una fattura  perchè il nuovo movimento che lo contabilizza supera il periodo della liquidazione.','N','(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM proceeds
jOIN incomelast
	ON proceeds.kpro = incomelast.kpro
WHERE incomelast.idinc = %<invoicedetail.idinc_taxable>%
	AND adate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &1) <>0    )
		, {d ''1900-01-01''})

),0)
]{I} = 0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM proceeds
jOIN incomelast
	ON proceeds.kpro = incomelast.kpro
WHERE incomelast.idinc = %<invoicedetail.idinc_taxable>%
	AND adate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &2) <>0    )
		, {d ''1900-01-01''})

),0)
]{I} = 0
)
OR
( isnull(%<invoicedetail.idinc_taxable>%,0) = isnull(&<invoicedetail.idinc_taxable>&,0)  )
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','8','U','invoicedetail','S','S','S','N','N',{ts '2011-03-07 16:37:54.297'},'sa','Non si può modificare la contabilizzare dell''IVA di una fattura  perchè il nuovo movimento che lo contabilizza supera il periodo della liquidazione.','N','(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM proceeds
jOIN incomelast
	ON proceeds.kpro = incomelast.kpro
WHERE incomelast.idinc = %<invoicedetail.idinc_iva>%
	AND adate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &1) <>0  )
		, {d ''1900-01-01''} )

),0)
]{I} = 0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<invoicedetail.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM proceeds
jOIN incomelast
	ON proceeds.kpro = incomelast.kpro
WHERE incomelast.idinc = %<invoicedetail.idinc_iva>%
	AND adate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &2) <>0   )
		, {d ''1900-01-01''} )

),0)
]{I} = 0
)
OR
( isnull(%<invoicedetail.idinc_iva>%,0) = isnull(&<invoicedetail.idinc_iva>&,0)  )















')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA037','1','U','invoicedetail','S','S','S','N','N',{ts '2012-11-23 16:39:48.240'},'sa','E'' necessario specificare le informazioni per il quadro VF24','S','isnull([SELECT flagva3 from config where ayear=%<sys_esercizio>%]{C},''N'')=''N''

OR

isnull([SELECT flagva3 from config where ayear=%<sys_esercizio>%]{C},''N'')=''S''

OR

%<invoicedetail.va3type>% is not null

OR

[SELECT COUNT(*) FROM ivaregisterkind IK 
	join invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
	where 
		 IKR.idinvkind=%<invoicedetail.idinvkind>%
		AND IK.registerclass=''A''
		AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} =0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA037','2','U','invoicedetail','S','S','S','N','N',{ts '2012-11-23 16:49:30.827'},'sa','E'' necessario specificare le informazioni per il quadro VF24','S','isnull([SELECT flagva3 from config where ayear=%<sys_esercizio>%]{C},''N'')=''N''

OR

isnull([SELECT flagva3 from config where ayear=%<sys_esercizio>%]{C},''N'')=''X''

OR

%<invoicedetail.va3type>% is not null

OR

[SELECT COUNT(*) FROM ivaregisterkind IK 
	join invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
	where 
		 IKR.idinvkind=%<invoicedetail.idinvkind>%
		AND IK.registerclass=''A''
		AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} =0
OR
[SELECT COUNT(*) FROM ivakind IVK
	WHERE 
		 IVK.idivakind=%<invoicedetail.idivakind>%
		AND ((ISNULL(IVK.flag,0) & 1) = 0) 		
]{I} =0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA038','1','U','invoicedetail','S','S','S','N','N',{ts '2010-10-22 16:24:11.077'},'sara','Per il dettaglio fattura  %<invoicedetail.detaildescription>%  associato ad aliquota IVA commerciale o promiscua  è obbligatorio specificare nella scheda  "Comunicazioni" se si tratta di bene o servizio, ai fini della comunicazione all''Agenzia delle Entrate delle operazioni con paesi a fiscalità privilegiata.','N','--post
ISNULL(&<invoicedetail.flag>&,2)  = ISNULL(%<invoicedetail.flag>%,2) 
OR
ISNULL(%<invoicedetail.flag>%,2) <> 2
-- oppure il tipo iva del dettaglio è istituzionale
OR
[SELECT COUNT(*) FROM ivakind IVK
	WHERE 
		 IVK.idivakind=%<invoicedetail.idivakind>%
		AND ((ISNULL(IVK.flag,0) & 1) = 0) 		
]{I} =0
OR
[SELECT isnull(invoice.flag, 2)
FROM invoice
WHERE invoice.idinvkind = %<invoicedetail.idinvkind>%
AND invoice.yinv = %<invoicedetail.yinv>%
AND invoice.ninv = %<invoicedetail.ninv>%]{I} <> 0

OR
[SELECT COUNT(*) FROM ivaregisterkind IK 
	join invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
	where 
		 IKR.idinvkind=%<invoicedetail.idinvkind>%
		AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} =0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ002','4','U','invoicedetail','S','S','S','N','N',{ts '2010-07-13 14:53:32.860'},'SA','Il listino del dettaglio n. %<invoicedetail.idgroup>% e descrizione " %<invoicedetail.detaildescription>%  " non può essere modificato perchè collegato al dettaglio ordine N. %<invoicedetail.yman>% / %<invoicedetail.nman>% / %<invoicedetail.manrownum>%','N','( %<invoicedetail.idlist>% = &<invoicedetail.idlist>&)

OR

( %<invoicedetail.idmankind>% IS NULL )

OR

([SELECT count(*)
FROM mandatedetail
WHERE idmankind = %<invoicedetail.idmankind>% 
AND yman = %<invoicedetail.yman>% 
AND nman = %<invoicedetail.nman>% 
AND rownum = %<invoicedetail.manrownum>%
AND idlist is not null]{I}=0)

OR

 ISNULL(%<invoicedetail.idlist>%,0)
 = ISNULL(
([SELECT idlist
FROM mandatedetail
WHERE idmankind = %<invoicedetail.idmankind>% 
AND yman = %<invoicedetail.yman>% 
AND nman = %<invoicedetail.nman>% 
AND rownum = %<invoicedetail.manrownum>%]{I})
,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ008','1','U','invoicedetail','S','S','S','N','N',{ts '2010-07-12 11:31:09.517'},'SA','La fattura è di tipo "non accompagnatoria", pertanto il dettaglio %<invoicedetail.rownum>% deve essere collegato ad una bolla di ingresso registrata in magazzino. 
Se non vi è una bolla a cui collegare il dettaglio, esso dovrà essere inserito in una fattura "accompagnatoria".','N','%<invoicedetail.idlist>% IS NULL
OR
[SELECT isnull(flag_ddt, ''N'')
FROM invoice
WHERE idinvkind = %<invoicedetail.idinvkind>%
AND yinv = %<invoicedetail.yinv>%
AND ninv = %<invoicedetail.ninv>%]{C}=''N''
OR
[(SELECT COUNT(*) FROM stock
WHERE idinvkind = %<invoicedetail.idinvkind>%
AND yinv = %<invoicedetail.yinv>%
AND ninv = %<invoicedetail.ninv>%
AND inv_idgroup = %<invoicedetail.idgroup>%
AND idddt_in is not null
)]{I}<>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA032','1','D','invoicekind','S','S','S','N','N',{ts '2009-06-12 16:05:41.077'},'Nino07032012','I Tipi  di documenti IVA non possono essere cancellati dal Dipartimento.','S','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','invoicekind','S','S','S','N','N',{ts '2009-03-10 18:29:43.017'},'SARA','Cancellazione Impossibile! Esistono documenti IVA collegati al tipo di documento IVA %<description>%','S','[SELECT COUNT(*) FROM invoice
WHERE idinvkind = %<invoicekind.idinvkind>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA032','1','I','invoicekind','S','S','S','N','N',{ts '2009-06-12 16:06:04.360'},'Nino07032012','I Tipi  di documenti IVA non possono essere inseriti dal Dipartimento.','S','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','invoicekind','S','S','S','N','N',{ts '2007-11-21 14:15:32.030'},'SARA','Tipo del documento IVA %<codeinvkind>% già esistente','S','[(SELECT count(*) 
from invoicekind 
where codeinvkind = %<invoicekind.codeinvkind>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','invoicekind','S','S','S','N','N',{ts '2007-11-20 16:02:06.110'},'NINO','Descrizione del tipo del documento IVA già esistente','S','[(SELECT count(*) 
from invoicekind 
where description = %<invoicekind.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA032','1','U','invoicekind','S','S','S','N','N',{ts '2009-06-12 16:05:50.907'},'Nino07032012','I Tipi  di documenti IVA non possono essere modificati dal Dipartimento.','S','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA043','1','U','invoicekind','S','S','S','N','N',{ts '2011-04-07 13:23:17.357'},'sa','Il Tipo documento %<invoicekind.description>% deve generera o la doppia registrazione o un''autofattura.','N','%<invoicekind.idinvkind_auto>% is null

OR

 [SELECT COUNT(*) FROM invoicekindregisterkind 
JOIN ivaregisterkind 
ON   ivaregisterkind.idivaregisterkind =   invoicekindregisterkind.idivaregisterkind 
WHERE invoicekindregisterkind.idinvkind = %<invoicekind.idinvkind>% 
AND   ivaregisterkind.registerclass <> ''P'']{I}<=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','invoicekind','S','S','S','N','N',{ts '2005-08-26 11:51:48.730'},'''LAZZO''','Descrizione del tipo del documento IVA già esistente','S','[(SELECT count(*) 
from invoicekind 
where idinvkind <> %<invoicekind.idinvkind>% 
and description = %<invoicekind.description>%)]{N} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA043','1','D','invoicekindregisterkind','S','S','S','N','N',{ts '2011-04-07 13:43:47.060'},'sa','Non si può dissociare un registro dal tipo documento se sono state create fatture con la doppia registrazione.','N','
[select isnull(idinvkind_auto,0)
from invoicekind
where idinvkind = %<invoicekindregisterkind.idinvkind>%]{I}=0

OR
[SELECT registerclass FROM  ivaregisterkind 
WHERE idivaregisterkind  = %<invoicekindregisterkind.idivaregisterkind>%]{C}=''P''

OR

[SELECT COUNT(*) FROM invoice
WHERE idinvkind= %<invoicekindregisterkind.idinvkind>% 
	and isnull( flagintracom,''N'') <>''N'']{I}=0



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA043','1','I','invoicekindregisterkind','S','S','S','N','N',{ts '2011-04-07 13:43:36.140'},'sa','Il Tipo documento %<invoicekind.description>% deve generera o la doppia registrazione o un''autofattura.','N','
[select isnull(idinvkind_auto,0)
from invoicekind
where idinvkind = %<invoicekindregisterkind.idinvkind>%]{I}=0

OR

 [SELECT COUNT(*) FROM invoicekindregisterkind 
JOIN ivaregisterkind 
ON   ivaregisterkind.idivaregisterkind =   invoicekindregisterkind.idivaregisterkind 
WHERE invoicekindregisterkind.idinvkind = %<invoicekindregisterkind.idinvkind>% 
AND   ivaregisterkind.registerclass <> ''P'']{I}<=1

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE001','1','D','itineration','S','S','S','N','N',{ts '2006-09-29 12:07:46.157'},'''SARA''','Non è possibile cancellare la missione %<nitineration>% / %<yitineration>% perché è stata generata la relativa Anagrafe delle Prestazioni.
','S','[(select count(*)
from serviceregistry 
where substring(idrelated,1,11) = ''itineration''
and substring(idrelated,13,4)= convert(varchar(4),%<itineration.yitineration>%)
and substring(idrelated,18,4)= convert(varchar(4),%<itineration.nitineration>%))]{N} 
= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','itineration','S','S','S','N','N',{ts '2007-12-05 16:25:09.187'},'PINO','Cancellazione Impossibile! Esistono movimenti di spesa collegati alla missione %<nitineration>% / %<yitineration>%','S','[(SELECT count(*) 
from expenseitineration 
where iditineration = %<itineration.iditineration>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','itineration','S','S','S','N','N',{ts '2010-04-28 13:51:11.970'},'SARADECA','Cancellazione Impossibile! Esistono operazioni di Piccola Spesa collegate alla missione %<nitineration>% / %<yitineration>%','S','[(SELECT count(*) 
from pettycashoperationitineration
where iditineration = %<itineration.iditineration>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM014','1','I','itineration','S','S','S','N','N',{ts '2009-02-26 15:19:46.047'},'ASSISTENZA','Non è possibile salvare una missione con numero negativo','N','%<itineration.nitineration>%>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF005','1','I','itineration','S','S','S','N','N',{ts '2013-07-03 10:56:05.000'},'nino','Esistono altre missioni dello stesso incaricato svolte nello stesso periodo.','N','--post I
(
[SELECT COUNT (*)
FROM  itineration 
WHERE itineration.idreg = %<itineration.idreg>%
AND   itineration.iditineration <> %<itineration.iditineration>%
AND  %<itineration.stop>% >=itineration.start 
AND  %<itineration.start>%<=itineration.stop
AND itineration.iditinerationstatus<>7
]{N} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF006','1','I','itineration','S','S','S','N','N',{ts '2008-07-17 15:50:07.797'},'SARA','La durata della missione n° %<itineration.nitineration>%  del  %<itineration.yitineration>% è inferiore al totale giorni delle singole tappe. ','N','--post I
(
[SELECT SUM(days)
FROM  itinerationlap
JOIN  itineration 
ON    itineration.iditineration = itinerationlap.iditineration
WHERE itinerationlap.iditineration  = %<itineration.iditineration>%
]{I} <= 
[SELECT DATEDIFF(day,%<itineration.start>%, %<itineration.stop>%) +1
]{I}
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF016','1','I','itineration','S','S','S','S','S',{ts '2011-01-10 12:01:19.703'},'sara','Le Tipologie di Spesa presenti non sono coerenti con il modello autorizzativo selezionato.','N','%<itineration.idauthmodel>% IS NULL 
OR
(
[
(select 
	count(*) 
	from itinerationrefund where 
	iditineration=%<itineration.iditineration>%
	and
	iditinerationrefundkind 
	not in 
	(select 
		iditinerationrefundkind 
		from authmodelitinerationrefundkind where 
		idauthmodel=%<itineration.idauthmodel>%)
)
]{I}=0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF018','1','I','itineration','S','S','S','N','N',{ts '2011-01-13 16:57:28.780'},'sara','L''opzione "Considera eseguita quindi pagabile" può essere selezionata per una missione Approvata solo se ci sono Spese Rendicontate. Qualora si debba passare a uno stato precedente a quello di Approvato per modificare la missione, si dovrà prima togliere la spunta all''opzione sopraindicata e poi procedere con le correzioni.','N','ISNULL(%<itineration.completed>%,''N'') = ''N''
OR
(
(%<itineration.iditinerationstatus>% = 6)
AND
(
	[SELECT GETDATE()]{D} >= ISNULL(%<itineration.start>%,{d ''1900-01-01''})
) 
AND
(
(
[SELECT count(*) 
 FROM  itinerationrefund IR
 WHERE  IR.iditineration = %<itineration.iditineration>%
 AND
 ISNULL(IR.flagadvancebalance,''S'') = ''S''
-- saldo
]{I}  > 0
AND
[SELECT count(*) 
 FROM  itinerationrefund IR
 WHERE  IR.iditineration = %<itineration.iditineration>%
 AND
 ISNULL(IR.flagadvancebalance,''S'') = ''A''
-- anticipo
]{I}  > 0
)
)
OR
(
[SELECT count(*) 
 FROM  itinerationrefund IR
 WHERE  IR.iditineration = %<itineration.iditineration>%
 AND
 ISNULL(IR.flagadvancebalance,''S'') = ''A''
-- anticipo
]{I}  = 0
)

)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF020','1','I','itineration','S','S','S','N','N',{ts '2011-11-17 09:56:25.517'},'sara','La Data Inizio/Fine missione non è congrua con la data Contabile relativa all''esercizio Corrente.','N','%<itineration.flagweb>% = ''N''

OR 

((%<itineration.start>% >=  %<sys_datacontabile>%) 
AND (%<itineration.stop>% >= %<sys_datacontabile>%))

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM015','1','U','itineration','S','S','S','N','N',{ts '2007-12-05 16:28:05.627'},'PINO','Non si può modificare il percipiente in una missione totalmente o parzialmente contabilizzato.','S','([SELECT count(*) 
FROM expenseitineration
WHERE expenseitineration.iditineration = %<itineration.iditineration>%]{I}
= 0)
or
(&<itineration.idreg>& = %<itineration.idreg>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM035','1','U','itineration','S','S','S','N','N',{ts '2007-12-05 16:29:16.140'},'PINO','Non può essere cambiata la prestazione della missione %<itineration.nitineration>% / %<itineration.yitineration>% perché è stata già contabilizzata','S','[SELECT COUNT(*)
FROM expenseitineration
JOIN expenselink
ON expenseitineration.idexp = expenselink.idparent
JOIN expenselast
ON expenselast.idexp = expenselink.idchild
WHERE iditineration = %<itineration.iditineration>%
AND movkind = 4]{I} = 0
OR
(
%<itineration.idser>% = &<itineration.idser>&
AND
%<itineration.adate>% = &<itineration.adate>&
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF001','1','U','itineration','S','S','S','N','N',{ts '2007-12-05 16:30:52.343'},'PINO','L''importo dell''anticipo della missione %<nitineration>% / %<yitineration>% è minore dei movimenti di spesa che lo contabilizzano','S','ISNULL(%<itineration.totadvance>%, 0)
- 
[SELECT ISNULL(sum(expenseyear.amount), 0) 
from expense 
join expenseyear
on expense.idexp = expenseyear.idexp
join expensetotal
on expenseyear.idexp = expensetotal.idexp
and expenseyear.ayear = expensetotal.ayear
join expenseitineration 
on expenseitineration.idexp = expense.idexp 
where expenseitineration.iditineration = %<itineration.iditineration>% 
and expenseitineration.movkind in (5,6)
and (expensetotal.flag & 2) <> 0]{V}
-
[SELECT ISNULL(sum(expensevar.amount), 0) 
from expensevar 
join expenseitineration
on expenseitineration.idexp = expensevar.idexp 
WHERE expenseitineration.movkind in (5,6)
and expenseitineration.iditineration = %<itineration.iditineration>%]{V} 
>= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF002','1','U','itineration','S','S','S','N','N',{ts '2007-12-05 16:31:36.717'},'PINO','L''importo lordo della missione %<nitineration>% / %<yitineration>% è minore dei movimenti di spesa che la contabilizzano','S','%<itineration.totalgross>%
- 
[SELECT ISNULL(sum(expenseyear.amount), 0) 
from expense 
join expenseyear
on expense.idexp = expenseyear.idexp
join expensetotal
on expenseyear.idexp = expensetotal.idexp
and expenseyear.ayear = expensetotal.ayear
join expenseitineration 
on expenseitineration.idexp = expense.idexp 
where expenseitineration.iditineration = %<itineration.iditineration>% 
and expenseitineration.movkind in (4,6)
and (expensetotal.flag & 2) <>0 ]{V}
-
[SELECT ISNULL(sum(expensevar.amount), 0) 
from expensevar 
join expenseitineration
on expenseitineration.idexp = expensevar.idexp 
WHERE expenseitineration.movkind in (4,6)
AND ISNULL(expensevar.autokind,0 )<>4
and expenseitineration.iditineration = %<itineration.iditineration>%]{V} 
>= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF005','1','U','itineration','S','S','S','N','N',{ts '2013-07-03 10:58:06.170'},'nino','Esistono altre missioni dello stesso incaricato svolte nello stesso periodo.','N','--post I
(
(%<itineration.start>% = &<itineration.start>&)
AND
(%<itineration.stop>%  = &<itineration.stop>&)
)
OR
(
[SELECT COUNT (*)
FROM  itineration 
WHERE itineration.idreg = %<itineration.idreg>%
AND   itineration.iditineration <> %<itineration.iditineration>%
AND   %<itineration.stop>% >=itineration.start 
AND   %<itineration.start>%<=itineration.stop
AND itineration.iditinerationstatus<>7
]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF006','1','U','itineration','S','S','S','N','N',{ts '2008-07-17 16:11:28.390'},'SARA','La durata della missione n° %<itineration.nitineration>%  del  %<itineration.yitineration>% è inferiore al totale giorni delle singole tappe. ','N','--post I
(
%<itineration.start>% = &<itineration.start>&
and 
%<itineration.stop>% = &<itineration.stop>&
)
or
(
[SELECT SUM(days)
FROM  itinerationlap
JOIN  itineration 
ON    itineration.iditineration = itinerationlap.iditineration
WHERE itinerationlap.iditineration  = %<itineration.iditineration>%
]{I} <= 
[SELECT DATEDIFF(day,%<itineration.start>%, %<itineration.stop>%) +1
]{I}
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF012','1','U','itineration','S','S','S','N','N',{ts '2010-05-07 14:51:15.657'},'SA','Attenzione, le date di una o più tappe risultano incoerenti con le date di inizio/fine della missione','N','[(
	SELECT COUNT(*) 
	FROM itinerationlap where 
	dateadd(dd,0,datediff(dd,0,starttime)) < %<itineration.start>% AND iditineration=%<itineration.iditineration>%
)]{I}=0
AND
[(
	SELECT COUNT(*) 
	FROM itinerationlap where 
	dateadd(dd,0,datediff(dd,0,stoptime)) > %<itineration.stop>% AND iditineration=%<itineration.iditineration>%
)]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF013','1','U','itineration','S','S','S','N','N',{ts '2010-11-17 12:08:44.483'},'sara','L''importo della missione n° %<itineration.nitineration>% del %<itineration.yitineration>% non può superare l''importo massimo configurato nel modello autorizzativo.','N','ISNULL(%<itineration.flagweb>%, ''N'' ) = ''N''
OR
(
ISNULL(%<itineration.iditinerationstatus>%, 0) <>5
AND
ISNULL(%<itineration.iditinerationstatus>%, 0) <>6
)
OR
(%<itineration.idauthmodel>% IS NULL) 
OR
(
[SELECT maxamount
    FROM authmodel 
 WHERE idauthmodel = %<itineration.idauthmodel>%
]{V} IS NULL)
OR
(
ISNULL(%<itineration.totalgross>%, 0)
<=
[SELECT maxamount
    FROM authmodel 
 WHERE idauthmodel = %<itineration.idauthmodel>%
]{V}
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF013','2','U','itineration','S','S','S','N','N',{ts '2010-11-17 16:45:04.030'},'sara','La durata della missione n° %<itineration.nitineration>% del %<itineration.yitineration>% non può superare la durata massima configurata nel modello autorizzativo','N','ISNULL(%<itineration.flagweb>%, ''N'' ) = ''N''
OR
(
ISNULL(%<itineration.iditinerationstatus>%, 0) <>5
AND
ISNULL(%<itineration.iditinerationstatus>%, 0) <>6
)
OR
(%<itineration.idauthmodel>% IS NULL) 
OR
(
[SELECT maxlen 
    FROM authmodel 
 WHERE idauthmodel = %<itineration.idauthmodel>%
]{I} IS NULL)
OR
([SELECT DATEDIFF(day,%<itineration.start>%, %<itineration.stop>%) +1
]{I}
<=
[SELECT maxlen
    FROM authmodel 
 WHERE idauthmodel = %<itineration.idauthmodel>%
]{I}
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF014','1','U','itineration','S','S','S','N','N',{ts '2011-04-05 11:33:17.077'},'assistenza','Il campo "Appunti per il pagamento" nella scheda "Pagamenti" deve essere compilato perchè il modello autorizzativo associato alla missione lo richiede','N','ISNULL(%<itineration.flagweb>%, ''N'' ) = ''N''
OR
(ISNULL(%<itineration.iditinerationstatus>%, 0) < 2)
OR
(ISNULL(%<itineration.iditinerationstatus>%, 0) > 6)
OR
(%<itineration.idauthmodel>% IS NULL) 
OR
(
[SELECT ISNULL(authfinrequired,''N'')
    FROM authmodel 
 WHERE idauthmodel = %<itineration.idauthmodel>%
]{C} = ''N''
)
OR
(%<itineration.applierannotations>% IS NOT NULL) 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF016','1','U','itineration','S','S','S','S','S',{ts '2011-01-10 12:01:31.967'},'sara','Le Tipologie di Spesa presenti non sono coerenti con il modello autorizzativo selezionato.','N','%<itineration.idauthmodel>% IS NULL 
OR
(
[
(select 
	count(*) 
	from itinerationrefund where 
	iditineration=%<itineration.iditineration>%
	and
	iditinerationrefundkind 
	not in 
	(select 
		iditinerationrefundkind 
		from authmodelitinerationrefundkind where 
		idauthmodel=%<itineration.idauthmodel>%)
)
]{I}=0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF018','1','U','itineration','S','S','S','N','N',{ts '2011-01-14 10:21:40.297'},'sara','L''opzione "Considera eseguita quindi pagabile" può essere selezionata per una missione Approvata solo se ci sono Spese Rendicontate. Qualora si debba passare a uno stato precedente a quello di Approvato per modificare la missione, si dovrà prima togliere la spunta all''opzione sopraindicata e poi procedere con le correzioni.','N','ISNULL(%<itineration.completed>%,''N'') = ''N''
OR
(
(%<itineration.iditinerationstatus>% = 6)
AND
(
	[SELECT GETDATE()]{D} >= ISNULL(%<itineration.start>%,{d ''1900-01-01''})
) 
AND
(
(
[SELECT count(*) 
 FROM  itinerationrefund IR
 WHERE  IR.iditineration = %<itineration.iditineration>%
 AND
 ISNULL(IR.flagadvancebalance,''S'') = ''S''
-- saldo
]{I}  > 0
AND
[SELECT count(*) 
 FROM  itinerationrefund IR
 WHERE  IR.iditineration = %<itineration.iditineration>%
 AND
 ISNULL(IR.flagadvancebalance,''S'') = ''A''
-- anticipo
]{I}  > 0
)
)
OR
(
[SELECT count(*) 
 FROM  itinerationrefund IR
 WHERE  IR.iditineration = %<itineration.iditineration>%
 AND
 ISNULL(IR.flagadvancebalance,''S'') = ''A''
-- anticipo
]{I}  = 0
)

)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF019','1','U','itineration','S','S','S','N','N',{ts '2010-05-07 14:51:15.657'},'SA','Attenzione, le date di una o più spese risultano incoerenti con le date di inizio/fine della missione','N','[(
	SELECT COUNT(*) 
	FROM itinerationrefund where 
	dateadd(dd,0,datediff(dd,0,starttime)) < %<itineration.start>% AND iditineration=%<itineration.iditineration>%
)]{I}=0
AND
[(
	SELECT COUNT(*) 
	FROM itinerationrefund where 
	dateadd(dd,0,datediff(dd,0,stoptime)) > %<itineration.stop>% AND iditineration=%<itineration.iditineration>%
)]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF020','1','U','itineration','S','S','S','N','N',{ts '2012-04-20 16:22:03.607'},'sa','La Data Inizio/Fine missione non è congrua con la data Contabile relativa all''esercizio Corrente.','N','%<itineration.flagweb>% = ''N''

OR 

((%<itineration.start>% >=  %<sys_datacontabile>%) 
AND (%<itineration.stop>% >= %<sys_datacontabile>%))

OR 

(%<itineration.start>% = &<itineration.start>&
 and
 %<itineration.stop>% = &<itineration.stop>&
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF005','1','I','itinerationlap','S','S','S','N','N',{ts '2008-11-21 13:21:58.910'},'LAGONIGRO','Esistono tappe di  altre missioni dello stesso incaricato svolte nello stesso periodo.','N','--post I
(
[SELECT COUNT(*)
FROM  itinerationlap
JOIN  itineration 
ON    itineration.iditineration = itinerationlap.iditineration
WHERE itineration.idreg = [SELECT idreg FROM itineration 
				   WHERE  iditineration = %<itinerationlap.iditineration>%
				  ]{I} 
AND   (itinerationlap.iditineration <> %<itinerationlap.iditineration>%)
AND  %<itinerationlap.starttime>% >= itinerationlap.starttime 
AND  %<itinerationlap.starttime>%< itinerationlap.stoptime
]{I} = 0
)
AND
(
[SELECT COUNT(*)
FROM  itinerationlap
JOIN  itineration 
ON    itineration.iditineration = itinerationlap.iditineration
WHERE itineration.idreg = [SELECT idreg FROM itineration 
				   WHERE  iditineration = %<itinerationlap.iditineration>%
				  ]{I} 
AND   (itinerationlap.iditineration <> %<itinerationlap.iditineration>%)
AND  %<itinerationlap.stoptime>% > itinerationlap.starttime 
AND  %<itinerationlap.stoptime>% <= itinerationlap.stoptime
]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF006','1','I','itinerationlap','S','S','S','N','N',{ts '2008-07-17 16:02:44.077'},'SARA','La durata della missione n° %<itineration.nitineration>%  del  %<itineration.yitineration>% è inferiore al totale giorni delle singole tappe. ','N','--post I
(
[SELECT SUM(days)
FROM  itinerationlap
JOIN  itineration 
ON    itineration.iditineration = itinerationlap.iditineration
WHERE itinerationlap.iditineration  = %<itinerationlap.iditineration>%
]{I} <= 
[SELECT DATEDIFF(day,start,stop) +1
FROM itineration 
WHERE itineration.iditineration = %<itinerationlap.iditineration>%
]{I}
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF008','1','I','itinerationlap','S','S','S','N','N',{ts '2009-11-04 13:03:57.907'},'SARA','Percentuale di anticipo massima concedibile superata per la tappa %<itinerationlap.description>%.','N','(isnull(%<itinerationlap.advancepercentage>%,0)=0) 
OR
 (isnull(%<itinerationlap.flagitalian>%,''S'')<>''S'') 
OR
 (
	[isnull((select top 1 allowanceruledetail.advancepercentage 
	from itineration 
	join registrylegalstatus 
	on (itineration.idreg=registrylegalstatus.idreg and
	     itineration.idregistrylegalstatus=registrylegalstatus.idregistrylegalstatus)
	join allowanceruledetail 
	on (registrylegalstatus.idposition=allowanceruledetail.idposition)
	join allowancerule
		on (allowancerule.idallowancerule = allowanceruledetail.idallowancerule) 
	where itineration.iditineration =%<itinerationlap.iditineration>% 
		and allowancerule.start < =%<itinerationlap.starttime>% 
		and registrylegalstatus.incomeclass
		between allowanceruledetail.minincomeclass 
		and allowanceruledetail.maxincomeclass
		and isnull(allowanceruledetail.advancepercentage,0)>0
	order by allowancerule.start desc),0)
	]{V}
	>=
	isnull(%<itinerationlap.advancepercentage>%,0)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF008','2','I','itinerationlap','S','S','S','N','N',{ts '2009-11-04 13:04:04.297'},'SARA','Percentuale di anticipo massima concedibile superata per la tappa %<itinerationlap.description>%.','N','(isnull(%<itinerationlap.advancepercentage>%,0)=0) 
or
 (isnull(%<itinerationlap.flagitalian>%,''S'')<>''N'') 
or 
(
[isnull((select top 1 foreignallowanceruledetail.advancepercentage 
 from foreignallowanceruledetail 
  join foreignallowancerule
	on (foreignallowancerule.idforeignallowancerule=foreignallowanceruledetail.idforeignallowancerule)
  where 
   [execute compute_foreigngroup %<itinerationlap.iditineration>%,@outvar OUT]{I} 
	between foreignallowanceruledetail.minforeigngroupnumber and foreignallowanceruledetail.maxforeigngroupnumber
  and foreignallowancerule.idforeigncountry=%<itinerationlap.idforeigncountry>%
  and isnull(foreignallowanceruledetail.advancepercentage,0)>0
  order by foreignallowancerule.start desc),0)
]{V}>=Isnull(%<itinerationlap.advancepercentage>%,0)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF009','1','I','itinerationlap','S','S','S','N','N',{ts '2013-07-25 10:31:57.417'},'nino','Diaria massima concedibile superata per la tappa %<itinerationlap.description>%.','N','(isnull(%<itinerationlap.allowance>%,0)=0)
 OR  
(isnull(%<itinerationlap.flagitalian>%,''S'')<>''S'') 
OR
 (
	[isnull((select top 1 allowanceruledetail.amount 
	from itineration 
	join registrylegalstatus 
	on (itineration.idreg=registrylegalstatus.idreg and
	     itineration.idregistrylegalstatus=registrylegalstatus.idregistrylegalstatus)
	join allowanceruledetail 
	on (registrylegalstatus.idposition=allowanceruledetail.idposition)
	join allowancerule
		on (allowancerule.idallowancerule = allowanceruledetail.idallowancerule) 
	where itineration.iditineration =%<itinerationlap.iditineration>% 
		and allowancerule.start < =%<itinerationlap.starttime>% 
		and registrylegalstatus.incomeclass
		between allowanceruledetail.minincomeclass 
		and allowanceruledetail.maxincomeclass
		and isnull(allowanceruledetail.amount,0)>0
	order by allowancerule.start desc),
			isnull(%<itinerationlap.allowance>%,0)
			)
	]{V}
	>=
	isnull(%<itinerationlap.allowance>%,0)
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF009','2','I','itinerationlap','S','S','S','N','N',{ts '2013-07-25 10:33:02.433'},'nino','Diaria massima concedibile superata per la tappa %<itinerationlap.description>%.','N','(isnull(%<itinerationlap.allowance>%,0)=0) 
OR
 (isnull(%<itinerationlap.flagitalian>%,''S'')<>''N'') 
OR
(
[isnull((select top 1 foreignallowanceruledetail.amount 
 from foreignallowanceruledetail 
  join foreignallowancerule
	on (foreignallowancerule.idforeignallowancerule=foreignallowanceruledetail.idforeignallowancerule)
  where 
   [execute compute_foreigngroup %<itinerationlap.iditineration>%,@outvar OUT]{I} 
	between foreignallowanceruledetail.minforeigngroupnumber and foreignallowanceruledetail.maxforeigngroupnumber
  and foreignallowancerule.idforeigncountry=%<itinerationlap.idforeigncountry>%
  and isnull(foreignallowanceruledetail.amount,0)>0
  order by foreignallowancerule.start desc)

	,
	isnull(%<itinerationlap.allowance>%,0)
	)
]{V}>=isnull(%<itinerationlap.allowance>%,0)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF012','1','I','itinerationlap','S','S','S','N','N',{ts '2010-05-07 14:44:52.437'},'SA','Le date della tappa sono incoerenti con le date della missione.','N','[dateadd(dd,0,datediff(dd,0,%<itinerationlap.starttime>%))]{D} >= [(select start from itineration where iditineration=%<itinerationlap.iditineration>%)]{D}
AND
[dateadd(dd,0,datediff(dd,0,%<itinerationlap.stoptime>%))] {D} <= [(select stop from itineration where iditineration=%<itinerationlap.iditineration>%)]{D}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF005','1','U','itinerationlap','S','S','S','N','N',{ts '2008-11-21 13:22:32.940'},'LAGONIGRO','Esistono tappe di  altre missioni dello stesso incaricato svolte nello stesso periodo.','N','--post U
((%<itinerationlap.starttime>% = &<itinerationlap.starttime>&)
AND
(%<itinerationlap.stoptime>%  = &<itinerationlap.stoptime>&))
OR
(

(
[SELECT COUNT(*)
FROM  itinerationlap
JOIN  itineration 
ON    itineration.iditineration = itinerationlap.iditineration
WHERE itineration.idreg = [SELECT idreg FROM itineration 
				   WHERE  iditineration = %<itinerationlap.iditineration>%
				  ]{I} 
AND   (itinerationlap.iditineration <> %<itinerationlap.iditineration>%)
AND  %<itinerationlap.starttime>% >= itinerationlap.starttime 
AND  %<itinerationlap.starttime>%< itinerationlap.stoptime
]{I} = 0
)
AND
(
[SELECT COUNT(*)
FROM  itinerationlap
JOIN  itineration 
ON    itineration.iditineration = itinerationlap.iditineration
WHERE itineration.idreg = [SELECT idreg FROM itineration 
				   WHERE  iditineration = %<itinerationlap.iditineration>%
				  ]{I} 
AND   (itinerationlap.iditineration <> %<itinerationlap.iditineration>%)
AND  %<itinerationlap.stoptime>% > itinerationlap.starttime 
AND  %<itinerationlap.stoptime>% <= itinerationlap.stoptime
]{I} = 0
)

)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF006','1','U','itinerationlap','S','S','S','N','N',{ts '2008-07-17 16:11:37.343'},'SARA','La durata della missione n° %<itineration.nitineration>%  del  %<itineration.yitineration>% è inferiore al totale giorni delle singole tappe. ','N','--post I
(
%<itinerationlap.days>% = &<itinerationlap.days>&
)
or
(
[SELECT SUM(days)
FROM  itinerationlap
JOIN  itineration 
ON    itineration.iditineration = itinerationlap.iditineration
WHERE itinerationlap.iditineration  = %<itinerationlap.iditineration>%
]{I} <= 
[SELECT DATEDIFF(day,start,stop) +1
FROM itineration 
WHERE itineration.iditineration = %<itinerationlap.iditineration>%
]{I}
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF008','1','U','itinerationlap','S','S','S','N','N',{ts '2009-11-04 13:04:08.703'},'SARA','Percentuale di anticipo massima concedibile superata per la tappa %<itinerationlap.description>%.','N','(isnull(%<itinerationlap.advancepercentage>%,0)=0) 
	OR
(%<itinerationlap.advancepercentage>%=&<itinerationlap.advancepercentage>&)
	OR
 (isnull(%<itinerationlap.flagitalian>%,''S'')<>''S'') 
OR
 (
	[isnull((select top 1 allowanceruledetail.advancepercentage 
	from itineration 
	join registrylegalstatus 
	on (itineration.idreg=registrylegalstatus.idreg and
	     itineration.idregistrylegalstatus=registrylegalstatus.idregistrylegalstatus)
	join allowanceruledetail 
	on (registrylegalstatus.idposition=allowanceruledetail.idposition)
	join allowancerule
		on (allowancerule.idallowancerule = allowanceruledetail.idallowancerule) 
	where itineration.iditineration =%<itinerationlap.iditineration>% 
		and allowancerule.start < =%<itinerationlap.starttime>% 
		and registrylegalstatus.incomeclass
		between allowanceruledetail.minincomeclass 
		and allowanceruledetail.maxincomeclass
		and isnull(allowanceruledetail.advancepercentage,0)>0
	order by allowancerule.start desc),0)
	]{V}
	>=
	isnull(%<itinerationlap.advancepercentage>%,0)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF008','2','U','itinerationlap','S','S','S','N','N',{ts '2009-11-04 13:04:12.733'},'SARA','Percentuale di anticipo massima concedibile superata per la tappa %<itinerationlap.description>%.','N','(isnull(%<itinerationlap.advancepercentage>%,0)=0) 
or
(%<itinerationlap.advancepercentage>%=&<itinerationlap.advancepercentage>&)
or
 (isnull(%<itinerationlap.flagitalian>%,''S'')<>''N'') 
or 
(
[isnull((select top 1 foreignallowanceruledetail.advancepercentage 
 from foreignallowanceruledetail 
  join foreignallowancerule
	on (foreignallowancerule.idforeignallowancerule=foreignallowanceruledetail.idforeignallowancerule)
  where 
   [execute compute_foreigngroup %<itinerationlap.iditineration>%,@outvar OUT]{I} 
	between foreignallowanceruledetail.minforeigngroupnumber and foreignallowanceruledetail.maxforeigngroupnumber
  and foreignallowancerule.idforeigncountry=%<itinerationlap.idforeigncountry>%
  and isnull(foreignallowanceruledetail.advancepercentage,0)>0
  order by foreignallowancerule.start desc),0)
]{V}>=Isnull(%<itinerationlap.advancepercentage>%,0)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF009','1','U','itinerationlap','S','S','S','N','N',{ts '2013-07-25 10:33:21.790'},'nino','Diaria massima concedibile superata per la tappa %<itinerationlap.description>%.','N','(isnull(%<itinerationlap.allowance>%,0)=0)
or
(%<itinerationlap.allowance>%=&<itinerationlap.allowance>&)
 OR 
 (isnull(%<itinerationlap.flagitalian>%,''S'')<>''S'') 
OR
 (
	[isnull((select top 1 allowanceruledetail.amount 
	from itineration 
	join registrylegalstatus 
	on (itineration.idreg=registrylegalstatus.idreg and
	     itineration.idregistrylegalstatus=registrylegalstatus.idregistrylegalstatus)
	join allowanceruledetail 
	on (registrylegalstatus.idposition=allowanceruledetail.idposition)
	join allowancerule
		on (allowancerule.idallowancerule = allowanceruledetail.idallowancerule) 
	where itineration.iditineration =%<itinerationlap.iditineration>% 
		and allowancerule.start < =%<itinerationlap.starttime>% 
		and registrylegalstatus.incomeclass
		between allowanceruledetail.minincomeclass 
		and allowanceruledetail.maxincomeclass
		and isnull(allowanceruledetail.amount,0)>0
	order by allowancerule.start desc),
		isnull(%<itinerationlap.allowance>%,0)
		)
	]{V}
	>=
	isnull(%<itinerationlap.allowance>%,0)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF009','2','U','itinerationlap','S','S','S','N','N',{ts '2013-07-25 10:33:50.370'},'nino','Diaria massima concedibile superata per la tappa %<itinerationlap.description>%.','N','(isnull(%<itinerationlap.allowance>%,0)=0) 
OR
(%<itinerationlap.allowance>%=&<itinerationlap.allowance>&)
OR
 (isnull(%<itinerationlap.flagitalian>%,''S'')<>''N'') 
OR
(
[isnull((select top 1 foreignallowanceruledetail.amount 
 from foreignallowanceruledetail 
  join foreignallowancerule
	on (foreignallowancerule.idforeignallowancerule=foreignallowanceruledetail.idforeignallowancerule)
  where 
   [execute compute_foreigngroup %<itinerationlap.iditineration>%,@outvar OUT]{I} 
	between foreignallowanceruledetail.minforeigngroupnumber and foreignallowanceruledetail.maxforeigngroupnumber
  and foreignallowancerule.idforeigncountry=%<itinerationlap.idforeigncountry>%
  and isnull(foreignallowanceruledetail.amount,0)>0
  order by foreignallowancerule.start desc),
		Isnull(%<itinerationlap.allowance>%,0)
	)
]{V}
	>=
		Isnull(%<itinerationlap.allowance>%,0)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF012','1','U','itinerationlap','S','S','S','N','N',{ts '2010-05-07 14:45:01.467'},'SA','Le date della tappa sono incoerenti con le date della missione.','N','[dateadd(dd,0,datediff(dd,0,%<itinerationlap.starttime>%))]{D} >= [(select start from itineration where iditineration=%<itinerationlap.iditineration>%)]{D}
AND
[dateadd(dd,0,datediff(dd,0,%<itinerationlap.stoptime>%))]{D} <=  [(select stop from itineration where iditineration=%<itinerationlap.iditineration>%)]{D}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','itinerationparameter','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Generalità per le missioni con data di decorrenza a partire da %<start>% già esistenti','S','[(SELECT count(*) 
from itinerationparameter 
where start = %<itinerationparameter.start>%)]{N} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF017','1','D','itinerationrefund','S','S','S','N','N',{ts '2011-07-14 15:09:04.500'},'sa','In questa fase non è possibile cancellare le spese di anticipo già inserite.','N','ISNULL(%<itinerationrefund.flagadvancebalance>%,''S'') <> ''A''
OR
(
[SELECT GETDATE()]{D} < [SELECT ISNULL(I.start,{d ''1900-01-01''})  FROM itineration I WHERE I.iditineration = %<itinerationrefund.iditineration>%]{D} 
)
OR
(
[select count(*) 
 FROM  itineration I
 WHERE  I.iditineration = %<itinerationrefund.iditineration>%
 AND
 ISNULL(I.flagweb,''N'') = ''N''
AND
 (
	 (
		(I.iditinerationstatus = 6) 
		AND
		(([(select count(*) from itinerationauthagency IA
where IA.iditineration = %<itinerationrefund.iditineration>%
and  isnull(IA.flagstatus,''D'') <> ''D'')] {I} ) = 0
		)
	 ) 
	OR 
	(I.iditinerationstatus = 4)
)
]{I}  > 0
)
OR
[SELECT count(*) 
 FROM  itineration I
 WHERE  I.iditineration = %<itinerationrefund.iditineration>%
 AND
 ISNULL(I.flagweb,''N'') = ''S''
 AND  (I.iditinerationstatus= 1)
-- bozza
]{I}  > 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF018','1','D','itinerationrefund','S','S','S','N','N',{ts '2011-01-14 10:34:03.110'},'sara','L''opzione "Considera eseguita quindi pagabile" può essere selezionata per una missione Approvata solo se ci sono Spese Rendicontate. Qualora si debba passare a uno stato precedente a quello di Approvato per modificare la missione, si dovrà prima togliere la spunta all''opzione sopraindicata e poi procedere con le correzioni.','N','[SELECT ISNULL(I.completed,''N'')  FROM itineration I WHERE I.iditineration = %<itinerationrefund.iditineration>%]{C} = ''N''
OR
[SELECT GETDATE()]{D} < [SELECT ISNULL(I.start,{d ''1900-01-01''})  FROM itineration I WHERE I.iditineration = %<itinerationrefund.iditineration>%]{D} 
OR
(
[SELECT count(*) 
 FROM  itinerationrefund IR
 WHERE  IR.iditineration = %<itinerationrefund.iditineration>%
 AND
 ISNULL(IR.flagadvancebalance,''S'') = ''S''
-- saldo
]{I}  > 0
AND
[SELECT count(*) 
 FROM  itinerationrefund IR
 WHERE  IR.iditineration = %<itinerationrefund.iditineration>%
 AND
 ISNULL(IR.flagadvancebalance,''S'') = ''A''
-- anticipo
]{I}  > 0
)
OR
(
[SELECT count(*) 
 FROM  itinerationrefund IR
 WHERE  IR.iditineration = %<itinerationrefund.iditineration>%
 AND
 ISNULL(IR.flagadvancebalance,''S'') = ''A''
-- anticipo
]{I}  = 0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF010','1','I','itinerationrefund','S','S','S','N','N',{ts '2011-11-25 14:46:31.937'},'sa','La tipologia della spesa %<itinerationrefund.description>% non è consentita in base alla riduzione applicata.','N','(isnull(%<itinerationrefund.flag_geo>%,''I'') = ''I'')
OR
-- spese di viaggio
(
 ISNULL([select  iditinerationrefundkindgroup 
    from itinerationrefundkind 
  where iditinerationrefundkind =%<itinerationrefund.iditinerationrefundkind>% ]{I},0) in (3,4)
)
OR 
isnull(
([select  count(itinerationlap.lapnumber) from itinerationlap 
		where itinerationlap.iditineration=%<itinerationrefund.iditineration>%
			and %<itinerationrefund.starttime>% <= itinerationlap.starttime 
			and itinerationlap.stoptime >=%<itinerationrefund.starttime>%
			and isnull(itinerationlap.allowance,0) > 0]{I}),0)
=0
OR
(
  [select count(*) from itinerationrefundkindgroupreduction 
   join itinerationrefundkindgroup 
	on  itinerationrefundkindgroupreduction.iditinerationrefundkindgroup=itinerationrefundkindgroup.iditinerationrefundkindgroup
   join itinerationrefundkind 
	on itinerationrefundkindgroup.iditinerationrefundkindgroup=itinerationrefundkind.iditinerationrefundkindgroup
where 
	(select  count(itinerationlap.lapnumber) from itinerationlap 
		where itinerationlap.iditineration=%<itinerationrefund.iditineration>%
		and isnull(itinerationlap.idreduction, itinerationrefundkindgroupreduction.idreduction) =
			  itinerationrefundkindgroupreduction.idreduction
		and %<itinerationrefund.starttime>% <= itinerationlap.starttime 
		and itinerationlap.stoptime >=%<itinerationrefund.starttime>%
	) > 0
	and itinerationrefundkind.iditinerationrefundkind=%<itinerationrefund.iditinerationrefundkind>%
 ]{I} >0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF011','1','I','itinerationrefund','S','S','S','N','N',{ts '2009-11-04 12:47:35.733'},'SARA','Nessuna regola presente per %<itinerationrefund.description>%','N','[isnull([execute get_itinerationrefundrule %<itinerationrefund.iditineration>%, %<itinerationrefund.nrefund>%, ''iddetail'',@outvar output]{I},0)]{I}<>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF011','2','I','itinerationrefund','S','S','S','N','N',{ts '2009-11-04 12:47:55.640'},'SARA','Il numero di ore presente nella spesa %<itinerationrefund.description>% è inferiore a quello consentito','N','isnull(convert(int,
	[execute get_itinerationrefundrule %<itinerationrefund.iditineration>%,%<itinerationrefund.nrefund>%,
	''nhour_min'', @outvar output]{N})
,0)=0
OR
(
datediff(hour, %<itinerationrefund.starttime>%,%<itinerationrefund.stoptime>%)  
>= 
isnull(convert(int,[execute get_itinerationrefundrule %<itinerationrefund.iditineration>%,%<itinerationrefund.nrefund>%,
''nhour_min'', @outvar output]{I}),0)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF011','3','I','itinerationrefund','S','S','S','N','N',{ts '2009-11-04 12:48:08.483'},'SARA','Limite massimo consentito di anticipo superato per %<itinerationrefund.description>%.','N','(isnull(%<itinerationrefund.advancepercentage>%,0)=0) or 
([execute get_itinerationrefundrule %<itinerationrefund.iditineration>%,%<itinerationrefund.nrefund>%,
	''advancepercentage'', @outvar output]{V}
	>=%<itinerationrefund.advancepercentage>%)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF011','4','I','itinerationrefund','S','S','S','N','N',{ts '2011-07-06 09:37:15.420'},'sa','La somma delle spese della stessa categoria di %<itinerationrefund.description>% supera il massimo consentito.','N','[isnull((
select sum(itinerationrefund.amount /(datediff(day,starttime,stoptime) + 1))
from itinerationrefund 
join itinerationrefundkind 
	on  itinerationrefund.iditinerationrefundkind=itinerationrefundkind.iditinerationrefundkind
where  
	itinerationrefund.iditineration=%<itinerationrefund.iditineration>%
	and 
	itinerationrefundkind.iditinerationrefundkindgroup=
	[select iditinerationrefundkindgroup from itinerationrefundkind where iditinerationrefundkind=%<itinerationrefund.iditinerationrefundkind>%]{I}
),0)]{V}
<=
[execute get_itinerationrefundrule %<itinerationrefund.iditineration>%,%<itinerationrefund.nrefund>%,
	''limit'',@outvar output]{V} 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF011','5','I','itinerationrefund','S','S','S','N','N',{ts '2009-11-04 12:48:28.733'},'SARA','Il numero di ore presente nella spesa %<itinerationrefund.description>% supera quello consentito.','N','isnull(convert(int,
	[execute get_itinerationrefundrule %<itinerationrefund.iditineration>%,%<itinerationrefund.nrefund>%,
	''nhour_max'', @outvar output]{N})
,0)=0
OR
(
datediff(hour, %<itinerationrefund.starttime>%,%<itinerationrefund.stoptime>%)  
<= 
isnull(convert(int,[execute get_itinerationrefundrule %<itinerationrefund.iditineration>%,%<itinerationrefund.nrefund>%,
''nhour_max'', @outvar output]{I}),0)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF013','1','I','itinerationrefund','S','S','S','N','N',{ts '2010-11-17 12:09:22.703'},'sara','Il Tipo della spesa %<itinerationrefund.description>%  deve essere tra quelli configurati nel modello autorizzativo associato alla missione','N','(
[SELECT COUNT(*)
    FROM itineration 
 WHERE iditineration = %<itinerationrefund.iditineration>%
      AND iditinerationstatus IN ( 5,6)
      AND ISNULL(flagweb,''N'') = ''S''
      AND idauthmodel IS NOT NULL
]{I} = 0
)
OR
(
[SELECT COUNT(*)
    FROM authmodelitinerationrefundkind 
 WHERE idauthmodel = (
			 SELECT idauthmodel 
			   FROM  itineration 
 			WHERE  iditineration = %<itinerationrefund.iditineration>%
			)
      AND iditinerationrefundkind = %<itinerationrefund.iditinerationrefundkind>%
]{I} > 0)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF015','1','I','itinerationrefund','S','S','S','N','N',{ts '2010-11-17 16:07:08.593'},'sara','La somma delle spese di tipo "Anticipo Richiesto" non deve superare la somma delle spese di tipo "Rendiconto Spese"','N','[isnull((
select sum(itinerationrefund.amount) 
from itinerationrefund 
where itinerationrefund.iditineration=%<itinerationrefund.iditineration>%
   and itinerationrefund.flagadvancebalance = ''A''
),0)]{V}
<=
[isnull((
select sum(itinerationrefund.amount) 
from itinerationrefund 
where itinerationrefund.iditineration=%<itinerationrefund.iditineration>%
   and itinerationrefund.flagadvancebalance = ''S''
),0)]{V}
OR
(
[isnull((
select sum(itinerationrefund.amount) 
from itinerationrefund 
where itinerationrefund.iditineration=%<itinerationrefund.iditineration>%
   and itinerationrefund.flagadvancebalance = ''S''
),0)]{V} = 0
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF017','1','I','itinerationrefund','S','S','S','N','N',{ts '2011-07-15 15:38:20.280'},'Nino07032012','In questa fase non è posssibile inserire nuove spese di anticipo.','N','-- Missioni WINDOWS: 
-- la regola non deve scattare se la missione è nello stato
-- "APPROVATA" e almeno un ente autorizzativo ha espresso un parere
-- oppure
-- "INSERITA"
--
-- Missioni WEB:
-- la regola non deve scattare se la missione è nello stato "BOZZA"

-- Si sta inserendo una spesa di Anticipo
ISNULL(%<itinerationrefund.flagadvancebalance>%,''S'') <> ''A''
-- Siamo nella fase di anticipo
OR
(
[SELECT GETDATE()]{D} < [SELECT ISNULL(I.start,{d ''1900-01-01''})  FROM itineration I WHERE I.iditineration = %<itinerationrefund.iditineration>%]{D} 
)
OR
-- E'' una missione Windows <> Approvata e <> Inserita
(
[select count(*) 
 FROM  itineration I
 WHERE  I.iditineration = %<itinerationrefund.iditineration>%
 AND
 ISNULL(I.flagweb,''N'') = ''N''
AND
 (
	 (
		(I.iditinerationstatus = 6) 
		AND
		(([(select count(*) from itinerationauthagency IA
where IA.iditineration = %<itinerationrefund.iditineration>%
and  isnull(IA.flagstatus,''D'') <> ''D'')] {I} ) = 0
		)
	 ) 
	OR 
	(I.iditinerationstatus = 4)
)
]{I}  > 0
)
OR
-- E'' una Missione Web <> Bozza
[SELECT count(*) 
 FROM  itineration I
 WHERE  I.iditineration = %<itinerationrefund.iditineration>%
 AND
 ISNULL(I.flagweb,''N'') = ''S''
 AND  (I.iditinerationstatus= 1)
-- bozza
]{I}  > 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF019','1','I','itinerationrefund','S','S','S','N','N',{ts '2010-05-07 14:44:52.437'},'SA','Le date della spesa sono incoerenti con le date della missione.','N','[dateadd(dd,0,datediff(dd,0,%<itinerationrefund.starttime>%))]{D} >= [(select start from itineration where iditineration=%<itinerationrefund.iditineration>%)]{D}
AND
[dateadd(dd,0,datediff(dd,0,%<itinerationrefund.stoptime>%))] {D} <= [(select stop from itineration where iditineration=%<itinerationrefund.iditineration>%)]{D}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF021','1','I','itinerationrefund','S','S','S','N','N',{ts '2012-05-08 14:34:48.627'},'sa','Il Rimborso di tipo Forfettario non può essere applicato insieme ad altri ( eccetto quelli per Viaggio)','N','-- 5=Rimborso forfettario, 3=Viaggio

-- Se ci sono rimborsi forfettari, non possono esserci altri tipi di rimborsi eccetto quelli di viaggio
([SELECT COUNT(*)
FROM  itinerationrefund
WHERE  iditinerationrefundkind in (select iditinerationrefundkind from itinerationrefundkind
					where iditinerationrefundkindgroup = 5 )
AND  iditineration = %<itinerationrefund.iditineration>%
AND flagadvancebalance = %<itinerationrefund.flagadvancebalance>%
]{I} = 0)

OR

([SELECT COUNT(*)
FROM  itinerationrefund
WHERE  iditinerationrefundkind in (select iditinerationrefundkind from itinerationrefundkind
					where iditinerationrefundkindgroup not in (3,5)
				and codeitinerationrefundkind  not in (''QUOTE'',''07_CONFERENCE'')
		 )
AND  iditineration = %<itinerationrefund.iditineration>%
AND flagadvancebalance = %<itinerationrefund.flagadvancebalance>%
]{I} = 0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF021','2','I','itinerationrefund','S','S','S','N','N',{ts '2011-11-02 14:47:08.627'},'sa','Non si possono applicare più Rimborsi Forfettari in periodi sovrapposti.','N','[(SELECT  iditinerationrefundkindgroup 
FROM itinerationrefundkind
WHERE  iditinerationrefundkind = %<itinerationrefund.iditinerationrefundkind>% )]{I} <> 5

OR
(
([SELECT COUNT(*)
FROM  itinerationrefund
WHERE  iditinerationrefundkind in (select iditinerationrefundkind from itinerationrefundkind
					where iditinerationrefundkindgroup=5 )
AND  nrefund <> %<itinerationrefund.nrefund>%
AND  iditineration = %<itinerationrefund.iditineration>%
and flagadvancebalance = %<itinerationrefund.flagadvancebalance>%
AND  %<itinerationrefund.starttime>% >= itinerationrefund.starttime 
AND  %<itinerationrefund.starttime>%<= itinerationrefund.stoptime
]{I} = 0)

AND

([SELECT COUNT(*)
FROM  itinerationrefund
where iditinerationrefundkind in (select iditinerationrefundkind from itinerationrefundkind
					where iditinerationrefundkindgroup=5 )
AND  nrefund <> %<itinerationrefund.nrefund>%
AND  iditineration = %<itinerationrefund.iditineration>%
AND flagadvancebalance = %<itinerationrefund.flagadvancebalance>%
AND  %<itinerationrefund.stoptime>% >= itinerationrefund.starttime 
AND  %<itinerationrefund.stoptime>% <= itinerationrefund.stoptime
]{I} = 0)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF022','1','I','itinerationrefund','S','S','S','N','N',{ts '2011-11-25 18:12:16.610'},'sa','L''importo giornaliero della spesa non può superare quello previsto per la classe di appartenenza.','N','-- spese di vitto
(
 ISNULL([select  iditinerationrefundkindgroup 
    from itinerationrefundkind 
  where iditinerationrefundkind =%<itinerationrefund.iditinerationrefundkind>% ]{I},0) <> 1
)
OR
-- Importo giornaliero della spesa = importo spesa/ n.giorni
(
[isnull(
( %<itinerationrefund.amount>% /
[SELECT DATEDIFF(day,starttime,stoptime) +1
	FROM itinerationrefund
	WHERE itinerationrefund.iditineration = %<itinerationrefund.iditineration>%  
	AND itinerationrefund.nrefund = %<itinerationrefund.nrefund>%]{I}),0)]{V}
<=
-- Importo giornaliero previsto della spesa, letto dalla tabella MacroareaBoard. Prendiamo 1 o 2 a seconda della pos.giuridica dell''anagrafica
([SELECT CASE 
		WHEN [(select foreignclass from position
			JOIN registrylegalstatus
				ON position.idposition = registrylegalstatus.idposition
			JOIN itineration
				ON itineration.idregistrylegalstatus = registrylegalstatus.idregistrylegalstatus 
				AND itineration.idreg = registrylegalstatus.idreg 
			WHERE itineration.iditineration = %<itinerationrefund.iditineration>%)]{C} = ''1''
		THEN  ([SELECT amount_1
			FROM macroareaboard
			JOIN foreigncountry
				ON foreigncountry.idmacroarea = macroareaboard.idmacroareaboard
			WHERE foreigncountry.idforeigncountry = %<itinerationrefund.idforeigncountry>%])
		ELSE  ([SELECT amount_2
			FROM macroareaboard
			JOIN foreigncountry
				ON foreigncountry.idmacroarea = macroareaboard.idmacroareaboard
			WHERE foreigncountry.idforeigncountry  = %<itinerationrefund.idforeigncountry>%])
		END]{V})

)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF010','1','U','itinerationrefund','S','S','S','N','N',{ts '2011-11-25 14:46:54.157'},'sa','La tipologia della spesa %<itinerationrefund.description>% non è consentita in base alla riduzione applicata.','N','(
(%<itinerationrefund.iditinerationrefundkind>%=&<itinerationrefund.iditinerationrefundkind>&)
AND
(%<itinerationrefund.flag_geo>%=&<itinerationrefund.flag_geo>&)
)
OR
(isnull(%<itinerationrefund.flag_geo>%,''I'') = ''I'')
OR
-- spese di viaggio
(
 ISNULL([select  iditinerationrefundkindgroup 
    from itinerationrefundkind 
  where iditinerationrefundkind =%<itinerationrefund.iditinerationrefundkind>% ]{I},0) in (3,4)
)
OR
isnull(
([select  count(itinerationlap.lapnumber) from itinerationlap 
		where itinerationlap.iditineration=%<itinerationrefund.iditineration>%
			and %<itinerationrefund.starttime>% <= itinerationlap.starttime 
			and itinerationlap.stoptime >=%<itinerationrefund.starttime>%
			and isnull(itinerationlap.allowance,0) > 0]{I}),0)
=0
	
OR
(
  [select count(*) from itinerationrefundkindgroupreduction 
   join itinerationrefundkindgroup 
	on  itinerationrefundkindgroupreduction.iditinerationrefundkindgroup=itinerationrefundkindgroup.iditinerationrefundkindgroup
   join itinerationrefundkind 
	on itinerationrefundkindgroup.iditinerationrefundkindgroup=itinerationrefundkind.iditinerationrefundkindgroup
where 
(select  count(itinerationlap.idreduction) from itinerationlap 
		where itinerationlap.iditineration=%<itinerationrefund.iditineration>%
		and isnull(itinerationlap.idreduction, itinerationrefundkindgroupreduction.idreduction) =
			  itinerationrefundkindgroupreduction.idreduction
		and %<itinerationrefund.starttime>% <= itinerationlap.starttime 
		and itinerationlap.stoptime >=%<itinerationrefund.starttime>%
	) > 0	
 ]{I} >0

)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF011','1','U','itinerationrefund','S','S','S','N','N',{ts '2009-11-04 12:48:34.767'},'SARA','Nessuna regola presente per %<itinerationrefund.description>%.','N','[isnull([execute get_itinerationrefundrule %<itinerationrefund.iditineration>%, %<itinerationrefund.nrefund>%, ''iddetail'',@outvar output]{I},0)]{I}<>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF011','2','U','itinerationrefund','S','S','S','N','N',{ts '2009-11-04 12:48:43.017'},'SARA','Il numero di ore presente nella spesa %<itinerationrefund.description>% è inferiore a quello consentito','N','isnull(convert(int,
	[execute get_itinerationrefundrule %<itinerationrefund.iditineration>%,%<itinerationrefund.nrefund>%,
	''nhour_min'', @outvar output]{N})
,0)=0
OR
(
datediff(hour, %<itinerationrefund.starttime>%,%<itinerationrefund.stoptime>%)  
>= 
isnull(convert(int,[execute get_itinerationrefundrule %<itinerationrefund.iditineration>%,%<itinerationrefund.nrefund>%,
''nhour_min'', @outvar output]{I}),0)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF011','3','U','itinerationrefund','S','S','S','N','N',{ts '2009-11-04 12:48:48.767'},'SARA','Limite massimo consentito di anticipo superato per %<itinerationrefund.description>%.','N','(isnull(%<itinerationrefund.advancepercentage>%,0)=0) or 
(%<itinerationrefund.advancepercentage>%=&<itinerationrefund.advancepercentage>&)
or
([execute get_itinerationrefundrule %<itinerationrefund.iditineration>%,%<itinerationrefund.nrefund>%,
	''advancepercentage'', @outvar output]{V}
	>=%<itinerationrefund.advancepercentage>%)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF011','4','U','itinerationrefund','S','S','S','N','N',{ts '2011-07-06 10:25:19.093'},'sa','La somma delle spese della stessa categoria di %<itinerationrefund.description>% supera il massimo consentito.','N','(%<itinerationrefund.amount>%=&<itinerationrefund.amount>&)
or
([isnull((
select sum(itinerationrefund.amount /(datediff(day,starttime,stoptime) + 1))
from itinerationrefund 
join itinerationrefundkind 
	on  itinerationrefund.iditinerationrefundkind=itinerationrefundkind.iditinerationrefundkind
where  
	itinerationrefund.iditineration=%<itinerationrefund.iditineration>%
	and 
	itinerationrefundkind.iditinerationrefundkindgroup=
	[select iditinerationrefundkindgroup from itinerationrefundkind where iditinerationrefundkind=%<itinerationrefund.iditinerationrefundkind>%]{I}
),0)]{V}
<=
[execute get_itinerationrefundrule %<itinerationrefund.iditineration>%,%<itinerationrefund.nrefund>%,
	''limit'',@outvar output]{V})
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF011','5','U','itinerationrefund','S','S','S','N','N',{ts '2009-11-04 12:49:08.517'},'SARA','Il numero di ore presente nella spesa %<itinerationrefund.description>% supera quello consentito.','N','isnull(convert(int,
	[execute get_itinerationrefundrule %<itinerationrefund.iditineration>%,%<itinerationrefund.nrefund>%,
	''nhour_max'', @outvar output]{N})
,0)=0
OR
(
datediff(hour, %<itinerationrefund.starttime>%,%<itinerationrefund.stoptime>%)  
<= 
isnull(convert(int,[execute get_itinerationrefundrule %<itinerationrefund.iditineration>%,%<itinerationrefund.nrefund>%,
''nhour_max'', @outvar output]{I}),0)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF013','1','U','itinerationrefund','S','S','S','N','N',{ts '2010-11-17 12:09:35.750'},'sara','Il Tipo della spesa %<itinerationrefund.description>%  deve essere tra quelli configurati nel modello autorizzativo associato alla missione','N','(&<itinerationrefund.iditinerationrefundkind>& = 
 %<itinerationrefund.iditinerationrefundkind>%)
OR
(
[SELECT COUNT(*)
    FROM itineration 
 WHERE iditineration = %<itinerationrefund.iditineration>%
      AND iditinerationstatus IN (5,6)
      AND ISNULL(flagweb,''N'') = ''S''
      AND idauthmodel IS NOT NULL
]{I} = 0
)
OR
(
[SELECT COUNT(*)
    FROM authmodelitinerationrefundkind 
 WHERE idauthmodel = (
			 SELECT idauthmodel 
			   FROM  itineration 
 			WHERE  iditineration = %<itinerationrefund.iditineration>%
			)
      AND iditinerationrefundkind = %<itinerationrefund.iditinerationrefundkind>%
]{I} > 0)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF015','1','U','itinerationrefund','S','S','S','N','N',{ts '2010-11-17 16:07:15.453'},'sara','La somma delle spese di tipo "Anticipo Richiesto" non deve superare la somma delle spese di tipo "Rendiconto Spese"','N','(
&<itinerationrefund.amount>& = %<itinerationrefund.amount>%
)
OR
(
[isnull((
select sum(itinerationrefund.amount) 
from itinerationrefund 
where itinerationrefund.iditineration=%<itinerationrefund.iditineration>%
   and itinerationrefund.flagadvancebalance = ''A''
),0)]{V}
<=
[isnull((
select sum(itinerationrefund.amount) 
from itinerationrefund 
where itinerationrefund.iditineration=%<itinerationrefund.iditineration>%
   and itinerationrefund.flagadvancebalance = ''S''
),0)]{V}
)
OR
(
[isnull((
select sum(itinerationrefund.amount) 
from itinerationrefund 
where itinerationrefund.iditineration=%<itinerationrefund.iditineration>%
   and itinerationrefund.flagadvancebalance = ''S''
),0)]{V} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF017','1','U','itinerationrefund','S','S','S','N','N',{ts '2011-01-17 10:23:52.360'},'sara','In questa fase non è posssibile modificare l''importo delle spese di anticipo già inserite.','N','ISNULL(%<itinerationrefund.amount>%,0)  =
ISNULL(&<itinerationrefund.amount>&,0) 
OR
ISNULL(%<itinerationrefund.flagadvancebalance>%,''S'') <> ''A''
OR
(
[SELECT GETDATE()]{D} < 
 [SELECT ISNULL(I.start,{d ''1900-01-01''})  FROM itineration I 
 WHERE I.iditineration = %<itinerationrefund.iditineration>%]{D}
) 
OR
(
[select count(*) 
 FROM  itineration I
 WHERE  I.iditineration = %<itinerationrefund.iditineration>%
 AND
 ISNULL(I.flagweb,''N'') = ''N''
AND
 (
	 (
		(I.iditinerationstatus = 6) 
		AND
		(([(select count(*) from itinerationauthagency IA
where IA.iditineration = %<itinerationrefund.iditineration>%
and  isnull(IA.flagstatus,''D'') <> ''D'')] {I} ) = 0
		)
	 ) 
	OR 
	(I.iditinerationstatus = 4)
)
]{I}  > 0
)
OR
(
[SELECT count(*) 
 FROM  itineration I
 WHERE  I.iditineration = %<itinerationrefund.iditineration>%
 AND
 ISNULL(I.flagweb,''N'') = ''S''
 AND  (I.iditinerationstatus= 1)
-- bozza
]{I}  > 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF019','1','U','itinerationrefund','S','S','S','N','N',{ts '2010-05-07 14:45:01.467'},'SA','Le date della spesa sono incoerenti con le date della missione.','N','[dateadd(dd,0,datediff(dd,0,%<itinerationrefund.starttime>%))]{D} >= [(select start from itineration where iditineration=%<itinerationrefund.iditineration>%)]{D}
AND
[dateadd(dd,0,datediff(dd,0,%<itinerationrefund.stoptime>%))]{D} <=  [(select stop from itineration where iditineration=%<itinerationrefund.iditineration>%)]{D}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF021','1','U','itinerationrefund','S','S','S','N','N',{ts '2012-05-08 14:35:17.817'},'sa','Il Rimborso di tipo Forfettario non può essere applicato insieme ad altri ( eccetto quelli per Viaggio)','N','-- 5=Rimborso forfettario, 3=Viaggio
&<itinerationrefund.iditinerationrefundkind>& =%<itinerationrefund.iditinerationrefundkind>%

OR
-- Se ci sono rimborsi forfettari, non possono esserci altri tipi di rimborsi eccetto quelli di viaggio
([SELECT COUNT(*)
FROM  itinerationrefund
WHERE  iditinerationrefundkind in (select iditinerationrefundkind from itinerationrefundkind
					where iditinerationrefundkindgroup = 5 )
AND  iditineration = %<itinerationrefund.iditineration>%
AND flagadvancebalance = %<itinerationrefund.flagadvancebalance>%
]{I} = 0)

OR

([SELECT COUNT(*)
FROM  itinerationrefund
WHERE  iditinerationrefundkind in (select iditinerationrefundkind from itinerationrefundkind
					where iditinerationrefundkindgroup not in (3,5) 
				and codeitinerationrefundkind  not in (''QUOTE'',''07_CONFERENCE'')
)
AND  iditineration = %<itinerationrefund.iditineration>%
AND flagadvancebalance = %<itinerationrefund.flagadvancebalance>%
]{I} = 0)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF021','2','U','itinerationrefund','S','S','S','N','N',{ts '2011-11-02 14:47:26.907'},'sa','Non si possono applicare più Rimborsi Forfettari in periodi sovrapposti.','N','--post U
[(SELECT  iditinerationrefundkindgroup 
FROM itinerationrefundkind
WHERE  iditinerationrefundkind = %<itinerationrefund.iditinerationrefundkind>% )]{I} <> 5

OR

(
(%<itinerationrefund.starttime>% = &<itinerationrefund.starttime>&) AND (%<itinerationrefund.stoptime>%  = &<itinerationrefund.stoptime>&)
)

OR

(
([SELECT COUNT(*)
FROM  itinerationrefund
WHERE  iditinerationrefundkind in (select iditinerationrefundkind from itinerationrefundkind
					where iditinerationrefundkindgroup=5 )
AND  nrefund <> %<itinerationrefund.nrefund>%
AND  iditineration = %<itinerationrefund.iditineration>%
and flagadvancebalance = %<itinerationrefund.flagadvancebalance>%
AND  %<itinerationrefund.starttime>% >= itinerationrefund.starttime 
AND  %<itinerationrefund.starttime>%<= itinerationrefund.stoptime
]{I} = 0)

AND

([SELECT COUNT(*)
FROM  itinerationrefund
where iditinerationrefundkind in (select iditinerationrefundkind from itinerationrefundkind
					where iditinerationrefundkindgroup=5 )
AND  nrefund <> %<itinerationrefund.nrefund>%
AND  iditineration = %<itinerationrefund.iditineration>%
AND flagadvancebalance = %<itinerationrefund.flagadvancebalance>%
AND  %<itinerationrefund.stoptime>% >= itinerationrefund.starttime 
AND  %<itinerationrefund.stoptime>% <= itinerationrefund.stoptime
]{I} = 0)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF022','1','U','itinerationrefund','S','S','S','N','N',{ts '2011-11-25 18:12:26.843'},'sa','L''importo giornaliero della spesa non può superare quello previsto per la classe di appartenenza.','N','(%<itinerationrefund.amount>%=&<itinerationrefund.amount>&)
OR

-- spese di vitto
(
 ISNULL([select  iditinerationrefundkindgroup 
    from itinerationrefundkind 
  where iditinerationrefundkind =%<itinerationrefund.iditinerationrefundkind>% ]{I},0) <> 1
)
OR
-- Importo giornaliero della spesa = importo spesa/ n.giorni
(
[isnull(
( %<itinerationrefund.amount>% /
[SELECT DATEDIFF(day,starttime,stoptime) +1
	FROM itinerationrefund
	WHERE itinerationrefund.iditineration = %<itinerationrefund.iditineration>%  
	AND itinerationrefund.nrefund = %<itinerationrefund.nrefund>%]{I}),0)]{V}
<=
-- Importo giornaliero previsto della spesa, letto dalla tabella MacroareaBoard. Prendiamo 1 o 2 a seconda della pos.giuridica dell''anagrafica
([SELECT CASE 
		WHEN [(select foreignclass from position
			JOIN registrylegalstatus
				ON position.idposition = registrylegalstatus.idposition
			JOIN itineration
				ON itineration.idregistrylegalstatus = registrylegalstatus.idregistrylegalstatus 
				AND itineration.idreg = registrylegalstatus.idreg 
			WHERE itineration.iditineration = %<itinerationrefund.iditineration>%)]{C} = ''1''
		THEN  ([SELECT amount_1
			FROM macroareaboard
			JOIN foreigncountry
				ON foreigncountry.idmacroarea = macroareaboard.idmacroareaboard
			WHERE foreigncountry.idforeigncountry = %<itinerationrefund.idforeigncountry>%])
		ELSE  ([SELECT amount_2
			FROM macroareaboard
			JOIN foreigncountry
				ON foreigncountry.idmacroarea = macroareaboard.idmacroareaboard
			WHERE foreigncountry.idforeigncountry  = %<itinerationrefund.idforeigncountry>%])
		END]{V})

)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','itinerationrefundkind','S','S','S','N','N',{ts '2008-07-21 13:47:29.610'},'SARA','Cancellazione Impossibile! Esistono classificazioni delle spese delle missioni collegate alla classificazione di spesa %<description>%','S','[execute count_table_field ''itinerationrefund'',''iditinerationrefundkind'',%<itinerationrefundkind.iditinerationrefundkind>%,@outvar output]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','itinerationrefundkind','S','S','S','N','N',{ts '2007-10-03 18:44:11.407'},'NINO','Classificazione delle spese della missione %<itinerationrefundkind.codeitinerationrefundkind>% già esistente','S','[(SELECT count(*) 
from itinerationrefundkind 
where iditinerationrefundkind = %<itinerationrefundkind.iditinerationrefundkind>%)]{V} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','itinerationrefundkind','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione della classificazione delle spese della missione già esistente','S','[(SELECT count(*) 
from itinerationrefundkind 
where description = %<itinerationrefundkind.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','3','I','itinerationrefundkind','S','S','S','N','N',{ts '2007-11-13 16:10:40.640'},'SARA','Codice del tipo rimborso spese %<codeitinerationrefundkind>% già esistente','S','[(SELECT count(*) 
from itinerationrefundkind 
where codeitinerationrefundkind  = %<itinerationrefundkind.codeitinerationrefundkind>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','itinerationrefundkind','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione della classificazione delle spese della missione già esistente','S','[(SELECT count(*) 
from itinerationrefundkind 
where description = %<itinerationrefundkind.description>% 
and iditinerationrefundkind <> %<itinerationrefundkind.iditinerationrefundkind>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','itinerationrefundruledetail',null,null,null,null,null,null,null,'Esiste già un altro dettaglio dello stesso Limite di Spesa al quale è stata associata la qualifica %<idposition>%  e le stesse classi stipendiali.',null,null)
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF007','1','D','itinerationtax','S','S','S','S','S',{ts '2007-12-05 16:38:36.890'},'pinor','Attenzione si sta effettuando una cancellazione su una missione contabilizzata come Pagamento o Saldo','S','--pre

 [SELECT COUNT(*) FROM expenseitineration 
	WHERE expenseitineration.iditineration = %<itinerationtax.iditineration>%
	AND expenseitineration.movkind=4
 ]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF007','1','I','itinerationtax','S','S','S','S','S',{ts '2007-12-05 16:39:04.170'},'pinor','Attenzione si sta effettaundo un inserimento su una missione contabilizzata come Pagamento o Saldo','N','--post

 [SELECT COUNT(*) FROM expenseitineration 
	WHERE expenseitineration.iditineration = %<itinerationtax.iditineration>%
	AND expenseitineration.movkind=4
 ]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('TRASF007','1','U','itinerationtax','S','S','S','S','S',{ts '2007-12-05 16:39:23.267'},'pinor','Attenzione si sta modificando una missione contabilizzata come Pagamento o Saldo','S','--pre

 [SELECT COUNT(*) FROM expenseitineration 
	WHERE expenseitineration.iditineration = %<itinerationtax.iditineration>%
	AND expenseitineration.movkind=4
 ]{I} = [0]

OR

isnull(%<itinerationtax.employtax>%,0) = isnull(&<itinerationtax.employtax>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA032','1','D','iva_mixed','S','S','S','N','N',{ts '2009-06-12 16:13:39.563'},'Nino07032012','Le percentuali di IVA uso Promiscuo  non possono essere cancellate dal Dipartimento.','S','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA032','1','I','iva_mixed','S','S','S','N','N',{ts '2009-06-12 16:13:52.110'},'Nino07032012','Le percentuali di IVA uso Promiscuo  non possono essere inserite dal Dipartimento.','S','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA032','1','U','iva_mixed','S','S','S','N','N',{ts '2009-06-12 16:13:57.593'},'Nino07032012','Le percentuali di IVA uso Promiscuo  non possono essere modificate dal Dipartimento.','S','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA032','1','D','iva_prorata','S','S','S','N','N',{ts '2009-06-12 16:14:08.640'},'Nino07032012','Le percentuali di IVA Prorata non possono essere cancellate dal Dipartimento.','S','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA032','1','I','iva_prorata','S','S','S','N','N',{ts '2009-06-12 16:14:14.017'},'Nino07032012','Le percentuali di IVA Prorata non possono essere inserite dal Dipartimento.','S','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA032','1','U','iva_prorata','S','S','S','N','N',{ts '2009-06-12 16:14:19.780'},'Nino07032012','Le percentuali di IVA Prorata non possono essere modificate dal Dipartimento.','S','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA032','1','D','ivakind','S','S','S','N','N',{ts '2009-05-24 16:40:16.610'},'Nino07032012','I Tipi IVA non possono essere cancellati dal Dipartimento.','S','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','ivakind','S','S','S','N','N',{ts '2007-11-21 11:12:44.983'},'NINO','Il tipo Iva %<description>% non può essere cancellato in quanto esistono dettagli di documenti Iva che lo referenziano.','S','[(SELECT count(*) 
from invoicedetail 
where idivakind = %<ivakind.idivakind>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','ivakind','S','S','S','N','N',{ts '2007-11-21 11:08:43.920'},'NINO','Il tipo Iva %<description>% non può essere cancellato in quanto esistono prestazioni professionali che lo referenziano.','S','[(SELECT count(*) 
from profservice 
where idivakind = %<ivakind.idivakind>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','ivakind','S','S','S','N','N',{ts '2007-11-21 11:08:35.313'},'NINO','Il tipo Iva %<description>% non può essere cancellato in quanto esistono dettagli di contratto attivo che lo referenziano.','S','[(SELECT count(*) 
from estimatedetail 
where idivakind = %<ivakind.idivakind>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','ivakind','S','S','S','N','N',{ts '2007-11-21 11:09:04.127'},'NINO','Il tipo Iva %<description>% non può essere cancellato in quanto esistono dettagli di contratto passivo che lo referenziano.','S','[(SELECT count(*) 
from mandatedetail 
where idivakind = %<ivakind.idivakind>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA032','1','I','ivakind','S','S','S','N','N',{ts '2009-05-24 16:39:59.967'},'Nino07032012','I Tipi IVA non possono essere creati dal Dipartimento.','S','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','ivakind','S','S','S','N','N',{ts '2007-11-22 09:52:04.140'},'NINO','Tipo di IVA %<codeivakind>% già esistente','S','[(SELECT count(*) 
from ivakind 
where codeivakind = %<ivakind.codeivakind>%)]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','ivakind','S','S','S','N','N',{ts '2007-11-21 11:03:11.390'},'NINO','Descrizione del tipo di IVA già esistente','S','[(SELECT count(*) 
from ivakind 
where description = %<ivakind.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA032','1','U','ivakind','S','S','S','N','N',{ts '2009-05-24 16:40:03.547'},'Nino07032012','I Tipi IVA non sono modificabili dal Dipartimento.','S','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','ivakind','S','S','S','N','N',{ts '2007-11-21 11:03:18.767'},'NINO','Descrizione del tipo di IVA già esistente','S','[(SELECT count(*) 
from ivakind 
where idivakind <> %<ivakind.idivakind>% 
and description = %<ivakind.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA004','1','D','ivapay','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Operazione Impossibile, la liquidazione periodica dell''IVA %<yivapay>% %<nivapay>% è collegata a movimenti di entrata','S','[SELECT COUNT(*) 
FROM ivapayincome 
WHERE yivapay = %<ivapay.yivapay>% 
AND nivapay = %<ivapay.nivapay>%]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA004','2','D','ivapay','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Operazione Impossibile, la liquidazione periodica dell''IVA %<yivapay>% %<nivapay>% è collegata a movimenti di spesa','S','[SELECT COUNT(*) 
FROM ivapayexpense 
WHERE yivapay = %<ivapay.yivapay>% 
AND nivapay = %<ivapay.nivapay>%]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA029','1','D','ivapay','S','S','S','N','N',{ts '2011-03-04 12:41:17.217'},'sa','Non è possibile cancellare la liquidazione perché ne esistono altre di periodi successivi','S','[select count(*) from ivapay where yivapay >=%<ivapay.yivapay>%
	and stop > %<ivapay.stop>% 
	and (ISNULL((ivapay.flag),3)&ISNULL((%<ivapay.flag>%),3)&3) <> 0
]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA031','1','D','ivapay','S','S','S','N','N',{ts '2011-11-07 10:31:15.750'},'sa','La liquidazione IVA non è modificabile dal Dipartimento.','S','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA002','1','I','ivapay','S','S','S','N','N',{ts '2011-03-04 12:42:50.407'},'sa','Non può essere creata una liquidazione con un periodo parzialmente sovrapposto a  %<start>% - %<stop>% in quanto esiste già una liquidazione per lo stesso periodo.','S','[SELECT count(*) 
from ivapay 
where 
 (	(start <= %<ivapay.start>% 
	and stop >= %<ivapay.start>%) 
	or (start <= %<ivapay.stop>% 
	   and stop >= %<ivapay.stop>%)
  )
and (
	start <> %<ivapay.start>% 
	or stop <> %<ivapay.start>%
)
and 
       (ISNULL((ivapay.flag),3)&ISNULL((%<ivapay.flag>%),3)&3) <> 0


]{N} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA041','1','I','ivapay','S','S','S','N','N',{ts '2011-03-11 10:31:22.277'},'sara','Il tipo liquidazione IVA non è coerente con la modalità scelta nella configurazione configurazione comune.','S','[SELECT COUNT(*) FROM dbdepartment]{I}=1
OR
(
	[(SELECT ISNULL(flagsepivapay,''N'') FROM  commonconfig
	  WHERE ayear  = %<sys_esercizio>% )]{C} = ''S''
	AND  (ISNULL(%<ivapay.flag>%,3)&3) <> 3
	
)

OR
(
	[(SELECT ISNULL(flagsepivapay,''N'') FROM  commonconfig
	  WHERE ayear  = %<sys_esercizio>%)]{C} = ''N''
	AND  (ISNULL(%<ivapay.flag>%,3)&3)  = 3 	
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA031','1','U','ivapay','S','S','S','N','N',{ts '2009-05-05 14:40:22.383'},'SARA','La liquidazione IVA non è modificabile dal Dipartimento.','N','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA032','1','D','ivapayperiodicity','S','S','S','N','N',{ts '2009-06-12 16:21:37.280'},'Nino07032012','La configurazione della periodicità di versamento IVA non può essere cancellata dal Dipartimento.','S','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','ivapayperiodicity','S','S','S','N','N',{ts '2008-02-22 14:04:38.337'},'SARA','Il tipo di periodicità di liquidazione Iva %<description>% non può essere cancellato in quanto esistono personalizzazioni della liquidazione Iva che lo referenziano.','S','[execute count_table_field ''config'',''idivapayperiodicity'',
%<ivapayperiodicity.idivapayperiodicity>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA032','1','I','ivapayperiodicity','S','S','S','N','N',{ts '2009-06-12 16:21:58.717'},'Nino07032012','La configurazione della periodicità di versamento IVA non può essere inserita dal Dipartimento.','S','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','ivapayperiodicity','S','S','S','N','N',{ts '2007-11-21 11:14:15.077'},'NINO','Descrizione del tipo di periodicità della liquidazione IVA già esistente','S','[(SELECT count(*) 
from ivapayperiodicity 
where description = %<ivapayperiodicity.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA032','1','U','ivapayperiodicity','S','S','S','N','N',{ts '2009-06-12 16:22:35.157'},'Nino07032012','La configurazione della periodicità di versamento IVA non può essere modificata dal Dipartimento.','S','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','ivapayperiodicity','S','S','S','N','N',{ts '2007-11-21 11:14:20.967'},'NINO','Descrizione del tipo di periodicità della liquidazione IVA già esistente','S','[(SELECT count(*) 
from ivapayperiodicity 
where idivapayperiodicity <> %<ivapayperiodicity.idivapayperiodicity>% 
and description = %<ivapayperiodicity.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA015','1','D','ivaregister','S','S','S','N','N',{ts '2010-04-27 15:31:49.563'},'SARA','Il numero del registro IVA: %<ivaregisterkind.description>% - %<ivaregister.yivaregister>% / %<ivaregister.nivaregister>% non può essere cancellato in quanto esistono registrazioni successive.
La cancellazione, causerebbe salti nelle numerazione!','N','[SELECT COUNT(*) FROM ivaregister
WHERE idivaregisterkind = %<ivaregister.idivaregisterkind>%
AND yivaregister = %<ivaregister.yivaregister>%
AND nivaregister > %<ivaregister.nivaregister>%]{I} = 0
OR (%<ivaregister.nivaregister>%=1)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA015','1','I','ivaregister','S','S','S','N','N',{ts '2010-04-27 15:20:44.297'},'SARA','Il numero del registro IVA: %<ivaregister.yivaregister>% / %<ivaregister.nivaregister>% non può essere inserito in quanto manca la registrazione precedente.
L''inserimento causerebbe salti nelle numerazione!','N','([SELECT COUNT(*) FROM ivaregister
WHERE idivaregisterkind = %<ivaregister.idivaregisterkind>%
AND yivaregister = %<ivaregister.yivaregister>%
AND nivaregister  = %<ivaregister.nivaregister>% - 1 ]{I} <> 0) OR (%<ivaregister.nivaregister>%=1)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA032','1','D','ivaregisterkind','S','S','S','N','N',{ts '2009-06-12 16:06:19.110'},'Nino07032012','I Tipi di registri  IVA non possono essere cancellati dal Dipartimento.','S','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','ivaregisterkind','S','S','S','N','N',{ts '2007-09-13 12:03:46.780'},'NINO','Il tipo di registro Iva %<description>% non può essere cancellato in quanto esistono registrazioni di operazioni Iva che lo referenziano.','S','[(SELECT count(*) 
from ivaregister 
where idivaregisterkind = %<ivaregisterkind.idivaregisterkind>%)]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','ivaregisterkind','S','S','S','N','N',{ts '2007-09-13 12:03:53.390'},'NINO','Il tipo di registro Iva %<description>% non può essere cancellato in quanto esistono liquidazioni Iva che lo referenziano.','S','[(SELECT count(*) 
from ivapaydetail 
where idivaregisterkind = %<ivaregisterkind.idivaregisterkind>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA032','1','I','ivaregisterkind','S','S','S','N','N',{ts '2009-06-12 16:05:26.967'},'Nino07032012','I Tipi  di registri IVA non possono essere inseriti dal Dipartimento.','S','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','ivaregisterkind','S','S','S','N','N',{ts '2007-11-21 10:59:13.250'},'NINO','Tipo del registro IVA %<codeivaregisterkind>% già esistente','S','[(SELECT count(*) 
from ivaregisterkind 
where codeivaregisterkind = %<ivaregisterkind.codeivaregisterkind>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','ivaregisterkind','S','S','S','N','N',{ts '2007-11-21 11:00:05.203'},'NINO','Descrizione del tipo registro IVA già esistente','S','[(SELECT COUNT(*) 
from ivaregisterkind 
where description = %<ivaregisterkind.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA032','1','U','ivaregisterkind','S','S','S','N','N',{ts '2009-06-12 16:05:14.390'},'Nino07032012','I Tipi  di registri  IVA non possono essere modificati dal Dipartimento.','S','user=''amministrazione''

OR 

[SELECT COUNT(*) FROM dbdepartment]{I}=1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','ivaregisterkind','S','S','S','N','N',{ts '2007-11-21 11:01:07.030'},'NINO','Descrizione del tipo registro IVA già esistente','S','[(SELECT count(*) 
from ivaregisterkind 
where idivaregisterkind <> %<ivaregisterkind.idivaregisterkind>% 
and description = %<ivaregisterkind.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','lcard','S','S','S','N','N',{ts '2011-09-26 13:33:18.797'},'sara','Cancellazione Impossibile! Esistono variazioni di bilancio  collegate alla CARD %<lcard.idlcard>% - %<lcard.title>%','S','[(SELECT count(*) 
from finvardetail 
where idlcard = %<lcard.idlcard>%)]{I} 
= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','lcard','S','S','S','N','N',{ts '2011-09-26 13:36:13.733'},'sara','Cancellazione Impossibile! Esistono prenotazioni di magazzino collegate alla CARD %<lcard.idlcard>% - %<lcard.title>%','S','[(SELECT count(*) 
from booking 
where idlcard = %<lcard.idlcard>%)]{I} 
= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','lcard','S','S','S','N','N',{ts '2011-09-26 13:37:19.967'},'sara','Cancellazione Impossibile! Esistono utilizzatori collegati alla CARD %<lcard.idlcard>% - %<lcard.title>%','S','[(SELECT count(*) 
from lcardcf 
where idlcard = %<lcard.idlcard>%)]{I} 
= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','lcard','S','S','S','N','N',{ts '2011-09-26 13:37:48.063'},'sara','Cancellazione Impossibile! Esistono ricariche collegate alla CARD %<lcard.idlcard>% - %<lcard.title>%','S','[(SELECT count(*) 
from lcardvar
where idlcard = %<lcard.idlcard>%)]{I} 
= 0 ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','lcardvar','S','S','S','N','N',{ts '2011-11-17 16:08:09.517'},'assistenza','Cancellazione impossibile! Esistono variazioni di bilancio associate alla ricarica Card n. %<lcardvar.nlvar>% / %<lcardvar.ylvar>%','S','[(SELECT COUNT(*) FROM finvar
	WHERE yvar = %<lcardvar.yvar>% 
	AND      nvar = %<lcardvar.nvar>%
)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','list','S','S','S','N','N',{ts '2010-07-20 12:26:48.437'},'SA','Cancellazione impossibile! Esistono righe di magazzino associate all''articolo %<list.intcode>% - %<list.description>%','S','[(SELECT count(*) 
from stock
where idlist = %<list.idlist>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','list','S','S','S','N','N',{ts '2010-07-20 12:26:28.610'},'SA','Cancellazione impossibile! Esistono prenotazioni collegate all''articolo %<list.intcode>% - %<list.description>%','S','[(SELECT count(*) 
from bookingdetail
where idlist = %<list.idlist>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','list','S','S','S','N','N',{ts '2010-07-20 12:32:11.250'},'SA','Cancellazione impossibile! Esistono dettagli contratti passivi associati all''articolo %<list.intcode>% - %<list.description>%.','S','[(SELECT COUNT(*) FROM mandatedetail
	WHERE idlist = %<list.idlist>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','list','S','S','S','N','N',{ts '2010-07-20 12:37:50.967'},'SA','Cancellazione impossibile! Esistono dettagli fattura associati all''articolo %<list.intcode>% - %<list.description>%.','S','[(SELECT COUNT(*) FROM invoicedetail
	WHERE idlist = %<list.idlist>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ011','1','I','list','S','S','S','S','S',{ts '2010-07-21 10:04:48.530'},'SA','Non è possibile inserire un Listino con Codice Listino %<list.intcode>% perchè già utilizzato','N','[(select count(*) from list where intcode = %<list.intcode>%)]{I} = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ011','2','I','list','S','S','S','S','S',{ts '2010-07-21 13:26:44.703'},'SA','Non è possibile inserire un Listino con Codice a barra per uso interno %<list.intbarcode>% perchè già utilizzato','N','%<list.intbarcode>% IS NULL

OR

[(select count(*) from list where intbarcode = %<list.intbarcode>% )]{I} = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ011','3','I','list','S','S','S','S','S',{ts '2010-07-21 13:26:59.563'},'SA','Non è possibile inserire un Listino con Codice Dati Produttore %<list.extcode>% perchè già utilizzato','N','%<list.extcode>% IS NULL

OR 

[(select count(*) from list where extcode = %<list.extcode>%)]{I} = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ011','4','I','list','S','S','S','S','S',{ts '2010-07-21 13:27:09.390'},'SA','Non è possibile inserire un Listino con Codice a Barre Produttore  %<list.extbarcode>% perchè già utilizzato','N','%<list.extbarcode>% IS NULL

OR 

[(select count(*) from list where extbarcode = %<list.extbarcode>%)]{I} = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ013','1','I','list','S','S','S','N','N',{ts '2010-07-29 11:27:50.030'},'SARA','La voce di listino  %<list.description>% è imputata a una classificazione merceologica da cui ne dipendono altre. Selezionare una classificazione più specifica.','S','([SELECT COUNT(*)  FROM listclass  
WHERE listclass.paridlistclass = %<list.idlistclass>%]{I} = 0) 
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ011','1','U','list','S','S','S','S','S',{ts '2010-07-21 10:08:52.577'},'SA','Non è possibile inserire il Codice Listino %<list.intcode>% perchè già utilizzato','N','[(select count(*) from list where intcode = %<list.intcode>%)]{I} = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ011','2','U','list','S','S','S','S','S',{ts '2010-07-21 13:29:36.593'},'SA','Non è possibile inserire il Codice a barra per uso interno %<list.intbarcode>% perchè già utilizzato','N','%<list.intbarcode>% IS NULL

OR

[(select count(*) from list where intbarcode= %<list.intbarcode>%)]{I} = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ011','3','U','list','S','S','S','S','S',{ts '2010-07-21 13:29:06.127'},'SA','Non è possibile inserire il Codice Dati Produttore %<list.extcode>% perchè già utilizzato','N','%<list.extcode>%  IS NULL

OR 


[(select count(*) from list where extcode= %<list.extcode>%)]{I} = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ011','4','U','list','S','S','S','S','S',{ts '2010-07-21 13:29:18.687'},'SA','Non è possibile inserire il Codice a Barre Produttore  %<list.extbarcode>% perchè già utilizzato','N','%<list.extbarcode>% IS NULL

OR

[(select count(*) from list where extbarcode= %<list.extbarcode>%)]{I} = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ013','1','U','list','S','S','S','N','N',{ts '2010-07-29 11:31:16.343'},'SARA','La voce di listino  %<list.description>% è imputata a una classificazione merceologica da cui ne dipendono altre. Selezionare una classificazione più specifica.','S','ISNULL(&<list.idlistclass>&,0) = ISNULL(%<list.idlistclass>%,0)
OR
([SELECT COUNT(*)  FROM listclass  
WHERE listclass.paridlistclass = %<list.idlistclass>%]{I} = 0) 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','U','list','S','S','S','N','N',{ts '2010-07-22 14:39:10.577'},'SA','Non è possibile modificare il Coeff. di conversione se l''articolo è stato inserito nel magazzino.','N','&<list.unitsforpackage>& = %<list.unitsforpackage>%

OR

[(SELECT count(*) 
from stock
where idlist = %<list.idlist>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','listclass','S','S','S','N','N',{ts '2011-11-09 15:19:15.580'},'sara','Cancellazione Impossibile! Esistono Classificazioni dipendenti dalla classificazione %<title>%','S','[SELECT COUNT(*) FROM listclass WHERE paridlistclass = %<listclass.idlistclass>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','listclass','S','S','S','N','N',{ts '2011-11-09 15:21:59.250'},'sara','Cancellazione Impossibile! Esistono Articoli classificati come: %<title>%','S','[SELECT COUNT(*) FROM list WHERE idlistclass = %<listclass.idlistclass>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','listclass','S','S','S','N','N',{ts '2011-11-09 15:20:13.893'},'sara','Codice della classificazione %<title>% già esistente','S','[SELECT COUNT(*) FROM listclass WHERE codelistclass = %<listclass.codelistclass>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','D','location','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI032','1','D','location','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','location','S','S','S','N','N',{ts '2007-11-08 13:09:54.627'},'SARA','L''ubicazione %<locationcode>% non può essere cancellata in quanto esistono beni inventariabili che la referenziano.','S','[(SELECT count(*) 
from assetlocation 
where idlocation = %<location.idlocation>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','location','S','S','S','N','N',{ts '2007-09-13 12:04:05.157'},'NINO','L''ubicazione %<locationcode>% non può essere cancellata in quanto esistono trasferimenti di beni inventariabili che la referenziano.','S','[(SELECT count(*) 
from assetlocation 
where idlocation = %<location.idlocation>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','location','S','S','S','N','N',{ts '2007-09-13 12:04:10.813'},'NINO','L''ubicazione %<locationcode>% non può essere cancellata in quanto esistono ubicazioni del livello inferiore che la referenziano.','S','[(SELECT count(*) 
from location 
where paridlocation = %<location.idlocation>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','I','location','S','S','S','N','N',{ts '2007-05-25 13:05:31.327'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','location','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Ubicazione %<locationcode>% già esistente','S','[(SELECT count(*) 
from location 
where locationcode = %<location.locationcode>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','I','location','S','S','S','N','N',{ts '2007-09-13 12:04:15.877'},'NINO','L''ubicazione %<locationcode>% non può essere creata in quanto esistono classificazioni alternative delle ubicazioni che referenziano l''ubicazione da cui questa dipende.','S','[(SELECT count(*) 
from locationsorting 
where idlocation = %<location.paridlocation>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','I','location','S','S','S','N','N',{ts '2007-11-08 13:06:10.420'},'SARA','L''ubicazione %<locationcode>% non può essere creata in quanto esistono beni inventariabili che referenziano l''ubicazione da cui questo dipende.','S','[(SELECT count(*)
from assetlocation
where idlocation = %<location.paridlocation>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','U','location','S','S','S','N','N',{ts '2007-05-25 13:05:43.627'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI040','1','U','location','S','S','S','N','N',{ts '2008-06-12 13:40:09.047'},'SA','Esistono beni con ubicazione %<location.locationcode>% : %<location.description>% associati al responsabile che si è modificato.','N','(ISNULL(%<location.idman>% ,0) = ISNULL(&<location.idman>&,0))
OR
[(SELECT count(*) 
from assetmanager
join assetlocation
	on assetmanager.idasset = assetlocation.idasset
where assetlocation.idlocation= %<location.idlocation>% 
	and assetmanager.idman = &<location.idman>& )]{I} = 0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','D','locationlevel','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI032','1','D','locationlevel','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','locationlevel','S','S','S','N','N',{ts '2007-09-13 12:04:28.420'},'NINO','Cancellazione Impossibile! Esistono ubicazioni collegate al livello %<description>%','S','[(SELECT count(*) 
from location 
where nlevel = %<locationlevel.nlevel>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','locationlevel','S','S','S','N','N',{ts '2007-09-13 12:04:33.360'},'NINO','Cancellazione Impossibile! Esistono livelli delle ubicazioni dipendenti dal livello %<description>%','S','[(SELECT count(*) 
from locationlevel 
where nlevel > %<locationlevel.nlevel>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','I','locationlevel','S','S','S','N','N',{ts '2007-05-25 13:05:31.327'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','locationlevel','S','S','S','N','N',{ts '2007-11-08 17:05:59.640'},'NINO','Descrizione del livello dell''ubicazione già esistente','S','[(SELECT count(*) 
from locationlevel 
where description = %<locationlevel.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','I','locationlevel','S','S','S','N','N',{ts '2007-11-08 11:34:56.077'},'SARA','Il livello di ubicazione padre di %<description>% è già operativo quindi %<description>% non può essere non operativo','N','((%<locationlevel.flag>% & 2) <> 0)
or 
[SELECT count(*) 
from locationlevel
where nlevel < %<locationlevel.nlevel>% 
and ((flag&2)<> 0)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','U','locationlevel','S','S','S','N','N',{ts '2007-05-25 13:05:43.627'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','locationlevel','S','S','S','N','N',{ts '2007-11-08 17:06:08.027'},'NINO','Descrizione del livello dell''ubicazione già esistente','S','[(SELECT count(*) 
from locationlevel 
where nlevel <> %<locationlevel.nlevel>% 
and description = %<locationlevel.description>%)]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','U','locationlevel','S','S','S','N','N',{ts '2007-11-08 17:12:12.477'},'NINO','Il livello di ubicazione padre di %<description>% è già operativo quindi %<description>% non può essere non operativo','S','((%<locationlevel.flag>% & 2) <> 0)
or 
[SELECT count(*) 
from locationlevel 
where nlevel < %<locationlevel.nlevel>% 
and ((flag & 2)<>0)]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','U','locationlevel','S','S','S','N','N',{ts '2007-11-08 17:06:50.087'},'NINO','Esistono ubicazioni collegati al livello di uibicazione %<description>% per l''esercizio %<esercizio>% quindi gli attributri dei livelli dell''ubicazione non possono essere modificati','S','[(SELECT count(*) 
from location 
where nlevel = %<locationlevel.nlevel>%)]{I} = 0 
or 
[SELECT count(*) 
from locationlevel 
where nlevel = %<locationlevel.nlevel>% 
and flag = %<locationlevel.flag>% 
and codelen = %<locationlevel.codelen>% 
]{I} = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA035','1','D','mainivapay','S','S','S','N','N',{ts '2010-01-18 14:53:18.703'},'SARA','Operazione Impossibile. La liquidazione periodica dell''IVA  consolidata %<ymainivapay>%  / %<nmainivapay>% è collegata a movimenti di entrata','S','[SELECT COUNT(*) 
FROM mainivapayincome 
WHERE ymainivapay = %<mainivapay.ymainivapay>% 
AND nmainivapay = %<mainivapay.nmainivapay>%]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA035','2','D','mainivapay','S','S','S','N','N',{ts '2010-01-18 14:53:39.530'},'SARA','Operazione Impossibile. La liquidazione periodica dell''IVA consolidata %<ymainivapay>% / %<nmainivapay>% è collegata a movimenti di spesa','S','[SELECT COUNT(*) 
FROM mainivapayexpense 
WHERE ymainivapay = %<mainivapay.ymainivapay>% 
AND nmainivapay = %<mainivapay.nmainivapay>%]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA036','1','D','mainivapay','S','S','S','N','N',{ts '2011-03-07 14:10:52.390'},'sa','Non è possibile cancellare la liquidazione perché ne esistono altre di periodi successivi','S','[select count(*) from mainivapay where ymainivapay >=%<mainivapay.ymainivapay>%
	and referenceyear = %<mainivapay.referenceyear>% 
	and nmonth > %<mainivapay.nmonth>% 
	and (ISNULL((mainivapay.flag),3)&ISNULL((%<mainivapay.flag>%),3)&3) <> 0

]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA034','1','I','mainivapay','S','S','S','N','N',{ts '2011-03-04 12:43:52.953'},'sa','Non può essere creata una liquidazione per il mese %<mainivapay.nmonth>% / %<mainivapay.ymainivapay>% in quanto esiste già una liquidazione per questo periodo.','S','[SELECT count(*) 
from mainivapay 
where nmonth = %<mainivapay.nmonth>% 
and  ymainivapay = %<mainivapay.ymainivapay>% 
and (ISNULL((mainivapay.flag),3)&ISNULL((%<mainivapay.flag>%),3)&3) <> 0
]{N} = 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA041','1','I','mainivapay','S','S','S','N','N',{ts '2011-03-11 10:34:53.167'},'sara','Il tipo liquidazione IVA consolidata non è coerente con la modalità scelta nella configurazione comune.','S','[SELECT COUNT(*) FROM dbdepartment]{I}=1
OR
(
	[(SELECT ISNULL(flagsepivapay,''N'') FROM  commonconfig
	 WHERE ayear  = %<sys_esercizio>%)]{C} = ''S''
	AND  (ISNULL(%<mainivapay.flag>%,3)&3) <> 3
)

OR
(
	[(SELECT ISNULL(flagsepivapay,''N'') FROM  commonconfig
	 WHERE ayear  = %<sys_esercizio>%)]{C} = ''N''
	AND   (ISNULL(%<mainivapay.flag>%,3)&3)  = 3   
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI020','1','I','maintenance','S','S','S','N','N',{ts '2007-11-08 17:17:39.783'},'NINO','Non è possibile effettuare una manutenzione sul cespite %<maintenance.idasset>% (o parte di esso) in quanto è già incluso in un buono di scarico','N','[SELECT COUNT(*)
FROM asset
WHERE idasset = %<maintenance.idasset>%
AND idpiece = %<maintenance.idpiece>%
AND (idassetunload IS NOT NULL OR ((flag & 1)=0) )]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI020','2','I','maintenance','S','S','S','N','N',{ts '2007-11-08 17:17:28.883'},'NINO','Non è possibile fare manutenzione sull''accessorio %<maintenance.idasset>% in quanto il cespite principale è già incluso in un buono di scarico.','N','%<maintenance.idpiece>%= 1
OR

[SELECT COUNT(*)
FROM asset
WHERE idasset = %<maintenance.idasset>%
AND idpiece = 1
AND (idassetunload IS NOT NULL OR ((flag & 1)=0) )]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','D','maintenancekind','S','S','S','N','N',{ts '2009-01-20 12:29:03.150'},'SA','Il tipo di manutenzione %<maintenancekind.description>% non può essere cancellato','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','D','maintenancekind','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI032','1','D','maintenancekind','S','S','S','N','N',{ts '2007-05-25 13:07:58.127'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','maintenancekind','S','S','S','N','N',{ts '2008-02-22 14:08:08.120'},'SARA','Il tipo di evento tecnico %<codemaintenancekind>% non può essere cancellato in quanto esistono eventi tecnici che lo referenziano.','S','[execute count_table_field ''maintenance'',''idmaintenancekind'',
%<maintenancekind.idmaintenancekind>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','I','maintenancekind','S','S','S','N','N',{ts '2009-01-20 12:29:06.307'},'SA','Il tipo di manutenzione %<maintenancekind.description>% non può essere inserito','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','I','maintenancekind','S','S','S','N','N',{ts '2007-05-25 13:05:31.327'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','maintenancekind','S','S','S','N','N',{ts '2007-11-12 13:24:08.640'},'SA','Tipo di manutenzione %<codemaintenancekind>% già esistente','S','[(SELECT count(*) 
from maintenancekind 
where idmaintenancekind = %<maintenancekind.idmaintenancekind>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','maintenancekind','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del tipo di manutenzione già esistente','S','[(SELECT count(*) 
from maintenancekind 
where description = %<maintenancekind.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI026','1','U','maintenancekind','S','S','S','N','N',{ts '2009-01-20 12:29:09.557'},'SA','Il tipo di manutenzione %<maintenancekind.description>% non può essere modificato','S','1 = 2')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI031','1','U','maintenancekind','S','S','S','N','N',{ts '2007-05-25 13:05:43.627'},'''SARA''','Non è consentita la modifica della configurazione del Patrimonio','S','[1]=[2]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','maintenancekind','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del tipo di manutenzione già esistente','S','[(SELECT count(*) 
from maintenancekind 
where idmaintenancekind <> %<maintenancekind.idmaintenancekind>% 
and description = %<maintenancekind.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','manager','S','S','S','N','N',{ts '2007-08-31 20:06:56.907'},'NINO','Cancellazione Impossibile! Esistono movimenti di spesa collegati al responsabile %<title>%','S','[(SELECT count(*) 
from expense 
where idman = %<manager.idman>%)]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','manager','S','S','S','N','N',{ts '2007-08-31 20:07:07.093'},'NINO','Cancellazione Impossibile! Esistono mandati di pagamento collegati al responsabile %<title>%','S','[(SELECT count(*) 
from payment 
where idman = %<manager.idman>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','manager','S','S','S','N','N',{ts '2007-08-31 20:07:19.953'},'NINO','Cancellazione Impossibile! Esistono voci di bilancio collegate al responsabile %<title>%','S','[(SELECT count(*) 
from finlast
where idman = %<manager.idman>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','6','D','manager','S','S','S','N','N',{ts '2007-08-31 20:07:27.547'},'NINO','Cancellazione Impossibile! Esistono movimenti di entrata collegati al responsabile %<title>%','S','[(SELECT count(*) 
from income 
where idman = %<manager.idman>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','7','D','manager','S','S','S','N','N',{ts '2007-08-31 20:07:33.907'},'NINO','Cancellazione Impossibile! Esistono reversali di incasso collegate al responsabile %<title>%','S','[(SELECT count(*) 
from proceeds 
where idman = %<manager.idman>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','8','D','manager','S','S','S','N','N',{ts '2007-08-31 20:07:40.500'},'NINO','Cancellazione Impossibile! Esistono distinte di trasmissione dei mandati di pagamento collegate al responsabile %<title>%','S','[(SELECT count(*) 
from paymenttransmission 
where idman = %<manager.idman>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','9','D','manager','S','S','S','N','N',{ts '2007-08-31 20:07:46.563'},'NINO','Cancellazione Impossibile! Esistono distinte di trasmissione delle reversali di incasso collegate al responsabile %<title>%','S','[(SELECT count(*) 
from proceedstransmission 
where idman = %<manager.idman>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','11','D','manager','S','S','S','N','N',{ts '2007-08-31 20:08:00.500'},'NINO','Cancellazione Impossibile! Esistono buoni d''ordine collegati al responsabile %<title>%','S','[(SELECT count(*) 
from mandate 
where idman = %<manager.idman>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','13','D','manager','S','S','S','N','N',{ts '2007-08-31 20:08:16.657'},'NINO','Cancellazione Impossibile! Esistono trasferimenti di cespiti inventariabili collegati al responsabile %<title>%','S','[(SELECT count(*) 
from assetmanager 
where idman = %<manager.idman>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','14','D','manager','S','S','S','N','N',{ts '2007-08-31 20:08:34.733'},'NINO','Cancellazione Impossibile! Esistono ubicazioni collegate al responsabile %<title>%','S','[(SELECT count(*) 
from location 
where idman = %<manager.idman>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','15','D','manager','S','S','S','N','N',{ts '2007-08-31 20:08:44.297'},'NINO','Cancellazione Impossibile! Esistono contratti collegati al responsabile %<title>%','S','[(SELECT count(*) 
from estimate 
where idman = %<manager.idman>%)]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR008','1','I','manager','S','S','S','N','N',{ts '2010-11-04 14:48:30.150'},'sa','Non è possibile attribuire a due responsabili la stessa login web','N','[select count(*) from manager where userweb = %<manager.userweb>%]{I}=1
OR

isnull(%<manager.userweb>%,'''')=''''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','manager','S','S','S','N','N',{ts '2007-08-31 20:23:21.360'},'NINO','Responsabile %<idman>% già esistente','S','[(SELECT count(*) 
from manager 
where idman = %<manager.idman>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','manager','S','S','S','N','N',{ts '2007-08-31 20:23:35.110'},'NINO','Denominazione del responsabile già esistente','S','[(SELECT count(*) 
from manager 
where title = %<manager.title>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR008','1','U','manager','S','S','S','N','N',{ts '2010-11-04 14:48:34.417'},'sa','Non è possibile attribuire a due responsabili la stessa login web','N','[select count(*) from manager where userweb = %<manager.userweb>%]{I}=1
OR

isnull(%<manager.userweb>%,'''')=''''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','manager','S','S','S','N','N',{ts '2007-08-31 20:23:55.500'},'NINO','Denominazione del responsabile già esistente','S','[(SELECT count(*) 
from manager 
where idman <> %<manager.idman>% 
and title = %<manager.title>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR005','1','D','mandate','S','S','S','N','N',{ts '2009-03-31 12:22:11.453'},'PROVA','Il buono d''ordine %<mandateview.mankind>% n. %<mandateview.nman>% / %<mandateview.yman>% non può essere cancellato in quanto supera il limite di 5.000 ','S','[SELECT ISNULL(SUM(iva_euro),0) + ISNULL(SUM(taxable_euro),0)
FROM mandatedetailview
WHERE mandatedetailview.idmankind = %<mandate.idmankind>%
AND mandatedetailview.yman = %<mandate.yman>%
AND mandatedetailview.nman = %<mandate.nman>%
AND stop IS NULL]{V} <= 5000
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''ordinegrande''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','1','D','mandate','S','S','S','N','N',{ts '2008-07-30 10:35:25.547'},'NINO','Le regole di sicurezza vietano la cancellazione di contratti passivi','S','[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename IN (''ordine'', ''ordinegrande'')
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','mandate','S','S','S','N','N',{ts '2007-09-13 12:06:11.233'},'NINO','Cancellazione Impossibile! Esistono movimenti di spesa collegati al buono d''ordine%<nman>% / %<yman>%','S','[(SELECT count(*) 
from expensemandate 
where idmankind = %<mandate.idmankind>%
and yman = %<mandate.yman>% 
and nman = %<mandate.nman>%)]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR030','1','I','mandate','S','S','S','N','N',{ts '2011-04-07 15:51:11.407'},'sara','L''anagrafica %<registry.title>% non ha un DURC valido alla data corrente','S','[(SELECT COUNT(*) FROM registrydurc
WHERE registrydurc.idreg =  %<mandate.idreg>%
AND %<sys_datacontabile>% 
BETWEEN  
	ISNULL(registrydurc.start,{d ''1900-01-01''}) 
	AND 
	ISNULL(registrydurc.stop,{d ''2079-01-01''})
)]{I} > 0

OR 

[(SELECT ISNULL(multireg,''N'') FROM mandatekind
WHERE mandatekind.idmankind =  %<mandate.idmankind>%
)]{C} = ''S''

OR

(
%<mandate.idreg>% IS NULL
)
OR

[(SELECT cf from registry  WHERE registry.idreg =  %<mandate.idreg>% )]{C} 
=
[(SELECT cf from license) ]{C}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ001','1','I','mandate','S','S','S','N','N',{ts '2010-06-14 14:01:16.157'},'SA','Non si può creare il Contratto Passivo N. %<mandate.nman>%/ %<mandate.yman>% senza associarvi il magazzino se nei dettagli è stato specificato un listino.','N','%<mandate.idstore>% IS NOT NULL

OR

[SELECT COUNT(*)
FROM mandatedetail
WHERE idmankind = %<mandate.idmankind>%
AND yman = %<mandate.yman>%
AND nman = %<mandate.nman>%
AND idlist IS NOT NULL ]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN009','1','I','mandate','S','S','S','N','N',{ts '2007-12-06 11:44:12.483'},'PINO','Il contratto passivo crea un salto nella numerazione. Non esiste il contratto passivo precedente al N. %<mandate.nman>% / %<mandate.yman>%  del tipo: %<mandate.idmankind>% .','N','--post
([select flag_autodocnumbering from config where ayear = %<sys_esercizio>%]{I} & 2) = 0

or
[select count(*) from mandate M 
	where M.nman = 
		[SELECT MAX(nman) FROM mandate 
		where yman=%<mandate.yman>% 
	      and idmankind = %<mandate.idmankind>% ]{I} -1
	and M.yman=%<mandate.yman>% 
      and M.idmankind = %<mandate.idmankind>% 
]{I}
>0

or

%<mandate.nman>% = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR005','1','I','mandate','S','S','S','N','N',{ts '2009-03-31 12:14:43.857'},'PROVA','Il buono d''ordine %<mandateview.mankind>% n. %<mandateview.nman>% / %<mandateview.yman>% non può essere inserito in quanto supera il limite di 5.000 ','N','[SELECT ISNULL(SUM(iva_euro),0) + ISNULL(SUM(taxable_euro),0)
FROM mandatedetailview
WHERE mandatedetailview.idmankind = %<mandate.idmankind>%
AND mandatedetailview.yman = %<mandate.yman>%
AND mandatedetailview.nman = %<mandate.nman>%
AND stop IS NULL]{V} <= 5000
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''ordinegrande''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','1','I','mandate','S','S','S','N','N',{ts '2008-07-30 10:32:59.890'},'NINO','Le regole di sicurezza vietano l''inserimento di contratti passivi','S','[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename IN (''ordine'', ''ordinegrande'')
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM014','1','I','mandate','S','S','S','N','N',{ts '2009-02-26 15:18:41.593'},'ASSISTENZA','Non è possibile salvare un contratto passivo con numero negativo','N','%<mandate.nman>%>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA012','1','U','mandate','S','S','S','N','N',{ts '2010-03-22 10:32:09.610'},'SARA','L''importo dell''IVA sui dettagli  dell''ordine  di tipo  %<mandate.idmankind>%,  %<mandate.yman>% / %<mandate.nman>%, deve essere pari a zero perchè l''ordine è in valuta diversa dall''Euro.','N','(
ISNULL(%<mandate.idcurrency>%, 0) = 
ISNULL(&<mandate.idcurrency>&, 0) 
)
OR
(
ISNULL(
[SELECT codecurrency FROM currency
WHERE idcurrency = %<mandate.idcurrency>%]{C}
,'''') = ''EUR''
)
OR

(

[SELECT ROUND(SUM(ISNULL(tax,0.00)),2) FROM mandatedetail 
  WHERE idmankind = %<mandate.idmankind>% AND
        yman      = %<mandate.yman>%  AND 
        nman	= %<mandate.nman>% 
	  ]{N} = 0.00 
)

-- il controllo agisce se il c.p. è semplice, ossia non è intracom.
OR

ISNULL(%<mandate.flagintracom>%,''N'') <> ''N''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ001','1','U','mandate','S','S','S','N','N',{ts '2010-06-11 16:35:23.217'},'SA','Al Contratto Passivo N. %<mandate.nman>%/ %<mandate.yman>% va associato il magazzino perchè nei dettagli è stato specificato un listino.','N','%<mandate.idstore>% IS NOT NULL

OR

[SELECT COUNT(*)
FROM mandatedetail
WHERE idmankind = %<mandate.idmankind>%
AND yman = %<mandate.yman>%
AND nman = %<mandate.nman>%
AND idlist IS NOT NULL ]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ002','1','U','mandate','S','S','S','N','N',{ts '2010-09-16 12:59:09.530'},'sara','Il magazzino del contratto passivo  non può essere modificato in quanto esistono dei dettagli ad esso collegati. ','N','ISNULL(%<mandate.idstore>%, 0)  = ISNULL( &<mandate.idstore>&, 0)
OR
[(SELECT COUNT(*) FROM stock 
	WHERE stock.idmankind = %<mandate.idmankind>%
	AND stock.yman = %<mandate.yman>%
	AND stock.nman = %<mandate.nman>%
	)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM015','1','U','mandate','S','S','S','N','N',{ts '2007-02-26 16:39:22.170'},'''NINO''','Non si può modificare il percipiente in un buono d''ordine totalmente o parzialmente contabilizzato.','S','([SELECT COUNT(*) 
FROM expensemandate
WHERE expensemandate.idmankind = %<mandate.idmankind>% 
AND expensemandate.yman = %<mandate.yman>%
AND expensemandate.nman = %<mandate.nman>%]{I}
=
0)
or
(ISNULL(&<mandate.idreg>&,-1) = ISNULL(%<mandate.idreg>%,-1))')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN013','1','U','mandate','S','S','S','N','N',{ts '2010-03-22 10:48:28.063'},'SARA','Per il contratto passivo intracomunitario %<mandate.idmankind>% n° %<mandate.nman>% del %<mandate.yman>% ,  con valuta Euro, l''importo dell''IVA di ciascun dettaglio deve essere pari a 0.','N','--post
ISNULL(%<mandate.flagintracom>%,''N'') = ''N''
OR
(

[SELECT ROUND(SUM(ISNULL(tax,0.00)),2) FROM mandatedetail 
  WHERE idmankind = %<mandate.idmankind>% AND
        yman      = %<mandate.yman>%  AND 
        nman	= %<mandate.nman>% 
	  ]{N} = 0.00 
)


OR
(
ISNULL(
[SELECT codecurrency FROM currency
WHERE idcurrency = %<mandate.idcurrency>%]{C}
,'''') <> ''EUR''
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR005','1','U','mandate','S','S','S','N','N',{ts '2009-03-31 12:20:16.157'},'PROVA','Il buono d''ordine %<mandateview.mankind>% n. %<mandateview.nman>% / %<mandateview.yman>% non può essere modificato in quanto supera il limite di 5.000 ','N','[SELECT ISNULL(SUM(iva_euro),0) + ISNULL(SUM(taxable_euro),0)
FROM mandatedetailview
WHERE mandatedetailview.idmankind = %<mandate.idmankind>%
AND mandatedetailview.yman = %<mandate.yman>%
AND mandatedetailview.nman = %<mandate.nman>%
AND stop IS NULL]{V} <= 5000
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''ordinegrande''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','1','U','mandate','S','S','S','N','N',{ts '2008-07-30 10:35:19.733'},'NINO','Le regole di sicurezza vietano la modifica di contratti passivi','S','[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename IN (''ordine'', ''ordinegrande'')
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN001','1','D','mandatedetail','S','S','S','N','N',{ts '2007-03-07 13:42:44.233'},'''NINO''','L''importo del movimento di spesa  è diverso dalla somma dei dettagli del contratto passivo associati','N','--post
(%<mandatedetail.idexp_iva>% is null  AND
 %<mandatedetail.idexp_taxable>% is null)
OR
(
[SELECT COUNT(*) 
FROM expensemandateview 
WHERE expensemandateview.idmankind = %<mandatedetail.idmankind>%
AND expensemandateview.yman   = %<mandatedetail.yman>%
AND expensemandateview.nman   = %<mandatedetail.nman>% 
AND expensemandateview.ayear = %<sys_esercizio>%
AND (expensemandateview.idexp = %<mandatedetail.idexp_taxable>%
OR   expensemandateview.idexp = %<mandatedetail.idexp_iva>%)
AND ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)
AND ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR005','1','D','mandatedetail','S','S','S','N','N',{ts '2009-03-31 12:22:20.297'},'PROVA','Il dettaglio del buono d''ordine %<mandateview.mankind>% n. %<mandateview.nman>% / %<mandateview.yman>% non può essere cancellato in quanto supera il limite di 5.000 ','S','[SELECT ISNULL(SUM(iva_euro),0) + ISNULL(SUM(taxable_euro),0)
FROM mandatedetailview
WHERE mandatedetailview.idmankind = %<mandate.idmankind>%
AND mandatedetailview.yman = %<mandate.yman>%
AND mandatedetailview.nman = %<mandate.nman>%
AND stop IS NULL]{V} <= 5000
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''ordinegrande''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','1','D','mandatedetail','S','S','S','N','N',{ts '2008-07-30 10:35:52.860'},'NINO','Le regole di sicurezza vietano la cancellazione di dettagli di contratti passivi','S','[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename IN (''ordine'', ''ordinegrande'')
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','2','D','mandatedetail','S','S','S','N','N',{ts '2010-09-23 10:16:41.920'},'sara','Le regole di sicurezza vietano la cancellazione di dettagli di contratti passivi con codice listino valorizzato','S','%<mandatedetail.idlist>% IS NULL
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''adm_magazzino''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','mandatedetail','S','S','S','N','N',{ts '2008-02-18 16:15:15.187'},'Nino07032012','Cancellazione Impossibile! Esistono carichi di cespiti inventariabili collegati al dettaglio  " %<mandatedetail.detaildescription>%  " del buono d''ordine %<idmankind>% %<yman>% %<nman>% ','N','[SELECT COUNT(*) 
FROM assetacquire 
WHERE idmankind = %<mandatedetail.idmankind>% 
AND yman = %<mandatedetail.yman>% 
AND nman = %<mandatedetail.nman>% 
AND rownum = %<mandatedetail.idgroup>%]{I} = 0 
OR
(([SELECT COUNT(*) 
FROM assetacquire 
WHERE idmankind = %<mandatedetail.idmankind>% 
AND yman = %<mandatedetail.yman>% 
AND nman = %<mandatedetail.nman>% 
AND rownum = %<mandatedetail.idgroup>%
AND taxable <> 
	([SELECT sum(isnull(M.taxable,0))
	  FROM  mandatedetail M 
        WHERE M.idmankind   = %<mandatedetail.idmankind>% 
        AND   M.yman        = %<mandatedetail.yman>% 
        AND   M.nman        = %<mandatedetail.nman>% 
        AND   M.idgroup     = %<mandatedetail.idgroup>%
	  AND   M.stop is null]{N})]{V} = 0
)
AND
(
	[SELECT COUNT(*)
	FROM  mandatedetail M 
	WHERE M.idmankind   = %<mandatedetail.idmankind>% 
	AND   M.yman        = %<mandatedetail.yman>% 
	AND   M.nman        = %<mandatedetail.nman>% 
	AND   M.idgroup     = %<mandatedetail.idgroup>%
	AND   M.stop is null]{I} > 0
)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','mandatedetail','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono dettagli fatture collegati al dettaglio dell''ordine  n. %<mandatedetail.rownum>% e descrizione %<mandatedetail.detaildescription>% . ','S','[SELECT COUNT(*) 
FROM invoicedetail 
WHERE idmankind = %<mandatedetail.idmankind>% 
AND yman = %<mandatedetail.yman>% 
AND nman = %<mandatedetail.nman>% 
AND manrownum = %<mandatedetail.rownum>%]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR030','1','I','mandatedetail','S','S','S','N','N',{ts '2010-12-14 11:08:30.223'},'sa','L''anagrafica %<registry.title>% non ha un DURC valido alla data corrente','S','[(SELECT COUNT(*) FROM registrydurc
WHERE registrydurc.idreg =  %<mandatedetail.idreg>%
AND %<sys_datacontabile>% 
BETWEEN  
	ISNULL(registrydurc.start,{d ''1900-01-01''}) 
	AND 
	ISNULL(registrydurc.stop,{d ''2079-01-01''})
)]{I} > 0

OR 

[(SELECT ISNULL(multireg,''N'') FROM mandatekind
WHERE mandatekind.idmankind =  %<mandatedetail.idmankind>%
)]{C} = ''N''

OR


[(SELECT cf from registry  WHERE registry.idreg =  %<mandatedetail.idreg>% )]{C} 
=
[(SELECT cf from license) ]{C}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA012','1','I','mandatedetail','S','S','S','N','N',{ts '2010-03-22 10:32:18.627'},'SARA','L''importo dell''IVA sul dettaglio  n. %<mandatedetail.rownum>% dell''ordine di tipo  %<mandatedetail.idmankind>%,  %<mandatedetail.yman>% / %<mandatedetail.nman>%, deve essere pari a zero perchè l''ordine è in valuta diversa dall''Euro.','N','(
 [SELECT codecurrency FROM mandate 
join currency on currency.idcurrency=mandate.idcurrency
WHERE 
 idmankind = %<mandatedetail.idmankind>%   and
 yman = %<mandatedetail.yman>%  and
 nman =  %<mandatedetail.nman>% ]{C} = ''EUR''
)

OR

(
 ISNULL(%<mandatedetail.tax>%, 0) = 0 
)

-- il controllo agisce se il c.p. è semplice, ossia non è intracom.
OR

[SELECT ISNULL(flagintracom,''N'') FROM mandate
WHERE 
idmankind = %<mandatedetail.idmankind>% AND
yman= %<mandatedetail.yman>% AND
nman= %<mandatedetail.nman>%]{C}
<> ''N''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA037','1','I','mandatedetail','S','S','S','N','N',{ts '2012-11-23 16:39:59.510'},'sa','E'' necessario specificare le informazioni per il quadro VF24','S','isnull([SELECT flagva3 from config where ayear=%<sys_esercizio>%]{C},''N'')=''N''

OR

isnull([SELECT flagva3 from config where ayear=%<sys_esercizio>%]{C},''N'')=''S''

OR

%<mandatedetail.va3type>% is not null

OR 

(
NOT(
[select flagactivity from mandatekind where idmankind=
  %<mandatedetail.idmankind>%]{I} in (2,3)
)
)

OR

(
[select linktoinvoice from mandatekind where idmankind=
  %<mandatedetail.idmankind>%]{S} =''N''
)

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA037','2','I','mandatedetail','S','S','S','N','N',{ts '2012-11-23 16:49:42.983'},'sa','E'' necessario specificare le informazioni per il quadro VF24','S','isnull([SELECT flagva3 from config where ayear=%<sys_esercizio>%]{C},''N'')=''N''

OR

isnull([SELECT flagva3 from config where ayear=%<sys_esercizio>%]{C},''N'')=''X''

OR

%<mandatedetail.va3type>% is not null

OR 

(
NOT(
[select flagactivity from mandatekind where idmankind=
  %<mandatedetail.idmankind>%]{I} in (2,3)
)
)

OR

(
[select linktoinvoice from mandatekind where idmankind=
  %<mandatedetail.idmankind>%]{S} =''N''
)

OR
[SELECT COUNT(*) FROM ivakind IVK
	WHERE 
		 IVK.idivakind=%<mandatedetail.idivakind>%
		AND ((ISNULL(IVK.flag,0) & 1) = 0) 		
]{I} =0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ002','1','I','mandatedetail','S','S','S','N','N',{ts '2010-07-14 11:07:23.907'},'SA','La quantità deve essere maggione di zero.','N','%<mandatedetail.npackage>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ004','1','I','mandatedetail','S','S','S','N','N',{ts '2010-07-13 14:01:40.217'},'SA','La merce del dettaglio %<mandatedetail.nman>%/%<mandatedetail.rownum>% è inventariabile, per tanto l''unita di Carico deve coincidere con l''unità di Acquisto.

','N','%<mandatedetail.idinv>% is null

OR

isnull(%<mandatedetail.number>%,0) = isnull(%<mandatedetail.npackage>%,0) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ014','1','I','mandatedetail','S','S','S','N','N',{ts '2011-10-17 12:01:11.687'},'sa','C''è già un altro ordine  per lo stesso articolo  non ancora evaso.','N','isnull( [SELECT ordered FROM stocktotal
 WHERE stocktotal.idstore = [SELECT idstore FROM mandate
				WHERE mandate.idmankind = %<mandatedetail.idmankind>%	
				AND mandate.nman = %<mandatedetail.nman>%
				AND mandate.yman = %<mandatedetail.yman>%
			         ]{I}
AND stocktotal.idlist = %<mandatedetail.idlist>%
]{V},0)   =  %<mandatedetail.number>%

OR

%<mandatedetail.idlist>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN001','1','I','mandatedetail','S','S','S','N','N',{ts '2008-04-07 09:27:39.670'},'SA','L''importo del movimento di spesa  è diverso dalla somma dei dettagli del contratto passivo associati','N','--post
(%<mandatedetail.idexp_iva>% is null  AND
 %<mandatedetail.idexp_taxable>% is null)
OR
(
[SELECT COUNT(*) 
FROM expensemandateview 
WHERE expensemandateview.idmankind = %<mandatedetail.idmankind>%
AND expensemandateview.yman   = %<mandatedetail.yman>%
AND expensemandateview.nman   = %<mandatedetail.nman>% 
AND expensemandateview.ayear = %<sys_esercizio>%
AND (expensemandateview.idexp = %<mandatedetail.idexp_taxable>%
OR   expensemandateview.idexp = %<mandatedetail.idexp_iva>%)
AND ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)
AND ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN008','1','I','mandatedetail','S','S','S','N','N',{ts '2007-03-08 14:21:37.937'},'''SARA''','Impostare l''anagrafica per il dettaglio n. %<mandatedetail.rownum>%  %<mandatedetail.detaildescription>% del contratto passivo %<mandatedetail.idmankind>%/ n. %<mandatedetail.nman>% del %<mandatedetail.yman>%
','N','(
 [SELECT ISNULL(multireg,''N'')FROM mandatekind WHERE 
 idmankind = %<mandatedetail.idmankind>%]{C} = ''N''
)

OR

(
 ISNULL(%<mandatedetail.idreg>%, 0) <> 0 
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN011','1','I','mandatedetail','S','S','S','N','N',{ts '2008-01-31 14:22:34.030'},'SARA','Tutti i dettagli del contratto passivo appartenenti allo stesso gruppo  #%<mandatedetail.idgroup>% devono avere la stessa causale EP','N','--post I
(
[SELECT COUNT (DISTINCT ISNULL(idaccmotive,0))
FROM  mandatedetail
WHERE mandatedetail.idmankind = %<mandatedetail.idmankind>%
AND   mandatedetail.yman = %<mandatedetail.yman>%
AND   mandatedetail.nman = %<mandatedetail.nman>% 
AND   mandatedetail.idgroup = %<mandatedetail.idgroup>%
]{I}  <= 1)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN011','2','I','mandatedetail','S','S','S','N','N',{ts '2008-01-31 14:23:04.860'},'SARA','Tutti i dettagli del contratto passivo appartenenti allo stesso gruppo  #%<mandatedetail.idgroup>% devono avere la stessa causale EP di annullamento','N','--post I
(
[SELECT COUNT (DISTINCT ISNULL(idaccmotiveannulment,0))
FROM  mandatedetail
WHERE mandatedetail.idmankind = %<mandatedetail.idmankind>%
AND   mandatedetail.yman = %<mandatedetail.yman>%
AND   mandatedetail.nman = %<mandatedetail.nman>% 
AND   mandatedetail.idgroup = %<mandatedetail.idgroup>%
]{I}  <= 1)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN013','1','I','mandatedetail','S','S','S','N','N',{ts '2010-03-22 10:20:01.967'},'SARA','Per dettaglio #%<mandatedetail.rownum>% del contratto passivo intracomunitario %<mandatedetail.idmankind>% n° %<mandatedetail.nman>% del %<mandatedetail.yman>% , con valuta Euro, l''importo dell''IVA deve essere pari a 0.','N','[SELECT ISNULL(flagintracom,''N'') FROM mandate
WHERE 
idmankind = %<mandatedetail.idmankind>% AND
yman= %<mandatedetail.yman>% AND
nman= %<mandatedetail.nman>%]{C}
= ''N''
OR
%<mandatedetail.tax>% = 0

OR
(
 [SELECT codecurrency FROM mandate 
JOIN currency 
ON currency.idcurrency=mandate.idcurrency
WHERE  idmankind = %<mandatedetail.idmankind>%  AND
 yman = %<mandatedetail.yman>%  AND
 nman =  %<mandatedetail.nman>% ]{C} <> ''EUR''
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN014','1','I','mandatedetail','S','S','S','N','N',{ts '2012-11-28 09:52:39.747'},'sa','Il Tipo Bene previsto nel Dettaglio n. %<mandatedetail.rownum>% del Contratto Passivo di tipo  %<mandatedetail.idmankind>%,  %<mandatedetail.yman>% / %<mandatedetail.nman>%  non è coerente con la Natura del Tipo di Contratto Passivo','S','--bene inventariabile
(%<mandatedetail.assetkind>% = ''A''   
AND
[select assetkind from mandatekind
where  mandatekind.idmankind= %<mandatedetail.idmankind>%]{I}
& 1 <> 0
)
OR
--aumento di valore
(%<mandatedetail.assetkind>% = ''P''
AND
[select assetkind from mandatekind
where  mandatekind.idmankind= %<mandatedetail.idmankind>%]{I}
& 2 <> 0
)
--servizio
OR
(%<mandatedetail.assetkind>% = ''S''
AND
[select assetkind from mandatekind
where  mandatekind.idmankind= %<mandatedetail.idmankind>%]{I}
& 4 <> 0
)
--magazzino
OR
(%<mandatedetail.assetkind>% = ''M''
AND
[select assetkind from mandatekind
where  mandatekind.idmankind= %<mandatedetail.idmankind>%]{I}
& 8 <> 0
)
--altro
OR
( ISNULL(%<mandatedetail.assetkind>%,''O'')  = ''O''
AND
[select assetkind from mandatekind
where  mandatekind.idmankind= %<mandatedetail.idmankind>%]{I}
& 16 <> 0
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR005','1','I','mandatedetail','S','S','S','N','N',{ts '2009-03-31 12:15:30.453'},'PROVA','Il dettaglio del buono d''ordine %<mandateview.mankind>% n. %<mandateview.nman>% / %<mandateview.yman>% non può essere inserito in quanto supera il limite di 5.000 ','N','[SELECT ISNULL(SUM(iva_euro),0) + ISNULL(SUM(taxable_euro),0)
FROM mandatedetailview
WHERE mandatedetailview.idmankind = %<mandate.idmankind>%
AND mandatedetailview.yman = %<mandate.yman>%
AND mandatedetailview.nman = %<mandate.nman>%
AND stop IS NULL]{V} <= 5000
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''ordinegrande''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','1','I','mandatedetail','S','S','S','N','N',{ts '2008-07-30 10:35:36.407'},'NINO','Le regole di sicurezza vietano l''inserimento di dettagli di contratti passivi','S','[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename IN (''ordine'', ''ordinegrande'')
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','2','I','mandatedetail','S','S','S','N','N',{ts '2010-09-23 10:16:23.703'},'sara','Le regole di sicurezza vietano l''inserimento di dettagli di contratti passivi con codice listino valorizzato','S','%<mandatedetail.idlist>% IS NULL
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''adm_magazzino''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI007','1','U','mandatedetail','S','S','S','N','N',{ts '2007-11-30 14:56:57.343'},'SARA','La quantità di cespiti disponibili nel buono d''ordine è INSUFFICIENTE!','N','ISNULL(
	[SELECT SUM(number)
	FROM assetacquire
	WHERE idmankind = %<mandatedetail.idmankind>%
	AND yman = %<mandatedetail.yman>%
	AND nman = %<mandatedetail.nman>%
	AND rownum = %<mandatedetail.idgroup>%]{N}
,0) <= %<mandatedetail.number>%
OR
(ISNULL(&<mandatedetail.number>&,0) >= ISNULL(%<mandatedetail.number>%,0))
OR 
(%<mandatedetail.assetkind>% = ''S'')




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI008','1','U','mandatedetail','S','S','S','N','N',{ts '2007-11-30 14:53:04.030'},'SARA','La classificazione inventariale del carico cespite è differente da quella del buono d''ordine','S','[SELECT COUNT(*) FROM assetacquire
WHERE idmankind = %<mandatedetail.idmankind>%
AND yman = %<mandatedetail.yman>%
AND nman = %<mandatedetail.nman>%
AND rownum = %<mandatedetail.idgroup>%
AND idinv <> %<mandatedetail.idinv>%]{I} = 0
OR
(ISNULL(&<mandatedetail.idinv>&,'''') = ISNULL(%<mandatedetail.idinv>%,''''))
OR
( %<mandatedetail.assetkind>% = ''P'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI012','1','U','mandatedetail','S','S','S','N','N',{ts '2006-10-27 10:47:21.640'},'''SA''','Il dettaglio dell''ordine " %<mandatedetail.detaildescription>% " è collegato ad un carico cespite o carico accessorio, e non può quindi essere annullato. ','S','%<mandatedetail.stop>% IS NULL
OR
[(SELECT COUNT(*) FROM assetacquire 
	WHERE assetacquire.idmankind = %<mandatedetail.idmankind>%
	AND assetacquire.yman = %<mandatedetail.yman>%
	AND assetacquire.nman = %<mandatedetail.nman>%
	AND assetacquire.rownum = %<mandatedetail.idgroup>%)]{I} = 0

	
	')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI013','1','U','mandatedetail','S','S','S','N','N',{ts '2008-05-08 17:11:24.740'},'NINO','L''Imponibile  del dettaglio " %<mandatedetail.detaildescription>%  "  dell''ordine %<mandatedetail.idmankind>%,  %<mandatedetail.yman>% / %<mandatedetail.nman>%,  deve essere uguale all''Imponibile  totale dei carichi cespite/accessori ad esso collegati.','N','(ISNULL(&<mandatedetail.number>&,0) = ISNULL(%<mandatedetail.number>%,0)
AND
ISNULL(&<mandatedetail.taxable>&,0) = ISNULL(%<mandatedetail.taxable>%,0))
OR
(ISNULL(
	[SELECT SUM(number)
	FROM assetacquire
	WHERE idmankind = %<mandatedetail.idmankind>%
	AND yman = %<mandatedetail.yman>%
	AND nman = %<mandatedetail.nman>%
	AND rownum = %<mandatedetail.idgroup>%]{N}
,0) = 0)
OR
(ISNULL(
	[SELECT SUM(number)
	FROM assetacquire
	WHERE idmankind = %<mandatedetail.idmankind>%
	AND yman = %<mandatedetail.yman>%
	AND nman = %<mandatedetail.nman>%
	AND rownum = %<mandatedetail.idgroup>%]{N}
,0) < %<mandatedetail.number>%)
OR
(
[SELECT SUM(ROUND(ISNULL(taxable,0)* ISNULL(number,0)*(1-CONVERT(DECIMAL(19,6),ISNULL(discount,0)))
		,2))
FROM assetacquire
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND rownum = %<assetacquire.rownum>%]{N} 
= 
ISNULL([SELECT  SUM(taxable_euro) FROM mandatedetailgroupview
WHERE idmankind = %<assetacquire.idmankind>%
AND yman = %<assetacquire.yman>%
AND nman = %<assetacquire.nman>%
AND idgroup = %<assetacquire.rownum>%]{N},0)
)


 







OR (%<mandatedetail.assetkind>%=''S'')


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI013','2','U','mandatedetail','S','S','S','N','N',{ts '2006-10-30 10:42:08.047'},'''SA''','L''IVA del dettaglio  " %<mandatedetail.detaildescription>%  "  dell''ordine %<mandatedetail.idmankind>%,  %<mandatedetail.yman>% / %<mandatedetail.nman>%,  deve essere uguale all''IVA  totale dei carichi cespite/accessori ad esso collegati.','N','(ISNULL(&<mandatedetail.number>&,0) = ISNULL(%<mandatedetail.number>%,0)
AND
ISNULL(&<mandatedetail.tax>&,0) = ISNULL(%<mandatedetail.tax>%,0))
OR
(ISNULL(
	[SELECT SUM(number)
	FROM assetacquire
	WHERE idmankind = %<mandatedetail.idmankind>%
	AND yman = %<mandatedetail.yman>%
	AND nman = %<mandatedetail.nman>%
	AND rownum = %<mandatedetail.idgroup>%]{N}
,0) = 0)
OR
(ISNULL(
	[SELECT SUM(number)
	FROM assetacquire
	WHERE idmankind = %<mandatedetail.idmankind>%
	AND yman = %<mandatedetail.yman>%
	AND nman = %<mandatedetail.nman>%
	AND rownum = %<mandatedetail.idgroup>%]{N}
,0) < %<mandatedetail.number>%)
OR
(ISNULL(
	[SELECT SUM(ISNULL(tax,0))
	FROM assetacquire
	WHERE idmankind = %<mandatedetail.idmankind>%
	AND yman = %<mandatedetail.yman>%
	AND nman = %<mandatedetail.nman>%
	AND rownum = %<mandatedetail.idgroup>%]{N}
,0) = 
--isnull(%<mandatedetail.tax>%,0)
ISNULL([SELECT SUM(tax)
	FROM mandatedetailview
	WHERE idmankind = %<mandatedetail.idmankind>%
	AND yman = %<mandatedetail.yman>%
	AND nman = %<mandatedetail.nman>%
	AND idgroup = %<mandatedetail.idgroup>%]{N},0)

)

OR (%<mandatedetail.assetkind>%=''S'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI014','1','U','mandatedetail','S','S','S','N','N',{ts '2006-10-30 10:30:57.953'},'''SA''','L''Imponibile  del dettaglio "  %<mandatedetail.detaildescription>% "  dell''ordine %<mandatedetail.idmankind>%,  %<mandatedetail.yman>% / %<mandatedetail.nman>%,  deve essere maggiore o uguale dell''Imponibile  totale dei carichi cespite/accessori ad esso collegati.','N','(ISNULL(&<mandatedetail.number>&,0) = ISNULL(%<mandatedetail.number>%,0)
AND
ISNULL(&<mandatedetail.taxable>&,0) = ISNULL(%<mandatedetail.taxable>%,0))
OR
(ISNULL(
	[SELECT SUM(number)
	FROM assetacquire
	WHERE idmankind = %<mandatedetail.idmankind>%
	AND yman = %<mandatedetail.yman>%
	AND nman = %<mandatedetail.nman>%
	AND rownum = %<mandatedetail.idgroup>%]{N}
,0) = 0)
OR
(ISNULL(
	[SELECT SUM(number)
	FROM assetacquire
	WHERE idmankind = %<mandatedetail.idmankind>%
	AND yman = %<mandatedetail.yman>%
	AND nman = %<mandatedetail.nman>%
	AND rownum = %<mandatedetail.idgroup>%]{N}
,0) = %<mandatedetail.number>%)

OR
(ISNULL(
	[SELECT SUM(ROUND(ISNULL(taxable,0) * ISNULL(number,0)*(1-ISNULL(discount,0)),2))
	FROM assetacquire
	WHERE idmankind = %<mandatedetail.idmankind>%
	AND yman = %<mandatedetail.yman>%
	AND nman = %<mandatedetail.nman>%
	AND rownum = %<mandatedetail.idgroup>%]{N}
,0) <= 
	ISNULL([SELECT SUM(taxable_euro)
	FROM mandatedetailview
	WHERE idmankind = %<mandatedetail.idmankind>%
	AND yman = %<mandatedetail.yman>%
	AND nman = %<mandatedetail.nman>%
	AND idgroup = %<mandatedetail.idgroup>%]{N},0)
)

OR (%<mandatedetail.assetkind>%=''S'')


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI014','2','U','mandatedetail','S','S','S','N','N',{ts '2006-10-30 10:47:06.593'},'''SA''','L''IVA del dettaglio  "  %<mandatedetail.detaildescription>% " dell''ordine %<mandatedetail.idmankind>%,  %<mandatedetail.yman>% / %<mandatedetail.nman>%,  deve essere maggiore o uguale dell''IVA  totale dei carichi cespite/accessori ad esso collegati.','N','(ISNULL(&<mandatedetail.number>&,0) = ISNULL(%<mandatedetail.number>%,0)
AND
ISNULL(&<mandatedetail.tax>&,0) = ISNULL(%<mandatedetail.tax>%,0))
OR
(ISNULL(
	[SELECT SUM(number)
	FROM assetacquire
	WHERE idmankind = %<mandatedetail.idmankind>%
	AND yman = %<mandatedetail.yman>%
	AND nman = %<mandatedetail.nman>%
	AND rownum = %<mandatedetail.idgroup>%]{N}
,0) = 0)
OR
(ISNULL(
	[SELECT SUM(number)
	FROM assetacquire
	WHERE idmankind = %<mandatedetail.idmankind>%
	AND yman = %<mandatedetail.yman>%
	AND nman = %<mandatedetail.nman>%
	AND rownum = %<mandatedetail.idgroup>%]{N}
,0) = %<mandatedetail.number>%)
OR
(ISNULL(
	[SELECT SUM(ISNULL(tax,0))
	FROM assetacquire
	WHERE idmankind = %<mandatedetail.idmankind>%
	AND yman = %<mandatedetail.yman>%
	AND nman = %<mandatedetail.nman>%
	AND rownum = %<mandatedetail.idgroup>%]{N}
,0) <= 
ISNULL([SELECT SUM(tax)
	FROM mandatedetailview
	WHERE idmankind = %<mandatedetail.idmankind>%
	AND yman = %<mandatedetail.yman>%
	AND nman = %<mandatedetail.nman>%
	AND idgroup = %<mandatedetail.idgroup>%]{N},0)
--%<mandatedetail.tax>%
)
OR (%<mandatedetail.assetkind>%=''S'')
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CESPI027 ','1','U','mandatedetail','S','S','S','N','N',{ts '2007-04-03 11:07:40.327'},'''SARA''','Non è possibile modificare l''imponibile unitario del dettaglio %<mandatedetail.rownum>% / %<mandatedetail.detaildescription>% perchè esistono carichi cespite o accessori ad esso collegati','N','([SELECT COUNT(*) 
FROM assetacquire 
WHERE idmankind = %<mandatedetail.idmankind>% 
AND yman = %<mandatedetail.yman>% 
AND nman = %<mandatedetail.nman>% 
AND rownum = %<mandatedetail.idgroup>%]{I} = 0)
OR
(isnull(%<mandatedetail.taxable>%,0)=
 isnull(&<mandatedetail.taxable>&,0))
OR
([SELECT COUNT(*) 
FROM assetacquire 
WHERE idmankind = %<mandatedetail.idmankind>% 
AND yman = %<mandatedetail.yman>% 
AND nman = %<mandatedetail.nman>% 
AND rownum = %<mandatedetail.idgroup>%
AND taxable <> 
	([SELECT sum(isnull(M.taxable,0))
	  FROM  mandatedetail M 
        WHERE M.idmankind   = %<mandatedetail.idmankind>% 
        AND   M.yman        = %<mandatedetail.yman>% 
        AND   M.nman        = %<mandatedetail.nman>% 
        AND   M.idgroup     = %<mandatedetail.idgroup>%]{N})]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA012','1','U','mandatedetail','S','S','S','N','N',{ts '2010-03-22 10:32:23.843'},'SARA','L''importo dell''IVA sul dettaglio  n. %<mandatedetail.rownum>% dell''ordine di tipo  %<mandatedetail.idmankind>%,  %<mandatedetail.yman>% / %<mandatedetail.nman>%, deve essere pari a zero perchè l''ordine è in valuta diversa dall''Euro.','N','(
ISNULL(%<mandatedetail.tax>%, 0) = 
ISNULL(&<mandatedetail.tax>&, 0) 
)

OR

(
 [SELECT codecurrency FROM mandate 
JOIN currency ON currency.idcurrency=mandate.idcurrency
WHERE 
 idmankind = %<mandatedetail.idmankind>%   and
 yman = %<mandatedetail.yman>%  and
 nman =  %<mandatedetail.nman>% ]{C} = ''EUR''
)

OR
(
 ISNULL(%<mandatedetail.tax>%, 0) = 0 
)
-- il controllo agisce se il c.p. è semplice, ossia non è intracom.

OR

[SELECT ISNULL(flagintracom,''N'') FROM mandate
WHERE 
idmankind = %<mandatedetail.idmankind>% AND
yman= %<mandatedetail.yman>% AND
nman= %<mandatedetail.nman>%]{C}
<> ''N''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA037','1','U','mandatedetail','S','S','S','N','N',{ts '2012-11-23 16:40:07.327'},'sa','E'' necessario specificare le informazioni per il quadro VF24','S','isnull([SELECT flagva3 from config where ayear=%<sys_esercizio>%]{C},''N'')=''N''

OR

isnull([SELECT flagva3 from config where ayear=%<sys_esercizio>%]{C},''N'')=''S''

OR

%<mandatedetail.va3type>% is not null

OR 

(
NOT(
[select flagactivity from mandatekind where idmankind=
  %<mandatedetail.idmankind>%]{I} in (2,3)
)
)

OR

(
[select linktoinvoice from mandatekind where idmankind=
  %<mandatedetail.idmankind>%]{S} =''N''
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA037','2','U','mandatedetail','S','S','S','N','N',{ts '2012-11-23 16:49:54.500'},'sa','E'' necessario specificare le informazioni per il quadro VF24','S','isnull([SELECT flagva3 from config where ayear=%<sys_esercizio>%]{C},''N'')=''N''

OR

isnull([SELECT flagva3 from config where ayear=%<sys_esercizio>%]{C},''N'')=''X''

OR

%<mandatedetail.va3type>% is not null

OR 

(
NOT(
[select flagactivity from mandatekind where idmankind=
  %<mandatedetail.idmankind>%]{I} in (2,3)
)
)

OR

(
[select linktoinvoice from mandatekind where idmankind=
  %<mandatedetail.idmankind>%]{S} =''N''
)

OR
[SELECT COUNT(*) FROM ivakind IVK
	WHERE 
		 IVK.idivakind=%<mandatedetail.idivakind>%
		AND ((ISNULL(IVK.flag,0) & 1) = 0) 		
]{I} =0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ002','1','U','mandatedetail','S','S','S','N','N',{ts '2010-07-13 14:47:33.217'},'SA','Il listino del dettaglio n. %<mandatedetail.idgroup>% e descrizione " %<mandatedetail.detaildescription>% " non può essere modificato in quanto è stato inserito nel Magazzino. ','N','
ISNULL(%<mandatedetail.idlist>%, 0)  = ISNULL( &<mandatedetail.idlist>&, 0)


OR

[(SELECT COUNT(*) FROM stock 
	WHERE stock.idmankind = %<mandatedetail.idmankind>%
	AND stock.yman = %<mandatedetail.yman>%
	AND stock.nman = %<mandatedetail.nman>%
	AND stock.man_idgroup = %<mandatedetail.idgroup>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ002','2','U','mandatedetail','S','S','S','N','N',{ts '2010-07-13 12:36:49.187'},'SA','Non si può annullare il dettaglio ordine con descrizione  " %<mandatedetail.detaildescription>% " associato a magazzino.
Il dettaglio va rimosso dalla bolla, annullato e creato il nuovo.','S','%<mandatedetail.stop>% IS NULL
OR
[(SELECT COUNT(*) FROM stock 
	WHERE stock.idmankind = %<mandatedetail.idmankind>%
	AND stock.yman = %<mandatedetail.yman>%
	AND stock.nman = %<mandatedetail.nman>%
	AND stock.man_idgroup = %<mandatedetail.idgroup>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ004','1','U','mandatedetail','S','S','S','N','N',{ts '2010-07-06 16:54:42.483'},'SA','La merce del dettaglio %<mandatedetail.nman>%/%<mandatedetail.rownum>% è inventariabile, per tanto la  Q.tà unitaria deve risultare uguale alla Q.tà totale.','N','%<mandatedetail.idinv>% is null

OR

isnull(%<mandatedetail.number>%,0) = isnull(%<mandatedetail.npackage>%,0) ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM089','1','U','mandatedetail','S','S','S','N','N',{ts '2010-09-23 12:56:17.077'},'sara','Non si può correggere il codice CUP di un dettaglio ordine contabilizzato.','N','(isnull(%<mandatedetail.cupcode>%,'''')=
 isnull(&<mandatedetail.cupcode>&,''''))
OR
(
(%<mandatedetail.idexp_iva>% IS NULL) AND
(%<mandatedetail.idexp_taxable>%) IS NULL
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM089','2','U','mandatedetail','S','S','S','N','N',{ts '2010-09-24 14:17:14.907'},'sara','I dettagli del contratto passivo contabilizzati dallo stesso movimento finanziario devono avere lo stesso codice CUP.','N','[SELECT count(distinct isnull(cupcode,'''')) from mandatedetail where 
idexp_iva= %<mandatedetail.idexp_iva>%
OR
idexp_taxable= %<mandatedetail.idexp_taxable>%
]{I} <=1
OR
(
(%<mandatedetail.idexp_iva>% IS NULL) AND
(%<mandatedetail.idexp_taxable>%) IS NULL
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN001','1','U','mandatedetail','S','S','S','N','N',{ts '2007-03-07 13:41:47.390'},'''NINO''','L''importo del movimento di spesa  è diverso dalla somma dei dettagli del contratto passivo associati','N','--post
(
	ISNULL(&<mandatedetail.idexp_taxable>&,'''') = ISNULL(%<mandatedetail.idexp_taxable>%,'''')
	AND ISNULL(&<mandatedetail.idexp_iva>&,'''') = ISNULL(%<mandatedetail.idexp_iva>%,'''')
)
OR
(&<mandatedetail.idexp_taxable>& is not null and %<mandatedetail.idexp_taxable>% is null
AND 
[SELECT COUNT(*) 
FROM expensemandateview 
WHERE expensemandateview.idmankind = %<mandatedetail.idmankind>%
AND expensemandateview.yman   = %<mandatedetail.yman>%
AND expensemandateview.nman   = %<mandatedetail.nman>% 
AND expensemandateview.idexp = &<mandatedetail.idexp_taxable>&
AND expensemandateview.ayear = %<sys_esercizio>%
AND ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)
AND ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0
)
OR
(&<mandatedetail.idexp_iva>& is not null and %<mandatedetail.idexp_iva>% is null
AND
[SELECT COUNT(*) 
FROM expensemandateview 
WHERE expensemandateview.idmankind = %<mandatedetail.idmankind>%
AND expensemandateview.yman   = %<mandatedetail.yman>%
AND expensemandateview.nman   = %<mandatedetail.nman>% 
AND expensemandateview.idexp = &<mandatedetail.idexp_iva>&
AND expensemandateview.ayear = %<sys_esercizio>%
AND ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)
AND ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0
)
OR
(&<mandatedetail.idexp_taxable>& is null and %<mandatedetail.idexp_taxable>% is not null
AND 
[SELECT COUNT(*) 
FROM expensemandateview 
WHERE expensemandateview.idmankind = %<mandatedetail.idmankind>%
AND expensemandateview.yman   = %<mandatedetail.yman>%
AND expensemandateview.nman   = %<mandatedetail.nman>% 
AND expensemandateview.idexp = %<mandatedetail.idexp_taxable>%
AND expensemandateview.ayear = %<sys_esercizio>%
AND ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)
AND ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0
)
OR
(&<mandatedetail.idexp_iva>& is null and %<mandatedetail.idexp_iva>% is not null
AND
[SELECT COUNT(*) 
FROM expensemandateview 
WHERE expensemandateview.idmankind = %<mandatedetail.idmankind>%
AND expensemandateview.yman   = %<mandatedetail.yman>%
AND expensemandateview.nman   = %<mandatedetail.nman>% 
AND expensemandateview.idexp = %<mandatedetail.idexp_iva>%
AND expensemandateview.ayear = %<sys_esercizio>%
AND ISNULL(ABS(deltavalue),0)>ISNULL(limitvalue,0)
AND ISNULL(ABS(deltapercent),0)>ISNULL(limitpercent,0)]{I} = 0
)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN003','1','U','mandatedetail','S','S','S','N','N',{ts '2007-02-26 16:47:42.203'},'''NINO''','Il dettaglio n. %<mandatedetail.rownum>% e descrizione %<mandatedetail.detaildescription>% non può essere modificato in quanto già associato ad un movimento di spesa.','S','(
	ISNULL(&<mandatedetail.number>&,0) = ISNULL(%<mandatedetail.number>%,0)
	AND ISNULL(&<mandatedetail.taxable>&,0) = ISNULL(%<mandatedetail.taxable>%,0)
	AND ISNULL(&<mandatedetail.taxrate>&,0) = ISNULL(%<mandatedetail.taxrate>%,0)
	AND ISNULL(&<mandatedetail.discount>&,0) = ISNULL(%<mandatedetail.discount>%,0)
	AND ISNULL(&<mandatedetail.idupb>&,''x'') = ISNULL(%<mandatedetail.idupb>%,''x'')
	AND ISNULL(&<mandatedetail.idreg>&,-1) = ISNULL(%<mandatedetail.idreg>%, -1)
)
OR
(%<mandatedetail.idexp_iva>% IS NULL AND %<mandatedetail.idexp_taxable>% IS NULL)
OR
(&<mandatedetail.idexp_iva>& IS NULL AND &<mandatedetail.idexp_taxable>& IS NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN004','1','U','mandatedetail','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','La quantità di un dettaglio  ordine associato a dettagli fattura non può essere diminuita.','S','([SELECT COUNT(*) 
FROM invoicedetail 
WHERE idmankind = %<mandatedetail.idmankind>% 
AND yman = %<mandatedetail.yman>% 
AND nman = %<mandatedetail.nman>% 
AND manrownum = %<mandatedetail.rownum>%]{I} = 0)
OR
([SELECT sum(isnull(number,0)) FROM invoicedetail 
WHERE idmankind = %<mandatedetail.idmankind>%
AND nman = %<mandatedetail.nman>%
AND yman = %<mandatedetail.yman>% 
AND manrownum = %<mandatedetail.rownum>%]{N}<=
isnull(%<mandatedetail.number>%,0))
OR
(isnull(%<mandatedetail.number>%,0)=
isnull(&<mandatedetail.number>&,0))')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN005','2','U','mandatedetail','S','S','S','N','N',{ts '2006-10-16 11:44:06.827'},'''F.CAPRUZZI''','Il dettaglio n. %<mandatedetail.rownum>% e descrizione %<mandatedetail.detaildescription>%  non può essere modificato in quanto esistono dettagli fatture ad esso collegati. ','S','(
	ISNULL(&<mandatedetail.number>&,0) = ISNULL(%<mandatedetail.number>%,0)
	AND ISNULL(&<mandatedetail.taxable>&,0) = ISNULL(%<mandatedetail.taxable>%,0)
	AND ISNULL(&<mandatedetail.taxrate>&,0) = ISNULL(%<mandatedetail.taxrate>%,0)
	AND ISNULL(&<mandatedetail.discount>&,0) = ISNULL(%<mandatedetail.discount>%,0)
	AND ISNULL(&<mandatedetail.idupb>&,''x'') = ISNULL(%<mandatedetail.idupb>%,''x'')
	AND ISNULL(&<mandatedetail.flagmixed>&,''x'') = ISNULL(%<mandatedetail.flagmixed>%,''x'')
)
OR
([SELECT COUNT(*) 
FROM invoicedetail 
WHERE idmankind = %<mandatedetail.idmankind>% 
AND yman = %<mandatedetail.yman>% 
AND nman = %<mandatedetail.nman>% 
AND manrownum = %<mandatedetail.rownum>%]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN005','3','U','mandatedetail','S','S','S','N','N',{ts '2007-09-19 14:48:06.250'},'NINO','Il dettaglio n. %<mandatedetail.rownum>% e descrizione %<mandatedetail.detaildescription>%  non può essere decontabilizzato in quanto esistono dettagli  fatture pagati ad esso collegati. ','S','(&<mandatedetail.idexp_iva>& IS NULL)
OR
(%<mandatedetail.idexp_iva>% IS NOT NULL)
OR
([SELECT COUNT(*) 
FROM invoicedetail JOIN expenseinvoice 
ON   expenseinvoice.idinvkind = invoicedetail.idinvkind and
     expenseinvoice.yinv = invoicedetail.yinv and
     expenseinvoice.ninv = invoicedetail.ninv
JOIN expenselink ON
	expenselink.idchild=expenseinvoice.idexp and 
	expenselink.idparent=&<mandatedetail.idexp_iva>&
WHERE invoicedetail.idmankind = %<mandatedetail.idmankind>% 
AND invoicedetail.yman = %<mandatedetail.yman>% 
AND invoicedetail.nman = %<mandatedetail.nman>% 
AND invoicedetail.manrownum = %<mandatedetail.rownum>%
]{I} = 0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN005','4','U','mandatedetail','S','S','S','N','N',{ts '2007-09-19 15:55:13.203'},'NINO','Il dettaglio n. %<mandatedetail.rownum>% e descrizione %<mandatedetail.detaildescription>%  non può essere decontabilizzato in quanto esistono dettagli  fatture pagati ad esso collegati. ','S','(&<mandatedetail.idexp_taxable>& IS NULL)
OR
(%<mandatedetail.idexp_taxable>% IS NOT NULL)
OR
([SELECT COUNT(*) 
FROM invoicedetail JOIN expenseinvoice 
ON   expenseinvoice.idinvkind = invoicedetail.idinvkind and
     expenseinvoice.yinv = invoicedetail.yinv and
     expenseinvoice.ninv = invoicedetail.ninv 
JOIN expenselink 
	ON expenselink.idchild=expenseinvoice.idexp 
	and  expenselink.idparent=&<mandatedetail.idexp_taxable>&
WHERE invoicedetail.idmankind = %<mandatedetail.idmankind>% 
AND invoicedetail.yman = %<mandatedetail.yman>% 
AND invoicedetail.nman = %<mandatedetail.nman>% 
AND invoicedetail.manrownum = %<mandatedetail.rownum>%
]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN006','1','U','mandatedetail','S','S','S','N','N',{ts '2007-11-30 14:55:36.313'},'SARA','Il tipo bene del  dettaglio ordine n. %<mandatedetail.rownum>% e descrizione %<mandatedetail.detaildescription>% non può essere modificato perchè è associato  a dettagli fatture.','S','([SELECT COUNT(*) 
FROM invoicedetail 
WHERE idmankind = %<mandatedetail.idmankind>% 
AND yman = %<mandatedetail.yman>% 
AND nman = %<mandatedetail.nman>% 
AND manrownum = %<mandatedetail.rownum>%]{I} = 0)
OR
( %<mandatedetail.assetkind>% = &<mandatedetail.assetkind>& )')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN007','1','U','mandatedetail','S','S','S','N','N',{ts '2006-12-12 12:29:20.063'},'''SARA''','Il contratto %<mandatedetail.idmankind>%  %<mandatedetail.nman>% /%<mandatedetail.yman>%  ha già una contabilizzazione generica associata. Non si può aggiungere  una contabilizzazione specifica del dettaglio %<mandatedetail.detaildescription>%.','N','(
	ISNULL(&<mandatedetail.idexp_taxable>&,'''') = ISNULL(%<mandatedetail.idexp_taxable>%,'''')
	AND ISNULL(&<mandatedetail.idexp_iva>&,'''') = ISNULL(%<mandatedetail.idexp_iva>%,'''')
)
OR
(&<mandatedetail.idexp_taxable>& is not null and %<mandatedetail.idexp_taxable>% is null)
OR
(&<mandatedetail.idexp_iva>& is not null and %<mandatedetail.idexp_iva>% is null)
OR
(&<mandatedetail.idexp_taxable>& is null and %<mandatedetail.idexp_taxable>% is not null
AND
[SELECT COUNT(expensemandate.idexp) 
FROM 	expensemandate
WHERE expensemandate.idmankind = %<mandatedetail.idmankind>% 
AND 	expensemandate.yman = %<mandatedetail.yman>% 
AND 	expensemandate.nman = %<mandatedetail.nman>% 
AND   expensemandate.idexp < %<mandatedetail.idexp_taxable>%
AND 	NOT  EXISTS 
	(SELECT * 
	FROM	mandatedetail
	WHERE mandatedetail.idmankind = %<mandatedetail.idmankind>% 
	AND 	mandatedetail.yman = %<mandatedetail.yman>% 
	AND 	mandatedetail.nman = %<mandatedetail.nman>% 
	AND   (mandatedetail.idexp_taxable = expensemandate.idexp OR
		mandatedetail.idexp_iva = expensemandate.idexp) 
	)
]{I} = 0
)
OR
(&<mandatedetail.idexp_iva>& is null and %<mandatedetail.idexp_iva>% is not null
AND
[SELECT COUNT(expensemandate.idexp) 
FROM 	expensemandate
WHERE expensemandate.idmankind = %<mandatedetail.idmankind>% 
AND 	expensemandate.yman = %<mandatedetail.yman>% 
AND 	expensemandate.nman = %<mandatedetail.nman>% 
AND   expensemandate.idexp < %<mandatedetail.idexp_iva>% 
AND 	NOT  EXISTS 
	(SELECT * 
	FROM	mandatedetail
	WHERE mandatedetail.idmankind = %<mandatedetail.idmankind>% 
	AND 	mandatedetail.yman = %<mandatedetail.yman>% 
	AND 	mandatedetail.nman = %<mandatedetail.nman>% 
	AND   (mandatedetail.idexp_iva = expensemandate.idexp OR
		 mandatedetail.idexp_taxable = expensemandate.idexp)
 )
]{I} = 0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN008','1','U','mandatedetail','S','S','S','N','N',{ts '2007-03-08 14:21:48.360'},'''SARA''','Impostare l''anagrafica per il dettaglio  n. %<mandatedetail.rownum>%   %<mandatedetail.detaildescription>% del contratto passivo %<mandatedetail.idmankind>%/ n. %<mandatedetail.nman>% del %<mandatedetail.yman>%
','N','(
 [SELECT ISNULL(multireg,''N'')FROM mandatekind WHERE 
 idmankind = %<mandatedetail.idmankind>%]{C} = ''N''
)

OR

(
 ISNULL(%<mandatedetail.idreg>%, 0) <> 0 
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN010','1','U','mandatedetail','S','S','S','N','N',{ts '2008-04-30 13:53:17.303'},'NINO','Non può essere annullato  il dettaglio perché contabilizzato  in anni successivi o l''impegno corrispondente è stato pagato','S','-- Controllo su inserimento data fine (da NULL a valore)
(
%<mandatedetail.idexp_iva>% IS NULL
AND %<mandatedetail.idexp_taxable>% IS NULL
)
OR
&<mandatedetail.stop>& IS NOT NULL
OR
%<mandatedetail.stop>% IS NULL
OR
ISNULL(&<mandatedetail.stop>&, {D ''1900-01-01''}) =
ISNULL(%<mandatedetail.stop>%, {D ''1900-01-01''})
OR
(
YEAR(%<mandatedetail.stop>%) = %<sys_esercizio>%
/*
AND
YEAR(%<mandatedetail.stop>%) =
[SELECT MIN(ayear)
FROM
(
	(SELECT MAX(ayear) as ayear
	FROM expenseyear
	WHERE idexp = %<mandatedetail.idexp_iva>%)
	UNION
	(SELECT MAX(ayear) as ayear
	FROM expenseyear
	WHERE idexp = %<mandatedetail.idexp_taxable>%)
) as t]{I}
*/
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN010','2','U','mandatedetail','S','S','S','N','N',{ts '2008-01-24 11:10:14.467'},'SARA','Non può essere modificato l''esercizio della data  di annullamento del dettaglio perché contabilizzato  in anni successivi o l''impegno corrispondente è stato pagato','S','-- Controllo su inserimento data fine (da valore a valore)
(
%<mandatedetail.idexp_iva>% IS NULL
AND %<mandatedetail.idexp_taxable>% IS NULL
)
OR
&<mandatedetail.stop>& IS NULL
OR
%<mandatedetail.stop>% IS NULL
OR
YEAR(ISNULL(&<mandatedetail.stop>&, {D ''1900-01-01''})) =
YEAR(ISNULL(%<mandatedetail.stop>%, {D ''1900-01-01''}))')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN010','3','U','mandatedetail','S','S','S','N','N',{ts '2008-04-30 13:54:07.740'},'NINO','Non può essere tolta la data di annullamento del dettaglio','S','-- Controllo su inserimento data fine (da valore a NULL)
(
%<mandatedetail.idexp_iva>% IS NULL
AND %<mandatedetail.idexp_taxable>% IS NULL
)
OR
&<mandatedetail.stop>& IS NULL
OR
%<mandatedetail.stop>% IS NOT NULL
OR
ISNULL(&<mandatedetail.stop>&, {D ''1900-01-01''}) =
ISNULL(%<mandatedetail.stop>%, {D ''1900-01-01''})
OR
(
YEAR(&<mandatedetail.stop>&) = %<sys_esercizio>%
/*
AND
YEAR(&<mandatedetail.stop>&) =
[SELECT MIN(ayear)
FROM
(
	(SELECT MAX(ayear) as ayear
	FROM expenseyear
	WHERE idexp = %<mandatedetail.idexp_iva>%)
	UNION
	(SELECT MAX(ayear) as ayear
	FROM expenseyear
	WHERE idexp = %<mandatedetail.idexp_taxable>%)
) as t]{I}
*/
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN010','4','U','mandatedetail','S','S','S','N','N',{ts '2008-04-30 13:54:26.600'},'NINO','Non può essere impostata la data contabile del dettaglio','S','-- Controllo su inserimento data inizio (da NULL a valore)
(
%<mandatedetail.idexp_iva>% IS NULL
AND %<mandatedetail.idexp_taxable>% IS NULL
)
OR
&<mandatedetail.start>& IS NOT NULL
OR
%<mandatedetail.start>% IS NULL
OR
ISNULL(&<mandatedetail.start>&, {D ''1900-01-01''}) =
ISNULL(%<mandatedetail.start>%, {D ''1900-01-01''})
OR
(
YEAR(%<mandatedetail.start>%) = %<sys_esercizio>%
/*
AND
YEAR(%<mandatedetail.start>%) =
[SELECT MAX(ayear)
FROM
(
	(SELECT MIN(ayear) as ayear
	FROM expenseyear
	WHERE idexp = %<mandatedetail.idexp_iva>%)
	UNION
	(SELECT MIN(ayear) as ayear
	FROM expenseyear
	WHERE idexp = %<mandatedetail.idexp_taxable>%)
) as t]{I}
*/
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN010','5','U','mandatedetail','S','S','S','N','N',{ts '2008-01-18 17:08:03.093'},'NINO','Non può essere modificata la data contabile del dettaglio','S','-- Controllo su inserimento data inizio (da valore a valore)
(
%<mandatedetail.idexp_iva>% IS NULL
AND %<mandatedetail.idexp_taxable>% IS NULL
)
OR
&<mandatedetail.start>& IS NULL
OR
%<mandatedetail.start>% IS NULL
OR
YEAR(ISNULL(&<mandatedetail.start>&, {D ''1900-01-01''})) =
YEAR(ISNULL(%<mandatedetail.start>%, {D ''1900-01-01''}))')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN010','6','U','mandatedetail','S','S','S','N','N',{ts '2008-04-30 13:54:57.523'},'NINO','Non può essere tolta la data contabile del dettaglio','S','-- Controllo su inserimento data inizio (da valore a NULL)
(
%<mandatedetail.idexp_iva>% IS NULL
AND %<mandatedetail.idexp_taxable>% IS NULL
)
OR
&<mandatedetail.start>& IS NULL
OR
%<mandatedetail.start>% IS NOT NULL
OR
ISNULL(&<mandatedetail.start>&, {D ''1900-01-01''}) =
ISNULL(%<mandatedetail.start>%, {D ''1900-01-01''})
OR
(
YEAR(&<mandatedetail.start>&) = %<sys_esercizio>%
/*AND
YEAR(&<mandatedetail.start>&) =
[SELECT MIN(ayear)
FROM
(
	(SELECT MAX(ayear) as ayear
	FROM expenseyear
	WHERE idexp = %<mandatedetail.idexp_iva>%)
	UNION
	(SELECT MAX(ayear) as ayear
	FROM expenseyear
	WHERE idexp = %<mandatedetail.idexp_taxable>%)
) as t]{I}
*/
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN010','7','U','mandatedetail','S','S','S','N','N',{ts '2009-11-27 16:39:50.407'},'SARA','Non può essere contabilizzato il dettaglio','N','-- Controllo sulla contabilizzazione (su IVA)
(
	ISNULL(&<mandatedetail.number>&,0) = ISNULL(%<mandatedetail.number>%,0)
	AND ISNULL(&<mandatedetail.taxable>&,0) = ISNULL(%<mandatedetail.taxable>%,0)
	AND ISNULL(&<mandatedetail.taxrate>&,0) = ISNULL(%<mandatedetail.taxrate>%,0)
	AND ISNULL(&<mandatedetail.discount>&,0) = ISNULL(%<mandatedetail.discount>%,0)
	AND ISNULL(&<mandatedetail.idupb>&,''x'') = ISNULL(%<mandatedetail.idupb>%,''x'')
	AND ISNULL(&<mandatedetail.idreg>&,-1) = ISNULL(%<mandatedetail.idreg>%, -1)
)
OR
%<mandatedetail.idexp_iva>% IS NULL
OR
(
ISNULL(&<mandatedetail.start>&, {D ''1900-01-01''}) <>
ISNULL(%<mandatedetail.start>%, {D ''1900-01-01''})
)
OR
(
ISNULL(&<mandatedetail.stop>&, {D ''1900-01-01''}) <>
ISNULL(%<mandatedetail.stop>%, {D ''1900-01-01''})
)
OR
[SELECT COUNT(*)
FROM expenseyear E
JOIN mandatedetail M
ON E.idexp = M.idexp_iva
WHERE 
(
	(M.start IS NULL) OR (E.ayear >= YEAR(M.start))
)
AND
(
	(M.stop IS NULL) OR (E.ayear < YEAR(M.stop))
)
AND M.idmankind = %<mandatedetail.idmankind>%
AND M.yman = %<mandatedetail.yman>%
AND M.nman = %<mandatedetail.nman>%
AND M.rownum = %<mandatedetail.rownum>%
]{I} <= 1
OR
%<sys_esercizio>% =
[SELECT ISNULL(YEAR(mandatedetail.start), expense.ymov)
FROM mandatedetail
JOIN expense
ON expense.idexp = mandatedetail.idexp_iva
WHERE mandatedetail.idmankind = %<mandatedetail.idmankind>%
AND mandatedetail.yman = %<mandatedetail.yman>%
AND mandatedetail.nman = %<mandatedetail.nman>%
AND mandatedetail.rownum = %<mandatedetail.rownum>%
]{I}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN010','8','U','mandatedetail','S','S','S','N','N',{ts '2009-11-27 16:28:25.767'},'SARA','Non può essere contabilizzato il dettaglio','N','-- Controllo sulla contabilizzazione (su imponibile)
(
	ISNULL(&<mandatedetail.number>&,0) = ISNULL(%<mandatedetail.number>%,0)
	AND ISNULL(&<mandatedetail.taxable>&,0) = ISNULL(%<mandatedetail.taxable>%,0)
	AND ISNULL(&<mandatedetail.taxrate>&,0) = ISNULL(%<mandatedetail.taxrate>%,0)
	AND ISNULL(&<mandatedetail.discount>&,0) = ISNULL(%<mandatedetail.discount>%,0)
	AND ISNULL(&<mandatedetail.idupb>&,''x'') = ISNULL(%<mandatedetail.idupb>%,''x'')
	AND ISNULL(&<mandatedetail.idreg>&,-1) = ISNULL(%<mandatedetail.idreg>%, -1)
)
OR
%<mandatedetail.idexp_taxable>% IS NULL
OR
(
ISNULL(&<mandatedetail.start>&, {D ''1900-01-01''}) <>
ISNULL(%<mandatedetail.start>%, {D ''1900-01-01''})
)
OR
(
ISNULL(&<mandatedetail.stop>&, {D ''1900-01-01''}) <>
ISNULL(%<mandatedetail.stop>%, {D ''1900-01-01''})
)
OR
[SELECT COUNT(*)
FROM expenseyear E
JOIN mandatedetail M
ON E.idexp = M.idexp_taxable
WHERE 
(
	(M.start IS NULL) OR (E.ayear >= YEAR(M.start))
)
AND
(
	(M.stop IS NULL) OR (E.ayear < YEAR(M.stop))
)
AND M.idmankind = %<mandatedetail.idmankind>%
AND M.yman = %<mandatedetail.yman>%
AND M.nman = %<mandatedetail.nman>%
AND M.rownum = %<mandatedetail.rownum>%
]{I} <= 1
OR
%<sys_esercizio>% =
[SELECT ISNULL(YEAR(mandatedetail.start), expense.ymov)
FROM mandatedetail
JOIN expense
ON expense.idexp = mandatedetail.idexp_taxable
WHERE mandatedetail.idmankind = %<mandatedetail.idmankind>%
AND mandatedetail.yman = %<mandatedetail.yman>%
AND mandatedetail.nman = %<mandatedetail.nman>%
AND mandatedetail.rownum = %<mandatedetail.rownum>%
]{I}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN010','9','U','mandatedetail','S','S','S','N','N',{ts '2009-11-27 16:28:48.657'},'SARA','Non può essere decontabilizzato il dettaglio','N','-- Controllo sulla decontabilizzazione (su IVA)
(
	ISNULL(&<mandatedetail.number>&,0) = ISNULL(%<mandatedetail.number>%,0)
	AND ISNULL(&<mandatedetail.taxable>&,0) = ISNULL(%<mandatedetail.taxable>%,0)
	AND ISNULL(&<mandatedetail.taxrate>&,0) = ISNULL(%<mandatedetail.taxrate>%,0)
	AND ISNULL(&<mandatedetail.discount>&,0) = ISNULL(%<mandatedetail.discount>%,0)
	AND ISNULL(&<mandatedetail.idupb>&,''x'') = ISNULL(%<mandatedetail.idupb>%,''x'')
	AND ISNULL(&<mandatedetail.idreg>&,-1) = ISNULL(%<mandatedetail.idreg>%, -1)
)
OR
%<mandatedetail.idexp_iva>% IS NOT NULL
OR
[SELECT COUNT(*)
FROM expenseyear E
JOIN mandatedetail M
ON E.idexp = M.idexp_iva
WHERE 
(
	(M.start IS NULL) OR (E.ayear >= YEAR(M.start))
)
AND
(
	(M.stop IS NULL) OR (E.ayear < YEAR(M.stop))
)
AND M.idmankind = %<mandatedetail.idmankind>%
AND M.yman = %<mandatedetail.yman>%
AND M.nman = %<mandatedetail.nman>%
AND M.rownum = %<mandatedetail.rownum>%
]{I} <= 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN010','10','U','mandatedetail','S','S','S','N','N',{ts '2009-11-27 16:29:03.907'},'SARA','Non può essere decontabilizzato il dettaglio','N','-- Controllo sulla decontabilizzazione (su imponibile)
(
	ISNULL(&<mandatedetail.number>&,0) = ISNULL(%<mandatedetail.number>%,0)
	AND ISNULL(&<mandatedetail.taxable>&,0) = ISNULL(%<mandatedetail.taxable>%,0)
	AND ISNULL(&<mandatedetail.taxrate>&,0) = ISNULL(%<mandatedetail.taxrate>%,0)
	AND ISNULL(&<mandatedetail.discount>&,0) = ISNULL(%<mandatedetail.discount>%,0)
	AND ISNULL(&<mandatedetail.idupb>&,''x'') = ISNULL(%<mandatedetail.idupb>%,''x'')
	AND ISNULL(&<mandatedetail.idreg>&,-1) = ISNULL(%<mandatedetail.idreg>%, -1)
)
OR
%<mandatedetail.idexp_taxable>% IS NOT NULL
OR
[SELECT COUNT(*)
FROM expenseyear E
JOIN mandatedetail M
ON E.idexp = M.idexp_taxable
WHERE 
(
	(M.start IS NULL) OR (E.ayear >= YEAR(M.start))
)
AND
(
	(M.stop IS NULL) OR (E.ayear < YEAR(M.stop))
)
AND M.idmankind = %<mandatedetail.idmankind>%
AND M.yman = %<mandatedetail.yman>%
AND M.nman = %<mandatedetail.nman>%
AND M.rownum = %<mandatedetail.rownum>%
]{I} <= 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN011','1','U','mandatedetail','S','S','S','N','N',{ts '2008-01-31 14:23:22.907'},'SARA','Tutti i dettagli del contratto passivo appartenenti allo stesso gruppo  #%<mandatedetail.idgroup>% devono avere la stessa causale EP','N','--post I

(
[SELECT COUNT (DISTINCT ISNULL(idaccmotive,0))
FROM  mandatedetail
WHERE mandatedetail.idmankind = %<mandatedetail.idmankind>%
AND   mandatedetail.yman = %<mandatedetail.yman>%
AND   mandatedetail.nman = %<mandatedetail.nman>% 
AND   mandatedetail.idgroup = %<mandatedetail.idgroup>%
]{I}  <= 1)
OR
%<mandatedetail.idaccmotive>%=&<mandatedetail.idaccmotive>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN011','2','U','mandatedetail','S','S','S','N','N',{ts '2008-01-31 14:23:40.860'},'SARA','Tutti i dettagli del contratto passivo appartenenti allo stesso gruppo  #%<mandatedetail.idgroup>% devono avere la stessa causale EP di annullamento','N','--post I
(
[SELECT COUNT (DISTINCT ISNULL(idaccmotiveannulment,0))
FROM  mandatedetail
WHERE mandatedetail.idmankind = %<mandatedetail.idmankind>%
AND   mandatedetail.yman = %<mandatedetail.yman>%
AND   mandatedetail.nman = %<mandatedetail.nman>% 
AND   mandatedetail.idgroup = %<mandatedetail.idgroup>%
]{I}  <= 1)
OR
%<mandatedetail.idaccmotiveannulment>%=
&<mandatedetail.idaccmotiveannulment>&')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN013','2','U','mandatedetail','S','S','S','N','N',{ts '2010-03-22 10:19:54.877'},'SARA','Per dettaglio #%<mandatedetail.rownum>% del contratto passivo intracomunitario %<mandatedetail.idmankind>% n° %<mandatedetail.nman>% del %<mandatedetail.yman>% , con valuta Euro, l''importo dell''IVA deve essere pari a 0.','N','[SELECT ISNULL(flagintracom,''N'') FROM mandate
WHERE 
idmankind = %<mandatedetail.idmankind>% AND
yman = %<mandatedetail.yman>% AND
nman = %<mandatedetail.nman>%]{C}
= ''N''
OR
%<mandatedetail.tax>% = 0

OR
(
 [SELECT codecurrency FROM mandate 
JOIN currency 
ON currency.idcurrency=mandate.idcurrency
WHERE  idmankind = %<mandatedetail.idmankind>%  AND
 yman = %<mandatedetail.yman>%  AND
 nman =  %<mandatedetail.nman>% ]{C} <> ''EUR''
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ORDIN014','1','U','mandatedetail','S','S','S','N','N',{ts '2012-11-28 09:53:01.333'},'sa','Il Tipo Bene previsto nel Dettaglio n. %<mandatedetail.rownum>% del Contratto Passivo di tipo  %<mandatedetail.idmankind>%,  %<mandatedetail.yman>% / %<mandatedetail.nman>%  non è coerente con la Natura del Tipo di Contratto Passivo','N','--bene inventariabile
(%<mandatedetail.assetkind>% = ''A''   
AND
[select assetkind from mandatekind
where  mandatekind.idmankind= %<mandatedetail.idmankind>%]{I}
& 1 <> 0
)
OR
--aumento di valore
(%<mandatedetail.assetkind>% = ''P''
AND
[select assetkind from mandatekind
where  mandatekind.idmankind= %<mandatedetail.idmankind>%]{I}
& 2 <> 0
)
--servizio
OR
(%<mandatedetail.assetkind>% = ''S''
AND
[select assetkind from mandatekind
where  mandatekind.idmankind= %<mandatedetail.idmankind>%]{I}
& 4 <> 0
)
--magazzino
OR
(%<mandatedetail.assetkind>% = ''M''
AND
[select assetkind from mandatekind
where  mandatekind.idmankind= %<mandatedetail.idmankind>%]{I}
& 8 <> 0
)
--altro
OR
( ISNULL(%<mandatedetail.assetkind>%,''O'')  = ''O''
AND
[select assetkind from mandatekind
where  mandatekind.idmankind= %<mandatedetail.idmankind>%]{I}
& 16 <> 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR005','1','U','mandatedetail','S','S','S','N','N',{ts '2010-01-08 14:50:00.170'},'SA','Il dettaglio del buono d''ordine %<mandateview.mankind>% n. %<mandateview.nman>% / %<mandateview.yman>% non può essere modificato in quanto supera il limite di 5.000 ','N','[SELECT ISNULL(SUM(iva_euro),0) + ISNULL(SUM(taxable_euro),0)
FROM mandatedetailview
WHERE mandatedetailview.idmankind = %<mandate.idmankind>%
AND mandatedetailview.yman = %<mandate.yman>%
AND mandatedetailview.nman = %<mandate.nman>%
AND stop IS NULL]{V} <= 5000
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''ordinegrande''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL
OR
(isnull(%<mandatedetail.idexp_iva>%,0)<>0
AND isnull(&<mandatedetail.idexp_iva>&,0)=0)
OR
( isnull(%<mandatedetail.idexp_taxable>%,0)<>0
AND isnull(&<mandatedetail.idexp_taxable>&,0)  =0 )

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR005','2','U','mandatedetail','S','S','S','N','N',{ts '2010-01-08 14:50:10.517'},'SA','Il dettaglio del buono d''ordine %<mandateview.mankind>% n. %<mandateview.nman>% / %<mandateview.yman>% non può essere modificato in quanto supera il limite di 5.000 ','S','[SELECT ISNULL(SUM(iva_euro),0) + ISNULL(SUM(taxable_euro),0)
FROM mandatedetailview
WHERE mandatedetailview.idmankind = %<mandate.idmankind>%
AND mandatedetailview.yman = %<mandate.yman>%
AND mandatedetailview.nman = %<mandate.nman>%
AND stop IS NULL]{V} <= 5000
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''ordinegrande''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL
OR
(isnull(%<mandatedetail.idexp_iva>%,0)<>0
AND isnull(&<mandatedetail.idexp_iva>&,0)=0)
OR
( isnull(%<mandatedetail.idexp_taxable>%,0)<>0
AND isnull(&<mandatedetail.idexp_taxable>&,0)  =0 )

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','1','U','mandatedetail','S','S','S','N','N',{ts '2010-01-08 14:50:24.563'},'SA','Le regole di sicurezza vietano la modifica di dettagli di contratti passivi','S','
(isnull(%<mandatedetail.idexp_iva>%,0)<>0
AND isnull(&<mandatedetail.idexp_iva>&,0)=0)
OR
( isnull(%<mandatedetail.idexp_taxable>%,0)<>0
AND isnull(&<mandatedetail.idexp_taxable>&,0)  =0 )


OR
(
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename IN (''ordine'', ''ordinegrande'')
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

)
OR


%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','2','U','mandatedetail','S','S','S','N','N',{ts '2009-03-24 15:58:51.580'},'NINO','Le regole di sicurezza vietano la modifica di dettagli di contratti passivi','S','(
isnull(%<mandatedetail.idexp_iva>%,0)=isnull(&<mandatedetail.idexp_iva>&,0)
AND
isnull(%<mandatedetail.idexp_taxable>%,0)=isnull(&<mandatedetail.idexp_taxable>&,0)
)

OR
(
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename IN (''contcontratti'')
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0

)
OR


%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','3','U','mandatedetail','S','S','S','N','N',{ts '2010-09-23 10:17:39.827'},'sara','Le regole di sicurezza vietano la modifica di dettagli di contratti passivi con codice listino valorizzato','S','ISNULL(&<mandatedetail.idlist>&,0) = ISNULL(%<mandatedetail.idlist>%,0) 
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''adm_magazzino''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM005','1','U','mandatedetail','S','S','S','N','N',{ts '2007-02-23 23:02:56.810'},'''NINO''','Il dettaglio sarà collegato in modo improprio al movimento finanziario.','N','(
[SELECT COUNT(*) from expensemandate where
 idexp=%<mandatedetail.idexp_iva>%]{I}=1
)
OR
(
%<mandatedetail.idexp_iva>% is null
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM005','2','U','mandatedetail','S','S','S','N','N',{ts '2007-02-23 23:03:30.027'},'''NINO''','Il dettaglio sarà collegato in modo improprio al movimento finanziario.','N','(
[SELECT COUNT(*) from expensemandate where
 idexp=%<mandatedetail.idexp_taxable>%]{I}=1
)
OR
(
%<mandatedetail.idexp_taxable>% is null
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','mandatekind','S','S','S','N','N',{ts '2008-01-17 16:06:51.000'},'SARA','Cancellazione Impossibile! Esistono buoni d''ordine collegati al tipo di buono d''ordine %<mandatekind.description>%','S','[SELECT COUNT(*)  
FROM mandate
WHERE idmankind = %<mandatekind.idmankind>%]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','mandatekind','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del tipo ordine già esistente','S','[SELECT COUNT(*) 
FROM mandatekind
WHERE description = %<mandatekind.description>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','mandatekind','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del tipo ordine già esistente','S','[SELECT COUNT(*) 
FROM mandatekind
WHERE idmankind <> %<mandatekind.idmankind>%
and description = %<mandatekind.description>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','maritalstatus','S','S','S','N','N',{ts '2007-09-13 12:06:42.093'},'NINO','Cancellazione Impossibile! Esistono dati in anagrafica collegati allo stato civile %<maritalstatus.description>%','S','[(SELECT count(*) 
from registry 
where idmaritalstatus = %<maritalstatus.idmaritalstatus>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','maritalstatus','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione dello stato civile già esistente','S','[(SELECT count(*) 
from maritalstatus
where description = %<maritalstatus.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','maritalstatus','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione dello stato civile già esistente','S','[(SELECT count(*) 
from maritalstatus
where  idmaritalstatus<> %<maritalstatus.idmaritalstatus>% and 
description = %<maritalstatus.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM107','1','D','moneytransfer','S','S','S','N','N',{ts '2012-11-15 11:25:43.677'},'sa','Saldo iniziale + Tot. reversali emesse + Girofondi in entrata deve essere maggiore od uguale al Tot. pagamenti emessi + Girofondi in uscita.','N','ISNULL([SELECT currentfloatfund 
FROM treasurercashtotal 
WHERE ayear = %<sys_esercizio>%
and idtreasurer = %<moneytransfer.idtreasurerdest>%]{V},0) >= 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM112','1','D','moneytransfer','S','S','S','N','N',{ts '2013-02-11 09:54:31.420'},'sa','Non è possibile eliminare un''operazione di girofondo in data diversa da quella di creazione.','N','datediff( day,
%<moneytransfer.adate>%, getdate())=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM107','1','I','moneytransfer','S','S','S','N','N',{ts '2012-11-15 11:25:02.717'},'sa','Saldo iniziale + Tot. reversali emesse + Girofondi in entrata deve essere maggiore od uguale al Tot. pagamenti emessi + Girofondi in uscita.','N','ISNULL([SELECT currentfloatfund 
FROM treasurercashtotal 
WHERE ayear = %<sys_esercizio>%
and idtreasurer = %<moneytransfer.idtreasurersource>%]{V},0) >= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM108','1','I','moneytransfer','S','S','S','N','N',{ts '2013-02-12 16:25:46.430'},'sa','Il cassiere di origine deve essere lo stesso dell''upb del movimento di entrata relativo all''assegnazione incassi.','S','%<moneytransfer.nproceedspart>% is null
OR
%<moneytransfer.idtreasurersource>% =
ISNULL(
[SELECT incomelastview.idtreasurer
	FROM proceedspart 
	JOIN incomelastview
		ON  incomelastview.idinc = proceedspart.idinc 
	WHERE proceedspart.nproceedspart  = %<moneytransfer.nproceedspart>%
		and proceedspart.yproceedspart  = %<moneytransfer.yproceedspart>%]{I},0)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM108','2','I','moneytransfer','S','S','S','N','N',{ts '2012-11-30 11:21:17.387'},'sa','Il cassiere di destinazione deve essere lo stesso dell''UPB dell''assegnazione incassi.','S','%<moneytransfer.nproceedspart>% is null
OR
%<moneytransfer.idtreasurerdest>% =
ISNULL(
[SELECT upb.idtreasurer
	FROM proceedspart 
	JOIN upb
		ON proceedspart.idupb = upb.idupb
	WHERE proceedspart.nproceedspart  = %<moneytransfer.nproceedspart>%
		and proceedspart.yproceedspart  = %<moneytransfer.yproceedspart>%]{I},0)

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM108','3','I','moneytransfer','S','S','S','N','N',{ts '2013-07-17 09:28:37.300'},'sa','L''importo del girofondo non può essere maggiore dell''importo disponibile  dell''assegnazione incassi selezionata.','N','ISNULL(
[SELECT amount
	FROM proceedspart
	WHERE nproceedspart  = %<moneytransfer.nproceedspart>%
		and yproceedspart  = %<moneytransfer.yproceedspart>%]{I},0)
-
ISNULL(	
	[SELECT SUM(amount) FROM moneytransfer
	WHERE nproceedspart  = %<moneytransfer.nproceedspart>%
		and yproceedspart  = %<moneytransfer.yproceedspart>%]{I},0)

>=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM108','4','I','moneytransfer','S','S','S','N','N',{ts '2013-07-17 11:04:24.690'},'sa','L''importo del girofondo non può essere maggiore dell''importo disponibile  dello storno selezionato.','N','ISNULL(
[SELECT amount
	FROM finvardetail
	WHERE nvar  = %<moneytransfer.nvar>%
	AND yvar  = %<moneytransfer.yvar>%
	AND rownum  = %<moneytransfer.rownum>%

]{I},0)
-
ISNULL(	
	[SELECT SUM(amount) FROM moneytransfer
	WHERE nvar  = %<moneytransfer.nvar>%
	AND yvar  = %<moneytransfer.yvar>%
	AND rownum  = %<moneytransfer.rownum>%
]{I},0)

>=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM108','1','U','moneytransfer','S','S','S','N','N',{ts '2013-07-17 09:28:45.330'},'sa','L''importo del girofondo non può essere maggiore dell''importo disponibile dell''assegnazione incassi selezionata.','N','ISNULL(
[SELECT amount
	FROM proceedspart
	WHERE nproceedspart  = %<moneytransfer.nproceedspart>%
		and yproceedspart  = %<moneytransfer.yproceedspart>%]{I},0)
-
ISNULL(	
	[SELECT SUM(amount) FROM moneytransfer
	WHERE nproceedspart  = %<moneytransfer.nproceedspart>%
		and yproceedspart  = %<moneytransfer.yproceedspart>%]{I},0)

>=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM108','2','U','moneytransfer','S','S','S','N','N',{ts '2013-07-17 11:05:25.040'},'sa','L''importo del girofondo non può essere maggiore dell''importo disponibile dello storno selezionato.','N','ISNULL(
[SELECT amount
	FROM finvardetail
	WHERE nvar  = %<moneytransfer.nvar>%
	AND yvar  = %<moneytransfer.yvar>%
	AND rownum  = %<moneytransfer.rownum>%

]{I},0)
-
ISNULL(	
	[SELECT SUM(amount) FROM moneytransfer
	WHERE nvar  = %<moneytransfer.nvar>%
	AND yvar  = %<moneytransfer.yvar>%
	AND rownum  = %<moneytransfer.rownum>%
]{I},0)

>=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM112','1','U','moneytransfer','S','S','S','N','N',{ts '2013-02-11 09:57:44.087'},'sa','Non è possibile modificare un''operazione di girofondo in data diversa da quella di creazione.','N','%<moneytransfer.amount>%=&<moneytransfer.amount>&

OR

datediff( day,%<moneytransfer.adate>%, getdate())=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM117','1','U','moneytransfer','S','S','S','N','N',{ts '2013-07-17 14:46:32.590'},'sa','Esistono delle operazioni di collegate al girofondo %<moneytransfer.ytransfer>% n° %<moneytransfer.ntransfer>%. La modifica dell''importo del girofondo potrebbe causare un importo residuo da trasferire negativo.','S','ISNULL(%<moneytransfer.amount>%,0)  = ISNULL(&<moneytransfer.amount>&,0)
OR
(
%<moneytransfer.yproceedspart>% IS NULL
AND
%<moneytransfer.yvar>% IS NULL
)
OR
(
(
[SELECT isnull(moneytotransfer,0) 
 FROM moneytotransfer_available_view
WHERE y = %<moneytransfer.yproceedspart>%
AND      kind = ''assegnazione''
AND      n = %<moneytransfer.nproceedspart>%
]{V}
+
ISNULL(&<moneytransfer.amount>&,0)
-
ISNULL(%<moneytransfer.amount>%,0)
) >= 0
AND
(
[SELECT isnull(moneytotransfer,0) 
 FROM moneytotransfer_available_view
WHERE y = %<moneytransfer.yvar>%
AND      kind = ''storno''
AND      n = %<moneytransfer.nvar>%
AND      ndet = %<moneytransfer.rownum>%
]{V}
+
ISNULL(&<moneytransfer.amount>&,0)
-
ISNULL(%<moneytransfer.amount>%,0)
)
 >= 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM016','1','D','multifieldkind','S','S','S','S','S',{ts '2010-04-30 14:24:35.390'},'SA','Impossibile cancellare il campo aggiuntivo %<multifieldkind.fieldname>%. E'' utilizzato in una o più classificazioni.','N','[(select count(*) from
	inventorytreemultifieldkind 
where
	inventorytreemultifieldkind.idmultifieldkind=%<multifieldkind.idmultifieldkind>%
)]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','package','S','S','S','N','N',{ts '2010-07-22 14:39:52.017'},'SA','Non si può cancellare l''unità di acquisto " %<package.description>% " se vi sono articoli che la utilizzano. ','S','[(SELECT COUNT(*) FROM list
	WHERE idpackage = %<package.idpackage>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE001','1','D','parasubcontract','S','S','S','N','N',{ts '2006-09-29 12:34:58.203'},'''SARA''','Non è possibile cancellare il contratto paraburdinato %<parasubcontract.ncon>% / %<parasubcontract.ycon>%  perché è stata generata la relativa Anagrafe delle Prestazioni.','S','
[(select count(*)
from serviceregistry 
where  substring(idrelated,1,10) = ''parasubcon''
and substring(idrelated,12,8)= %<parasubcontract.idcon>%)]{N} 
= 0 






')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS004','1','D','parasubcontract','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il contratto %<parasubcontract.ncon>% / %<parasubcontract.ycon>% non può essere cancellato in quanto esistono cedolini già erogati','S','[SELECT COUNT(*) FROM payroll
WHERE idcon = %<parasubcontract.idcon>%
AND disbursementdate IS NOT NULL]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS001','1','I','parasubcontract','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il contratto non può avere l''anno della data di inizio diverso dall''anno di esercizio corrente.','S','%<parasubcontract.ycon>% = [DATEPART(YEAR,%<parasubcontract.start>%)]{I}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS008','1','I','parasubcontract','S','S','S','N','N',{ts '2007-11-14 13:50:14.093'},'NINO','Per %<registry.title>% deve esistere un indirizzo di residenza (predefinito) valido alla data del %<parasubcontract.start>%','S','--Deve esistere un indirizzo di residenza
--per il percipiente alla data di inizio del contratto
[SELECT count(*) FROM registryaddress 
JOIN address
ON address.idaddress = registryaddress.idaddresskind
where registryaddress.idreg = %<parasubcontract.idreg>%
and %<parasubcontract.start>% 
	between registryaddress.start AND ISNULL(registryaddress.stop, %<parasubcontract.start>%)
and address.codeaddress = ''07_SW_DEF''
]{I}>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS008','2','I','parasubcontract','S','S','S','N','N',{ts '2007-11-14 13:50:02.967'},'NINO','Per un percipiente residente all''estero deve esistere un domicilio fiscale italiano valido alla data del %<parasubcontract.start>%','S','--Alla data di inizio del contratto
--deve esistere un domicilio fiscale italiano
--per il percipiente residente all''estero
[SELECT count(*) from registryaddress 
JOIN address
ON address.idaddress = registryaddress.idaddresskind
where registryaddress.idreg = %<parasubcontract.idreg>%
and %<parasubcontract.start>% 
	between registryaddress.start and ISNULL(registryaddress.stop, %<parasubcontract.start>%)
and address.codeaddress=''07_SW_DEF'' and idnation is not null
]{I} = 0 or
[SELECT count(*) from registryaddress
JOIN address
ON address.idaddress = registryaddress.idaddresskind
where registryaddress.idreg = %<parasubcontract.idreg>%
and %<parasubcontract.start>% 
	between registryaddress.start and ISNULL(registryaddress.stop, %<parasubcontract.start>%)
and address.codeaddress=''07_SW_DOM'' and idcity is not null
]{I} > 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS009','1','I','parasubcontract','S','S','S','N','N',{ts '2007-11-14 13:55:06.093'},'NINO','Inserire il codice fiscale estero per il collaboratore %<registry.title>%','S','--se l''''indirizzo predefinito è estero allora il codice fiscale estero è obbligatorio
([(select flagforeign from registryaddress 
JOIN address
ON address.idaddress = registryaddress.idaddresskind
where (idreg=%<parasubcontract.idreg>%)
and (address.codeaddress=''07_SW_DEF'') and (start=
(select max(start) from registryaddress r2
JOIN address a2
ON a2.idaddress = r2.idaddresskind
where (r2.idreg=%<parasubcontract.idreg>%)
and (a2.codeaddress=''07_SW_DEF'')))
)]{C} = ''N'') 
or
(isnull([(select foreigncf from registry
where (idreg=%<parasubcontract.idreg>%)
)]{C},'''') <> '''')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS009','2','I','parasubcontract','S','S','S','N','N',{ts '2007-11-14 13:56:17.640'},'NINO','Inserire il codice fiscale per il collaboratore %<registry.title>%','S','--se l''''indirizzo predefinito è in Italia allora il codice fiscale è obbligatorio
([(select flagforeign from registryaddress 
JOIN address
ON address.idaddress = registryaddress.idaddresskind
where (idreg=%<parasubcontract.idreg>%)
and (codeaddress=''07_SW_DEF'') and (start=
(select max(start) from registryaddress r2
JOIN address a2
ON a2.idaddress = r2.idaddresskind
where (r2.idreg=%<parasubcontract.idreg>%)
and (a2.codeaddress=''07_SW_DEF'')))
)]{C} = ''S'') 
or
(isnull([(select cf from registry
where (idreg=%<parasubcontract.idreg>%)
)]{C},'''') <> '''')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','1','I','parasubcontract','S','S','S','N','N',{ts '2008-04-11 10:40:28.547'},'SARA','Il percipiente del contratto %<registry.title>% non ha un domicilio fiscale o un indirizzo predefinito al 1 gennaio  %<parasubcontract.ycon>%.','S','--[1] = [2]
([SELECT COUNT(*) FROM 
 servicetax 
JOIN tax ON servicetax.taxcode = tax.taxcode
WHERE servicetax.idser = %<parasubcontract.idser>%
AND ISNULL(tax.geoappliance,'''') IN (''C'',''R'')
AND tax.taxkind = 1
AND tax.active = ''S'']{I}=0)
OR
([SELECT COUNT(*) 
  FROM registryaddress 
  JOIN address 
    ON registryaddress.idaddresskind = address.idaddress
WHERE idreg = %<parasubcontract.idreg>%
AND   codeaddress = ''07_SW_DOM''
AND   (CONVERT(smalldatetime,''01-01-''+ 
       CONVERT(varchar(4),%<parasubcontract.ycon>%),105)) 
BETWEEN ISNULL(start,{d ''1900-01-01''}) 
AND ISNULL(stop,{d ''2079-01-01''})
]{I}>0)
OR
([SELECT COUNT(*)
  FROM registryaddress 
  JOIN address 
    ON registryaddress.idaddresskind = address.idaddress
WHERE idreg = %<parasubcontract.idreg>%
AND   codeaddress  = ''07_SW_DEF''
AND  (CONVERT(smalldatetime,''01-01-''+ 
      CONVERT(varchar(4),%<parasubcontract.ycon>%),105))
BETWEEN ISNULL(start,{d ''1900-01-01''}) 
AND ISNULL(stop,{d ''2079-01-01''})
]{I}>0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS019','2','I','parasubcontract','S','S','S','N','N',{ts '2008-10-09 15:28:24.877'},'SARA','In base alla prestazione scelta il percipiente  %<registry.title>% deve avere l''indirizzo di residenza all''estero nel periodo del contratto.','S','--[1] = [2]
([SELECT COUNT(*) 
    FROM service 
   WHERE idser = %<parasubcontract.idser>%  
     AND ISNULL(flagforeign,''N'') = ''S'']{I}=0)
OR
(
 [SELECT COUNT(*) 
  FROM registryaddress 
  JOIN address 
    ON registryaddress.idaddresskind = address.idaddress
WHERE  idreg = %<parasubcontract.idreg>%
AND    codeaddress = ''07_SW_DEF''
AND  ISNULL(%<parasubcontract.start>%,{d ''1900-01-01''}) 
BETWEEN ISNULL(start,{d ''1900-01-01''}) 
AND ISNULL(stop,{d ''2079-01-01''})
AND  ISNULL(%<parasubcontract.stop>%,{d ''2079-01-01''}) 
BETWEEN ISNULL(start,{d ''1900-01-01''}) 
AND ISNULL(stop,{d ''2079-01-01''})
AND ISNULL(flagforeign,''N'') = ''S''
]{I} > 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS026','1','I','parasubcontract','S','S','S','N','N',{ts '2008-10-02 09:48:57.907'},'NINO','Lo stato di residenza del percipiente non prevede alcuna convenzione.','S','%<parasubcontract.idser>% not in 
(select idser from service where codeser in
	 (''07_BRS_CVZ_COC'',''08_COSTCON_NOINPS'',''07_CMP_STNCVZ'')
)

OR
(
 [SELECT COUNT(*) 
  FROM registryaddress 
  JOIN address 
    ON registryaddress.idaddresskind = address.idaddress
WHERE  idreg = %<parasubcontract.idreg>%
AND    codeaddress = ''07_SW_DEF''
AND  ISNULL(%<parasubcontract.start>%,{d ''1900-01-01''}) 
BETWEEN ISNULL(start,{d ''1900-01-01''}) 
AND ISNULL(stop,{d ''2079-01-01''})
AND  ISNULL(%<parasubcontract.stop>%,{d ''2079-01-01''}) 
BETWEEN ISNULL(start,{d ''1900-01-01''}) 
AND ISNULL(stop,{d ''2079-01-01''})
AND ISNULL(flagforeign,''N'') = ''S''
AND ISNULL(idnation,0) in 
(2,5,7,8,10,11,14,15,16,17,18,20,23,24,25,31,35,36,37,38,41,42,43,44,46,47,
50,51,52,53,57,58,81,87,90,91,92,95,97,98,101,102,104,113,117,119,121,122,
125,141,161,163,181,195,196,197,198,202,205,210,223,237,238,256,281,283,
286,291,293,298,304
)

]{I} > 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS028','1','I','parasubcontract','S','S','S','N','N',{ts '2008-10-08 14:22:34.483'},'SARA','La prestazione scelta va svolta da soggetti residenti in Italia, invece il percipiente %<registry.title>% ha la Residenza o Sede Amministrativa all''estero.
','S','([SELECT COUNT(*) 
  FROM service 
 WHERE idser = %<parasubcontract.idser>%
  AND ISNULL(flagforeign,''N'') <> ''S'']{I}=0)
OR
([SELECT COUNT(*) 
  FROM registryaddress 
  JOIN address 
    ON registryaddress.idaddresskind = address.idaddress
WHERE idreg = %<parasubcontract.idreg>%
AND   codeaddress = ''07_SW_DEF''
AND
(
ISNULL(%<parasubcontract.start>%,{d ''1900-01-01''})  BETWEEN ISNULL(start,{d ''1900-01-01''})  AND ISNULL(stop,{d ''2079-01-01''})
OR  
ISNULL(%<parasubcontract.stop>%,{d ''2079-01-01''})  BETWEEN ISNULL(start,{d ''1900-01-01''})  AND ISNULL(stop,{d ''2079-01-01''})
)
AND ISNULL(flagforeign,''N'') = ''S''
]{I}=0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM014','1','I','parasubcontract','S','S','S','N','N',{ts '2009-02-26 15:18:03.767'},'ASSISTENZA','Non è possibile salvare un contratto parasubordinati con numero negativo','N','%<parasubcontract.ncon>%>0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM015','1','U','parasubcontract','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Non si può modificare il percipiente in un contratto se uno dei cedolini appartenenti ad esso sia stato totalmente o parzialmente contabilizzato.','S','([SELECT COUNT(*)
FROM expensepayroll
WHERE idpayroll IN
	(SELECT idpayroll FROM payroll WHERE idcon = %<parasubcontract.idcon>%)
]{I} = 0)
OR
(%<parasubcontract.idreg>% = &<parasubcontract.idreg>&)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM035','1','U','parasubcontract','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Non può essere cambiata la prestazione del contratto parasubordinato %<parasubcontract.ncon>% / %<parasubcontract.ycon>% perché sono stati già contabilizzati uno o più cedolini','S','[SELECT COUNT(*) FROM expensepayrollview
WHERE LEN(idexp) = 8 * CONVERT(int,%<sys_maxexpensephase>%)
AND idcon = %<parasubcontract.idcon>%]{I} = 0
OR
%<parasubcontract.idser>% = &<parasubcontract.idser>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS001','1','U','parasubcontract','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Per questo contratto l''anno della data di inizio non può essere minore dell''anno %<parasubcontract.ycon>%','S','DATEPART(YEAR,%<parasubcontract.start>%) >= %<parasubcontract.ycon>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS001','2','U','parasubcontract','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','La data di inizio del contratto deve precedere la data di inizio del primo cedolino dell''anno fiscale successivo all''anno di esercizio','S','not (%<parasubcontract.start>% >=
[SELECT MIN(start)
FROM payroll
WHERE (idcon=%<parasubcontract.idcon>%)
AND (fiscalyear>%<sys_esercizio>%)]{D})')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS001','3','U','parasubcontract','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','La data di inizio del contratto %<ncon>% / %<ycon>% deve coincidere con la data di inizio del primo cedolino erogato','S','[SELECT COUNT(*) FROM payroll
WHERE idcon = %<parasubcontract.idcon>%
AND disbursementdate IS NOT NULL]{I} = 0
OR
%<parasubcontract.start>% = 
ISNULL([SELECT MIN(start) FROM payroll
WHERE idcon = %<parasubcontract.idcon>%
AND disbursementdate IS NOT NULL]{D},%<parasubcontract.start>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS003','1','U','parasubcontract','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','La data di fine del contratto deve essere maggiore della data di fine dell''ultimo cedolino dell''anno fiscale precedente all''anno di esercizio','S','not (%<parasubcontract.stop>% <= [(SELECT max(stop) from payroll where (idcon=%<parasubcontract.idcon>%) and (fiscalyear<%<sys_esercizio>%))]{D})')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS003','2','U','parasubcontract','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','La data di fine del contratto deve essere maggiore o uguale alla data di fine dell''ultimo cedolino erogato','S','not (%<parasubcontract.stop>% < [(SELECT max(stop) from payroll where (idcon=%<parasubcontract.idcon>%) and (disbursementdate is not null))]{D})')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS003','3','U','parasubcontract','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','La data di fine del contratto deve essere maggiore o uguale alla data di fine dell''ultimo cedolino trasferito','S','not(%<parasubcontract.stop>% < [(SELECT max(stop) from payroll where (idcon=%<parasubcontract.idcon>%) and (fiscalyear<>%<sys_esercizio>%))]{D})')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS008','1','U','parasubcontract','S','S','S','N','N',{ts '2007-11-14 13:50:52.797'},'NINO','Per %<registry.title>% deve esistere un indirizzo di residenza (predefinito) valido alla data del %<parasubcontract.start>% ','S','--Deve esistere un indirizzo di residenza
--per il percipiente alla data di inizio del contratto
[SELECT count(*) from registryaddress 
JOIN address
ON address.idaddress = registryaddress.idaddresskind
where registryaddress.idreg = %<parasubcontract.idreg>%
and %<parasubcontract.start>% 
	between registryaddress.start and ISNULL(registryaddress.stop, %<parasubcontract.start>%)
and address.codeaddress = ''07_SW_DEF''
]{I}>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS008','2','U','parasubcontract','S','S','S','N','N',{ts '2007-11-14 13:51:45.877'},'NINO','Per un percipiente residente all''estero deve esistere un domicilio fiscale italiano valido alla data del %<parasubcontract.start>%','S','--Alla data di inizio del contratto
--deve esistere un domicilio fiscale italiano
--per il percipiente residente all''estero
[SELECT count(*) from registryaddress 
JOIN address
ON address.idaddress = registryaddress.idaddresskind
where registryaddress.idreg = %<parasubcontract.idreg>%
and %<parasubcontract.start>% 
	between registryaddress.start and ISNULL(registryaddress.stop, %<parasubcontract.start>%)
and address.codeaddress=''07_SW_DEF'' and idnation is not null
]{I} = 0 or
[SELECT count(*) from registryaddress
JOIN address
ON address.idaddress = registryaddress.idaddresskind
where registryaddress.idreg = %<parasubcontract.idreg>%
and %<parasubcontract.start>% 
	between registryaddress.start and ISNULL(registryaddress.stop, %<parasubcontract.start>%)
and address.codeaddress=''07_SW_DOM'' and idcity is not null
]{I} > 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS009','1','U','parasubcontract','S','S','S','N','N',{ts '2007-11-14 13:57:23.530'},'NINO','Inserire il codice fiscale estero per il collaboratore %<registry.title>%','S','--se l''''indirizzo predefinito è estero allora il codice fiscale estero è obbligatorio
([(select flagforeign from registryaddress 
JOIN address
ON address.idaddress = registryaddress.idaddresskind
where (idreg=%<parasubcontract.idreg>%)
and (address.codeaddress=''07_SW_DEF'') and (start=
(select max(start) from registryaddress r2
JOIN address a2
ON a2.idaddress = r2.idaddresskind
where (r2.idreg=%<parasubcontract.idreg>%)
and (a2.codeaddress=''07_SW_DEF'')))
)]{C} = ''N'') 
or
(isnull([(select foreigncf from registry
where (idreg=%<parasubcontract.idreg>%)
)]{C},'''') <> '''')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS009','2','U','parasubcontract','S','S','S','N','N',{ts '2007-11-14 13:57:43.437'},'NINO','Inserire il codice fiscale per il collaboratore %<registry.title>%','S','--se l''''indirizzo predefinito è in Italia allora il codice fiscale è obbligatorio
([(select flagforeign from registryaddress 
JOIN address
ON address.idaddress = registryaddress.idaddresskind
where (idreg=%<parasubcontract.idreg>%)
and (codeaddress=''07_SW_DEF'') and (start=
(select max(start) from registryaddress r2
JOIN address a2
ON a2.idaddress = r2.idaddresskind
where (r2.idreg=%<parasubcontract.idreg>%)
and (a2.codeaddress=''07_SW_DEF'')))
)]{C} = ''S'') 
or
(isnull([(select cf from registry
where (idreg=%<parasubcontract.idreg>%)
)]{C},'''') <> '''')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS014','1','U','parasubcontract','S','S','S','N','N',{ts '2007-03-07 10:18:59.453'},'''SA''','Il compenso lordo del contratto %<parasubcontract.ycon>% / %<parasubcontract.ncon>% è inferiore al compenso già erogato','S','ISNULL(
[SELECT SUM(feegross) FROM payroll
WHERE idcon = %<parasubcontract.idcon>%
AND disbursementdate IS NOT NULL
AND flagbalance = ''N'']{N}
,0) <= %<parasubcontract.grossamount>%
-- Scatta solo se peggiorativa della situazione
OR &<parasubcontract.grossamount>& < %<parasubcontract.grossamount>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS019','2','U','parasubcontract','S','S','S','N','N',{ts '2008-10-09 15:28:36.127'},'SARA','In base alla prestazione scelta il percipiente  %<registry.title>% deve avere l''indirizzo di residenza all''estero nel periodo del contratto.','S','--[1] = [2]
([SELECT COUNT(*) 
    FROM service 
   WHERE idser = %<parasubcontract.idser>%
     AND ISNULL(flagforeign,''N'') = ''S'']{I}=0)
OR
(
%<parasubcontract.idser>% =  &<parasubcontract.idser>&
AND 
%<parasubcontract.start>% =  &<parasubcontract.start>&
AND
%<parasubcontract.stop>%  =  &<parasubcontract.stop>&
AND
%<parasubcontract.idreg>%  =  &<parasubcontract.idreg>&
)
OR
([SELECT COUNT(*) 
  FROM registryaddress 
  JOIN address 
    ON registryaddress.idaddresskind = address.idaddress
WHERE idreg = %<parasubcontract.idreg>%
AND   codeaddress = ''07_SW_DEF''
AND  ISNULL(%<parasubcontract.start>%,{d ''1900-01-01''}) 
BETWEEN ISNULL(start,{d ''1900-01-01''}) 
AND ISNULL(stop,{d ''2079-01-01''})
AND  ISNULL(%<parasubcontract.stop>%,{d ''2079-01-01''}) 
BETWEEN ISNULL(start,{d ''1900-01-01''}) 
AND ISNULL(stop,{d ''2079-01-01''})
AND ISNULL(flagforeign,''N'') = ''S''
]{I}>0)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS026','1','U','parasubcontract','S','S','S','N','N',{ts '2008-10-02 09:50:25.797'},'NINO','Lo stato di residenza del percipiente non prevede alcuna convenzione.','S','%<parasubcontract.idser>% not in 
(select idser from service where codeser in
	 (''07_BRS_CVZ_COC'',''08_COSTCON_NOINPS'',''07_CMP_STNCVZ'')
)

OR
(
 [SELECT COUNT(*) 
  FROM registryaddress 
  JOIN address 
    ON registryaddress.idaddresskind = address.idaddress
WHERE  idreg = %<parasubcontract.idreg>%
AND    codeaddress = ''07_SW_DEF''
AND  ISNULL(%<parasubcontract.start>%,{d ''1900-01-01''}) 
BETWEEN ISNULL(start,{d ''1900-01-01''}) 
AND ISNULL(stop,{d ''2079-01-01''})
AND  ISNULL(%<parasubcontract.stop>%,{d ''2079-01-01''}) 
BETWEEN ISNULL(start,{d ''1900-01-01''}) 
AND ISNULL(stop,{d ''2079-01-01''})
AND ISNULL(flagforeign,''N'') = ''S''
AND ISNULL(idnation,0) in 
(2,5,7,8,10,11,14,15,16,17,18,20,23,24,25,31,35,36,37,38,41,42,43,44,46,47,
50,51,52,53,57,58,81,87,90,91,92,95,97,98,101,102,104,113,117,119,121,122,
125,141,161,163,181,195,196,197,198,202,205,210,223,237,238,256,281,283,
286,291,293,298,304
)

]{I} > 0
)
OR
(
 %<parasubcontract.idser>% = &<parasubcontract.idser>&
 and
 %<parasubcontract.idreg>% =  &<parasubcontract.idreg>&
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS028','1','U','parasubcontract','S','S','S','N','N',{ts '2008-10-08 14:22:54.170'},'SARA','La prestazione scelta va svolta da soggetti residenti in Italia, invece il percipiente %<registry.title>% ha la Residenza o Sede Amministrativa all''estero.','S','([SELECT COUNT(*) 
  FROM service 
 WHERE idser = %<parasubcontract.idser>%
  AND ISNULL(flagforeign,''N'') <> ''S'']{I}=0)
OR
(
%<parasubcontract.idser>% =  &<parasubcontract.idser>&
AND 
%<parasubcontract.start>% =  &<parasubcontract.start>&
AND
%<parasubcontract.stop>%  =  &<parasubcontract.stop>&
AND
%<parasubcontract.idreg>%  =  &<parasubcontract.idreg>&
)
OR

([SELECT COUNT(*) 
  FROM registryaddress 
  JOIN address 
    ON registryaddress.idaddresskind = address.idaddress
WHERE idreg = %<parasubcontract.idreg>%
AND   codeaddress = ''07_SW_DEF''
AND
(
ISNULL(%<parasubcontract.start>%,{d ''1900-01-01''})  BETWEEN ISNULL(start,{d ''1900-01-01''})  AND ISNULL(stop,{d ''2079-01-01''})
OR  
ISNULL(%<parasubcontract.stop>%,{d ''2079-01-01''})  BETWEEN ISNULL(start,{d ''1900-01-01''})  AND ISNULL(stop,{d ''2079-01-01''})
)
AND ISNULL(flagforeign,''N'') = ''S''
]{I}=0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS029','1','U','parasubcontract','S','S','S','N','N',{ts '2008-10-09 13:25:34.707'},'NINO','Il percipiente ha già richiesto, nell''anno, l''applicazione di un''aliquota marginale. Ci sarebbe da attendersi che la chieda anche per questa. E'' opportuno effettuare quindi una verifica.','N','isnull([select highertax from parasubcontractyear where idcon=
	%<parasubcontract.idcon>% and
	ayear=%<sys_esercizio>%
]{N}
,0)>0


OR
(
[execute max_higherrate %<sys_esercizio>%,
	''C'',  %<parasubcontract.idreg>%	,
	@outvar output]{N}=0

AND

[execute max_higherrate %<sys_esercizio>%,
	''O'',  %<parasubcontract.idreg>%,
	@outvar output]{N}=0

)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS030','1','U','parasubcontract','S','S','S','N','N',{ts '2009-10-21 10:11:34.187'},'SARA','Non è normalmente corretto modificare manualmente la causale di debito di un contratto parasubordinati in presenza di cedolini calcolati e non ancora erogati.','S','ISNULL(%<parasubcontract.idaccmotivedebit>%,'' '') = 
ISNULL(&<parasubcontract.idaccmotivedebit>&,'' '')
OR
[SELECT COUNT(*) FROM payroll
WHERE idcon = %<parasubcontract.idcon>%
AND ISNULL(flagcomputed,''N'')=''S''
AND disbursementdate IS NULL]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS006','1','I','parasubcontractyear','S','S','S','N','N',{ts '2007-12-11 16:33:46.813'},'SA','L''aliquota marginale non può essere inferiore rispetto a quella applicata sull''imponibile presunto annuo','S','(%<parasubcontractyear.highertax>% IS NULL
AND ISNULL(%<parasubcontractyear.applybrackets>%,''X'') <> ''N''
)
OR
(%<parasubcontractyear.highertax>% >=
[SELECT MAX(s.employrate)
FROM taxratestart a
JOIN taxratebracket s
ON a.taxcode = s.taxcode
AND a.idtaxratestart = s.idtaxratestart
WHERE a.taxcode =
	(SELECT tr.taxcode 
	FROM tax tr
	JOIN servicetax rp
	ON tr.taxcode = rp.taxcode
	WHERE tr.taxkind = 1
	AND tr.geoappliance IS NULL
	AND rp.idser =
		(SELECT idser 
		FROM parasubcontract 
		WHERE idcon = %<parasubcontractyear.idcon>%)
	)
AND a.start <= CONVERT(datetime,''31-12-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)
AND (s.minamount IS NULL OR %<parasubcontractyear.taxablepension>% > s.minamount OR %<parasubcontractyear.taxablepension>% = 0 AND s.minamount = 0) 
AND (s.maxamount IS NULL OR %<parasubcontractyear.taxablepension>% <= s.maxamount)]{N})
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS027','1','I','parasubcontractyear','S','S','S','N','N',{ts '2008-10-17 13:11:20.687'},'NINO','L''aliquota marginale selezionata è troppo bassa rispetto ai redditi presentati dal percipiente.','N','%<parasubcontractyear.applybrackets>% = ''S'' 
OR
%<parasubcontractyear.highertax>% IS NULL
OR
%<parasubcontractyear.highertax>%  >= 
isnull([select max(TB.employrate) from 
 parasubcontract P 	
	join  servicetax ST on ST.idser= P.idser
	join tax T on T.taxcode=ST.taxcode
	join taxratestart TS on TS.taxcode=T.taxcode
	join taxratebracket TB on TB.taxcode=T.taxcode

where 
	P.idcon=%<parasubcontractyear.idcon>% and
 	T.taxkind=1 and T.geoappliance is null and
	TS.start <= CONVERT(datetime,''31-12-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)  and	

	isnull(TB.minamount,0)<=
		
		ISNULL([SELECT SUM(feegross)  from payroll
			where idcon=%<parasubcontractyear.idcon>%
			and fiscalyear=%<parasubcontractyear.ayear>%
			and flagbalance=''N''
			and flagcomputed=''S''
		]{V} ,0)		
		+
	 	   ISNULL([ SELECT SUM(taxablegross) from exhibitedcud 
			where idcon=%<parasubcontractyear.idcon>%
			and fiscalyear=%<parasubcontractyear.ayear>%]{V}
		    ,0)
		
	and TB.idtaxratestart= 
		(SELECT max(idtaxratestart) from taxratestart  TS2 where
			TS2.taxcode=TS.taxcode and
			TS2.start <= CONVERT(datetime,''31-12-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)  
		)
	]{N}
,0)



')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS029','1','I','parasubcontractyear','S','S','S','N','N',{ts '2008-10-09 13:22:56.317'},'NINO','Il percipiente ha già richiesto, nell''anno, l''applicazione di un''aliquota marginale. Ci sarebbe da attendersi che la chieda anche per questa. E'' opportuno effettuare quindi una verifica.','N','isnull(%<parasubcontractyear.highertax>%,0)>0

OR
(
[execute max_higherrate %<sys_esercizio>%,
	''C'',  
	[select idreg from parasubcontract where idcon=%<parasubcontractyear.idcon>%]{I},
	@outvar output]{N}=0

AND

[execute max_higherrate %<sys_esercizio>%,
	''O'',  
	[select idreg from parasubcontract where idcon=%<parasubcontractyear.idcon>%]{I},
	@outvar output]{N}=0

)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS006','1','U','parasubcontractyear','S','S','S','N','N',{ts '2007-12-11 16:34:01.280'},'SA','L''aliquota marginale non può essere inferiore rispetto a quella applicata sull''imponibile presunto annuo','S','(%<parasubcontractyear.highertax>% IS NULL
AND
ISNULL(%<parasubcontractyear.applybrackets>%,''X'') <> ''N''
)
OR
([%<parasubcontractyear.highertax>%] >=
[SELECT MAX(s.employrate)
FROM taxratestart a
JOIN taxratebracket s
ON a.taxcode = s.taxcode
AND a.idtaxratestart = s.idtaxratestart
WHERE a.taxcode =
	(SELECT tr.taxcode 
	FROM tax tr
	JOIN servicetax rp
	ON tr.taxcode = rp.taxcode
	WHERE tr.taxkind = 1
	AND tr.geoappliance IS NULL
	AND rp.idser =
		(SELECT idser 
		FROM parasubcontract 
		WHERE idcon = %<parasubcontractyear.idcon>%)
	)
AND a.start <= CONVERT(datetime,''31-12-''+CONVERT(varchar(4),%<sys_esercizio>%),105)
AND (s.minamount IS NULL OR %<parasubcontractyear.taxablepension>% 
> s.minamount OR %<parasubcontractyear.taxablepension>% = 0 AND s.minamount = 0) 
AND (s.maxamount IS NULL OR %<parasubcontractyear.taxablepension>% 
<= s.maxamount)]{N})
OR
(ISNULL(&<parasubcontractyear.highertax>&,-1) = ISNULL(%<parasubcontractyear.highertax>%,-1))')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS027','1','U','parasubcontractyear','S','S','S','N','N',{ts '2008-10-17 13:11:29.907'},'NINO','L''aliquota marginale selezionata è troppo bassa rispetto ai redditi presentati dal percipiente.','N','%<parasubcontractyear.applybrackets>% = ''S'' 
OR
%<parasubcontractyear.highertax>% IS NULL
OR
%<parasubcontractyear.highertax>% >= 
isnull([select max(TB.employrate) from 
 parasubcontract P 	
	join  servicetax ST on ST.idser= P.idser
	join tax T on T.taxcode=ST.taxcode
	join taxratestart TS on TS.taxcode=T.taxcode
	join taxratebracket TB on TB.taxcode=T.taxcode

where 
	P.idcon=%<parasubcontractyear.idcon>% and
 	T.taxkind=1 and T.geoappliance is null and
	TS.start <= CONVERT(datetime,''31-12-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)  and	
	isnull(TB.minamount,0)<=
		
		ISNULL([SELECT SUM(feegross)  from payroll
			where idcon=%<parasubcontractyear.idcon>%
			and fiscalyear=%<parasubcontractyear.ayear>%
			and flagbalance=''N''
			and flagcomputed=''S''

		]{V} ,0)		
		+
	 	   ISNULL([ SELECT SUM(taxablegross) from exhibitedcud 
			where idcon=%<parasubcontractyear.idcon>%
			and fiscalyear=%<parasubcontractyear.ayear>%]{V}
		    ,0)
		
	and TB.idtaxratestart= 
		(SELECT max(idtaxratestart) from taxratestart  TS2 where
			TS2.taxcode=TS.taxcode and
			TS2.start <= CONVERT(datetime,''31-12-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)  
		)
	]{N}
,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS029','1','U','parasubcontractyear','S','S','S','N','N',{ts '2008-10-09 13:22:34.567'},'NINO','Il percipiente ha già richiesto, nell''anno, l''applicazione di un''aliquota marginale. Ci sarebbe da attendersi che la chieda anche per questa. E'' opportuno effettuare quindi una verifica.','N','isnull(%<parasubcontractyear.highertax>%,0)>0

OR
(
[execute max_higherrate %<sys_esercizio>%,
	''C'',  
	[select idreg from parasubcontract where idcon=%<parasubcontractyear.idcon>%]{I},
	@outvar output]{N}=0

AND

[execute max_higherrate %<sys_esercizio>%,
	''O'',  
	[select idreg from parasubcontract where idcon=%<parasubcontractyear.idcon>%]{I},
	@outvar output]{N}=0

)
OR
isnull(%<parasubcontractyear.highertax>%,0)=isnull(&<parasubcontractyear.highertax>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM006','1','I','partincomesetup','S','S','S','N','N',{ts '2007-12-11 12:12:15.890'},'SA','La ripartizione delle assegnazioni imputate alla voce in entrata selezionata è maggiore del 100%','S','ISNULL([SELECT SUM(percentage) 
from partincomesetup 
where idfinincome = %<partincomesetup.idfinincome>%]{V} ,0)
+ 
ISNULL(%<partincomesetup.percentage>%,0) <= 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','partincomesetup','S','S','S','N','N',{ts '2007-10-03 19:09:52.157'},'NINO','La ripartizione che si sta cercando di inserire già esiste','S','[(SELECT count(*) 
from partincomesetup 
where idfinincome = %<partincomesetup.idfinincome>% 
and idfinexpense = %<partincomesetup.idfinexpense>%)]{V} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM006','1','U','partincomesetup','S','S','S','N','N',{ts '2007-12-11 12:04:10.983'},'SA','La ripartizione delle assegnazioni imputate alla voce in entrata selezionata è maggiore del 100%','S','ISNULL([SELECT SUM(percentage)
from partincomesetup 
where idfinincome = %<partincomesetup.idfinincome>%]{V} ,0)
+ 
ISNULL(%<partincomesetup.percentage>%,0) <= 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','patrimony','S','S','S','N','N',{ts '2011-12-22 11:06:34.000'},'sara','Cancellazione Impossibile! Esistono voci di dello stato patrimoniale dipendenti dalla voce %<patrimonyview.patpart>% - %<patrimonyview.codepatrimony>%','S','[SELECT COUNT(*) 
FROM patrimony 
WHERE paridpatrimony = %<patrimony.idpatrimony>%]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','patrimonylookup','S','S','S','N','N',{ts '2007-06-28 16:44:46.590'},'''SARA''','Voce dello stato patrimoniale già convertita nell''esercizio %<esercizio>%','S','[(SELECT count(*) 
from patrimonylookup 
where oldidpatrimony = %<patrimonylookup.oldidpatrimony>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM065','1','I','paydisposition','S','S','S','N','N',{ts '2009-01-20 12:29:14.243'},'SA','Esiste un''altra disposizione di pagamento associata allo stesso mandato.','N','[SELECT COUNT(*) 
FROM  paydisposition
WHERE kpay  = %<paydisposition.kpay>%
]{I} <= 1
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM067','1','I','paydisposition','S','S','S','N','N',{ts '2012-03-27 09:19:27.687'},'sa','Il totale del mandato di pagamento associato non quadra con la somma delle disposizioni di pagamento ad esso associate','N','%<paydisposition.kpay>% IS NULL

OR

(
ISNULL([select sum(amount) from paydispositiondetail 
 WHERE idpaydisposition= %<paydisposition.idpaydisposition>%
]{V},0)
=

ISNULL(
 [select total from paymentview where 
 	kpay= 
   %<paydisposition.kpay>%

 ]{V},0)
-
ISNULL(  [SELECT SUM(employtax)  FROM expensetaxofficial  
WHERE expensetaxofficial.idexp IN
 ([SELECT expenselast.idexp FROM expenselast 
WHERE  expenselast.kpay =    %<paydisposition.kpay>% ]{I})
AND expensetaxofficial.stop IS NULL]{V} ,0)

)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM080','1','I','paydisposition','S','S','S','N','N',{ts '2011-05-12 15:54:30.127'},'sara','Il Mandato di pagamento %<payment.npay>% / %<payment.ypay>% essendo associato a una disposizione di pagamento non può contenere più righe di mandato.','N','-- Regola che vale per Monte Paschi di Siena, 
ISNULL(
[SELECT idbank FROM treasurer WHERE flagdefault= ''S'']{C},'''') 
NOT IN (''01030'' ,''03067'')
OR
%<paydisposition.kpay>% IS NULL
OR
[SELECT COUNT(*) 
FROM  expenselast
WHERE kpay  = %<paydisposition.kpay>%
]{I} <=  1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM065','1','U','paydisposition','S','S','S','N','N',{ts '2009-01-20 12:29:17.617'},'SA','Esiste un''altra disposizione di pagamento associata allo stesso mandato.','N','[SELECT COUNT(*) 
FROM  paydisposition
WHERE kpay  = %<paydisposition.kpay>%
]{I} <= 1
OR
%<paydisposition.kpay>%=&<paydisposition.kpay>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM067','1','U','paydisposition','S','S','S','N','N',{ts '2012-03-27 09:19:39.577'},'sa','Il totale del mandato di pagamento associato non quadra più con la somma delle disposizioni di pagamento ad esso associate','N','%<paydisposition.kpay>% IS NULL

OR

(
ISNULL([select sum(amount) from paydispositiondetail 
 WHERE idpaydisposition= %<paydisposition.idpaydisposition>%
]{V},0)
=
ISNULL(
 [select total from paymentview where 
 	kpay= 
   %<paydisposition.kpay>%

 ]{V},0)
-
ISNULL(  [SELECT SUM(employtax)  FROM expensetaxofficial  
WHERE expensetaxofficial.idexp IN
 ([SELECT expenselast.idexp FROM expenselast 
WHERE  expenselast.kpay =    %<paydisposition.kpay>% ]{I})
AND expensetaxofficial.stop IS NULL]{V} ,0)

)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM080','1','U','paydisposition','S','S','S','N','N',{ts '2011-05-12 15:54:42.640'},'sara','Il Mandato di pagamento %<payment.npay>% / %<payment.ypay>% essendo associato a una disposizione di pagamento non può contenere più righe di mandato.','N','-- Regola che vale per Monte Paschi di Siena, 
ISNULL(
[SELECT idbank FROM treasurer WHERE flagdefault= ''S'']{C},'''') 
 NOT IN (''01030'' ,''03067'')
OR
[SELECT COUNT(*) 
FROM  expenselast
WHERE kpay  = %<paydisposition.kpay>%
]{I} <=  1
OR 
%<paydisposition.kpay>% = &<paydisposition.kpay>&
OR
%<paydisposition.kpay>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM067','1','D','paydispositiondetail','S','S','S','N','N',{ts '2012-03-27 09:26:16.593'},'sa','Il totale del mandato di pagamento associato non quadra più con la somma delle disposizioni di pagamento ad esso associate','N','ISNULL([select kpay from paydisposition 
 WHERE idpaydisposition= &<paydispositiondetail.idpaydisposition>&
]{I},0) = 0

OR

ISNULL([select sum(amount) from paydispositiondetail 
 WHERE idpaydisposition= &<paydispositiondetail.idpaydisposition>&
]{V},0)
=
(
ISNULL(
 [select total from paymentview where 
 	kpay= 
   [select kpay from paydisposition 
 	WHERE idpaydisposition= &<paydispositiondetail.idpaydisposition>&
   ]{I}
 ]{V},0)
-
ISNULL(  [SELECT SUM(employtax)  FROM expensetaxofficial
JOIN expenselast ON expensetaxofficial.idexp = expenselast.idexp
WHERE expenselast.kpay  =  
  [select kpay from paydisposition 
 	WHERE idpaydisposition= &<paydispositiondetail.idpaydisposition>&
   ]{I}
AND expensetaxofficial.stop IS NULL]{V} ,0)

)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM067','1','I','paydispositiondetail','S','S','S','N','N',{ts '2012-03-27 09:27:22.797'},'sa','Il totale del mandato di pagamento associato non quadra più con la somma delle disposizioni di pagamento ad esso associate','N','ISNULL([select kpay from paydisposition 
 WHERE idpaydisposition= %<paydispositiondetail.idpaydisposition>%
]{I},0) = 0

OR
(
ISNULL([select sum(amount) from paydispositiondetail 
 WHERE idpaydisposition= %<paydispositiondetail.idpaydisposition>%
]{V},0)
=

ISNULL(
 [select total from paymentview where 
 	kpay= 
   [select kpay from paydisposition 
 	WHERE idpaydisposition= %<paydispositiondetail.idpaydisposition>%
   ]{I}

 ]{V},0)

-

ISNULL(  [SELECT SUM(employtax)  FROM expensetaxofficial
JOIN expenselast ON expensetaxofficial.idexp = expenselast.idexp
WHERE expenselast.kpay  =  
  [select kpay from paydisposition 
 	WHERE idpaydisposition= %<paydispositiondetail.idpaydisposition>%
   ]{I}
AND expensetaxofficial.stop IS NULL]{V} ,0)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM069','1','I','paydispositiondetail','S','S','S','N','N',{ts '2008-04-17 16:03:11.670'},'NINO','Non è possibile utilizzare lo strumento disposizione di pagamento per importi superiori a 10000 euro.','S','%<paydispositiondetail.amount>% <= 10000')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM091','1','I','paydispositiondetail','S','S','S','N','N',{ts '2011-05-24 15:15:51.827'},'sa','Nel dettaglio N.  %<paydispositiondetail.iddetail>% sono state indicate le coordinate bancarie, ma l''IBAN è assente. Il pagamento sarà inteso per cassa. Valorizzare l''IBAN in caso di bonifico.','N','(isnull(%<paydispositiondetail.iban>%, '''') <> '''' )
or 
 (isnull(%<paydispositiondetail.cin>%, '''') = '''')
or 
 (isnull(%<paydispositiondetail.abi>%, '''') = '''')
or
  (isnull(%<paydispositiondetail.cab>%, '''') = '''')
or
  (isnull(%<paydispositiondetail.cc>%, '''') = '''')

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM094','1','I','paydispositiondetail','S','S','S','N','N',{ts '2011-07-20 09:35:10.577'},'Nino07032012','Esiste già una disposizione di pagamento per il beneficiario %<paydispositiondetail.title>% %<paydispositiondetail.surname>% %<paydispositiondetail.forename>%  con importo da liquidare euro  %<paydispositiondetail.amount>% .','N','[SELECT COUNT(*)
FROM paydispositiondetail
WHERE idpaydisposition= %<paydispositiondetail.idpaydisposition>%
AND ISNULL(title,'''')  = ISNULL( %<paydispositiondetail.title>%,'''')
AND ISNULL(surname,'''') =  ISNULL(%<paydispositiondetail.surname>%,'''')
AND ISNULL(forename,'''') = ISNULL(%<paydispositiondetail.forename>%,'''')]
{N}=1

AND

[SELECT COUNT(*)
FROM paydispositiondetail
WHERE idpaydisposition= %<paydispositiondetail.idpaydisposition>%
AND ISNULL(cf,'''')  = ISNULL( %<paydispositiondetail.cf>%,'''')]
{N}=1
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM099','1','I','paydispositiondetail','S','S','S','N','N',{ts '2011-10-12 11:33:59.717'},'sara','Esistono altri dettagli di disposizioni di pagamento relativi alla stessa persona fisica %<paydispositiondetail.surname>%  %<paydispositiondetail.forename>%, avente codice fiscale %<paydispositiondetail.cf>% e con lo stesso codice pagamento  %<paydispositiondetail.paymentcode>% .','S','[SELECT COUNT(*) FROM paydispositiondetail
WHERE cf = %<paydispositiondetail.cf>% 
AND paymentcode = %<paydispositiondetail.paymentcode>%]{I} = 0 
OR (%<paydispositiondetail.paymentcode>% IS NULL)  
OR (%<paydispositiondetail.cf>% IS NULL)  

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM100','1','I','paydispositiondetail','S','S','S','N','N',{ts '2012-03-02 14:16:04.313'},'sa','Non è possibile inserire dettagli di disposizioni di pagamento con pagamento di tipo "Sportello" con importo superiore ai 1000 Euro.','N','%<paydispositiondetail.amount>% <= 1000
OR %<paydispositiondetail.iban>%  IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM067','1','U','paydispositiondetail','S','S','S','N','N',{ts '2012-03-27 09:27:12.030'},'sa','Il totale del mandato di pagamento associato non quadra più con la somma delle disposizioni di pagamento ad esso associate','N','ISNULL([select kpay from paydisposition 
 WHERE idpaydisposition= %<paydispositiondetail.idpaydisposition>%
]{I},0) = 0

OR
(
ISNULL([select sum(amount) from paydispositiondetail 
 WHERE idpaydisposition= %<paydispositiondetail.idpaydisposition>%
]{V},0)
=
ISNULL(
 [select total from paymentview where 
 	kpay= 
   [select kpay from paydisposition 
 	WHERE idpaydisposition= %<paydispositiondetail.idpaydisposition>%
   ]{I}

 ]{V},0)
-
ISNULL(  [SELECT SUM(employtax)  FROM expensetaxofficial
JOIN expenselast ON expensetaxofficial.idexp = expenselast.idexp
WHERE expenselast.kpay  =  
  [select kpay from paydisposition 
 	WHERE idpaydisposition= %<paydispositiondetail.idpaydisposition>%
   ]{I}
AND expensetaxofficial.stop IS NULL]{V} ,0)

)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM069','1','U','paydispositiondetail','S','S','S','N','N',{ts '2008-04-17 16:03:17.217'},'NINO','Non è possibile utilizzare lo strumento disposizione di pagamento per importi superiori a 10000 euro.','S','%<paydispositiondetail.amount>% <= 10000')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM091','1','U','paydispositiondetail','S','S','S','N','N',{ts '2011-05-24 15:15:57.063'},'sa','Nel dettaglio N.  %<paydispositiondetail.iddetail>% sono state indicate le coordinate bancarie, ma l''IBAN è assente. Il pagamento sarà inteso per cassa. Valorizzare l''IBAN in caso di bonifico.','N','(isnull(%<paydispositiondetail.iban>%, '''') <> '''' )
or 
 (isnull(%<paydispositiondetail.cin>%, '''') = '''')
or 
 (isnull(%<paydispositiondetail.abi>%, '''') = '''')
or
  (isnull(%<paydispositiondetail.cab>%, '''') = '''')
or
  (isnull(%<paydispositiondetail.cc>%, '''') = '''')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM094','1','U','paydispositiondetail','S','S','S','N','N',{ts '2011-07-20 09:35:18.627'},'Nino07032012','Esiste già una disposizione di pagamento per il beneficiario %<paydispositiondetail.title>% %<paydispositiondetail.surname>% %<paydispositiondetail.forename>%  con importo da liquidare euro  %<paydispositiondetail.amount>% .','N','[SELECT COUNT(*)
FROM paydispositiondetail
WHERE idpaydisposition= %<paydispositiondetail.idpaydisposition>%
AND ISNULL(title,'''')  = ISNULL( %<paydispositiondetail.title>%,'''')
AND ISNULL(surname,'''') =  ISNULL(%<paydispositiondetail.surname>%,'''')
AND ISNULL(forename,'''') = ISNULL(%<paydispositiondetail.forename>%,'''')]
{N}=1

AND

[SELECT COUNT(*)
FROM paydispositiondetail
WHERE idpaydisposition= %<paydispositiondetail.idpaydisposition>%
AND ISNULL(cf,'''')  = ISNULL( %<paydispositiondetail.cf>%,'''')]
{N}=1
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM099','1','U','paydispositiondetail','S','S','S','N','N',{ts '2011-10-12 11:34:12.390'},'sara','Esistono altri dettagli di disposizioni di pagamento relativi alla stessa persona fisica %<paydispositiondetail.surname>%  %<paydispositiondetail.forename>%, avente codice fiscale %<paydispositiondetail.cf>% e con lo stesso codice pagamento  %<paydispositiondetail.paymentcode>% .','S','(%<paydispositiondetail.paymentcode>% IS NULL)  
OR
(%<paydispositiondetail.cf>% IS NULL)  
OR
(
(%<paydispositiondetail.paymentcode>% = &<paydispositiondetail.paymentcode>&) 
	AND
(%<paydispositiondetail.cf>%  = &<paydispositiondetail.cf>&) 
)
OR
[SELECT COUNT(*) FROM paydispositiondetail
WHERE cf = %<paydispositiondetail.cf>% 
AND paymentcode = %<paydispositiondetail.paymentcode>%]{I} = 0 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM100','1','U','paydispositiondetail','S','S','S','N','N',{ts '2012-03-02 14:15:57.627'},'sa','Non è possibile inserire dettagli di disposizioni di pagamento con pagamento di tipo "Sportello" con importo superiore ai 1000 Euro.','N','%<paydispositiondetail.amount>% <= 1000
OR %<paydispositiondetail.iban>%  IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','D','payment','S','S','S','N','N',{ts '2007-12-13 14:23:21.030'},'NINO','Il mandato n. %<payment.npay>% / %<payment.ypay>% non può essere cancellato. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM005','1','D','payment','S','S','S','N','N',{ts '2007-12-05 09:25:34.513'},'SARA','Il mandato di pagamento %<ypay>%  %<npay>% non può essere eliminato in quanto è stato trasmesso al tesoriere','S','%<payment.kpaymenttransmission>% IS NULL')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM051','1','D','payment','S','S','S','N','N',{ts '2007-01-10 14:47:59.517'},'''SARA''','Il mandato di pagamento n. %<payment.npay>%  / %<payment.ypay>% non può essere cancellato in quanto esistono altri documenti successivi','S','[SELECT COUNT(*) FROM payment
WHERE ypay = %<payment.ypay>%
AND npay > %<payment.npay>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM081','1','D','payment','S','S','S','N','N',{ts '2009-10-16 10:04:00.113'},'SA','Il mandato di pagamento %<payment.npay>%/%<payment.ypay>% non può essere rimosso perchè contiene movimenti di spesa aventi ritenute già raccolte dall''amministrazione.','N','(&<payment.kpaymenttransmission>& IS  NULL)

OR

[(SELECT COUNT(*)
FROM expense
JOIN expenselast
	ON expense.idexp = expenselast.idexp
JOIN expensetax
	ON expense.idexp = expensetax.idexp
WHERE expenselast.kpay  = %<payment.kpay>%
AND expensetax.idunifiedtax IS NOT NULL
)]{I} = 0

OR
datediff( day,
[select transmissiondate from paymenttransmission where
	kpaymenttransmission=
	 &<payment.kpaymenttransmission>&]{D} , getdate())<=5

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM081','2','D','payment','S','S','S','N','N',{ts '2009-10-16 10:04:44.793'},'SA','Il mandato di pagamento %<payment.npay>%/%<payment.ypay>% non può essere rimosso perchè contiene movimenti di spesa aventi correzioni di ritenute già raccolte dall''amministrazione.','N','(&<payment.kpaymenttransmission>& IS NULL)

OR

[(SELECT COUNT(*)
FROM expense
JOIN expenselast
	ON expense.idexp = expenselast.idexp
JOIN expensetaxcorrige
	ON expense.idexp = expensetaxcorrige.idexp
WHERE expenselast.kpay  = %<payment.kpay>%
AND expensetaxcorrige.idunifiedtaxcorrige IS NOT NULL
)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM084','1','D','payment','S','S','S','N','N',{ts '2009-10-16 09:31:16.210'},'SA','Non si può rimuovere dalla distinta il Mandato %<payment.npay>%/%<payment.ypay>%, in quanto contiene movimenti finanziari che contabilizzano dettagli fattura a iva differita.','S','


(&<payment.kpaymenttransmission>& IS  NULL)

OR

[SELECT COUNT(*) FROM expenselast 
JOIN expenseinvoice
	ON expenseinvoice.idexp= expenselast.idexp
JOIN invoice
	ON invoice.idinvkind = expenseinvoice.idinvkind
	AND invoice.yinv = expenseinvoice.yinv
	AND invoice.ninv = expenseinvoice.ninv
WHERE expenselast.kpay = &<payment.kpay>&	
	AND invoice.flagdeferred = ''S'']{I} = 0

OR 
datediff( day,
[select transmissiondate from paymenttransmission where
	kpaymenttransmission=
	 &<payment.kpaymenttransmission>&]{D} , getdate())<=5


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','payment','S','S','S','N','N',{ts '2007-12-05 15:45:27.967'},'SARA','Cancellazione Impossibile! Esistono movimenti di spesa collegati al mandato di pagamento %<npay>% / %<ypay>%','S','[(SELECT count(*) 
from expenselast 
where expenselast.kpay = %<payment.kpay>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','payment','S','S','S','N','N',{ts '2007-12-06 11:32:41.127'},'SARA','Cancellazione Impossibile! Esistono movimenti bancari collegati al mandato di pagamento %<npay>% / %<ypay>%','S','[SELECT count(*) 
from banktransaction 
where kpay = %<payment.kpay>% ]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM007','1','D','payment','S','S','S','N','N',{ts '2009-01-20 12:29:28.477'},'SA','Attenzione esistono MANDATI e/o REVERSALI VUOTE !  Contattare il servizio assistenza.','N','[SELECT COUNT(*) FROM payment
WHERE
	(SELECT COUNT(*) FROM expenselast 
	WHERE expenselast.kpay = payment.kpay) = 0
AND payment.ypay=%<sys_esercizio>%]{I} = 0
AND
[SELECT COUNT(*) FROM proceeds
WHERE
	(SELECT COUNT(*) 
	FROM incomelast 
	WHERE incomelast.kpro = proceeds.kpro) = 0
AND proceeds.ypro=%<sys_esercizio>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','I','payment','S','S','S','N','N',{ts '2007-12-13 14:17:37.873'},'NINO','Il mandato n. %<payment.npay>% / %<payment.ypay>% non può essere inserito. Esercizio  %<esercizio>% chiuso','N','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM017','1','I','payment','S','S','S','N','N',{ts '2008-02-15 15:05:48.430'},'NINO','La data contabile del mandato %<npay>%/%<ypay>% deve essere uguale o maggiore rispetto a quella dell''ultimo mandato inserito','N','--post
%<payment.adate>% >= 
[SELECT MAX(adate) 
FROM payment 
WHERE ypay = %<payment.ypay>%]{D}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM060','1','I','payment','S','S','S','N','N',{ts '2007-12-05 15:23:41.997'},'SARA','Il mandato n. %<payment.npay>% / %<payment.ypay>% ha una imputazione (competenza / residui) differente rispetto ai movimenti di spesa associati','N','ISNULL(
	[SELECT payment_flag FROM config WHERE ayear = %<payment.ypay>%]{I}
,0) & 8 <> 8
OR
[SELECT COUNT(*)
FROM expenselastview
WHERE kpay = %<payment.kpay>%
AND (totflag & 1)*2 <>  (%<payment.flag>% & 2)
]{I} = 0



')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM062','1','I','payment','S','S','S','N','N',{ts '2008-01-14 11:36:26.000'},'NINO','Non può essere generato il mandato in quanto non è stato effettuato il trasferimento della configurazione di bilancio','S','[SELECT flag FROM accountingyear
WHERE ayear = %<payment.ypay>% - 1]{I} & 0x0F
>= 3
OR
%<payment.ypay>% < %<sys_esercizio>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM064','1','I','payment','S','S','S','N','N',{ts '2009-01-05 12:28:17.710'},'SA','Il mandato n. %<payment.npay>% / %<payment.ypay>% non può essere inserito in quanto appartiene ad un anno precendente a quello corrente','N','%<payment.ypay>% >= YEAR(GETDATE())

OR
(
%<payment.ypay>% = YEAR(GETDATE())-1
AND
MONTH(GETDATE())=1
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM084','1','I','payment','S','S','S','N','N',{ts '2009-10-16 09:32:58.753'},'SA','Non si può aggiungere  alla distinta il Mandato %<payment.npay>%/%<payment.ypay>%, in quanto contiene movimenti finanziari che contabilizzano dettagli fattura a iva differita.','S','
 (%<payment.kpaymenttransmission>% IS  NULL)

OR

[SELECT COUNT(*) FROM expenselast 
JOIN expenseinvoice
	ON expenseinvoice.idexp= expenselast.idexp
JOIN invoice
	ON invoice.idinvkind = expenseinvoice.idinvkind
	AND invoice.yinv = expenseinvoice.yinv
	AND invoice.ninv = expenseinvoice.ninv
WHERE expenselast.kpay = %<payment.kpay>%	
	AND invoice.flagdeferred = ''S'']{I} = 0

OR 

datediff( day,
[select transmissiondate from paymenttransmission where
	kpaymenttransmission=
	 %<payment.kpaymenttransmission>%]{D} , getdate())<=5


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM113','1','I','payment','S','S','S','N','N',{ts '2013-03-19 09:48:09.257'},'sa','Non può essere salvato un Mandato di pagamento senza Cassiere.','S','%<payment.idtreasurer>% is not null')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN018','1','I','payment','S','S','S','N','N',{ts '2009-03-02 15:05:23.867'},'SARA','L'' istituto cassiere relativo al mandato di pagamento  n° %<payment.npay>% / %<payment.ypay>% non è coerente con quello del mandato del pagamento principale.','N','[SELECT COUNT(*)
FROM expense
JOIN expenselast ELPR
		ON ELPR.idexp = expense.idexp
		AND ELPR.kpay = %<payment.kpay>%
JOIN expenselast
		ON expenselast.idexp = expense.idpayment
JOIN payment
		ON payment.kpay = expenselast.kpay 
AND ISNULL(payment.idtreasurer,0) <> ISNULL(%<payment.idtreasurer>%,0)
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN018','2','I','payment','S','S','S','N','N',{ts '2009-03-02 15:49:46.117'},'SARA','L'' istituto cassiere relativo al mandato di pagamento  n° %<payment.npay>% / %<payment.ypay>% non è coerente con quello dei mandati delle ritenute.','N','(
[SELECT COUNT(*)
FROM expense
JOIN expenselast ELPR
		ON ELPR.idexp = expense.idexp
		AND ELPR.kpay = %<payment.kpay>%
JOIN expense EXPAUTOM
		ON EXPAUTOM.idpayment = expense.idexp
JOIN expenselast ELAUTOM
		ON ELAUTOM.idexp = EXPAUTOM.idexp
JOIN payment
		ON payment.kpay = ELAUTOM.kpay 
AND ISNULL(payment.idtreasurer,0) <> ISNULL(%<payment.idtreasurer>%,0)
]{I} = 0
)
AND
(
[SELECT COUNT(*)
FROM expense
JOIN expenselast ELPR
		ON ELPR.idexp = expense.idexp
		AND ELPR.kpay = %<payment.kpay>%
JOIN income INCAUTOM
		ON INCAUTOM.idpayment = expense.idexp
JOIN incomelast ILAUTOM
		ON ILAUTOM.idinc = INCAUTOM.idinc
JOIN proceeds
		ON proceeds.kpro = ILAUTOM.kpro
AND ISNULL(proceeds.idtreasurer,0) <> ISNULL(%<payment.idtreasurer>%,0)
]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR004','1','I','payment','S','S','S','N','N',{ts '2009-04-01 09:45:07.370'},'SA','L''utente non è abilitato a immettere la data di stampa del mandato','S','%<payment.printdate>% IS NULL
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''man_ufficiale''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM006','1','I','payment','S','S','S','N','N',{ts '2009-01-20 12:29:32.180'},'SA','errore di programma','N','[SELECT COUNT(*) FROM 
expenselast
WHERE expenselast.kpay = %<payment.kpay>%]{I} > 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM007','1','I','payment','S','S','S','N','N',{ts '2009-01-20 12:29:42.587'},'SA','Attenzione esistono MANDATI e/o REVERSALI VUOTE !  Contattare il servizio assistenza.','N','[SELECT COUNT(*) FROM payment
WHERE
	(SELECT COUNT(*)
	FROM expenselast
	WHERE expenselast.kpay = payment.kpay) = 0
		AND payment.ypay=%<sys_esercizio>%]{I} = 0
AND
[SELECT COUNT(*) FROM proceeds
WHERE
	(SELECT COUNT(*)
	FROM incomelast
	WHERE incomelast.kpro = proceeds.kpro) = 0
		AND proceeds.ypro=%<sys_esercizio>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR028','1','U','payment','S','S','S','N','N',{ts '2009-11-04 12:13:16.490'},'SARA','Per alcuni movimenti del mandato di pagamento n. %<payment.npay>% è stata scelta una modalità di pagamento non consentita.
','N','isnull(%<payment.kpaymenttransmission>%,0) = isnull(&<payment.kpaymenttransmission>&,0)

OR 

%<payment.kpaymenttransmission>% is null

OR

[(SELECT COUNT(*) FROM paymethod 
JOIN expenselast
	ON paymethod.idpaymethod = expenselast.idpaymethod
JOIN payment_bank
	ON payment_bank.idpay = expenselast.idpay
	AND payment_bank.kpay = expenselast.kpay
WHERE  expenselast.kpay = %<payment.kpay>%
	AND  ISNULL(committeecode,'''') <>''''
	AND  (payment_bank.amount<minamount OR payment_bank.amount>maxamount))]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BOLLE002','2','U','payment','S','S','S','N','N',{ts '2013-07-03 12:55:04.610'},'assistenza','Il mandato n° %<payment.npay>% /%<payment.ypay>% contiene pagamenti associati a provvisori che presentano ancora un residuo. Le regolarizzazioni parziali sono ammesse esclusivamente se inviate congiuntamente alla tesoreria .
','N','(%<payment.kpaymenttransmission>% IS NULL)
OR
(
(ISNULL(%<payment.kpaymenttransmission>%,0) = 
ISNULL(&<payment.kpaymenttransmission>&,0))
)
OR
[(SELECT COUNT(*)
from billview
JOIN expenselast 
	ON expenselast.nbill = billview.nbill
	and billview.ybill = %<sys_esercizio>%
	and billview.billkind =''D''
JOIN payment
	 ON expenselast.kpay = %<payment.kpay>%
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE ISNULL(treasurer.idbank,'''')  = ''02008''
AND    (ISNULL(billview.total,0) - ISNULL(billview.covered,0)) >0 )]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','U','payment','S','S','S','N','N',{ts '2007-12-13 14:23:26.997'},'NINO','Il mandato n. %<payment.npay>% / %<payment.ypay>% non può essere modificato. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA005','1','U','payment','S','S','S','N','N',{ts '2007-12-04 14:33:29.327'},'SARA','Attenzione, la liquidazione IVA del periodo che comprende la data di registrazione %<adate>% è stata effettuata. Se si procede bisognerà effettuare una nuova liquidazione','S','(
	ISNULL(
		[SELECT deferredexpensephase
		FROM config
		WHERE ayear = %<sys_esercizio>%]{C}
	,''X'') <> ''T''
)
OR
(
	ISNULL(%<payment.kpaymenttransmission>%,0) = ISNULL(&<payment.kpaymenttransmission>&,0)
)
OR (%<payment.kpaymenttransmission>% IS NOT NULL)
OR
(
	[SELECT COUNT(*) FROM expenseinvoice
	JOIN expense
		ON expenseinvoice.idexp = expense.idexp
	JOIN expenselast on expense.idexp= expenselast.idexp
	JOIN payment
		ON payment.kpay = expenselast.kpay
	WHERE payment.kpaymenttransmission = &<payment.kpaymenttransmission>&]{I} = 0
)
OR
(
	[SELECT COUNT(*) FROM invoicedeferred
	JOIN expenseinvoice
	ON invoicedeferred.idinvkind = expenseinvoice.idinvkind
	AND invoicedeferred.yinv = expenseinvoice.yinv
	AND invoicedeferred.ninv = expenseinvoice.ninv
	JOIN expense
		ON expense.idexp = expenseinvoice.idexp
	JOIN expenselast on expense.idexp= expenselast.idexp
	JOIN payment
		ON payment.kpay = expenselast.kpay
	WHERE payment.kpaymenttransmission = &<payment.kpaymenttransmission>&]{I} = 0
)
OR
(
	[SELECT COUNT(*)
	FROM invoice
	JOIN invoicedeferred
		ON invoice.idinvkind = invoicedeferred.idinvkind
		AND invoice.yinv = invoicedeferred.yinv
		AND invoice.ninv = invoicedeferred.ninv
	JOIN expenseinvoice
		ON invoice.idinvkind = expenseinvoice.idinvkind
		AND invoice.yinv = expenseinvoice.yinv
		AND invoice.ninv = expenseinvoice.ninv
	JOIN expense
		ON expenseinvoice.idexp = expense.idexp
	JOIN expenselast on expense.idexp= expenselast.idexp
	JOIN payment
		ON payment.kpay = expenselast.kpay
	WHERE payment.kpaymenttransmission = &<payment.kpaymenttransmission>&
		AND invoice.flagdeferred = ''S'']{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA005','2','U','payment','S','S','S','N','N',{ts '2007-12-04 14:37:00.890'},'SARA','Attenzione, la liquidazione IVA del periodo che comprende la data di registrazione %<adate>% è stata effettuata. Se si procede bisognerà effettuare una nuova liquidazione','S','(
	ISNULL(
		[SELECT deferredexpensephase
		FROM config
		WHERE ayear = %<sys_esercizio>%]{C}
	,''X'') <> ''T''
)
OR
(
	ISNULL(%<payment.kpaymenttransmission>%,0) = ISNULL(&<payment.kpaymenttransmission>&,0)
)
OR (%<payment.kpaymenttransmission>% IS NOT NULL)
OR
(
	[SELECT COUNT(*) FROM expensevar
	JOIN expense
	ON expense.idexp = expensevar.idexp
	JOIN expenselast on expenselast.idexp=expense.idexp
	JOIN payment
		ON payment.kpay = expenselast.kpay
	WHERE payment.kpaymenttransmission = &<payment.kpaymenttransmission>&
		AND expensevar.idinvkind IS NOT NULL]{I} = 0
)
OR
(
	[SELECT COUNT(*) FROM invoicedeferred
	JOIN expensevar
		ON invoicedeferred.idinvkind = expensevar.idinvkind
		AND invoicedeferred.yinv = expensevar.yinv
		AND invoicedeferred.ninv = expensevar.ninv
	JOIN expense
		ON expense.idexp = expensevar.idexp
	JOIN expenselast on expenselast.idexp=expense.idexp
	JOIN payment
		ON payment.kpay = expenselast.kpay
	WHERE payment.kpaymenttransmission = &<payment.kpaymenttransmission>&]{I} = 0
)
OR
(
	[SELECT COUNT(*)
	FROM invoice
	JOIN invoicedeferred
		ON invoice.idinvkind = invoicedeferred.idinvkind
		AND invoice.yinv = invoicedeferred.yinv
		AND invoice.ninv = invoicedeferred.ninv
	JOIN expensevar
		ON invoice.idinvkind = expensevar.idinvkind
		AND invoice.yinv = expensevar.yinv
		AND invoice.ninv = expensevar.ninv
	JOIN expense
		ON expense.idexp = expensevar.idexp
	JOIN expenselast on expenselast.idexp=expense.idexp
	JOIN payment
		ON payment.kpay = expenselast.kpay
	WHERE payment.kpaymenttransmission = &<payment.kpaymenttransmission>&
		AND invoice.flagdeferred = ''S'']{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA005','3','U','payment','S','S','S','N','N',{ts '2007-12-04 14:54:56.187'},'SARA','Attenzione, la liquidazione IVA del periodo che comprende la data di registrazione %<adate>% è stata effettuata. Se si procede bisognerà effettuare una nuova liquidazione','N','(
	ISNULL(
		[SELECT deferredexpensephase
		FROM config
		WHERE ayear = %<sys_esercizio>%]{C}
	,''X'') <> ''T''
)
OR
(
	ISNULL(%<payment.kpaymenttransmission>%,0) = ISNULL(&<payment.kpaymenttransmission>&,0)
)
OR (%<payment.kpaymenttransmission>% IS NULL)
OR
(
	[SELECT COUNT(*) FROM expenseinvoice
	JOIN expense
	ON expenseinvoice.idexp = expense.idexp
	JOIN expenselast on expense.idexp= expenselast.idexp
	JOIN payment
		ON payment.kpay = expenselast.kpay
	WHERE payment.kpaymenttransmission = %<payment.kpaymenttransmission>%]{I} = 0
)
OR
(
	[SELECT COUNT(*) FROM invoicedeferred
	JOIN expenseinvoice
		ON invoicedeferred.idinvkind = expenseinvoice.idinvkind
		AND invoicedeferred.yinv = expenseinvoice.yinv
		AND invoicedeferred.ninv = expenseinvoice.ninv
	JOIN expense
		ON expense.idexp = expenseinvoice.idexp
	JOIN expenselast on expense.idexp= expenselast.idexp
	JOIN payment
		ON payment.kpay = expenselast.kpay
	WHERE payment.kpaymenttransmission = %<payment.kpaymenttransmission>%]{I} = 0
)
OR
(
	[SELECT COUNT(*)
	FROM invoice
	JOIN invoicedeferred
		ON invoice.idinvkind = invoicedeferred.idinvkind
		AND invoice.yinv = invoicedeferred.yinv
		AND invoice.ninv = invoicedeferred.ninv
	JOIN expenseinvoice
		ON invoice.idinvkind = expenseinvoice.idinvkind
		AND invoice.yinv = expenseinvoice.yinv
		AND invoice.ninv = expenseinvoice.ninv
	JOIN expense
		ON expenseinvoice.idexp = expense.idexp
	JOIN expenselast on expense.idexp= expenselast.idexp
	JOIN payment
		ON payment.kpay = expenselast.kpay
	WHERE payment.kpaymenttransmission = %<payment.kpaymenttransmission>%
		AND invoice.flagdeferred = ''S'']{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA005','4','U','payment','S','S','S','N','N',{ts '2007-12-06 09:11:10.250'},'SARA','Attenzione, la liquidazione IVA del periodo che comprende la data di registrazione %<adate>% è stata effettuata. Se si procede bisognerà effettuare una nuova liquidazione','N','(
	ISNULL(
		[SELECT deferredexpensephase
		FROM config
		WHERE ayear = %<sys_esercizio>%]{C}
	,''X'') <> ''T''
)
OR
(
	ISNULL(%<payment.kpaymenttransmission>%,0) = ISNULL(&<payment.kpaymenttransmission>&,0)
)
OR (%<payment.kpaymenttransmission>% IS NULL)
OR
(
	[SELECT COUNT(*) FROM expensevar
	JOIN expense
		ON expense.idexp = expensevar.idexp
	JOIN expenselast on expenselast.idexp=expense.idexp
	JOIN payment
		ON payment.kpay = expenselast.kpay
	WHERE payment.kpaymenttransmission = %<payment.kpaymenttransmission>%
		AND expensevar.idinvkind IS NOT NULL]{I} = 0
)
OR
(
	[SELECT COUNT(*) FROM invoicedeferred
	JOIN expensevar
		ON invoicedeferred.idinvkind = expensevar.idinvkind
		AND invoicedeferred.yinv = expensevar.yinv
		AND invoicedeferred.ninv = expensevar.ninv
	JOIN expense
		ON expense.idexp = expensevar.idexp
	JOIN expenselast on expenselast.idexp=expense.idexp
	JOIN payment
		ON payment.kpay = expenselast.kpay
	WHERE payment.kpaymenttransmission = %<payment.kpaymenttransmission>%]{I} = 0
)
OR
(
	[SELECT COUNT(*)
	FROM invoice
	JOIN invoicedeferred
		ON invoice.idinvkind = invoicedeferred.idinvkind
		AND invoice.yinv = invoicedeferred.yinv
		AND invoice.ninv = invoicedeferred.ninv
	JOIN expensevar
		ON invoice.idinvkind = expensevar.idinvkind
		AND invoice.yinv = expensevar.yinv
		AND invoice.ninv = expensevar.ninv
	JOIN expense
	ON expense.idexp = expensevar.idexp
	JOIN expenselast on expenselast.idexp=expense.idexp
	JOIN payment
	ON payment.kpay = expenselast.kpay
	WHERE payment.kpaymenttransmission = %<payment.kpaymenttransmission>%
	AND invoice.flagdeferred = ''S'']{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM005','1','U','payment','S','S','S','N','N',{ts '2007-12-05 09:26:18.090'},'SARA','Il mandato di pagamento %<ypay>%  %<npay>% non può essere modificato in quanto è stato trasmesso al tesoriere','S','%<payment.kpaymenttransmission>% IS NULL
or
&<payment.kpaymenttransmission>& IS NULL
or
(
(%<payment.annulmentdate>% is null 
	and &<payment.annulmentdate>& is null)
or
(%<payment.annulmentdate>% = &<payment.annulmentdate>&)
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM017','1','U','payment','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','La data contabile del mandato %<npay>%/%<ypay>% deve rispettare la cronologia dei documenti esistenti ','N','--post
%<payment.adate>% >= 
(ISNULL([SELECT MAX(adate) FROM payment 
WHERE npay < %<payment.npay>% 
AND ypay = %<payment.ypay>%]{D},
%<payment.adate>%))
AND
%<payment.adate>% <= 
(ISNULL([SELECT MIN(adate) FROM payment 
WHERE npay > %<payment.npay>% 
AND ypay = %<payment.ypay>%]{D},
%<payment.adate>%))')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM037','1','U','payment','S','S','S','N','N',{ts '2007-12-05 14:49:28.013'},'SARA','Non è possibile inserire un mandato nell''elenco di trasmissione se non è stato imputato il codice SIOPE.','S','ISNULL([(SELECT SUM(expensesorted.amount) FROM expensesorted 
		JOIN expense ON expense.idexp = expensesorted.idexp 
		JOIN expenselast ON expenselast.idexp=expense.idexp
		join sorting
			ON expensesorted.idsor = sorting.idsor
		join sortingkind
			on sortingkind.idsorkind = sorting.idsorkind
	WHERE ''SIOPE''= sortingkind.codesorkind 
	AND expenselast.kpay = %<payment.kpay>% 
	AND expensesorted.ayear= %<payment.ypay>% 
	)]{V} 
	,0) =
ISNULL( [(SELECT SUM(curramount) from expensetotal 
		JOIN expense ON expensetotal.idexp = expense.idexp 
		JOIN expenselast ON expenselast.idexp=expense.idexp
	WHERE expenselast.kpay = %<payment.kpay>% 
		AND expensetotal.ayear= %<payment.ypay>% 
)]{V}
	,0)
OR 
isnull(%<payment.kpaymenttransmission>%,0) = isnull(&<payment.kpaymenttransmission>&,0)
OR 
%<payment.kpaymenttransmission>% is null
OR
%<payment.ypay>% > 2006
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM052','1','U','payment','S','S','S','N','N',{ts '2008-03-11 10:46:38.907'},'SARA','Non è possibile inserire un mandato nell''elenco di trasmissione se non è stato imputato il codice SIOPE.','N','ISNULL([(SELECT SUM(expensesorted.amount) FROM expensesorted 
	JOIN expense ON expense.idexp = expensesorted.idexp 
	JOIN expenselast ON expenselast.idexp=expense.idexp
		join sorting
			ON expensesorted.idsor = sorting.idsor
		join sortingkind
			on sortingkind.idsorkind = sorting.idsorkind
	WHERE ''07U_SIOPE''= sortingkind.codesorkind 
		AND expenselast.kpay = %<payment.kpay>% 
		AND expensesorted.ayear= %<payment.ypay>% 
	)]{V} 
	,0) =
ISNULL( [(SELECT SUM(curramount) from expensetotal 
		JOIN expense ON expensetotal.idexp = expense.idexp 
		JOIN expenselast ON expenselast.idexp=expense.idexp
	WHERE expenselast.kpay = %<payment.kpay>% 
		AND expensetotal.ayear= %<payment.ypay>% 
)]{V}
	,0)
OR 
isnull(%<payment.kpaymenttransmission>%,0) = isnull(&<payment.kpaymenttransmission>&,0)
OR 
%<payment.kpaymenttransmission>% is null
OR
%<payment.ypay>% < ISNULL([SELECT isnull(start,1900) FROM sortingkind
	WHERE codesorkind = ''07U_SIOPE'']{I},3000)

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM069','1','U','payment','S','S','S','N','N',{ts '2010-07-20 12:57:29.000'},'SA','Non è stata inviata la richiesta di autorizzazione a EQUITALIA per un pagamento inserito nel mandato n. %<payment.npay>% / %<payment.ypay>% ','N','%<payment.kpaymenttransmission>% is null

OR
/* 
 non devono esistere pagamenti non autorizzati il cui la somma dei pagamenti trasmessi 
	per quel creditore sia superiore a 10''000 
*/
[SELECT count(*) from expense E
 join expenselast EL on EL.idexp=E.idexp
 join registry R on R.idreg=E.idreg
 join expensetotal ET on ET.idexp = E.idexp 
 where EL.kpay = %<payment.kpay>% 
  and  not exists(SELECT * from authpaymentexpense APE 
	          JOIN authpayment AP on AP.idauthpayment=APE.idauthpayment
                    	where APE.idexp = E.idexp 
		and AP.idauthstatus>1)  
 and curramount  >10000
 and R.authorization_free=''N''
]{I}=0

OR

EXISTS(SELECT * from paydisposition where kpay = %<payment.kpay>% )

OR

[SELECT  count(*)  FROM expenselast EL
 WHERE EL.kpay =%<payment.kpay>%
 AND substring(EL.iban,1,2) = ''IT''  ]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM069','2','U','payment','S','S','S','N','N',{ts '2010-07-20 12:57:36.920'},'SA','Non è stata ancora raggiunta la data di tacita autorizzazione di EQUITALIA per un pagamento incluso  nel mandato n. %<payment.npay>% / %<payment.ypay>% ','N','%<payment.kpaymenttransmission>% is null

OR

/* sezione ottimizzata */

[SELECT count(*) from expenselast EL
 join authpaymentexpense APE on EL.idexp=APE.idexp 
  where EL.kpay = %<payment.kpay>% 
]{I}=0

OR

/* esistono righe ove data non superata */

[SELECT count(*) from expenselast EL
 join authpaymentexpense APE on EL.idexp=APE.idexp 
 join authpayment AP on APE.idauthpayment = AP.idauthpayment 
  where EL.kpay = %<payment.kpay>% 
	and AP.idauthstatus=2
--	and AP.authorize_date < %<sys_datacontabile>%
	and AP.authorize_date > %<sys_datacontabile>%
]{I}=0

OR

[SELECT  count(*)  FROM expenselast EL
 WHERE EL.kpay =%<payment.kpay>%
 AND substring(EL.iban,1,2) = ''IT''  ]{I} = 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM069','3','U','payment','S','S','S','N','N',{ts '2010-07-20 12:57:43.907'},'SA','Non è possibile effettuare il pagamento a causa di restrizioni dovute ad un avviso di inadempimento ricevuto da EQUITALIA per un pagamento incluso  nel mandato n. %<payment.npay>% / %<payment.ypay>% ','N','%<payment.kpaymenttransmission>% is null

OR

/* sezione ottimizzata */

[SELECT count(*) from expenselast EL
 join authpaymentexpense APE on EL.idexp=APE.idexp 
  where EL.kpay = %<payment.kpay>% 
]{I}=0

OR

/* esistono righe ove data non superata */

[SELECT count(*) from expenselast EL
 join authpaymentexpense APE on EL.idexp=APE.idexp 
 join authpayment AP on APE.idauthpayment = AP.idauthpayment 
  where EL.kpay = %<payment.kpay>% 
	and AP.idauthstatus=3
--	and AP.authorize_date < %<sys_datacontabile>%
	and AP.authorize_date > %<sys_datacontabile>%
	and AP.attach_amount >
    ISNULL( (SELECT SUM(curramount) from incometotal IT 
		join income I on I.idinc=IT.idinc
		join authpaymentexpense APE2 on APE2.idexp=I.idpayment				
		where APE2.idauthpayment = AP.idauthpayment 
			AND I.autokind=6
     ),0)
]{I}=0


OR

[SELECT  count(*)  FROM expenselast EL
 WHERE EL.kpay =%<payment.kpay>%
 AND substring(EL.iban,1,2) = ''IT''  ]{I} = 0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM069','4','U','payment','S','S','S','N','N',{ts '2010-07-20 12:57:50.267'},'SA','Non è possibile effettuare il pagamento a causa di restrizioni dovute ad un atto di pignoramento ricevuto da EQUITALIA per un pagamento incluso  nel mandato n. %<payment.npay>% / %<payment.ypay>% ','N','%<payment.kpaymenttransmission>% is null

OR

/* sezione ottimizzata */

[SELECT count(*) from expenselast EL
 join authpaymentexpense APE on EL.idexp=APE.idexp 
  where EL.kpay = %<payment.kpay>% 
]{I}=0

OR

/* esistono righe ove data non superata */

[SELECT count(*) from expenselast EL
 join authpaymentexpense APE on EL.idexp=APE.idexp 
 join authpayment AP on APE.idauthpayment = AP.idauthpayment 
  where EL.kpay = %<payment.kpay>% 
	and AP.idauthstatus=4
	and AP.attach_amount >
    ISNULL( (SELECT SUM(curramount) from incometotal IT 
		join income I on I.idinc=IT.idinc
		join authpaymentexpense APE2 on APE2.idexp=I.idpayment				
		where APE2.idauthpayment = AP.idauthpayment 
			AND I.autokind=6
     ),0)


]{I}=0

OR

[SELECT  count(*)  FROM expenselast EL
 WHERE EL.kpay =%<payment.kpay>%
 AND substring(EL.iban,1,2) = ''IT''  ]{I} = 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM069','6','U','payment','S','S','S','N','N',{ts '2010-07-20 12:57:55.000'},'SA','Il mandato n. %<payment.npay>% / %<payment.ypay>%  contiene un pagamento verso un creditore con una pratica EQUITALIA in sospeso. E'' necessario includere anch''esso in una pratica EQUITALIA, oppure attendere la risoluzione della pratica in sospeso.','N','%<payment.kpaymenttransmission>% is null

or 

not exists ( SELECT * from expenselast EL
	join expense E ON EL.idexp=E.idexp
	join authpaymentview AP on AP.idreg=E.idreg
	left outer join authpaymentexpense APE on APE.idexp=EL.idexp
	where EL.kpay=%<payment.kpay>%
	and (	AP.idauthstatus=1
--		OR (AP.idauthstatus=2 and AP.authorize_date < %<sys_datacontabile>%)
		OR (AP.idauthstatus=2 and AP.authorize_date > %<sys_datacontabile>%)
--		OR (AP.idauthstatus=3 and AP.authorize_date < %<sys_datacontabile>% and AP.payable_amount=0)
		OR (AP.idauthstatus=3 and AP.authorize_date > %<sys_datacontabile>% and AP.payable_amount>0)
		OR (AP.idauthstatus=4 and  AP.payable_amount>0)
	      )
	and APE.idexp is null
         )


OR

[SELECT  count(*)  FROM expenselast EL
 WHERE EL.kpay =%<payment.kpay>%
 AND substring(EL.iban,1,2) = ''IT''  ]{I} = 0

	')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM069','7','U','payment','S','S','S','N','N',{ts '2010-11-05 13:42:35.417'},'sa','Il mandato n. %<payment.npay>% / %<payment.ypay>%  contiene disposizioni di pagamento che, eventualmente cumulate con altre presenti nello stesso elenco di trasmissione, superano la soglia dei 10000 euro relativamente a qualche percipiente. In questo caso non è possibile procedere. E'' necessario rimuovere tali disposizioni ed effettuare la richiesta a Equitalia','N','%<payment.kpaymenttransmission>% is null

or 

not exists (
 SELECT SUM(PDD.amount),PDD.cf  from paydispositiondetail PDD
          join paydisposition PD on PD.idpaydisposition=PDD.idpaydisposition
          join payment P on P.kpay= PD.kpay
	where P.kpaymenttransmission=%<payment.kpaymenttransmission>%
         group by PDD.cf
         having sum(PDD.amount)>10000     
    )

	')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM072','1','U','payment','S','S','S','N','N',{ts '2008-09-03 15:03:42.640'},'SARA','Potrebbe essere necessaria l''autorizzazione EQUITALIA per alcuni pagamenti inseriti nel mandato n. %<payment.npay>% / %<payment.ypay>% , il cui importo totale supera i 10.000 euro.','N','%<payment.kpaymenttransmission>% is null

OR
/* 
 non devono esistere pagamenti non autorizzati il cui la somma dei pagamenti trasmessi 
	per quel creditore sia superiore a 10''000 
*/
[SELECT count(*) from expense E
 join expenselast EL on EL.idexp=E.idexp
 join registry R on R.idreg=E.idreg
 where EL.kpay = %<payment.kpay>% 
  and  not exists(SELECT * from authpaymentexpense APE 
	          JOIN authpayment AP on AP.idauthpayment=APE.idauthpayment
                    	where APE.idexp = E.idexp 
		and AP.idauthstatus>1)  
 and (select sum(curramount) from expensetotal ET 
	join expense EE on ET.idexp=EE.idexp 
	join expenselast ELL on ELL.idexp= EE.idexp
	join payment  P on ELL.kpay=P.kpay 
	where P.kpaymenttransmission= %<payment.kpaymenttransmission>% 
	and EE.idreg=E.idreg	
       )      >10000
 and R.authorization_free=''N''
]{I}=0

OR

EXISTS(SELECT * from paydisposition where kpay = %<payment.kpay>% )

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM072','2','U','payment','S','S','S','N','N',{ts '2008-09-17 10:09:09.717'},'SARA','Non è stata inviata la richiesta di autorizzazione a EQUITALIA per un pagamento inserito nel mandato n. %<payment.npay>% / %<payment.ypay>% ','N','%<payment.kpaymenttransmission>% is null

OR
/* 
In uno stesso elenco non ci possono essere "alcuni" pagamenti 
 limitati ed altri no verso lo stesso creditore
*/

[SELECT count(*) from expenselast EL
 join authpaymentexpense APE on EL.idexp=APE.idexp 
  where EL.kpay = %<payment.kpay>% 
]{I}=0

OR

[SELECT count(*) from expenselast EL
  join expense E on E.idexp=EL.idexp
 join authpaymentexpense APE on EL.idexp=APE.idexp 
  where EL.kpay = %<payment.kpay>% 
    and exists 
      (select * from expenselast EL2 
           join expense E2 on E2.idexp=EL2.idexp
           join payment P2 on EL2.kpay=P2.kpay
           left outer join authpaymentexpense APE2 on APE2.idexp=EL2.idexp
           where E2.idreg=E.idreg
		and APE2.idexp is null
		and P2.kpaymenttransmission=%<payment.kpaymenttransmission>% 
      )
]{I}=0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM075','1','U','payment','S','S','S','N','N',{ts '2008-11-10 15:11:27.780'},'SARA','Non si può modificare il cassiere se il Mandato di Pagamento è stato trasmesso in banca.','S','(
ISNULL(%<payment.idtreasurer>%,'''')=ISNULL(&<payment.idtreasurer>&,'''') 
)

OR

( %<payment.kpaymenttransmission>% IS NULL )
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM077','1','U','payment','S','S','S','N','N',{ts '2009-02-26 13:40:20.937'},'ASSISTENZA','Si stanno trasmettendo oltre il 12 gennaio  pagamenti di prestazioni di competenza dell''esercizio precedente.','N','/*
[SELECT count(*) 
from expensetax 
join  expenselast 
	on expensetax.idexp = expenselast.idexp
join service on expenselast .idser = service.idser
where expenselast.kpay = %<payment.kpay>% 
and isnull(expensetax.ayear, %<sys_esercizio>%) < %<sys_esercizio>%
and upper(service.module) in (''COCOCO'',''DIPENDENTE'')
]{I}  = 0
OR*/
[SELECT count(*) 
from expensetax 
join  expenselast 
	on expensetax.idexp = expenselast.idexp
	and expenselast.kpay = %<payment.kpay>% 
where isnull(expensetax.ayear, %<sys_esercizio>%) <%<sys_esercizio>%]{I}  = 0
OR
[SELECT ISNULL(transmissiondate, 
	 CONVERT(datetime,''12-01-'' + CONVERT(varchar(4),%<sys_esercizio>%),105) ) 
from paymenttransmission 
where paymenttransmission .kpaymenttransmission 
= %<payment.kpaymenttransmission>% 
]{D} <= CONVERT(datetime,''12-01-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)
OR 
isnull(%<payment.kpaymenttransmission>%,0) = isnull(&<payment.kpaymenttransmission>&,0)
OR 
%<payment.kpaymenttransmission>% is null  ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM077','2','U','payment','S','S','S','N','N',{ts '2009-02-26 12:14:44.733'},'ASSISTENZA','Si stanno trasmettendo pagamenti di prestazioni relative a un esercizio successivo a quello corrente.','N','/*[SELECT count(*) 
from expensetax 
join  expenselast 
	on expensetax.idexp = expenselast.idexp
join service on expenselast .idser = service.idser
where expenselast.kpay = %<payment.kpay>% 
and isnull(expensetax.ayear, %<sys_esercizio>%) < %<sys_esercizio>%
and upper(service.module) in (''COCOCO'',''DIPENDENTE'')
]{I}  = 0
OR*/
[SELECT count(*) 
from expensetax 
join  expenselast 
	on expensetax.idexp = expenselast.idexp
where expenselast.kpay = %<payment.kpay>% 
and isnull(expensetax.ayear, %<sys_esercizio>%) >%<sys_esercizio>%]{I}  = 0
OR 
isnull(%<payment.kpaymenttransmission>%,0) = isnull(&<payment.kpaymenttransmission>&,0)
OR 
%<payment.kpaymenttransmission>% is null  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM077','3','U','payment','S','S','S','N','N',{ts '2009-02-26 13:05:50.907'},'ASSISTENZA','Si stanno trasmettendo entro il 12 gennaio  pagamenti di compensi a dipendenti: in mancanza di un''esplicita assegnazione dell''anno di competenza essi saranno considerati dell''esercizio precedente. Se si vuole modificare l''anno di competenza, selezionare il pagamento e modificare l''anno di competenza delle ritenute visualizzate nella scheda Prestazioni. ','N','[SELECT count(*) 
from expensetax 
join  expenselast 
	on expensetax.idexp = expenselast.idexp
join service on expenselast .idser = service.idser
where expenselast.kpay = %<payment.kpay>% 
and isnull(expensetax.ayear, %<sys_esercizio>%) < %<sys_esercizio>%
and upper(service.module)  = ''DIPENDENTE''
]{I}  = 0
OR
[SELECT ISNULL(transmissiondate, 
	 CONVERT(datetime,''12-01-'' + CONVERT(varchar(4),%<sys_esercizio>%),105) ) 
from paymenttransmission 
where paymenttransmission .kpaymenttransmission 
= %<payment.kpaymenttransmission>% 
]{D} > CONVERT(datetime,''12-01-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)
OR 
isnull(%<payment.kpaymenttransmission>%,0) = isnull(&<payment.kpaymenttransmission>&,0)
OR 
%<payment.kpaymenttransmission>% is null  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM078','1','U','payment','S','S','S','N','N',{ts '2009-02-27 13:49:06.577'},'ASSISTENZA','Il mandato %<payment.npay>%/%<payment.ypay>% contiene un pagamento  su impegno residuo  di una prestazione di lavoro autonomo con ritenute. E'' importante controllare che le aliquote applicate siano aggiornate.','N','[SELECT count(*) 
from expensetax 
join  expenselastview 
	on expensetax.idexp = expenselastview.idexp
join service on expenselastview.idser = service.idser
where expenselastview.kpay = %<payment.kpay>% 
and upper(service.module) in (''OCCASIONALE'',''PROFESSIONALE'')
and isnull(expenselastview.flagarrear,''C'') = ''R''
]{I}  = 0
OR
[SELECT ISNULL(transmissiondate, 
	 CONVERT(datetime,''01-01-'' + CONVERT(varchar(4),%<sys_esercizio>%),105) ) 
from paymenttransmission 
where paymenttransmission .kpaymenttransmission 
= %<payment.kpaymenttransmission>% 
]{D} < CONVERT(datetime,''01-01-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)
OR 
isnull(%<payment.kpaymenttransmission>%,0) = isnull(&<payment.kpaymenttransmission>&,0)
OR 
%<payment.kpaymenttransmission>% is null  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM078','2','U','payment','S','S','S','N','N',{ts '2009-02-27 13:48:53.203'},'ASSISTENZA','Il mandato %<payment.npay>% / %<payment.ypay>% contiene un pagamento su impegno residuo  di una prestazione di lavoro parasubordinato o dipendente che prevede l''applicazione delle ritenute: è importante controllare che le aliquote siano aggiornate perchè lo si sta trasmettendo dopo il 12 gennaio.','N','[SELECT count(*) 
from expensetax 
join  expenselastview 
	on expensetax.idexp = expenselastview.idexp
join service on expenselastview .idser = service.idser
where expenselastview.kpay = %<payment.kpay>% 
and upper(service.module) in (''COCOCO'',''DIPENDENTE'',''MISSIONE'')
and isnull(expenselastview.flagarrear,''C'') = ''R''
]{I}  = 0
OR
[SELECT ISNULL(transmissiondate, 
	 CONVERT(datetime,''12-01-'' + CONVERT(varchar(4),%<sys_esercizio>%),105) ) 
from paymenttransmission 
where paymenttransmission .kpaymenttransmission 
= %<payment.kpaymenttransmission>% 
]{D} <= CONVERT(datetime,''12-01-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)
OR 
isnull(%<payment.kpaymenttransmission>%,0) = isnull(&<payment.kpaymenttransmission>&,0)
OR 
%<payment.kpaymenttransmission>% is null  ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM081','1','U','payment','S','S','S','N','N',{ts '2009-10-16 10:05:53.340'},'SA','Il mandato di pagamento %<payment.npay>%/%<payment.ypay>% non può essere rimosso perchè contiene movimenti di spesa aventi ritenute già raccolte dall''amministrazione.','N','&<payment.kpaymenttransmission>& IS NULL

OR (%<payment.kpaymenttransmission>% IS NOT NULL)

OR

[(SELECT COUNT(*)
FROM expense
JOIN expenselast
	ON expense.idexp = expenselast.idexp
JOIN expensetax
	ON expense.idexp = expensetax.idexp
WHERE expenselast.kpay  = %<payment.kpay>%
AND expensetax.idunifiedtax IS NOT NULL
)]{I} = 0

OR
datediff( day,
[select transmissiondate from paymenttransmission where
	kpaymenttransmission=
	 &<payment.kpaymenttransmission>&]{D} , getdate())<=5

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM081','2','U','payment','S','S','S','N','N',{ts '2009-10-16 10:05:38.033'},'SA','Il mandato di pagamento %<payment.npay>%/%<payment.ypay>% non può essere rimosso perchè contiene movimenti di spesa aventi correzioni di ritenute già raccolte dall''amministrazione.','N','&<payment.kpaymenttransmission>& IS NULL

OR (%<payment.kpaymenttransmission>% IS NOT NULL)

OR

[(SELECT COUNT(*)
FROM expense
JOIN expenselast
	ON expense.idexp = expenselast.idexp
JOIN expensetaxcorrige
	ON expense.idexp = expensetaxcorrige.idexp
WHERE expenselast.kpay  = %<payment.kpay>%
AND expensetaxcorrige.idunifiedtaxcorrige IS NOT NULL
)]{I} = 0


OR
datediff( day,
[select transmissiondate from paymenttransmission where
	kpaymenttransmission=
	 &<payment.kpaymenttransmission>&]{D} , getdate())<=5
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM081','3','U','payment','S','S','S','N','N',{ts '2009-10-16 09:59:32.337'},'SA','Il mandato di pagamento %<payment.npay>%/%<payment.ypay>% non può essere aggiunto perchè le ritenute  dello stesso sono state già raccolte dall''amministrazione.','N','ISNULL(%<payment.kpaymenttransmission>%,0) = ISNULL(&<payment.kpaymenttransmission>&,0)

OR (%<payment.kpaymenttransmission>% IS NULL)

OR

[(SELECT COUNT(*)
FROM expense
JOIN expenselast
	ON expense.idexp = expenselast.idexp
JOIN expensetax
	ON expense.idexp = expensetax.idexp
WHERE expenselast.kpay  = %<payment.kpay>%
AND expensetax.idunifiedtax IS NOT NULL
)]{I} = 0

OR
datediff( day,
[select transmissiondate from paymenttransmission where
	kpaymenttransmission=
	 %<payment.kpaymenttransmission>%]{D} , getdate())<=5

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM081','4','U','payment','S','S','S','N','N',{ts '2009-10-16 10:01:41.687'},'SA','Il mandato di pagamento %<payment.npay>%/%<payment.ypay>% non può essere rimosso perchè le ritenute dello stesso sono state già raccolte dall''amministrazione.','N','ISNULL(%<payment.kpaymenttransmission>%,0) = ISNULL(&<payment.kpaymenttransmission>&,0)

OR (%<payment.kpaymenttransmission>% IS  NULL)

OR

[(SELECT COUNT(*)
FROM expense
JOIN expenselast
	ON expense.idexp = expenselast.idexp
JOIN expensetaxcorrige
	ON expense.idexp = expensetaxcorrige.idexp
WHERE expenselast.kpay  = %<payment.kpay>%
AND expensetaxcorrige.idunifiedtaxcorrige IS NOT NULL
)]{I} = 0

OR
datediff( day,
[select transmissiondate from paymenttransmission where
	kpaymenttransmission=
	 %<payment.kpaymenttransmission>%]{D} , getdate())<=5


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM082','1','U','payment','S','S','S','N','N',{ts '2009-09-14 09:40:29.670'},'SA','Il mandato di pagamento %<payment.npay>%/%<payment.ypay>% non può essere inserito in una distinta avente data inferiore a quella del mandato.','N','(%<payment.kpaymenttransmission>% IS NULL)

OR

ISNULL(%<payment.kpaymenttransmission>%,0) = ISNULL(&<payment.kpaymenttransmission>&,0)


OR

%<payment.adate>% <=
[(select transmissiondate
from paymenttransmission
where kpaymenttransmission= %<payment.kpaymenttransmission>%)]{D}

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM084','1','U','payment','S','S','S','N','N',{ts '2009-10-16 09:27:04.227'},'SA','Non si può rimuovere dalla distinta il Mandato %<payment.npay>%/%<payment.ypay>%, in quanto contiene movimenti finanziari che contabilizzano dettagli fattura a iva differita.','S','
(
ISNULL(%<payment.kpaymenttransmission>%,0) = ISNULL(&<payment.kpaymenttransmission>&,0)
)

OR (%<payment.kpaymenttransmission>% IS NOT NULL)

OR

[SELECT COUNT(*) FROM expenselast 
JOIN expenseinvoice
	ON expenseinvoice.idexp= expenselast.idexp
JOIN invoice
	ON invoice.idinvkind = expenseinvoice.idinvkind
	AND invoice.yinv = expenseinvoice.yinv
	AND invoice.ninv = expenseinvoice.ninv
WHERE expenselast.kpay = %<payment.kpay>%	
	AND invoice.flagdeferred = ''S'']{I} = 0

OR 
datediff( day,
[select transmissiondate from paymenttransmission where
	kpaymenttransmission=
	 &<payment.kpaymenttransmission>&]{D} , getdate())<=5


')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM084','2','U','payment','S','S','S','N','N',{ts '2009-10-16 09:26:03.223'},'SA','Non si può aggiungere  alla distinta il Mandato %<payment.npay>%/%<payment.ypay>%, in quanto contiene movimenti finanziari che contabilizzano dettagli fattura a iva differita.','S','
(
ISNULL(%<payment.kpaymenttransmission>%,0) = ISNULL(&<payment.kpaymenttransmission>&,0)
)

OR (%<payment.kpaymenttransmission>% IS  NULL)

OR

[SELECT COUNT(*) FROM expenselast 
JOIN expenseinvoice
	ON expenseinvoice.idexp= expenselast.idexp
JOIN invoice
	ON invoice.idinvkind = expenseinvoice.idinvkind
	AND invoice.yinv = expenseinvoice.yinv
	AND invoice.ninv = expenseinvoice.ninv
WHERE expenselast.kpay = %<payment.kpay>%	
	AND invoice.flagdeferred = ''S'']{I} = 0

OR 

datediff( day,
[select transmissiondate from paymenttransmission where
	kpaymenttransmission=
	 %<payment.kpaymenttransmission>%]{D} , getdate())<=5


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM085','1','U','payment','S','S','S','N','N',{ts '2011-06-14 11:45:25.750'},'sa','Non è possibile  modificare un elenco di trasmissione di data diversa da quella della sua creazione.','N','%<payment.kpaymenttransmission>% is null

OR

&<payment.kpaymenttransmission>&   is  NOT null

OR
datediff( day,
[select transmissiondate from paymenttransmission where
  kpaymenttransmission=%<payment.kpaymenttransmission>%]{D}
,getdate())<=5

or
[(select count(*) from expenselast EL
  where  EL.kpay= %<payment.kpay>%
   and (EL.flag & 1) = 0
)]{I}=0

      ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM085','2','U','payment','S','S','S','N','N',{ts '2011-06-14 11:45:36.530'},'sa','Non è possibile rimuovere un mandato da un elenco di trasmissione in data differente da quella della sua creazione.','N','%<payment.kpaymenttransmission>% is NOT null

OR

&<payment.kpaymenttransmission>&   is  null

OR
datediff( day,
[select transmissiondate from paymenttransmission where
  kpaymenttransmission=&<payment.kpaymenttransmission>&]{D}
,getdate())<=5

or
[(select count(*) from expenselast EL
  where  EL.kpay= &<payment.kpay>&
   and (EL.flag & 1) = 0
)]{I}=0

      ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM095','1','U','payment','S','S','S','N','N',{ts '2011-07-27 12:41:52.250'},'sara','Il mandato %<payment.npay>% del %<payment.ypay>% deve avere lo stesso tesoriere della relativa distinta di trasmissione.','N','%<payment.kpaymenttransmission>% IS NULL
OR
(
	ISNULL(%<payment.idtreasurer>%,0)  = 
	[SELECT idtreasurer FROM paymenttransmission 
	WHERE  paymenttransmission.kpaymenttransmission =  
	ISNULL(%<payment.kpaymenttransmission>%,0) ]{I}
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','1','U','payment','S','S','S','N','N',{ts '2011-09-19 12:45:24.640'},'sara','Non è possibile rimuovere il mandato %<payment.npay>% del %<payment.ypay>% dalla distinta di trasmissione in quanto sono state già trasmesse al tesoriere variazioni dello stesso.','S','-- non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM payment  
JOIN treasurer 
	ON payment.idtreasurer = treasurer.idtreasurer
WHERE payment.kpay =  %<payment.kpay>%
]{C},''N'' )= ''N'')
)
OR
(
ISNULL(%<payment.kpaymenttransmission>%,0) = ISNULL(&<payment.kpaymenttransmission>&,0)
)
OR (%<payment.kpaymenttransmission>% IS NOT NULL)
OR
[SELECT COUNT(*) FROM expensevar 
JOIN expenselast
ON expenselast.idexp = expensevar.idexp
WHERE expenselast.kpay = %<payment.kpay>%	
AND expensevar.kpaymenttransmission IS NOT NULL
	AND ISNULL(expensevar.autokind,0) IN (10,11,22)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM097','1','U','payment','S','S','S','N','N',{ts '2011-09-22 16:50:13.300'},'sa','Non è possibile rimuovere il Mandato N. %<payment.npay>%  dalla distinta, perchè uno o più movimenti è stato esitato.','S','
isnull(%<payment.kpaymenttransmission>% ,0) = isnull(&<payment.kpaymenttransmission>&  ,0) 

OR

[SELECT count(*) 
from banktransaction 
where kpay = %<payment.kpay>% ]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM100','1','U','payment','S','S','S','N','N',{ts '2012-03-02 14:46:21.187'},'sa','Non è possibile effettuare pagamenti di tipo "Sportello" con importo superiore ai 1000 Euro per beneficiario.','N','%<payment.kpaymenttransmission>% is null
or
not exists (
 select sum(PDD.amount),PDD.cf  from paydispositiondetail PDD
          join paydisposition PD on PD.idpaydisposition=PDD.idpaydisposition
	join payment P on P.kpay= PD.kpay
    	where P.kpaymenttransmission=%<payment.kpaymenttransmission>% 
	and PDD.iban is null
         group by PDD.cf
         having sum(PDD.amount)>1000     
    )')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM100','2','U','payment','S','S','S','N','N',{ts '2012-03-02 15:15:49.733'},'sa','Non è possibile effettuare pagamenti di tipo "Sportello" con importo superiore ai 1000 Euro per beneficiario.','N','%<payment.kpaymenttransmission>% is null
OR
[select count(*) from registry R  where
 (select sum(curramount) from expensetotal ET 
	join expense EE on ET.idexp=EE.idexp 
	join expenselast ELL on ELL.idexp= EE.idexp
	join paymethod PM on PM.idpaymethod = ELL.idpaymethod
	join payment  P on ELL.kpay=P.kpay  
	where P.kpaymenttransmission= %<payment.kpaymenttransmission>% 
	and EE.idreg=R.idreg	
	and (( PM.flag & 128) <> 0) 
) >1000
and R.idregistryclass <> ''24''
]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM113','1','U','payment','S','S','S','N','N',{ts '2013-03-19 09:53:07.400'},'sa','Non può essere salvato un Mandato di pagamento senza Cassiere.','S','%<payment.idtreasurer>% is not null
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM116','1','U','payment','S','S','S','N','N',{ts '2013-07-02 11:05:58.937'},'assistenza','Non è possibile effettuare il pagamento a causa di un Fermo amministrivo emesso a carico del percipiente di un pagamento incluso nel mandato n. %<payment.npay>% / %<payment.ypay>%. 
','N','%<payment.kpaymenttransmission>% is null

OR
(
[SELECT count(*) from expenselast EL
join expense E
   on EL.idexp = E.idexp	
join registry R
  on R.idreg = E.idreg
 join administrativeblock AB
 on AB.cf = R.cf
where EL.kpay = %<payment.kpay>% 
	and AB.cf is not null
	and AB.start <= %<sys_datacontabile>%
	and isnull(AB.stop,{d ''2079-12-31''}) >= %<sys_datacontabile>%
]{I}=0

AND

[SELECT count(*) from expenselast EL
join expense E
   on EL.idexp = E.idexp	
join registry R
  on R.idreg = E.idreg
 join administrativeblock AB
 on AB.p_iva = R.p_iva
where EL.kpay = %<payment.kpay>% 
	and AB.p_iva is not null
	and AB.start <= %<sys_datacontabile>%
	and isnull(AB.stop,{d ''2079-12-31''}) >= %<sys_datacontabile>%

]{I}=0

)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM116','2','U','payment','S','S','S','N','N',{ts '2013-07-02 11:06:27.680'},'assistenza','Il mandato n. %<payment.npay>% / %<payment.ypay>%  contiene disposizioni di pagamento a carico di un percipiente soggetto a Fermo Amministrativo.','N','%<payment.kpaymenttransmission>% is null

OR
(
[SELECT count(*) from paydispositiondetail PDD
join paydisposition PD 
	on PD.idpaydisposition=PDD.idpaydisposition
 join payment P 
	on P.kpay= PD.kpay
 join administrativeblock AB
	 on AB.cf = PDD.cf
where  P.kpaymenttransmission=%<payment.kpaymenttransmission>%
	and AB.cf is not null
	and AB.start <= %<sys_datacontabile>%
	and isnull(AB.stop,{d ''2079-12-31''}) >= %<sys_datacontabile>%

]{I}=0

AND

[SELECT count(*) from paydispositiondetail PDD
join paydisposition PD 
	on PD.idpaydisposition=PDD.idpaydisposition
 join payment P 
	on P.kpay= PD.kpay
 join administrativeblock AB
	 on AB.p_iva = PDD.p_iva
where  P.kpaymenttransmission=%<payment.kpaymenttransmission>%
	and AB.p_iva is not null
	and AB.start <= %<sys_datacontabile>%
	and isnull(AB.stop,{d ''2079-12-31''}) >= %<sys_datacontabile>%

]{I}=0

)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS016','1','U','payment','S','S','S','N','N',{ts '2008-02-05 13:20:31.983'},'NINO','PARAS016 - Dopo il 12 gennaio non è più possibile trasmettere in banca il pagamento di un cedolino relativo all''anno precedente; occorre trasferire il cedolino all''esercizio successivo.','N','[(select count(*) 
from expenselink
join expensepayroll 
	on expensepayroll.idexp = expenselink.idparent
join expenselast 
	on expenselast.idexp = expenselink.idchild 
	and expenselast.kpay = %<payment.kpay>%
join paymenttransmission 
	on paymenttransmission.kpaymenttransmission = %<payment.kpaymenttransmission>%
join payroll 
	on payroll.idpayroll = expensepayroll.idpayroll
where payroll.fiscalyear = %<esercizio>%-1
AND payroll.feegross <> 0
and paymenttransmission.transmissiondate > dateadd(yy, %<esercizio>%-2000, {d ''2000-01-12''})
)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN003','1','U','payment','S','S','S','N','N',{ts '2008-06-12 13:10:45.817'},'NINO','Operazione Impossibile, la liquidazione della ritenuta  %<taxpayview.taxkind>% di un movimento di spesa incluso nel mandato è stata già liquidata ','S','-- Flag = ''M''
-- Se la data contabile non cambia tutto ok ma se cambia sia nell''intervallo della vecchia sia in quello della nuova non ci devono essere state liquidazioni
[SELECT taxvaliditykind FROM config WHERE ayear = %<sys_esercizio>%]{I} <> 3
OR
(&<payment.adate>& = %<payment.adate>%)
OR
([SELECT COUNT(*)
		FROM expensetax 
			JOIN expenselast ON expenselast.idexp=expensetax.idexp
		WHERE ((expensetax.ytaxpay is not null) or (expensetax.idinc is not null))
			AND expenselast.kpay = %<payment.kpay>%
]{I} +
[SELECT COUNT(*)
		FROM expensetaxcorrige
			JOIN expenselast ON expenselast.idexp=expensetaxcorrige.idexp
		WHERE ((expensetaxcorrige.ytaxpay is not null)
			or (expensetaxcorrige.linkedidinc is not null)
			or (expensetaxcorrige.linkedidexp is not null))
			AND expenselast.kpay = %<payment.kpay>%
]{I}
 = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN003','2','U','payment','S','S','S','N','N',{ts '2008-06-12 13:14:04.973'},'NINO','Operazione Impossibile, la liquidazione della ritenuta del periodo che comprende la data di registrazione %<adate>% è stata effettuata','N','--post
-- Flag = ''T''
-- Controllo quando inserisco o rimuovo dall''elenco di trasmissione un mandato
(
	[SELECT COUNT(*)
		FROM expensetax 
		JOIN expenselast 
			ON expenselast.idexp= expensetax.idexp
		WHERE ((expensetax.ytaxpay is not null)
			or (expensetax.idinc is not null))
			AND expenselast.kpay = %<payment.kpay>%
	]{I}
+
	[SELECT COUNT(*)
		FROM expensetaxcorrige
		JOIN expenselast
			ON expenselast.idexp=expensetaxcorrige.idexp
		WHERE ((expensetaxcorrige.ytaxpay is not null)
			or (expensetaxcorrige.linkedidinc is not null)
			or (expensetaxcorrige.linkedidexp is not null))
			AND expenselast.kpay = %<payment.kpay>%
]{I}
= 0
)
OR
(ISNULL(&<payment.kpaymenttransmission>&,0) = ISNULL(%<payment.kpaymenttransmission>%,0))
OR
([SELECT taxvaliditykind FROM config WHERE ayear = %<sys_esercizio>%]{I} <> 5)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN003','3','U','payment','S','S','S','N','N',{ts '2008-06-12 13:18:48.393'},'NINO','Operazione Impossibile, la liquidazione della ritenuta %<taxpayview.taxkind>% del periodo che comprende la data di registrazione %<adate>% è stata effettuata','S','-- Flag = ''S''
[SELECT taxvaliditykind FROM config WHERE ayear = %<sys_esercizio>%]{I} <> 4
OR
ISNULL(&<payment.printdate>&,{d ''1900-01-01''}) = ISNULL(%<payment.printdate>%,{d ''1900-01-01''})
OR
(
	[SELECT COUNT(*)
		FROM expensetax 
		JOIN expenselast 
			ON expenselast.idexp= expensetax.idexp
		WHERE ((expensetax.ytaxpay is not null)
			or (expensetax.idinc is not null))
			AND expenselast.kpay = %<payment.kpay>%
	]{I}
+
	[SELECT COUNT(*)
		FROM expensetaxcorrige
		JOIN expenselast
			ON expenselast.idexp=expensetaxcorrige.idexp
		WHERE ((expensetaxcorrige.ytaxpay is not null)
			or (expensetaxcorrige.linkedidinc is not null)
			or (expensetaxcorrige.linkedidexp is not null))
			AND expenselast.kpay = %<payment.kpay>%]{I}
= 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN018','1','U','payment','S','S','S','N','N',{ts '2009-03-02 15:05:08.973'},'SARA','L'' istituto cassiere relativo al mandato di pagamento  n° %<payment.npay>% / %<payment.ypay>% non è coerente con quello del mandato del pagamento principale.','N','[SELECT COUNT(*)
FROM expense
JOIN expenselast ELPR
		ON ELPR.idexp = expense.idexp
		AND ELPR.kpay = %<payment.kpay>%
JOIN expenselast
		ON expenselast.idexp = expense.idpayment
JOIN payment
		ON payment.kpay = expenselast.kpay 
AND ISNULL(payment.idtreasurer,0) <> ISNULL(%<payment.idtreasurer>%,0)
]{I} = 0
OR
%<payment.idtreasurer>% = &<payment.idtreasurer>&
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN018','2','U','payment','S','S','S','N','N',{ts '2009-03-02 15:49:59.007'},'SARA','L'' istituto cassiere relativo al mandato di pagamento  n° %<payment.npay>% / %<payment.ypay>% non è coerente con quello dei mandati delle ritenute.','N','(
(
[SELECT COUNT(*)
FROM expense
JOIN expenselast ELPR
		ON ELPR.idexp = expense.idexp
		AND ELPR.kpay = %<payment.kpay>%
JOIN expense EXPAUTOM
		ON EXPAUTOM.idpayment = expense.idexp
JOIN expenselast ELAUTOM
		ON ELAUTOM.idexp = EXPAUTOM.idexp
JOIN payment
		ON payment.kpay = ELAUTOM.kpay 
AND ISNULL(payment.idtreasurer,0) <> ISNULL(%<payment.idtreasurer>%,0)
]{I} = 0
)
AND
(
[SELECT COUNT(*)
FROM expense
JOIN expenselast ELPR
		ON ELPR.idexp = expense.idexp
		AND ELPR.kpay = %<payment.kpay>%
JOIN income INCAUTOM
	ON INCAUTOM.idpayment = expense.idexp
JOIN incomelast ILAUTOM
		ON ILAUTOM.idinc = INCAUTOM.idinc
JOIN proceeds
		ON proceeds.kpro = ILAUTOM.kpro
AND ISNULL(proceeds.idtreasurer,0) <> ISNULL(%<payment.idtreasurer>%,0)
]{I} = 0
)
)
OR
%<payment.idtreasurer>% = &<payment.idtreasurer>&
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR004','1','U','payment','S','S','S','N','N',{ts '2008-04-18 14:27:52.000'},'NINO','L''utente non è abilitato a modificare la data di stampa del mandato','S','ISNULL(&<payment.printdate>&, {d ''1900-01-01''}) = ISNULL(%<payment.printdate>%, {d ''1900-01-01''})
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''man_ufficiale''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM007','1','U','payment','S','S','S','N','N',{ts '2009-01-20 12:29:45.650'},'SA','Attenzione esistono MANDATI e/o REVERSALI VUOTE !  Contattare il servizio assistenza.','N','[SELECT COUNT(*) FROM payment
WHERE
	(SELECT COUNT(*) 
	FROM expenselast 
	WHERE expenselast.kpay = payment.kpay) = 0
	AND payment.ypay=%<sys_esercizio>%]{I} = 0
AND
[SELECT COUNT(*) FROM proceeds
WHERE
	(SELECT COUNT(*) 
	FROM incomelast 
	WHERE incomelast.kpro = proceeds.kpro) = 0
		AND proceeds.ypro=%<sys_esercizio>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','D','paymenttransmission','S','S','S','N','N',{ts '2007-12-13 14:23:36.450'},'NINO','La distinta di trasmissione dei mandati n. %<paymenttransmission.npaymenttransmission>% / %<paymenttransmission.ypaymenttransmission>% non può essere cancellata. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM085','1','D','paymenttransmission','S','S','S','N','N',{ts '2011-01-11 11:36:14.173'},'assistenza','Non è possibile  cancellare un elenco di trasmissione di data diversa da quella della sua creazione a meno che non sia vuoto.','S','datediff( day,
%<paymenttransmission.transmissiondate>%, getdate())<=5

OR 
[select count(*) from payment where kpaymenttransmission=
	%<paymenttransmission.kpaymenttransmission>%]{I}=0

or
[(select count(*) from expenselast EL
  join payment P ON P.kpay=EL.kpay
  where P.kpaymenttransmission = 
    %<paymenttransmission.kpaymenttransmission>%
   and (EL.flag & 1) = 0
)]{I}=0

      
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','paymenttransmission','S','S','S','N','N',{ts '2007-12-05 15:46:09.857'},'SARA','L''elenco di trasmissione dei mandati di pagamento %<ypaymenttransmission>%  %<npaymenttransmission>% non può essere cancellato in quanto esistono mandati di pagamento che lo referenziano.','S','[(SELECT count(*) 
from payment 
where kpaymenttransmission = %<paymenttransmission.kpaymenttransmission>% 
)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','paymenttransmission','S','S','S','N','N',{ts '2011-09-16 16:24:17.920'},'sara','L''elenco di trasmissione dei mandati di pagamento %<ypaymenttransmission>%  %<npaymenttransmission>% non può essere cancellato in quanto esistono variazioni di mandati di pagamento che lo referenziano.','S','[(SELECT count(*) 
from expensevar 
where kpaymenttransmission = %<paymenttransmission.kpaymenttransmission>% 
)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','I','paymenttransmission','S','S','S','N','N',{ts '2007-12-13 14:23:41.497'},'NINO','La distinta di trasmissione dei mandati n. %<paymenttransmission.npaymenttransmission>% / %<paymenttransmission.ypaymenttransmission>% non può essere inserita. Esercizio  %<esercizio>% chiuso','N','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM085','1','I','paymenttransmission','S','S','S','N','N',{ts '2011-01-11 11:36:20.957'},'assistenza','Non è possibile creare un elenco di trasmissione di data diversa da quella attuale.','N','datediff( day,
	%<paymenttransmission.transmissiondate>%,
	  getdate())<=5

or
[(select count(*) from expenselast EL
  join payment P ON P.kpay=EL.kpay
  where P.kpaymenttransmission = 
    %<paymenttransmission.kpaymenttransmission>%
   and (EL.flag & 1) = 0
)]{I}=0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','U','paymenttransmission','S','S','S','N','N',{ts '2007-12-13 14:23:47.997'},'NINO','La distinta di trasmissione dei mandati n. %<paymenttransmission.npaymenttransmission>% / %<paymenttransmission.ypaymenttransmission>% non può essere  modificata. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA005','1','U','paymenttransmission','S','S','S','N','N',{ts '2007-12-06 11:34:05.593'},'SARA','Attenzione, la liquidazione IVA del periodo che comprende la data di registrazione %<paymenttransmission.transmissiondate>% è stata effettuata. Se si procede bisognerà effettuare una nuova liquidazione','S','(
	ISNULL(
		[SELECT deferredexpensephase
		FROM config
		WHERE ayear = %<sys_esercizio>%]{C}
	,''X'') <> ''T''
)
OR
(
	ISNULL(%<paymenttransmission.transmissiondate>%,{D ''1900-01-01''}) = ISNULL(&<paymenttransmission.transmissiondate>&,{D ''1900-01-01''})
)
OR
(
	[SELECT COUNT(*) FROM expenseinvoice
	JOIN expense     ON expenseinvoice.idexp = expense.idexp
	JOIN expenselast on expenselast.idexp=expense.idexp
	JOIN payment
	ON payment.kpay = expenselast.kpay
	WHERE payment.kpaymenttransmission = %<paymenttransmission.kpaymenttransmission>%]{I} = 0
)
OR
(
	[SELECT COUNT(*) FROM invoicedeferred
	JOIN expenseinvoice
	ON invoicedeferred.idinvkind = expenseinvoice.idinvkind
	AND invoicedeferred.yinv = expenseinvoice.yinv
	AND invoicedeferred.ninv = expenseinvoice.ninv
	JOIN expense
	ON expense.idexp = expenseinvoice.idexp
	JOIN expenselast on expenselast.idexp=expense.idexp
	JOIN payment
	ON payment.kpay = expenselast.kpay
	WHERE payment.kpaymenttransmission = %<paymenttransmission.kpaymenttransmission>%]{I} = 0
)
OR
(
	[SELECT COUNT(*)
	FROM invoice
	JOIN invoicedeferred
		ON invoice.idinvkind = invoicedeferred.idinvkind
		AND invoice.yinv = invoicedeferred.yinv
		AND invoice.ninv = invoicedeferred.ninv
	JOIN expenseinvoice
		ON invoice.idinvkind = expenseinvoice.idinvkind
		AND invoice.yinv = expenseinvoice.yinv
		AND invoice.ninv = expenseinvoice.ninv
	JOIN expense
		ON expense.idexp = expenseinvoice.idexp
	JOIN expenselast on expenselast.idexp=expense.idexp
	JOIN payment
		ON payment.kpay = expenselast.kpay
	WHERE payment.kpaymenttransmission = %<paymenttransmission.kpaymenttransmission>%
	AND invoice.flagdeferred = ''S'']{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA005','2','U','paymenttransmission','S','S','S','N','N',{ts '2007-12-05 09:14:54.607'},'SARA','Attenzione, la liquidazione IVA del periodo che comprende la data di registrazione %<paymenttransmission.transmissiondate>% è stata effettuata. Se si procede bisognerà effettuare una nuova liquidazione','S','(
	ISNULL(
		[SELECT deferredexpensephase
		FROM config
		WHERE ayear = %<sys_esercizio>%]{C}
	,''X'') <> ''T''
)
OR
(
	ISNULL(%<paymenttransmission.transmissiondate>%,{D ''1900-01-01''}) = ISNULL(&<paymenttransmission.transmissiondate>&,{D ''1900-01-01''})
)
OR
(
	[SELECT COUNT(*) FROM expensevar
	JOIN expense
	ON expense.idexp = expensevar.idexp
	JOIN expenselast on expenselast.idexp=expense.idexp
	JOIN payment
	ON payment.kpay = expenselast.kpay
	WHERE payment.kpaymenttransmission = %<paymenttransmission.kpaymenttransmission>%
	AND expensevar.idinvkind IS NOT NULL]{I} = 0
)
OR
(
	[SELECT COUNT(*) FROM invoicedeferred
	JOIN expensevar
	ON invoicedeferred.idinvkind = expensevar.idinvkind
	AND invoicedeferred.yinv = expensevar.yinv
	AND invoicedeferred.ninv = expensevar.ninv
	JOIN expense
	ON expensevar.idexp = expense.idexp
	JOIN expenselast on expenselast.idexp=expense.idexp
	JOIN payment
	ON payment.kpay = expenselast.kpay
	WHERE payment.kpaymenttransmission = %<paymenttransmission.kpaymenttransmission>%]{I} = 0
)
OR
(
	[SELECT COUNT(*)
	FROM invoice
	JOIN invoicedeferred
		ON invoice.idinvkind = invoicedeferred.idinvkind
		AND invoice.yinv = invoicedeferred.yinv
		AND invoice.ninv = invoicedeferred.ninv
	JOIN expensevar
		ON invoice.idinvkind = expensevar.idinvkind
		AND invoice.yinv = expensevar.yinv
		AND invoice.ninv = expensevar.ninv
	JOIN expense
		ON expense.idexp = expensevar.idexp
	JOIN expenselast on expenselast.idexp=expense.idexp
	JOIN payment
		ON payment.kpay = expenselast.kpay
	WHERE payment.kpaymenttransmission = %<paymenttransmission.kpaymenttransmission>%
	AND invoice.flagdeferred = ''S'']{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM077','1','U','paymenttransmission','S','S','S','N','N',{ts '2009-02-26 13:06:56.687'},'ASSISTENZA','Si stanno trasmettendo oltre il 12 gennaio  pagamenti di prestazioni di competenza dell''esercizio precedente.','N','/*
[SELECT count(*) 
from expensetax 
join  expenselast 
	on expensetax.idexp = expenselast.idexp
join service on expenselast .idser = service.idser
where expenselast.kpay = %<payment.kpay>% 
and isnull(expensetax.ayear, %<sys_esercizio>%) < %<sys_esercizio>%
and upper(service.module) in (''COCOCO'',''DIPENDENTE'')
]{I}  = 0
OR*/
[SELECT count(*) 
from expensetax 
join  expenselast 
	on expensetax.idexp = expenselast.idexp
join payment 
	on payment .kpay = expenselast.kpay
	and payment.kpaymenttransmission = %<paymenttransmission.kpaymenttransmission>%
where 
	isnull(expensetax.ayear, %<sys_esercizio>%) <%<sys_esercizio>%]{I}  = 0
OR
(%<paymenttransmission.transmissiondate>%
<= CONVERT(datetime,''12-01-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)
)
OR 
%<paymenttransmission.transmissiondate>% = 
&<paymenttransmission.transmissiondate>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM077','2','U','paymenttransmission','S','S','S','N','N',{ts '2009-02-26 14:00:56.530'},'ASSISTENZA','Si stanno trasmettendo pagamenti di prestazioni relative a un esercizio successivo a quello corrente.','N','/*[SELECT count(*) 
from expensetax 
join  expenselast 
	on expensetax.idexp = expenselast.idexp
join service on expenselast .idser = service.idser
where expenselast.kpay = %<payment.kpay>% 
and isnull(expensetax.ayear, %<sys_esercizio>%) < %<sys_esercizio>%
and upper(service.module) in (''COCOCO'',''DIPENDENTE'')
]{I}  = 0
OR*/
[SELECT count(*) 
from expensetax 
join  expenselast 
	on expensetax.idexp = expenselast.idexp
join payment 
	on payment .kpay = expenselast.kpay
	and payment.kpaymenttransmission = %<paymenttransmission.kpaymenttransmission>%
where 
	isnull(expensetax.ayear, %<sys_esercizio>%) >%<sys_esercizio>%]{I}  = 0
OR 
%<paymenttransmission.transmissiondate>% = 
&<paymenttransmission.transmissiondate>&')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM077','3','U','paymenttransmission','S','S','S','N','N',{ts '2009-02-26 13:21:22.297'},'ASSISTENZA','Si stanno trasmettendo entro il 12 gennaio  pagamenti di compensi a dipendenti: in mancanza di un''esplicita assegnazione dell''anno di competenza essi saranno considerati dell''esercizio precedente. Se si vuole modificare l''anno di competenza, selezionare il pagamento e modificare l''anno di competenza delle ritenute visualizzate nella scheda Prestazioni. ','N','[SELECT count(*) 
from expensetax 
join  expenselast 
	on expensetax.idexp = expenselast.idexp
join service on expenselast .idser = service.idser
join payment 
	on payment .kpay = expenselast.kpay
	and payment.kpaymenttransmission = %<paymenttransmission.kpaymenttransmission>%
where isnull(expensetax.ayear, %<sys_esercizio>%) < %<sys_esercizio>%
and upper(service.module)  = ''DIPENDENTE''
]{I}  = 0
OR
(
(%<paymenttransmission.transmissiondate>%
> CONVERT(datetime,''12-01-'' + CONVERT(varchar(4),%<sys_esercizio>%),105))
)
OR 
%<paymenttransmission.transmissiondate>% = 
&<paymenttransmission.transmissiondate>&
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM078','1','U','paymenttransmission','S','S','S','N','N',{ts '2009-02-27 13:48:30.657'},'ASSISTENZA','Si stanno trasmettendo  pagamenti di prestazioni di lavoro autonomo su impegni residui. E'' importante controllare che le aliquote applicate siano aggiornate.','N','[SELECT count(*) 
from expensetax 
join  expenselastview 
	on expensetax.idexp = expenselastview.idexp
join payment on payment.kpay = expenselastview.kpay
join service on expenselastview.idser = service.idser
where payment.kpaymenttransmission = 
%<paymenttransmission.kpaymenttransmission>%
and upper(service.module) in (''OCCASIONALE'',''PROFESSIONALE'')
and isnull(expenselastview.flagarrear,''C'') = ''R''
]{I}  = 0
OR
(%<paymenttransmission.transmissiondate>%
< CONVERT(datetime,''01-01-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)
)
OR 
%<paymenttransmission.transmissiondate>% = 
&<paymenttransmission.transmissiondate>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM078','2','U','paymenttransmission','S','S','S','N','N',{ts '2009-02-27 13:48:39.530'},'ASSISTENZA','Si stanno trasmettendo oltre il 12 gennaio  pagamenti di prestazioni di lavoro parasubordinato o dipendente su impegni residui. E'' importante controllare che le aliquote applicate siano aggiornate.','N','[SELECT count(*) 
from expensetax 
join  expenselastview 
	on expensetax.idexp = expenselastview.idexp
join payment on payment.kpay = expenselastview.kpay
join service on expenselastview.idser = service.idser
where payment.kpaymenttransmission = 
%<paymenttransmission.kpaymenttransmission>%
and upper(service.module) in (''COCOCO'', ''DIPENDENTE'',''MISSIONE'')
and isnull(expenselastview.flagarrear,''C'') = ''R''
]{I}  = 0
OR
(%<paymenttransmission.transmissiondate>%
<= CONVERT(datetime,''12-01-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)
)
OR 
%<paymenttransmission.transmissiondate>% = 
&<paymenttransmission.transmissiondate>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM085','1','U','paymenttransmission','S','S','S','N','N',{ts '2011-01-11 11:36:26.847'},'assistenza','Non è possibile  modificare un elenco di trasmissione di data diversa da quella della sua creazione.','N','&<paymenttransmission.transmissiondate>& is null
or
datediff( day,%<paymenttransmission.transmissiondate>%,getdate())<=5
or
[(select count(*) from expenselast EL
  join payment P ON P.kpay=EL.kpay
  where P.kpaymenttransmission = 
    %<paymenttransmission.kpaymenttransmission>%
   and (EL.flag & 1) = 0
)]{I}=0

      ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM095','1','U','paymenttransmission','S','S','S','N','N',{ts '2012-11-09 15:25:55.017'},'sa','Non è possibile cambiare il Cassiere di una distinta contenente documenti.','S','&<paymenttransmission.idtreasurer>& = %<paymenttransmission.idtreasurer>%

OR

(
ISNULL([SELECT COUNT(*) FROM payment where kpaymenttransmission = %<paymenttransmission.kpaymenttransmission>% ]{I},0)
+
ISNULL([SELECT COUNT(*) FROM expensevar where kpaymenttransmission = %<paymenttransmission.kpaymenttransmission>% ]{I},0)
)
= 0



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS016','1','U','paymenttransmission','S','S','S','N','N',{ts '2008-02-05 13:21:04.110'},'NINO','PARAS016 - La trasmissione in banca del pagamento di un cedolino relativo all''anno precedente deve avvenire entro il 12 gennaio.','S','[(select count(*) 
from expenselink
join expensepayroll 
	on expensepayroll.idexp = expenselink.idparent
join expenselast 
	on expenselast.idexp = expenselink.idchild 
join payment
	on payment.kpay = expenselast.kpay
	and payment.kpaymenttransmission = %<paymenttransmission.kpaymenttransmission>%
join payroll 
	on payroll.idpayroll = expensepayroll.idpayroll
where payroll.fiscalyear = %<esercizio>%-1
and payroll.feegross <> 0
and %<paymenttransmission.transmissiondate>% > dateadd(yy, %<esercizio>%-2000, {d ''2000-01-12''})
)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','paymethod','S','S','S','N','N',{ts '2008-02-22 14:42:24.243'},'SARA','Cancellazione Impossibile! Esistono movimenti di spesa collegati alla modalità di pagamento %<description>%','S','[execute count_table_field ''expenselast'',''idpaymethod'',
%<paymethod.idpaymethod>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','paymethod','S','S','S','N','N',{ts '2007-08-31 20:17:55.717'},'NINO','Cancellazione Impossibile! Esistono dati di anagrafica collegati alla modalità di pagamento %<description>%','S','[(SELECT count(*) 
from registrypaymethod 
where idpaymethod = %<paymethod.idpaymethod>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','paymethod','S','S','S','N','N',{ts '2007-09-01 08:53:54.627'},'NINO','Modalità di pagamento %<idpaymethod>% già esistente','S','[SELECT count(*) 
from paymethod 
where idpaymethod = %<paymethod.idpaymethod>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','paymethod','S','S','S','N','N',{ts '2007-09-01 08:54:07.360'},'NINO','Descrizione della modalità di pagamento già esistente','S','[SELECT count(*) 
from paymethod 
where description = %<paymethod.description>%]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','paymethod','S','S','S','N','N',{ts '2007-09-01 08:54:16.530'},'NINO','Descrizione della modalità di pagamento già esistente','S','[(SELECT count(*) 
from paymethod 
where idpaymethod <> %<paymethod.idpaymethod>% 
and description = %<paymethod.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS005','1','D','payroll','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'''SA''','Il cedolino %<payroll.idpayroll>% non può essere rimosso in quanto è stato già erogato','S','%<payroll.disbursementdate>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS022','1','I','payroll','S','S','S','N','N',{ts '2008-06-11 13:50:02.547'},'SARA','L''anno di fine del cedolino deve essere o uguale a quello di inizio, oppure se è successivo deve essere uguale all''esercizio corrente.','N','datepart(year,%<payroll.start>%) = datepart(year,%<payroll.stop>%)
or
datepart(year,%<payroll.stop>%)< = %<sys_esercizio>%
or
%<payroll.flagbalance>%=''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS027','1','I','payroll','S','S','S','N','N',{ts '2008-10-17 13:11:53.717'},'NINO','L''aliquota marginale selezionata è troppo bassa rispetto ai redditi presentati dal percipiente.','N','[SELECT isnull(applybrackets,''S'') from 	parasubcontractyear
	where idcon=%<payroll.idcon>%
		and ayear=%<payroll.fiscalyear>%
]{C}=''S''
OR
[SELECT isnull(highertax,0) from 	parasubcontractyear
	where idcon=%<payroll.idcon>%
		and ayear=%<payroll.fiscalyear>%
]{N}=0
OR
[SELECT isnull(highertax,0) from 	parasubcontractyear
	where idcon=%<payroll.idcon>%
		and ayear=%<payroll.fiscalyear>%
]{N} >=
isnull([select max(TB.employrate) from 
 parasubcontract P 	
	join  servicetax ST on ST.idser= P.idser
	join tax T on T.taxcode=ST.taxcode
	join taxratestart TS on TS.taxcode=T.taxcode
	join taxratebracket TB on TB.taxcode=T.taxcode

where 
	P.idcon=%<payroll.idcon>% and
 	T.taxkind=1 and T.geoappliance is null and
	TS.start <= CONVERT(datetime,''31-12-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)   and	
	isnull(TB.minamount,0)<=
		ISNULL([SELECT SUM(feegross)  from payroll
			where idcon=%<payroll.idcon>%
			and fiscalyear=%<payroll.fiscalyear>%
			and flagbalance=''N''
		]{V} ,0)
		+
	 	    ISNULL([(SELECT SUM(taxablegross) from exhibitedcud 
			where idcon=%<payroll.idcon>%
			and fiscalyear=%<payroll.fiscalyear>%)]{V}
			,0)
		
	and TB.idtaxratestart= 
		(SELECT max(idtaxratestart) from taxratestart  TS2 where
			TS2.taxcode=TS.taxcode and
			TS2.start <= CONVERT(datetime,''31-12-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)  
		)
	]{N}
,0)

OR
%<payroll.flagcomputed>%=''N''


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS005','1','U','payroll','S','S','S','N','N',{ts '2008-01-25 11:37:55.420'},'SA','Il cedolino %<payroll.idpayroll>% non può essere modificato in quanto è stato già erogato','S','&<payroll.disbursementdate>& IS NULL
OR
(%<payroll.fiscalyear>% = &<payroll.fiscalyear>&
AND ISNULL(%<payroll.netfee>%,0) = ISNULL(&<payroll.netfee>&,0)
AND %<payroll.feegross>% = &<payroll.feegross>&
AND %<payroll.flagcomputed>% = &<payroll.flagcomputed>&)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS008','1','U','payroll','S','S','S','N','N',{ts '2007-11-14 13:52:28.813'},'NINO','Il collaboratore per cui si sta calcolando il cedolino deve avere un indirizzo di residenza (predefinito) valido alla data del %<payroll.stop>%','S','--se ad un cedolino imposto il flagcompleto=''S'' allora deve esistere un indirizzo di residenza
--per il percipiente alla data di fine del cedolino
&<payroll.flagcomputed>& <> ''N'' or %<payroll.flagcomputed>% <> ''S'' or
[SELECT count(*) from parasubcontract
join registryaddress on registryaddress.idreg = parasubcontract.idreg
JOIN address
ON address.idaddress = registryaddress.idaddresskind
where parasubcontract.idcon = %<payroll.idcon>%
and %<payroll.stop>% between registryaddress.start and ISNULL(registryaddress.stop, %<payroll.stop>%)
and address.codeaddress=''07_SW_DEF'' 
]{I}>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS008','2','U','payroll','S','S','S','N','N',{ts '2007-11-14 13:52:59.920'},'NINO','Per un residente all''estero deve esistere un domicilio fiscale italiano valido alla data del %<payroll.stop>%','S','--se ad un cedolino imposto il flagcompleto=''S'' allora deve esistere un domicilio fiscale italiano
--per il residente all''estero alla data di fine del cedolino
&<payroll.flagcomputed>&<>''N'' or %<payroll.flagcomputed>%<>''S'' or
[SELECT count(*) from parasubcontract
join registryaddress on registryaddress.idreg = parasubcontract.idreg
JOIN address
ON address.idaddress = registryaddress.idaddresskind
where parasubcontract.idcon = %<payroll.idcon>%
and %<payroll.stop>% between registryaddress.start and ISNULL(registryaddress.stop, %<payroll.stop>%)
and address.codeaddress=''07_SW_DEF'' and idnation is not null
]{I}=0 or
[SELECT count(*) from parasubcontract
join registryaddress on registryaddress.idreg = parasubcontract.idreg
JOIN address
ON address.idaddress = registryaddress.idaddresskind
where parasubcontract.idcon = %<payroll.idcon>%
and %<payroll.stop>% between registryaddress.start and ISNULL(registryaddress.stop, %<payroll.stop>%)
and address.codeaddress=''07_SW_DOM'' and idcity is not null
]{I}>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS022','1','U','payroll','S','S','S','N','N',{ts '2009-01-20 12:29:49.463'},'SA','L''anno di fine del cedolino deve essere o uguale a quello di inizio, oppure se è successivo deve essere uguale all''esercizio corrente.','N','datepart(year,%<payroll.start>%) = datepart(year,%<payroll.stop>%)
or
datepart(year,%<payroll.stop>%) <= %<sys_esercizio>%
or
%<payroll.flagbalance>%=''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS027','1','U','payroll','S','S','S','N','N',{ts '2008-10-17 13:12:31.983'},'NINO','L''aliquota marginale selezionata è troppo bassa rispetto ai redditi presentati dal percipiente.','N','[SELECT isnull(applybrackets,''S'') from 	parasubcontractyear
	where idcon=%<payroll.idcon>%
		and ayear=%<payroll.fiscalyear>%
]{C}=''S''
OR
[SELECT isnull(highertax,0) from 	parasubcontractyear
	where idcon=%<payroll.idcon>%
		and ayear=%<payroll.fiscalyear>%
]{N}=0
OR
[SELECT isnull(highertax,0) from 	parasubcontractyear
	where idcon=%<payroll.idcon>%
		and ayear=%<payroll.fiscalyear>%
]{N} >=
isnull([select max(TB.employrate) from 
 parasubcontract P 	
	join  servicetax ST on ST.idser= P.idser
	join tax T on T.taxcode=ST.taxcode
	join taxratestart TS on TS.taxcode=T.taxcode
	join taxratebracket TB on TB.taxcode=T.taxcode

where 
	P.idcon=%<payroll.idcon>% and
	T.taxkind=1 and T.geoappliance is null and
	TS.start <= CONVERT(datetime,''31-12-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)   and	
	isnull(TB.minamount,0)<=
		ISNULL([SELECT SUM(feegross)  from payroll
			where idcon=%<payroll.idcon>%
			and fiscalyear=%<payroll.fiscalyear>%
			and flagbalance=''N''
		]{V} ,0)
		+
	 	    ISNULL([(SELECT SUM(taxablegross) from exhibitedcud 
			where idcon=%<payroll.idcon>%
			and fiscalyear=%<payroll.fiscalyear>%)]{V}
			,0)
		
	and TB.idtaxratestart= 
		(SELECT max(idtaxratestart) from taxratestart  TS2 where
			TS2.taxcode=TS.taxcode and
			TS2.start <= CONVERT(datetime,''31-12-'' + CONVERT(varchar(4),%<sys_esercizio>%),105)  
		)
	]{N}
,0)

OR
%<payroll.flagcomputed>%=''N''


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS005','1','D','payrollabatement','S','S','S','N','N',{ts '2006-04-28 14:25:16.813'},'''NINO''','Il cedolino %<payrollabatement.idpayroll>% non può essere modificato in quanto è stato già erogato','S','[SELECT disbursementdate FROM payroll WHERE idpayroll = %<payrollabatement.idpayroll>%]{D} IS NULL
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS005','1','U','payrollabatement','S','S','S','N','N',{ts '2006-05-02 09:32:23.093'},'''NINO''','Il cedolino %<payrollabatement.idpayroll>% non può essere modificato in quanto è stato già erogato','S','[SELECT disbursementdate FROM payroll WHERE idpayroll = %<payrollabatement.idpayroll>%]{D} IS NULL
OR
(%<payrollabatement.annualamount>% = &<payrollabatement.annualamount>&
AND %<payrollabatement.curramount>% = &<payrollabatement.curramount>&)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS005','1','D','payrolldeduction','S','S','S','N','N',{ts '2006-04-28 14:25:07.063'},'''NINO''','Il cedolino %<payrolldeduction.idpayroll>% non può essere modificato in quanto è stato già erogato','S','[SELECT disbursementdate FROM payroll WHERE idpayroll = %<payrolldeduction.idpayroll>%]{D} IS NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS005','1','U','payrolldeduction','S','S','S','N','N',{ts '2006-05-02 09:32:16.420'},'''NINO''','Il cedolino %<payrolldeduction.idpayroll>% non può essere modificato in quanto è stato già erogato','S','[SELECT disbursementdate FROM payroll WHERE idpayroll = %<payrolldeduction.idpayroll>%]{D} IS NULL
OR
(%<payrolldeduction.annualamount>% = &<payrolldeduction.annualamount>&
AND %<payrolldeduction.curramount>% = &<payrolldeduction.curramount>&)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS005','1','D','payrolltax','S','S','S','N','N',{ts '2006-04-28 14:23:30.750'},'''NINO''','Il cedolino %<payrolltax.idpayroll>% non può essere modificato in quanto è stato già erogato','S','[SELECT disbursementdate FROM payroll WHERE idpayroll = %<payrolltax.idpayroll>%]{D} IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS017','1','I','payrolltax','S','S','S','N','N',{ts '2008-02-27 15:13:03.217'},'SA','Posizione assicurativa territoriale errata (la quota dell''imponibile assicurativo non coincide con la quota %<payrolltax.taxablenumerator>%/%<payrolltax.taxabledenominator>% dell''imponibile di %<tax.taxref>%). Occorre cambiare PAT e poi reimpostare i compensi dei cedolini','N','[(select taxkind from tax 
	where taxcode = %<payrolltax.taxcode>%)
]{I} <> 1
or
[(select count(*) from payrolltax
join tax on tax.taxcode = payrolltax.taxcode
where payrolltax.idpayroll = %<payrolltax.idpayroll>%
and tax.taxkind = 4
and (isnull(payrolltax.taxablenumerator,1) <> isnull(%<payrolltax.taxablenumerator>%,1)
or isnull(payrolltax.taxabledenominator,1) <> isnull(%<payrolltax.taxabledenominator>%,1))
)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS017','2','I','payrolltax','S','S','S','N','N',{ts '2008-02-27 15:13:11.343'},'SA','Posizione assicurativa territoriale errata (la quota %<payrolltax.taxablenumerator>%/%<payrolltax.taxabledenominator>% dell''imponibile di %<tax.taxref>% non coincide con la quota dell''imponibile fiscale). Occorre cambiare PAT e poi reimpostare i compensi dei cedolini','N','[(select taxkind from tax 
	where taxcode = %<payrolltax.taxcode>%)
]{I} <> 4
or
[(select count(*) from payrolltax
join tax on tax.taxcode = payrolltax.taxcode
where payrolltax.idpayroll = %<payrolltax.idpayroll>%
and tax.taxkind = 1
and (isnull(payrolltax.taxablenumerator,1) <> isnull(%<payrolltax.taxablenumerator>%,1)
or isnull(payrolltax.taxabledenominator,1) <> isnull(%<payrolltax.taxabledenominator>%,1))
)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS005','1','U','payrolltax','S','S','S','N','N',{ts '2006-05-02 09:37:22.233'},'''NINO''','Il cedolino %<payrolltax.idpayroll>% non può essere modificato in quanto è stato già erogato','S','[SELECT disbursementdate FROM payroll WHERE idpayroll = %<payrolltax.idpayroll>%]{D} IS NULL
OR
(ISNULL(%<payrolltax.employtax>%,0) = ISNULL(&<payrolltax.employtax>&,0)
AND ISNULL(%<payrolltax.admintax>%,0) = ISNULL(&<payrolltax.admintax>&,0)
AND ISNULL(%<payrolltax.employtaxgross>%,0) = ISNULL(&<payrolltax.employtaxgross>&,0)
AND ISNULL(%<payrolltax.employrate>%,0) = ISNULL(&<payrolltax.employrate>&,0)
AND ISNULL(%<payrolltax.adminrate>%,0) = ISNULL(&<payrolltax.adminrate>&,0))')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS017','1','U','payrolltax','S','S','S','N','N',{ts '2008-02-27 15:13:16.670'},'SA','Posizione assicurativa territoriale errata (la quota dell''imponibile assicurativo non coincide con la quota %<payrolltax.taxablenumerator>%/%<payrolltax.taxabledenominator>% dell''imponibile di %<tax.taxref>%). Occorre cambiare PAT e poi reimpostare i compensi dei cedolini','N','[(select taxkind from tax 
	where taxcode = %<payrolltax.taxcode>%)
]{I} <> 1
or
[(select count(*) from payrolltax
join tax on tax.taxcode = payrolltax.taxcode
where payrolltax.idpayroll = %<payrolltax.idpayroll>%
and tax.taxkind = 4
and (isnull(payrolltax.taxablenumerator,1) <> isnull(%<payrolltax.taxablenumerator>%,1)
or isnull(payrolltax.taxabledenominator,1) <> isnull(%<payrolltax.taxabledenominator>%,1))
)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS017','2','U','payrolltax','S','S','S','N','N',{ts '2008-02-27 15:13:22.780'},'SA','Posizione assicurativa territoriale errata (la quota %<payrolltax.taxablenumerator>%/%<payrolltax.taxabledenominator>% dell''imponibile di %<tax.taxref>% non coincide con la quota dell''imponibile fiscale). Occorre cambiare PAT e poi reimpostare i compensi dei cedolini','N','[(select taxkind from tax 
	where taxcode = %<payrolltax.taxcode>%)
]{I} <> 4
or
[(select count(*) from payrolltax
join tax on tax.taxcode = payrolltax.taxcode
where payrolltax.idpayroll = %<payrolltax.idpayroll>%
and tax.taxkind = 1
and (isnull(payrolltax.taxablenumerator,1) <> isnull(%<payrolltax.taxablenumerator>%,1)
or isnull(payrolltax.taxabledenominator,1) <> isnull(%<payrolltax.taxabledenominator>%,1))
)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS005','1','D','payrolltaxbracket','S','S','S','N','N',{ts '2006-04-28 14:23:57.313'},'''NINO''','Il cedolino %<payrolltaxbracket.idpayroll>% non può essere modificato in quanto è stato già erogato','S','[SELECT disbursementdate FROM payroll WHERE idpayroll = %<payrolltaxbracket.idpayroll>%]{D} IS NULL
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS005','1','U','payrolltaxbracket','S','S','S','N','N',{ts '2006-05-02 09:42:27.063'},'''NINO''','Il cedolino %<payrolltaxbracket.idpayroll>% non può essere modificato in quanto è stato già erogato','S','[SELECT disbursementdate FROM payroll WHERE idpayroll = %<payrolltaxbracket.idpayroll>%]{D} IS NULL
OR
(ISNULL(%<payrolltaxbracket.adminrate>%,0) = ISNULL(&<payrolltaxbracket.adminrate>&,0)
AND ISNULL(%<payrolltaxbracket.admintax>%,0) = ISNULL(&<payrolltaxbracket.admintax>&,0)
AND ISNULL(%<payrolltaxbracket.employrate>%,0) = ISNULL(&<payrolltaxbracket.employrate>&,0)
AND ISNULL(%<payrolltaxbracket.employtax>%,0) = ISNULL(&<payrolltaxbracket.employtax>&,0)
AND ISNULL(%<payrolltaxbracket.taxable>%,0) = ISNULL(&<payrolltaxbracket.taxable>&,0))')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','pettycash','S','S','S','N','N',{ts '2007-09-04 16:10:16.187'},'NINO','Cancellazione Impossibile! Esistono operazioni collegate al fondo economale %<idpettycash>%','S','[(SELECT count(*) 
from pettycashoperation 
where idpettycash = %<pettycash.idpettycash>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','pettycash','S','S','S','N','N',{ts '2007-09-04 16:09:15.187'},'NINO','Fondo economale %<idpettycash>% già esistente','S','[(SELECT count(*) 
from pettycash 
where idpettycash = %<pettycash.idpettycash>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','pettycash','S','S','S','N','N',{ts '2007-09-04 16:09:22.907'},'NINO','Descrizione del fondo economale già esistente','S','[(SELECT count(*) 
from pettycash 
where description = %<pettycash.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','pettycash','S','S','S','N','N',{ts '2007-09-04 16:09:30.233'},'NINO','Descrizione del fondo economale già esistente','S','[(SELECT count(*) 
from pettycash 
where idpettycash <> %<pettycash.idpettycash>% 
and description = %<pettycash.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO029','1','I','pettycashexpense','S','S','S','N','N',{ts '2007-12-18 15:24:35.377'},'SARA','Non si può associare all''operazione di reintegro del Fondo %<pettycash.description>% il movimento N. %<expenseview.parentnmov>%  perchè contabilizza un contratto.','N','(
ISNULL(
	[SELECT count(*)
	FROM expense E
	JOIN expenselink ELK
		on ELK.idchild = E.idexp	
	JOIN expensecasualcontract EC
		ON EC.idexp = ELK.idparent
	WHERE E.idexp = %<pettycashexpense.idexp>%]{I},0)
= 0
AND
ISNULL(
	[SELECT count(*)
	FROM expense E
	JOIN expenselink ELK
		on ELK.idchild = E.idexp	
	JOIN expenseitineration EI
		ON EI.idexp = ELK.idparent
	WHERE E.idexp = %<pettycashexpense.idexp>%]{I},0)
= 0
AND
ISNULL(
	[SELECT count(*)
	FROM expense E
	JOIN expenselink ELK
		on ELK.idchild = E.idexp	
	JOIN expenseinvoice EI
		ON EI.idexp = ELK.idparent
	WHERE E.idexp = %<pettycashexpense.idexp>%]{I},0)
= 0
AND
ISNULL(
	[SELECT count(*)
	FROM expense E
	JOIN expenselink ELK
		on ELK.idchild = E.idexp	
	JOIN expensemandate EM
		ON EM.idexp = ELK.idparent
	WHERE E.idexp = %<pettycashexpense.idexp>%]{I},0)
= 0
AND
ISNULL(
	[SELECT count(*)
	FROM expense E
	JOIN expenselink ELK
		on ELK.idchild = E.idexp	
	JOIN expenseprofservice EP
		ON EP.idexp = ELK.idparent
	WHERE E.idexp = %<pettycashexpense.idexp>%]{I},0)
= 0
AND
ISNULL(
	[SELECT count(*)
	FROM expense E
	JOIN expenselink ELK
		on ELK.idchild = E.idexp	
	JOIN expensepayroll EP
		ON EP.idexp = ELK.idparent
	WHERE E.idexp = %<pettycashexpense.idexp>%]{I},0)
= 0
AND
ISNULL(
	[SELECT count(*)
	FROM expense E
	JOIN expenselink ELK
		on ELK.idchild = E.idexp	
	JOIN expensewageaddition EW
		ON EW.idexp = ELK.idparent
	WHERE E.idexp = %<pettycashexpense.idexp>%]{I},0)
= 0
)

OR 
(
( [SELECT flag from pettycashoperation 
WHERE idpettycash=%<pettycashexpense.idpettycash>% 
	AND noperation =%<pettycashexpense.noperation>%
	AND yoperation =%<pettycashexpense.yoperation>%]{I} & 2 ) = 0
)
	')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO005','1','D','pettycashoperation','S','S','S','N','N',{ts '2007-11-28 09:13:19.853'},'SARA','Prima di poter cancellare l''operazione, cancellare i movimenti di spesa collegati. Per vedere i movimenti collegati andare sulla scheda ','S','[SELECT COUNT(*) 
from pettycashexpense 
where yoperation = %<pettycashoperation.yoperation>% 
and noperation = %<pettycashoperation.noperation>% 
and idpettycash = %<pettycashoperation.idpettycash>%]{I} = 0 
or 
(%<pettycashoperation.flag>%&1  = 0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO006','1','D','pettycashoperation','S','S','S','N','N',{ts '2007-11-27 16:07:42.967'},'SARA','Operazione impossibile, la chiusura del fondo economale %<pettycash.description>%  è collegata a movimenti di entrata','S','[SELECT COUNT(*) 
from pettycashincome 
where yoperation = %<pettycashoperation.yoperation>% 
and noperation = %<pettycashoperation.noperation>% 
and idpettycash = %<pettycashoperation.idpettycash>%]{I} = 0 
or (%<pettycashoperation.flag>%&4 =0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO007','1','D','pettycashoperation','S','S','S','N','N',{ts '2007-11-27 16:08:24.687'},'SARA','Operazione impossibile, il reintegro n. %<yoperation>%/%<noperation>% del fondo economale %<pettycash.description>%  è collegato a movimenti di spesa','S','[SELECT COUNT(*) 
from pettycashexpense 
where yoperation = %<pettycashoperation.yoperation>% 
and noperation = %<pettycashoperation.noperation>% 
and idpettycash = %<pettycashoperation.idpettycash>%]{I} = 0 
or 
(%<pettycashoperation.flag>%& 2= 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO008','1','D','pettycashoperation','S','S','S','N','N',{ts '2007-12-07 10:26:25.753'},'SARA','Non è possibile eseguire operazioni sul fondo %<pettycash.description>% perché è stato già chiuso','S','[SELECT COUNT(*) 
from pettycashoperation 
where idpettycash = %<pettycashoperation.idpettycash>% 
and (flag&4)<>0 
and yoperation = %<pettycashoperation.yoperation>%]{I} = 0 
OR
[SELECT COUNT(*)
from pettycashoperation 
where idpettycash = %<pettycashoperation.idpettycash>% 
and (flag&4)<>0 
and yoperation = %<pettycashoperation.yoperation>% 
and noperation = %<pettycashoperation.noperation>%]{I} = 1')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO017','1','D','pettycashoperation','S','S','S','N','N',{ts '2007-11-28 09:13:43.353'},'SARA','La disponibilità del fondo economale %<pettycash.description>% è INSUFFICIENTE!','S','[(SELECT ISNULL(sum(amount), 0) 
from pettycashoperation 
where yoperation = %<sys_esercizio>% 
and (flag & 1)<>0
and idpettycash = %<pettycashoperation.idpettycash>%)]{V}
+
[(SELECT ISNULL(sum(amount), 0) 
from pettycashoperation 
where yoperation = %<sys_esercizio>% 
and (flag & 2)<>0
 and idpettycash = %<pettycashoperation.idpettycash>%)]{V}
-
ISNULL(%<pettycashoperation.amount>%, 0)
-
[(SELECT ISNULL(sum(amount), 0) 
from pettycashoperation 
where yoperation = %<sys_esercizio>% 
and(flag & 8)<>0

and idpettycash = %<pettycashoperation.idpettycash>%)]{V}
-
[(SELECT ISNULL(sum(amount), 0) 
from pettycashoperation 
where yoperation = %<sys_esercizio>% 
and (flag & 4)<>0

and idpettycash = %<pettycashoperation.idpettycash>%)]{V} >= 0
or
( (%<pettycashoperation.flag>% &3)= 0 )
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO028','1','D','pettycashoperation','S','S','S','N','N',{ts '2009-05-21 13:28:40.920'},'SARA','Non è possibile cancellare un''operazione già reintegrata','S','%<pettycashoperation.yrestore>% is null 
and %<pettycashoperation.nrestore>% is null')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO030','1','D','pettycashoperation','S','S','S','N','N',{ts '2008-02-04 11:57:08.843'},'SARA','Non si può cancellare l''operazione perchè è stata fatta la liquidaziona IVA della fattura contabilizzata col Fondo Economale.
','S','([SELECT COUNT(*)
FROM invoicedeferred
JOIN pettycashoperationinvoice
	on invoicedeferred.idinvkind = pettycashoperationinvoice.idinvkind 
	and invoicedeferred.yinv = pettycashoperationinvoice.yinv
	and invoicedeferred.ninv = pettycashoperationinvoice.ninv
WHERE pettycashoperationinvoice.idpettycash = %<pettycashoperation.idpettycash>%
	AND pettycashoperationinvoice.yoperation = %<pettycashoperation.yoperation>%
	AND pettycashoperationinvoice.noperation = %<pettycashoperation.noperation>%]
{I}) =0





')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','1','D','pettycashoperation','S','S','S','N','N',{ts '2011-03-07 16:38:27.297'},'sa','Non si può rimuovere una operazione del fondo economale se contabilizza una fattura  e il periodo della liquidazione è trascorso.','S','(
[SELECT COUNT(*)
FROM pettycashoperationinvoice
WHERE yoperation = &<pettycashoperation.yoperation>&
	AND noperation =&<pettycashoperation.noperation>&
	AND idpettycash =&<pettycashoperation.idpettycash>&
]{I} = 0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
   JOIN pettycashoperationinvoice PI
	 ON PI.yoperation = &<pettycashoperation.yoperation>&
	AND PI.noperation =&<pettycashoperation.noperation>&
	AND PI.idpettycash =&<pettycashoperation.idpettycash>&
  WHERE IKR.idinvkind=PI.idinvkind
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
&<pettycashoperation.adate>&  >
		ISNULL((SELECT  MAX (stop) FROM ivapay 
		WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &1) <>0  ), {d ''1900-01-01''})

)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
   JOIN pettycashoperationinvoice PI
	 ON PI.yoperation = &<pettycashoperation.yoperation>&
	AND PI.noperation =&<pettycashoperation.noperation>&
	AND PI.idpettycash =&<pettycashoperation.idpettycash>&
  WHERE IKR.idinvkind=PI.idinvkind
	AND (IK.flagactivity=1)
]{I} > 0 
AND
&<pettycashoperation.adate>&  >
		ISNULL((SELECT  MAX (stop) FROM ivapay 
		WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &2) <>0    ), {d ''1900-01-01''})
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO008','1','I','pettycashoperation','S','S','S','N','N',{ts '2007-11-27 16:55:59.937'},'SARA','Non è possibile eseguire operazioni sul fondo %<pettycash.description>%  perché è stato già chiuso','S','[SELECT COUNT(*) 
from pettycashoperation 
where idpettycash = %<pettycashoperation.idpettycash>% 
and (flag & 4)<>0
and yoperation = %<pettycashoperation.yoperation>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO009','1','I','pettycashoperation','S','N','S','N','N',{ts '2007-11-28 09:14:07.900'},'SARA','La previsione della voce in spesa %<finview.codefin>% e UPB %<finview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<pettycashoperation.idfin>%
	AND idupb= %<pettycashoperation.idupb>%]{N}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from upbexpensetotal 
	where idfin = %<pettycashoperation.idfin>%
	AND idupb= %<pettycashoperation.idupb>% 
	and nphase = %<sys_expensefinphase>%]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
	FROM pettycashoperation 
	WHERE idfin = %<pettycashoperation.idfin>% 
	AND idupb= %<pettycashoperation.idupb>% 
	AND yrestore IS NULL 
	AND nrestore IS NULL]{N}
,0)
- 
ISNULL(%<pettycashoperation.amount>%, 0) 
>= 0 
or 
%<pettycashoperation.idfin>% IS NULL
or 
(%<pettycashoperation.flag>% &8) = 0

or
%<pettycashoperation.yrestore>% is not NULL
or
%<pettycashoperation.nrestore>% is not NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO010','1','I','pettycashoperation','N','S','N','N','N',{ts '2007-11-28 09:14:23.697'},'SARA','La previsione della voce in spesa %<finview.codefin>% e UPB %<finview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<pettycashoperation.idfin>%
	AND idupb= %<pettycashoperation.idupb>%]{N}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears, 0)   
	from upbexpensetotal 
	where idfin = %<pettycashoperation.idfin>%
	AND idupb= %<pettycashoperation.idupb>% 
	and nphase = %<sys_expensefinphase>%]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
	FROM pettycashoperation 
	WHERE idfin = %<pettycashoperation.idfin>% 
	AND idupb= %<pettycashoperation.idupb>% 
	AND yrestore IS NULL 
	AND nrestore IS NULL]{N}
,0)
- 
ISNULL(%<pettycashoperation.amount>%, 0) 
>= 0 
or 
%<pettycashoperation.idfin>% IS NULL
or 
( (%<pettycashoperation.flag>% &8) = 0 )
or
%<pettycashoperation.yrestore>% is not NULL
or
%<pettycashoperation.nrestore>% is not NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO011','1','I','pettycashoperation','S','N','S','S','N',{ts '2007-11-28 09:15:01.447'},'SARA','La dotazione crediti della voce %<finview.codefin>% e UPB %<finview.codeupb>% è INSUFFICIENTE!','S','[(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0)  
from upbtotal 
where idfin = %<pettycashoperation.idfin>%
 and idupb = %<pettycashoperation.idupb>%
)]{N}
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)
	from upbexpensetotal 
	where idfin = %<pettycashoperation.idfin>%
	 and idupb = %<pettycashoperation.idupb>%
	and nphase = %<sys_maxexpensephase>%
	]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<pettycashoperation.idfin>%
	 and idupb = %<pettycashoperation.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{N}
 ,0)
-
%<pettycashoperation.amount>%
>= 0
or
( (%<pettycashoperation.flag>% &8) = 0 )
or 
%<pettycashoperation.idfin>% IS NULL 
or
%<pettycashoperation.yrestore>% is not NULL
or
%<pettycashoperation.nrestore>% is not NULL
or
[select assured from upb
	where idupb = %<pettycashoperation.idupb>%]{C}
= ''S''


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO012','1','I','pettycashoperation','S','S','S','N','S',{ts '2007-11-28 09:25:21.230'},'SARA','La dotazione incassi della voce %<finview.codefin>% e UPB %<finview.codeupb>% è INSUFFICIENTE!','S','[(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0)  
from upbtotal 
where idfin = %<pettycashoperation.idfin>%
 and idupb = %<pettycashoperation.idupb>%
)]{N}
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<pettycashoperation.idfin>%
	 and idupb = %<pettycashoperation.idupb>%
	and nphase = %<sys_maxexpensephase>%
	]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<pettycashoperation.idfin>%
	 and idupb = %<pettycashoperation.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{N}
 ,0)
-
%<pettycashoperation.amount>%
>= 0
or
( (%<pettycashoperation.flag>% &8) = 0 )
or 
%<pettycashoperation.idfin>% IS NULL 
or
%<pettycashoperation.yrestore>% is not NULL
or
%<pettycashoperation.nrestore>% is not NULL
or
[select assured from upb
	where idupb = %<pettycashoperation.idupb>%]{C}
= ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO017','1','I','pettycashoperation','S','S','S','N','N',{ts '2007-11-28 11:25:47.637'},'SARA','La disponibilità del fondo economale %<pettycash.description>% è INSUFFICIENTE!','S','[(	SELECT ISNULL(sum(amount), 0) 
from pettycashoperation 
where yoperation = %<sys_esercizio>% 
and (flag&1)<>0
and idpettycash = %<pettycashoperation.idpettycash>%)]{V}
+
[(	SELECT ISNULL(sum(amount), 0) 
from pettycashoperation 
where yoperation = %<sys_esercizio>% 
and (flag&2)<>0
 and idpettycash = %<pettycashoperation.idpettycash>%)]{V}
-
ISNULL(%<pettycashoperation.amount>%, 0)
-
[(	SELECT ISNULL(sum(amount), 0) 
from pettycashoperation 
where yoperation = %<sys_esercizio>% 
and (flag&8)<>0
and idpettycash = %<pettycashoperation.idpettycash>%)]{V}
-
[(	SELECT ISNULL(sum(amount), 0) 
from pettycashoperation 
where yoperation = %<sys_esercizio>% 
and (flag&4)<>0
and idpettycash = %<pettycashoperation.idpettycash>%)]{V} >= 0
or
( (%<pettycashoperation.flag>% &8) = 0 )')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO020','1','I','pettycashoperation','S','N','N','N','N',{ts '2007-02-28 14:20:44.530'},'''NINO''','La previsione della voce di spesa %<fin.codefin>% e UPB %<upb.codeupb>% è inferiore alle righe di mandato','S','(
	ISNULL(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0)
	from upbtotal
	where idfin = %<pettycashoperation.idfin>%
	and idupb = %<pettycashoperation.idupb>%
]{N}
,0)
- 
	ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<pettycashoperation.idfin>% 
	and idupb=%<pettycashoperation.idupb>% 
	and nphase = %<sys_maxexpensephase>%]{N}
,0)
   -
	ISNULL(
		[SELECT ISNULL(SUM(amount), 0) 
		FROM pettycashoperation 
		where idfin = %<pettycashoperation.idfin>% 
		and idupb=%<pettycashoperation.idupb>% 
		AND yrestore IS NULL
		AND nrestore IS NULL]{N}
		,0)	
   - %<pettycashoperation.amount>%
)
>= 0
OR
%<pettycashoperation.idfin>% IS NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO021','1','I','pettycashoperation','S','S','S','N','N',{ts '2007-12-01 14:57:22.093'},'SARA','Reintegrare tutte le spese prima di chiudere il fondo economale %<pettycash.description>%','S','( [SELECT COUNT(*) 
FROM pettycashoperation 
WHERE yoperation = %<sys_esercizio>%
AND nrestore IS NULL
AND ( (pettycashoperation.flag &7) = 0 )
AND idpettycash = %<pettycashoperation.idpettycash>%]{I} = 0)
OR
( (%<pettycashoperation.flag>% &4) = 0 )

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO022','1','I','pettycashoperation','S','S','S','N','N',{ts '2005-08-26 11:51:42.473'},'''LAZZO''','L''operazione del fondo %<pettycash.description>%  che si sta inserendo non può essere imputata al movimento di spesa scelto, %<expenseview.phase>%  %<expenseview.nmov>% del  %<expense.ymov>%, in quanto non vi  è disponibilità','S','[SELECT ISNULL(available,0) FROM expensetotal
WHERE idexp =%<pettycashoperation.idexp>%
AND ayear = %<pettycashoperation.yoperation>%]{N}
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = %<pettycashoperation.idexp>%]{N}
,0)
+
ISNULL(
	[SELECT SUM(C.curramount)
	FROM pettycashexpense A
	JOIN expense B
	ON A.idexp = B.idexp
	JOIN expensetotal C
	ON C.idexp = B.idexp
	AND A.yoperation = C.ayear
	WHERE B.parentidexp = %<pettycashoperation.idexp>%]{N}
,0)
-
[%<pettycashoperation.amount>%]
>= 0
OR 
[%<pettycashoperation.idexp>%] IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO023','1','I','pettycashoperation','S','S','S','N','N',{ts '2005-08-26 11:51:42.503'},'''LAZZO''','L''operazione del fondo %<pettycash.description>%  che si sta inserendo non può essere imputata al movimento di spesa scelto, %<expenseview.phase>%  %<expenseview.nmov>% del  %<expense.ymov>%,  in quanto non vi è disponibilità','S','([SELECT COUNT(*)
FROM expensetotal
WHERE idexp = %<pettycashoperation.idexp>%
AND ayear > %<pettycashoperation.yoperation>%]{N} = 0)
OR
(
[SELECT ISNULL(MIN(available),0) FROM expensetotal
WHERE idexp =%<pettycashoperation.idexp>%
AND ayear > %<pettycashoperation.yoperation>%]{N}
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = %<pettycashoperation.idexp>%]{N}
,0)
+
ISNULL(
	[SELECT SUM(C.curramount)
	FROM pettycashexpense A
	JOIN expense B
	ON A.idexp = B.idexp
	JOIN expensetotal C
	ON C.idexp = B.idexp
	AND A.yoperation = C.ayear
	WHERE B.parentidexp = %<pettycashoperation.idexp>%]{N}
,0)
-
[%<pettycashoperation.amount>%]
>= 0
)
OR 
[%<pettycashoperation.idexp>%] IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO024','1','I','pettycashoperation','S','S','S','N','N',{ts '2007-03-29 15:28:55.593'},'''SARA''','L''imputazione dell''operazione non ? completa: specificare sia l''UPB che la voce di bilancio','S','(%<pettycashoperation.idupb>% IS NULL
AND
%<pettycashoperation.idfin>% IS NULL)
OR
(%<pettycashoperation.idupb>% IS NOT NULL
AND
%<pettycashoperation.idfin>% IS NOT NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO032','1','I','pettycashoperation','S','S','S','S','S',{ts '2010-04-30 13:38:29.640'},'SARA','Non è stata inserira la classificazione SIOPE o la somma dei dettagli ad essa associata non è pari all''importo dell''operazione del Fondo Economale. ','N','(
ISNULL(
[(SELECT SUM(amount) FROM pettycashoperationsorted
	JOIN sorting
		ON sorting.idsor = pettycashoperationsorted.idsor
	JOIN sortingkind
		ON sorting.idsorkind = sortingkind.idsorkind
WHERE sortingkind.codesorkind = ''07U_SIOPE''
AND yoperation = %<pettycashoperation.yoperation>%
AND noperation = %<pettycashoperation.noperation>%
AND idpettycash = %<pettycashoperation.idpettycash>%)]{N} ,0)

=

%<pettycashoperation.amount>%
)
OR

 (%<pettycashoperation.flag>% & 8 = 0 )

OR
-- se le operazioni di p.s. che contabilizzano la stessa fattura sono >1 la regola non deve scattare
(
ISNULL(
[(SELECT COUNT(*) 
from pettycashoperationinvoice pci1
join  pettycashoperation PO
	ON pci1.idpettycash = PO.idpettycash
	AND pci1.noperation = PO.noperation
	AND pci1.yoperation = PO.yoperation
join  pettycashoperationinvoice  pci2
	ON pci1.idinvkind = pci2.idinvkind
	AND pci1.yinv = pci2.yinv
	AND pci1.ninv= pci2.ninv
where PO.idpettycash = %<pettycashoperation.idpettycash>% 
and PO.noperation = %<pettycashoperation.noperation>% 
and PO.yoperation = %<pettycashoperation.yoperation>%)]{I} ,0)
> 1

)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('OCCAS021','1','I','pettycashoperation','S','S','S','N','N',{ts '2009-10-20 14:16:00.110'},'SARA','Quando si paga una prestazione occasionale con il fondo economale, è necessario effettuare in giornata anche il saldo del lordo con un movimento finanziario, pena errori nella liquidazione ritenute e nell''applicazione della quota esente ove presente.','N','[SELECT COUNT(*)
FROM pettycashoperationcasualcontract
WHERE idpettycash = %<pettycashoperation.idpettycash>%
AND yoperation= %<pettycashoperation.yoperation>%
AND noperation= %<pettycashoperation.noperation>%
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO001','1','U','pettycashoperation','S','S','S','N','N',{ts '2007-11-28 09:32:20.480'},'SARA','L''importo dell''operazione di apertura del fondo economale %<pettycash.description>% è diverso dai movimenti di spesa collegati','S','[SELECT ISNULL(sum(curramount), 0) 
from pettycashexpenseview 
where yoperation = %<pettycashoperation.yoperation>% 
and noperation = %<pettycashoperation.noperation>% 
and idpettycash = %<pettycashoperation.idpettycash>% 
and nphase = ''1'']{V} = %<pettycashoperation.amount>%
or 
( (%<pettycashoperation.flag>% &1) = 0 )
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO002','1','U','pettycashoperation','S','S','S','N','N',{ts '2007-11-28 09:32:47.010'},'SARA','L''importo dell''operazione di chiusura del fondo economale %<pettycash.description>% è diverso dai movimenti di entrata collegati','S','[SELECT ISNULL(SUM(curramount), 0) 
from pettycashincomeview 
where yoperation = %<pettycashoperation.yoperation>% 
and noperation = %<pettycashoperation.noperation>% 
and idpettycash = %<pettycashoperation.idpettycash>% 
and nphase = ''1'']{V} = %<pettycashoperation.amount>% 
or 
( (%<pettycashoperation.flag>% &4) = 0 )

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO003','1','U','pettycashoperation','S','S','S','N','N',{ts '2007-11-28 09:33:16.463'},'SARA','L''importo dell''operazione di reintegro n. %<noperation>%/%<yoperation>% del fondo economale %<pettycash.description>%  è diverso dalle operazioni rendicontate','S','[SELECT ISNULL(SUM(amount), 0) 
from pettycashoperation 
where yrestore = %<pettycashoperation.yoperation>% 
and nrestore = %<pettycashoperation.noperation>% 
and idpettycash = %<pettycashoperation.idpettycash>%]{V} = %<pettycashoperation.amount>%
or 
( (%<pettycashoperation.flag>% &2) = 0 )

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO004','1','U','pettycashoperation','S','S','S','N','N',{ts '2007-11-28 09:35:53.480'},'SARA','L''importo dell''operazione di reintegro n. %<noperation>%/%<yoperation>% del fondo economale %<pettycash.description>%  è diverso dai movimenti di spesa collegati','S','[SELECT ISNULL(SUM(curramount), 0) 
from pettycashexpenseview 
where yoperation = %<pettycashoperation.yoperation>% 
and noperation = %<pettycashoperation.noperation>% 
and idpettycash = %<pettycashoperation.idpettycash>% 
and nphase = ''1'']{V} = %<pettycashoperation.amount>%
or 
( (%<pettycashoperation.flag>% &2) = 0 )
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO008','1','U','pettycashoperation','S','S','S','N','N',{ts '2007-11-28 09:38:10.370'},'SARA','Non è possibile eseguire operazioni sul fondo %<pettycash.description>%  perché è stato già chiuso','S','[SELECT COUNT(*) 
from pettycashoperation 
where idpettycash = %<pettycashoperation.idpettycash>% 
and ( (%<pettycashoperation.flag>% &4) = 0 )
and yoperation = %<pettycashoperation.yoperation>%]{I} = 0
or 
[SELECT COUNT(*) 
from pettycashoperation 
where idpettycash = %<pettycashoperation.idpettycash>% 
and ( (%<pettycashoperation.flag>% &4) = 0 )
and yoperation = %<pettycashoperation.yoperation>% 
and noperation = %<pettycashoperation.noperation>%]{I} = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO009','1','U','pettycashoperation','S','N','S','N','N',{ts '2007-12-07 11:25:06.127'},'SARA','La previsione della voce in spesa %<finview.codefin>% e UPB %<finview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<pettycashoperation.idfin>%
	AND idupb= %<pettycashoperation.idupb>%
]{N} 
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from upbexpensetotal 
	where idfin = %<pettycashoperation.idfin>% 
	AND idupb= %<pettycashoperation.idupb>%
	and nphase = %<sys_expensefinphase>%]{N} ,0)
-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
	FROM pettycashoperation 
	WHERE idfin = %<pettycashoperation.idfin>% 
	AND idupb= %<pettycashoperation.idupb>%
	AND yrestore IS NULL
	AND nrestore IS NULL]{N}
,0)
+ 
ISNULL(&<pettycashoperation.amount>&, 0)
- 
ISNULL(%<pettycashoperation.amount>%, 0) >= 0 
or
%<pettycashoperation.amount>%<&<pettycashoperation.amount>&
or
( (%<pettycashoperation.flag>% &8) = 0 )
or 
%<pettycashoperation.idfin>% IS NULL 
or
ISNULL(%<pettycashoperation.idfin>%,0) <> ISNULL(&<pettycashoperation.idfin>&,0)
or
%<pettycashoperation.yrestore>% is not NULL
or
%<pettycashoperation.nrestore>% is not NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO009','2','U','pettycashoperation','S','N','S','N','N',{ts '2007-12-07 11:23:45.643'},'SARA','La previsione della voce in spesa %<finview.codefin>% e UPB %<finview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
	ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<pettycashoperation.idfin>%
	AND idupb= %<pettycashoperation.idupb>%
]{N} 
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from upbexpensetotal 
where idfin = %<pettycashoperation.idfin>% 
	AND idupb= %<pettycashoperation.idupb>%
and nphase = %<sys_expensefinphase>%]{N},0) 
-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
	FROM pettycashoperation 
	WHERE idfin = %<pettycashoperation.idfin>% 
	AND idupb= %<pettycashoperation.idupb>%
	AND yrestore IS NULL
	AND nrestore IS NULL]{N}
,0)-
ISNULL(%<pettycashoperation.amount>%, 0)
>= 0 
or
( (%<pettycashoperation.flag>% &8) = 0 )
or 
[%<pettycashoperation.idfin>%] IS NULL 
or
ISNULL(%<pettycashoperation.idfin>%,0) = ISNULL(&<pettycashoperation.idfin>&,0)
or
%<pettycashoperation.yrestore>% is not NULL
or
%<pettycashoperation.nrestore>% is not NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO010','1','U','pettycashoperation','N','S','N','N','N',{ts '2007-12-07 11:14:59.313'},'SARA','La previsione della voce in spesa %<finview.codefin>% e UPB %<finview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<pettycashoperation.idfin>%
	AND idupb= %<pettycashoperation.idupb>%
]{N} 
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears, 0)   
from upbexpensetotal 
	where idfin = %<pettycashoperation.idfin>% 
	AND idupb= %<pettycashoperation.idupb>%
	and nphase = %<sys_expensefinphase>%]{N},0) 
-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
	FROM pettycashoperation 
	WHERE idfin = %<pettycashoperation.idfin>% 
	AND idupb= %<pettycashoperation.idupb>%
	AND yrestore IS NULL
	AND nrestore IS NULL]{N}
,0)
+ 
ISNULL(&<pettycashoperation.amount>&, 0)
- 
ISNULL(%<pettycashoperation.amount>%, 0) >= 0 
or
%<pettycashoperation.amount>%<&<pettycashoperation.amount>&
or
( (%<pettycashoperation.flag>% &8) = 0 )
or 
%<pettycashoperation.idfin>% IS NULL 
or
ISNULL(%<pettycashoperation.idfin>%,0) <> ISNULL(&<pettycashoperation.idfin>&,0)
or
ISNULL(%<pettycashoperation.idupb>%,'''') <> ISNULL(&<pettycashoperation.idupb>&,'''')
or
%<pettycashoperation.yrestore>% is not NULL
or
%<pettycashoperation.nrestore>% is not NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO010','2','U','pettycashoperation','N','S','N','N','N',{ts '2007-12-07 11:09:40.547'},'SARA','La previsione della voce in spesa %<finview.codefin>% e UPB %<finview.codeupb>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
	ISNULL(previsionvariation, 0)
	from upbtotal 
	where idfin = %<pettycashoperation.idfin>%
	AND idupb= %<pettycashoperation.idupb>%
]{N} 
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears, 0)   
from upbexpensetotal 
where idfin = %<pettycashoperation.idfin>% 
	AND idupb= %<pettycashoperation.idupb>%
and nphase = %<sys_expensefinphase>%]{N},0) 
-
ISNULL(
	[SELECT ISNULL(SUM(amount), 0) 
	FROM pettycashoperation 
	WHERE idfin = %<pettycashoperation.idfin>% 
	AND idupb= %<pettycashoperation.idupb>%
	AND yrestore IS NULL
	AND nrestore IS NULL]{N}
,0)-
ISNULL(%<pettycashoperation.amount>%, 0)
>= 0 
or
( (%<pettycashoperation.flag>% & 8 ) = 0 )
or 
[%<pettycashoperation.idfin>%] IS NULL 
or
(ISNULL(%<pettycashoperation.idfin>%,0) = ISNULL(&<pettycashoperation.idfin>&,0)
 and
 ISNULL(%<pettycashoperation.idupb>%,'''') = ISNULL(&<pettycashoperation.idupb>&,'''')

)
or
%<pettycashoperation.yrestore>% is not NULL
or
%<pettycashoperation.nrestore>% is not NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO011','1','U','pettycashoperation','S','N','S','S','N',{ts '2007-11-28 09:39:48.760'},'SARA','La dotazione crediti della voce %<finview.codefin>% e UPB %<finview.codeupb>% è INSUFFICIENTE!','S','[(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0)  
from upbtotal 
where idfin = %<pettycashoperation.idfin>%
 and idupb = %<pettycashoperation.idupb>%
)]{N}
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)
	from upbexpensetotal 
	where idfin = %<pettycashoperation.idfin>%
	 and idupb = %<pettycashoperation.idupb>%
	and nphase = %<sys_maxexpensephase>%
	]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<pettycashoperation.idfin>%
	 and idupb = %<pettycashoperation.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{N}
 ,0)
+ 
ISNULL(&<pettycashoperation.amount>&, 0)
-
%<pettycashoperation.amount>%
>= 0
or
( (%<pettycashoperation.flag>% &8) = 0 )
or 
%<pettycashoperation.idfin>% IS NULL 
or
%<pettycashoperation.yrestore>% is not NULL
or
%<pettycashoperation.nrestore>% is not NULL
or
ISNULL(%<pettycashoperation.idfin>%,'''') <> ISNULL(&<pettycashoperation.idfin>&,'''')
or
ISNULL(%<pettycashoperation.idupb>%,'''') <> ISNULL(&<pettycashoperation.idupb>&,'''')
or
%<pettycashoperation.amount>%<&<pettycashoperation.amount>&
or
[select assured from upb
	where idupb = %<pettycashoperation.idupb>%]{C}
= ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO011','2','U','pettycashoperation','S','N','S','S','N',{ts '2007-11-28 09:40:07.790'},'SARA','La dotazione crediti della voce %<finview.codefin>% e UPB %<finview.codeupb>% è INSUFFICIENTE!','S','[(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0)  
from upbtotal 
where idfin = %<pettycashoperation.idfin>%
 and idupb = %<pettycashoperation.idupb>%
)]{N}
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)
	from upbexpensetotal 
	where idfin = %<pettycashoperation.idfin>%
	 and idupb = %<pettycashoperation.idupb>%
	and nphase = %<sys_maxexpensephase>%
	]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<pettycashoperation.idfin>%
	 and idupb = %<pettycashoperation.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{N}
 ,0)
-
%<pettycashoperation.amount>%
>= 0
or
( (%<pettycashoperation.flag>% &8) = 0 )
or 
%<pettycashoperation.idfin>% IS NULL 
or
(ISNULL(%<pettycashoperation.idfin>%,'''') = ISNULL(&<pettycashoperation.idfin>&,'''')
 and
 ISNULL(%<pettycashoperation.idupb>%,'''') = ISNULL(&<pettycashoperation.idupb>&,'''')
)
or
%<pettycashoperation.yrestore>% is not NULL
or
%<pettycashoperation.nrestore>% is not NULL
or
[select assured from upb
	where idupb = %<pettycashoperation.idupb>%]{C}
= ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO012','1','U','pettycashoperation','S','S','S','N','S',{ts '2007-11-28 09:40:48.243'},'SARA','La dotazione incassi della voce %<finview.codefin>% e UPB %<finview.codeupb>% è INSUFFICIENTE!','S','[(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0)  
from upbtotal 
where idfin = %<pettycashoperation.idfin>%
 and idupb = %<pettycashoperation.idupb>%
)]{N}
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<pettycashoperation.idfin>%
	 and idupb = %<pettycashoperation.idupb>%
	and nphase = %<sys_maxexpensephase>%
	]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<pettycashoperation.idfin>%
	 and idupb = %<pettycashoperation.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{N}
 ,0)
+
&<pettycashoperation.amount>&
-
%<pettycashoperation.amount>%
>= 0
or
%<pettycashoperation.amount>%<&<pettycashoperation.amount>&
or
( (%<pettycashoperation.flag>% &8) = 0 )
or 
%<pettycashoperation.idfin>% IS NULL 
or
ISNULL(%<pettycashoperation.idfin>%,'''') <> ISNULL(&<pettycashoperation.idfin>&,'''')
or
ISNULL(%<pettycashoperation.idupb>%,'''') <> ISNULL(&<pettycashoperation.idupb>&,'''')
or
%<pettycashoperation.yrestore>% is not NULL
or
%<pettycashoperation.nrestore>% is not NULL
or
[select assured from upb
	where idupb = %<pettycashoperation.idupb>%]{C}
= ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO012','2','U','pettycashoperation','S','S','S','N','S',{ts '2007-11-28 09:40:57.743'},'SARA','La dotazione incassi della voce %<finview.codefin>% e UPB %<finview.codeupb>% è INSUFFICIENTE!','S','[(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0)  
from upbtotal 
where idfin = %<pettycashoperation.idfin>%
 and idupb = %<pettycashoperation.idupb>%
)]{N}
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<pettycashoperation.idfin>%
	 and idupb = %<pettycashoperation.idupb>%
	and nphase = %<sys_maxexpensephase>%
	]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<pettycashoperation.idfin>%
	 and idupb = %<pettycashoperation.idupb>%
	and yrestore IS NULL 
	and nrestore IS NULL]{N}
 ,0)
-
%<pettycashoperation.amount>%
>= 0
or
( (%<pettycashoperation.flag>% &8) = 0 )
or 
%<pettycashoperation.idfin>% IS NULL 
or
(ISNULL(%<pettycashoperation.idfin>%,'''') = ISNULL(&<pettycashoperation.idfin>&,'''')
 and
 ISNULL(%<pettycashoperation.idupb>%,'''') = ISNULL(&<pettycashoperation.idupb>&,'''')
)
or
%<pettycashoperation.yrestore>% is not NULL
or
%<pettycashoperation.nrestore>% is not NULL
or
[select assured from upb
	where idupb = %<pettycashoperation.idupb>%]{C}
= ''S''
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO017','1','U','pettycashoperation','S','S','S','N','N',{ts '2007-11-28 09:43:28.230'},'SARA','La disponibilità del fondo economale %<idpettycash>% è INSUFFICIENTE!','S','[(	SELECT ISNULL(sum(amount), 0) 
from pettycashoperation 
where yoperation = %<sys_esercizio>% 
and  ( (flag &1) <> 0 )
and idpettycash = %<pettycashoperation.idpettycash>%)]{V}
+
[(	SELECT ISNULL(sum(amount), 0) 
from pettycashoperation 
where yoperation = %<sys_esercizio>% 
and  ( (flag &2) <> 0 )
and idpettycash = %<pettycashoperation.idpettycash>%)]{V}
+
ISNULL(&<pettycashoperation.amount>&, 0)
-
ISNULL(%<pettycashoperation.amount>%, 0)
-
[(	SELECT ISNULL(sum(amount), 0) 
from pettycashoperation 
where yoperation = %<sys_esercizio>% 
and  ( (flag &8) <> 0 )
and idpettycash = %<pettycashoperation.idpettycash>%)]{V}
-
[(	SELECT ISNULL(sum(amount), 0) 
from pettycashoperation 
where yoperation = %<sys_esercizio>% 
and  ( (flag &4) <> 0 )
and idpettycash = %<pettycashoperation.idpettycash>%)]{V} >= 0
or
((%<pettycashoperation.flag>% &8)=0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO017','2','U','pettycashoperation','S','S','S','N','N',{ts '2007-11-28 09:49:54.853'},'SARA','La disponibilità del fondo economale %<idpettycash>% è INSUFFICIENTE!','S','[(	SELECT ISNULL(sum(amount), 0) 
from pettycashoperation 
where yoperation = %<sys_esercizio>% 
and ((flag &1)<>0) 
and idpettycash = %<pettycashoperation.idpettycash>%)]{V}
+
[(	SELECT ISNULL(sum(amount), 0) 
from pettycashoperation 
where yoperation = %<sys_esercizio>% 
and ((flag &2)<>0)  and 
idpettycash = %<pettycashoperation.idpettycash>%)]{V}
-
ISNULL(&<pettycashoperation.amount>&, 0)
+
ISNULL(%<pettycashoperation.amount>%, 0)
-
[(	SELECT ISNULL(sum(amount), 0) 
from pettycashoperation 
where yoperation = %<sys_esercizio>% 
and ((flag &8)<>0) 
and idpettycash = %<pettycashoperation.idpettycash>%)]{V}
-
[(	SELECT ISNULL(sum(amount), 0) 
from pettycashoperation 
where yoperation = %<sys_esercizio>% 
and ((flag &4)<>0) 
and idpettycash = %<pettycashoperation.idpettycash>%)]{V} >= 0
or
((%<pettycashoperation.flag>% &3)=0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO020','1','U','pettycashoperation','S','N','N','N','N',{ts '2007-02-28 14:22:30.343'},'''NINO''','La previsione della voce di spesa %<fin.codefin>% e UPB %<upb.codeupb>% è inferiore alle righe di mandato','S','(
 ISNULL(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0)
	from upbtotal
	where idfin = %<pettycashoperation.idfin>%
	and idupb = %<pettycashoperation.idupb>%
]{N}
,0)
- 
	ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<pettycashoperation.idfin>% 
	and idupb=%<pettycashoperation.idupb>% 
	and nphase = %<sys_maxexpensephase>%]{N}
,0)
   -
	ISNULL(
		[SELECT ISNULL(SUM(amount), 0) 
		FROM pettycashoperation 
		where idfin = %<pettycashoperation.idfin>% 
		and idupb=%<pettycashoperation.idupb>% 
		AND yrestore IS NULL
		AND nrestore IS NULL]{N}
		,0)	
   - %<pettycashoperation.amount>%
)
>= 0

OR
%<pettycashoperation.idfin>% IS NULL
OR
(%<pettycashoperation.idfin>% = &<pettycashoperation.idfin>&
 and
 %<pettycashoperation.idupb>% = &<pettycashoperation.idupb>&
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO020','2','U','pettycashoperation','S','N','N','N','N',{ts '2007-02-28 14:22:51.157'},'''NINO''','La previsione della voce di spesa  %<fin.codefin>% e UPB %<upb.codeupb>% è inferiore alle righe di mandato','S','ISNULL(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0)
	from upbtotal
	where idfin = %<pettycashoperation.idfin>%
	and idupb = %<pettycashoperation.idupb>%
]{N}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<pettycashoperation.idfin>% 
	and idupb=%<pettycashoperation.idupb>% 
	and nphase = %<sys_maxexpensephase>%]{N}
,0)
   -
	ISNULL(
		[SELECT ISNULL(SUM(amount), 0) 
		FROM pettycashoperation 
		where idfin = %<pettycashoperation.idfin>% 
		and idupb=%<pettycashoperation.idupb>% 
		AND yrestore IS NULL
		AND nrestore IS NULL]{N}
		,0)	
   - %<pettycashoperation.amount>%
   + &<pettycashoperation.amount>&
  >=0
OR
(%<pettycashoperation.idfin>% IS NULL)
OR
(ISNULL(%<pettycashoperation.idfin>%,'''') <> ISNULL(&<pettycashoperation.idfin>&,''''))
OR
(ISNULL(%<pettycashoperation.idupb>%,'''') <> ISNULL(&<pettycashoperation.idupb>&,''''))
or
%<pettycashoperation.amount>%<&<pettycashoperation.amount>&

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO022','1','U','pettycashoperation','S','S','S','N','N',{ts '2005-08-26 11:51:43.403'},'''LAZZO''','L''operazione %<pettycashoperation.noperation>% / %<pettycashoperation.yoperation>% del fondo %<pettycash.description>% non può essere imputata al movimento di spesa scelto, %<expenseview.phase>%  %<expenseview.nmov>% del  %<expense.ymov>% , in quanto non vi è disponibilità','S','[SELECT ISNULL(available,0) FROM expensetotal
WHERE idexp =%<pettycashoperation.idexp>%
AND ayear = %<pettycashoperation.yoperation>%]{N}
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = %<pettycashoperation.idexp>%
	]{N}
,0)
+
ISNULL(
	[SELECT SUM(C.curramount)
	FROM pettycashexpense A
	JOIN expense B
	ON A.idexp = B.idexp
	JOIN expensetotal C
	ON C.idexp = B.idexp
	AND A.yoperation = C.ayear
	WHERE B.parentidexp = %<pettycashoperation.idexp>%]{N}
,0)
-
[%<pettycashoperation.amount>%]
+
[&<pettycashoperation.amount>&]
>= 0
OR 
[&<pettycashoperation.amount>&] = [%<pettycashoperation.amount>%]
OR
[%<pettycashoperation.idexp>%] IS NULL
OR
[ISNULL(&<pettycashoperation.idexp>&,'''')] <> [ISNULL(%<pettycashoperation.idexp>%,'''')]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO022','2','U','pettycashoperation','S','S','S','N','N',{ts '2006-11-21 16:37:31.170'},'''SA''','L''operazione %<pettycashoperation.noperation>% / %<pettycashoperation.yoperation>% del fondo %<pettycash.description>% non può essere imputata al movimento di spesa scelto,%<expenseview.phase>%  %<expenseview.nmov>% del  %<expense.ymov>%, in quanto non vi è disponibilità','S','ISNULL(
	[SELECT ISNULL(available,0) FROM expensetotal
	WHERE idexp =%<pettycashoperation.idexp>%
	AND ayear = %<pettycashoperation.yoperation>%]{N}
,0)
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = %<pettycashoperation.idexp>%
	]{N}
,0)
+
ISNULL(
	[SELECT SUM(C.curramount)
	FROM pettycashexpense A
	JOIN expense B
	ON A.idexp = B.idexp
	JOIN expensetotal C
	ON C.idexp = B.idexp
	AND A.yoperation = C.ayear
	WHERE B.parentidexp = %<pettycashoperation.idexp>%]{N}
,0)
-
%<pettycashoperation.amount>%
>= 0
OR 
ISNULL(&<pettycashoperation.idexp>&,'''') = ISNULL(%<pettycashoperation.idexp>%,'''')
OR
%<pettycashoperation.idexp>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO023','1','U','pettycashoperation','S','S','S','N','N',{ts '2005-08-26 11:51:43.453'},'''LAZZO''','L''operazione %<pettycashoperation.noperation>% / %<pettycashoperation.yoperation>% del fondo %<pettycash.description>% non può essere imputata al movimento di spesa scelto, %<expenseview.phase>%  %<expenseview.nmov>% del  %<expense.ymov>%  in quanto non vi è disponibilità','S','([SELECT COUNT(*)
FROM expensetotal
WHERE idexp = %<pettycashoperation.idexp>%
AND ayear > %<pettycashoperation.yoperation>%]{N} = 0)
OR
(
[SELECT ISNULL(MIN(available),0) FROM expensetotal
WHERE idexp =%<pettycashoperation.idexp>%
AND ayear > %<pettycashoperation.yoperation>%]{N} 
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = %<pettycashoperation.idexp>%
	]{N}
,0)
+
ISNULL(
	[SELECT SUM(C.curramount)
	FROM pettycashexpense A
	JOIN expense B
	ON A.idexp = B.idexp
	JOIN expensetotal C
	ON C.idexp = B.idexp
	AND A.yoperation = C.ayear
	WHERE B.parentidexp = %<pettycashoperation.idexp>%]{N}
,0)
-
[%<pettycashoperation.amount>%]
+
[&<pettycashoperation.amount>&]
>= 0
)
OR 
[&<pettycashoperation.amount>&] = [%<pettycashoperation.amount>%]
OR
[%<pettycashoperation.idexp>%] IS NULL
OR
[ISNULL(&<pettycashoperation.idexp>&,'''')] <> [ISNULL(%<pettycashoperation.idexp>%,'''')]
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO023','2','U','pettycashoperation','S','S','S','N','N',{ts '2005-08-26 11:51:43.483'},'''LAZZO''','L''operazione %<pettycashoperation.noperation>% / %<pettycashoperation.yoperation>% del fondo %<pettycash.description>% non può essere imputata al movimento di spesa scelto, %<expenseview.phase>%  %<expenseview.nmov>% del  %<expense.ymov>%,  in quanto non vi è disponibilità','S','([SELECT COUNT(*)
FROM expensetotal
WHERE idexp = %<pettycashoperation.idexp>%
AND ayear > %<pettycashoperation.yoperation>%]{N} = 0)
OR
(
[SELECT ISNULL(MIN(available),0) FROM expensetotal
WHERE idexp =%<pettycashoperation.idexp>%
AND ayear > %<pettycashoperation.yoperation>%]{N}
-
ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation
	WHERE idexp = %<pettycashoperation.idexp>%
	]{N}
,0)
+
ISNULL(
	[SELECT SUM(C.curramount)
	FROM pettycashexpense A
	JOIN expense B
	ON A.idexp = B.idexp
	JOIN expensetotal C
	ON C.idexp = B.idexp
	AND A.yoperation = C.ayear
	WHERE B.parentidexp = %<pettycashoperation.idexp>%]{N}
,0)
- 
[%<pettycashoperation.amount>%]
>= 0
)
OR 
[ISNULL(&<pettycashoperation.idexp>&,'''')] = [ISNULL(%<pettycashoperation.idexp>%,'''')]
OR
[%<pettycashoperation.idexp>%] IS NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO024','1','U','pettycashoperation','S','S','S','N','N',{ts '2007-03-29 15:28:42.670'},'''SARA''','L''imputazione dell''operazione non ? completa: specificare sia l''UPB che la voce di bilancio','S','(
ISNULL(%<pettycashoperation.idupb>%, 0) = 
ISNULL(&<pettycashoperation.idupb>&, 0) 
AND
ISNULL(%<pettycashoperation.idfin>%, 0) = 
ISNULL(&<pettycashoperation.idfin>&, 0) 
)
OR
(%<pettycashoperation.idupb>% IS NULL
AND
%<pettycashoperation.idfin>% IS NULL)
OR
(%<pettycashoperation.idupb>% IS NOT NULL
AND
%<pettycashoperation.idfin>% IS NOT NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO028','1','U','pettycashoperation','S','S','S','N','N',{ts '2007-10-04 11:28:27.017'},'SA','Non ? possibile modificare l''importo di un''operazione gi? reintegrata','S','&<pettycashoperation.amount>&=%<pettycashoperation.amount>%
or &<pettycashoperation.amount>&<>%<pettycashoperation.amount>%
and %<pettycashoperation.yrestore>% is null 
and %<pettycashoperation.nrestore>% is null')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO030','1','U','pettycashoperation','S','S','S','N','N',{ts '2008-02-04 11:57:29.030'},'SARA','Non si può modificare la data contabile dell''operazione perchè è stata fatta la liquidaziona IVA della fattura contabilizzata col Fondo Economale.
','N','(
isnull(&<pettycashoperation.adate>&,'''') = isnull(%<pettycashoperation.adate>%,'''')
)
OR 

([SELECT COUNT(*)
FROM invoicedeferred
JOIN pettycashoperationinvoice
	on invoicedeferred.idinvkind = pettycashoperationinvoice.idinvkind 
	and invoicedeferred.yinv = pettycashoperationinvoice.yinv
	and invoicedeferred.ninv = pettycashoperationinvoice.ninv
WHERE pettycashoperationinvoice.idpettycash = %<pettycashoperation.idpettycash>%
	AND pettycashoperationinvoice.yoperation = %<pettycashoperation.yoperation>%
	AND pettycashoperationinvoice.noperation = %<pettycashoperation.noperation>%]
{I}) =0




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO032','1','U','pettycashoperation','S','S','S','S','S',{ts '2009-11-18 16:26:09.077'},'SA','Non è stata inserira la classificazione SIOPE o la somma dei dettagli ad essa associata non è pari all''importo dell''operazione del Fondo Economale. ','N','(
ISNULL(
[(SELECT SUM(amount) FROM pettycashoperationsorted
	JOIN sorting
		ON sorting.idsor = pettycashoperationsorted.idsor
	JOIN sortingkind
		ON sorting.idsorkind = sortingkind.idsorkind
WHERE sortingkind.codesorkind = ''07U_SIOPE''
AND yoperation = %<pettycashoperation.yoperation>%
AND noperation = %<pettycashoperation.noperation>%
AND idpettycash = %<pettycashoperation.idpettycash>%)]{N} ,0)

=

%<pettycashoperation.amount>%
)

OR

 (%<pettycashoperation.flag>% & 8  = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','1','U','pettycashoperation','S','S','S','N','N',{ts '2011-03-07 16:39:12.453'},'sa','Non si può modificare la data contabile di una operazione del fondo economale se contabilizza una fattura  e il periodo della liquidazione è trascorso.','N','[SELECT COUNT(*)
FROM pettycashoperationinvoice
WHERE yoperation =%<pettycashoperation.yoperation>%
	AND noperation =%<pettycashoperation.noperation>%
	AND idpettycash =%<pettycashoperation.idpettycash>%
]{I} = 0

OR

( %<pettycashoperation.adate>% =  &<pettycashoperation.adate>& )

OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
   JOIN pettycashoperationinvoice PI
	 ON PI.yoperation = &<pettycashoperation.yoperation>&
	AND PI.noperation =&<pettycashoperation.noperation>&
	AND PI.idpettycash =&<pettycashoperation.idpettycash>&
  WHERE IKR.idinvkind=PI.idinvkind
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
&<pettycashoperation.adate>&  >
		ISNULL((SELECT  MAX (stop) FROM ivapay 
		WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &1) <>0  ), {d ''1900-01-01''})

)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
   JOIN pettycashoperationinvoice PI
	 ON PI.yoperation = &<pettycashoperation.yoperation>&
	AND PI.noperation =&<pettycashoperation.noperation>&
	AND PI.idpettycash =&<pettycashoperation.idpettycash>&
  WHERE IKR.idinvkind=PI.idinvkind
	AND (IK.flagactivity=1)
]{I} > 0 
AND
&<pettycashoperation.adate>&  >
		ISNULL((SELECT  MAX (stop) FROM ivapay 
		WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &2) <>0 ), {d ''1900-01-01''})
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','2','U','pettycashoperation','S','S','S','N','N',{ts '2011-03-07 16:39:45.827'},'sa','Non si può modificare la data contabile di una operazione del fondo economale se contabilizza una fattura  e il periodo della liquidazione è trascorso.','N','[SELECT COUNT(*)
FROM pettycashoperationinvoice
WHERE yoperation =%<pettycashoperation.yoperation>%
	AND noperation =%<pettycashoperation.noperation>%
	AND idpettycash =%<pettycashoperation.idpettycash>%
]{I} = 0

OR

( %<pettycashoperation.adate>% =  &<pettycashoperation.adate>& )

OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
   JOIN pettycashoperationinvoice PI
	 ON PI.yoperation = &<pettycashoperation.yoperation>&
	AND PI.noperation =&<pettycashoperation.noperation>&
	AND PI.idpettycash =&<pettycashoperation.idpettycash>&
  WHERE IKR.idinvkind=PI.idinvkind
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
&<pettycashoperation.adate>&  >
		ISNULL((SELECT  MAX (stop) FROM ivapay 
		WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &1) <>0 ), {d ''1900-01-01''})

)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
   JOIN pettycashoperationinvoice PI
	 ON PI.yoperation = &<pettycashoperation.yoperation>&
	AND PI.noperation =&<pettycashoperation.noperation>&
	AND PI.idpettycash =&<pettycashoperation.idpettycash>&
  WHERE IKR.idinvkind=PI.idinvkind
	AND (IK.flagactivity=1)
]{I} > 0 
AND
&<pettycashoperation.adate>&  >
		ISNULL((SELECT  MAX (stop) FROM ivapay 
		WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &2) <>0    ) , {d ''1900-01-01''})
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO027','1','I','pettycashoperationcasualcontract','S','S','S','N','N',{ts '2007-09-04 16:06:37.640'},'NINO','Il codice Fondo Economale non è stato impostato','N','ISNULL(%<pettycashoperationcasualcontract.idpettycash>%,-1)<>-1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO033','1','D','pettycashoperationinvoice','S','S','S','N','N',{ts '2010-04-28 10:09:33.737'},'SARADECA','Non si può cancellare la piccola spesa che contabilizza la Fattura:
%<invoicekind.description>%/%<pettycashoperationinvoice.yinv>%/%<pettycashoperationinvoice.ninv>%, perchè su questa fattura esistono altre operazioni di piccola spesa.','N','[SELECT COUNT(*) 
from pettycashoperationinvoice
where yinv = %<pettycashoperationinvoice.yinv>% 
and ninv = %<pettycashoperationinvoice.ninv>% 
and idinvkind = %<pettycashoperationinvoice.idinvkind>%]{I} = 0 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO027','1','I','pettycashoperationinvoice','S','S','S','N','N',{ts '2007-09-04 16:06:45.860'},'NINO','Il codice Fondo Economale non è stato impostato','N','ISNULL(%<pettycashoperationinvoice.idpettycash>%,-1)<>-1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA028','1','I','pettycashoperationinvoice','S','S','S','N','N',{ts '2011-03-07 16:40:10.377'},'sa','Non si può inserire una operazione del fondo economale che contabilizza una fattura  con data contabile precedente al periodo della liquidazione iva.','N','(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<pettycashoperationinvoice.idinvkind>%
	AND (IK.flagactivity=2 OR IK.flagactivity=3)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM pettycashoperation
WHERE yoperation =%<pettycashoperationinvoice.yoperation>%
	AND noperation =%<pettycashoperationinvoice.noperation>%
	AND idpettycash =%<pettycashoperationinvoice.idpettycash>%
	AND adate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &1) <>0    ), {d ''1900-01-01''}  )
),0)
]{I} = 0
)
OR
(
[SELECT COUNT(*) FROM ivaregisterkind IK 
   JOIN invoicekindregisterkind IKR 
	 ON	IK.idivaregisterkind=IKR.idivaregisterkind
  WHERE IKR.idinvkind=%<pettycashoperationinvoice.idinvkind>%
	AND (IK.flagactivity=1)
]{I} > 0 
AND
[
ISNULL((
SELECT COUNT(*)
FROM pettycashoperation
WHERE yoperation =%<pettycashoperationinvoice.yoperation>%
	AND noperation =%<pettycashoperationinvoice.noperation>%
	AND idpettycash =%<pettycashoperationinvoice.idpettycash>%
	AND adate <= 
		ISNULL((SELECT  MAX (stop) FROM ivapay WHERE yivapay>=%<sys_esercizio>%
		AND  (ivapay.flag &2) <>0   )
		, {d ''1900-01-01''}  )
),0)
]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO027','1','I','pettycashoperationitineration','S','S','S','N','N',{ts '2007-09-04 16:06:54.407'},'NINO','Il codice Fondo Economale non è stato impostato','N','ISNULL(%<pettycashoperationitineration.idpettycash>%,-1)<>-1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO027','2','I','pettycashoperationitineration','S','S','S','N','N',{ts '2007-03-30 10:17:53.517'},'''SARA''','La casuale di contabilizzazione della missione non è correttamente impostata.','S','ISNULL(%<pettycashoperationitineration.movkind>%,'''')<>''''')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO026','1','I','pettycashoperationprofservice','S','S','S','N','N',{ts '2007-09-01 14:32:02.047'},'NINO','Non si può contabilizzare più del compenso netto della prestazione professionale con le operazioni del fondo economale','N','ISNULL(
	[SELECT SUM(amount)
	FROM pettycashoperation PCO
	JOIN pettycashoperationprofservice PCOPF
	ON PCO.idpettycash = PCOPF.idpettycash
	AND PCO.yoperation = PCOPF.yoperation
	AND PCO.noperation = PCOPF.noperation
	WHERE PCOPF.ycon = %<pettycashoperationprofservice.ycon>%
	AND PCOPF.ncon = %<pettycashoperationprofservice.ncon>%]{V}
,0)
<= 
[SELECT feegross FROM profservice
WHERE ycon = %<pettycashoperationprofservice.ycon>%
AND ncon = %<pettycashoperationprofservice.ncon>%]{V}
-
ISNULL(
	[SELECT SUM(employtax) FROM profservicetax
	WHERE ycon = %<pettycashoperationprofservice.ycon>%
	AND ncon = %<pettycashoperationprofservice.ncon>%]{V}
,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO027','1','I','pettycashoperationprofservice','S','S','S','N','N',{ts '2007-09-04 16:07:05.907'},'NINO','Il codice Fondo Economale non è stato impostato','N','ISNULL(%<pettycashoperationprofservice.idpettycash>%,-1)<>-1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO032','1','D','pettycashoperationsorted','S','S','S','S','S',{ts '2009-11-18 16:25:26.127'},'SA','Non è stata inserira la classificazione SIOPE o la somma dei dettagli ad essa associata non è pari all''importo dell''operazione del Fondo Economale.','N','(

isnull([(SELECT SUM(amount) FROM pettycashoperationsorted
	JOIN sorting
		ON sorting.idsor = pettycashoperationsorted.idsor
	JOIN sortingkind
		ON sorting.idsorkind = sortingkind.idsorkind
WHERE sortingkind.codesorkind = ''07U_SIOPE''
AND yoperation = %<pettycashoperationsorted.yoperation>%
AND noperation = %<pettycashoperationsorted.noperation>%
AND idpettycash = %<pettycashoperationsorted.idpettycash>%)]{N} , 0)

=

isnull([(SELECT amount FROM pettycashoperation
	WHERE  yoperation = %<pettycashoperationsorted.yoperation>%
	AND	noperation = %<pettycashoperationsorted.noperation>%
	AND	idpettycash = %<pettycashoperationsorted.idpettycash>%)]{N}
 ,0)
)
OR

 (
[(SELECT flag FROM pettycashoperation
	WHERE  yoperation = %<pettycashoperationsorted.yoperation>%
	AND	noperation = %<pettycashoperationsorted.noperation>%
	AND	idpettycash = %<pettycashoperationsorted.idpettycash>%)]{I}

& 8 = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO032','1','I','pettycashoperationsorted','S','S','S','S','S',{ts '2009-11-18 16:24:31.483'},'SA','Non è stata inserira la classificazione SIOPE o la somma dei dettagli ad essa associata non è pari all''importo dell''operazione del Fondo Economale.','N','(
[(SELECT SUM(amount) FROM pettycashoperationsorted
	JOIN sorting
		ON sorting.idsor = pettycashoperationsorted.idsor
	JOIN sortingkind
		ON sorting.idsorkind = sortingkind.idsorkind
WHERE sortingkind.codesorkind = ''07U_SIOPE''
AND yoperation = %<pettycashoperationsorted.yoperation>%
AND noperation = %<pettycashoperationsorted.noperation>%
AND idpettycash = %<pettycashoperationsorted.idpettycash>%)]{N} 

=

[(SELECT amount FROM pettycashoperation
	WHERE  yoperation = %<pettycashoperationsorted.yoperation>%
	AND	noperation = %<pettycashoperationsorted.noperation>%
	AND	idpettycash = %<pettycashoperationsorted.idpettycash>%)]{N}
)

OR
(
[(SELECT flag FROM pettycashoperation
	WHERE  yoperation = %<pettycashoperationsorted.yoperation>%
	AND	noperation = %<pettycashoperationsorted.noperation>%
	AND	idpettycash = %<pettycashoperationsorted.idpettycash>%)]{I} & 8 = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO032','1','U','pettycashoperationsorted','S','S','S','S','S',{ts '2009-11-18 16:23:30.547'},'SA','Non è stata inserira la classificazione SIOPE o la somma dei dettagli ad essa associata non è pari all''importo dell''operazione del Fondo Economale.','N','[(SELECT SUM(amount) FROM pettycashoperationsorted
	JOIN sorting
		ON sorting.idsor = pettycashoperationsorted.idsor
	JOIN sortingkind
		ON sorting.idsorkind = sortingkind.idsorkind
WHERE sortingkind.codesorkind = ''07U_SIOPE''
AND yoperation = %<pettycashoperationsorted.yoperation>%
AND noperation = %<pettycashoperationsorted.noperation>%
AND idpettycash = %<pettycashoperationsorted.idpettycash>%)]{N} 

=

[(SELECT amount FROM pettycashoperation
	WHERE  yoperation = %<pettycashoperationsorted.yoperation>%
	AND	noperation = %<pettycashoperationsorted.noperation>%
	AND	idpettycash = %<pettycashoperationsorted.idpettycash>%)]{N}


OR
(
[(SELECT flag FROM pettycashoperation
	WHERE  yoperation = %<pettycashoperationsorted.yoperation>%
	AND	noperation = %<pettycashoperationsorted.noperation>%
	AND	idpettycash = %<pettycashoperationsorted.idpettycash>%)]{I} & 8) = 0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO034','1','I','pettycashoperationunderwriting','S','N','S','S','N',{ts '2013-05-16 16:04:20.523'},'sa','La dotazione crediti di Finanziamento: %<pettycashopunderwritingview.underwriting>% , UPB: %<pettycashopunderwritingview.upb>% , Bilancio: %<pettycashopunderwritingview.codefin>% è INSUFFICIENTE!','N','
[(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0)  
from upbunderwritingtotal 
where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
)]{N}
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)
	from underwritingexpensetotal 
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and nphase = %<sys_expensefinphase>%
	]{N}
,0)
-
ISNULL(
	[SELECT sum(POU.amount) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and PO.idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and POU.idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{N}
 ,0)
>= 0

OR
--( (%<pettycashoperation.flag>% &8) = 0 )
([select flag 
from pettycashoperation
where idpettycash = %<pettycashoperationunderwriting.idpettycash>%
	and yoperation= %<pettycashoperationunderwriting.yoperation>%
	and noperation= %<pettycashoperationunderwriting.noperation>%]{I}&8) = 0 
OR
--%<pettycashoperation.yrestore>% is not NULL

[select yrestore from pettycashoperation
	WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
	and noperation= %<pettycashoperationunderwriting.noperation>% 
	and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I} is not null
OR
[(select assured from upb
	where idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C})
]{C}
= ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO035','1','I','pettycashoperationunderwriting','S','S','S','N','S',{ts '2013-05-16 16:05:24.843'},'sa','La dotazione incassi di Finanziamento: %<pettycashopunderwritingview.underwriting>% , UPB: %<pettycashopunderwritingview.upb>% , Bilancio: %<pettycashopunderwritingview.codefin>% è INSUFFICIENTE!','N','[(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0)  
from upbunderwritingtotal 
where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
)]{N}
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%
	]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and PO.idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and POU.idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{N}
 ,0)
>= 0
OR
--( (%<pettycashoperation.flag>% &8) = 0 )
([select flag 
from pettycashoperation
where idpettycash = %<pettycashoperationunderwriting.idpettycash>%
	and yoperation= %<pettycashoperationunderwriting.yoperation>%
	and noperation= %<pettycashoperationunderwriting.noperation>%]{I} &8 ) = 0 
OR
--%<pettycashoperation.yrestore>% is not NULL
[select yrestore from pettycashoperation
	WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
	and noperation= %<pettycashoperationunderwriting.noperation>% 
	and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I} is not null
OR
[(select assured from upb
	where idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C})
]{C}
= ''S''


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO036','1','I','pettycashoperationunderwriting','S','N','S','N','N',{ts '2013-05-16 16:06:36.600'},'sa','La previsione della voce in spesa di Finanziamento: %<pettycashopunderwritingview.underwriting>% , UPB: %<pettycashopunderwritingview.upb>% , Bilancio: %<pettycashopunderwritingview.codefin>% è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbunderwritingtotal 
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%]{N}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and nphase = %<sys_expensefinphase>%
	]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and PO.idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and POU.idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	AND PO.yrestore IS NULL 
	AND PO.nrestore IS NULL]{N}
,0)

>= 0 

or 
([select flag 
from pettycashoperation
where idpettycash = %<pettycashoperationunderwriting.idpettycash>%
	and yoperation= %<pettycashoperationunderwriting.yoperation>%
	and noperation= %<pettycashoperationunderwriting.noperation>%]{I} & 8 ) = 0 

or
--%<pettycashoperation.yrestore>% is not NULL
[select yrestore from pettycashoperation
	WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
	and noperation= %<pettycashoperationunderwriting.noperation>% 
	and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I} is not null

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO037','1','I','pettycashoperationunderwriting','N','S','N','N','N',{ts '2013-06-06 14:27:18.130'},'sa','La previsione della voce in spesa di Finanziamento: %<pettycashopunderwritingview.underwriting>% , UPB: %<pettycashopunderwritingview.upb>% , Bilancio: %<pettycashopunderwritingview.codefin>% è INSUFFICIENTE!','N','(
ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbunderwritingtotal 
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%]{N}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + ISNULL(totalarrears, 0)   
	from underwritingexpensetotal 
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{N}

,0)
-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and PO.idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and POU.idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	AND PO.yrestore IS NULL 
	AND PO.nrestore IS NULL]{N}
,0)
)
>= 0 
 
--( (%<pettycashoperation.flag>% &8) = 0 )
OR
([select flag 
from pettycashoperation
where idpettycash = %<pettycashoperationunderwriting.idpettycash>%
	and yoperation= %<pettycashoperationunderwriting.yoperation>%
	and noperation= %<pettycashoperationunderwriting.noperation>%]{I} & 8 ) = 0 

--%<pettycashoperation.yrestore>% is not NULL
OR
[select yrestore from pettycashoperation
	WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
	and noperation= %<pettycashoperationunderwriting.noperation>% 
	and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I} is not null




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO038','1','I','pettycashoperationunderwriting','S','N','N','N','N',{ts '2013-05-16 16:07:35.247'},'sa','La previsione della voce di spesa Finanziamento: %<pettycashopunderwritingview.underwriting>% , UPB: %<pettycashopunderwritingview.upb>% , Bilancio: %<pettycashopunderwritingview.codefin>% è inferiore alle righe di mandato','N','(
	ISNULL(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0)
	from upbunderwritingtotal
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%]{N}
,0)
- 
	ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%]{N}
,0)
   -
	ISNULL(
	[SELECT SUM(POU.amount)
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and PO.idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and POU.idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	AND PO.yrestore IS NULL 
	AND PO.nrestore IS NULL]{N}
		,0)	

)
>= 0

--( (%<pettycashoperation.flag>% &8) = 0 )
OR
([select flag 
from pettycashoperation
where idpettycash = %<pettycashoperationunderwriting.idpettycash>%
	and yoperation= %<pettycashoperationunderwriting.yoperation>%
	and noperation= %<pettycashoperationunderwriting.noperation>%]{I} & 8 ) = 0 

--%<pettycashoperation.yrestore>% is not NULL
OR
[select yrestore from pettycashoperation
	WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
	and noperation= %<pettycashoperationunderwriting.noperation>% 
	and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I} is not null


')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO034','1','U','pettycashoperationunderwriting','S','N','S','S','N',{ts '2013-05-16 16:08:34.333'},'sa','La dotazione crediti di Finanziamento: %<pettycashopunderwritingview.underwriting>% , UPB: %<pettycashopunderwritingview.upb>% , Bilancio: %<pettycashopunderwritingview.codefin>% è INSUFFICIENTE!','S','[(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0)  
from upbunderwritingtotal 
where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
)]{N}
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)
	from underwritingexpensetotal 
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and nphase =%<sys_expensefinphase>%
	]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and PO.idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and POU.idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and yrestore IS NULL 
	and nrestore IS NULL]{N}
 ,0)
+ 
ISNULL(&<pettycashoperationunderwriting.amount>&, 0)
-
%<pettycashoperationunderwriting.amount>%
>= 0

OR
---( (%<pettycashoperation.flag>% &8) = 0 )
([select flag 
from pettycashoperation
where idpettycash = %<pettycashoperationunderwriting.idpettycash>%
	and yoperation= %<pettycashoperationunderwriting.yoperation>%
	and noperation= %<pettycashoperationunderwriting.noperation>%]{I} & 8 ) = 0 

or
--%<pettycashoperation.yrestore>% is not NULL
[select yrestore from pettycashoperation
	WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
	and noperation= %<pettycashoperationunderwriting.noperation>% 
	and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I} is not null

OR
ISNULL(%<pettycashoperationunderwriting.idunderwriting>%,'''') <> ISNULL(&<pettycashoperationunderwriting.idunderwriting>&,'''')

OR
%<pettycashoperationunderwriting.amount>%<&<pettycashoperationunderwriting.amount>&
OR
[(select assured from upb
	where idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C})
]{C}
= ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO034','2','U','pettycashoperationunderwriting','S','N','S','S','N',{ts '2013-05-16 16:08:50.797'},'sa','La dotazione crediti di Finanziamento: %<pettycashopunderwritingview.underwriting>% , UPB: %<pettycashopunderwritingview.upb>% , Bilancio: %<pettycashopunderwritingview.codefin>% è INSUFFICIENTE!','S','[(SELECT ISNULL(totcreditpart, 0) + 
ISNULL(creditvariation, 0)  
from upbunderwritingtotal 
where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
)]{N}
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)
	from underwritingexpensetotal 
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and nphase =%<sys_expensefinphase>%
	]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and PO.idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and POU.idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and yrestore IS NULL 
	and nrestore IS NULL]{N}
 ,0)
-
%<pettycashoperationunderwriting.amount>%
>= 0

OR
---( (%<pettycashoperation.flag>% &8) = 0 )
([select flag 
from pettycashoperation
where idpettycash = %<pettycashoperationunderwriting.idpettycash>%
	and yoperation= %<pettycashoperationunderwriting.yoperation>%
	and noperation= %<pettycashoperationunderwriting.noperation>%]{I} & 8 ) = 0 


or
--%<pettycashoperation.yrestore>% is not NULL
[select yrestore from pettycashoperation
	WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
	and noperation= %<pettycashoperationunderwriting.noperation>% 
	and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I} is not null

OR
ISNULL(%<pettycashoperationunderwriting.idunderwriting>%,'''') = ISNULL(&<pettycashoperationunderwriting.idunderwriting>&,'''')

OR
[(select assured from upb
	where idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C})
]{C}
= ''S''

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO035','1','U','pettycashoperationunderwriting','S','S','S','N','S',{ts '2013-05-16 16:09:04.977'},'sa','La dotazione incassi di Finanziamento: %<pettycashopunderwritingview.underwriting>% , UPB: %<pettycashopunderwritingview.upb>% , Bilancio: %<pettycashopunderwritingview.codefin>% è INSUFFICIENTE!','S','[(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0)  
from upbunderwritingtotal 
where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
)]{N}
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and nphase =%<sys_maxexpensephase>%
	]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and PO.idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and POU.idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and yrestore IS NULL 
	and nrestore IS NULL]{N}
 ,0)
+ 
ISNULL(&<pettycashoperationunderwriting.amount>&, 0)
-
%<pettycashoperationunderwriting.amount>%
>= 0

OR
---( (%<pettycashoperation.flag>% &8) = 0 )
([select flag 
from pettycashoperation
where idpettycash = %<pettycashoperationunderwriting.idpettycash>%
	and yoperation= %<pettycashoperationunderwriting.yoperation>%
	and noperation= %<pettycashoperationunderwriting.noperation>%]{I} & 8 ) = 0 
or
--%<pettycashoperation.yrestore>% is not NULL
[select yrestore from pettycashoperation
	WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
	and noperation= %<pettycashoperationunderwriting.noperation>% 
	and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I} is not null

OR
ISNULL(%<pettycashoperationunderwriting.idunderwriting>%,'''') <> ISNULL(&<pettycashoperationunderwriting.idunderwriting>&,'''')

OR
%<pettycashoperationunderwriting.amount>%<&<pettycashoperationunderwriting.amount>&
OR
[(select assured from upb
	where idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C})
]{C}
= ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO035','2','U','pettycashoperationunderwriting','S','S','S','N','S',{ts '2013-05-16 16:09:20.777'},'sa','La dotazione incassi di Finanziamento: %<pettycashopunderwritingview.underwriting>% , UPB: %<pettycashopunderwritingview.upb>% , Bilancio: %<pettycashopunderwritingview.codefin>% è INSUFFICIENTE!','S','[(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0)  
from upbunderwritingtotal 
where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
)]{N}
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and nphase =%<sys_maxexpensephase>%
	]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and PO.idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and POU.idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and yrestore IS NULL 
	and nrestore IS NULL]{N}
 ,0)
-
%<pettycashoperationunderwriting.amount>%
>= 0

OR
---( (%<pettycashoperation.flag>% &8) = 0 )
([select flag 
from pettycashoperation
where idpettycash = %<pettycashoperationunderwriting.idpettycash>%
	and yoperation= %<pettycashoperationunderwriting.yoperation>%
	and noperation= %<pettycashoperationunderwriting.noperation>%]{I} & 8 ) = 0 

or
--%<pettycashoperation.yrestore>% is not NULL
[select yrestore from pettycashoperation
	WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
	and noperation= %<pettycashoperationunderwriting.noperation>% 
	and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I} is not null

OR
ISNULL(%<pettycashoperationunderwriting.idunderwriting>%,'''') = ISNULL(&<pettycashoperationunderwriting.idunderwriting>&,'''')

OR
[(select assured from upb
	where idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C})
]{C}
= ''S''

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO036','1','U','pettycashoperationunderwriting','S','N','S','N','N',{ts '2013-05-16 16:09:32.050'},'sa','La previsione della voce in spesa di Finanziamento: %<pettycashopunderwritingview.underwriting>% , UPB: %<pettycashopunderwritingview.upb>% , Bilancio: %<pettycashopunderwritingview.codefin>% è INSUFFICIENTE!','S','ISNULL([
SELECT ISNULL(currentprev,0)+
ISNULL(previsionvariation, 0)
from upbunderwritingtotal 
where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
]{N} 
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from underwritingexpensetotal 
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and nphase = %<sys_expensefinphase>%
]{N} ,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and PO.idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and POU.idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and PO.yrestore IS NULL 
	and PO.nrestore IS NULL]{N}
,0)
+ 
ISNULL(&<pettycashoperationunderwriting.amount>&, 0)
- 
ISNULL(%<pettycashoperationunderwriting.amount>%, 0) >= 0 
or
%<pettycashoperationunderwriting.amount>%<&<pettycashoperationunderwriting.amount>&
or
ISNULL(%<pettycashoperationunderwriting.idunderwriting>%,0) <> ISNULL(&<pettycashoperationunderwriting.idunderwriting>&,0)

or
--( (%<pettycashoperation.flag>% &8) = 0 )
([select flag 
from pettycashoperation
where idpettycash = %<pettycashoperationunderwriting.idpettycash>%
	and yoperation= %<pettycashoperationunderwriting.yoperation>%
	and noperation= %<pettycashoperationunderwriting.noperation>%]{I} & 8 ) = 0 

or
ISNULL(%<pettycashoperationunderwriting.idunderwriting>%,0) <> ISNULL(&<pettycashoperationunderwriting.idunderwriting>&,0)
or
--%<pettycashoperation.yrestore>% is not NULL
[select yrestore from pettycashoperation
	WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
	and noperation= %<pettycashoperationunderwriting.noperation>% 
	and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I} is not null
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO036','2','U','pettycashoperationunderwriting','S','N','S','N','N',{ts '2013-05-16 16:09:42.707'},'sa','La previsione della voce in spesa di Finanziamento: %<pettycashopunderwritingview.underwriting>% , UPB: %<pettycashopunderwritingview.upb>% , Bilancio: %<pettycashopunderwritingview.codefin>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
	ISNULL(previsionvariation, 0)
	from upbunderwritingtotal 
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
]{N} 
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from underwritingexpensetotal 
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and nphase = %<sys_expensefinphase>%
]{N},0) 
-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and PO.idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and POU.idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	AND PO.yrestore IS NULL
	AND PO.nrestore IS NULL]{N}
,0)-
ISNULL(%<pettycashoperationunderwriting.amount>%, 0)
>= 0 
OR
ISNULL(%<pettycashoperationunderwriting.idunderwriting>%,0) = ISNULL(&<pettycashoperationunderwriting.idunderwriting>&,0)

or
--( (%<pettycashoperation.flag>% &8) = 0 )
([select flag 
from pettycashoperation
where idpettycash = %<pettycashoperationunderwriting.idpettycash>%
	and yoperation= %<pettycashoperationunderwriting.yoperation>%
	and noperation= %<pettycashoperationunderwriting.noperation>%]{I} & 8 ) = 0 

or
ISNULL(%<pettycashoperationunderwriting.idunderwriting>%,0) = ISNULL(&<pettycashoperationunderwriting.idunderwriting>&,0)
or
--%<pettycashoperation.yrestore>% is not NULL
[select yrestore from pettycashoperation
	WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
	and noperation= %<pettycashoperationunderwriting.noperation>% 
	and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I} is not null

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO037','1','U','pettycashoperationunderwriting','N','S','N','N','N',{ts '2013-05-16 16:09:53.600'},'sa','La previsione della voce in spesa di Finanziamento: %<pettycashopunderwritingview.underwriting>% , UPB: %<pettycashopunderwritingview.upb>% , Bilancio: %<pettycashopunderwritingview.codefin>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbunderwritingtotal 
where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
]{N} 
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears, 0)   
from underwritingexpensetotal 
where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
and nphase = %<sys_expensefinphase>%]{N},0) 
-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and PO.idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and POU.idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	AND PO.yrestore IS NULL
	AND PO.nrestore IS NULL]{N}
,0)
+ 
ISNULL(&<pettycashoperationunderwriting.amount>&, 0)
- 
ISNULL(%<pettycashoperationunderwriting.amount>%, 0) >= 0 
or
%<pettycashoperationunderwriting.amount>%<&<pettycashoperationunderwriting.amount>&

--( (%<pettycashoperation.flag>% &8) = 0 )
OR
([select flag 
from pettycashoperation
where idpettycash = %<pettycashoperationunderwriting.idpettycash>%
	and yoperation= %<pettycashoperationunderwriting.yoperation>%
	and noperation= %<pettycashoperationunderwriting.noperation>%]{I} & 8 ) = 0 


or
ISNULL(%<pettycashoperationunderwriting.idunderwriting>%,0) <> ISNULL(&<pettycashoperationunderwriting.idunderwriting>&,0)
or
--%<pettycashoperation.yrestore>% is not NULL
[select yrestore from pettycashoperation
	WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
	and noperation= %<pettycashoperationunderwriting.noperation>% 
	and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I} is not null


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO037','2','U','pettycashoperationunderwriting','N','S','N','N','N',{ts '2013-05-16 16:10:03.307'},'sa','La previsione della voce in spesa di Finanziamento: %<pettycashopunderwritingview.underwriting>% , UPB: %<pettycashopunderwritingview.upb>% , Bilancio: %<pettycashopunderwritingview.codefin>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
	ISNULL(previsionvariation, 0)
	from upbunderwritingtotal 
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
]{N} 
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears, 0)   
from underwritingexpensetotal 
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{N},0) 
-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and PO.idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and POU.idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%

	AND yrestore IS NULL
	AND nrestore IS NULL]{N}
,0)-
ISNULL(%<pettycashoperationunderwriting.amount>%, 0)
>= 0 

--( (%<pettycashoperation.flag>% & 8 ) = 0 )
OR
([select flag 
from pettycashoperation
where idpettycash = %<pettycashoperationunderwriting.idpettycash>%
	and yoperation= %<pettycashoperationunderwriting.yoperation>%
	and noperation= %<pettycashoperationunderwriting.noperation>%]{I} & 8 ) = 0 



or
ISNULL(%<pettycashoperationunderwriting.idunderwriting>%,0) = ISNULL(&<pettycashoperationunderwriting.idunderwriting>&,0)


OR
[select yrestore from pettycashoperation
	WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
	and noperation= %<pettycashoperationunderwriting.noperation>% 
	and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I} is not null

--%<pettycashoperation.yrestore>% is not NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO038','1','U','pettycashoperationunderwriting','S','N','N','N','N',{ts '2013-06-19 13:33:58.313'},'assistenza','La previsione della voce di spesa Finanziamento: %<pettycashopunderwritingview.underwriting>% , UPB: %<pettycashopunderwritingview.upb>% , Bilancio: %<pettycashopunderwritingview.codefin>% è inferiore alle righe di mandato','S','(
 ISNULL(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0)
	from upbunderwritingtotal
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
]{N}
,0)
- 
	ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%]{N}
,0)
   -
	ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and PO.idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and POU.idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	AND PO.yrestore IS NULL
	AND PO.nrestore IS NULL]{N}
		,0)	
   - %<pettycashoperationunderwriting.amount>%
)
>= 0

OR
%<pettycashoperationunderwriting.idunderwriting>% = &<pettycashoperationunderwriting.idunderwriting>&
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO038','2','U','pettycashoperationunderwriting','S','N','N','N','N',{ts '2013-06-19 13:34:14.080'},'assistenza','La previsione della voce di spesa Finanziamento: %<pettycashopunderwritingview.underwriting>% , UPB: %<pettycashopunderwritingview.upb>% , Bilancio: %<pettycashopunderwritingview.codefin>% è inferiore alle righe di mandato','S','ISNULL(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0)
	from upbunderwritingtotal
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
]{N}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	and idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%]{N}
,0)
   -
	ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	where PO.idfin =  [SELECT idfin 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{I}
	 and PO.idupb = [SELECT idupb 
			FROM pettycashoperation 
			WHERE idpettycash= %<pettycashoperationunderwriting.idpettycash>% 
			and noperation= %<pettycashoperationunderwriting.noperation>% 
			and yoperation= %<pettycashoperationunderwriting.yoperation>% ]{C}
	and POU.idunderwriting = %<pettycashoperationunderwriting.idunderwriting>%

	AND yrestore IS NULL
	AND nrestore IS NULL]{N}
		,0)	
   - %<pettycashoperationunderwriting.amount>%
   + &<pettycashoperationunderwriting.amount>&
  >=0
OR
ISNULL(%<pettycashoperationunderwriting.idunderwriting>%,'''') <> ISNULL(&<pettycashoperationunderwriting.idunderwriting>&,'''')

OR
%<pettycashoperationunderwriting.amount>%<&<pettycashoperationunderwriting.amount>&



')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','pettycashsetup','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','La configurazione del fondo economale %<pettycashsetup.idpettycash>% per l''esercizio %<esercizio>% è già esistente','S','[SELECT COUNT(*)
FROM pettycashsetup
WHERE idpettycash = %<pettycashsetup.idpettycash>%
AND ayear = %<sys_esercizio>%
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','placcount','S','S','S','N','N',{ts '2011-12-22 11:11:08.657'},'sara','Cancellazione Impossibile! Esistono voci di del conto economico dipendenti dalla voce %<placcountview.placcpart>% - %<placcountview.codeplaccount>%','S','[SELECT COUNT(*) 
FROM placcount 
WHERE paridplaccount = %<placcount.idplaccount>%]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','placcountlookup','S','S','S','N','N',{ts '2007-06-28 16:45:50.997'},'''SARA''','Voce del conto economico già convertita nell''esercizio %<esercizio>%','S','[(SELECT count(*) 
from placcountlookup 
where oldidplaccount = %<placcountlookup.oldidplaccount>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','position','S','S','S','N','N',{ts '2007-11-21 11:21:10.890'},'NINO','Cancellazione Impossibile! Esistono dettagli sulle regole dei grupi esteri collegati alla qualifica %<description>%','S','[(SELECT count(*) 
from foreigngroupruledetail
where idposition = %<position.idposition>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','5','D','position','S','S','S','N','N',{ts '2007-11-21 11:21:29.500'},'NINO','Cancellazione Impossibile! Esistono dettagli delle regole sulle diarie collegati alla qualifica %<description>%','S','[(SELECT count(*) 
from allowanceruledetail
where idposition = %<position.idposition>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','6','D','position','S','S','S','N','N',{ts '2007-09-13 12:07:30.267'},'NINO','Cancellazione Impossibile! Esistono posizioni giuridiche in anagrafica collegate alla qualifica %<description>%','S','[(SELECT count(*) 
from registrylegalstatus 
where idposition = %<position.idposition>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','7','D','position','S','S','S','N','N',{ts '2007-11-21 11:22:28.860'},'NINO','Cancellazione Impossibile! Esistono dettagli sulle regole dei rimborsi spesa collegati alla qualifica %<description>%','S','[(SELECT count(*) 
from itinerationrefundruledetail
where idposition = %<position.idposition>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','position','S','S','S','N','N',{ts '2007-11-21 14:01:26.797'},'SARA','Qualifica %<codeposition>% già esistente','S','[(SELECT count(*) 
from position 
where codeposition = %<position.codeposition>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','position','S','S','S','N','N',{ts '2007-11-21 11:24:31.390'},'NINO','Descrizione della qualifica già esistente','S','[(SELECT count(*) 
from position 
where description = %<position.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','position','S','S','S','N','N',{ts '2005-08-26 11:51:44.467'},'''LAZZO''','Descrizione della qualifica già esistente','S','[(SELECT count(*) 
from position 
where idposition <> %<position.idposition>% 
and description = %<position.description>%)]{N} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','D','proceeds','S','S','S','N','N',{ts '2007-12-13 14:23:55.373'},'NINO','La reversale n. %<proceeds.npro>% / %<proceeds.ypro>% non può essere cancellata. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM005','1','D','proceeds','S','S','S','N','N',{ts '2007-12-05 09:26:26.560'},'SARA','La reversale di incasso %<ypro>% %<npro>% non può essere cancellata in quanto è stata trasmessa al tesoriere','S','%<proceeds.kproceedstransmission>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM051','1','D','proceeds','S','S','S','N','N',{ts '2007-01-10 14:50:17.547'},'''SARA''','La reversale di incasso  n. %<proceeds.npro>% / %<proceeds.ypro>%   non può essere cancellato in quanto esistono altri documenti successivi','S','[SELECT COUNT(*) FROM proceeds
WHERE ypro = %<proceeds.ypro>%
AND npro > %<proceeds.npro>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM084','1','D','proceeds','S','S','S','N','N',{ts '2009-10-16 09:32:13.260'},'SA','Non si può rimuovere dalla distinta la reversale %<proceeds.npro>%/%<proceeds.ypro>%, in quanto contiene movimenti finanziari che contabilizzano dettagli fattura a iva differita.','S','
(&<proceeds.kproceedstransmission>& IS NULL)

OR

[SELECT COUNT(*) FROM incomelast
JOIN incomeinvoice 
	ON incomeinvoice.idinc= incomelast.idinc
JOIN invoice
	ON invoice.idinvkind = incomeinvoice.idinvkind
	AND invoice.yinv = incomeinvoice.yinv
	AND invoice.ninv = incomeinvoice.ninv
WHERE incomelast.kpro = %<proceeds.kpro>%
	AND invoice.flagdeferred = ''S'']{I} = 0


OR 
datediff( day,
[select transmissiondate from proceedstransmission  where
	kproceedstransmission=
	 &<proceeds.kproceedstransmission>&]{D} , getdate())<=5


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','proceeds','S','S','S','N','N',{ts '2007-12-05 15:46:47.027'},'SARA','Cancellazione Impossibile! Esistono movimenti di entrata collegati alla reversale di incasso %<npro>% / %<ypro>%','S','[(SELECT count(*) 
from incomelast 
where incomelast.kpro = %<proceeds.kpro>% )]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','proceeds','S','S','S','N','N',{ts '2007-12-05 15:47:09.060'},'SARA','Cancellazione Impossibile! Esistono movimenti bancari collegati alla reversale di incasso %<npro>% / %<ypro>%','S','[SELECT count(*) 
from banktransaction 
where kpro = %<proceeds.kpro>% ]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM007','1','D','proceeds','S','S','S','N','N',{ts '2009-01-20 12:30:09.447'},'SA','Attenzione esistono MANDATI e/o REVERSALI VUOTE !  Contattare il servizio assistenza.','N','[SELECT COUNT(*) FROM payment
WHERE
	(SELECT COUNT(*) 
	FROM expenselast 
	WHERE expenselast.kpay = payment.kpay) = 0
		AND payment.ypay=%<sys_esercizio>%]{I} = 0
AND
[SELECT COUNT(*) FROM proceeds
WHERE
	(SELECT COUNT(*) 
	FROM incomelast 
	WHERE incomelast.kpro = proceeds.kpro) = 0
	AND proceeds.ypro=%<sys_esercizio>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','I','proceeds','S','S','S','N','N',{ts '2007-12-13 14:21:32.483'},'NINO','La reversale n. %<proceeds.npro>% / %<proceeds.ypro>% non può essere inserita. Esercizio  %<esercizio>% chiuso','N','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM017','1','I','proceeds','S','S','S','N','N',{ts '2008-02-15 15:05:55.727'},'NINO','La data contabile della reversale %<npro>%/%<ypro>% deve essere uguale o maggiore rispetto a quella dell''ultima reversale inserita','N','--post
%<proceeds.adate>% >= 
[SELECT MAX(adate)
FROM proceeds
WHERE ypro = %<proceeds.ypro>%]{D}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM060','1','I','proceeds','S','S','S','N','N',{ts '2007-12-05 15:24:45.373'},'SARA','La reversale n. %<proceeds.npro>% / %<proceeds.ypro>% ha una imputazione (competenza / residui) differente rispetto ai movimenti di entrata associati','N','ISNULL(
	[SELECT proceeds_flag FROM config WHERE ayear = %<proceeds.ypro>%]{I}
,0) & 8 <> 8
OR
[SELECT COUNT(*)
FROM incomelastview
WHERE incomelastview.kpro = %<proceeds.kpro>%
AND (totflag & 1)*2 <>  (%<proceeds.flag>% & 2)
]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM062','1','I','proceeds','S','S','S','N','N',{ts '2008-01-14 11:36:31.983'},'NINO','Non può essere generata la reversale in quanto non è stato effettuato il trasferimento della configurazione di bilancio','S','[SELECT flag FROM accountingyear
WHERE ayear = %<proceeds.ypro>% - 1]{I} & 0x0F
>= 3
OR
%<proceeds.ypro>% < %<sys_esercizio>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM064','1','I','proceeds','S','S','S','N','N',{ts '2009-01-05 12:30:22.710'},'SA','La reversale n. %<proceeds.npro>% / %<proceeds.ypro>% non può essere inserita in quanto appartiene ad un anno precendente a quello corrente','N','%<proceeds.ypro>% >= YEAR(GETDATE())
OR
(
%<proceeds.ypro>% = YEAR(GETDATE())-1
AND
MONTH(GETDATE())=1
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM084','1','I','proceeds','S','S','S','N','N',{ts '2009-10-16 09:33:24.357'},'SA','Non si può aggiungere alla distinta la reversale %<proceeds.npro>%/%<proceeds.ypro>%, in quanto contiene movimenti finanziari che contabilizzano dettagli fattura a iva differita.','S','
(%<proceeds.kproceedstransmission>% IS  NULL)

OR

[SELECT COUNT(*) FROM incomelast
JOIN incomeinvoice 
	ON incomeinvoice.idinc= incomelast.idinc
JOIN invoice
	ON invoice.idinvkind = incomeinvoice.idinvkind
	AND invoice.yinv = incomeinvoice.yinv
	AND invoice.ninv = incomeinvoice.ninv
WHERE incomelast.kpro = %<proceeds.kpro>%
	AND invoice.flagdeferred = ''S'']{I} = 0


OR 
datediff( day,
[select transmissiondate from proceedstransmission  where
	kproceedstransmission=
	 %<proceeds.kproceedstransmission>%]{D} , getdate())<=5


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM092','1','I','proceeds','S','S','S','N','N',{ts '2011-05-30 09:46:26.890'},'sa','E'' necessario specificare il Tipo Bollo per Salvare la Reversale','N','[SELECT codetreasurer FROM treasurer
	WHERE idtreasurer = %<proceeds.idtreasurer>%]{C} <> ''CARI''

OR


%<proceeds.idstamphandling>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM113','1','I','proceeds','S','S','S','N','N',{ts '2013-03-19 09:49:07.987'},'sa','Non può essere salvata una Reversale di incasso senza Cassiere.','S','%<proceeds.idtreasurer>% is not null')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN018','1','I','proceeds','S','S','S','N','N',{ts '2009-03-02 15:05:35.380'},'SARA','L'' istituto cassiere relativo alla reversale di incasso n° %<proceeds.npro>% / %<proceeds.ypro>% non è coerente con quello del mandato del pagamento principale.','N','[SELECT COUNT(*)
FROM income
JOIN    incomelast ILPRINC
		ON ILPRINC.idinc = income.idinc
		AND ILPRINC.kpro = %<proceeds.kpro>%
JOIN expenselast
		ON expenselast.idexp = income.idpayment
JOIN payment
		ON payment.kpay = expenselast.kpay 
AND ISNULL(payment.idtreasurer,0) <> ISNULL(%<proceeds.idtreasurer>%,0)
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR004','1','I','proceeds','S','S','S','N','N',{ts '2009-04-01 09:45:33.230'},'SA','L''utente non è abilitato a modificare la data di stampa della reversale.','S','%<proceeds.printdate>% is null
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''rev_ufficiale''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM006','1','I','proceeds','S','S','S','N','N',{ts '2009-01-20 12:30:12.900'},'SA','errore di programma','N','[SELECT COUNT(*) FROM 
incomelast
WHERE incomelast.kpro = %<proceeds.kpro>%]{I} > 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM007','1','I','proceeds','S','S','S','N','N',{ts '2009-01-20 12:30:16.383'},'SA','Attenzione esistono MANDATI e/o REVERSALI VUOTE !  Contattare il servizio assistenza.','N','[SELECT COUNT(*) FROM payment
WHERE
	(SELECT COUNT(*)
	FROM expenselast
	WHERE expenselast.kpay = payment.kpay) = 0
		AND payment.ypay=%<sys_esercizio>%]{I} = 0
AND
[SELECT COUNT(*) FROM proceeds
WHERE
	(SELECT COUNT(*)
	FROM incomelast
	WHERE incomelast.kpro = proceeds.kpro) = 0
		AND proceeds.ypro=%<sys_esercizio>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('BOLLE002','2','U','proceeds','S','S','S','N','N',{ts '2013-07-03 12:55:09.403'},'assistenza','La reversale n° %<proceeds.npro>%/%<proceeds.ypro>% contiene incassi associati a provvisori che presentano ancora un residuo.  Le regolarizzazioni parziali sono ammesse esclusivamente se inviate congiuntamente alla tesoreria .
','N','(%<proceeds.kproceedstransmission>% IS NULL)
OR
(
(ISNULL(%<proceeds.kproceedstransmission>%,0) = 
ISNULL(&<proceeds.kproceedstransmission>&,0))
)
OR
[(SELECT COUNT(*)
from billview
JOIN incomelast 
	ON incomelast.nbill = billview.nbill
	and billview.ybill = %<sys_esercizio>%
	and billview.billkind =''C''
JOIN proceeds
	 ON incomelast.kpro = %<proceeds.kpro>%
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE ISNULL(treasurer.idbank,'''')  = ''02008''
AND    (ISNULL(billview.total,0) - ISNULL(billview.covered,0)) >0 )]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','U','proceeds','S','S','S','N','N',{ts '2007-12-13 14:24:02.903'},'NINO','La reversale n. %<proceeds.npro>% / %<proceeds.ypro>% non può essere modificata. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA005','1','U','proceeds','S','S','S','N','N',{ts '2007-12-05 09:15:52.217'},'SARA','Attenzione, la liquidazione IVA del periodo che comprende la data di registrazione %<adate>% è stata effettuata. Se si procede bisognerà effettuare una nuova liquidazione','S','(
	ISNULL(
		[SELECT deferredincomephase
		FROM config
		WHERE ayear = %<sys_esercizio>%]{C}
	,''X'') <> ''E''
)
OR
(
	ISNULL(%<proceeds.adate>%,{D ''1900-01-01''}) = ISNULL(&<proceeds.adate>&,{D ''1900-01-01''})
)
OR
(
	[SELECT COUNT(*) FROM incomeinvoice
	JOIN income
	ON incomeinvoice.idinc = income.idinc
	JOIN  incomelast
		ON incomelast.idinc= income.idinc
	WHERE incomelast.kpro = %<proceeds.kpro>%
	]{I} = 0
)
OR
(
	[SELECT COUNT(*) FROM invoicedeferred
	JOIN incomeinvoice
	ON invoicedeferred.idinvkind = incomeinvoice.idinvkind
	AND invoicedeferred.yinv = incomeinvoice.yinv
	AND invoicedeferred.ninv = incomeinvoice.ninv
	JOIN income
		ON income.idinc = incomeinvoice.idinc
	JOIN  incomelast
		ON incomelast.idinc= income.idinc
	WHERE incomelast.kpro = %<proceeds.kpro>%
]{I} = 0
)
OR
(
	[SELECT COUNT(*)
	FROM invoice
	JOIN invoicedeferred
	ON invoice.idinvkind = invoicedeferred.idinvkind
	AND invoice.yinv = invoicedeferred.yinv
	AND invoice.ninv = invoicedeferred.ninv
	JOIN incomeinvoice
	ON invoice.idinvkind = incomeinvoice.idinvkind
	AND invoice.yinv = incomeinvoice.yinv
	AND invoice.ninv = incomeinvoice.ninv
	JOIN income
	ON income.idinc = incomeinvoice.idinc
	JOIN  incomelast
		ON incomelast.idinc= income.idinc
	WHERE incomelast.kpro = %<proceeds.kpro>%
	AND invoice.flagdeferred = ''S''
]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('GEIVA005','2','U','proceeds','S','S','S','N','N',{ts '2007-12-05 09:17:38.060'},'SARA','Attenzione, la liquidazione IVA del periodo che comprende la data di registrazione %<adate>% è stata effettuata. Se si procede bisognerà effettuare una nuova liquidazione','S','(
	ISNULL(
		[SELECT deferredincomephase
		FROM config
		WHERE ayear = %<sys_esercizio>%]{C}
	,''X'') <> ''E''
)
OR
(
	ISNULL(%<proceeds.adate>%,{D ''1900-01-01''}) = ISNULL(&<proceeds.adate>&,{D ''1900-01-01''})
)
OR
(
	[SELECT COUNT(*) FROM incomevar
	JOIN income
		ON income.idinc = incomevar.idinc
	JOIN  incomelast
		ON incomelast.idinc= income.idinc
	WHERE incomelast.kpro = %<proceeds.kpro>%
	AND incomevar.idinvkind IS NOT NULL]{I} = 0
)
OR
(
	[SELECT COUNT(*) FROM invoicedeferred
	JOIN incomevar
	ON invoicedeferred.idinvkind = incomevar.idinvkind
	AND invoicedeferred.yinv = incomevar.yinv
	AND invoicedeferred.ninv = incomevar.ninv
	JOIN income
	ON incomevar.idinc = income.idinc
	JOIN  incomelast
		ON incomelast.idinc= income.idinc
	WHERE incomelast.kpro = %<proceeds.kpro>%
]{I} = 0
)
OR
(
	[SELECT COUNT(*)
	FROM invoice
	JOIN invoicedeferred
	ON invoice.idinvkind = invoicedeferred.idinvkind
	AND invoice.yinv = invoicedeferred.yinv
	AND invoice.ninv = invoicedeferred.ninv
	JOIN incomevar
	ON invoice.idinvkind = incomevar.idinvkind
	AND invoice.yinv = incomevar.yinv
	AND invoice.ninv = incomevar.ninv
	JOIN income
	ON income.idinc = incomevar.idinc
	JOIN  incomelast
		ON incomelast.idinc= income.idinc
	WHERE incomelast.kpro = %<proceeds.kpro>%
	AND invoice.flagdeferred = ''S''
]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM005','1','U','proceeds','S','S','S','N','N',{ts '2007-12-05 09:26:58.967'},'SARA','La reversale di incasso %<ypro>% %<npro>% non può essere modificata in quanto è stata trasmessa al tesoriere','S','%<proceeds.kproceedstransmission>% IS NULL
OR
&<proceeds.kproceedstransmission>& IS NULL
OR
(
(%<proceeds.annulmentdate>% is null 
	and &<proceeds.annulmentdate>& is null)
or
(%<proceeds.annulmentdate>% = &<proceeds.annulmentdate>&)
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM017','1','U','proceeds','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','La data contabile della reversale %<npro>%/%<ypro>% deve rispettare la cronologia dei documenti esistenti ','N','--post
%<proceeds.adate>% >= 
(ISNULL([SELECT MAX(adate) from proceeds 
where npro < %<proceeds.npro>% 
AND ypro = %<proceeds.ypro>%]{D},
%<proceeds.adate>%))
AND
%<proceeds.adate>% <= 
(ISNULL([SELECT MIN(adate) from proceeds where 
npro > %<proceeds.npro>% 
AND ypro = %<proceeds.ypro>%]{D},
%<proceeds.adate>%))')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM021','1','U','proceeds','S','S','S','N','N',{ts '2007-12-06 09:24:09.157'},'SARA','FONDO DI CASSA INIZIALE + totale delle reversali trasmesse in banca ed ESITATE deve essere maggiore od uguale al totale dei pagamenti (anche non inclusi in un mandato)','N','--post
[SELECT ISNULL(currentfloatfund,0) FROM currentcashtotal WHERE ayear = %<sys_esercizio>%]{N} >= 0
OR
(ISNULL(&<proceeds.kproceedstransmission>&,0) = ISNULL(%<proceeds.kproceedstransmission>%,0))')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM037','1','U','proceeds','S','S','S','N','N',{ts '2011-07-27 10:45:16.343'},'sara','Non è possibile inserire una reversale nell''elenco di trasmissione se non è stato imputato il codice SIOPE','S','ISNULL([(SELECT SUM(incomesorted.amount) 
	FROM incomesorted 
	JOIN income 
		ON income.idinc = incomesorted.idinc 
	JOIN incomelast
		ON incomelast.idinc = income.idinc
	join sorting
		ON incomesorted.idsor = sorting.idsor
	join sortingkind
		on sortingkind.idsorkind = sorting.idsorkind
	WHERE ''SIOPE''= sortingkind.codesorkind 
		AND incomelast.kpro = %<proceeds.kpro>%
	AND incomesorted.ayear= %<proceeds.ypro>% )]{V} 
	,0) =
ISNULL( [(SELECT SUM(curramount) from incometotal 
		JOIN income 
			ON incometotal.idinc = income.idinc 
		JOIN incomelast
			ON incomelast.idinc = income.idinc
	WHERE incomelast.kpro = %<proceeds.kpro>% 
	AND incometotal.ayear= %<proceeds.ypro>% 
)]{V}
	,0)
OR 
ISNULL(%<proceeds.kproceedstransmission>%,0) = ISNULL(&<proceeds.kproceedstransmission>&,0)
OR 
%<proceeds.kproceedstransmission>% is null
OR
%<proceeds.ypro>% > 2006 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM052','1','U','proceeds','S','S','S','N','N',{ts '2008-03-11 10:31:41.130'},'SARA','Non è possibile inserire una reversale nell''elenco di trasmissione se non è stato imputato il codice SIOPE','N','ISNULL([(SELECT SUM(incomesorted.amount) FROM incomesorted 
		JOIN income 
			ON income.idinc = incomesorted.idinc 
		JOIN incomelast
			ON incomelast.idinc = income.idinc
		join sorting
			ON incomesorted.idsor = sorting.idsor
		join sortingkind
			on sortingkind.idsorkind = sorting.idsorkind
	WHERE ''07E_SIOPE''= sortingkind.codesorkind 
	AND incomelast.kpro = %<proceeds.kpro>% 
	AND incomesorted.ayear= %<proceeds.ypro>% 
	)]{V} 
	,0) =
ISNULL( [(SELECT SUM(curramount) from incometotal 
		JOIN income 
			ON incometotal.idinc = income.idinc 
		JOIN incomelast
			ON incomelast.idinc = income.idinc		
		WHERE incomelast.kpro = %<proceeds.kpro>% 
			AND incometotal.ayear= %<proceeds.ypro>% 
)]{V}
	,0)
OR 
ISNULL(%<proceeds.kproceedstransmission>%,0) = ISNULL(&<proceeds.kproceedstransmission>&,0)
OR 
%<proceeds.kproceedstransmission>% is null
OR
%<proceeds.ypro>% < 
ISNULL([SELECT ISNULL(start,1900) FROM sortingkind
WHERE codesorkind = ''07E_SIOPE'']{I},3000)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM066','1','U','proceeds','S','S','S','N','N',{ts '2013-03-22 14:37:38.357'},'sa','Deve essere ricalcolata la situazione finanziaria effettiva nell''esercizio precedente poiché non risulta allineata con i movimenti finanziari effettivamente inseriti','N','(ISNULL(%<proceeds.kproceedstransmission>%,0) = 
ISNULL(&<proceeds.kproceedstransmission>&,0))
OR
([(SELECT COUNT(*) 
  FROM currentcashtotal 
  WHERE ayear = (%<sys_esercizio>% - 1))]{I} = 0)
OR
([SELECT  ISNULL(startfloatfund,0)  
   FROM surplus WHERE ayear = %<sys_esercizio>% ]{V}
= 
[SELECT ISNULL(currentfloatfund,0) 
   FROM currentcashtotal 
  WHERE ayear = (%<sys_esercizio>% - 1)]{V}
)
OR
(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = (%<sys_esercizio>%-1)]{I}
,0) & 0x0F)<4
OR
(ISNULL(
	[select locked from surplus where ayear = (%<sys_esercizio>% - 1)]{C},
	''N'') = ''S''
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM075','1','U','proceeds','S','S','S','N','N',{ts '2008-11-10 15:17:59.703'},'SARA','Non si può modificare il cassiere se la Reversale di Incasso è stata trasmessa in banca.','S','(
ISNULL(%<proceeds.idtreasurer>%,'''')=ISNULL(&<proceeds.idtreasurer>&,'''') 
)

OR

( %<proceeds.kproceedstransmission>% IS NULL )
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM082','1','U','proceeds','S','S','S','N','N',{ts '2009-09-14 09:40:25.390'},'SA','La reversale di incasso %<proceeds.npro>%/%<proceeds.ypro>% non può essere inserita in una distinta avente data inferiore a quella della reversale.','N','(%<proceeds.kproceedstransmission>% IS NULL)

OR

ISNULL(%<proceeds.kproceedstransmission>%,0) = ISNULL(&<proceeds.kproceedstransmission>&,0)

OR
%<proceeds.adate>%<=
[(select transmissiondate
from proceedstransmission
where kproceedstransmission= %<proceeds.kproceedstransmission>%)]{D}


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM084','1','U','proceeds','S','S','S','N','N',{ts '2009-10-16 09:28:46.503'},'SA','Non si può rimuovere dalla distinta la reversale %<proceeds.npro>%/%<proceeds.ypro>%, in quanto contiene movimenti finanziari che contabilizzano dettagli fattura a iva differita.','S','
ISNULL(%<proceeds.kproceedstransmission>%,0) = ISNULL(&<proceeds.kproceedstransmission>&,0)

OR (%<proceeds.kproceedstransmission>% IS NOT NULL)

OR

[SELECT COUNT(*) FROM incomelast
JOIN incomeinvoice 
	ON incomeinvoice.idinc= incomelast.idinc
JOIN invoice
	ON invoice.idinvkind = incomeinvoice.idinvkind
	AND invoice.yinv = incomeinvoice.yinv
	AND invoice.ninv = incomeinvoice.ninv
WHERE incomelast.kpro = %<proceeds.kpro>%
	AND invoice.flagdeferred = ''S'']{I} = 0


OR 
datediff( day,
[select transmissiondate from proceedstransmission  where
	kproceedstransmission=
	 &<proceeds.kproceedstransmission>&]{D} , getdate())<=5


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM084','2','U','proceeds','S','S','S','N','N',{ts '2009-10-16 09:29:53.710'},'SA','Non si può aggiungere alla distinta la reversale %<proceeds.npro>%/%<proceeds.ypro>%, in quanto contiene movimenti finanziari che contabilizzano dettagli fattura a iva differita.','S','
ISNULL(%<proceeds.kproceedstransmission>%,0) = ISNULL(&<proceeds.kproceedstransmission>&,0)

OR (%<proceeds.kproceedstransmission>% IS  NULL)

OR

[SELECT COUNT(*) FROM incomelast
JOIN incomeinvoice 
	ON incomeinvoice.idinc= incomelast.idinc
JOIN invoice
	ON invoice.idinvkind = incomeinvoice.idinvkind
	AND invoice.yinv = incomeinvoice.yinv
	AND invoice.ninv = incomeinvoice.ninv
WHERE incomelast.kpro = %<proceeds.kpro>%
	AND invoice.flagdeferred = ''S'']{I} = 0


OR 
datediff( day,
[select transmissiondate from proceedstransmission  where
	kproceedstransmission=
	 %<proceeds.kproceedstransmission>%]{D} , getdate())<=5


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM085','1','U','proceeds','S','S','S','N','N',{ts '2011-06-14 11:54:12.390'},'sa','Non è possibile  modificare un elenco di trasmissione di data diversa da quella della sua creazione.','N','%<proceeds.kproceedstransmission>% is null

OR

&<proceeds.kproceedstransmission>&   is  NOT null


OR
datediff( day,
[select transmissiondate from proceedstransmission where
  kproceedstransmission =%<proceeds.kproceedstransmission>%]{D}
,getdate())<=5

or
[(select count(*) from incomelast IL
  where  IL.kpro= %<proceeds.kpro>%
   and (IL.flag & 1) = 0
)]{I}=0

      ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM085','2','U','proceeds','S','S','S','N','N',{ts '2011-06-14 12:04:06.517'},'sa','Non è possibile  rimuovere una reversale da un elenco di trasmissione in data differente da quella della sua creazione.','N','%<proceeds.kproceedstransmission>% is NOT null

OR

&<proceeds.kproceedstransmission>&   is  null

OR
datediff( day,
[select transmissiondate from proceedstransmission where
  kproceedstransmission =&<proceeds.kproceedstransmission>&]{D}
,getdate())<=5

or
[(select count(*) from incomelast IL
  where  IL.kpro= &<proceeds.kpro>&
   and (IL.flag & 1) = 0
)]{I}=0

      ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM092','1','U','proceeds','S','S','S','N','N',{ts '2011-05-30 09:46:31.627'},'sa','E'' necessario specificare il Tipo Bollo per poter Salvare la Reversale','N','[SELECT codetreasurer FROM treasurer
	WHERE idtreasurer = %<proceeds.idtreasurer>%]{C} <> ''CARI''

OR


%<proceeds.idstamphandling>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM095','1','U','proceeds','S','S','S','N','N',{ts '2011-07-27 12:40:24.937'},'sara','La reversale %<proceeds.npro>% del %<proceeds.ypro>% deve avere lo stesso tesoriere della relativa distinta di trasmissione.','N','%<proceeds.kproceedstransmission>% IS NULL
OR
(
	ISNULL(%<proceeds.idtreasurer>%,0)  = 
	[SELECT idtreasurer FROM proceedstransmission 
	WHERE  proceedstransmission.kproceedstransmission =  
	ISNULL(%<proceeds.kproceedstransmission>%,0) ]{I}
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM096','1','U','proceeds','S','S','S','N','N',{ts '2011-09-19 12:45:37.420'},'sara','Non è possibile rimuovere ila reversale %<proceeds.npro>% del %<proceeds.ypro>% dalla distinta di trasmissione in quanto sono state già trasmesse al tesoriere variazioni dello stesso.','S','--non viene gestito l''ordinativo informatico
(
(ISNULL([SELECT ISNULL(treasurer.flagedisp,''N'') 
FROM proceeds  
JOIN treasurer 
	ON proceeds.idtreasurer = treasurer.idtreasurer
WHERE proceeds.kpro =  %<proceeds.kpro>%]{C},''N'' )= ''N'')
)
OR
(
ISNULL(%<proceeds.kproceedstransmission>%,0) = ISNULL(&<proceeds.kproceedstransmission>&,0)
)

OR (%<proceeds.kproceedstransmission>% IS NOT NULL)

OR

[SELECT COUNT(*) FROM incomevar 
JOIN incomelast
ON incomelast.idinc = incomevar.idinc
WHERE incomelast.kpro = %<proceeds.kpro>%	
AND incomevar.kproceedstransmission IS NOT NULL
AND ISNULL(incomevar.autokind,0) IN (10,11,22)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM097','1','U','proceeds','S','S','S','N','N',{ts '2011-09-22 16:56:57.410'},'sa','Non è possibile rimuovere la Reversale N. %<proceeds.npro>% dalla distinta di trasmissione, perchè uno o più movimenti è stato esitato.','S','
isnull(%<proceeds.kproceedstransmission>% ,0) = isnull(&<proceeds.kproceedstransmission>&  ,0) 

OR

[SELECT count(*) 
from banktransaction 
where kpro = %<proceeds.kpro>% ]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM113','1','U','proceeds','S','S','S','N','N',{ts '2013-03-19 09:53:32.890'},'sa','Non può essere salvata una Reversale di incasso senza Cassiere.','S','%<proceeds.idtreasurer>% is not null')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN018','1','U','proceeds','S','S','S','N','N',{ts '2009-03-02 15:10:28.270'},'SARA','L'' istituto cassiere relativo alla reversale di incasso n° %<proceeds.npro>% / %<proceeds.ypro>% non è coerente con quello del mandato del pagamento principale.','N','[SELECT COUNT(*)
FROM income
JOIN    incomelast ILPRINC
		ON ILPRINC.idinc = income.idinc
		AND ILPRINC.kpro = %<proceeds.kpro>%
JOIN expenselast
		ON expenselast.idexp = income.idpayment
JOIN payment
		ON payment.kpay = expenselast.kpay 
AND ISNULL(payment.idtreasurer,0) <> ISNULL(%<proceeds.idtreasurer>%,0)
]{I} = 0
OR
%<proceeds.idtreasurer>% = &<proceeds.idtreasurer>&
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR004','1','U','proceeds','S','S','S','N','N',{ts '2008-04-18 14:27:59.937'},'NINO','L''utente non è abilitato a modificare la data di stampa della reversale.','S','ISNULL(&<proceeds.printdate>&, {d ''1900-01-01''}) = ISNULL(%<proceeds.printdate>%, {d ''1900-01-01''})
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename = ''rev_ufficiale''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM007','1','U','proceeds','S','S','S','N','N',{ts '2009-01-20 12:30:19.337'},'SA','Attenzione esistono MANDATI e/o REVERSALI VUOTE !  Contattare il servizio assistenza.','N','[SELECT COUNT(*) FROM payment
WHERE
	(SELECT COUNT(*) 
	FROM expenselast 
	WHERE expenselast.kpay = payment.kpay) = 0
	AND payment.ypay = %<sys_esercizio>%
]{I} = 0

AND

[
SELECT COUNT(*) FROM proceeds
WHERE
	(SELECT COUNT(*) 
	FROM incomelast 
	WHERE incomelast.kpro = proceeds.kpro) = 0
	AND proceeds.ypro = %<sys_esercizio>%
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','D','proceedspart','S','S','S','N','S',{ts '2008-03-11 12:50:57.583'},'NINO','Non possono essere cancellate assegnazioni di incassi. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO012','1','D','proceedspart','S','S','S','N','S',{ts '2012-07-31 13:34:59.783'},'sa','La dotazione incassi della voce %<fin.codefin>% è INSUFFICIENTE!','S','[(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0)  
from upbtotal 
where idfin = %<proceedspart.idfin>%
 and idupb = %<proceedspart.idupb>% 
)]{V}
- 
ISNULL(%<proceedspart.amount>%, 0) 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<proceedspart.idfin>% 
 	and idupb  =  %<proceedspart.idupb>% 
	and nphase = %<sys_maxexpensephase>%
	]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<proceedspart.idfin>% 
 	and idupb = %<proceedspart.idupb>% 
	and yrestore IS NULL 
	and nrestore IS NULL]{V}
 ,0)
>= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO035','2','D','proceedspart','S','S','S','N','S',{ts '2013-06-19 12:40:52.270'},'assistenza','La dotazione incassi di Finanziamento: %<proceedspartview.underwriting>% , UPB: %<proceedspartview.upb>% , Bilancio: %<proceedspartview.codefin>% è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I},0)=0)  
OR

isnull([(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0)  
from upbunderwritingtotal 
where idfin = %<proceedspart.idfin>%
	and idupb= %<proceedspart.idupb>%
	and idunderwriting= [select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I}
)]{N} ,0)
- 
ISNULL(%<proceedspart.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) +ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin = %<proceedspart.idfin>% 
	and idupb= %<proceedspart.idupb>%
	and idunderwriting= [select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I}
	and nphase = %<sys_maxexpensephase>%
	]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = %<proceedspart.idfin>%
	and PO.idupb= %<proceedspart.idupb>%
	and POU.idunderwriting =  [select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I}
	and PO. yrestore IS NULL 
	and PO.nrestore IS NULL]{N}
 ,0)

>= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS001','1','D','proceedspart','S','S','S','N','S',{ts '2012-07-31 14:08:45.000'},'sa','La dotazione degli incassi è NEGATIVA!','S','[(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbtotal 
where idfin = %<proceedspart.idfin>%
and idupb= %<proceedspart.idupb>%
)]{V} 
- 
ISNULL(%<proceedspart.amount>%, 0) >= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS002','1','D','proceedspart','S','S','S','N','S',{ts '2012-07-31 13:47:34.957'},'sa','La dotazione incassi della voce %<fin.codefin>% è INSUFFICIENTE!','S','[(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0)  
from upbtotal 
where idfin = %<proceedspart.idfin>%
 and idupb = %<proceedspart.idupb>%
)]{V}
- 
ISNULL(%<proceedspart.amount>%, 0) 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<proceedspart.idfin>% 
 	and idupb  = %<proceedspart.idupb>%
	and nphase = %<sys_maxexpensephase>%
	]{V}
,0)
>= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS006','1','D','proceedspart','S','S','S','N','S',{ts '2013-05-21 10:42:29.173'},'sa','La dotazione incassi di Finanziamento: %<proceedspartview.underwriting>% , UPB: %<proceedspartview.upb>% , Bilancio: %<proceedspartview.codefin>% è NEGATIVA!','S','(isnull([select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I},0)=0)  
OR

[(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal 
where idfin = %<proceedspart.idfin>%
and idupb= %<proceedspart.idupb>%
and idunderwriting= [select idunderwriting 
			from income 
			where idinc =%<proceedspart.idinc>%]{I}
)]{V} 
- 
ISNULL(%<proceedspart.amount>%, 0) >= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS007','1','D','proceedspart','S','S','S','N','S',{ts '2013-05-21 10:43:58.217'},'sa','La dotazione incassi di Finanziamento: %<proceedspartview.underwriting>% , UPB: %<proceedspartview.upb>% , Bilancio: %<proceedspartview.codefin>% è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I},0)=0)  
OR

isnull([(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0)  
from upbunderwritingtotal 
where idfin = %<proceedspart.idfin>%
	and idupb= %<proceedspart.idupb>%
	and idunderwriting= [select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I}
)]{N} ,0)
- 
ISNULL(%<proceedspart.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) +ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin = %<proceedspart.idfin>% 
	and idupb= %<proceedspart.idupb>%
	and idunderwriting= [select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I}
	and nphase = %<sys_maxexpensephase>%
	]{N}
,0)


>= 0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM056','1','D','proceedspart','S','S','N','N','S',{ts '2012-07-31 15:04:29.193'},'sa','L''importo dell''assegnazione incassi deve essere uguale a quello del movimento di entrata','N','ISNULL(
	[SELECT SUM(amount) FROM proceedspart
	WHERE idinc = %<proceedspart.idinc>%]{V}
,0) = 
ISNULL(
	[SELECT curramount
	FROM incometotal
	WHERE idinc = %<proceedspart.idinc>%
	AND ayear = %<proceedspart.yproceedspart>%]{V}
,0)
OR
ISNULL(
	[SELECT assured FROM upb
	WHERE idupb = %<proceedspart.idupb>%
	]{C}
,''N'') = ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','proceedspart','S','S','S','N','N',{ts '2012-11-30 11:38:50.710'},'sa','Cancellazione impossibile! Esistono delle operazioni di Girofondo collegate all''assegnazione incassi %<proceedspart.yproceedspart>%. / %<proceedspart.nproceedspart>%','S','[SELECT COUNT(*) FROM moneytransfer 
WHERE yproceedspart = %<proceedspart.yproceedspart>%
	and nproceedspart = %<proceedspart.nproceedspart>%
]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','I','proceedspart','S','S','S','N','S',{ts '2008-03-11 12:50:59.643'},'NINO','Non possono essere inserite assegnazioni di incassi. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE005','1','I','proceedspart','N','S','S','N','S',{ts '2012-07-31 14:29:06.250'},'sa','La previsione della voce in spesa %<fin.codefin>% è inferiore alle assegnazioni degli incassi','N','isnull([(SELECT isnull(currentprev,0)+
ISNULL(previsionvariation, 0) -
ISNULL(totproceedspart, 0) -
ISNULL(proceedsvariation, 0) 
from upbtotal 
where idfin = %<proceedspart.idfin>%
and idupb = %<proceedspart.idupb>%
)]{N},0) >= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE007','1','I','proceedspart','N','S','S','N','S',{ts '2013-05-21 09:59:02.730'},'sa','La previsione della voce in spesa  %<proceedspartview.codefin>%, Finanziamento: %<proceedspartview.underwriting>% , UPB: %<proceedspartview.upb>%  è inferiore alle assegnazioni degli incassi.
','N','(isnull([select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I},0)=0)  
OR

isnull([(SELECT isnull(currentprev,0)+
ISNULL(previsionvariation, 0) -
ISNULL(totproceedspart, 0) -
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal 
where idfin = %<proceedspart.idfin>%
and idupb = %<proceedspart.idupb>%
and idunderwriting= [select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I}
)]{N},0) >= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS004','1','I','proceedspart','S','S','S','N','S',{ts '2007-09-01 09:31:57.717'},'NINO','Il movimento di entrata è inferiore rispetto alle assegnazioni incassi','N','[SELECT curramount
from incometotal 
where idinc = %<proceedspart.idinc>%
and ayear = %<sys_esercizio>%
]{V}
-
[SELECT ISNULL(sum(amount), 0) 
from proceedspart 
where idinc = %<proceedspart.idinc>%]{V}
>= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS005','1','I','proceedspart','S','S','S','S','S',{ts '2012-09-27 10:36:49.880'},'sa','L''inserimento dell''assegnazione incassi sulla voce di bilancio %<fin.codefin>% non è congrua con l''assegnazione crediti effettuata in precedenza.','N','ISNULL(
	[SELECT SUM(creditpart.amount)
	FROM creditpart
	JOIN incomelink
		ON incomelink.idparent= creditpart.idinc
	WHERE incomelink.idchild= %<proceedspart.idinc>% 
		AND idfin IN (SELECT oldidfin FROM allfinlookup
				WHERE newidfin=%<proceedspart.idfin>%
			)
AND creditpart.idupb = %<proceedspart.idupb>% 

	]{V}
,0)
>= 
 
ISNULL(
	[SELECT SUM(amount) FROM proceedspart 
	JOIN incomelink IL1 on IL1.idchild=proceedspart.idinc
      	AND IL1.nlevel= %<sys_incomefinphase>%
	JOIN incomelink IL2 on IL2.idparent=IL1.idparent
	WHERE IL2.idchild=  %<proceedspart.idinc>% 
		AND idfin =%<proceedspart.idfin>%
	AND proceedspart.idupb = %<proceedspart.idupb>% 	

	]{V}
,0)
OR
[SELECT COUNT(*) FROM creditpart 
	JOIN incomelink on incomelink.idparent= creditpart.idinc
	WHERE incomelink.idchild= %<proceedspart.idinc>% 
]{I} = 0



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM056','1','I','proceedspart','S','S','N','N','S',{ts '2012-07-31 15:04:55.950'},'sa','L''importo dell''assegnazione incassi deve essere uguale a quello del movimento di entrata','N','ISNULL(
	[SELECT SUM(amount) FROM proceedspart
	WHERE idinc = %<proceedspart.idinc>%]{V}
,0) = 
ISNULL(
	[SELECT curramount
	FROM incometotal
	WHERE idinc = %<proceedspart.idinc>%
	AND ayear = %<proceedspart.yproceedspart>%]{V}
,0)

OR
ISNULL(
	[SELECT assured FROM upb
	WHERE idupb = %<proceedspart.idupb>%
	]{C}
,''N'') = ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON005','1','I','proceedspart','S','N','N','N','S',{ts '2012-07-31 15:28:59.957'},'sa','La previsione di cassa della voce di spesa %<fin.codefin>% è minore delle assegnazioni degli incassi','N','[SELECT 
	ISNULL(currentsecondaryprev,0)+	
	ISNULL(secondaryvariation, 0) -
   	ISNULL(totproceedspart, 0) -
	ISNULL(proceedsvariation, 0) 
from upbtotal 
where idfin = %<proceedspart.idfin>%
and idupb = %<proceedspart.idupb>%
]{N} 
 >= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON006','1','I','proceedspart','S','N','N','N','S',{ts '2013-05-21 10:45:19.073'},'sa','La previsione di cassa della voce di spesa Finanziamento: %<proceedspartview.underwriting>% , UPB: %<proceedspartview.upb>% , Bilancio: %<proceedspartview.codefin>%  è minore delle assegnazioni degli incassi.','N','(isnull([select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I},0)=0)  
OR
[SELECT 
	ISNULL(currentsecondaryprev,0)+	
	ISNULL(secondaryvariation, 0) -
   	ISNULL(totproceedspart, 0) -
	ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal 
where idfin = %<proceedspart.idfin>%
and idupb = %<proceedspart.idupb>%
and idunderwriting= [select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I}
]{N} 
 >= 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','U','proceedspart','S','S','S','N','S',{ts '2008-03-11 12:51:01.973'},'NINO','Non possono essere modificate assegnazioni di incassi. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE005','1','U','proceedspart','N','S','S','N','S',{ts '2012-10-24 15:08:10.620'},'sa','La previsione della voce in spesa %<fin.codefin>% è inferiore alle assegnazioni degli incassi','S','isnull([SELECT isnull(currentprev,0)+
ISNULL(previsionvariation, 0) - 
ISNULL(totproceedspart, 0) - 
ISNULL(proceedsvariation, 0) 
from upbtotal where 
	idfin = %<proceedspart.idfin>%
	and idupb = %<proceedspart.idupb>%
]{N},0)
+ 
ISNULL(&<proceedspart.amount>&, 0)
- 
ISNULL(%<proceedspart.amount>%, 0) >= 0
or
%<proceedspart.idfin>% <> &<proceedspart.idfin>&
or
%<proceedspart.idupb>% <> &<proceedspart.idupb>&
OR
(
%<proceedspart.amount>%<&<proceedspart.amount>&
)
or ((select assured from upb 
where idupb=%<proceedspart.idupb>%)=''S'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE005','2','U','proceedspart','N','S','S','N','S',{ts '2012-07-31 14:32:59.087'},'sa','La previsione della voce in spesa %<fin.codefin>% è inferiore alle assegnazioni degli incassi','S','isnull(
[SELECT isnull(currentprev,0)+
ISNULL(previsionvariation, 0) - 
ISNULL(totproceedspart, 0) - 
ISNULL(proceedsvariation, 0) 
from upbtotal where 
	idfin = %<proceedspart.idfin>%
	and idupb = %<proceedspart.idupb>%
]{N},0)
- 
ISNULL(%<proceedspart.amount>%, 0) >= 0
or
%<proceedspart.idfin>% = &<proceedspart.idfin>&
or
%<proceedspart.idupb>% = &<proceedspart.idupb>&
or ((select assured from upb 
where upb.idupb= %<proceedspart.idupb>%)=''S'')

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE007','1','U','proceedspart','N','S','S','N','S',{ts '2013-05-23 14:12:20.367'},'sa','La previsione della voce in spesa  %<proceedspartview.codefin>%, Finanziamento: %<proceedspartview.underwriting>% , UPB: %<proceedspartview.upb>%  è inferiore alle assegnazioni degli incassi.','S','(isnull([select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I},0)=0)  
OR

isnull([SELECT isnull(currentprev,0)+
ISNULL(previsionvariation, 0) - 
ISNULL(totproceedspart, 0) - 
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal where 
	idfin = %<proceedspart.idfin>%
	and idupb = %<proceedspart.idupb>%
	and idunderwriting= [select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I}

]{N},0)
+ 
ISNULL(&<proceedspart.amount>&, 0)
- 
ISNULL(%<proceedspart.amount>%, 0) >= 0
or
%<proceedspart.idfin>% <> &<proceedspart.idfin>&
or
%<proceedspart.idupb>% <> &<proceedspart.idupb>&
OR
(
%<proceedspart.amount>%<&<proceedspart.amount>&
)
or ((select assured from upb 
where idupb=%<proceedspart.idupb>%)=''S'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('COMPE007','2','U','proceedspart','N','S','S','N','S',{ts '2013-05-23 14:12:28.183'},'sa','La previsione della voce in spesa  %<proceedspartview.codefin>%, Finanziamento: %<proceedspartview.underwriting>% , UPB: %<proceedspartview.upb>%  è inferiore alle assegnazioni degli incassi.','S','(isnull([select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I},0)=0)  
OR

isnull(
[SELECT isnull(currentprev,0)+
ISNULL(previsionvariation, 0) - 
ISNULL(totproceedspart, 0) - 
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal where 
	idfin = %<proceedspart.idfin>%
	and idupb = %<proceedspart.idupb>%
	and idunderwriting= [select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I}

]{N},0)
- 
ISNULL(%<proceedspart.amount>%, 0) >= 0
or
%<proceedspart.idfin>% = &<proceedspart.idfin>&
or
%<proceedspart.idupb>% = &<proceedspart.idupb>&
or ((select assured from upb 
where upb.idupb= %<proceedspart.idupb>%)=''S'')

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO012','1','U','proceedspart','S','S','S','N','S',{ts '2012-07-31 13:36:13.120'},'sa','La dotazione incassi della voce %<fin.codefin>% è INSUFFICIENTE!','S','isnull([(SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)   
	from upbtotal where idfin = %<proceedspart.idfin>%
	 and idupb = %<proceedspart.idupb>% 
	)]{N} 
,0)
- 
ISNULL(&<proceedspart.amount>&, 0)
+ 
ISNULL(%<proceedspart.amount>%, 0) 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<proceedspart.idfin>% 
 	and idupb = %<proceedspart.idupb>% 
	and nphase = %<sys_maxexpensephase>%
	]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<proceedspart.idfin>% 
 	and idupb = %<proceedspart.idupb>% 
	and yrestore IS NULL 
	and nrestore IS NULL]{N}
 ,0)

>= 0
or
%<proceedspart.idfin>% <> &<proceedspart.idfin>&
or
%<proceedspart.amount>%>&<proceedspart.amount>&
or
%<proceedspart.idupb>% = &<proceedspart.idupb>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO012','2','U','proceedspart','S','S','S','N','S',{ts '2012-07-31 13:39:13.377'},'sa','La dotazione incassi della voce %<fin.codefin>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0) 
	from upbtotal where 
	idfin = &<proceedspart.idfin>&
 	and idupb = &<proceedspart.idupb>&

]{N}
,0)
- 
ISNULL(&<proceedspart.amount>&, 0) 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)+isnull(totalarrears,0) 
	from upbexpensetotal 
	where idfin = &<proceedspart.idfin>& 
 	and idupb =  &<proceedspart.idupb>&
	and nphase = %<sys_maxexpensephase>%
	]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0) 
	from pettycashoperation 
	where idfin = %<proceedspart.idfin>% 
 	and idupb = %<proceedspart.idupb>% 
	and yrestore IS NULL 
	and nrestore IS NULL]{N}
 ,0)

>= 0
or
%<proceedspart.idfin>% = &<proceedspart.idfin>&
or
%<proceedspart.idupb>% = &<proceedspart.idupb>&
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO035','3','U','proceedspart','S','S','S','N','S',{ts '2013-06-19 12:41:04.710'},'assistenza','La dotazione incassi di Finanziamento: %<proceedspartview.underwriting>% , UPB: %<proceedspartview.upb>% , Bilancio: %<proceedspartview.codefin>% è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I},0)=0)  
OR

isnull([SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal 
where idfin = %<proceedspart.idfin>%
	and idupb= %<proceedspart.idupb>%
	and idunderwriting =  [select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I}
]{N},0) 
- 
ISNULL(&<proceedspart.amount>&, 0)
+ 
ISNULL(%<proceedspart.amount>%, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) +ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin = %<proceedspart.idfin>% 
	and idupb=  %<proceedspart.idupb>%
	and idunderwriting =  [select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I}
	and nphase = %<sys_maxexpensephase>%]{N}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = %<proceedspart.idfin>%
	and PO.idupb= %<proceedspart.idupb>%
	and POU.idunderwriting =  [select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I}
	and PO. yrestore IS NULL 
	and PO.nrestore IS NULL]{N}
 ,0)
>= 0
or
%<proceedspart.idfin>% <> &<proceedspart.idfin>&
or
%<proceedspart.amount>%>&<proceedspart.amount>&
or
%<proceedspart.idupb>% = &<proceedspart.idupb>&



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO035','4','U','proceedspart','S','S','S','N','S',{ts '2013-06-19 12:41:10.570'},'assistenza','La dotazione incassi di Finanziamento: %<proceedspartview.underwriting>% , UPB: %<proceedspartview.upb>% , Bilancio: %<proceedspartview.codefin>% è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I},0)=0)  
OR

isnull([SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal 
where idfin = &<proceedspart.idfin>&
and idupb= &<proceedspart.idupb>&
and idunderwriting =  [select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I}

]{V} ,0)
-
ISNULL(&<proceedspart.amount>&, 0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) +ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin = &<proceedspart.idfin>&
	and idupb=  &<proceedspart.idupb>&
	and idunderwriting =  [select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I}
	and nphase = %<sys_maxexpensephase>%]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(sum(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
	 	and PO.noperation=POU.noperation
	where PO.idfin = &<proceedspart.idfin>&
	and PO.idupb= &<proceedspart.idupb>&
	and POU.idunderwriting =  [select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I}
	and PO. yrestore IS NULL 
	and PO.nrestore IS NULL]{N}
 ,0)
>= 0
or
%<proceedspart.idfin>% = &<proceedspart.idfin>&
or
%<proceedspart.idupb>% = &<proceedspart.idupb>&
 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS001','1','U','proceedspart','S','S','S','N','S',{ts '2012-07-31 14:09:15.640'},'sa','La dotazione degli incassi è NEGATIVA!','S','[(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbtotal 
where idfin = %<proceedspart.idfin>%
and idupb= %<proceedspart.idupb>%

)]{V} 
- 
ISNULL(&<proceedspart.amount>&, 0)
+ 
ISNULL(%<proceedspart.amount>%, 0) >= 0
or
%<proceedspart.idfin>% <> &<proceedspart.idfin>&
or
%<proceedspart.amount>%>&<proceedspart.amount>&
or
%<proceedspart.idupb>% <> &<proceedspart.idupb>&')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS001','2','U','proceedspart','S','S','S','N','S',{ts '2012-07-31 14:10:01.643'},'sa','La dotazione degli incassi è NEGATIVA!','S','[(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbtotal 
where idfin = %<proceedspart.idfin>%
and idupb= %<proceedspart.idupb>%
)]{V} 
+ 
ISNULL(%<proceedspart.amount>%, 0) >= 0
or
%<proceedspart.idfin>% = &<proceedspart.idfin>&
or
%<proceedspart.amount>%>0
or
%<proceedspart.idupb>% = &<proceedspart.idupb>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS002','1','U','proceedspart','S','S','S','N','S',{ts '2012-07-31 13:48:08.397'},'sa','La dotazione incassi della voce %<fin.codefin>% è INSUFFICIENTE!','S','isnull([(SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)   
	from upbtotal where idfin = %<proceedspart.idfin>%
	 and idupb = %<proceedspart.idupb>%
	)]{N} 
,0)
- 
ISNULL(&<proceedspart.amount>&, 0)
+ 
ISNULL(%<proceedspart.amount>%, 0) 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears,0)
	from upbexpensetotal 
	where idfin = %<proceedspart.idfin>% 
 	and idupb = %<proceedspart.idupb>%
	and nphase = %<sys_maxexpensephase>%
	]{N}
,0)
>= 0
or
%<proceedspart.idfin>% <> &<proceedspart.idfin>&
or
%<proceedspart.amount>%>&<proceedspart.amount>&
or
%<proceedspart.idupb>% <> &<proceedspart.idupb>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS002','2','U','proceedspart','S','S','S','N','S',{ts '2012-07-31 13:49:13.310'},'sa','La dotazione incassi della voce %<fin.codefin>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0) 
	from upbtotal where 
	idfin = &<proceedspart.idfin>&
 	and idupb = &<proceedspart.idupb>&

]{N}
,0)
- 
ISNULL(&<proceedspart.amount>&, 0) 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)+isnull(totalarrears,0) 
	from upbexpensetotal 
	where idfin = &<proceedspart.idfin>& 
 	and idupb = &<proceedspart.idupb>&
	and nphase = %<sys_maxexpensephase>%
	]{N}
,0)
>= 0
or
%<proceedspart.idfin>% = &<proceedspart.idfin>&
or
%<proceedspart.idupb>% = &<proceedspart.idupb>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS004','1','U','proceedspart','S','S','S','N','S',{ts '2006-01-01 00:00:00.000'},'Software and more','Il movimento di entrata è inferiore rispetto alle assegnazioni incassi','N','(
isnull(
[SELECT ISNULL(curramount, 0) 
from incometotal 
where idinc = %<proceedspart.idinc>%
and ayear = %<sys_esercizio>%
]{N}
,0)
-
isnull([(SELECT ISNULL(sum(amount), 0) 
from proceedspart 
where idinc = %<proceedspart.idinc>%)]{N}
,0)
>= 0)
OR
%<proceedspart.amount>% <= &<proceedspart.amount>&
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS005','1','U','proceedspart','S','S','S','S','S',{ts '2012-09-27 10:57:04.740'},'sa','La modifica sull''assegnazione incassi sulla voce di bilancio %<fin.codefin>% non è congrua con l''assegnazione crediti effettuata in precedenza.','N','ISNULL(
[SELECT SUM(creditpart.amount) FROM creditpart
	JOIN incomelink on incomelink.idparent= creditpart.idinc
WHERE incomelink.idchild= %<proceedspart.idinc>% 
AND  idfin IN (SELECT oldidfin FROM allfinlookup
				WHERE newidfin=%<proceedspart.idfin>%
			)
AND idupb = %<proceedspart.idupb>%

]{V}
,0)
>= 
ISNULL(
[SELECT SUM(amount) FROM proceedspart 
	JOIN incomelink IL1 on IL1.idchild=proceedspart.idinc
      	AND IL1.nlevel= %<sys_incomefinphase>%
	JOIN incomelink IL2 on IL2.idparent=IL1.idparent
	WHERE IL2.idchild=  %<proceedspart.idinc>% 
	AND idfin  = %<proceedspart.idfin>%
AND idupb = %<proceedspart.idupb>%

]{V}
,0)
OR
[SELECT COUNT(*) FROM creditpart 
	JOIN incomelink on incomelink.idparent= creditpart.idinc
	WHERE incomelink.idchild= %<proceedspart.idinc>% 
]{I} = 0




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS006','1','U','proceedspart','S','S','S','N','S',{ts '2013-05-21 10:42:35.747'},'sa','La dotazione incassi di Finanziamento: %<proceedspartview.underwriting>% , UPB: %<proceedspartview.upb>% , Bilancio: %<proceedspartview.codefin>% è NEGATIVA!','S','(isnull([select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I},0)=0)  
OR

[(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal 
where idfin = %<proceedspart.idfin>%
and idupb= %<proceedspart.idupb>%
and idunderwriting= [select idunderwriting 
			from income 
			where idinc = %<proceedspart.idinc>%]{I}
)]{V} 
- 
ISNULL(&<proceedspart.amount>&, 0)
+ 
ISNULL(%<proceedspart.amount>%, 0) >= 0
or
%<proceedspart.idfin>% <> &<proceedspart.idfin>&
or
%<proceedspart.amount>%>&<proceedspart.amount>&
or
%<proceedspart.idupb>% <> &<proceedspart.idupb>&

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS006','2','U','proceedspart','S','S','S','N','S',{ts '2013-05-21 10:42:42.047'},'sa','La dotazione incassi di Finanziamento: %<proceedspartview.underwriting>% , UPB: %<proceedspartview.upb>% , Bilancio: %<proceedspartview.codefin>% è NEGATIVA!','S','(isnull([select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I},0)=0)  
OR

[(SELECT ISNULL(totproceedspart, 0) + 
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal 
where idfin = %<proceedspart.idfin>%
and idupb= %<proceedspart.idupb>%
and idunderwriting= [select idunderwriting 
			from income 
			where idinc = %<proceedspart.idinc>%]{I}
)]{V} 
+ 
ISNULL(%<proceedspart.amount>%, 0) >= 0
or
%<proceedspart.idfin>% = &<proceedspart.idfin>&
or
%<proceedspart.amount>%>0
or
%<proceedspart.idupb>% = &<proceedspart.idupb>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS007','1','U','proceedspart','S','S','S','N','S',{ts '2013-05-21 10:44:05.297'},'sa','La dotazione incassi di Finanziamento: %<proceedspartview.underwriting>% , UPB: %<proceedspartview.upb>% , Bilancio: %<proceedspartview.codefin>% è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I},0)=0)  
OR

isnull([(SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)   
	from upbunderwritingtotal where idfin = %<proceedspart.idfin>%
	 and idupb = %<proceedspart.idupb>%
	and idunderwriting =  [select idunderwriting 
			from income 
			where idinc = %<proceedspart.idinc>%]{I}
	)]{N} 
,0)
- 
ISNULL(&<proceedspart.amount>&, 0)
+ 
ISNULL(%<proceedspart.amount>%, 0) 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	where idfin = %<proceedspart.idfin>% 
 	and idupb = %<proceedspart.idupb>%
	and idunderwriting =  [select idunderwriting 
			from income 
			where idinc = %<proceedspart.idinc>%]{I}
	and nphase = %<sys_maxexpensephase>%
	]{N}
,0)
>= 0
or
%<proceedspart.idfin>% <> &<proceedspart.idfin>&
or
%<proceedspart.amount>%>&<proceedspart.amount>&
or
%<proceedspart.idupb>% <> &<proceedspart.idupb>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS007','2','U','proceedspart','S','S','S','N','S',{ts '2013-05-21 10:44:11.703'},'sa','La dotazione incassi di Finanziamento: %<proceedspartview.underwriting>% , UPB: %<proceedspartview.upb>% , Bilancio: %<proceedspartview.codefin>% è INSUFFICIENTE!','S','(isnull([select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I},0)=0)  
OR

ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0) 
	from upbunderwritingtotal where 
	idfin = &<proceedspart.idfin>&
 	and idupb = &<proceedspart.idupb>&
	and idunderwriting =  [select idunderwriting 
			from income 
			where idinc = %<proceedspart.idinc>%]{I}
]{N}
,0)
- 
ISNULL(&<proceedspart.amount>&, 0) 
- 
ISNULL(
	[SELECT ISNULL(totalcompetency,0)+isnull(totalarrears,0) 
	from underwritingexpensetotal 
	where idfin = &<proceedspart.idfin>& 
 	and idupb = &<proceedspart.idupb>&
	and idunderwriting =  [select idunderwriting 
			from income 
			where idinc = %<proceedspart.idinc>%]{I}
	and nphase = %<sys_maxexpensephase>%
	]{N}
,0)
>= 0
or
%<proceedspart.idfin>% = &<proceedspart.idfin>&
or
%<proceedspart.idupb>% = &<proceedspart.idupb>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM056','1','U','proceedspart','S','S','N','N','S',{ts '2012-07-31 15:05:16.907'},'sa','L''importo dell''assegnazione incassi deve essere uguale a quello del movimento di entrata','N','ISNULL(
	[SELECT SUM(amount) FROM proceedspart
	WHERE idinc = %<proceedspart.idinc>%]{V}
,0) = 
ISNULL(
	[SELECT curramount
	FROM incometotal
	WHERE idinc = %<proceedspart.idinc>%
	AND ayear = %<proceedspart.yproceedspart>%]{V}
,0)
OR
ISNULL(
	[SELECT assured FROM upb
	WHERE idupb = %<proceedspart.idupb>%
	]{C}
,''N'') = ''S''
OR %<proceedspart.amount>% = &<proceedspart.amount>&')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM117','1','U','proceedspart','S','S','S','N','N',{ts '2013-07-17 11:57:22.357'},'sa','Esistono dei girofondi collegati  all''assegnazione Es. %<proceedspart.yproceedspart>%. / n° %<proceedspart.nproceedspart>% %<proceedspart.description>%.. La modifica dell''importo dell''assegnazione potrebbe causare un importo residuo da trasferire negativo.','N','ISNULL(%<proceedspart.amount>%,0)  = ISNULL(&<proceedspart.amount>&,0)
OR

[SELECT COUNT(*) FROM moneytotransfer_available_view
WHERE y = %<proceedspart.yproceedspart>%
AND      kind = ''assegnazione''
AND      n = %<proceedspart.nproceedspart>%
AND      ndet = %<proceedspart.idinc>%
AND     isnull(moneytotransfer,0) < 0
]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON005','1','U','proceedspart','S','N','N','N','S',{ts '2012-07-31 15:29:47.957'},'sa','La previsione di cassa della voce di spesa %<fin.codefin>% è minore delle assegnazioni degli incassi','S','(
[SELECT 
ISNULL(currentsecondaryprev,0)+
ISNULL(secondaryvariation, 0) -
ISNULL(totproceedspart, 0) -
ISNULL(proceedsvariation, 0) 
from upbtotal 
where idfin = %<proceedspart.idfin>%
and idupb = %<proceedspart.idupb>%
]{V} 
- 
ISNULL(%<proceedspart.amount>%, 0) 
+
ISNULL(&<proceedspart.amount>&, 0)
>= 0
)
OR
(
%<proceedspart.amount>%<&<proceedspart.amount>&
)
OR
(%<proceedspart.idfin>%<>&<proceedspart.idfin>&)
OR
(%<proceedspart.idupb>%<>&<proceedspart.idupb>&)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON005','2','U','proceedspart','S','N','N','N','S',{ts '2012-07-31 15:30:37.270'},'sa','La previsione di cassa della voce di spesa %<fin.codefin>% è minore delle assegnazioni degli incassi','S','(
[SELECT 
ISNULL(currentsecondaryprev,0)+
ISNULL(secondaryvariation, 0) -
ISNULL(totproceedspart, 0) -
ISNULL(proceedsvariation, 0) 
from upbtotal 
where idfin = %<proceedspart.idfin>%
and idupb = %<proceedspart.idupb>%
]{N} 
- 
ISNULL(%<proceedspart.amount>%, 0)
>= 0
)
OR
(%<proceedspart.idfin>%=&<proceedspart.idfin>&)
or
%<proceedspart.amount>%<&<proceedspart.amount>&
OR
(%<proceedspart.idupb>%=&<proceedspart.idupb>&)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON006','1','U','proceedspart','S','N','N','N','S',{ts '2013-05-21 10:45:26.037'},'sa','La previsione di cassa della voce di spesa Finanziamento: %<proceedspartview.underwriting>% , UPB: %<proceedspartview.upb>% , Bilancio: %<proceedspartview.codefin>%  è minore delle assegnazioni degli incassi.','S','(isnull([select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I},0)=0)  
OR
(
[SELECT 
ISNULL(currentsecondaryprev,0)+
ISNULL(secondaryvariation, 0) -
ISNULL(totproceedspart, 0) -
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal 
where idfin = %<proceedspart.idfin>%
and idupb = %<proceedspart.idupb>%
and idunderwriting= [select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I}
]{V} 
- 
ISNULL(%<proceedspart.amount>%, 0) 
+
ISNULL(&<proceedspart.amount>&, 0)
>= 0
)
OR
(
%<proceedspart.amount>%<&<proceedspart.amount>&
)
OR
(%<proceedspart.idfin>%<>&<proceedspart.idfin>&)
OR
(%<proceedspart.idupb>%<>&<proceedspart.idupb>&)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SECON006','2','U','proceedspart','S','N','N','N','S',{ts '2013-05-21 10:45:31.567'},'sa','La previsione di cassa della voce di spesa Finanziamento: %<proceedspartview.underwriting>% , UPB: %<proceedspartview.upb>% , Bilancio: %<proceedspartview.codefin>%  è minore delle assegnazioni degli incassi.','S','(isnull([select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I},0)=0)  
OR
(
[SELECT 
ISNULL(currentsecondaryprev,0)+
ISNULL(secondaryvariation, 0) -
ISNULL(totproceedspart, 0) -
ISNULL(proceedsvariation, 0) 
from upbunderwritingtotal 
where idfin = %<proceedspart.idfin>%
and idupb = %<proceedspart.idupb>%
and idunderwriting= [select idunderwriting from income where idinc = %<proceedspart.idinc>%]{I}
]{N} 
- 
ISNULL(%<proceedspart.amount>%, 0)
>= 0
)
OR
(%<proceedspart.idfin>%=&<proceedspart.idfin>&)
or
%<proceedspart.amount>%<&<proceedspart.amount>&
OR
(%<proceedspart.idupb>%=&<proceedspart.idupb>&)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','D','proceedstransmission','S','S','S','N','N',{ts '2010-05-05 09:51:27.733'},'SA','La distinta di trasmissione delle reversali n. %<proceedstransmission.nproceedstransmission>% / %<proceedstransmission.yproceedstransmission>% non può essere cancellata. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM085','1','D','proceedstransmission','S','S','S','N','N',{ts '2011-01-11 11:35:44.643'},'assistenza','Non è possibile  cancellare un elenco di trasmissione di data diversa da quella della sua creazione a meno che non sia vuoto.','S','datediff( day,
%<proceedstransmission.transmissiondate>%
, getdate()) <=5


OR 
[select count(*) from proceeds where kproceedstransmission=
	%<proceedstransmission.kproceedstransmission>%]{I}=0


or
[(select count(*) from incomelast IL
  join proceeds P ON P.kpro=IL.kpro
  where P.kproceedstransmission= 
    %<proceedstransmission.kproceedstransmission>%
   and (IL.flag & 1) = 0
)]{I}=0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','proceedstransmission','S','S','S','N','N',{ts '2007-12-05 15:47:28.827'},'SARA','L''elenco di trasmissione delle reversali di incasso %<yproceedstransmission>% %<nproceedstransmission>% non può essere cancellato in quanto esistono reversali di incasso che lo referenziano.','S','[(SELECT count(*) 
from proceeds 
where kproceedstransmission = %<proceedstransmission.kproceedstransmission>% 
)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','proceedstransmission','S','S','S','N','N',{ts '2011-09-16 16:25:23.170'},'sara','L''elenco di trasmissione delle reversali di incasso %<yproceedstransmission>% %<nproceedstransmission>% non può essere cancellato in quanto esistono variazioni di reversali di incasso che lo referenziano.','S','[(SELECT count(*) 
from incomevar 
where kproceedstransmission = %<proceedstransmission.kproceedstransmission>% 
)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','I','proceedstransmission','S','S','S','N','N',{ts '2010-05-05 09:51:33.657'},'SA','La distinta di trasmissione delle reversali n. %<proceedstransmission.nproceedstransmission>% / %<proceedstransmission.yproceedstransmission>% non può essere inserita. Esercizio  %<esercizio>% chiuso','N','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM085','1','I','proceedstransmission','S','S','S','N','N',{ts '2011-01-11 11:35:51.157'},'assistenza','Non è possibile creare un elenco di trasmissione di data diversa da quella attuale.','N','datediff( day,
%<proceedstransmission.transmissiondate>% , getdate() ) <=5


or
[(select count(*) from incomelast IL
  join proceeds P ON P.kpro=IL.kpro
  where P.kproceedstransmission= 
    %<proceedstransmission.kproceedstransmission>%
   and (IL.flag & 1) = 0
)]{I}=0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE001','1','U','proceedstransmission','S','S','S','N','N',{ts '2010-05-05 09:51:40.407'},'SA','La distinta di trasmissione delle reversali n. %<proceedstransmission.nproceedstransmission>% / %<proceedstransmission.yproceedstransmission>% non può essere modificata. Esercizio  %<esercizio>% chiuso','S','(ISNULL(
	[SELECT flag
	FROM accountingyear
	WHERE ayear = %<sys_esercizio>%]{I}
,0) & 0x0F) <> 6')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM085','1','U','proceedstransmission','S','S','S','N','N',{ts '2011-01-11 11:35:56.907'},'assistenza','Non è possibile  modificare un elenco di trasmissione di data diversa da quella della sua creazione.','N','&<proceedstransmission.transmissiondate>&  is null
OR
datediff( day,
%<proceedstransmission.transmissiondate>%
, getdate() ) <=5

or
[(select count(*) from incomelast IL
  join proceeds P ON P.kpro=IL.kpro
  where P.kproceedstransmission= 
    %<proceedstransmission.kproceedstransmission>%
   and (IL.flag & 1) = 0
)]{I}=0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM095','2','U','proceedstransmission','S','S','S','N','N',{ts '2012-11-09 15:25:47.520'},'sa','Non è possibile cambiare il Cassiere di una distinta contenente documenti.','S','&<proceedstransmission.idtreasurer>& = %<proceedstransmission.idtreasurer>%

OR

(
ISNULL([SELECT COUNT(*) FROM proceeds where kproceedstransmission = %<proceedstransmission.kproceedstransmission>% ]{I},0)
+
ISNULL([SELECT COUNT(*) FROM incomevar where kproceedstransmission = %<proceedstransmission.kproceedstransmission>% ]{I},0)
)
= 0



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','profrefund','S','S','S','N','N',{ts '2006-03-29 14:58:54.187'},'''SARA''','Cancellazione Impossibile! Esistono contratti  di prestazione professionale ai quali la spesa %<description>% è collegata','S','[SELECT count(*) 
from profservicerefund 
where idlinkedrefund = %<profrefund.idlinkedrefund>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE001','1','D','profservice','S','S','S','N','N',{ts '2006-09-29 11:59:27.453'},'''SARA''','Non è possibile cancellare il contratto professionale %<ncon>% / %<ycon>% perché è stata generata la relativa Anagrafe delle Prestazioni.
','S','[(select count(*)
from serviceregistry 
where substring(idrelated,1,11) = ''profservice''
and substring(idrelated,13,4)= convert(varchar(4),%<profservice.ycon>%)
and substring(idrelated,18,4)= convert(varchar(4),%<profservice.ncon>%))]{N} 
= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','profservice','S','S','S','N','N',{ts '2007-09-13 12:08:06.797'},'NINO','Cancellazione Impossibile! Esistono movimenti di spesa collegati al contratto professionale %<ncon>% / %<ycon>%','S','[(SELECT count(*) 
from expenseprofservice 
where ycon = %<profservice.ycon>%
and ncon = %<profservice.ncon>%)]{I} 
= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','profservice','S','S','S','N','N',{ts '2010-04-28 13:52:10.893'},'SARADECA','Cancellazione Impossibile! Esistono operazioni di Piccola Spesa collegate al contratto professionale %<ncon>% / %<ycon>%','S','[(SELECT count(*) 
from pettycashoperationprofservice
where ycon = %<profservice.ycon>%
and ncon = %<profservice.ncon>%)]{I} 
= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE001','1','I','profservice','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Inserire la partita IVA di %<registry.title>%','S','[(SELECT count(*) from registry where idreg=%<profservice.idreg>% and p_iva is not null)]{I} > 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE001','2','I','profservice','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Inserire il codice fiscale di %<registry.title>%','S','[(SELECT count(*) from registry where idreg=%<profservice.idreg>% and cf is not null)]{I} > 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE004','1','I','profservice','S','S','S','N','N',{ts '2007-09-01 10:07:54.467'},'NINO','Il contratto di prestazione professionale che si sta inserendo non ha ritenute associate.','N','--post
[SELECT COUNT(*) FROM profservicetax
WHERE ycon = %<profservice.ycon>%
AND ncon= %<profservice.ncon>%]{I} > 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE005','1','I','profservice','S','S','S','N','N',{ts '2008-10-01 12:47:47.610'},'SA','Il prestatore d''opera ha già svolto nell''anno, assunto dall''ateneo, una prestazione occasionale. E'' possibile che non si stia usando il modulo corretto per l''effettuazione di questa prestazione.','S','[execute count_contract %<sys_esercizio>%,
	''C'',  
	%<profservice.idreg>% ,
	@outvar output]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE006','1','I','profservice','S','S','S','N','N',{ts '2008-10-08 14:22:34.483'},'SARA','La prestazione scelta va svolta da soggetti residenti in Italia, invece il percipiente %<registry.title>% ha la Residenza o Sede Amministrativa all''estero.
','S','([SELECT COUNT(*) 
  FROM service 
 WHERE idser = %<profservice.idser>%
  AND ISNULL(flagforeign,''N'') <> ''S'']{I}=0)
OR
([SELECT COUNT(*) 
  FROM registryaddress 
  JOIN address 
    ON registryaddress.idaddresskind = address.idaddress
WHERE idreg = %<profservice.idreg>%
AND   codeaddress = ''07_SW_DEF''
AND
(
ISNULL(%<profservice.start>%,{d ''1900-01-01''})  BETWEEN ISNULL(start,{d ''1900-01-01''})  AND ISNULL(stop,{d ''2079-01-01''})
OR  
ISNULL(%<profservice.stop>%,{d ''2079-01-01''})  BETWEEN ISNULL(start,{d ''1900-01-01''})  AND ISNULL(stop,{d ''2079-01-01''})
)
AND ISNULL(flagforeign,''N'') = ''S''
]{I}=0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM014','1','I','profservice','S','S','S','N','N',{ts '2009-02-26 15:17:47.437'},'ASSISTENZA','Non è possibile salvare un contratto professionale con numero negativo','N','%<profservice.ncon>%>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO026','1','U','profservice','S','S','S','N','N',{ts '2007-03-28 12:35:50.017'},'''SA''','L''importo netto della prestazione professionale è inferiore al contabilizzato tramite le operazioni del fondo economale','S','(

%<profservice.feegross>%
-
ISNULL(
	[SELECT SUM(employtax) FROM casualcontracttax
	WHERE ycon = %<profservice.ycon>%
	AND ncon = %<profservice.ncon>%]{N}
,0)
>=
ISNULL(
	[SELECT SUM(P.amount)
	FROM pettycashoperation P
	JOIN pettycashoperationprofservice PF
	ON P.idpettycash = PF.idpettycash
	AND P.yoperation = PF.yoperation
	AND P.noperation = PF.noperation
	WHERE PF.ycon = %<profservice.ycon>%
	AND PF.ncon = %<profservice.ncon>%]{N}
,0)
)
OR
(&<profservice.feegross>& = %<profservice.feegross>%)
OR
[SELECT COUNT(*)
FROM pettycashoperationprofservice
WHERE ycon = %<profservice.ycon>%
AND ncon = %<profservice.ncon>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM015','1','U','profservice','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Non si può modificare il percipiente in un contratto professionale  totalmente o parzialmente contabilizzato.','S','([SELECT count(*) 
FROM expenseprofservice
WHERE expenseprofservice.ycon = %<profservice.ycon>% AND
expenseprofservice.ncon = %<profservice.ncon>%]{I}
=
0)
or
(&<profservice.idreg>& = %<profservice.idreg>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM035','1','U','profservice','S','S','S','N','N',{ts '2007-09-01 10:10:15.530'},'NINO','Non può essere cambiata la prestazione del contratto professionale %<profservice.ncon>% / %<profservice.ycon>% perché è stato già contabilizzato','S','[SELECT COUNT(*)
FROM expenseprofservice
JOIN expenselink
ON expenselink.idparent =expenseprofservice.idexp 
JOIN expenselast
ON expenselast.idexp = expenselink.idchild
WHERE ycon = %<profservice.ycon>%
AND ncon = %<profservice.ncon>%]{I} = 0
OR
(
%<profservice.idser>% = &<profservice.idser>&
AND
%<profservice.adate>% = &<profservice.adate>&
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE001','1','U','profservice','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Inserire la partita IVA di %<registry.title>%','S','[(SELECT count(*) from registry where idreg=%<profservice.idreg>% and p_iva is not null)]{I} > 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE001','2','U','profservice','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Inserire il codice fiscale di %<registry.title>%','S','[(SELECT count(*) from registry where idreg=%<profservice.idreg>% and cf is not null)]{I} > 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE002','1','U','profservice','S','S','S','N','N',{ts '2007-09-01 10:12:35.767'},'NINO','L''importo lordo del contratto professionale %<ncon>%/%<ycon>% è minore dei movimenti di spesa che lo contabilizzano','S','%<profservice.totalcost>%
- 
[SELECT ISNULL(sum(expenseyear.amount), 0) 
from expense 
join expenseyear
on expense.idexp = expenseyear.idexp
join expensetotal
on expenseyear.idexp = expensetotal.idexp
and expenseyear.ayear = expensetotal.ayear
join expenseprofservice
on expenseprofservice.idexp = expense.idexp 
where expenseprofservice.ycon = %<profservice.ycon>% 
and expenseprofservice.ncon = %<profservice.ncon>%
and (expensetotal.flag & 2) = 2]{V}
-
[SELECT ISNULL(sum(expensevar.amount), 0) 
from expensevar 
join expenseprofservice
on expenseprofservice.idexp = expensevar.idexp 
WHERE ISNULL(expensevar.autokind,0)<>4
and expenseprofservice.ycon = %<profservice.ycon>% 
and expenseprofservice.ncon = %<profservice.ncon>%]{V} 
>= 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE004','1','U','profservice','S','S','S','N','N',{ts '2007-08-31 19:58:08.127'},'NINO','Il contratto di prestazione professionale numero %<profservice.ncon>%  /   %<profservice.ycon>% non ha ritenute associate','N','--post
[SELECT COUNT(*) FROM profservicetax
WHERE ycon = %<profservice.ycon>%
AND ncon= %<profservice.ncon>%]{I} > 0
OR
(%<profservice.idser>% = &<profservice.idser>&)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE005','1','U','profservice','S','S','S','N','N',{ts '2008-10-01 12:47:42.393'},'SA','Il prestatore d''opera ha già svolto nell''anno, assunto dall''ateneo, una prestazione occasionale. E'' possibile che non si stia usando il modulo corretto per l''effettuazione di questa prestazione.','S','[execute count_contract %<sys_esercizio>%,
	''C'',  
	%<profservice.idreg>% ,
	@outvar output]{I}=0

or

%<profservice.idreg>% =&<profservice.idreg>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE006','1','U','profservice','S','S','S','N','N',{ts '2008-10-08 14:22:54.170'},'SARA','La prestazione scelta va svolta da soggetti residenti in Italia, invece il percipiente %<registry.title>% ha la Residenza o Sede Amministrativa all''estero.','S','([SELECT COUNT(*) 
  FROM service 
 WHERE idser = %<profservice.idser>%
  AND ISNULL(flagforeign,''N'') <> ''S'']{I}=0)
OR
(
%<profservice.idser>% =  &<profservice.idser>&
AND 
%<profservice.start>% =  &<profservice.start>&
AND
%<profservice.stop>%  =  &<profservice.stop>&
AND
%<profservice.idreg>%  =  &<profservice.idreg>&
)
OR

([SELECT COUNT(*) 
  FROM registryaddress 
  JOIN address 
    ON registryaddress.idaddresskind = address.idaddress
WHERE idreg = %<profservice.idreg>%
AND   codeaddress = ''07_SW_DEF''
AND
(
ISNULL(%<profservice.start>%,{d ''1900-01-01''})  BETWEEN ISNULL(start,{d ''1900-01-01''})  AND ISNULL(stop,{d ''2079-01-01''})
OR  
ISNULL(%<profservice.stop>%,{d ''2079-01-01''})  BETWEEN ISNULL(start,{d ''1900-01-01''})  AND ISNULL(stop,{d ''2079-01-01''})
)
AND ISNULL(flagforeign,''N'') = ''S''
]{I}=0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PROFE004','1','D','profservicetax','S','S','S','N','N',{ts '2006-04-04 15:47:21.033'},'Software and more','Il contratto di prestazione professionale numero %<profservice.ncon>% /    %<profservice.ycon>%  non ha ritenute associate','N','--post
([SELECT COUNT(*) FROM profservice
WHERE ycon = %<profservicetax.ycon>%
AND ncon = %<profservicetax.ncon>%]{N} = 0)
OR
([SELECT COUNT(*) FROM profservicetax
WHERE ycon = %<profservicetax.ycon>%
AND ncon = %<profservicetax.ncon>%]{N} > 0)



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','reduction','S','S','S','N','N',{ts '2008-02-22 14:47:50.887'},'SARA','Il tipo di riduzione %<description>% non può essere cancellato in quanto esistono tappe di missioni che lo referenziano.','S','[execute count_table_field ''itinerationlap'',''idreduction'',
%<reduction.idreduction>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','reduction','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Tipo di riduzione della diaria %<idreduction>% già esistente','S','[(SELECT count(*) 
from reduction 
where idreduction = %<reduction.idreduction>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','reduction','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del tipo di riduzione della diaria già esistente','S','[(SELECT count(*) 
from reduction 
where description = %<reduction.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','reduction','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del tipo di riduzione della diaria già esistente','S','[(SELECT count(*) 
from reduction 
where description = %<reduction.description>% 
and idreduction <> %<reduction.idreduction>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR027','1','D','registry','S','S','S','N','N',{ts '2009-04-29 13:45:40.460'},'SARA','L''anagrafica %<registry.title>%, avente codice %<registry.idreg>% non può essere cancellata perchè esistono altre anagrafiche contrassegnate come unificabili con essa.','S','[(SELECT count(*) 
from registry 
where toredirect = %<registry.idreg>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','registry','S','S','S','N','N',{ts '2008-07-21 13:57:57.093'},'SARA','Cancellazione Impossibile! Esistono configurazione della liquidazione IVA collegate all''anagrafica %<title>%','S','[execute count_table_field ''config'',''refundagency'',%<registry.idreg>%,@outvar output]{I}=0
and
[execute count_table_field ''config'',''paymentagency'',%<registry.idreg>%,@outvar output]{I}=0

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','registry','S','S','S','N','N',{ts '2008-07-18 15:15:09.797'},'SARA','Cancellazione Impossibile! Esistono documenti IVA collegati all''anagrafica %<title>%','S','[execute count_table_field ''invoice'',''idreg'',%<registry.idreg>%,@outvar output]{I}=0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','registry','S','S','S','N','N',{ts '2008-07-18 15:15:40.797'},'SARA','Cancellazione Impossibile! Esistono movimenti di spesa collegati all''anagrafica %<title>%','S','[execute count_table_field ''expense'',''idreg'',%<registry.idreg>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','registry','S','S','S','N','N',{ts '2008-07-18 15:16:06.017'},'SARA','Cancellazione Impossibile! Esistono mandati di pagamento collegati all''anagrafica %<title>%','S','[execute count_table_field ''payment'',''idreg'',%<registry.idreg>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','6','D','registry','S','S','S','N','N',{ts '2008-07-18 15:16:33.983'},'SARA','Cancellazione Impossibile! Esistono movimenti di entrata collegati all''anagrafica %<title>%','S','[execute count_table_field ''income'',''idreg'',%<registry.idreg>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','7','D','registry','S','S','S','N','N',{ts '2008-07-18 15:16:49.610'},'SARA','Cancellazione Impossibile! Esistono reversali di incasso collegati all''anagrafica %<title>%','S','[execute count_table_field ''proceeds'',''idreg'',%<registry.idreg>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','8','D','registry','S','S','S','N','N',{ts '2008-07-18 15:17:19.297'},'SARA','Cancellazione Impossibile! Esistono buoni d''ordine collegati all''anagrafica %<title>%','S','[execute count_table_field ''mandate'',''idreg'',%<registry.idreg>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','9','D','registry','S','S','S','N','N',{ts '2008-07-18 15:19:14.420'},'SARA','Cancellazione Impossibile! Esistono contratti professionali collegati all''anagrafica %<title>%','S','[execute count_table_field ''profservice'',''idreg'',%<registry.idreg>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','10','D','registry','S','S','S','N','N',{ts '2008-07-18 15:19:32.407'},'SARA','Cancellazione Impossibile! Esistono contratti occasionali collegati all''anagrafica %<title>%','S','[execute count_table_field ''casualcontract'',''idreg'',%<registry.idreg>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','11','D','registry','S','S','S','N','N',{ts '2008-07-18 15:19:57.547'},'SARA','Cancellazione Impossibile! Esistono contratti parasubordinati collegati all''anagrafica %<title>%','S','[execute count_table_field ''parasubcontract'',''idreg'',%<registry.idreg>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','12','D','registry','S','S','S','N','N',{ts '2008-07-18 15:20:39.343'},'SARA','Cancellazione Impossibile! Esistono missioni collegate all''anagrafica %<title>%','S','[execute count_table_field ''itineration'',''idreg'',%<registry.idreg>%,@outvar output]{I}=0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','13','D','registry','S','S','S','N','N',{ts '2008-07-18 15:21:41.780'},'SARA','Cancellazione Impossibile! Esistono buoni di carico collegati all''anagrafica %<title>%','S','[execute count_table_field ''assetload'',''idreg'',%<registry.idreg>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','14','D','registry','S','S','S','N','N',{ts '2008-07-18 15:22:06.610'},'SARA','Cancellazione Impossibile! Esistono buoni di scarico collegati all''anagrafica %<title>%','S','[execute count_table_field ''assetunload'',''idreg'',%<registry.idreg>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','15','D','registry','S','S','S','N','N',{ts '2008-07-18 15:22:30.953'},'SARA','Cancellazione Impossibile! Esistono carichi di cespiti inventariabili collegati all''anagrafica %<title>%','S','[execute count_table_field ''assetacquire'',''idreg'',%<registry.idreg>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','17','D','registry','S','S','S','N','N',{ts '2008-07-18 15:23:27.860'},'SARA','Cancellazione Impossibile! Esistono configurazioni dei fondi economali collegati all''anagrafica %<title>%','S','[execute count_table_field ''pettycashsetup'',''registrymanager'',%<registry.idreg>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','20','D','registry','S','S','S','N','N',{ts '2008-07-18 15:24:14.280'},'SARA','Cancellazione Impossibile! Esistono configurazioni di automatismi di ritenute con ripartizione percentuale collegate all''anagrafica %<title>%','S','[execute count_table_field ''taxpaymentpartsetup'',''idreg'',%<registry.idreg>%,@outvar output]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','21','D','registry','S','S','S','N','N',{ts '2008-07-18 15:24:41.500'},'SARA','Cancellazione Impossibile! Esistono dettagli delle scritture in Partita Doppia collegate al Cliente/Fornitore %<registry.title>%','S','[execute count_table_field ''entrydetail'',''idreg'',%<registry.idreg>%,@outvar output]{I}=0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','22','D','registry','S','S','S','N','N',{ts '2008-07-18 15:25:17.377'},'SARA','Cancellazione Impossibile! Esistono delegati collegati all''anagrafica %<registry.title>%','S','[execute count_table_field ''registrypaymethod'',''iddeputy'',%<registry.idreg>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','23','D','registry','S','S','S','N','N',{ts '2008-07-22 11:20:39.920'},'SARA','Cancellazione Impossibile! Esistono contratti  attivi collegati all''anagrafica %<title>%','S','[execute count_table_field ''estimate'',''idreg'',%<registry.idreg>%,@outvar output]{I}=0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','24','D','registry','S','S','S','N','N',{ts '2008-07-18 15:26:09.890'},'SARA','Cancellazione Impossibile! Esistono compensi a dipendenti collegati all''anagrafica %<title>%','S','[execute count_table_field ''wageaddition'',''idreg'',%<registry.idreg>%,@outvar output]{I}=0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','25','D','registry','S','S','S','N','N',{ts '2008-07-22 10:54:24.983'},'SARA','Cancellazione Impossibile! Esistono configurazioni di automatismi di ritenute con ripartizione geografica collegate all''anagrafica %<title>%','S','[execute count_table_field ''taxregionsetup'',''regionalagency'',%<registry.idreg>%,@outvar output]{I}=0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','26','D','registry','S','S','S','N','N',{ts '2008-07-22 13:59:07.420'},'SARA','Cancellazione Impossibile! Esistono anagrafi delle prestazioni collegati all''anagrafica %<registry.title>%','S','[execute count_table_field ''serviceregistry'',''idreg'',%<registry.idreg>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','27','D','registry','S','S','S','N','N',{ts '2009-10-14 14:58:26.810'},'SARA','Cancellazione Impossibile! Esistono classificazioni anagrafica collegati all''anagrafica %<title>%','S','[execute count_table_field ''registrysorting'',''idreg'',%<registry.idreg>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM004','1','D','registry','S','S','S','N','N',{ts '2007-09-01 10:17:15.517'},'NINO','La cancellazione del creditore/debitore %<title>% comporterà la cancellazione di tutti i relativi indirizzi','S','[(SELECT count(*) 
from registryaddress 
where idreg = %<registry.idreg>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM004','2','D','registry','S','S','S','N','N',{ts '2007-09-01 10:17:22.890'},'NINO','La cancellazione del creditore/debitore %<title>% comporterà la cancellazione di tutti i relativi ruoli','S','[(SELECT count(*) 
from registryrole 
where idreg = %<registry.idreg>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM004','3','D','registry','S','S','S','N','N',{ts '2007-09-01 10:17:30.140'},'NINO','La cancellazione del creditore/debitore %<title>% comporterà la cancellazione di tutte le relative posizioni giuridiche','S','[(SELECT count(*) 
from registrylegalstatus 
where idreg = %<registry.idreg>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM004','4','D','registry','S','S','S','N','N',{ts '2007-09-01 10:17:37.157'},'NINO','La cancellazione del creditore/debitore %<title>% comporterà la cancellazione di tutte le relative posizioni retributive','S','[(SELECT count(*) 
from registrytaxablestatus 
where idreg = %<registry.idreg>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM004','5','D','registry','S','S','S','N','N',{ts '2007-09-01 10:17:45.780'},'NINO','La cancellazione del creditore/debitore %<title>% comporterà la cancellazione di tutte le relative modalità di pagamento','S','[(SELECT count(*) 
from registrypaymethod 
where idreg = %<registry.idreg>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM004','6','D','registry','S','S','S','N','N',{ts '2007-09-01 10:17:53.937'},'NINO','La cancellazione del creditore/debitore %<title>% comporterà la cancellazione di tutti i relativi contatti','S','[(SELECT count(*) 
from registryreference 
where idreg = %<registry.idreg>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR001','1','I','registry','S','S','S','N','N',{ts '2007-07-11 10:50:50.530'},'SARA','Non possono esistere due Anagrafiche con identici Codice Fiscale e Partita IVA null.','N','--ISNULL(%<registry.cf>%,'''') = ''''
--or 
(
[SELECT count(*) 
from registry 
where isnull(active,''N'') = ''S''
and ISNULL(registry.cf,'''')<>''''
and ISNULL(registry.p_iva,'''') = ''''
and registry.cf = %<registry.cf>%
]{I} < 2 
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR001','2','I','registry','S','S','S','N','N',{ts '2007-07-11 11:17:08.813'},'SARA','Non possono esistere due Anagrafiche con identici Codice Fiscale e Partita IVA non null.','N','--ISNULL(%<registry.cf>%,'''') = ''''
--or 
(
[SELECT count(*) 
from registry 
where isnull(active,''N'') = ''S''
and ISNULL(registry.cf,'''') <> ''''
and ISNULL(registry.p_iva,'''')<> ''''
and registry.cf = %<registry.cf>%
and registry.p_iva <> %<registry.p_iva>%
]{I} < 2 
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR001','3','I','registry','S','S','S','N','N',{ts '2007-07-11 10:47:24.640'},'SARA','Non possono esistere due Anagrafiche con identica Partita IVA ','N','--ISNULL(%<registry.cf>%,'''') = ''''
--or 
(
[SELECT count(*) 
from registry 
where isnull(active,''N'') = ''S''
and ISNULL(registry.p_iva,'''')<>''''
and registry.p_iva = %<registry.p_iva>%
 ]{I} < 2 
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR003','1','I','registry','S','S','S','N','N',{ts '2007-12-06 09:27:53.563'},'SARA','Impossibile usare la classificazione %<centralizedcategory.description>% perché non è attiva','S','[SELECT active
from centralizedcategory
where idcentralizedcategory =%<registry.idcentralizedcategory>%]{C} <> ''N'' 
or 
(%<registry.idcentralizedcategory>% IS NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR003','2','I','registry','S','S','S','N','N',{ts '2007-12-01 23:39:24.920'},'NINO','Impossibile usare la tipologia %<registry.idregistryclass>% perché non è attiva','S','[(SELECT active
from registryclass
where idregistryclass = %<registry.idregistryclass>%)]{C} <> ''N'' 
or 
(%<registry.idregistryclass>% IS NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR005','1','I','registry','S','S','S','N','N',{ts '2009-02-24 12:01:47.297'},'ASSISTENZA','E'' già presente nell''archivio anagrafico una scheda con la denominazione %<registry.title>%. Verificare, prima di salvare, che non si tratti dello stesso soggetto, al fine di non duplicare le schede.','S','ISNULL(%<registry.active>%,''S'') = ''N''  
OR 
-- non persona fisica 
ISNULL(%<registry.idregistryclass>%,'''') <> ''22''  
OR
[SELECT COUNT(*) 
FROM registry 
WHERE title = %<registry.title>%
AND active=''S''
]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR005','2','I','registry','S','S','S','N','N',{ts '2009-02-24 12:19:09.140'},'ASSISTENZA','E'' già presente nell''archivio anagrafico una scheda con la denominazione %<registry.title>%. Verificare, prima di salvare, che non si tratti dello stesso soggetto, al fine di non duplicare le schede.','S','ISNULL(%<registry.active>%,''S'') = ''N''  
OR 
-- non persona fisica 
ISNULL(%<registry.idregistryclass>%,'''') = ''22''  
OR
[SELECT COUNT(*) 
FROM registry 
WHERE title = %<registry.title>%
AND active=''S''
AND ISNULL(%<registry.idregistryclass>%,'''') = ''22''  
]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR006','1','I','registry','S','S','S','N','N',{ts '2006-05-18 10:37:43.610'},'''NINO''','Il comune di nascita di %<registry.title>% non è più esistente','S','[SELECT COUNT(*) FROM geo_cityusable
	WHERE idcity = %<registry.idcity>%
]{I}
> 0
OR
(%<registry.idcity>% IS NULL)
or 
[select count(*) from geo_city_agency 
	where (idagency=1) and (idcity<>%<registry.idcity>%) 
	and (idcode=1) and (value=substring(%<registry.cf>%,12,4))
	and idcity in (select idcity from geo_cityusable)
]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR006','2','I','registry','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Lo stato estero di nascita di %<registry.title>% non è più esistente','S','(
 [SELECT newnation
	FROM geo_nation
	WHERE idnation = %<registry.idnation>%
 ]{I} IS NULL
 AND
 [SELECT COUNT(*)
	FROM geo_nation
	WHERE oldnation = %<registry.idnation>%
 ]{I} = 0)
OR
(%<registry.idnation>% IS NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','1','I','registry','S','S','S','N','N',{ts '2008-07-23 12:41:45.127'},'NINO','L''anagrafica %<registry.title>% (ente non commerciale) non ammette la duplicazione del codice fiscale ed esiste un altro ente non commerciale attivo con la stesso codice fiscale (%<registry.cf>%).','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è un ente non commerciale
ISNULL(%<registry.idregistryclass>%,'''') <> ''23''
or
-- non ha codice fiscale
ISNULL(%<registry.cf>%,'''') = ''''
or
ISNULL(%<registry.multi_cf>%,''N'') = ''S'' 
OR
(
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.cf>%,'''')
and registry.idregistryclass = ''23''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','2','I','registry','S','S','S','N','N',{ts '2008-07-23 12:41:11.703'},'NINO','L''anagrafica %<registry.title>% (ente non commerciale) non ammette la duplicazione della partita IVA ed esiste un altro ente non commerciale attivo con la stessa partita IVA (%<registry.p_iva>%).','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è un ente non commerciale
ISNULL(%<registry.idregistryclass>%,'''') <> ''23''
or
-- non ha partita IVA
ISNULL(%<registry.p_iva>%,'''') = ''''
or
ISNULL(%<registry.multi_cf>%,''N'') = ''S''
OR
(
[SELECT COUNT(*) 
from registry 
where p_iva = ISNULL(%<registry.p_iva>%,'''')
and registry.idregistryclass = ''23''
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','3','I','registry','S','S','S','N','N',{ts '2008-07-15 13:34:31.287'},'SARA','L''anagrafica %<registry.title>% essendo un''anagrafica complementare, non può avere nessun codice fiscale o partita IVA','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è un''anagrafica complementare
ISNULL(%<registry.idregistryclass>%,'''') <> ''24''
or
(
-- non ha codice fiscale
ISNULL(%<registry.cf>%,'''') = ''''
and
-- non ha partita iva
ISNULL(%<registry.p_iva>%,'''') = ''''
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','4','I','registry','S','S','S','N','N',{ts '2008-07-15 13:34:36.147'},'SARA','L''anagrafica %<registry.title>% è una persona fisica  e non può avere lo stesso codice fiscale di un''altra persona fisica.','N','ISNULL(%<registry.active>%,''S'') = ''N'' 
OR
--persona fisica
ISNULL(%<registry.idregistryclass>%,'''') <> ''22'' 
or
ISNULL(%<registry.cf>%,'''') = ''''
or
(
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.cf>%,'''')
--- persona fisica
and registry.idregistryclass = ''22'' 
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','5','I','registry','S','S','S','N','N',{ts '2008-07-16 10:56:03.453'},'SARA','L''anagrafica %<registry.title>% (società, ente comm. o ditta individuale) non ammette la duplicazione del codice fiscale  ed esiste un''altra  società, ente comm. o ditta individuale. attiva con lo stesso codice fiscale (%<registry.cf>%),','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è un ente commerciale
ISNULL(%<registry.idregistryclass>%,'''') <> ''21''
or
-- non ha codice fiscale
ISNULL(%<registry.cf>%,'''') = ''''
or
ISNULL(%<registry.multi_cf>%,''N'') = ''S'' 
or
(
--se non ammette duplicazione di codice fiscale,
--non ci devono essere altri enti commerciali o ditte individuali
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.cf>%,'''')
and registry.idregistryclass = ''21''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','6','I','registry','S','S','S','N','N',{ts '2008-07-16 11:05:34.187'},'SARA','L''anagrafica %<registry.title>% (società, ente comm. o ditta individuale)) non ammette la duplicazione della partita IVA ed esiste un''altra società, ente comm. o ditta individuale con la stessa partita IVA (%<registry.p_iva>%) .','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una ente commerciale
ISNULL(%<registry.idregistryclass>%,'''') <> ''21''
or
-- non ha codice fiscale
ISNULL(%<registry.p_iva>%,'''') = ''''
or
ISNULL(%<registry.multi_cf>%,''N'') = ''S'' 
or
(
--se non ammette duplicazione di partita iva con creditori attivi,
--non devono esserci altri enti commerciali o ditte individuali
--con la stessa partita IVA
[SELECT COUNT(*) 
from registry 
where p_iva = ISNULL(%<registry.p_iva>%,'''')
and registry.idregistryclass = ''21''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','7','I','registry','S','S','S','N','N',{ts '2010-02-12 10:23:23.533'},'SARA','L''anagrafica %<registry.title>% (persona fisica) non può avere lo stesso codice fiscale di un''altra anagrafica attiva, %<registry.cf>%','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una persona fisica
ISNULL(%<registry.idregistryclass>%,'''') <> ''22''
or
-- non ha codice fiscale
ISNULL(%<registry.cf>%,'''') = ''''  
or
(
--non ammette mai duplicazione di codice fiscale con creditori attivi
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.cf>%,'''')
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','8','I','registry','S','S','S','N','N',{ts '2010-02-12 10:45:41.220'},'SARA','L''anagrafica %<registry.title>% (società, ente comm. o ditta individuale) ha lo stesso codice fiscale (%<registry.cf>%) di un''altra anagrafica attiva','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una società, ente commerciale o ditta individuale
ISNULL(%<registry.idregistryclass>%,'''') <> ''21''
or
-- non ha codice fiscale
ISNULL(%<registry.cf>%,'''') = ''''
or
(
--può ammettere la duplicazione di codice fiscale con creditori attivi,
--ma solo se si tratta di società e ditte individuali 
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.cf>%,'''')
and registry.idregistryclass <>''21''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','9','I','registry','S','S','S','N','N',{ts '2010-02-12 10:45:57.940'},'SARA','L''anagrafica %<registry.title>% (persona fisica) non può avere  la stessa partita IVA di un''altra anagrafica attiva, %<registry.p_iva>%','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una persona fisica
ISNULL(%<registry.idregistryclass>%,'''') <> ''22''
or
-- non ha partita IVA
ISNULL(%<registry.p_iva>%,'''') = ''''  
or
(
--non ammette mai duplicazione di partita iva con creditori attivi
[SELECT COUNT(*) 
from registry 
where p_iva = ISNULL(%<registry.p_iva>%,'''')
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','10','I','registry','S','S','S','N','N',{ts '2010-02-12 10:46:39.423'},'SARA','L''anagrafica %<registry.title>% (società, ente comm. o ditta individuale) ha la stessa partita IVA (%<registry.cf>%) di un''altra anagrafica attiva, il che è possibile solo se si tratta di un''altra società, ente comm. o ditta individuale.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una società, ente commerciale o ditta individuale
ISNULL(%<registry.idregistryclass>%,'''') <> ''21''
or
-- non ha partita IVA
ISNULL(%<registry.p_iva>%,'''') = ''''
or
(
--può ammettere la duplicazione di codice fiscale con creditori attivi,
--purchè non si tratti di società e ditte individuali 
[SELECT COUNT(*) 
from registry 
where p_iva = ISNULL(%<registry.p_iva>%,'''')
and registry.idregistryclass <>''21''
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','11','I','registry','S','S','S','N','N',{ts '2010-02-12 10:47:18.737'},'SARA','L''anagrafica %<registry.title>% (società, ente comm. o ditta individuale) ha come partita IVA (%<registry.p_iva>%)   il codice fiscale di un''altra anagrafica attiva, il che è possibile solo se si tratta di un''altra società, ente comm. o ditta individuale.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una società, ente commerciale o ditta individuale
ISNULL(%<registry.idregistryclass>%,'''') <> ''21''
or
-- non ha partita IVA
ISNULL(%<registry.p_iva>%,'''') = ''''
or
(
--può ammettere la duplicazione della partita iva con creditori attivi,
--ma solo se si tratta di società e ditte individuali 
[SELECT COUNT(*) 
from registry 
where p_iva = ISNULL(%<registry.p_iva>%,'''')
and registry.idregistryclass <> ''21''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','12','I','registry','S','S','S','N','N',{ts '2009-09-22 16:27:21.483'},'SARA','L''anagrafica %<registry.title>% (ente non commerciale) non ammette la duplicazione della  partita IVA  nel campo  del codice fiscale oppure esiste un''altra anagrafica attiva con la stessa partita IVA (%<registry.cf>%), il che è possibile solo se si tratta di un altro ente non commerciale.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è un ente non commerciale
ISNULL(%<registry.idregistryclass>%,'''') <> ''23''
or
-- non ha codice fiscale
ISNULL(%<registry.cf>%,'''') = ''''
or
ISNULL(%<registry.multi_cf>%,''N'') = ''S'' 
OR
(
[SELECT COUNT(*) 
from registry 
where p_iva = ISNULL(%<registry.cf>%,'''')
and registry.idregistryclass = ''23''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','13','I','registry','S','S','S','N','N',{ts '2009-09-22 16:27:09.377'},'SARA','L''anagrafica %<registry.title>% (ente non commerciale) non ammette la duplicazione del codice Fiscale  nel campo della partita IVA oppure esiste un''altra anagrafica attiva con la stesso codice fiscale  (%<registry.p_iva>%), il che è possibile solo se si tratta di un altro ente non commerciale.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è un ente non commerciale
ISNULL(%<registry.idregistryclass>%,'''') <> ''23''
or
-- non ha partita IVA
ISNULL(%<registry.p_iva>%,'''') = ''''
or
ISNULL(%<registry.multi_cf>%,''N'') = ''S''
OR
(
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.p_iva>%,'''')
and registry.idregistryclass = ''23''
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','14','I','registry','S','S','S','N','N',{ts '2009-09-22 16:26:31.063'},'SARA','L''anagrafica %<registry.title>% (società, ente comm. o ditta individuale) non ammette la duplicazione della partita IVA  nel campo  del codice fiscale ed esiste un''altra  società, ente comm. o ditta individuale. attiva con la stessa partita IVA (%<registry.cf>%),','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è un ente commerciale
ISNULL(%<registry.idregistryclass>%,'''') <> ''21''
or
-- non ha codice fiscale
ISNULL(%<registry.cf>%,'''') = ''''
or
ISNULL(%<registry.multi_cf>%,''N'') = ''S'' 
or
(
--se non ammette duplicazione di codice fiscale,
--non ci devono essere altri enti commerciali o ditte individuali
[SELECT COUNT(*) 
from registry 
where p_iva = ISNULL(%<registry.cf>%,'''')
and registry.idregistryclass = ''21''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','15','I','registry','S','S','S','N','N',{ts '2009-09-22 16:26:16.860'},'SARA','L''anagrafica %<registry.title>% (società, ente comm. o ditta individuale)) non ammette la duplicazione del codice fiscale nel campo  della partita IVA  ed esiste un''altra società, ente comm. o ditta individuale con la stesso codice fiscale (%<registry.p_iva>%) .','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una ente commerciale
ISNULL(%<registry.idregistryclass>%,'''') <> ''21''
or
-- non ha codice fiscale
ISNULL(%<registry.p_iva>%,'''') = ''''
or
ISNULL(%<registry.multi_cf>%,''N'') = ''S'' 
or
(
--se non ammette duplicazione di partita iva con creditori attivi,
--non devono esserci altri enti commerciali o ditte individuali
--con la stessa partita IVA
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.p_iva>%,'''')
and registry.idregistryclass = ''21''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','16','I','registry','S','S','S','N','N',{ts '2009-09-23 09:39:50.047'},'SARA','L''anagrafica %<registry.title>% (ente non commerciale) ha lo stesso codice fiscale (%<registry.cf>%) di un''altra anagrafica attiva, il che è possibile solo se si tratta di un''altro ente non commerciale.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è un ente non commerciale
ISNULL(%<registry.idregistryclass>%,'''') <> ''23''
or
-- non ha codice fiscale
ISNULL(%<registry.cf>%,'''') = ''''
or
(
--non ammette mai la duplicazione di codice fiscale con creditori attivi,
--che non siano altri enti non commerciali
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.cf>%,'''')
--persona fisica
and registry.idregistryclass <>  ''23''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','17','I','registry','S','S','S','N','N',{ts '2009-09-23 09:43:10.717'},'SARA','L''anagrafica %<registry.title>% (ente non commerciale) ha la partita IVA (%<registry.p_iva>%)  uguale a quella  di un''altra anagrafica attiva, il che è possibile solo se si tratta di un''altro ente non commerciale.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una società, ente commerciale o ditta individuale
ISNULL(%<registry.idregistryclass>%,'''') <> ''23''
or
-- non ha partita IVA
ISNULL(%<registry.p_iva>%,'''') = ''''
or
(
--non ammette mai la duplicazione dell partita IVA con creditori attivi,
--che non siano altri enti non commerciali e indipendentemente dal flag
--multi_cf (che è valido solo per tipologie omogenee tra loro: enti commerciali
-- ed enti non commerciali)
[SELECT COUNT(*) 
from registry 
where p_iva = ISNULL(%<registry.p_iva>%,'''')
and registry.idregistryclass <> ''23''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','18','I','registry','S','S','S','N','N',{ts '2009-09-23 10:06:52.860'},'SARA','L''anagrafica %<registry.title>% (ente non commerciale) ha lo stesso codice fiscale (%<registry.cf>%) registrato nel campo della partita IVA di un''altra anagrafica attiva, il che è possibile solo se si tratta di un''altro ente non commerciale.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è un ente non commerciale
ISNULL(%<registry.idregistryclass>%,'''') <> ''23''
or
-- non ha codice fiscale
ISNULL(%<registry.cf>%,'''') = ''''
or
(
--non ammette mai la duplicazione di codice fiscale con creditori attivi,
--che non siano altri enti non commerciali
[SELECT COUNT(*) 
from registry 
where p_iva = ISNULL(%<registry.cf>%,'''')
--persona fisica
and registry.idregistryclass <>  ''23''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','19','I','registry','S','S','S','N','N',{ts '2009-09-23 10:07:01.860'},'SARA','L''anagrafica %<registry.title>% (ente non commerciale) ha la partita IVA (%<registry.p_iva>%)  registrato nel campo del codice fiscale di un''altra anagrafica attiva, il che è possibile solo se si tratta di un''altro ente non commerciale.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una società, ente commerciale o ditta individuale
ISNULL(%<registry.idregistryclass>%,'''') <> ''23''
or
-- non ha partita IVA
ISNULL(%<registry.p_iva>%,'''') = ''''
or
(
--non ammette mai la duplicazione dell partita IVA con creditori attivi,
--che non siano altri enti non commerciali e indipendentemente dal flag
--multi_cf (che è valido solo per tipologie omogenee tra loro: enti commerciali
-- ed enti non commerciali)
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.p_iva>%,'''')
and registry.idregistryclass <> ''23''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','20','I','registry','S','S','S','N','N',{ts '2010-02-12 10:47:41.440'},'SARA','L''anagrafica %<registry.title>% (società, ente comm. o ditta individuale) ha la stessa partita IVA (%<registry.cf>%) registrata nel campo del codice fiscale di un''altra anagrafica attiva, il che è possibile solo se si tratta di un''altra società, ente comm. o ditta individuale.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una società, ente commerciale o ditta individuale
ISNULL(%<registry.idregistryclass>%,'''') <> ''21''
or
-- non ha partita IVA
ISNULL(%<registry.p_iva>%,'''') = ''''
or
(
--può ammettere la duplicazione della partita IVA con creditori attivi,
--ma solo se si tratta di  società e ditte individuali 
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.p_iva>%,'''')
and registry.idregistryclass <>''21''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','21','I','registry','S','S','S','N','N',{ts '2010-02-12 10:48:00.923'},'SARA','L''anagrafica %<registry.title>% (società, ente comm. o ditta individuale) ha come come fiscale (%<registry.p_iva>%)  la partita IVA di un''altra anagrafica attiva, il che è possibile solo se si tratta di un''altra società, ente comm. o ditta individuale.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una società, ente commerciale o ditta individuale
ISNULL(%<registry.idregistryclass>%,'''') <> ''21''
or
-- non ha partita IVA
ISNULL(%<registry.cf>%,'''') = ''''
or
(
--può ammettere la duplicazione di codice fiscale con creditori attivi,
--ma solo se si tratta di società e ditte individuali 
[SELECT COUNT(*) 
from registry 
where p_iva = ISNULL(%<registry.cf>%,'''')
and registry.idregistryclass <> ''21''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR021','1','I','registry','S','S','S','N','N',{ts '2008-07-10 11:49:11.793'},'NINO','Il codice fiscale di %<registry.title>% risulta come l''ultimo codice tra gli storici, quindi non può essere usato.','N','-- Se il c.f. non è impostato
%<registry.cf>% IS NULL
OR
-- Se non ci sono dati storici
[SELECT COUNT(*)
FROM registrycf
WHERE idreg = %<registry.idreg>%]{I} = 0
OR
-- Se ci sono dati storici ma l''ultimo c.f. storico è differente da quello inserito in registry
[SELECT cf
FROM registrycf
WHERE idreg = %<registry.idreg>%
AND stop =
	[SELECT MAX(stop)
	FROM registrycf
	WHERE idreg = %<registry.idreg>%
		AND stop IS NOT NULL]{D}]{C}
<> %<registry.cf>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR022','1','I','registry','S','S','S','N','N',{ts '2008-07-10 11:50:32.357'},'NINO','La partita IVA di %<registry.title>% non è coerente con l''ultima segnalata nel riepilogo storico.','N','-- Controllo sulla partita IVA impostata
-- Partita IVA non impostata
%<registry.p_iva>% IS NULL
OR
-- Se non ci sono dati storici
[SELECT COUNT(*)
FROM registrypiva
WHERE idreg = %<registry.idreg>%]{I} = 0
OR
-- Non ci sono partite IVA correnti nella tabella storica e l''ultima storica è differente dalla principale
(
	[SELECT COUNT(*)
	FROM registrypiva
	WHERE idreg = %<registry.idreg>%
	AND stop IS NULL]{I} = 0
	AND 
	[SELECT p_iva
	FROM registrypiva
	WHERE idreg = %<registry.idreg>%
	AND stop =
		[SELECT MAX(stop)
		FROM registrypiva
		WHERE idreg = %<registry.idreg>%
			AND stop IS NOT NULL]{D}
]{C} <> %<registry.p_iva>%
)
OR
-- Se la partita IVA principale è uguale a quella storica in vigore
[SELECT p_iva
FROM registrypiva
WHERE idreg = %<registry.idreg>%
AND stop IS NULL]{C} =
%<registry.p_iva>%')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR022','2','I','registry','S','S','S','N','N',{ts '2008-07-10 11:50:35.793'},'NINO','La partita IVA di %<registry.title>% non è coerente con l''ultima segnalata nel riepilogo storico.','N','-- Controllo sulla partita IVA NON impostata
-- Partita IVA impostata
%<registry.p_iva>% IS NOT NULL
OR
-- Se non ci sono dati storici
[SELECT COUNT(*)
FROM registrypiva
WHERE idreg = %<registry.idreg>%]{I} = 0
OR
-- Non ci sono partite IVA correnti nella tabella storica e l''ultima storica è differente dalla principale
[SELECT COUNT(*)
FROM registrypiva
WHERE idreg = %<registry.idreg>%
AND stop IS NULL]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR026','1','I','registry','S','S','S','N','N',{ts '2009-02-24 12:00:14.297'},'ASSISTENZA','E'' già presente nell''archivio anagrafico una scheda non corrispondente a persona fisica con la denominazione %<registry.title>%. Verificare, prima di salvare, che non si tratti dello stesso soggetto, al fine di non duplicare le schede.','S','ISNULL(%<registry.active>%,''S'') = ''N''  OR 
--persona fisica 
ISNULL(%<registry.idregistryclass>%,'''') = ''22''  OR
[SELECT COUNT(*) 
FROM registry 
WHERE title = %<registry.title>%
AND active=''S''
AND ISNULL(%<registry.idregistryclass>%,'''') <> ''22'' 
]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','1','I','registry','S','S','S','N','N',{ts '2009-05-28 13:09:09.877'},'SARA','Le regole di sicurezza vietano l''inserimento di anagrafiche che consentano la duplicazione di  CF o P. IVA.','S','(ISNULL(%<registry.multi_cf>%,''N'') = ''N'')
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename  = ''anag_d''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR001','1','U','registry','S','S','S','N','N',{ts '2007-07-11 10:51:07.907'},'SARA','Non possono esistere due Anagrafiche con identici Codice Fiscale e Partita IVA null','N','--ISNULL(%<registry.cf>%,'''') = ''''
--or 
(
[SELECT count(*) 
from registry 
where isnull(active,''N'') = ''S''
and ISNULL(registry.cf,'''')<>''''
and ISNULL(registry.p_iva,'''') = ''''
and registry.cf = %<registry.cf>%
]{I} < 2 
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR001','2','U','registry','S','S','S','N','N',{ts '2007-07-11 11:18:11.717'},'SARA','Non possono esistere due Anagrafiche con identici Codice Fiscale e Partita IVA non null.','N','--ISNULL(%<registry.cf>%,'''') = ''''
--or 
(
[SELECT count(*) 
from registry 
where isnull(active,''N'') = ''S''
and ISNULL(registry.cf,'''') <> ''''
and ISNULL(registry.p_iva,'''')<> ''''
and registry.cf = %<registry.cf>%
and registry.p_iva <> %<registry.p_iva>%
]{I} < 2 
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR001','3','U','registry','S','S','S','N','N',{ts '2007-07-11 10:47:19.563'},'SARA','Non possono esistere due Anagrafiche con identica Partita IVA ','N','--ISNULL(%<registry.cf>%,'''') = ''''
--or 
(
[SELECT count(*) 
from registry 
where isnull(active,''N'') = ''S''
and ISNULL(registry.p_iva,'''')<>''''
and registry.p_iva = %<registry.p_iva>%
 ]{I} < 2 
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR003','1','U','registry','S','S','S','N','N',{ts '2007-12-06 09:29:05.343'},'SARA','Impossibile usare la classificazione %<centralizedcategory.description>% perché non è attiva','S','[(SELECT active
from centralizedcategory
where idcentralizedcategory =%<registry.idcentralizedcategory>%)]{C} <> ''N'' 
or 
(%<registry.idcentralizedcategory>% IS NULL)
or
(&<registry.idcentralizedcategory>& = %<registry.idcentralizedcategory>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR003','2','U','registry','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Impossibile usare la tipologia %<registry.idregistryclass>% perché non è attiva','S','[(SELECT active
from registryclass
where idregistryclass = %<registry.idregistryclass>%)]{C} <> ''N'' 
or
(&<registry.idregistryclass>& = %<registry.idregistryclass>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR005','1','U','registry','S','S','S','N','N',{ts '2009-02-24 12:19:55.547'},'ASSISTENZA','E'' già presente nell''archivio anagrafico una scheda corrispondente a persona fisica con la denominazione %<registry.title>%. Verificare, prima di salvare, che non si tratti dello stesso soggetto, al fine di non duplicare le schede.','S','ISNULL(%<registry.active>%,''S'') = ''N''  OR 
-- non persona fisica 
ISNULL(%<registry.idregistryclass>%,'''') <> ''22''  OR
[SELECT COUNT(*) 
FROM registry 
WHERE title = %<registry.title>%
AND active=''S''
]{I}=0
OR 
%<registry.title>%=&<registry.title>&

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR005','2','U','registry','S','S','S','N','N',{ts '2009-02-24 12:20:07.687'},'ASSISTENZA','E'' già presente nell''archivio anagrafico una scheda corrispondente a persona fisica con la denominazione %<registry.title>%. Verificare, prima di salvare, che non si tratti dello stesso soggetto, al fine di non duplicare le schede.','S','ISNULL(%<registry.active>%,''S'') = ''N''  OR 
-- non persona fisica 
ISNULL(%<registry.idregistryclass>%,'''') = ''22''  
OR
[SELECT COUNT(*) 
FROM registry 
WHERE title = %<registry.title>%
AND active=''S''
AND ISNULL(%<registry.idregistryclass>%,'''') = ''22''  
]{I}=0
OR 
%<registry.title>%=&<registry.title>&

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR006','1','U','registry','S','S','S','N','N',{ts '2006-05-18 10:38:57.483'},'''NINO''','Il comune di nascita di %<registry.title>% non è più esistente','S','[SELECT COUNT(*) FROM geo_cityusable
WHERE idcity = %<registry.idcity>%]{I} > 0
OR
(%<registry.idcity>% IS NULL)
or 
[select count(*) from geo_city_agency 
	where (idagency=1) and (idcity<>%<registry.idcity>%) 
	and (idcode=1) and (value=substring(%<registry.cf>%,12,4))
	and idcity in (select idcity from geo_cityusable)
]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR006','2','U','registry','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Lo stato estero di nascita di %<registry.title>% non è più esistente','S','([SELECT newnation FROM geo_nation WHERE idnation = %<registry.idnation>%]{I} IS NULL
AND
[SELECT COUNT(*) FROM geo_nation WHERE oldnation = %<registry.idnation>%]{I} = 0)
OR
(%<registry.idnation>% IS NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','1','U','registry','S','S','S','N','N',{ts '2009-06-12 10:17:57.463'},'SA','L''anagrafica %<registry.title>% (ente non commerciale) non ammette la duplicazione del codice fiscale oppure esiste un''altra anagrafica attiva con lo stesso codice fiscale (%<registry.cf>%), il che è possibile solo se si tratta di un altro ente non commerciale.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una ente non commerciale
ISNULL(%<registry.idregistryclass>%,'''') <> ''23''
or
-- non ha codice fiscale
ISNULL(%<registry.cf>%,'''') = ''''
or
ISNULL(%<registry.multi_cf>%,''N'') = ''S'' 
OR
(
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.cf>%,'''')
and registry.idregistryclass = ''23''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','2','U','registry','S','S','S','N','N',{ts '2009-06-12 10:18:08.340'},'SA','L''anagrafica %<registry.title>% (ente non commerciale) non ammette la duplicazione della Partita IVA oppure esiste un''altra anagrafica attiva con la stessa partita IVA (%<registry.p_iva>%), il che è possibile solo se si tratta di un altro ente non commerciale.
','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una ente non commerciale
ISNULL(%<registry.idregistryclass>%,'''') <> ''23''
or
-- non ha partita iva
ISNULL(%<registry.p_iva>%,'''') = ''''
or
ISNULL(%<registry.multi_cf>%,''N'') = ''S'' 
OR
(
[SELECT COUNT(*) 
from registry 
where p_iva = ISNULL(%<registry.p_iva>%,'''')
and registry.idregistryclass = ''23''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'')= ''S'' 
]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','3','U','registry','S','S','S','N','N',{ts '2009-06-12 10:18:26.683'},'SA','L''anagrafica %<registry.title>% essendo un''anagrafica complementare, non può avere nessun codice fiscale o partita IVA.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è un''anagrafica complementare
ISNULL(%<registry.idregistryclass>%,'''') <> ''24''
or
(
-- non ha codice fiscale
ISNULL(%<registry.cf>%,'''') = ''''
and
-- non ha partita iva
ISNULL(%<registry.p_iva>%,'''') = ''''
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','4','U','registry','S','S','S','N','N',{ts '2009-06-12 10:18:46.933'},'SA','L''anagrafica %<registry.title>% è una persona fisica  e non può avere lo stesso codice fiscale di un''altra persona fisica.','N','ISNULL(%<registry.active>%,''S'') = ''N'' 
OR
--persona fisica
ISNULL(%<registry.idregistryclass>%,'''') <> ''22'' 
or
ISNULL(%<registry.cf>%,'''') = ''''
or
(
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.cf>%,'''')
--- persona fisica
and registry.idregistryclass = ''22'' 
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','5','U','registry','S','S','S','N','N',{ts '2009-06-12 10:18:56.370'},'SA','L''anagrafica %<registry.title>% (società, ente comm. o ditta individuale) non ammette la duplicazione del codice fiscale  ed esiste un''altra  società, ente comm. o ditta individuale. attiva con lo stesso codice fiscale (%<registry.cf>%),','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è un ente commerciale
ISNULL(%<registry.idregistryclass>%,'''') <> ''21''
or
-- non ha codice fiscale
ISNULL(%<registry.cf>%,'''') = ''''
or
ISNULL(%<registry.multi_cf>%,''N'') = ''S'' 
or
(
--se non ammette duplicazione di codice fiscale,
--non ci devono essere altri enti commerciali o ditte individuali
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.cf>%,'''')
and registry.idregistryclass = ''21''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','6','U','registry','S','S','S','N','N',{ts '2009-06-12 10:19:05.857'},'SA','L''anagrafica %<registry.title>% (società, ente comm. o ditta individuale)) non ammette la duplicazione della partita IVA ed esiste un''altra società, ente comm. o ditta individuale con la stessa partita IVA (%<registry.p_iva>%) .','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una ente commerciale
ISNULL(%<registry.idregistryclass>%,'''') <> ''21''
or
-- non ha partita iva
ISNULL(%<registry.p_iva>%,'''') = ''''
or
ISNULL(%<registry.multi_cf>%,''N'') = ''S'' 
or
(
--se non ammette duplicazione di partita iva con creditori attivi,
--non devono esserci altri enti commerciali o ditte individuali
--con la stessa partita iva
[SELECT COUNT(*) 
from registry 
where p_iva = ISNULL(%<registry.p_iva>%,'''')
and registry.idregistryclass = ''21''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','7','U','registry','S','S','S','N','N',{ts '2010-02-12 10:43:53.987'},'SARA','L''anagrafica %<registry.title>% (persona fisica) non può avere  lo stesso codice fiscale di un''altra anagrafica attiva, %<registry.cf>%.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una persona fisica
ISNULL(%<registry.idregistryclass>%,'''') <> ''22''
or
-- non ha codice fiscale
ISNULL(%<registry.cf>%,'''') = ''''  
or
(
--non ammette mai la duplicazione di codice fiscale con creditori attivi,
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.cf>%,'''')
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','8','U','registry','S','S','S','N','N',{ts '2010-02-12 10:38:04.207'},'SARA','L''anagrafica %<registry.title>% (società, ente comm. o ditta individuale) ha lo stesso codice fiscale (%<registry.cf>%) di un''altra anagrafica attiva, il che è possibile solo se si tratta di un''altra società, ente comm. o ditta individuale.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una società, ente commerciale o ditta individuale
ISNULL(%<registry.idregistryclass>%,'''') <> ''21''
or
-- non ha codice fiscale
ISNULL(%<registry.cf>%,'''') = ''''
or
(
--può ammettere la duplicazione di codice fiscale con creditori attivi,
--ma solo se si tratta di  società e ditte individuali 
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.cf>%,'''')
--persona fisica
and registry.idregistryclass <> ''21''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) 

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','9','U','registry','S','S','S','N','N',{ts '2010-02-12 10:44:33.067'},'SARA','L''anagrafica %<registry.title>% (persona fisica) non può avere la stessa partita IVA di un''altra anagrafica attiva, %<registry.p_iva>%.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una persona fisica
ISNULL(%<registry.idregistryclass>%,'''') <> ''22''
or
-- non ha partita IVA
ISNULL(%<registry.p_iva>%,'''') = ''''  
or
(
--non ammette mai  duplicazione di partita IVA con creditori attivi,
[SELECT COUNT(*) 
from registry 
where p_iva = ISNULL(%<registry.p_iva>%,'''')
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','10','U','registry','S','S','S','N','N',{ts '2010-02-12 10:45:05.767'},'SARA','L''anagrafica %<registry.title>% (società, ente comm. o ditta individuale) ha la stessa partita IVA (%<registry.cf>%) di un''altra anagrafica attiva, il che è possibile solo se si tratta di un''altra società, ente comm. o ditta individuale.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una società, ente commerciale o ditta individuale
ISNULL(%<registry.idregistryclass>%,'''') <> ''21''
or
-- non ha partita IVA
ISNULL(%<registry.p_iva>%,'''') = ''''
or
(
--può ammettere la duplicazione di partita IVA con creditori attivi,
--ma solo se si tratta di altre società e ditte individuali 
[SELECT COUNT(*) 
from registry 
where p_iva = ISNULL(%<registry.p_iva>%,'''')
--persona fisica
and registry.idregistryclass <>''21''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','12','U','registry','S','S','S','N','N',{ts '2009-09-22 16:29:58.920'},'SARA','L''anagrafica %<registry.title>% (ente non commerciale) non ammette la duplicazione del codice fiscale  nel campo della Partita IVA oppure esiste un''altra anagrafica attiva con la stesso codice Fiscale  (%<registry.p_iva>%), il che è possibile solo se si tratta di un altro ente non commerciale.
','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una ente non commerciale
ISNULL(%<registry.idregistryclass>%,'''') <> ''23''
or
-- non ha partita iva
ISNULL(%<registry.p_iva>%,'''') = ''''
or
ISNULL(%<registry.multi_cf>%,''N'') = ''S'' 
OR
(
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.p_iva>%,'''')
and registry.idregistryclass = ''23''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'')= ''S'' 
]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','13','U','registry','S','S','S','N','N',{ts '2009-09-22 16:29:39.717'},'SARA','L''anagrafica %<registry.title>% (società, ente comm. o ditta individuale) non ammette la duplicazione della partita IVA  nel campo del codice fiscale ed esiste un''altra  società, ente comm. o ditta individuale. attiva con la stessa partita IVA  (%<registry.cf>%),','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è un ente commerciale
ISNULL(%<registry.idregistryclass>%,'''') <> ''21''
or
-- non ha codice fiscale
ISNULL(%<registry.cf>%,'''') = ''''
or
ISNULL(%<registry.multi_cf>%,''N'') = ''S'' 
or
(
--se non ammette duplicazione di codice fiscale,
--non ci devono essere altri enti commerciali o ditte individuali
[SELECT COUNT(*) 
from registry 
where p_iva = ISNULL(%<registry.cf>%,'''')
and registry.idregistryclass = ''21''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','14','U','registry','S','S','S','N','N',{ts '2009-09-22 16:29:25.797'},'SARA','L''anagrafica %<registry.title>% (società, ente comm. o ditta individuale)) non ammette la duplicazione del codice fiscale  nel campo della partita IVA nel campo ed esiste un''altra società, ente comm. o ditta individuale con lo stesso codice Fiscale (%<registry.p_iva>%) .','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una ente commerciale
ISNULL(%<registry.idregistryclass>%,'''') <> ''21''
or
-- non ha partita iva
ISNULL(%<registry.p_iva>%,'''') = ''''
or
ISNULL(%<registry.multi_cf>%,''N'') = ''S'' 
or
(
--se non ammette duplicazione di partita iva con creditori attivi,
--non devono esserci altri enti commerciali o ditte individuali
--con la stessa partita iva scritta nel cf
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.p_iva>%,'''')
and registry.idregistryclass = ''21''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','15','U','registry','S','S','S','N','N',{ts '2009-09-23 10:08:08.280'},'SARA','L''anagrafica %<registry.title>% (ente non commerciale) ha lo stesso codice fiscale (%<registry.cf>%) di un''altra anagrafica attiva, il che è possibile solo se si tratta di un''altro ente non commerciale.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è un ente non commerciale
ISNULL(%<registry.idregistryclass>%,'''') <> ''23''
or
-- non ha codice fiscale
ISNULL(%<registry.cf>%,'''') = ''''
or
(
--non ammette mai la duplicazione di codice fiscale con creditori attivi,
--che non siano altri enti non commerciali
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.cf>%,'''')
--persona fisica
and registry.idregistryclass <>  ''23''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','16','U','registry','S','S','S','N','N',{ts '2009-09-23 10:08:26.140'},'SARA','L''anagrafica %<registry.title>% (ente non commerciale) ha la partita IVA (%<registry.p_iva>%)  uguale a quella  di un''altra anagrafica attiva, il che è possibile solo se si tratta di un''altro ente non commerciale.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una società, ente commerciale o ditta individuale
ISNULL(%<registry.idregistryclass>%,'''') <> ''23''
or
-- non ha partita IVA
ISNULL(%<registry.p_iva>%,'''') = ''''
or
(
--non ammette mai la duplicazione dell partita IVA con creditori attivi,
--che non siano altri enti non commerciali e indipendentemente dal flag
--multi_cf (che è valido solo per tipologie omogenee tra loro: enti commerciali
-- ed enti non commerciali)
[SELECT COUNT(*) 
from registry 
where p_iva = ISNULL(%<registry.p_iva>%,'''')
and registry.idregistryclass <> ''23''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','17','U','registry','S','S','S','N','N',{ts '2009-09-23 10:08:39.047'},'SARA','L''anagrafica %<registry.title>% (ente non commerciale) ha la partita IVA (%<registry.p_iva>%)  registrato nel campo del codice fiscale di un''altra anagrafica attiva, il che è possibile solo se si tratta di un''altro ente non commerciale.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una società, ente commerciale o ditta individuale
ISNULL(%<registry.idregistryclass>%,'''') <> ''23''
or
-- non ha partita IVA
ISNULL(%<registry.p_iva>%,'''') = ''''
or
(
--non ammette mai la duplicazione dell partita IVA con creditori attivi,
--che non siano altri enti non commerciali e indipendentemente dal flag
--multi_cf (che è valido solo per tipologie omogenee tra loro: enti commerciali
-- ed enti non commerciali)
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.p_iva>%,'''')
and registry.idregistryclass <> ''23''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','18','U','registry','S','S','S','N','N',{ts '2009-09-23 10:09:09.577'},'SARA','L''anagrafica %<registry.title>% (ente non commerciale) ha lo stesso codice fiscale (%<registry.cf>%) registrato nel campo della partita IVA di un''altra anagrafica attiva, il che è possibile solo se si tratta di un''altro ente non commerciale.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è un ente non commerciale
ISNULL(%<registry.idregistryclass>%,'''') <> ''23''
or
-- non ha codice fiscale
ISNULL(%<registry.cf>%,'''') = ''''
or
(
--non ammette mai la duplicazione di codice fiscale con creditori attivi,
--che non siano altri enti non commerciali
[SELECT COUNT(*) 
from registry 
where p_iva = ISNULL(%<registry.cf>%,'''')
--persona fisica
and registry.idregistryclass <>  ''23''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','19','U','registry','S','S','S','N','N',{ts '2010-02-12 10:42:36.940'},'SARA','L''anagrafica %<registry.title>% (società, ente comm. o ditta individuale) ha la stessa partita IVA (%<registry.cf>%) registrata nel campo del codice fiscale di un''altra anagrafica attiva, il che è possibile solo se si tratta di un''altra società, ente comm. o ditta individuale.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una società, ente commerciale o ditta individuale
ISNULL(%<registry.idregistryclass>%,'''') <> ''21''
or
-- non ha partita IVA
ISNULL(%<registry.p_iva>%,'''') = ''''
or
(
--può ammettere la duplicazione di codice fiscale con creditori attivi,
--ma solo se si tratta di altre società e ditte individuali 
[SELECT COUNT(*) 
from registry 
where cf = ISNULL(%<registry.p_iva>%,'''')
and registry.idregistryclass <> ''21''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) 


')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR012','20','U','registry','S','S','S','N','N',{ts '2010-02-12 10:42:56.080'},'SARA','L''anagrafica %<registry.title>% (società, ente comm. o ditta individuale) ha come come fiscale (%<registry.p_iva>%)  la partita IVA di un''altra anagrafica attiva, il che è possibile solo se si tratta di un''altra società, ente comm. o ditta individuale.','N','--non attivo
ISNULL(%<registry.active>%,''S'') = ''N'' 
or
--non è una società, ente commerciale o ditta individuale
ISNULL(%<registry.idregistryclass>%,'''') <> ''21''
or
-- non ha partita IVA
ISNULL(%<registry.cf>%,'''') = ''''
or
(
--può ammettere la duplicazione di codice fiscale con creditori attivi,
--ma solo se si tratta di altre società e ditte individuali 
[SELECT COUNT(*) 
from registry 
where p_iva = ISNULL(%<registry.cf>%,'''')
and registry.idregistryclass <>''21''  
and registry.idreg <> %<registry.idreg>%
and ISNULL(registry.active,''S'') = ''S'' 
]{I} = 0
) 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR013','1','U','registry','S','S','S','N','N',{ts '2006-01-18 11:02:13.093'},'Software and more','L''anagrafica selezionata deve avere un codice fiscale valido in quanto è usato come delegato','S','ISNULL(%<registry.cf>% ,'''') <> ''''
OR
[SELECT COUNT(*)
FROM registrypaymethod
WHERE iddeputy = %<registry.idreg>%]{I} = 0
OR
ISNULL(%<registry.cf>% ,'''') = ISNULL(&<registry.cf>& ,'''')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR016','1','U','registry','S','S','S','N','N',{ts '2009-01-20 12:30:37.073'},'SA','Non è possibile modificare la ragione sociale di un fornitore utilizzato all''interno di un buono di carico','N','&<registry.title>& = %<registry.title>%

OR

([SELECT count(*) FROM assetload WHERE idreg 
= %<registry.idreg>%] {I} = 0

AND

[SELECT count(*) FROM assetunload WHERE idreg 
= %<registry.idreg>%] {I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR021','1','U','registry','S','S','S','N','N',{ts '2008-07-10 11:49:18.607'},'NINO','Il codice fiscale di %<registry.title>% risulta come l''ultimo codice tra gli storici, quindi non può essere usato.','N','-- Se il c.f. non è impostato
%<registry.cf>% IS NULL
OR
-- Se non ci sono dati storici
[SELECT COUNT(*)
FROM registrycf
WHERE idreg = %<registry.idreg>%]{I} = 0
OR
-- Se ci sono dati storici ma l''ultimo c.f. storico è differente da quello inserito in registry
[SELECT cf
FROM registrycf
WHERE idreg = %<registry.idreg>%
AND stop =
	[SELECT MAX(stop)
	FROM registrycf
	WHERE idreg = %<registry.idreg>%
		AND stop IS NOT NULL]{D}]{C}
<> %<registry.cf>%
OR
ISNULL(%<registry.cf>%, '''') = ISNULL(&<registry.cf>&,'''')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR022','1','U','registry','S','S','S','N','N',{ts '2008-07-10 13:04:08.733'},'NINO','La partita IVA di %<registry.title>% non è coerente con l''ultima segnalata nel riepilogo storico.','N','-- Controllo sulla partita IVA impostata
-- Partita IVA non impostata
%<registry.p_iva>% IS NULL
OR
-- Se non ci sono dati storici
[SELECT COUNT(*)
FROM registrypiva
WHERE idreg = %<registry.idreg>%]{I} = 0
OR
-- Non ci sono partite IVA correnti nella tabella storica e l''ultima storica è differente dalla principale
(
	[SELECT COUNT(*)
	FROM registrypiva
	WHERE idreg = %<registry.idreg>%
	AND stop IS NULL]{I} = 0
	AND 
	[SELECT p_iva
	FROM registrypiva
	WHERE idreg = %<registry.idreg>%
	AND stop =
		[SELECT MAX(stop)
		FROM registrypiva
		WHERE idreg = %<registry.idreg>%
			AND stop IS NOT NULL]{D}
]{C} <> %<registry.p_iva>%
)
OR
-- Se la partita IVA principale è uguale a quella storica in vigore
[SELECT p_iva
FROM registrypiva
WHERE idreg = %<registry.idreg>%
AND stop IS NULL]{C} =
%<registry.p_iva>%
OR
ISNULL(%<registry.p_iva>%, '''') = ISNULL(&<registry.p_iva>&,'''')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR022','2','U','registry','S','S','S','N','N',{ts '2008-07-10 11:50:41.887'},'NINO','La partita IVA di %<registry.title>% non è coerente con l''ultima segnalata nel riepilogo storico.','N','-- Controllo sulla partita IVA NON impostata
-- Partita IVA impostata
%<registry.p_iva>% IS NOT NULL
OR
-- Se non ci sono dati storici
[SELECT COUNT(*)
FROM registrypiva
WHERE idreg = %<registry.idreg>%]{I} = 0
OR
-- Non ci sono partite IVA correnti nella tabella storica e l''ultima storica è differente dalla principale
[SELECT COUNT(*)
FROM registrypiva
WHERE idreg = %<registry.idreg>%
AND stop IS NULL]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR026','1','U','registry','S','S','S','N','N',{ts '2009-02-24 12:01:14.313'},'ASSISTENZA','E'' già presente nell''archivio anagrafico una scheda non corrispodente a persona fisica con la denominazione %<registry.title>%. Verificare, prima di salvare, che non si tratti dello stesso soggetto, al fine di non duplicare le schede.','S','ISNULL(%<registry.active>%,''S'') = ''N''  
OR
--persona fisica 
ISNULL(%<registry.idregistryclass>%,'''') = ''22''  
OR
[SELECT COUNT(*) 
FROM registry 
WHERE title = %<registry.title>%
AND active=''S''
AND ISNULL(%<registry.idregistryclass>%,'''') <> ''22'' 
]{I}=0
OR 
%<registry.title>%=&<registry.title>&

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR027','1','U','registry','S','S','S','N','N',{ts '2009-04-29 15:41:36.007'},'SARA','L''anagrafica %<registry.title>%, avente codice %<registry.idreg>% non può essere modificata perchè dovrà essere unificata con un''altra anagrafica di codice %<registry.toredirect>% .','S','[(SELECT toredirect
from registry 
where idreg = %<registry.idreg>%)]{I}  IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR027','2','U','registry','S','S','S','N','N',{ts '2009-04-29 13:54:15.197'},'SARA','L''anagrafica %<registry.title>%, avente codice %<registry.idreg>% non può essere disattivata perchè esistono altre anagrafiche che sono state contrassegnate come unificabili con essa.','S','[(SELECT count(*) 
from registry 
where toredirect = %<registry.idreg>%)]{I} = 0
OR
ISNULL(%<registry.active>%,''S'') = ISNULL(&<registry.active>&,''S'')
OR
ISNULL(%<registry.active>%,''S'') = ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM011','1','U','registry','S','S','S','N','N',{ts '2013-02-26 09:41:55.920'},'sa','Non può essere modificata la denominazione di %<registry.title>%  se ad esso è imputato un movimento di spesa/entrata inserito in un mandato di pagamento/reversale di incasso.','S','(ISNULL(&<registry.title>&,'''')=ISNULL(%<registry.title>%,'''')) 
OR
(
[(SELECT COUNT(*) 
FROM expense
JOIN expenselast
ON expense.idexp = expenselast.idexp
WHERE expense.idreg = %<registry.idreg>%
	AND expenselast.kpay IS NOT NULL
)]{I} = 0
AND 
[(SELECT COUNT(*) 
FROM income
JOIN incomelast
ON income.idinc = incomelast.idinc
WHERE income.idreg = %<registry.idreg>%
  	AND incomelast.kpro IS NOT NULL
)]{I} = 0
)
or
[SELECT count(*) from dbdepartment]{I} >1')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM011','2','U','registry','S','S','S','N','N',{ts '2009-01-24 13:59:52.047'},'SARA','Non può essere modificata la denominazione di %<registry.title>% o perchè compare come percipiente o versante di un movimento finanziario presso questo o altro dipartimento/struttura.','S','(ISNULL(&<registry.title>&,'''')=ISNULL(%<registry.title>%,'''')) 
OR
(
[execute count_table_field ''expense'',''idreg'', %<registry.idreg>%,@outvar output]{I}=0
AND 
[execute count_table_field ''income'',''idreg'', %<registry.idreg>%,@outvar output]{I}=0
)
or
[SELECT count(*) from dbdepartment]{I} =1



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM011','3','U','registry','S','S','S','N','N',{ts '2013-02-26 09:58:02.840'},'sa','Non può essere modificato il codice fiscale di %<registry.title>%  se ad esso è imputato un movimento di spesa/entrata inserito in un mandato di pagamento/reversale di incasso.','S','(ISNULL(&<registry.cf>&,'''')=ISNULL(%<registry.cf>%,'''')) 
OR
(
[(SELECT COUNT(*) 
FROM expense
JOIN expenselast
ON expense.idexp = expenselast.idexp
WHERE expense.idreg = %<registry.idreg>%
	AND expenselast.kpay IS NOT NULL
)]{I} = 0
AND 
[(SELECT COUNT(*) 
FROM income
JOIN incomelast
ON income.idinc = incomelast.idinc
WHERE income.idreg = %<registry.idreg>%
  	AND incomelast.kpro IS NOT NULL
)]{I} = 0
)
or
[SELECT count(*) from dbdepartment]{I} >1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM011','4','U','registry','S','S','S','N','N',{ts '2013-02-26 09:58:24.983'},'sa','Non può essere modificato il codice fiscale di %<registry.title>% o perchè compare come percipiente o versante di un movimento finanziario presso questo o altro dipartimento/struttura.','S','(ISNULL(&<registry.title>&,'''')=ISNULL(%<registry.title>%,'''')) 
OR
(
[execute count_table_field ''expense'',''idreg'', %<registry.idreg>%,@outvar output]{I}=0
AND 
[execute count_table_field ''income'',''idreg'', %<registry.idreg>%,@outvar output]{I}=0
)
or
[SELECT count(*) from dbdepartment]{I} =1



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM011','5','U','registry','S','S','S','N','N',{ts '2013-02-26 09:57:02.590'},'sa','Non può essere modificata la p.iva di %<registry.title>%  se ad esso è imputato un movimento di spesa/entrata inserito in un mandato di pagamento/reversale di incasso.','S','(ISNULL(&<registry.p_iva>&,'''')=ISNULL(%<registry.p_iva>%,'''')) 
OR
(
[(SELECT COUNT(*) 
FROM expense
JOIN expenselast
ON expense.idexp = expenselast.idexp
WHERE expense.idreg = %<registry.idreg>%
	AND expenselast.kpay IS NOT NULL
)]{I} = 0
AND 
[(SELECT COUNT(*) 
FROM income
JOIN incomelast
ON income.idinc = incomelast.idinc
WHERE income.idreg = %<registry.idreg>%
  	AND incomelast.kpro IS NOT NULL
)]{I} = 0
)
or
[SELECT count(*) from dbdepartment]{I} >1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM011','6','U','registry','S','S','S','N','N',{ts '2013-02-26 09:57:54.873'},'sa','Non può essere modificata la p.iva di %<registry.title>% o perchè compare come percipiente o versante di un movimento finanziario presso questo o altro dipartimento/struttura.','S','(ISNULL(&<registry.p_iva>&,'''')=ISNULL(%<registry.p_iva>%,'''')) 
OR
(
[execute count_table_field ''expense'',''idreg'', %<registry.idreg>%,@outvar output]{I}=0
AND 
[execute count_table_field ''income'',''idreg'', %<registry.idreg>%,@outvar output]{I}=0
)
or
[SELECT count(*) from dbdepartment]{I} =1



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','1','U','registry','S','S','S','N','N',{ts '2009-05-28 13:10:22.140'},'SARA','Le regole di sicurezza vietano la modifica di anagrafiche che consentano la duplicazione di  CF o P. IVA.','S','(ISNULL(&<registry.multi_cf>&,''N'') = ''S'')
OR
(ISNULL(%<registry.multi_cf>%,''N'') = ''N'')
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename  = ''anag_d''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR007','2','U','registry','S','S','S','N','N',{ts '2009-11-02 15:33:46.783'},'SARA','Le regole di sicurezza vietano la disabilitazione di anagrafiche.','S','ISNULL(&<registry.active>&,''S'') = ''N''
OR
ISNULL(%<registry.active>%,''S'') = ''S''
OR
[SELECT COUNT(*)
	FROM flowchartrestrictedfunction FF
	JOIN restrictedfunction RF
		ON RF.idrestrictedfunction = FF.idrestrictedfunction
	WHERE RF.variablename  = ''anag_dis''
		AND FF.idflowchart = %<sys_idflowchart>%]{I} > 0
OR
%<sys_idflowchart>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','1','D','registryaddress','S','S','S','N','N',{ts '2008-04-09 14:43:01.717'},'SARA','Esistono cedolini con addizionale regionale calcolati durante il periodo di validità dell''indirizzo. Non è possibile cancellare il domicilio fiscale per l''anagrafica  %<registry.title>% in quanto quest''ultimo deve rimanere invariato alla data del 31 dicembre dell''anno cui si riferisce l''addizionale o alla data di fine del contratto. ','S','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
   FROM address 
  WHERE codeaddress =''07_SW_DOM'']{I})
OR
([SELECT COUNT(*) 
    FROM payroll
    JOIN parasubcontract
	ON parasubcontract.idcon = payroll.idcon
    JOIN payrolltax 
      ON payroll.idpayroll = payrolltax.idpayroll
    JOIN tax 
      ON payrolltax.taxcode = tax.taxcode
   WHERE parasubcontract.idreg = %<registryaddress.idreg>%
     AND ISNULL(tax.geoappliance,'''') = ''R''
     AND tax.taxkind = 1
     AND tax.active = ''S''
     AND payroll.stop 
     BETWEEN ISNULL(%<registryaddress.start>%,{d ''1900-01-01''})
     AND ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})
]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','2','D','registryaddress','S','S','S','N','N',{ts '2008-04-09 14:43:09.140'},'SARA','Esistono cedolini con addizionale regionale calcolati durante il periodo di validità dell''indirizzo. Non è possibile cancellare l''indirizzo predefinito per l''anagrafica  %<registry.title>% in quanto quest''ultimo rimanere invariato alla data del 31 dicembre dell''anno cui si riferisce l''addizionale o alla data di fine del contratto (non essendoci un altro indirizzo specificato come "domicilio fiscale").','S','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
   FROM address 
  WHERE codeaddress =''07_SW_DEF'']{I})
OR
([SELECT COUNT(*) FROM payroll
JOIN payrolltax ON payroll.idpayroll = payrolltax.idpayroll
JOIN tax ON payrolltax.taxcode = tax.taxcode
JOIN parasubcontract
	ON parasubcontract.idcon = payroll.idcon
WHERE parasubcontract.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') = ''R''
AND tax.taxkind = 1
AND active = ''S''
AND payroll.stop 
BETWEEN ISNULL(%<registryaddress.start>%,{d ''1900-01-01''})
     AND ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})
AND NOT EXISTS (SELECT * FROM registryaddress
                JOIN address 
	            ON address.idaddress =  registryaddress.idaddresskind
		   WHERE idreg = %<registryaddress.idreg>% 
		     AND address.codeaddress = ''07_SW_DOM'' 
		     AND payroll.stop 
		 BETWEEN ISNULL(%<registryaddress.start>%,{d ''1900-01-01''})
          AND ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})
			) ]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','3','D','registryaddress','S','S','S','N','N',{ts '2008-04-09 14:43:14.000'},'SARA','Esistono cedolini con addizionale comunale calcolati durante il periodo di validità dell''indirizzo. Non è possibile cancellare il domicilio fiscale per l''anagrafica  %<registry.title>% in quanto quest''ultimo deve rimanere invariato alla data del 1 gennaio dell''anno cui si riferisce l''addizionale. ','S','(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
   FROM address 
  WHERE codeaddress =''07_SW_DOM'']{I})
OR
([SELECT COUNT(*) FROM payroll
 JOIN parasubcontract
	ON parasubcontract.idcon = payroll.idcon
JOIN payrolltax ON payroll.idpayroll = payrolltax.idpayroll
JOIN tax ON payrolltax.taxcode = tax.taxcode
WHERE parasubcontract.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') = ''C''
AND tax.taxkind = 1
AND tax.active = ''S''
AND CONVERT(datetime,''01-01-''+ 
    CONVERT(varchar(4),payroll.fiscalyear),105) 
BETWEEN ISNULL(%<registryaddress.start>%,{d ''1900-01-01''})
     AND ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})
]{I} = 0)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','4','D','registryaddress','S','S','S','N','N',{ts '2008-04-09 14:43:20.750'},'SARA','Esistono cedolini con addizionale comunale calcolati durante il periodo di validità dell''indirizzo. Non è possibile cancellare l''indirizzo predefinito per l''anagrafica  %<registry.title>% in quanto quest''ultimo rimanere invariato alla data del 1 gennaio dell''anno cui si riferisce l''addizionale (non essendoci un altro indirizzo specificato come "domicilio fiscale").','S','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
  FROM address 
  WHERE codeaddress = ''07_SW_DEF''
 ]{I})
OR
([SELECT COUNT(*) FROM payroll
JOIN parasubcontract
ON parasubcontract.idcon = payroll.idcon
JOIN payrolltax ON payroll.idpayroll = payrolltax.idpayroll
JOIN tax ON payrolltax.taxcode = tax.taxcode
WHERE parasubcontract.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') = ''C''
AND tax.taxkind = 1
AND active = ''S''
AND CONVERT(datetime,''01-01-''+ 
    CONVERT(varchar(4),payroll.fiscalyear),105) 
BETWEEN ISNULL(%<registryaddress.start>%,{d ''1900-01-01''})
     AND ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''}) 
AND NOT EXISTS (SELECT * FROM registryaddress
                JOIN address 
	            ON address.idaddress =  registryaddress.idaddresskind
		   WHERE idreg = %<registryaddress.idreg>% 
		     AND address.codeaddress = ''07_SW_DOM'' 
		     AND payroll.stop 
		 BETWEEN ISNULL(registryaddress.start,{d ''1900-01-01''})
          AND ISNULL(registryaddress.stop,{d ''2079-01-01''})
			) ]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','5','D','registryaddress','S','S','S','N','N',{ts '2008-04-09 14:43:28.110'},'SARA','Esistono prestazioni con addizionali comunali o regionali erogati durante il periodo di validità dell''indirizzo. Non è possibile cancellare il domicilio fiscale per l''anagrafica  %<registry.title>% in quanto quest''ultimo deve rimanere invariato alla data del 1 gennaio dell''anno cui si riferisce l''addizionale. ','S','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
   FROM address 
  WHERE codeaddress = ''07_SW_DOM'']{I})
OR
([SELECT COUNT(*) FROM 
 expensetax 
JOIN tax ON expensetax.taxcode = tax.taxcode
JOIN expense ON expense.idexp = expensetax.idexp
WHERE expense.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') IN (''C'',''R'')
AND tax.taxkind = 1
AND active = ''S''
AND CONVERT(datetime,''01-01-''+ 
    CONVERT(varchar(4),YEAR(expensetax.competencydate)),105) 
BETWEEN ISNULL(%<registryaddress.start>%,{d ''1900-01-01''})
     AND ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''}) 

  AND NOT EXISTS (SELECT * FROM expensecasualcontract  
  join expenselink on expensecasualcontract.idexp=expenselink.idparent 
  WHERE expenselink.idchild = expensetax.idexp)
  
   AND NOT EXISTS (SELECT * FROM expensepayroll  
  join expenselink on expensepayroll.idexp=expenselink.idparent 
  WHERE expenselink.idchild = expensetax.idexp) 
]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','6','D','registryaddress','S','S','S','N','N',{ts '2008-04-09 14:43:36.500'},'SARA','Esistono prestazioni con addizionali comunali o regionali erogati durante il periodo di validità dell''indirizzo. Non è possibile cancellare l''indirizzo predefinito (in assenza di un indirizzo specificato come "domicilio fiscale")  per l''anagrafica  %<registry.title>% in quanto quest''ultimo deve rimanere invariato alla data del 1 gennaio dell''anno cui si riferisce l''addizionale. ','S','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
   FROM address 
  WHERE codeaddress = ''07_SW_DEF'']{I})
OR
([SELECT COUNT(*) FROM 
 expensetax 
JOIN tax ON expensetax.taxcode = tax.taxcode
JOIN expense ON expense.idexp = expensetax.idexp
WHERE expense.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') IN (''C'',''R'')
AND tax.taxkind = 1
AND active = ''S''
AND CONVERT(datetime,''01-01-''+ 
    CONVERT(varchar(4),YEAR(expensetax.competencydate)),105) 
BETWEEN ISNULL(%<registryaddress.start>%,{d ''1900-01-01''})
     AND ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})

  AND NOT EXISTS (SELECT * FROM expensecasualcontract  
  join expenselink on expensecasualcontract.idexp=expenselink.idparent 
  WHERE expenselink.idchild = expensetax.idexp)
  
   AND NOT EXISTS (SELECT * FROM expensepayroll  
  join expenselink on expensepayroll.idexp=expenselink.idparent 
  WHERE expenselink.idchild = expensetax.idexp) 
AND NOT EXISTS (SELECT * FROM registryaddress
                JOIN address 
	            ON address.idaddress =  registryaddress.idaddresskind
		   WHERE idreg = %<registryaddress.idreg>% 
		     AND address.codeaddress = ''07_SW_DOM'' 
		     AND CONVERT(datetime,''01-01-''+ 
    		     CONVERT(varchar(4),YEAR(expensetax.competencydate)),105)
	  BETWEEN ISNULL(registryaddress.start,{d ''1900-01-01''})
     AND ISNULL(registryaddress.stop,{d ''2079-01-01''})
			)
]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR006','1','I','registryaddress','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il comune di residenza di %<registry.title>% non è più esistente','S','[SELECT COUNT(*) FROM geo_cityusable
WHERE idcity = %<registryaddress.idcity>%]{I} > 0
OR
(%<registryaddress.idcity>% IS NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR006','2','I','registryaddress','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Lo stato estero di residenza di %<registry.title>% non è più esistente','S','([SELECT newnation FROM geo_nation WHERE idnation = %<registryaddress.idnation>%]{I} IS NULL
AND
[SELECT COUNT(*) FROM geo_nation WHERE oldnation = %<registryaddress.idnation>%]{I} = 0)
OR
(%<registryaddress.idnation>% IS NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','1','I','registryaddress','S','S','S','N','N',{ts '2008-04-09 14:43:43.063'},'SARA','Esistono cedolini con addizionale regionale calcolati durante il periodo di validità dell''indirizzo. Non è possibile inserire un nuovo domicilio fiscale per l''anagrafica  %<registry.title>% in quanto quest''ultimo deve rimanere invariato alla data del 31 dicembre dell''anno cui si riferisce l''addizionale o alla data di fine del contratto. ','S','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
   FROM address 
  WHERE codeaddress =''07_SW_DOM'']{I})
OR
([SELECT COUNT(*) FROM payroll
JOIN parasubcontract
	ON parasubcontract.idcon = payroll.idcon
JOIN payrolltax ON payroll.idpayroll = payrolltax.idpayroll
JOIN tax ON payrolltax.taxcode = tax.taxcode
WHERE parasubcontract.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') = ''R''
AND tax.taxkind = 1
AND tax.active = ''S''
AND payroll.stop 
BETWEEN ISNULL(%<registryaddress.start>%,{d ''1900-01-01''})
     AND ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})
]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','2','I','registryaddress','S','S','S','N','N',{ts '2008-04-09 14:43:49.500'},'SARA','Esistono cedolini con addizionale regionale calcolati durante il periodo di validità dell''indirizzo. Non è possibile inserire un nuovo indirizzo predefinito per l''anagrafica  %<registry.title>% in quanto quest''ultimo rimanere invariato alla data del 31 dicembre dell''anno cui si riferisce l''addizionale o alla data di fine del contratto (non essendoci un altro indirizzo specificato come "domicilio fiscale").','S','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
   FROM address 
  WHERE codeaddress =''07_SW_DEF'']{I})
OR
([SELECT COUNT(*) FROM payroll
JOIN parasubcontract
	ON parasubcontract.idcon = payroll.idcon
JOIN payrolltax ON payroll.idpayroll = payrolltax.idpayroll
JOIN tax ON payrolltax.taxcode = tax.taxcode
WHERE parasubcontract.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') = ''R''
AND tax.taxkind = 1
AND tax.active = ''S''
AND payroll.stop 
BETWEEN ISNULL(%<registryaddress.start>%,{d ''1900-01-01''})
     AND ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''}) 
AND NOT EXISTS (SELECT * FROM registryaddress
                JOIN address 
	            ON address.idaddress =  registryaddress.idaddresskind
		   WHERE idreg = %<registryaddress.idreg>% 
		     AND address.codeaddress = ''07_SW_DOM'' 
		     AND payroll.stop 
		 BETWEEN ISNULL(registryaddress.start,{d ''1900-01-01''})
     		AND ISNULL(registryaddress.stop,{d ''2079-01-01''})
			)]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','3','I','registryaddress','S','S','S','N','N',{ts '2008-04-09 14:44:04.517'},'SARA','Esistono cedolini con addizionale comunale calcolati durante il periodo di validità dell''indirizzo. Non è possibile inserire un nuovo domicilio fiscale per l''anagrafica  %<registry.title>%  in quanto quest''ultimo deve rimanere invariato alla data del 1 gennaio dell''anno cui si riferisce l''addizionale. ','S','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
  FROM address 
  WHERE codeaddress =''07_SW_DOM''
 ]{I})
OR
([SELECT COUNT(*) FROM payroll
 JOIN parasubcontract
	ON parasubcontract.idcon = payroll.idcon
JOIN payrolltax ON payroll.idpayroll = payrolltax.idpayroll
JOIN tax ON payrolltax.taxcode = tax.taxcode
WHERE parasubcontract.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') = ''C''
AND tax.taxkind = 1
AND tax.active = ''S''
AND CONVERT(datetime,''01-01-''+ 
    CONVERT(varchar(4),payroll.fiscalyear),105) 
BETWEEN ISNULL(%<registryaddress.start>%,{d ''1900-01-01''})
     AND ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})
 ]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','4','I','registryaddress','S','S','S','N','N',{ts '2008-04-09 14:44:10.377'},'SARA','Esistono cedolini con addizionale comunale calcolati durante il periodo di validità dell''indirizzo. Non è possibile inserire un nuovo indirizzo predefinito per l''anagrafica  %<registry.title>% in quanto quest''ultimo rimanere invariato alla data del 1 gennaio dell''anno cui si riferisce l''addizionale  (non essendoci un altro indirizzo specificato come "domicilio fiscale").','S','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
  FROM address 
  WHERE codeaddress = ''07_SW_DEF''
 ]{I})
OR
([SELECT COUNT(*) FROM payroll
JOIN parasubcontract
	ON parasubcontract.idcon = payroll.idcon
JOIN payrolltax ON payroll.idpayroll = payrolltax.idpayroll
JOIN tax ON payrolltax.taxcode = tax.taxcode
WHERE parasubcontract.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') = ''C''
AND tax.taxkind = 1
AND tax.active = ''S''
AND CONVERT(datetime,''01-01-''+ 
    CONVERT(varchar(4),payroll.fiscalyear),105) 
BETWEEN ISNULL(%<registryaddress.start>%,{d ''1900-01-01''})
     AND ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})
AND NOT EXISTS (SELECT * FROM registryaddress
                JOIN address 
	            ON address.idaddress =  registryaddress.idaddresskind
		   WHERE idreg = %<registryaddress.idreg>% 
		     AND address.codeaddress = ''07_SW_DOM'' 
		     AND payroll.stop 
	BETWEEN ISNULL(registryaddress.start,{d ''1900-01-01''})
     AND ISNULL(registryaddress.stop,{d ''2079-01-01''})
			) ]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','5','I','registryaddress','S','S','S','N','N',{ts '2008-04-09 14:44:15.797'},'SARA','Esistono prestazioni con addizionali comunali o regionali  erogati durante il periodo di validità dell''indirizzo. Non è possibile inserire il domicilio fiscale per l''anagrafica  %<registry.title>% in quanto quest''ultimo deve rimanere invariato alla data del 1 gennaio dell''anno cui si riferisce l''addizionale o alla data di fine del contratto. ','S','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
   FROM address 
  WHERE codeaddress = ''07_SW_DOM'']{I})
OR
([SELECT COUNT(*) FROM 
 expensetax 
JOIN tax ON expensetax.taxcode = tax.taxcode
JOIN expense ON expense.idexp = expensetax.idexp
WHERE expense.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') IN (''C'',''R'')
AND tax.taxkind = 1
AND tax.active = ''S''
AND CONVERT(datetime,''01-01-''+ 
    CONVERT(varchar(4),YEAR(expensetax.competencydate)),105) 
BETWEEN ISNULL(%<registryaddress.start>%,{d ''1900-01-01''})
     AND ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})

  AND NOT EXISTS (SELECT * FROM expensecasualcontract  
  join expenselink on expensecasualcontract.idexp=expenselink.idparent 
  WHERE expenselink.idchild = expensetax.idexp)
  
   AND NOT EXISTS (SELECT * FROM expensepayroll  
  join expenselink on expensepayroll.idexp=expenselink.idparent 
  WHERE expenselink.idchild = expensetax.idexp) 
]{I} = 0)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','6','I','registryaddress','S','S','S','N','N',{ts '2008-04-09 14:44:21.437'},'SARA','Esistono prestazioni con addizionali comunali o regionali  erogati durante il periodo di validità dell''indirizzo. Non è possibile inserire l''indirizzo predefinito (in assenza di un indirizzo specificato come "domicilio fiscale")  per l''anagrafica  %<registry.title>% in quanto quest''ultimo deve rimanere invariato alla data del 1 gennaio dell''anno cui si riferisce l''addizionale. ','S','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
   FROM address 
  WHERE codeaddress = ''07_SW_DEF'']{I})
OR
([SELECT COUNT(*) FROM 
 expensetax 
JOIN tax ON expensetax.taxcode = tax.taxcode
JOIN expense ON expense.idexp = expensetax.idexp
WHERE expense.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') IN (''C'',''R'')
AND tax.taxkind = 1
AND active = ''S''
AND CONVERT(datetime,''01-01-''+ 
    CONVERT(varchar(4),YEAR(expensetax.competencydate)),105) 
BETWEEN ISNULL(%<registryaddress.start>%,{d ''1900-01-01''})
     AND ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})

  AND NOT EXISTS (SELECT * FROM expensecasualcontract  
  join expenselink on expensecasualcontract.idexp=expenselink.idparent 
  WHERE expenselink.idchild = expensetax.idexp)
  
   AND NOT EXISTS (SELECT * FROM expensepayroll  
  join expenselink on expensepayroll.idexp=expenselink.idparent 
  WHERE expenselink.idchild = expensetax.idexp) 
AND NOT EXISTS (SELECT * FROM registryaddress
                JOIN address 
	            ON address.idaddress =  registryaddress.idaddresskind
		   WHERE idreg = %<registryaddress.idreg>% 
		     AND address.codeaddress = ''07_SW_DOM'' 
		     AND CONVERT(datetime,''01-01-''+ 
    		     CONVERT(varchar(4),YEAR(expensetax.competencydate)),105)
		 BETWEEN ISNULL(registryaddress.start,{d ''1900-01-01''})
          AND ISNULL(registryaddress.stop,{d ''2079-01-01''})
			)
]{I} = 0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','registryaddress','S','S','S','N','N',{ts '2010-05-29 11:44:57.857'},'SA','Nell''intervallo di validità indicato esiste già un indirizzo di tipo %<address.description>% per l''anagrafica %<registry.title>%','N','[(SELECT count(*) from registryaddress 
where idaddresskind = %<registryaddress.idaddresskind>% 
and idreg = %<registryaddress.idreg>% 
and 
(
   (start > %<registryaddress.start>% and  (start <= %<registryaddress.stop>% or %<registryaddress.stop>% IS NULL) )
OR 
   (  start < %<registryaddress.start>% and (stop IS NULL or stop >= %<registryaddress.start>%)  )
)
)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR006','1','U','registryaddress','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il comune di residenza di %<registry.title>% non è più esistente','S','[SELECT COUNT(*) FROM geo_cityusable
WHERE idcity = %<registryaddress.idcity>%]{I} > 0
OR
(%<registryaddress.idcity>% IS NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR006','2','U','registryaddress','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Lo stato estero di residenza di %<registry.title>% non è più esistente','S','[SELECT newnation FROM geo_nation WHERE idnation = %<registryaddress.idnation>%]{I} IS NULL
OR
[SELECT COUNT(*) FROM geo_nation WHERE oldnation = %<registryaddress.idnation>%]{I} = 0
OR
(%<registryaddress.idnation>% IS NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','1','U','registryaddress','S','S','S','N','N',{ts '2008-08-01 12:57:32.733'},'SA','Esistono cedolini con addizionale comunale calcolati durante il periodo di validità dell''indirizzo. Il domicilio fiscale alla data del 1° gennaio dell''anno cui si riferisce l''addizionale stessa per l''anagrafica  %<registry.title>% deve rimanere invariato . ','N','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
   FROM address 
  WHERE codeaddress =''07_SW_DOM'']{I})
OR
([SELECT COUNT(*) FROM payroll
JOIN parasubcontract
	ON parasubcontract.idcon = payroll.idcon
JOIN payrolltax ON payroll.idpayroll = payrolltax.idpayroll
JOIN tax ON payrolltax.taxcode = tax.taxcode
WHERE parasubcontract.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') = ''C''
AND tax.taxkind = 1
AND active = ''S''
AND CONVERT(datetime,''01-01-''+ 
    CONVERT(varchar(4),payroll.fiscalyear),105) 
>
	 [SELECT CASE 
		WHEN ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})<
	        ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''}) 
		THEN  ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})
		ELSE  ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''})
		END ]{D}
]{I} = 0)
OR
(
(%<registryaddress.idcity>% = &<registryaddress.idcity>&)
AND
( 
 ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''}) = 
 ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''})
)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','2','U','registryaddress','S','S','S','N','N',{ts '2008-08-01 12:46:57.627'},'SA','Esistono cedolini con addizionale regionale calcolati durante il periodo di validità dell''indirizzo. Non è possibile modificare il domicilio fiscale per l''anagrafica  %<registry.title>% in quanto quest''ultimo deve rimanere invariato alla data del 31 dicembre dell''anno cui si riferisce l''addizionale o alla data di fine del contratto. ','N','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
   FROM address 
  WHERE codeaddress =''07_SW_DOM'']{I})
OR
([SELECT COUNT(*) FROM payroll
 JOIN parasubcontract
	ON parasubcontract.idcon = payroll.idcon
JOIN payrolltax ON payroll.idpayroll = payrolltax.idpayroll
JOIN tax ON payrolltax.taxcode = tax.taxcode
WHERE parasubcontract.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') = ''R''
AND tax.taxkind = 1
AND tax.active = ''S''
AND payroll.stop >
	 [SELECT CASE 
		WHEN ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})<
	        ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''}) 
		THEN  ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})
		ELSE  ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''})
		END ]{D}
]{I} = 0)
OR
(
(
	ISNULL(
		[SELECT idfiscaltaxregion
		FROM geo_cityfiscalview
		WHERE idcity = %<registryaddress.idcity>%]{C}
	,'''') =
	ISNULL(
		[SELECT idfiscaltaxregion
		FROM geo_cityfiscalview
		WHERE idcity = &<registryaddress.idcity>&]{C}
	,'''')
)
AND
( 
 ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''}) = 
 ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''})
)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','3','U','registryaddress','S','S','S','N','N',{ts '2008-08-01 12:47:07.483'},'SA','Esistono cedolini con addizionale regionale calcolati durante il periodo di validità dell''indirizzo. Non è possibile modificare l''indirizzo predefinito per l''anagrafica  %<registry.title>% in quanto quest''ultimo rimanere invariato alla data del 31 dicembre dell''anno cui si riferisce l''addizionale o alla data di fine del contratto (non essendoci un altro indirizzo specificato come "domicilio fiscale").','N','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
   FROM address 
  WHERE codeaddress =''07_SW_DEF'']{I})
OR
([SELECT COUNT(*) FROM payroll
JOIN parasubcontract
	ON parasubcontract.idcon = payroll.idcon
JOIN payrolltax ON payroll.idpayroll = payrolltax.idpayroll
JOIN tax ON payrolltax.taxcode = tax.taxcode
WHERE parasubcontract.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') = ''R''
AND tax.taxkind = 1
AND active = ''S''
AND payroll.stop >
	 [SELECT CASE 
		WHEN ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})<
	        ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''}) 
		THEN  ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})
		ELSE  ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''})
		END ]{D}
AND NOT EXISTS (SELECT * FROM registryaddress
                JOIN address 
	            ON address.idaddress =  registryaddress.idaddresskind
		   WHERE idreg = %<registryaddress.idreg>% 
		     AND address.codeaddress = ''07_SW_DOM'' 
		     AND payroll.stop 
		 BETWEEN ISNULL(registryaddress.start,{d ''1900-01-01''})
     AND ISNULL(registryaddress.stop,{d ''2079-01-01''})
			)]{I} = 0)
OR
(
(
	ISNULL(
		[SELECT idfiscaltaxregion
		FROM geo_cityfiscalview
		WHERE idcity = %<registryaddress.idcity>%]{C}
	,'''') =
	ISNULL(
		[SELECT idfiscaltaxregion
		FROM geo_cityfiscalview
		WHERE idcity = &<registryaddress.idcity>&]{C}
	,'''')
)AND
( 
 ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''}) = 
 ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''})
)
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','4','U','registryaddress','S','S','S','N','N',{ts '2008-08-01 12:57:45.530'},'SA','Esistono cedolini con addizionale comunale calcolati durante il periodo di validità dell''indirizzo. L''indirizzo predefinito (in assenza di un indirizzo specificato come "domicilio fiscale")  alla data del 1° gennaio dell''anno cui si riferisce l''addizionale stessa per l''anagrafica  %<registry.title>% deve rimanere invariato . ','N','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
   FROM address 
  WHERE codeaddress =''07_SW_DEF'']{I})
OR
([SELECT COUNT(*) FROM payroll
JOIN parasubcontract
	ON parasubcontract.idcon = payroll.idcon
JOIN payrolltax ON payroll.idpayroll = payrolltax.idpayroll
JOIN tax ON payrolltax.taxcode = tax.taxcode
WHERE parasubcontract.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') = ''C''
AND tax.taxkind = 1
AND active = ''S'' AND
CONVERT(datetime,''01-01-''+ 
CONVERT(varchar(4),payroll.fiscalyear),105)  >
	 [SELECT CASE 
		WHEN ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})<
	        ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''}) 
		THEN  ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})
		ELSE  ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''})
		END ]{D}
AND NOT EXISTS (SELECT * FROM registryaddress
                JOIN address 
	            ON address.idaddress =  registryaddress.idaddresskind
		   WHERE idreg = %<registryaddress.idreg>% 
		     AND address.codeaddress = ''07_SW_DOM'' 
		     AND CONVERT(datetime,''01-01-''+ 
		     CONVERT(varchar(4),payroll.fiscalyear),105)  
		 BETWEEN ISNULL(registryaddress.start,{d ''1900-01-01''})
     AND ISNULL(registryaddress.stop,{d ''2079-01-01''})
			)]{I} = 0)
OR
(
(%<registryaddress.idcity>% = &<registryaddress.idcity>&)
AND
( 
 ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''}) = 
 ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''})
)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','5','U','registryaddress','S','S','S','N','N',{ts '2008-08-01 12:58:02.390'},'SA','Esistono prestazioni con addizionali comunali o regionali erogati durante il periodo di validità dell''indirizzo. Non è possibile modificare il domicilio fiscale per l''anagrafica  %<registry.title>% in quanto quest''ultimo deve rimanere invariato alla data del 1 gennaio dell''anno cui si riferisce l''addizionale . ','N','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
   FROM address 
  WHERE codeaddress = ''07_SW_DOM'']{I})
OR
([SELECT COUNT(*) FROM 
 expensetax 
JOIN tax ON expensetax.taxcode = tax.taxcode
JOIN expense ON expense.idexp = expensetax.idexp
WHERE expense.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') IN (''C'',''R'')
AND tax.taxkind = 1
AND tax.active = ''S''
AND CONVERT(datetime,''01-01-''+ 
    CONVERT(varchar(4),YEAR(expensetax.competencydate)),105) >
	 [SELECT CASE 
		WHEN ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})<
	        ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''}) 
		THEN  ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})
		ELSE  ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''})
		END ]{D}
  AND NOT EXISTS (SELECT * FROM expensecasualcontract  
  join expenselink on expensecasualcontract.idexp=expenselink.idparent 
  WHERE expenselink.idchild = expensetax.idexp)
  
   AND NOT EXISTS (SELECT * FROM expensepayroll  
  join expenselink on expensepayroll.idexp=expenselink.idparent 
  WHERE expenselink.idchild = expensetax.idexp) 
]{I} = 0)
OR
(
(%<registryaddress.idcity>% = &<registryaddress.idcity>&)
AND
( 
 ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''}) = 
 ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''})
)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','6','U','registryaddress','S','S','S','N','N',{ts '2008-08-01 12:58:19.920'},'SA','Esistono prestazioni con addizionali comunali o regionali erogati durante il periodo di validità dell''indirizzo. Non è possibile modificare l''indirizzo predefinito (in assenza di un indirizzo specificato come "domicilio fiscale")  per l''anagrafica  %<registry.title>% in quanto quest''ultimo deve rimanere invariato alla data del 1 gennaio dell''anno cui si riferisce l''addizionale.','N','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
   FROM address 
  WHERE codeaddress = ''07_SW_DEF'']{I})
OR
([SELECT COUNT(*) FROM 
 expensetax 
JOIN tax ON expensetax.taxcode = tax.taxcode
JOIN expense ON expense.idexp = expensetax.idexp
WHERE expense.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') IN (''C'',''R'')
AND tax.taxkind = 1
AND active = ''S''
AND CONVERT(datetime,''01-01-''+ 
    CONVERT(varchar(4),YEAR(expensetax.competencydate)),105) >
	 [SELECT CASE 
		WHEN ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})<
	        ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''}) 
		THEN  ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''})
		ELSE  ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''})
		END ]{D}
  AND NOT EXISTS (SELECT * FROM expensecasualcontract  
  join expenselink on expensecasualcontract.idexp=expenselink.idparent 
  WHERE expenselink.idchild = expensetax.idexp)
  
   AND NOT EXISTS (SELECT * FROM expensepayroll  
  join expenselink on expensepayroll.idexp=expenselink.idparent 
  WHERE expenselink.idchild = expensetax.idexp) 
AND NOT EXISTS (SELECT * FROM registryaddress
                JOIN address 
	            ON address.idaddress =  registryaddress.idaddresskind
		   WHERE idreg = %<registryaddress.idreg>% 
		     AND address.codeaddress = ''07_SW_DOM'' 
		     AND CONVERT(datetime,''01-01-''+ 
    		     CONVERT(varchar(4),YEAR(expensetax.competencydate)),105)
		 BETWEEN ISNULL(registryaddress.start,{d ''1900-01-01''})
     AND ISNULL(registryaddress.stop,{d ''2079-01-01''})
			)
]{I} = 0)
OR
(
(%<registryaddress.idcity>% = &<registryaddress.idcity>&)
AND
( 
 ISNULL(%<registryaddress.stop>%,{d ''2079-01-01''}) = 
 ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''})
)
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','7','U','registryaddress','S','S','S','N','N',{ts '2008-06-27 14:14:14.993'},'SARA','Esistono cedolini con addizionale regionale calcolati durante il periodo di validità dell''indirizzo. Non è possibile modificare il domicilio fiscale per l''anagrafica  %<registry.title>% in quanto quest''ultimo deve rimanere invariato alla data del 31 dicembre dell''anno cui si riferisce l''addizionale o alla data di fine del contratto. ','N','(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
   FROM address 
  WHERE codeaddress =''07_SW_DOM'']{I})

OR

([SELECT COUNT(*) FROM payroll
JOIN parasubcontract
	ON parasubcontract.idcon = payroll.idcon
JOIN payrolltax ON payroll.idpayroll = payrolltax.idpayroll
JOIN tax ON payrolltax.taxcode = tax.taxcode
WHERE parasubcontract.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') = ''R''
AND tax.taxkind = 1
AND tax.active = ''S''
AND payroll.stop 
BETWEEN %<registryaddress.start>%
     AND ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''})
]{I} = 0)

OR

(%<registryaddress.idcity>% = &<registryaddress.idcity>&)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','8','U','registryaddress','S','S','S','N','N',{ts '2008-06-27 14:14:22.087'},'SARA','Esistono cedolini con addizionale regionale calcolati durante il periodo di validità dell''indirizzo. Non è possibile modificare un nuovo indirizzo predefinito per l''anagrafica  %<registry.title>% in quanto quest''ultimo rimanere invariato alla data del 31 dicembre dell''anno cui si riferisce l''addizionale o alla data di fine del contratto (non essendoci un altro indirizzo specificato come "domicilio fiscale").','N','(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
   FROM address 
  WHERE codeaddress =''07_SW_DEF'']{I})
OR
([SELECT COUNT(*) FROM payroll
JOIN parasubcontract
	ON parasubcontract.idcon = payroll.idcon
JOIN payrolltax ON payroll.idpayroll = payrolltax.idpayroll
JOIN tax ON payrolltax.taxcode = tax.taxcode
WHERE parasubcontract.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') = ''R''
AND tax.taxkind = 1
AND tax.active = ''S''
AND payroll.stop 
BETWEEN %<registryaddress.start>%
     AND ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''}) 
AND NOT EXISTS (SELECT * FROM registryaddress
                JOIN address 
	            ON address.idaddress =  registryaddress.idaddresskind
		   WHERE idreg = %<registryaddress.idreg>% 
		     AND address.codeaddress = ''07_SW_DOM'' 
		     AND payroll.stop 
		 BETWEEN registryaddress.start 
     		AND ISNULL(registryaddress.stop,{d ''2079-01-01''})
			)]{I} = 0)

OR

(%<registryaddress.idcity>% = &<registryaddress.idcity>&)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','9','U','registryaddress','S','S','S','N','N',{ts '2008-06-27 14:14:26.573'},'SARA','Esistono cedolini con addizionale comunale calcolati durante il periodo di validità dell''indirizzo. Non è possibile modificare un nuovo domicilio fiscale per l''anagrafica  %<registry.title>%  in quanto quest''ultimo deve rimanere invariato alla data del 1 gennaio dell''anno cui si riferisce l''addizionale. ','N','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
  FROM address 
  WHERE codeaddress =''07_SW_DOM''
 ]{I})
OR
([SELECT COUNT(*) FROM payroll
 JOIN parasubcontract
	ON parasubcontract.idcon = payroll.idcon
JOIN payrolltax ON payroll.idpayroll = payrolltax.idpayroll
JOIN tax ON payrolltax.taxcode = tax.taxcode
WHERE parasubcontract.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') = ''C''
AND tax.taxkind = 1
AND tax.active = ''S''
AND CONVERT(datetime,''01-01-''+ 
    CONVERT(varchar(4),payroll.fiscalyear),105) 
BETWEEN %<registryaddress.start>%
     AND ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''})
 ]{I} = 0)

OR
(%<registryaddress.idcity>% = &<registryaddress.idcity>&)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','10','U','registryaddress','S','S','S','N','N',{ts '2008-06-27 14:14:30.853'},'SARA','Esistono cedolini con addizionale comunale calcolati durante il periodo di validità dell''indirizzo. Non è possibile modificare un nuovo indirizzo predefinito per l''anagrafica  %<registry.title>% in quanto quest''ultimo rimanere invariato alla data del 1 gennaio dell''anno cui si riferisce l''addizionale  (non essendoci un altro indirizzo specificato come "domicilio fiscale").','N','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
  FROM address 
  WHERE codeaddress = ''07_SW_DEF''
 ]{I})
OR
([SELECT COUNT(*) FROM payroll
JOIN parasubcontract
	ON parasubcontract.idcon = payroll.idcon
JOIN payrolltax ON payroll.idpayroll = payrolltax.idpayroll
JOIN tax ON payrolltax.taxcode = tax.taxcode
WHERE parasubcontract.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') = ''C''
AND tax.taxkind = 1
AND tax.active = ''S''
AND CONVERT(datetime,''01-01-''+ 
    CONVERT(varchar(4),payroll.fiscalyear),105) 
BETWEEN %<registryaddress.start>%
     AND ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''})
AND NOT EXISTS (SELECT * FROM registryaddress
                JOIN address 
	            ON address.idaddress =  registryaddress.idaddresskind
		   WHERE idreg = %<registryaddress.idreg>% 
		     AND address.codeaddress = ''07_SW_DOM'' 
		     AND payroll.stop 
	BETWEEN registryaddress.start AND ISNULL(registryaddress.stop,{d ''2079-01-01''})
			) ]{I} = 0)

OR

(%<registryaddress.idcity>% = &<registryaddress.idcity>&)



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','11','U','registryaddress','S','S','S','N','N',{ts '2008-06-27 14:12:39.557'},'SARA','Esistono prestazioni con addizionali comunali o regionali  erogati durante il periodo di validità dell''indirizzo. Non è possibile inserire il domicilio fiscale per l''anagrafica  %<registry.title>% in quanto quest''ultimo deve rimanere invariato alla data del 1 gennaio dell''anno cui si riferisce l''addizionale o alla data di fine del contratto. ','N','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
   FROM address 
  WHERE codeaddress = ''07_SW_DOM'']{I})
OR
([SELECT COUNT(*) FROM 
 expensetax 
JOIN tax ON expensetax.taxcode = tax.taxcode
JOIN expense ON expense.idexp = expensetax.idexp
WHERE expense.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') IN (''C'',''R'')
AND tax.taxkind = 1
AND tax.active = ''S''
AND CONVERT(datetime,''01-01-''+ 
    CONVERT(varchar(4),YEAR(expensetax.competencydate)),105) 
BETWEEN %<registryaddress.start>%
     AND ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''})

  AND NOT EXISTS (SELECT * FROM expensecasualcontract  
  join expenselink on expensecasualcontract.idexp=expenselink.idparent 
  WHERE expenselink.idchild = expensetax.idexp)
  
   AND NOT EXISTS (SELECT * FROM expensepayroll  
  join expenselink on expensepayroll.idexp=expenselink.idparent 
  WHERE expenselink.idchild = expensetax.idexp) 
]{I} = 0)
OR

(%<registryaddress.idcity>% = &<registryaddress.idcity>&)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS018','12','U','registryaddress','S','S','S','N','N',{ts '2008-06-27 14:13:59.727'},'SARA','Esistono prestazioni con addizionali comunali o regionali  erogati durante il periodo di validità dell''indirizzo. Non è possibile inserire l''indirizzo predefinito (in assenza di un indirizzo specificato come "domicilio fiscale")  per l''anagrafica  %<registry.title>% in quanto quest''ultimo deve rimanere invariato alla data del 1 gennaio dell''anno cui si riferisce l''addizionale. ','N','--[1] = [2]
(%<registryaddress.idaddresskind>%
<>
[SELECT idaddress 
   FROM address 
  WHERE codeaddress = ''07_SW_DEF'']{I})
OR
([SELECT COUNT(*) FROM 
 expensetax 
JOIN tax ON expensetax.taxcode = tax.taxcode
JOIN expense ON expense.idexp = expensetax.idexp
WHERE expense.idreg = %<registryaddress.idreg>%
AND ISNULL(tax.geoappliance,'''') IN (''C'',''R'')
AND tax.taxkind = 1
AND active = ''S''
AND CONVERT(datetime,''01-01-''+ 
    CONVERT(varchar(4),YEAR(expensetax.competencydate)),105) 
BETWEEN %<registryaddress.start>% AND ISNULL(&<registryaddress.stop>&,{d ''2079-01-01''})

  AND NOT EXISTS (SELECT * FROM expensecasualcontract  
  join expenselink on expensecasualcontract.idexp=expenselink.idparent 
  WHERE expenselink.idchild = expensetax.idexp)
  
   AND NOT EXISTS (SELECT * FROM expensepayroll  
  join expenselink on expensepayroll.idexp=expenselink.idparent 
  WHERE expenselink.idchild = expensetax.idexp) 
AND NOT EXISTS (SELECT * FROM registryaddress
                JOIN address 
	            ON address.idaddress =  registryaddress.idaddresskind
		   WHERE idreg = %<registryaddress.idreg>% 
		     AND address.codeaddress = ''07_SW_DOM'' 
		     AND CONVERT(datetime,''01-01-''+ 
    		     CONVERT(varchar(4),YEAR(expensetax.competencydate)),105)
		 BETWEEN registryaddress.start AND ISNULL(registryaddress.stop,{d ''2079-01-01''})
			)
]{I} = 0)
OR

(%<registryaddress.idcity>% = &<registryaddress.idcity>&)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','registryaddress','S','S','S','N','N',{ts '2010-05-29 11:44:20.607'},'SA','Nell''intervallo di validità indicato esiste già un indirizzo di tipo %<address.description>%  per la scheda anagrafica %<registry.title>%','N','--post
[(SELECT count(*) from registryaddress where
 idaddresskind = %<registryaddress.idaddresskind>% 
 and idreg = %<registryaddress.idreg>% 
 and 
 (   (start > %<registryaddress.start>% and (start <= %<registryaddress.stop>% or %<registryaddress.stop>% IS NULL))
   or 
    (start < %<registryaddress.start>% and (stop IS NULL or stop >= %<registryaddress.start>%))  )
)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR021','1','D','registrycf','S','S','S','N','N',{ts '2009-10-23 15:08:35.280'},'SA','Il codice fiscale di %<registry.title>% non è coerente con quello inserito nell''anagrafica','N','[SELECT cf
FROM registry
WHERE idreg = %<registrycf.idreg>%]{C} IS NULL
OR
[SELECT cf
FROM registrycf
WHERE idreg = %<registrycf.idreg>%
AND stop =
	[SELECT MAX(stop)
	FROM registrycf
	WHERE idreg = %<registrycf.idreg>%
		AND stop IS NOT NULL]{D}]{C}
<>
ISNULL(
	[SELECT cf
	FROM registry
	WHERE idreg = %<registrycf.idreg>%]{C}
,'''')

OR 
[SELECT count(*) FROM registry
WHERE idreg = %<registrycf.idreg>%]{I} =0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR021','1','I','registrycf','S','S','S','N','N',{ts '2008-07-10 11:55:37.280'},'NINO','Il codice fiscale di %<registry.title>% non è coerente con quello inserito nell''anagrafica','N','[SELECT cf
FROM registry
WHERE idreg = %<registrycf.idreg>%]{C} IS NULL
OR
ISNULL(
	[SELECT cf
	FROM registry
	WHERE idreg = %<registrycf.idreg>%]{C}
,'''') <> %<registrycf.cf>%
OR
[SELECT COUNT(*)
FROM registrycf
WHERE idreg = %<registrycf.idreg>%
AND stop > %<registrycf.stop>%]{I} > 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR021','1','U','registrycf','S','S','S','N','N',{ts '2008-07-10 11:55:40.793'},'NINO','Il codice fiscale di %<registry.title>% non è coerente con quello inserito nell''anagrafica','N','[SELECT cf
FROM registry
WHERE idreg = %<registrycf.idreg>%]{C} IS NULL
OR
[SELECT COUNT(*)
FROM registrycf
WHERE idreg = %<registrycf.idreg>%
AND stop > %<registrycf.stop>%]{I} > 0
OR
[SELECT cf
FROM registrycf
WHERE idreg = %<registrycf.idreg>%
AND stop =
	[SELECT MAX(stop)
	FROM registrycf
	WHERE idreg = %<registrycf.idreg>%
		AND stop IS NOT NULL]{D}]{C}
<>
ISNULL(
	[SELECT cf
	FROM registry
	WHERE idreg = %<registrycf.idreg>%]{C}
,'''')')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','registryclass','S','S','S','N','N',{ts '2007-09-13 12:10:10.733'},'NINO','Cancellazione Impossibile! Esistono dati in anagrafica collegati alla tipologia della classificazione %<registryclass.description>%','S','[(SELECT count(*)  
from registry 
where idregistryclass = %<registryclass.idregistryclass>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','registryclass','S','S','S','N','N',{ts '2007-09-13 12:10:18.780'},'NINO','Cancellazione Impossibile! Esistono ruoli collegati alla tipologia della classificazione %<registryclass.description>%','S','[(SELECT count(*)  
from role  
where idregistryclass = %<registryclass.idregistryclass>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','registryclass','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione della tipologia di classificazione già esistente','S','[(SELECT count(*)  from  registryclass where description = %<registryclass.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','registryclass','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione della classificazione già esistente','S','[(SELECT count(*) 
from registryclass
where  idregistryclass<> %<registryclass.idregistryclass>% and 
description = %<registryclass.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','registrykind','S','S','S','N','N',{ts '2007-12-18 14:30:38.967'},'PINO','Esiste un''altra classificazione con la stessa descrizione','S','[(select count(*) from registrykind 
where description = %<registrykind.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','registrykind','S','S','S','N','N',{ts '2007-12-18 15:00:10.343'},'PINO','Esiste un''altra classificazione con lo stesso codice','S','[(select count(*) from registrykind 
where sortcode = %<registrykind.sortcode>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','registrykind','S','S','S','N','N',{ts '2007-12-18 15:05:50.717'},'PINO','Esiste un''altra classificazione con la stessa descrizione','S','[(select count(*) from registrykind 
where description = %<registrykind.description>%
and idregistrykind <> %<registrykind.idregistrykind>%
)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','U','registrykind','S','S','S','N','N',{ts '2007-12-18 15:06:16.187'},'PINO','Esiste un''altra classificazione con lo stesso codice','S','[(select count(*) from registrykind 
where sortcode = %<registrykind.sortcode>%
and idregistrykind <> %<registrykind.idregistrykind>%
)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','registrylegalstatus','S','S','S','N','N',{ts '2010-05-28 09:31:59.983'},'SA','Cancellazione Impossibile! Esistono Missioni svolte dal percipiente con codice anagr. %<registrylegalstatus.idreg>% e l''inquadramento  n° %<registrylegalstatus.idregistrylegalstatus>% che si sta cancellando.','S','[execute count_table_twofield ''itineration'',''idreg'',''idregistrylegalstatus'', %<registrylegalstatus.idreg>%, %<registrylegalstatus.idregistrylegalstatus>% ,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','registrypaymethod','S','S','S','N','N',{ts '2010-05-28 10:37:24.983'},'SA','Cancellazione Impossibile! Esistono movimenti di spesa collegati alla modalità di pagamento %<registrypaymethod.idregistrypaymethod>% / %<registrypaymethod.regmodcode>% del percipiente %<registry.title>%','S','[execute count_table_twofield ''expenselastview'',''idreg'',''idregistrypaymethod'', 
%<registrypaymethod.idreg>%, %<registrypaymethod.idregistrypaymethod>% ,
@outvar output]{I}=0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR003','1','I','registrypaymethod','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Impossibile usare la modalità di pagamento %<registrypaymethod.idpaymethod>% perché non è attiva','S','[(SELECT active
from paymethod
where idpaymethod  =  %<registrypaymethod.idpaymethod>% )]{C} <> ''N'' 
or 
(%<registrypaymethod.idpaymethod>% IS NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR013','1','I','registrypaymethod','S','S','S','N','N',{ts '2006-01-18 11:10:22.967'},'Software and more','Il delegato scelto non ha il codice fiscale','S','([SELECT ISNULL(cf,'''') FROM registry
WHERE idreg = %<registrypaymethod.iddeputy>%]{C} <> '''')
OR
%<registrypaymethod.iddeputy>% IS NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR017','3','I','registrypaymethod','S','S','S','N','N',{ts '2008-09-16 15:06:28.757'},'NINO','Nella modalità di pagamento "%<paymethod.description>%" non si devono specificare le coordinate bancarie','S','([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<registrypaymethod.idpaymethod>%
)]{I} & 8) = 0
or (isnull(%<registrypaymethod.iban>%, '''') = ''''
	and isnull(%<registrypaymethod.cin>%, '''') = ''''
	and isnull(%<registrypaymethod.idbank>%, '''') = ''''
	and isnull(%<registrypaymethod.idcab>%, '''') = ''''
	and isnull(%<registrypaymethod.cc>%, '''') = '''')
or
--fa si che non scatti per mod.pagamento cc.postale
([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<registrypaymethod.idpaymethod>%
)]{I} & 2) <>0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR017','4','I','registrypaymethod','S','S','S','N','N',{ts '2008-09-16 15:06:36.367'},'NINO','Nella modalità di pagamento "%<paymethod.description>%" è obbligatorio specificare le coordinate bancarie','S','([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<registrypaymethod.idpaymethod>%
)]{I} & 4) = 0
or (isnull(substring(%<registrypaymethod.iban>% ,1,2), '''') <> ''IT'')
or (isnull(%<registrypaymethod.cin>%, '''') <> ''''
	and isnull(%<registrypaymethod.idbank>%, '''') <> ''''
	and isnull(%<registrypaymethod.idcab>%, '''') <> ''''
	and isnull(%<registrypaymethod.cc>%, '''') <> '''')
or
--fa si che non scatti per mod.pagamento cc.postale
([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<registrypaymethod.idpaymethod>%
)]{I} & 2) <>0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR017','5','I','registrypaymethod','S','S','S','N','N',{ts '2008-02-19 13:37:48.157'},'SA','Nella modalità di pagamento "%<paymethod.description>%" si deve specificare il numero di conto e non ci devono essere le altre coordinate bancarie','S','([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<registrypaymethod.idpaymethod>%
)]{I} & 2) = 0
or (isnull(%<registrypaymethod.iban>%, '''') = ''''
	and isnull(%<registrypaymethod.cin>%, '''') = ''''
	and isnull(%<registrypaymethod.idbank>%, '''') = ''''
	and isnull(%<registrypaymethod.idcab>%, '''') = ''''
	and isnull(%<registrypaymethod.cc>%, '''') <> '''')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR017','6','I','registrypaymethod','S','S','S','N','N',{ts '2011-05-23 12:25:28.267'},'assistenza','La modalità di pagamento %<paymethod.description>% può essere utilizzata solo dall''Amministrazione','N','user=''amministrazione''  
OR
 [ SELECT COUNT(*) FROM dbdepartment]{I}=1  

OR 

(([(select flag from paymethod  where idpaymethod = %<registrypaymethod.idpaymethod>%) ]{I} & 64) = 0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR020','1','I','registrypaymethod','S','S','S','N','N',{ts '2008-07-25 10:10:18.840'},'SA','Nella modalità di pagamento "%<paymethod.description>%" è obbligatorio specificare l''IBAN. Se sono presenti ABI, CAB, CIN e CC l''IBAN può essere calcolato automaticamente dal programma mediante la procedura "Calcolo IBAN" dal menu Anagrafiche.','S','([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<registrypaymethod.idpaymethod>%
)]{I} & 4) = 0
or (isnull(%<registrypaymethod.iban>%, '''') <> '''')
or
(
isnull(%<registrypaymethod.active>%,''S'') =''N''
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR024','1','I','registrypaymethod','S','S','S','N','N',{ts '2009-01-20 10:33:56.493'},'NINO','Si è inserito un ABI disattivo (%<registrypaymethod.idbank>%) !','S','%<registrypaymethod.idbank>% IS NULL
OR
(
ISNULL(
[SELECT flagusable FROM bank 
WHERE idbank = %<registrypaymethod.idbank>%]{C},''S'') = ''S'')

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR024','2','I','registrypaymethod','S','S','S','N','N',{ts '2009-01-20 10:33:31.557'},'NINO','Si è inserito un CAB disattivo  ( %<registrypaymethod.idcab>%) !','S','%<registrypaymethod.idcab>% IS NULL
OR
(
ISNULL(
[SELECT flagusable FROM cab 
WHERE idcab = %<registrypaymethod.idcab>%
and idbank = %<registrypaymethod.idbank>%]{C},''S'') = ''S'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM093','1','I','registrypaymethod','S','S','S','N','N',{ts '2011-06-09 12:32:14.877'},'sa','Per la modalità di pagamento con disposizione cartacea allegata non si deve specificare la descrizione, che sarà compilata al momento del suo utilizzo','S','ISNULL(
[SELECT idbank FROM treasurer WHERE flagdefault= ''S'']{C},'''') <> ''03067''
OR
[SELECT ISNULL(methodbankcode,'''') 
FROM  paymethod
WHERE idpaymethod  = %<registrypaymethod.idpaymethod>%
]{C} <> ''84''
OR
ISNULL(%<registrypaymethod.paymentdescr>%,'''')  = ''''')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','registrypaymethod','S','S','S','N','N',{ts '2010-05-27 16:45:16.563'},'SA','All''anagrafica %<registry.title>% è stata già assegnata la modalità di pagamento %<regmodcode>%','N','[(SELECT count(*) 
from registrypaymethod 
where regmodcode = %<registrypaymethod.regmodcode>% 
and idreg = %<registrypaymethod.idreg>%)]{I} = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','registrypaymethod','S','S','S','N','N',{ts '2007-09-01 10:24:02.127'},'NINO','Per l''anagrafica %<registry.title>% esiste già una modalità di pagamento predefinita','N','--post
[(SELECT count(*) 
from registrypaymethod 
where flagstandard = ''S'' 
and idregistrypaymethod<>%<registrypaymethod.idregistrypaymethod>%
and idreg = %<registrypaymethod.idreg>%)]{I} = 0
or 
[%<registrypaymethod.flagstandard>%] <> ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR003','1','U','registrypaymethod','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Impossibile usare la modalità di pagamento %<registrypaymethod.idpaymethod>% perché non è attiva','S','[(SELECT active
from paymethod
where idpaymethod = %<registrypaymethod.idpaymethod>%)]{C} <> ''N''
or 
(%<registrypaymethod.idpaymethod>% IS NULL)
or
(&<registrypaymethod.idpaymethod>& = %<registrypaymethod.idpaymethod>% )')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR013','1','U','registrypaymethod','S','S','S','N','N',{ts '2006-01-18 11:11:44.483'},'Software and more','Il delegato scelto non ha il codice fiscale','S','[SELECT ISNULL(cf,'''') FROM registry
WHERE idreg = %<registrypaymethod.iddeputy>%]{C} <> ''''
OR
%<registrypaymethod.iddeputy>% IS NULL
OR
ISNULL(%<registrypaymethod.iddeputy>%,0) = 
ISNULL(&<registrypaymethod.iddeputy>&,0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR017','3','U','registrypaymethod','S','S','S','N','N',{ts '2008-09-16 15:07:04.240'},'NINO','Nella modalità di pagamento "%<paymethod.description>%" non si devono specificare le coordinate bancarie','S','([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<registrypaymethod.idpaymethod>%
)]{I} & 8) = 0
or (isnull(%<registrypaymethod.iban>%, '''') = ''''
	and isnull(%<registrypaymethod.cin>%, '''') = ''''
	and isnull(%<registrypaymethod.idbank>%, '''') = ''''
	and isnull(%<registrypaymethod.idcab>%, '''') = ''''
	and isnull(%<registrypaymethod.cc>%, '''') = '''')
OR 

(isnull(%<registrypaymethod.active>%,''S'') =''N'')
or
--fa si che non scatti per mod.pagamento cc.postale
([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<registrypaymethod.idpaymethod>%
)]{I} & 2) <>0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR017','4','U','registrypaymethod','S','S','S','N','N',{ts '2008-09-16 15:07:53.177'},'NINO','Nella modalità di pagamento "%<paymethod.description>%" è obbligatorio specificare le coordinate bancarie','S','([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<registrypaymethod.idpaymethod>%
)]{I} & 4) = 0
or (isnull(substring(%<registrypaymethod.iban>% ,1,2), '''') <> ''IT'')
or (isnull(%<registrypaymethod.cin>%, '''') <> ''''
	and isnull(%<registrypaymethod.idbank>%, '''') <> ''''
	and isnull(%<registrypaymethod.idcab>%, '''') <> ''''
	and isnull(%<registrypaymethod.cc>%, '''') <> '''')
or 
(isnull(%<registrypaymethod.active>%,''S'') =''N'')
or
--fa si che non scatti per mod.pagamento cc.postale
([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<registrypaymethod.idpaymethod>%
)]{I} & 2) <>0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR017','5','U','registrypaymethod','S','S','S','N','N',{ts '2008-09-16 15:08:05.240'},'NINO','Nella modalità di pagamento "%<paymethod.description>%" si deve specificare il numero di conto e non ci devono essere le altre coordinate bancarie','S','([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<registrypaymethod.idpaymethod>%
)]{I} & 2) = 0
or (isnull(%<registrypaymethod.iban>%, '''') = ''''
	and isnull(%<registrypaymethod.cin>%, '''') = ''''
	and isnull(%<registrypaymethod.idbank>%, '''') = ''''
	and isnull(%<registrypaymethod.idcab>%, '''') = ''''
	and isnull(%<registrypaymethod.cc>%, '''') <> '''')
OR 
(isnull(%<registrypaymethod.active>%,''S'') =''N'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR017','6','U','registrypaymethod','S','S','S','N','N',{ts '2011-05-23 12:26:26.407'},'assistenza','La modalità di pagamento %<paymethod.description>% può essere utilizzata solo dall''Amministrazione','N','user=''amministrazione''  
OR
 [ SELECT COUNT(*) FROM dbdepartment]{I}=1  

OR 

(([(select flag from paymethod  where idpaymethod = %<registrypaymethod.idpaymethod>%) ]{I} & 64) = 0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR020','1','U','registrypaymethod','S','S','S','N','N',{ts '2008-06-16 09:53:51.047'},'SARA','Nella modalità di pagamento "%<paymethod.description>%" è obbligatorio specificare l''IBAN. Se sono presenti ABI, CAB, CIN e CC l''IBAN può essere calcolato automaticamente dal programma mediante la procedura "Calcolo IBAN" dal menu Anagrafiche','S','([(select paymethod.flag
from paymethod 
where paymethod.idpaymethod = %<registrypaymethod.idpaymethod>%
)]{I} & 4) = 0
or (isnull(%<registrypaymethod.iban>%, '''') <> '''')
or
(
isnull(%<registrypaymethod.active>%,''S'') =''N''
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR024','1','U','registrypaymethod','S','S','S','N','N',{ts '2009-01-20 10:33:51.650'},'NINO','Si sta usando un ABI disattivo (%<registrypaymethod.idbank>%) !','S','%<registrypaymethod.idbank>% IS NULL
OR
(
ISNULL(
[SELECT flagusable FROM bank 
WHERE idbank = %<registrypaymethod.idbank>%]{C},''S'') = ''S'')

OR
(
ISNULL(%<registrypaymethod.active>%,''S'') =''N''
)

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR024','2','U','registrypaymethod','S','S','S','N','N',{ts '2009-01-20 10:33:36.947'},'NINO','Si sta usando un CAB disattivo  ( %<registrypaymethod.idcab>%) !','S','%<registrypaymethod.idcab>% IS NULL
OR
(
ISNULL(
[SELECT flagusable FROM cab 
WHERE idcab = %<registrypaymethod.idcab>%
and idbank = %<registrypaymethod.idbank>%]{C},''S'') = ''S'')
OR
(
ISNULL(%<registrypaymethod.active>%,''S'') =''N''
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM093','2','U','registrypaymethod','S','S','S','N','N',{ts '2011-06-09 12:32:21.530'},'sa','Per la modalità di pagamento con disposizione cartacea allegata non si deve specificare la descrizione, che sarà compilata al momento del suo utilizzo','S','ISNULL(%<registrypaymethod.paymentdescr>%,'''')  = 
ISNULL(&<registrypaymethod.paymentdescr>&,'''') 
OR
ISNULL(
[SELECT idbank FROM treasurer WHERE flagdefault= ''S'']{C},'''') <> ''03067''
OR
[SELECT ISNULL(methodbankcode,'''') 
FROM  paymethod
WHERE idpaymethod  = %<registrypaymethod.idpaymethod>%
]{C} <> ''84''
OR
ISNULL(%<registrypaymethod.paymentdescr>%,'''')  = ''''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','registrypaymethod','S','S','S','N','N',{ts '2008-09-04 10:46:09.810'},'NINO','Per l''anagrafica %<registry.title>% esiste già una modalità di pagamento predefinita','N','--post
[(SELECT count(*) 
from registrypaymethod 
where flagstandard = ''S'' 
and idregistrypaymethod <> %<registrypaymethod.idregistrypaymethod>% 
and idreg = %<registrypaymethod.idreg>%)]{I} = 0 
or 
isnull(%<registrypaymethod.flagstandard>%,''N'') <> ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR022','1','D','registrypiva','S','S','S','N','N',{ts '2008-07-10 12:16:22.950'},'NINO','La partita IVA di %<registry.title>% non è coerente con quella segnalata nella anagrafica.','N','-- Controllo se cancello una partita IVA storica
-- Partita IVA corrente
%<registrypiva.stop>% IS NULL
OR
-- Non ci sono più informazioni storiche
[SELECT COUNT(*)
FROM registrypiva
WHERE idreg = %<registrypiva.idreg>%]{I} = 0
OR
-- Ci sono altre partite IVA storiche successive a quella cancellata
[SELECT COUNT(*)
FROM registrypiva
WHERE idreg = %<registrypiva.idreg>%
	AND stop IS NOT NULL
	AND stop > %<registrypiva.stop>%]{I} > 0
OR
-- Se c''è una partita IVA corrente
[SELECT COUNT(*)
FROM registrypiva
WHERE idreg = %<registrypiva.idreg>%
	AND stop IS NULL]{I} > 0
OR
-- La partita IVA principale non è impostata
[SELECT p_iva
FROM registry
WHERE idreg = %<registrypiva.idreg>%]{C} IS NULL
OR
-- La partita IVA principale è differente da quella maggiore tra le restanti storiche
ISNULL(
	[SELECT p_iva
	FROM registry
	WHERE idreg = %<registrypiva.idreg>%]{C}
,'''') <> 
[SELECT p_iva
FROM registrypiva
WHERE idreg = %<registrypiva.idreg>%
AND stop =
	[SELECT MAX(stop)
	FROM registrypiva
	WHERE idreg = %<registrypiva.idreg>%]{D}
]{C} 

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR022','2','D','registrypiva','S','S','S','N','N',{ts '2008-07-10 12:17:22.153'},'NINO','La partita IVA di %<registry.title>% non è coerente con quella segnalata nella anagrafica.','N','-- Controllo se cancello una partita IVA corrente
-- Partita IVA storica
%<registrypiva.stop>% IS NOT NULL
OR
-- Non ci sono più informazioni storiche
[SELECT COUNT(*)
FROM registrypiva
WHERE idreg = %<registrypiva.idreg>%]{I} = 0
OR
-- La partita IVA principale non è impostata
[SELECT p_iva
FROM registry
WHERE idreg = %<registrypiva.idreg>%]{C} IS NULL
OR
-- La partita IVA principale è differente da quella maggiore tra le restanti storiche
ISNULL(
	[SELECT p_iva
	FROM registry
	WHERE idreg = %<registrypiva.idreg>%]{C}
,'''') <> 
[SELECT p_iva
FROM registrypiva
WHERE idreg = %<registrypiva.idreg>%
AND stop =
	[SELECT MAX(stop)
	FROM registrypiva
	WHERE idreg = %<registrypiva.idreg>%]{D}
]{C}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR022','1','I','registrypiva','S','S','S','N','N',{ts '2008-07-10 12:11:00.247'},'NINO','La partita IVA di %<registry.title>% non è coerente con quella segnalata nella anagrafica.','N','-- Controllo se inserisco una partita IVA storica
-- Partita IVA corrente
%<registrypiva.stop>% IS NULL
OR
-- Ci sono altre partite IVA storiche successive a quella inserita
[SELECT COUNT(*)
FROM registrypiva
WHERE idreg = %<registrypiva.idreg>%
	AND stop IS NOT NULL
	AND stop > %<registrypiva.stop>%]{I} > 0
OR
-- Esiste una partita IVA corrente
[SELECT COUNT(*)
FROM registrypiva
WHERE idreg = %<registrypiva.idreg>%
	AND stop IS NULL]{I} > 0
OR
-- La partita IVA principale non è impostata
[SELECT p_iva
FROM registry
WHERE idreg = %<registrypiva.idreg>%]{C} IS NULL
OR
-- La partita IVA principale è differente da quella inserita
ISNULL(
	[SELECT p_iva
	FROM registry
	WHERE idreg = %<registrypiva.idreg>%]{C}
,'''') <> %<registrypiva.p_iva>%
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR022','2','I','registrypiva','S','S','S','N','N',{ts '2008-07-10 11:56:53.607'},'NINO','La partita IVA di %<registry.title>% non è coerente con quella segnalata nella anagrafica.','N','-- Controllo se inserisco una partita IVA corrente
-- Partita IVA corrente
%<registrypiva.stop>% IS NOT NULL
OR
-- La partita IVA principale è uguale da quella inserita
ISNULL(
	[SELECT p_iva
	FROM registry
	WHERE idreg = %<registrypiva.idreg>%]{C}
,'''') = %<registrypiva.p_iva>%
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR023','1','I','registrypiva','S','S','S','N','N',{ts '2008-07-10 12:19:22.747'},'NINO','Deve esistere solo una partita IVA corrente per l''anagrafica %<registry.title>%','N','[SELECT COUNT(*)
FROM registrypiva
WHERE idreg = %<registrypiva.idreg>%
AND stop IS NULL]{I} = 1
OR
%<registrypiva.stop>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR022','1','U','registrypiva','S','S','S','N','N',{ts '2008-07-10 12:11:52.903'},'NINO','La partita IVA di %<registry.title>% non è coerente con quella segnalata nella anagrafica.','N','-- Controllo se modifico una partita IVA storica
-- Partita IVA corrente
%<registrypiva.stop>% IS NULL
OR
-- Ci sono altre partite IVA storiche successive a quella inserita
[SELECT COUNT(*)
FROM registrypiva
WHERE idreg = %<registrypiva.idreg>%
	AND stop IS NOT NULL
	AND stop > %<registrypiva.stop>%]{I} > 0
OR
[SELECT COUNT(*)
FROM registrypiva
WHERE idreg = %<registrypiva.idreg>%
	AND stop IS NULL]{I} > 0
OR
-- La partita IVA principale non è impostata
[SELECT p_iva
FROM registry
WHERE idreg = %<registrypiva.idreg>%]{C} IS NULL
OR
-- La partita IVA principale è differente da quella inserita
ISNULL(
	[SELECT p_iva
	FROM registry
	WHERE idreg = %<registrypiva.idreg>%]{C}
,'''') <> %<registrypiva.p_iva>%

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR022','2','U','registrypiva','S','S','S','N','N',{ts '2008-07-10 12:01:59.670'},'NINO','La partita IVA di %<registry.title>% non è coerente con quella segnalata nella anagrafica.','N','-- Controllo se modifico una partita IVA corrente
-- Partita IVA corrente
%<registrypiva.stop>% IS NOT NULL
OR
-- La partita IVA principale è uguale da quella inserita
ISNULL(
	[SELECT p_iva
	FROM registry
	WHERE idreg = %<registrypiva.idreg>%]{C}
,'''') = %<registrypiva.p_iva>%
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR023','1','U','registrypiva','S','S','S','N','N',{ts '2008-07-10 12:19:31.483'},'NINO','Deve esistere solo una partita IVA corrente per l''anagrafica %<registry.title>%','N','[SELECT COUNT(*)
FROM registrypiva
WHERE idreg = %<registrypiva.idreg>%
AND stop IS NULL]{I} = 1
OR
%<registrypiva.stop>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR008','1','I','registryreference','S','S','S','N','N',{ts '2007-05-05 09:46:06.233'},'''NINO''','%<registry.title>% ha già un contatto predefinito','N','--post
[SELECT COUNT(*) 
from registryreference 
where flagdefault = ''S'' 
and idregistryreference <> %<registryreference.idregistryreference>%
and idreg = %<registryreference.idreg>%]{I} = 0
or 
%<registryreference.flagdefault>% <> ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR008','1','I','registryreference','S','S','S','N','N',{ts '2010-11-04 14:50:15.277'},'sa','Non è possibile attribuire a due fornitori la stessa login web','N','[select count(*) from registryreference where userweb = %<registryreference.userweb>%]{I}=1
OR

isnull(%<registryreference.userweb>%,'''')=''''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','registryreference','S','S','S','N','N',{ts '2007-05-05 10:32:08.217'},'''NINO''','Per l''anagrafica %<registry.title>% il contatto %<referencename>% è già esistente','S','[(SELECT count(*) 
from registryreference 
where idregistryreference = %<registryreference.idregistryreference>% 
and idreg = %<registryreference.idreg>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR008','1','U','registryreference','S','S','S','N','N',{ts '2007-05-05 09:46:22.203'},'''NINO''','%<registry.title>% ha già un contatto predefinito','N','--post
[SELECT COUNT(*) 
from registryreference 
where flagdefault = ''S'' 
and idregistryreference <> %<registryreference.idregistryreference>% 
and idreg = %<registryreference.idreg>%]{I} = 0 
or 
%<registryreference.flagdefault>% <> ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SICUR008','1','U','registryreference','S','S','S','N','N',{ts '2010-11-04 14:50:42.247'},'sa','Non è possibile attribuire a due fornitori la stessa login web','N','[select count(*) from registryreference where userweb = %<registryreference.userweb>%]{I}=1
OR

isnull(%<registryreference.userweb>%,'''')=''''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR003','2','I','registryrole','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Impossibile usare il ruolo %<registryrole.idrole>% perché non è attivo','S','[SELECT active
from role
where idrole = %<registryrole.idrole>%]{C} <> ''N'' 
or 
(%<registryrole.idrole>% IS NULL)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR004','1','I','registryrole','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il ruolo %<registryrole.idrole>% è stato già assegnato al percipiente nello stesso periodo','N','--post
(
 [SELECT COUNT(*) FROM registryrole
	WHERE idreg = %<registryrole.idreg>%
	AND idrole = %<registryrole.idrole>%
	AND active = ''S''
 ]{I} = 1
)
OR
(
 (
  [SELECT MAX(stop) FROM registryrole
	WHERE idreg = %<registryrole.idreg>% AND
	idrole = %<registryrole.idrole>% AND 
	active = ''S''
  ]{D}
  IS NOT NULL
 )
 AND
 (
  [SELECT ISNULL(MAX(stop),GETDATE()) FROM registryrole
	WHERE idreg = %<registryrole.idreg>%
	AND idrole = %<registryrole.idrole>%
	AND active = ''S''
  ]{D} <= %<registryrole.start>%
 )
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','registryrole','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Si sta tentando di assegnare all''anagrafica un ruolo inesistente','S','[(SELECT count(*) from role where idrole= %<registryrole.idrole>%)]{I}>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR003','2','U','registryrole','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Impossibile usare il ruolo %<registryrole.idrole>% perché non è attivo','S','[(SELECT active
from role
where idrole =  %<registryrole.idrole>% )]{C} <> ''N'' 
or 
(%<registryrole.idrole>% IS NULL)
or
(&<registryrole.idrole>& = %<registryrole.idrole>%)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR004','1','U','registryrole','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Il ruolo %<registryrole.idrole>% è stato già assegnato al percipiente nello stesso periodo','N','--post
(
 [SELECT COUNT(*) FROM registryrole
	WHERE idreg = %<registryrole.idreg>% AND
	idrole = %<registryrole.idrole>% AND 
	active = ''S''
 ]{I}
 = 1
)
OR
(
 (
  [SELECT MAX(stop) FROM registryrole
	WHERE idreg = %<registryrole.idreg>%
	AND idrole = %<registryrole.idrole>%
	AND active = ''S'']{D} IS NOT NULL
 )
 AND
 (
  [SELECT ISNULL(MAX(stop),GETDATE()) FROM registryrole
	WHERE idreg = %<registryrole.idreg>%
	AND idrole = %<registryrole.idrole>%
	AND active = ''S'']{D} <= %<registryrole.start>%
 )
)
OR
(%<registryrole.idrole>% = &<registryrole.idrole>&)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR009','1','I','registrysorting','S','S','S','N','N',{ts '2007-11-28 15:04:43.057'},'SARA','%<registry.title>% è già associato ad una classificazione EMENS','N','--post
[SELECT COUNT(*)
FROM registrysorting
JOIN sorting
	ON registrysorting.idsor = sorting.idsor
join sortingkind
	on sortingkind.idsorkind = sorting.idsorkind  
join sortinglink
	on sortinglink.idchild = sorting.idsor 
WHERE registrysorting.idreg = %<registrysorting.idreg>%
	and sortinglink.idparent = (SELECT idparent FROM sortinglink l2 
						WHERE l2.idchild = %<registrysorting.idsor>% 
						AND l2.nlevel = sortinglink.nlevel)
	and sortinglink.nlevel = 
		[SELECT MAX(sortinglevel.nlevel) FROM sortinglevel
		JOIN sorting ON sortinglevel.idsorkind = sorting.idsorkind  
			WHERE (sortinglevel.flag&2)=0 AND 
			sorting.idsor = %<registrysorting.idsor>%]{I}
	AND sortingkind.codesorkind = ''EMENS''
]{I} = 1

OR
( [select codesorkind from sortingkind 
				join sorting
					on sortingkind.idsorkind = sorting.idsorkind  
				where idsor = %<registrysorting.idsor>%]{C} 
<> ''EMENS'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR009','2','I','registrysorting','S','S','S','N','N',{ts '2007-11-28 15:05:08.823'},'SARA','%<registry.title>%  non può avere nello stesso esercizio due classificazioni INPS per EMENS: Codici Attività','N','--post
[SELECT COUNT(*)
FROM registrysorting
JOIN sorting
	ON registrysorting.idsor = sorting.idsor
join sortingkind
	on sortingkind.idsorkind = sorting.idsorkind  
join sortinglink
	on sortinglink.idchild = sorting.idsor 
WHERE registrysorting.idreg = %<registrysorting.idreg>%
	and sortinglink.idparent = (SELECT idparent FROM sortinglink l2 
						WHERE l2.idchild = %<registrysorting.idsor>% 
						AND l2.nlevel = sortinglink.nlevel)
	and sortinglink.nlevel = 
		[SELECT MAX(sortinglevel.nlevel) FROM sortinglevel
		JOIN sorting ON sortinglevel.idsorkind = sorting.idsorkind  
			WHERE (sortinglevel.flag&2)=0 AND 
			sorting.idsor = %<registrysorting.idsor>%]{I}
	AND sortingkind.codesorkind = ''EMENS2''
]{I} = 1

OR
( [select codesorkind from sortingkind 
				join sorting
					on sortingkind.idsorkind = sorting.idsorkind  
				where idsor = %<registrysorting.idsor>%]{C} 
<> ''EMENS2'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR009','3','I','registrysorting','S','S','S','N','N',{ts '2007-11-28 15:05:18.697'},'SARA','%<registry.title>%  non può avere nello stesso esercizio due classificazioni INPS per EMENS: Codici Attività','N','--post
[SELECT COUNT(*)
FROM registrysorting
JOIN sorting
	ON registrysorting.idsor = sorting.idsor
join sortingkind
	on sortingkind.idsorkind = sorting.idsorkind  
join sortinglink
	on sortinglink.idchild = sorting.idsor 
WHERE registrysorting.idreg = %<registrysorting.idreg>%
	and sortinglink.idparent = (SELECT idparent FROM sortinglink l2 
						WHERE l2.idchild = %<registrysorting.idsor>% 
						AND l2.nlevel = sortinglink.nlevel)
	and sortinglink.nlevel = 
		[SELECT MAX(sortinglevel.nlevel) FROM sortinglevel
		JOIN sorting ON sortinglevel.idsorkind = sorting.idsorkind  
			WHERE (sortinglevel.flag&2)=0 AND 
			sorting.idsor = %<registrysorting.idsor>%]{I}
	AND sortingkind.codesorkind = ''EMENS3''
]{I} = 1

OR
( [select codesorkind from sortingkind 
				join sorting
					on sortingkind.idsorkind = sorting.idsorkind  
				where idsor = %<registrysorting.idsor>%]{C} 
<> ''EMENS3'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR009','1','U','registrysorting','S','S','S','N','N',{ts '2007-11-28 15:05:36.480'},'SARA','%<registry.title>% è già associato ad una classificazione EMENS','S','--post
[SELECT COUNT(*)
FROM registrysorting
JOIN sorting
	ON registrysorting.idsor = sorting.idsor
join sortingkind
	on sortingkind.idsorkind = sorting.idsorkind  
join sortinglink
	on sortinglink.idchild = sorting.idsor 
WHERE registrysorting.idreg = %<registrysorting.idreg>%
	and sortinglink.idparent = (SELECT idparent FROM sortinglink l2 
						WHERE l2.idchild = %<registrysorting.idsor>% 
						AND l2.nlevel = sortinglink.nlevel)
	and sortinglink.nlevel = 
		[SELECT MAX(sortinglevel.nlevel) FROM sortinglevel
		JOIN sorting ON sortinglevel.idsorkind = sorting.idsorkind  
			WHERE (sortinglevel.flag&2)=0 AND 
			sorting.idsor = %<registrysorting.idsor>%]{I}
	AND sortingkind.codesorkind = ''EMENS''
]{I} = 0

OR
( [select codesorkind from sortingkind 
				join sorting
					on sortingkind.idsorkind = sorting.idsorkind  
				where idsor = %<registrysorting.idsor>%]{C} 
<> ''EMENS'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR009','2','U','registrysorting','S','S','S','N','N',{ts '2007-11-28 15:05:49.683'},'SARA','%<registry.title>%  non può avere nello stesso esercizio due classificazioni INPS per EMENS: Codici Attività','S','--post
[SELECT COUNT(*)
FROM registrysorting
JOIN sorting
	ON registrysorting.idsor = sorting.idsor
join sortingkind
	on sortingkind.idsorkind = sorting.idsorkind  
join sortinglink
	on sortinglink.idchild = sorting.idsor 
WHERE registrysorting.idreg = %<registrysorting.idreg>%
	and sortinglink.idparent = (SELECT idparent FROM sortinglink l2 
						WHERE l2.idchild = %<registrysorting.idsor>% 
						AND l2.nlevel = sortinglink.nlevel)
	and sortinglink.nlevel = 
		[SELECT MAX(sortinglevel.nlevel) FROM sortinglevel
		JOIN sorting ON sortinglevel.idsorkind = sorting.idsorkind  
			WHERE (sortinglevel.flag&2)=0 AND 
			sorting.idsor = %<registrysorting.idsor>%]{I}
	AND sortingkind.codesorkind = ''EMENS2''
]{I} = 0

OR
( [select codesorkind from sortingkind 
				join sorting
					on sortingkind.idsorkind = sorting.idsorkind  
				where idsor = %<registrysorting.idsor>%]{C} 
<> ''EMENS2'')

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR009','3','U','registrysorting','S','S','S','N','N',{ts '2007-11-28 15:05:59.743'},'SARA','%<registry.title>%  non può avere nello stesso esercizio due classificazioni INPS per EMENS: Codici Attività','S','--post
[SELECT COUNT(*)
FROM registrysorting
JOIN sorting
	ON registrysorting.idsor = sorting.idsor
join sortingkind
	on sortingkind.idsorkind = sorting.idsorkind  
join sortinglink
	on sortinglink.idchild = sorting.idsor 
WHERE registrysorting.idreg = %<registrysorting.idreg>%
	and sortinglink.idparent = (SELECT idparent FROM sortinglink l2 
						WHERE l2.idchild = %<registrysorting.idsor>% 
						AND l2.nlevel = sortinglink.nlevel)
	and sortinglink.nlevel = 
		[SELECT MAX(sortinglevel.nlevel) FROM sortinglevel
		JOIN sorting ON sortinglevel.idsorkind = sorting.idsorkind  
			WHERE (sortinglevel.flag&2)=0 AND 
			sorting.idsor = %<registrysorting.idsor>%]{I}
	AND sortingkind.codesorkind = ''EMENS3''
]{I} = 0

OR
( [select codesorkind from sortingkind 
				join sorting
					on sortingkind.idsorkind = sorting.idsorkind  
				where idsor = %<registrysorting.idsor>%]{C} 
<> ''EMENS3'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','registrytaxablestatus','S','S','S','N','N',{ts '2010-05-27 16:48:31.467'},'SA','All''anagrafica %<registry.title>% è stata già assegnata la posizione retributiva con decorrenza a partire da %<start>%','N','[(SELECT count(*) 
from registrytaxablestatus 
where start = %<registrytaxablestatus.start>% 
and idreg = %<registrytaxablestatus.idreg>%)]{I} = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','residence','S','S','S','N','N',{ts '2007-09-13 12:10:35.517'},'NINO','Il Tipo residenza %<residence.description>% non può essere cancellata in quanto esistono creditori/debitori che la referenziano.','S','[(SELECT count(*)  
from registry 
where residence=%<residence.idresidence>% )]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','residence','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del tipo di residenza già esistente','S','[(SELECT count(*) 
from residence
where description = %<residence.description>%)]{N} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','residence','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del tipo di residenza già esistente','S','[(SELECT count(*) 
from residence
where  idresidence<> %<residence.idresidence>% and description = %<residence.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','role','S','S','S','N','N',{ts '2007-09-13 12:10:41.890'},'NINO','Cancellazione Impossibile! Esistono posizioni lavorative collegate al ruolo %<role.idrole>%','S','[(SELECT count(*)  
from registryrole  
where idrole = %<role.idrole>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','role','S','S','S','N','N',{ts '2007-09-13 12:10:49.217'},'NINO','Cancellazione Impossibile! Esistono tipi di prestazione collegati al  ruolo %<description>%','S','[(SELECT count(*) 
from roleservice 
where idrole = %<role.idrole>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','role','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del ruolo già esistente','S','[(SELECT count(*) 
from  role
where description = %<role.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','role','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del ruolo già esistente','S','[(SELECT count(*) 
from role
where  idrole<> %<role.idrole>% and 
description = %<role.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','service','S','S','S','N','N',{ts '2008-02-22 14:57:48.377'},'SARA','Il tipo di prestazione %<description>% non può essere cancellato in quanto esistono movimenti di spesa che lo referenziano.','S','[execute count_table_field ''expenselast'',''idser'',
%<service.idser>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','service','S','S','S','N','N',{ts '2008-02-22 14:58:30.547'},'SARA','Il tipo di prestazione %<description>% non può essere cancellato in quanto esistono missioni che lo referenziano.','S','[execute count_table_field ''itineration'',''idser'',
%<service.idser>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','service','S','S','S','N','N',{ts '2008-07-22 15:40:52.577'},'SARA','Il tipo di prestazione %<description>% non può essere cancellato in quanto esistono contratti occasionali che lo referenziano.','S','[execute count_table_field ''casualcontract'',''idser'',
%<service.idser>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','service','S','S','S','N','N',{ts '2008-07-22 15:41:28.233'},'SARA','Il tipo di prestazione %<description>% non può essere cancellato in quanto esistono prestazioni professionali che lo referenziano.','S','[execute count_table_field ''profservice'',''idser'',
%<service.idser>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','5','D','service','S','S','S','N','N',{ts '2008-07-22 15:43:08.733'},'SARA','Il tipo di prestazione %<description>% non può essere cancellato in quanto esistono contratti parasubordinati che lo referenziano.','S','[execute count_table_field ''parasubcontract'',''idser'',
%<service.idser>%,@outvar output]{I}=0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','6','D','service','S','S','S','N','N',{ts '2008-07-22 15:48:11.153'},'SARA','Il tipo di prestazione %<description>% non può essere cancellato in quanto esistono movimenti del pagamento stipendi che lo referenziano.','S','[execute count_table_field ''admpay_expense'',''idser'',
%<service.idser>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','7','D','service','S','S','S','N','N',{ts '2008-07-22 15:51:22.717'},'SARA','Il tipo di prestazione %<description>% non può essere cancellato in quanto esistono contratti a dipendenti che lo referenziano.','S','[execute count_table_field ''wageaddition'',''idser'',
%<service.idser>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','8','D','service','S','S','S','N','N',{ts '2008-07-22 15:54:50.590'},'SARA','Il tipo di prestazione %<description>% non può essere cancellato in quanto esistono classificazioni che lo referenziano.','S','[execute count_table_field ''servicesorting'',''idser'',
%<service.idser>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','9','D','service','S','S','S','N','N',{ts '2008-07-22 15:56:00.687'},'SARA','Il tipo di prestazione %<description>% non può essere cancellato in quanto esistono configurazioni delle  classificazioni automatiche delle ritenute che lo referenziano.','S','[execute count_table_field ''taxsortingsetup'',''idser'',
%<service.idser>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','service','S','S','S','N','N',{ts '2007-09-01 10:26:08.250'},'NINO','Tipo di prestazione %<idser>% già esistente','S','[(SELECT count(*) 
from service 
where idser = %<service.idser>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','service','S','S','S','N','N',{ts '2007-09-01 10:26:18.627'},'NINO','Descrizione del tipo di prestazione già esistente','S','[(SELECT count(*) 
from service 
where description = %<service.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS020 ','1','U','service','S','S','S','N','N',{ts '2008-04-28 11:24:40.860'},'SARA','La prestazione  %<service.description>%  deve essere associata al modello di certificazione fiscale CUD in quanto esistono dei contratti parasubordinati che la utilizzano e che sono stati inseriti come CUD in altri contratti.','N','(ISNULL(%<service.certificatekind>%,'' '')  = 
 ISNULL(&<service.certificatekind>&,'' '' ))
OR
(
ISNULL(%<service.certificatekind>%,'' '') = ''U''
)
OR(
[SELECT COUNT(*)
FROM parasubcontract JOIN parasubcontractyear 
ON    parasubcontractyear.idcon =  parasubcontract.idcon 
AND  parasubcontractyear.ayear >= %<sys_esercizio>%
JOIN registry ON parasubcontract.idreg = registry.idreg 
JOIN exhibitedcud ON exhibitedcud.idlinkedcon = parasubcontract.idcon 
WHERE EXISTS (SELECT * FROM payroll 
JOIN expensepayroll 
ON payroll.idpayroll = expensepayroll.idpayroll 
JOIN expenselink ON expenselink.idparent = expensepayroll.idexp 
JOIN expenselast on expenselast.idexp = expenselink.idchild 
WHERE payroll.idcon = parasubcontract.idcon  
AND   payroll.fiscalyear = parasubcontractyear.ayear) 
AND   exhibitedcud.fiscalyear = parasubcontractyear.ayear
AND   parasubcontract.idser = %<service.idser>%]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS021','1','U','service','S','S','S','N','N',{ts '2008-04-28 11:19:15.063'},'SARA','Se la prestazione %<service.description>% viene associata al modello di certificazione fiscale CUD,  alcuni contratti parasubordinati che la utilizzano,  dovrebbero essere inseriti come CUD in altri contratti dello stesso percipiente.','N','(ISNULL(%<service.certificatekind>%,'' '') = 
ISNULL(&<service.certificatekind>&,'' '' ))
OR
(
ISNULL(%<service.certificatekind>%,'' '') <> ''U''
)
OR
(
[SELECT COUNT(registry.title)
FROM parasubcontract 
JOIN parasubcontractyear 
ON   parasubcontractyear.idcon =  parasubcontract.idcon 
AND  parasubcontractyear.ayear >= %<sys_esercizio>%
JOIN registry ON parasubcontract.idreg = registry.idreg 
WHERE  parasubcontract.idser = %<service.idser>%
AND EXISTS 
(SELECT * FROM payroll 
JOIN expensepayroll ON payroll.idpayroll = expensepayroll.idpayroll 
JOIN expenselink ON expenselink.idparent = expensepayroll.idexp 
JOIN expenselast ON expenselast.idexp = expenselink.idchild 
WHERE payroll.idcon = parasubcontract.idcon 
AND payroll.fiscalyear = parasubcontractyear.ayear)
AND NOT EXISTS 
(SELECT * FROM exhibitedcud 
WHERE idlinkedcon = parasubcontract.idcon 
AND exhibitedcud.fiscalyear = parasubcontractyear.ayear)
GROUP BY registry.title 
HAVING COUNT(parasubcontract.idcon) > 1] {I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('PARAS025','1','U','service','S','S','S','N','N',{ts '2008-07-16 12:52:38.437'},'NINO','La prestazione %<service.description>% non può cambiare certificazione in quanto ci sono dei contratti con questa prestazione che sono diventati CUD ','S','-- La vecchia certificazione non era CUD
ISNULL(&<service.certificatekind>&, '''') <> ''U''
OR
-- Non è cambiata la certificazione
ISNULL(&<service.certificatekind>&, '''') = ISNULL(%<service.certificatekind>%, '''')
OR
[EXECUTE compute_parasubcontractcud
%<service.idser>%, @outvar output]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','service','S','S','S','N','N',{ts '2007-09-01 10:26:42.610'},'NINO','Descrizione del tipo di prestazione già esistente','S','[(SELECT count(*) 
from service 
where idser <> %<service.idser>% 
and description = %<service.description>%)]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','servicemotive','S','S','S','N','N',{ts '2007-09-13 12:11:09.313'},'NINO','Cancellazione Impossibile! Esistono tipi di prestazione collegati alla causale prestazione %<servicemotive.description>%','S','[(SELECT count(*) 
from service
where idmotive = %<servicemotive.idmotive>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','servicemotive','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione della causale della prestazione già esistente','S','[(SELECT count(*) 
from servicemotive
where description = %<servicemotive.description>%
and ayear = %<servicemotive.ayear>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','servicemotive','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione della causale della prestazione già esistente','S','[(SELECT count(*) 
from servicemotive
where  idmot<> %<servicemotive.idmot>% and 
description = %<servicemotive.description>% 
and ayear=%<servicemotive.ayear>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE002 ','1','D','servicepayment','S','S','S','N','N',{ts '2006-09-29 13:35:48.937'},'''SARA''','Non si può cancellare un pagamento se è stato pagato il saldo.','S','[(select count (*)
from serviceregistry
where nservreg = %<servicepayment.nservreg>%
and yservreg = %<servicepayment.yservreg>%
and (isnull(payment,'''') =''S'')
)]{N} 
= 0 



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE002 ','2','D','servicepayment','S','S','S','N','N',{ts '2006-09-29 13:36:52.687'},'''SARA''','Non si può cancellare un pagamento se è stato trasmesso.','S','isnull(%<servicepayment.is_delivered>%,'''') <>''S''


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE003','1','I','serviceregistry','S','S','S','N','N',{ts '2012-03-09 16:50:06.527'},'sa','Sono stati inseriti dei caratteri non ammessi nella DESCRIZIONE, ossia caretteri speciali come: <, >, &, '', À, Á, Ù, Ý, Â, É, È, Í, Ì,  Ó, Ò, Ú.   ','N','( 
 %<serviceregistry.description>% NOT LIKE  ''%&%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%À%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%Á%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%Ù%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%Ý%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%Â%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%É%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%È%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%Í%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%Ì%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%Ó%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%Ò%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%Ú%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%''+char(39)+''%''  
AND  %<serviceregistry.annotation>% NOT LIKE  ''%''+char(60)+''%''  
AND  %<serviceregistry.annotation>% NOT LIKE  ''%''+char(62)+''%''  
collate SQL_Latin1_General_CP1_CS_AS
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE003','2','I','serviceregistry','S','S','S','N','N',{ts '2012-03-09 16:50:20.510'},'sa','Sono stati inseriti dei caratteri non ammessi nella VARIAZIONE INCARICO, ossia caretteri speciali come:<, >, &, '', À, Á, Ù, Ý, Â, É, È, Í, Ì,  Ó, Ò, Ú.   ','N','( 
 %<serviceregistry.servicevariation>% NOT LIKE  ''%&%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%À%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%Á%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%Ù%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%Ý%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%Â%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%É%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%È%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%Í%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%Ì%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%Ó%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%Ò%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%Ú%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%''+char(39)+''%''  
AND  %<serviceregistry.annotation>% NOT LIKE  ''%''+char(60)+''%''  
AND  %<serviceregistry.annotation>% NOT LIKE  ''%''+char(62)+''%''  
collate SQL_Latin1_General_CP1_CS_AS
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE003','3','I','serviceregistry','S','S','S','N','N',{ts '2012-03-09 16:50:27.587'},'sa','Sono stati inseriti dei caratteri non ammessi nelle NOTE, ossia caretteri speciali come:<, >, &, '', À, Á, Ù, Ý, Â, É, È, Í, Ì,  Ó, Ò, Ú.     ','N','( 
 %<serviceregistry.annotation>% NOT LIKE  ''%&%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%À%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%Á%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%Ù%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%Ý%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%Â%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%É%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%È%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%Í%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%Ì%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%Ó%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%Ò%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%Ú%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%''+char(39)+''%''  
AND  %<serviceregistry.annotation>% NOT LIKE  ''%''+char(60)+''%''  
AND  %<serviceregistry.annotation>% NOT LIKE  ''%''+char(62)+''%''  
collate SQL_Latin1_General_CP1_CS_AS
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE003','4','I','serviceregistry','S','S','S','N','N',{ts '2012-01-31 10:50:21.280'},'sa','Il nome va inserito in maniera estesa, senza punteggiatura.','N','( 
 %<serviceregistry.forename>% NOT LIKE  ''%.%'' 
collate SQL_Latin1_General_CP1_CS_AS
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE004','1','I','serviceregistry','S','S','S','N','N',{ts '2012-01-31 09:43:04.843'},'sa','Per il dipendente %<serviceregistry.title>% non è presente l''indirizzo ''Anagrafe delle Prestazioni'' valido alla data di Inizio incarico.','N','(%<serviceregistry.employkind>% = ''D'') 
OR EXISTS
(SELECT * FROM registryaddress 
 JOIN address
 ON registryaddress.idaddresskind = address.idaddress
WHERE idreg = %<serviceregistry.idreg>% 
	AND (address.codeaddress=''07_SW_ANP'') 
          AND (%<serviceregistry.start>%>=registryaddress.start) 
     AND ( (registryaddress.stop IS NULL)  OR (%<serviceregistry.start>%<=registryaddress.stop)  )
)



')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE005','1','I','serviceregistry','S','S','S','N','N',{ts '2011-03-25 13:11:57.370'},'sa','L''anno di riferimento della prestazione deve essere uguale all''anno della data inizio prestazione.','S','%<serviceregistry.yservreg>% = datepart(year, %<serviceregistry.start>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE007','1','I','serviceregistry','S','S','S','N','N',{ts '2011-07-11 13:29:33.610'},'sa','Non è possibile marcare l''incarico%<serviceregistry.yservreg>% / %<serviceregistry.nservreg>% come "Saldato" senza inserire i pagamenti.','N','isnull(%<serviceregistry.payment>%,''N'') =''N''

OR

[SELECT COUNT(*) FROM servicepayment
WHERE yservreg = %<serviceregistry.yservreg>%
and  nservreg = %<serviceregistry.nservreg>%]{I}>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE007','2','I','serviceregistry','S','S','S','N','N',{ts '2011-07-11 14:09:56.377'},'sa','La Data Affidamento incarico non può essere successiva alla data inizio.','N','-- Per i Consulenti la data affidamento deve essere <= alla data inizio
%<serviceregistry.employkind>% <>''C''
OR
%<serviceregistry.expectationsdate>%<=%<serviceregistry.start>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE007','3','I','serviceregistry','N','N','N','N','N',{ts '2013-05-31 15:01:27.853'},'assistenza','L''importo della prestazione non può essere uguale a 0. Task 4411','N','%<serviceregistry.expectedamount>% > 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE008','1','I','serviceregistry','S','S','S','N','N',{ts '2012-01-24 15:58:31.797'},'sara','Il codice attività economica selezionato non è corretto in base ala Data di affidamento dell''incarico.','S','%<serviceregistry.employkind>% <>''C''
OR
(
(ISNULL(%<serviceregistry.expectationsdate>%,{D ''1900-01-01''} )
<= {D ''2011-03-02''})
AND (%<serviceregistry.idfinancialactivity>% IS NOT NULL)
AND (%<serviceregistry.idapfinancialactivity>% IS NULL)
)
OR
(
(ISNULL(%<serviceregistry.expectationsdate>%,{D ''1900-01-01''} )
>= {D ''2011-03-03''})
AND (%<serviceregistry.idapfinancialactivity>% IS NOT NULL)
AND (%<serviceregistry.idfinancialactivity>% IS NULL)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE009','1','I','serviceregistry','S','S','S','N','N',{ts '2013-06-26 14:04:30.217'},'assistenza','E'' necessario scegliere la Tipologia Incarico.','S','%<serviceregistry.idserviceregistrykind>% is not null
OR
[select count(*) from serviceregistrykind]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE003','1','U','serviceregistry','S','S','S','N','N',{ts '2012-03-09 16:50:40.480'},'sa','Sono stati inseriti dei caratteri non ammessi nella DESCRIZIONE, ossia caretteri speciali come:<, >, &, '', À, Á, Ù, Ý, Â, É, È, Í, Ì,  Ó, Ò, Ú.   ','S','( 
 %<serviceregistry.description>% NOT LIKE  ''%&%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%À%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%Á%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%Ù%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%Ý%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%Â%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%É%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%È%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%Í%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%Ì%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%Ó%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%Ò%'' 
AND  %<serviceregistry.description>% NOT LIKE  ''%Ú%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%''+char(39)+''%''  
AND  %<serviceregistry.annotation>% NOT LIKE  ''%''+char(60)+''%''  
AND  %<serviceregistry.annotation>% NOT LIKE  ''%''+char(62)+''%''  
collate SQL_Latin1_General_CP1_CS_AS
)

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE003','2','U','serviceregistry','S','S','S','N','N',{ts '2012-03-09 16:50:48.027'},'sa','Sono stati inseriti dei caratteri non ammessi nella VARIAZIONE INCARICO, ossia caretteri speciali come: <, >, &, '', À, Á, Ù, Ý, Â, É, È, Í, Ì,  Ó, Ò, Ú.   ','S','( 
 %<serviceregistry.servicevariation>% NOT LIKE  ''%&%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%À%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%Á%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%Ù%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%Ý%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%Â%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%É%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%È%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%Í%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%Ì%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%Ó%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%Ò%'' 
AND  %<serviceregistry.servicevariation>% NOT LIKE  ''%Ú%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%''+char(39)+''%''  
AND  %<serviceregistry.annotation>% NOT LIKE  ''%''+char(60)+''%''  
AND  %<serviceregistry.annotation>% NOT LIKE  ''%''+char(62)+''%''  
collate SQL_Latin1_General_CP1_CS_AS
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE003','3','U','serviceregistry','S','S','S','N','N',{ts '2012-03-09 16:50:55.417'},'sa','Sono stati inseriti dei caratteri non ammessi nelle NOTE, ossia caretteri speciali come: <, >, &, '', À, Á, Ù, Ý, Â, É, È, Í, Ì,  Ó, Ò, Ú.   ','S','( 
 %<serviceregistry.annotation>% NOT LIKE  ''%&%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%À%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%Á%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%Ù%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%Ý%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%Â%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%É%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%È%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%Í%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%Ì%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%Ó%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%Ò%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%Ú%'' 
AND  %<serviceregistry.annotation>% NOT LIKE  ''%''+char(39)+''%''  
AND  %<serviceregistry.annotation>% NOT LIKE  ''%''+char(60)+''%''  
AND  %<serviceregistry.annotation>% NOT LIKE  ''%''+char(62)+''%''  
collate SQL_Latin1_General_CP1_CS_AS
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE003','4','U','serviceregistry','S','S','S','N','N',{ts '2012-01-31 10:50:36.903'},'sa','Il nome va inserito in maniera estesa, senza punteggiatura.','N','( 
 %<serviceregistry.forename>% NOT LIKE  ''%.%'' 
collate SQL_Latin1_General_CP1_CS_AS
)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE004','1','U','serviceregistry','S','S','S','N','N',{ts '2012-01-31 09:43:16.200'},'sa','Per il dipendente %<serviceregistry.title>% non è presente l''indirizzo ''Anagrafe delle Prestazioni'' valido alla data di Inizio incarico.','N','(%<serviceregistry.employkind>% = ''D'') 
OR EXISTS
(SELECT * FROM registryaddress 
 JOIN address
 ON registryaddress.idaddresskind = address.idaddress
WHERE idreg = %<serviceregistry.idreg>% 
	AND (address.codeaddress=''07_SW_ANP'') 
          AND (%<serviceregistry.start>%>=registryaddress.start) 
     AND ( (registryaddress.stop IS NULL)  OR (%<serviceregistry.start>%<=registryaddress.stop)  )
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE005','1','U','serviceregistry','S','S','S','N','N',{ts '2011-03-25 13:12:11.743'},'sa','L''anno di riferimento della prestazione deve essere uguale all''anno della data inizio prestazione.','S','%<serviceregistry.yservreg>% = datepart(year, %<serviceregistry.start>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE007','1','U','serviceregistry','S','S','S','N','N',{ts '2011-07-11 13:31:16.750'},'sa','Non è possibile marcare l''incarico%<serviceregistry.yservreg>% / %<serviceregistry.nservreg>% come "Saldato" senza inserire i pagamenti.','N','isnull(&<serviceregistry.payment>&,''N'') =isnull(%<serviceregistry.payment>%,''N'')

OR

isnull(%<serviceregistry.payment>%,''N'') =''N''

OR

[SELECT COUNT(*) FROM servicepayment
WHERE yservreg = %<serviceregistry.yservreg>%
and  nservreg = %<serviceregistry.nservreg>%]{I}>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE007','2','U','serviceregistry','S','S','S','N','N',{ts '2011-07-11 14:21:17.483'},'sa','La Data Affidamento incarico non può essere successiva alla data inizio.','N','-- Per i Consulenti la data affidamento deve essere <= alla data inizio
%<serviceregistry.employkind>% <>''C''
OR
&<serviceregistry.expectationsdate>&=%<serviceregistry.expectationsdate>%
OR
%<serviceregistry.expectationsdate>%<=%<serviceregistry.start>%
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE007','3','U','serviceregistry','N','N','N','N','N',{ts '2013-05-31 16:57:25.220'},'assistenza','L''importo della prestazione non può essere uguale a 0.','N','&<serviceregistry.expectedamount>& =%<serviceregistry.expectedamount>% 

OR

%<serviceregistry.expectedamount>% > 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE008','1','U','serviceregistry','S','S','S','N','N',{ts '2012-01-24 16:33:28.077'},'sara','Il codice attività economica selezionato non è corretto in base alla Data di affidamento dell''incarico.','S','%<serviceregistry.employkind>% <>''C''
OR
(
(ISNULL(%<serviceregistry.expectationsdate>%,{D ''1900-01-01''} )
<= {D ''2011-03-02''})
AND (%<serviceregistry.idfinancialactivity>% IS NOT NULL)
AND (%<serviceregistry.idapfinancialactivity>% IS NULL)
)
OR
(
(ISNULL(%<serviceregistry.expectationsdate>%,{D ''1900-01-01''} )
>= {D ''2011-03-03''})
AND (%<serviceregistry.idapfinancialactivity>% IS NOT NULL)
AND (%<serviceregistry.idfinancialactivity>% IS NULL)
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','serviceregistrykind','S','S','S','N','N',{ts '2013-05-31 16:56:55.780'},'assistenza','Cancellazione Impossibile! Esistono Incarichi collegati alla Tipologia : %<serviceregistrykind.title>% .','S','[SELECT COUNT(*) FROM serviceregistry
WHERE idserviceregistrykind = %<serviceregistry.idserviceregistrykind>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','sorting','S','S','S','N','N',{ts '2007-11-27 15:23:13.843'},'SARA','Cancellazione Impossibile! Esistono imputazioni dei movimenti di entrata collegate alla voce di classificazione dei movimenti %<sortingview.codesorkind>% - %<sortingview.sortcode>%','S','[(SELECT count(*) 
from incomesorted 
where idsor = %<sorting.idsor>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','sorting','S','S','S','N','N',{ts '2007-11-27 15:23:52.577'},'SARA','Cancellazione Impossibile! Esistono imputazioni dei movimenti di spesa collegate alla voce di classificazione dei movimenti %<sortingview.codesorkind>% - %<sortingview.sortcode>%','S','[(SELECT count(*) 
from expensesorted 
where idsor = %<sorting.idsor>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','sorting','S','S','S','N','N',{ts '2007-11-27 15:23:58.467'},'SARA','Cancellazione Impossibile! Esistono voci dipedenti dalla voce di classificazione dei movimenti %<sortingview.codesorkind>% - %<sortingview.sortcode>%','S','[(SELECT count(*) 
from sorting 
where idsorkind = %<sorting.idsorkind>% 
and paridsor = %<sorting.idsor>%)]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','5','D','sorting','S','S','S','N','N',{ts '2007-11-27 15:24:08.217'},'SARA','Cancellazione Impossibile! Esistono variazioni di previsione di spesa collegate alla voce di classificazione dei movimenti %<sortingview.codesorkind>% - %<sortingview.sortcode>%','S','[(SELECT count(*) 
from sortingprevexpensevar 
where idsor = %<sorting.idsor>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','6','D','sorting','S','S','S','N','N',{ts '2007-11-27 15:24:23.983'},'SARA','Cancellazione Impossibile! Esistono variazioni di previsione di entrata collegate alla voce di classificazione dei movimenti %<sortingview.codesorkind>% - %<sortingview.sortcode>%','S','[(SELECT count(*) 
from sortingprevincomevar 
where idsor = %<sorting.idsor>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','7','D','sorting','S','S','S','N','N',{ts '2009-10-14 14:49:25.373'},'SARA','Cancellazione Impossibile! Esistono oggetti classificati collegati alla classificazione %<sorting.sortcode>%','S','(
[(SELECT count(*) 
from registrysorting
where idsor=%<sorting.idsor>%)]{I} = 0
and
[(SELECT count(*) 
from managersorting
where idsor = %<sorting.idsor>%)]{I} = 0
AND 
[(SELECT count(*) 
from finsorting
where idsor = %<sorting.idsor>%)]{I} = 0
AND 
[(SELECT count(*) 
from divisionsorting
where idsor = %<sorting.idsor>%)]{I} = 0
AND
[(SELECT count(*) 
from inventorytreesorting
where idsor = %<sorting.idsor>%)]{I} = 0
AND 
[(SELECT count(*) 
from locationsorting
where idsor = %<sorting.idsor>%)]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM004','2','D','sorting','S','S','S','N','N',{ts '2007-11-27 12:20:10.000'},'SARA','La cancellazione della voce della classificazione dei movimenti  %<sortingview.codesorkind>% - %<sortingview.sortcode>% comporterà la cancellazione di tutte le relative previsioni','S','[(SELECT count(*) 
from sortingprev 
where idsor = %<sorting.idsor>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM013','1','D','sorting','S','S','S','N','N',{ts '2008-11-04 16:07:34.983'},'SARA','Esistono valori di previsione per la classificazione %<sorting.sortcode>% in eserci diversi da quello corrente. 
Prima di procedere alla cancellazione, azzerare le previsioni degli altri esercizi.','S','[(SELECT count(*) 
from sortingprev 
where idsor = %<sorting.idsor>%)]{I} = 0

OR

[(SELECT count(*) 
from sortingprev 
where idsor = %<sorting.idsor>%
and ( isnull(expenseprevision,0) <>0 or isnull(incomeprevision,0) <>0)
and ayear<>%<sys_esercizio>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','sorting','S','S','S','N','N',{ts '2007-11-27 12:17:24.860'},'SARA','Nella classificazione dei movimenti il codice %<sortcode>% è già esistente','S','[(SELECT count(*) 
from sorting 
where idsorkind = %<sorting.idsorkind>% 
and sortcode = %<sorting.sortcode>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','I','sorting','S','S','S','N','N',{ts '2007-11-27 15:27:44.703'},'SARA','Esistono imputazioni di movimenti di entrata collegate al padre della voce di classificazione %<sortingkind.codesorkind>% - %<sorting.sortcode>% .','S','[(SELECT count(*) 
from incomesorted 
where idsor = %<sorting.paridsor>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','I','sorting','S','S','S','N','N',{ts '2007-11-27 15:27:48.187'},'SARA','Esistono imputazioni di movimenti di spesa collegate al padre della voce di classificazione %<sortingkind.codesorkind>% - %<sorting.sortcode>% .','S','[(SELECT count(*) 
from expensesorted 
where idsor = %<sorting.paridsor>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','5','I','sorting','S','S','S','N','N',{ts '2007-11-27 15:27:52.297'},'SARA','Esistono variazioni alla previsione di entrata collegate al padre della voce di classificazione %<sortingkind.codesorkind>% - %<sorting.sortcode>% .','S','[(SELECT count(*) 
from sortingprevincomevar 
where idsor = %<sorting.paridsor>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','6','I','sorting','S','S','S','N','N',{ts '2007-11-27 15:27:59.813'},'SARA','Esistono variazioni alla previsione di spesa collegate al padre della voce di classificazione %<sortingkind.codesorkind>% - %<sorting.sortcode>%.','S','[(SELECT count(*) 
from sortingprevexpensevar 
where idsor = %<sorting.paridsor>%)]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','7','I','sorting','S','S','S','N','N',{ts '2007-11-27 15:28:02.843'},'SARA','Esistono dati in anagrafica collegati al padre della voce di classificazione %<sortingkind.codesorkind>% - %<sorting.sortcode>% .','S','[(SELECT count(*) from 
registrysorting
where idsor=%<sorting.paridsor>%)]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','8','I','sorting','S','S','S','N','N',{ts '2007-11-27 15:27:11.093'},'SARA','Esistono responsabili collegati al padre della voce di classificazione %<sortingkind.codesorkind>% - %<sorting.sortcode>% .','S','[(SELECT count(*) from 
managersorting
where idsor=%<sorting.paridsor>%)]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','9','I','sorting','S','S','S','N','N',{ts '2007-11-27 15:27:22.313'},'SARA','Esistono voci di bilancio collegate al padre della voce di classificazione %<sortingkind.codesorkind>% - %<sorting.sortcode>% .','S','[(SELECT count(*) from 
finsorting
where idsor=%<sorting.paridsor>%)]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','11','I','sorting','S','S','S','N','N',{ts '2007-11-27 15:27:27.000'},'SARA','Esistono sezioni collegate al padre della voce di classificazione %<sortingkind.codesorkind>% - %<sorting.sortcode>% .','S','[(SELECT count(*) from 
divisionsorting
where idsor=%<sorting.paridsor>%)]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','12','I','sorting','S','S','S','N','N',{ts '2007-11-27 15:27:32.267'},'SARA','Esistono classificazioni inventariali collegate al padre della voce di classificazione %<sortingkind.codesorkind>% - %<sorting.sortcode>% .','S','[(SELECT count(*) from 
inventorytreesorting
where idinv=%<sorting.paridsor>%)]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','16','I','sorting','S','S','S','N','N',{ts '2007-11-27 15:27:37.267'},'SARA','Esistono ubicazioni collegate al padre della voce di classificazione %<sortingkind.codesorkind>% - %<sorting.sortcode>% .','S','[(SELECT count(*) from 
locationsorting
where idsor=%<sorting.paridsor>%)]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM017','1','I','sorting','S','S','S','N','N',{ts '2011-04-05 16:24:35.483'},'sara','Attenzione, la lunghezza del codice non è corretta','N','[(SELECT sum(floor(flag)/256) 
   from sortinglevel  
  where sortinglevel.idsorkind = %<sorting.idsorkind>% and 
        sortinglevel.nlevel <= %<sorting.nlevel>%)]{I} =  len(%<sorting.sortcode>%)
OR
[( SELECT count(*) 
   from sortinglevel  
  where sortinglevel.idsorkind = %<sorting.idsorkind>% and 
        sortinglevel.nlevel <= %<sorting.nlevel>% and
        (floor(flag)/256)  = 0
)]{I} <> 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM063 ','1','U','sorting','S','S','S','N','N',{ts '2009-01-20 12:30:53.133'},'SA','Non è possibile modificare l''esercizio inizio/fine della classificazione %<sortingview.sortingkind>% avente codice %<sorting.sortcode>%   in quanto esisterebbero imputazioni di movimenti di entrata fuori dal periodo di validità della classificazione','N','[select count(*) from incomesorted where 
incomesorted.idsor = %<sorting.idsor>% and 
((isnull(%<sorting.start>%,1900) > ayear)  
or (isnull(%<sorting.stop>%,2079)< ayear))]{I} = 0
or(
%<sorting.start>% = &<sorting.start>&
and 
%<sorting.stop>% = &<sorting.stop>&
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM063 ','2','U','sorting','S','S','S','N','N',{ts '2008-02-08 15:56:07.100'},'SARA','Non è possibile modificare l''esercizio inizio/fine della classificazione %<sortingview.sortingkind>% avente codice %<sorting.sortcode>%  in quanto esisterebbero imputazioni di movimenti di spesa fuori dal periodo di validità della classificazione','N','[select count(*) from expensesorted 
where expensesorted.idsor = %<sorting.idsor>% and
((isnull(%<sorting.start>%,1900) > ayear)  
or (isnull(%<sorting.stop>%,2079)< ayear))]{I} = 0
or
(
%<sorting.start>% = &<sorting.start>&
and 
%<sorting.stop>% = &<sorting.stop>&
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','sortingapplicability','S','S','S','N','N',{ts '2008-07-29 12:38:32.953'},'NINO','Non si può togliere l''associazione della classificazione con la tabella %<sortingapplicabilityview.tablename>% se alcuni elementi sono stati classificati come :  %<sortingapplicabilityview.codesorkind>%','S','([(select count(*) 
from accmotivesorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''accmotive'')])
or
([(select count(*) 
from accountsorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''account'')])
or
([(select count(*) 
from banktransactionsorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''banktransaction'')])
or
([(select count(*) 
from casualcontractsorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''casualcontract'')])
or
([(select count(*) 
from clawbacksorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''clawback'')])
or
([(select count(*) 
from divisionsorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''division'')])
or
([(select count(*) 
from epexpsorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''epexp'')])
or
([(select count(*) 
from estimatesorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''estimate'')])
or 
([(select count(*) 
from finsorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''fin'')])
or
([(select count(*) 
from flowchartsorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''flowchart'')])
or
([(select count(*) 
from inventorytreesorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''inventorytree'')])
or
([(select count(*) 
from invoicesorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''invoice'')])
or 
([(select count(*) 
from itinerationsorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''itineration'')])
or
([(select count(*) 
from locationsorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''location'')])
or
([(select count(*) 
from managersorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''manager'')])
or
([(select count(*) 
from mandatesorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''mandate'')])
or
([(select count(*) 
from parasubcontractsorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''parasubcontract'')])
or
([(select count(*) 
from profservicesorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''profservice'')])
or
([(select count(*) 
from registrysorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''registry'')]
)
or
([(select count(*) 
from servicesorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''service'')])
or
([(select count(*) 
from taxsorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''tax'')])
or 
([(select count(*) 
from upbsorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''upb'')])
or 
([(select count(*) 
from wageadditionsorting I
join sorting S
	on I.idsor = S.idsor
where S.idsorkind = %<sortingapplicability.idsorkind>%)]{I} = 0
AND
[(%<sortingapplicability.tablename>%=''wageaddition'')])



')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','sortingkind','S','S','S','N','N',{ts '2007-11-26 11:23:36.593'},'SARA','Il tipo di classificazione movimenti %<description>% non può essere cancellato in quanto esistono classificazioni movimenti che lo referenziano.','S','[(SELECT count(*) 
from sorting 
where idsorkind = %<sortingkind.idsorkind>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','sortingkind','S','S','S','N','N',{ts '2007-11-26 11:23:42.217'},'SARA','Il tipo di classificazione movimenti %<description>% non può essere cancellato in quanto esistono livelli gerarchici di classificazioni movimenti che lo referenziano.','S','[(SELECT count(*) 
from sortinglevel 
where idsorkind = %<sortingkind.idsorkind>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','sortingkind','S','S','S','N','N',{ts '2007-11-26 11:48:01.063'},'SARA','Tipo della classificazione dei movimenti %<codesorkind>% già esistente','S','[(SELECT count(*) 
from sortingkind 
where codesorkind = %<sortingkind.codesorkind>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','sortingkind','S','S','S','N','N',{ts '2007-11-26 11:24:04.530'},'SARA','Descrizione del tipo della classificazione dei movimenti già esistente','S','[(SELECT count(*) 
from sortingkind 
where description = %<sortingkind.description>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN006','1','U','sortingkind','S','S','S','N','N',{ts '2008-01-11 11:06:55.907'},'SARA','Si è deciso di rimuovere l''obbligatorietà alla classificazione: %<sortingkind.description>% .
Non sarà più obbligatorio inserire la suddetta classificazione nelle sezioni di pertinenza.','N','( [&<sortingkind.flag>&]{I} & 1 = [%<sortingkind.flag>%]{I} & 1 )
OR
( [%<sortingkind.flag>%]{I} & 1 <> 0 )


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','sortingkind','S','S','S','N','N',{ts '2007-11-26 11:24:13.077'},'SARA','Descrizione del tipo della classificazione dei movimenti già esistente','S','[(SELECT count(*) 
from sortingkind 
where idsorkind <> %<sortingkind.idsorkind>% 
and description = %<sortingkind.description>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','sortinglevel','S','S','S','N','N',{ts '2007-11-26 14:09:59.517'},'SARA','Cancellazione Impossibile! Esistono classificazioni collegate al livello delle classificazioni %<sortingkind.codesorkind>% - %<description>%','S','[(SELECT count(*) 
from sorting 
where idsorkind = %<sortinglevel.idsorkind>% 
and nlevel = %<sortinglevel.nlevel>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','sortinglevel','S','S','S','N','N',{ts '2007-09-13 12:14:22.407'},'NINO','Cancellazione Impossibile! Esistono livelli della classificazione dei movimenti dipendenti dal livello %<description>%','S','[(SELECT count(*) 
from sortinglevel 
where idsorkind = %<sortinglevel.idsorkind>% 
and nlevel > %<sortinglevel.nlevel>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','sortinglevel','S','S','S','N','N',{ts '2007-11-26 14:10:15.610'},'SARA','Descrizione del livello della classificazione dei movimenti %<sortingkind.codesorkind>% già esistente','S','[(SELECT count(*) 
from sortinglevel 
where idsorkind = %<sortinglevel.idsorkind>% 
and description = %<sortinglevel.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','I','sortinglevel','S','S','S','N','N',{ts '2007-11-26 14:23:16.000'},'SARA','Il livello della classificazione movimenti padre di %<sortingkind.codesorkind>% - %<description>% è già operativo quindi %<description>% non può essere non operativo','N','((%<sortinglevel.flag>%&2)<>0)
or 
[(SELECT count(*) 
from sortinglevel 
where idsorkind = %<sortinglevel.idsorkind>% 
and nlevel < %<sortinglevel.nlevel>% 
and (flag&2 <> 0)
)]{I} = 0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','sortinglevel','S','S','S','N','N',{ts '2007-12-06 09:30:20.860'},'SARA','Descrizione del livello della classificazione dei movimenti %<sortingkind.codesorkind>% già esistente','S','[(SELECT count(*) 
from sortinglevel 
where idsorkind = %<sortinglevel.idsorkind>%
and nlevel <> %<sortinglevel.nlevel>% 
and description = %<sortinglevel.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','U','sortinglevel','S','S','S','N','N',{ts '2007-11-26 14:23:05.063'},'SARA','Il livello della classificazione movimenti padre di %<sortingkind.codesorkind>% - %<description>% è già operativo quindi %<description>% non può essere non operativo','N','((%<sortinglevel.flag>%&2) <> 0)
or 
[(SELECT count(*) 
from sortinglevel 
where idsorkind = %<sortinglevel.idsorkind>% 
and nlevel < %<sortinglevel.nlevel>% 
and (flag&2)<>0 )]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','U','sortinglevel','S','S','S','N','N',{ts '2007-11-26 14:10:55.610'},'SARA','Esistono classificazioni dei movimenti collegate al livello della classificazione %<sortingkind.codesorkind>% - %<description>% per l''esercizio %<esercizio>% quindi gli attributri dei livelli della classificazione movimenti  non possono essere modificati','S','[(SELECT count(*) 
from sorting 
where idsorkind = %<sortinglevel.idsorkind>% 
and nlevel = %<sortinglevel.nlevel>%)]{I} = 0 
or 
[(SELECT count(*) 
from sortinglevel 
where idsorkind = %<sortinglevel.idsorkind>% 
and nlevel = %<sortinglevel.nlevel>% 
and flag = %<sortinglevel.flag>% 
)]{I} = 1')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN001','1','U','sortingprev','S','S','S','N','N',{ts '2008-01-29 09:24:08.780'},'NINO','La previsione di spesa della classificazione movimenti %<sorting.sortcode>% è INSUFFICIENTE!','S','ISNULL(%<sortingprev.expenseprevision>%, 0)
+ 
ISNULL(
	[SELECT ISNULL(totexpensevariation, 0) - 
	ISNULL(totexpense, 0) - 
	ISNULL(totalcost, 0) 
	from sortedmovementtotal 
	where idsor = %<sortingprev.idsor>% 
	and ayear = %<sortingprev.ayear>%]{V}
,0)
>= 0
or 
([SELECT flag
from sortingkind 
join sorting
	on sortingkind.idsorkind= sorting.idsorkind
where idsor = %<sortingprev.idsor>%]{I} & 2) = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN002','1','U','sortingprev','S','S','S','N','N',{ts '2008-01-29 09:24:01.487'},'NINO','La previsione di entrata della classificazione movimenti  %<sorting.sortcode>% è INSUFFICIENTE!','S','ISNULL(%<sortingprev.incomeprevision>%, 0)
+ 
ISNULL(
	[SELECT ISNULL(totincomevariation, 0) - 
	ISNULL(totalincome, 0) - 
	ISNULL(totalmakings, 0) 
	from sortedmovementtotal 
	where idsor = %<sortingprev.idsor>% 
	and ayear = %<sortingprev.ayear>%]{V}
,0) 
>= 0
or 
([SELECT flag
from sortingkind 
join sorting
	on sortingkind.idsorkind= sorting.idsorkind
where idsor = %<sortingprev.idsor>%]{I} & 2) = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN001','1','D','sortingprevexpensevar','S','S','S','N','N',{ts '2008-01-29 09:20:32.610'},'NINO','La previsione di spesa della classificazione movimenti  %<sortingprevexpensevarview.codesorkind>%  - %<sortingprevexpensevarview.sortcode>%  è INSUFFICIENTE!
','S','ISNULL(
	[SELECT expenseprevision
	from sortingprev 
	where idsor = %<sortingprevexpensevar.idsor>% 
	and ayear = %<sortingprevexpensevar.ayear>%]{V}
,0) 
+ 
ISNULL(
	[SELECT ISNULL(totexpensevariation, 0) - 
	ISNULL(totexpense, 0) - 
	ISNULL(totalcost, 0) 
	from sortedmovementtotal 
	where idsor = %<sortingprevexpensevar.idsor>% 
	and ayear = %<sortingprevexpensevar.ayear>%]{V} 
,0)
- 
ISNULL(%<sortingprevexpensevar.amount>%, 0) >= 0 
or 
([SELECT flag
from sortingkind 
join sorting
	on sortingkind.idsorkind= sorting.idsorkind
where idsor = %<sortingprevexpensevar.idsor>%]{I} & 2) = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN001','1','I','sortingprevexpensevar','S','S','S','N','N',{ts '2008-01-29 09:20:58.890'},'NINO','La previsione di spesa della classificazione movimenti  %<sorting.sortcode>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT expenseprevision
	from sortingprev 
	where idsor = %<sortingprevexpensevar.idsor>% 
	and ayear = %<sortingprevexpensevar.ayear>%]{V}
,0) 
+ 
ISNULL(
	[SELECT ISNULL(totexpensevariation, 0) - 
	ISNULL(totexpense, 0) - 
	ISNULL(totalcost, 0) 
	from sortedmovementtotal 
	where idsor = %<sortingprevexpensevar.idsor>% 
	and ayear = %<sortingprevexpensevar.ayear>%]{V} 
,0)
+ 
ISNULL(%<sortingprevexpensevar.amount>%, 0) >= 0 
or 
([SELECT flag
from sortingkind 
join sorting
	on sortingkind.idsorkind= sorting.idsorkind
where idsor = %<sortingprevexpensevar.idsor>%]{I} & 2) = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN001','1','U','sortingprevexpensevar','S','S','S','N','N',{ts '2008-01-29 09:21:12.047'},'NINO','La previsione di spesa della classificazione movimenti %<sortingprevexpensevarview.codesorkind>%  - %<sortingprevexpensevarview.sortcode>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT expenseprevision
	from sortingprev 
	where idsor = %<sortingprevexpensevar.idsor>% 
	and ayear = %<sortingprevexpensevar.ayear>%]{V}
,0) 
+ 
ISNULL(
	[SELECT ISNULL(totexpensevariation, 0) - 
	ISNULL(totexpense, 0) - 
	ISNULL(totalcost, 0) 
	from sortedmovementtotal 
	where idsor = %<sortingprevexpensevar.idsor>% 
	and ayear = %<sortingprevexpensevar.ayear>%]{V} 
,0)
+ 
ISNULL(%<sortingprevexpensevar.amount>%, 0)
- 
ISNULL(&<sortingprevexpensevar.amount>&, 0) >= 0 
or 
([SELECT flag
from sortingkind 
join sorting
	on sortingkind.idsorkind= sorting.idsorkind
where idsor = %<sortingprevexpensevar.idsor>%]{I} & 2) = 0

or
%<sortingprevexpensevar.idsor>% <> &<sortingprevexpensevar.idsor>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN001','2','U','sortingprevexpensevar','S','S','S','N','N',{ts '2008-01-29 09:21:29.610'},'NINO','La previsione di spesa della classificazione movimenti %<sortingprevexpensevarview.codesorkind>%  - %<sortingprevexpensevarview.sortcode>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT expenseprevision
	from sortingprev 
	where idsor = %<sortingprevexpensevar.idsor>% 
	and ayear = %<sortingprevexpensevar.ayear>%]{V}
,0) 
+ 
ISNULL(
	[SELECT ISNULL(totexpensevariation, 0) - 
	ISNULL(totexpense, 0) - 
	ISNULL(totalcost, 0) 
	from sortedmovementtotal 
	where idsor = %<sortingprevexpensevar.idsor>% 
	and ayear = %<sortingprevexpensevar.ayear>%]{V} 
,0)
+ 
ISNULL(%<sortingprevexpensevar.amount>%, 0) >= 0 
or 
([SELECT flag
from sortingkind 
join sorting
	on sortingkind.idsorkind= sorting.idsorkind
where idsor = %<sortingprevexpensevar.idsor>%]{I} & 2) = 0

OR
(%<sortingprevexpensevar.idsor>% = &<sortingprevexpensevar.idsor>&)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN002','1','D','sortingprevincomevar','S','S','S','N','N',{ts '2008-01-29 09:24:39.453'},'NINO','La previsione di entrata della classificazione movimenti %<sortingprevincomevarview.codesorkind>%  - %<sortingprevincomevarview.sortcode>%  è INSUFFICIENTE!','S','ISNULL(
	[SELECT incomeprevision
	from sortingprev 
	where idsor = %<sortingprevincomevar.idsor>% 
	and ayear = %<sortingprevincomevar.ayear>%]{V} 
,0)
+ 
ISNULL(
	[SELECT ISNULL(totincomevariation, 0) - 
	ISNULL(totalincome, 0) - 
	ISNULL(totalmakings, 0) 
	from sortedmovementtotal 
	where idsor = %<sortingprevincomevar.idsor>% 
	and ayear = %<sortingprevincomevar.ayear>%]{V} 
,0)
- 
ISNULL(%<sortingprevincomevar.amount>%, 0) >= 0 
or 
([SELECT flag
from sortingkind 
join sorting
	on sortingkind.idsorkind= sorting.idsorkind
where idsor = %<sortingprevincomevar.idsor>%]{I} & 2) = 0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN002','1','I','sortingprevincomevar','S','S','S','N','N',{ts '2008-01-29 09:24:48.343'},'NINO','La previsione di entrata della classificazione movimenti %<sorting.sortcode>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT incomeprevision
	from sortingprev 
	where idsor = %<sortingprevincomevar.idsor>% 
	and ayear = %<sortingprevincomevar.ayear>%]{V} 
,0)
+ 
ISNULL(
	[SELECT ISNULL(totincomevariation, 0) - 
	ISNULL(totalincome, 0) - 
	ISNULL(totalmakings, 0) 
	from sortedmovementtotal 
	where idsor = %<sortingprevincomevar.idsor>% 
	and ayear = %<sortingprevincomevar.ayear>%]{V} 
,0)
+ 
ISNULL(%<sortingprevincomevar.amount>%, 0) >= 0 
or 
([SELECT flag
from sortingkind 
join sorting
	on sortingkind.idsorkind= sorting.idsorkind
where idsor = %<sortingprevincomevar.idsor>%]{I} & 2) = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN002','1','U','sortingprevincomevar','S','S','S','N','N',{ts '2008-01-29 09:24:55.157'},'NINO','La previsione di entrata della classificazione movimenti %<sortingprevincomevarview.codesorkind>%  - %<sortingprevincomevarview.sortcode>%  è INSUFFICIENTE!','S','ISNULL(
	[SELECT incomeprevision
	from sortingprev 
	where idsor = %<sortingprevincomevar.idsor>% 
	and ayear = %<sortingprevincomevar.ayear>%]{V} 
,0)
+ 
ISNULL(
	[SELECT ISNULL(totincomevariation, 0) - 
	ISNULL(totalincome, 0) - 
	ISNULL(totalmakings, 0) 
	from sortedmovementtotal 
	where idsor = %<sortingprevincomevar.idsor>% 
	and ayear = %<sortingprevincomevar.ayear>%]{V} 
,0) 
+ 
ISNULL(%<sortingprevincomevar.amount>%, 0)
- 
ISNULL(&<sortingprevincomevar.amount>&, 0) >= 0 
or 
([SELECT flag
from sortingkind 
join sorting
	on sortingkind.idsorkind= sorting.idsorkind
where idsor = %<sortingprevincomevar.idsor>%]{I} & 2) = 0

or
%<sortingprevincomevar.idsor>% <> &<sortingprevincomevar.idsor>&')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CONAN002','2','U','sortingprevincomevar','S','S','S','N','N',{ts '2008-01-29 09:25:01.970'},'NINO','La previsione di entrata della classificazione movimenti %<sortingprevincomevarview.codesorkind>%  - %<sortingprevincomevarview.sortcode>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT incomeprevision
	from sortingprev 
	where idsor = %<sortingprevincomevar.idsor>% 
	and ayear = %<sortingprevincomevar.ayear>%]{V} 
,0)
+ 
ISNULL(
	[SELECT ISNULL(totincomevariation, 0) - 
	ISNULL(totalincome, 0) - 
	ISNULL(totalmakings, 0) 
	from sortedmovementtotal 
	where idsor = %<sortingprevincomevar.idsor>% 
	and ayear = %<sortingprevincomevar.ayear>%]{V} 
,0) 
+ 
ISNULL(%<sortingprevincomevar.amount>%, 0) >= 0 
or 
([SELECT flag
from sortingkind 
join sorting
	on sortingkind.idsorkind= sorting.idsorkind
where idsor = %<sortingprevincomevar.idsor>%]{I} & 2) = 0
or
(%<sortingprevincomevar.idsor>% = &<sortingprevincomevar.idsor>&)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','stamphandling','S','S','S','N','N',{ts '2008-02-22 15:02:27.127'},'SARA','Il trattamento bollo %<description>% non può essere cancellato in quanto esistono mandati di pagamento che lo referenziano.','S','[execute count_table_field ''payment'',''idstamphandling'',
%<stamphandling.idstamphandling>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','stamphandling','S','S','S','N','N',{ts '2011-05-20 14:05:23.593'},'sa','Il trattamento bollo %<description>% non può essere cancellato in quanto esistono reversali di incasso che lo referenziano.','S','[execute count_table_field ''proceeds'',''idstamphandling'',
%<stamphandling.idstamphandling>%,@outvar output]{I}=0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','stamphandling','S','S','S','N','N',{ts '2005-10-17 17:05:19.530'},'''SA''','Descrizione del trattamento del bollo già esistente','S','[SELECT count(*) 
from stamphandling 
where description = %<stamphandling.description>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','3','I','stamphandling','S','S','S','N','N',{ts '2005-10-17 17:05:47.593'},'''SA''','Esiste già un trattamento del bollo predefinito','S','[SELECT count(*)
from stamphandling
where flagdefault = ''S'']{I}
= 0
or 
%<stamphandling.flagdefault>% = ''N''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','stamphandling','S','S','S','N','N',{ts '2005-10-17 17:04:22.203'},'''SA''','Trattamento del bollo %<idstamphandling>% già esistente','S','[SELECT count(*) 
from stamphandling 
where idstamphandling <> %<stamphandling.idstamphandling>% 
and description = %<stamphandling.description>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','U','stamphandling','S','S','S','N','N',{ts '2007-11-21 13:48:26.843'},'SARA','Esiste già un trattamento del bollo predefinito','S','[SELECT count(*)
from stamphandling
where flagdefault = ''S''
and idstamphandling <> %<stamphandling.idstamphandling>%]{I}
= 0
or
%<stamphandling.flagdefault>% = ''N''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','stock','S','S','S','N','N',{ts '2010-07-27 12:37:20.743'},'SA','Non si può cancellare la riga del magazzino %<stock.idstock>%, perchè esiste lo scarico magazzino associato ad essa.','N','[(SELECT COUNT(*) FROM storeunloaddetail
	WHERE idstock = %<stock.idstock>%)]{I} = 0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','stock','S','S','S','N','N',{ts '2010-07-27 12:37:09.727'},'SA','Non si può cancellare la riga di magazzino perchè vi è associata la fattura  N.%<stock.ninv>% / %<stock.yinv>% / %<stock.inv_idgroup>%.','N','%<stock.idinvkind>% IS NULL

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','stock','S','S','S','N','N',{ts '2011-09-30 09:17:08.157'},'sara','Non si può cancellare la riga del magazzino %<stock.idstock>%, perchè esiste una prenotazione di magazzino associata ad essa.','N','[(SELECT COUNT(*) FROM bookingdetail
	WHERE idstock = %<stock.idstock>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ005','1','I','stock','S','S','S','N','N',{ts '2010-07-07 11:27:29.437'},'SA','La q.ta dei dettagli della bolla d''accompagnamento non può superare la q.ta del dettaglio dell''ordine','N','ISNULL([(select ordered from  mandatedetail_tostock 
WHERE idmankind = %<stock.idmankind>%
AND yman = %<stock.yman>%
AND nman = %<stock.nman>%
AND idgroup = %<stock.man_idgroup>%)]{I},0) 

>=

ISNULL([(select stocked from  mandatedetail_tostock 
WHERE idmankind = %<stock.idmankind>%
AND yman = %<stock.yman>%
AND nman = %<stock.nman>%
AND idgroup = %<stock.man_idgroup>%)]{I},0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ012','1','I','stock','S','S','S','N','N',{ts '2010-07-28 15:25:42.997'},'SARA','Articolo con data scadenza obbligatoria.','S','ISNULL( 
[(SELECT list.has_expiry
FROM list
WHERE list.idlist = %<stock.idlist>%
)]{C}
,''N'') = ''N''
OR
%<stock.expiry>% IS NOT NULL')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ005','1','U','stock','S','S','S','N','N',{ts '2010-07-13 12:18:08.250'},'SA','La q.ta dei dettagli della bolla d''accompagnamento non può superare la q.ta del dettaglio dell''ordine %<stock.nman>% /%<stock.yman>% / %<stock.man_idgroup>%','N','ISNULL([(select ordered from  mandatedetail_tostock 
WHERE idmankind = %<stock.idmankind>%
AND yman = %<stock.yman>%
AND nman = %<stock.nman>%
AND idgroup = %<stock.man_idgroup>%)]{I},0) 

>=

ISNULL([(select stocked from  mandatedetail_tostock 
WHERE idmankind = %<stock.idmankind>%
AND yman = %<stock.yman>%
AND nman = %<stock.nman>%
AND idgroup = %<stock.man_idgroup>%)]{I},0)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ012','1','U','stock','S','S','S','N','N',{ts '2010-07-28 15:25:46.047'},'SARA','Articolo con data scadenza obbligatoria.','S','ISNULL( 
[(SELECT list.has_expiry
FROM list
WHERE list.idlist = %<stock.idlist>%
)]{C}
,''N'') = ''N''
OR
ISNULL(%<stock.expiry>%,{d ''1900-01-01''}) =
 ISNULL(&<stock.expiry>&,{d ''1900-01-01''})
OR
%<stock.expiry>% IS NOT NULL
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ016','1','U','stock','S','S','S','N','N',{ts '2012-02-24 10:25:05.953'},'Nino07032012','La q.tà in giacenza non puà essere negativa.','N','ISNULL(%<stock.number>%,0) >= ISNULL(&<stock.number>&,0)    OR [ %<stock.number>% -     ISNULL([SELECT SUM(storeunloaddetail.number)                        FROM storeunloaddetail    WHERE storeunloaddetail.idstock = %<stock.idstock>%]{N},0)  ]{N}>=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','stocklocation','S','S','S','N','N',{ts '2011-03-02 10:08:02.483'},'sa','L''ubicazione %<stocklocationcode>% non può essere cancellata in quanto esistono merci di magazzino che la referenziano.','S','[(SELECT count(*) 
from stock 
where idstocklocation = %<stocklocation.idstocklocation>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','5','D','stocklocation','S','N','N','N','N',{ts '2011-03-02 10:49:33.593'},'sa','L''ubicazione %<stocklocationcode>% non può essere cancellata in quanto esistono ubicazioni del livello inferiore che la referenziano.','S','[(SELECT count(*) 
from stocklocation 
where paridstocklocation = %<stocklocation.idstocklocation>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','stocklocation','S','S','S','N','N',{ts '2011-03-02 10:03:02.610'},'sa','Ubicazione %<stocklocationcode>% già esistente','S','[(SELECT count(*) 
from stocklocation 
where stocklocationcode = %<stocklocation.stocklocationcode>%)]{N} = 0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','I','stocklocation','S','S','S','N','N',{ts '2011-03-02 10:09:43.517'},'sa','L''ubicazione %<stocklocationcode>% non può essere creata in quanto esistono merci di magazzino che referenziano l''ubicazione da cui questo dipende.','S','[(SELECT count(*)
from stock
where idstocklocation = %<stocklocation.paridstocklocation>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','stocklocationlevel','S','S','S','N','N',{ts '2011-03-02 10:12:23.563'},'sa','Cancellazione Impossibile! Esistono ubicazioni collegate al livello %<description>%','S','[(SELECT count(*) 
from stocklocation 
where nlevel = %<stocklocationlevel.nlevel>%)]{I} = 0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','stocklocationlevel','S','S','S','N','N',{ts '2011-03-02 10:29:52.077'},'sa','Cancellazione Impossibile! Esistono livelli delle ubicazioni dipendenti dal livello %<description>%','S','[(SELECT count(*) 
from stocklocationlevel 
where nlevel > %<stocklocationlevel.nlevel>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','stocklocationlevel','S','S','S','N','N',{ts '2011-03-02 10:10:54.843'},'sa','Descrizione del livello dell''ubicazione già esistente','S','[(SELECT count(*) 
from stocklocationlevel 
where description = %<stocklocationlevel.description>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','I','stocklocationlevel','S','S','S','N','N',{ts '2011-03-02 10:30:44.327'},'sa','Il livello di ubicazione padre di %<description>% è già operativo quindi %<description>% non può essere non operativo','N','((%<stocklocationlevel.flag>% & 2) <> 0)
or 
[SELECT count(*) 
from stocklocationlevel
where nlevel < %<stocklocationlevel.nlevel>% 
and ((flag&2)<> 0)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','stocklocationlevel','S','S','S','N','N',{ts '2011-03-02 10:11:39.343'},'sa','Descrizione del livello dell''ubicazione già esistente','S','[(SELECT count(*) 
from stocklocationlevel 
where nlevel <> %<stocklocationlevel.nlevel>% 
and description = %<stocklocationlevel.description>%)]{I} = 0 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','U','stocklocationlevel','S','S','S','N','N',{ts '2011-03-02 10:31:24.670'},'sa','Il livello di ubicazione padre di %<description>% è già operativo quindi %<description>% non può essere non operativo','S','((%<stocklocationlevel.flag>% & 2) <> 0)
or 
[SELECT count(*) 
from stocklocationlevel 
where nlevel < %<stocklocationlevel.nlevel>% 
and ((flag & 2)<>0)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','U','stocklocationlevel','S','S','S','N','N',{ts '2011-03-02 10:32:38.563'},'sa','Esistono ubicazioni collegati al livello di uibicazione %<description>% quindi gli attributri dei livelli dell''ubicazione non possono essere modificati','S','[(SELECT count(*) 
from stocklocation 
where nlevel = %<stocklocationlevel.nlevel>%)]{I} = 0 
or 
[SELECT count(*) 
from stocklocationlevel 
where nlevel = %<stocklocationlevel.nlevel>% 
and flag = %<stocklocationlevel.flag>% 
and codelen = %<stocklocationlevel.codelen>% 
]{I} = 1
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ009','1','I','storeunloaddetail','S','S','S','N','N',{ts '2011-10-05 15:32:53.767'},'sa','La quantità scaricata di %<stockview.list>%   non può essere superiore alla quantità in giacenza.','N','(
ISNULL([SELECT number 
FROM stock
WHERE idstock =  %<storeunloaddetail.idstock>%]{N},0)
- 
-- sottraggo tutti gli scarichi senza prenotazione
ISNULL([SELECT SUM(ISNULL(storeunloaddetail.number,0))
                    FROM storeunloaddetail 
	        WHERE storeunloaddetail.idstock = %<storeunloaddetail.idstock>%
	        AND storeunloaddetail.idbooking IS NULL]{N},0)
-
-- sottraggo tutte le prenotazioni effettuate, a prescindere dal fatto
-- che siano state scaricate
ISNULL([SELECT SUM(ISNULL(bookingdetail.number,0))
                    FROM bookingdetail
	        WHERE bookingdetail.idstock = %<storeunloaddetail.idstock>%]{N},0)
)>=0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ009','2','I','storeunloaddetail','S','S','S','N','N',{ts '2011-10-18 13:11:54.467'},'sa','La quantità scaricata di %<stockview.list>%  non può essere superiore alla q.tà prenotata.','N','%<storeunloaddetail.idbooking>% IS NULL
OR
ISNULL([SELECT number
FROM booktotal
WHERE idlist = [SELECT idlist 
		FROM stock 
		WHERE idstock = %<storeunloaddetail.idstock>%]{I}
AND idstore = [SELECT idstore
		FROM stock 
		WHERE idstock = %<storeunloaddetail.idstock>%]{I}
AND idbooking = %<storeunloaddetail.idbooking>% 
]{N},0) >= 0
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ009','3','I','storeunloaddetail','S','S','S','N','N',{ts '2011-10-06 16:53:10.717'},'sa','La quantità scaricata di %<stockview.list>%  non può essere superiore alla quantità prenotata.','N','%<storeunloaddetail.idbooking>% IS NULL
OR
(
--quantità allocata
ISNULL([SELECT allocated  
FROM booktotal
WHERE idlist = [SELECT idlist 
		FROM stock
		WHERE idstock = %<storeunloaddetail.idstock>%]{I}
AND idstore = [SELECT idstore
		FROM stock
		WHERE idstock = %<storeunloaddetail.idstock>%]{I}
AND idbooking = %<storeunloaddetail.idbooking>%
]{N},0)
)
>=0

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ016','1','I','storeunloaddetail','S','S','S','N','N',{ts '2012-02-24 10:28:37.577'},'sa','La quantità in giacenza non può essere negativa','N','(ISNULL([SELECT stock.number
                       FROM stock 
	 WHERE idstock = %<storeunloaddetail.idstock>%]{N} ,0)
- 	  
 ISNULL([SELECT SUM(storeunloaddetail.number)
                       FROM storeunloaddetail 
	 WHERE storeunloaddetail.idstock = %<storeunloaddetail.idstock>%]{N} 
,0) ) >=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ009','1','U','storeunloaddetail','S','S','S','N','N',{ts '2011-10-05 14:14:26.377'},'sa','La quantità scaricata di %<stocvkiew.list>%  non può essere superiore alla quantità in giacenza.','N',' %<storeunloaddetail.number>% =  &<storeunloaddetail.number>&
OR
(
ISNULL([SELECT number 
FROM stock
WHERE idstock =  %<storeunloaddetail.idstock>%]{N},0)
- 
-- sottraggo tutti gli scarichi senza prenotazione
ISNULL([SELECT SUM(ISNULL(storeunloaddetail.number,0))
                    FROM storeunloaddetail 
	        WHERE storeunloaddetail.idstock = %<storeunloaddetail.idstock>%
	        AND storeunloaddetail.idbooking IS NULL]{N},0)
-
-- sottraggo tutte le prenotazioni effettuate, a prescindere dal fatto
-- che siano state scaricate
ISNULL([SELECT SUM(ISNULL(bookingdetail.number,0))
                    FROM bookingdetail
	        WHERE bookingdetail.idstock = %<storeunloaddetail.idstock>%]{N},0)
)>=0


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ009','2','U','storeunloaddetail','S','S','S','N','N',{ts '2011-10-05 14:14:36.250'},'sa','La quantità scaricata di %<stockview.list>%  non può essere superiore alla q.tà prenotata.','N','%<storeunloaddetail.idbooking>% IS NULL
OR
 %<storeunloaddetail.number>% =  &<storeunloaddetail.number>&
OR
ISNULL([SELECT number
FROM booktotal
WHERE idlist = [SELECT idlist 
		FROM stock 
		WHERE idstock = %<storeunloaddetail.idstock>%]{I}
AND idstore = [SELECT idstore
		FROM stock 
		WHERE idstock = %<storeunloaddetail.idstock>%]{I}
AND idbooking = %<storeunloaddetail.idbooking>% 
]{N},0) >= 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ009','3','U','storeunloaddetail','S','S','S','N','N',{ts '2011-10-06 16:53:27.877'},'sa','La quantità scaricata di %<stockview.list>%   non può essere superiore alla q.tà prenotata.','N',' %<storeunloaddetail.number>% =  &<storeunloaddetail.number>&
OR
(
--quantità allocata
ISNULL([SELECT allocated  
FROM booktotal
WHERE idlist = [SELECT idlist 
		FROM stock
		WHERE idstock = %<storeunloaddetail.idstock>%]{I}
AND idstore = [SELECT idstore
		FROM stock
		WHERE idstock = %<storeunloaddetail.idstock>%]{I}
AND idbooking = %<storeunloaddetail.idbooking>%
]{N},0)
)
>=0





')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MAGAZ016','1','U','storeunloaddetail','S','S','S','N','N',{ts '2012-02-24 10:29:29.467'},'sa','La quantità in giacenza non può essere negativa','N','ISNULL(%<storeunloaddetail.number>%,0) >= ISNULL(&<storeunloaddetail.number>&,0)  
OR
(ISNULL([SELECT stock.number
                       FROM stock 
	 WHERE idstock = %<storeunloaddetail.idstock>%]{N} ,0)
- 	  
 ISNULL([SELECT SUM(storeunloaddetail.number)
                       FROM storeunloaddetail 
	 WHERE storeunloaddetail.idstock = %<storeunloaddetail.idstock>%]{N} 
,0) ) >=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','surplus','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','La situazione finanziaria ed amministrativa è già stata immessa per l''esercizio %<esercizio>%.','S','[(SELECT count(*) 
from surplus 
where ayear = %<surplus.ayear>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','tax','S','S','S','N','N',{ts '2008-02-22 15:06:16.660'},'SARA','La  ritenuta %<description>% non può essere cancellata in quanto esistono liquidazioni di ritenute che la referenziano.','S','[execute count_table_field ''taxpay'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','tax','S','S','S','N','N',{ts '2008-02-22 15:06:47.067'},'SARA','Il tipo di ritenuta %<description>% non può essere cancellato in quanto esistono movimenti di spesa che lo referenziano.','S','[execute count_table_field ''expensetax'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','tax','S','S','S','N','N',{ts '2008-02-22 15:07:14.550'},'SARA','La ritenuta %<taxcode>% %<description>% non può essere cancellata in quanto esistono ritenute su missioni che la referenziano.','S','[execute count_table_field ''itinerationtax'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','tax','S','S','S','N','N',{ts '2008-02-22 15:07:57.520'},'SARA','Il tipo di ritenuta %<description>% non può essere cancellato in quanto esistono configurazioni di automatismi di ritenute che lo referenziano.','S','[execute count_table_field ''taxsetup'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','5','D','tax','S','S','S','N','N',{ts '2007-09-13 12:16:42.157'},'NINO','Il tipo di ritenuta %<description>% non può essere cancellato in quanto esistono tipi di prestazione che lo referenziano.','S','[(SELECT count(*) 
from servicetax 
where taxcode = %<tax.taxcode>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','6','D','tax','S','S','S','N','N',{ts '2007-09-13 12:16:48.267'},'NINO','Il tipo di  ritenuta %<description>% non può essere cancellato in quanto  sono stati già definiti scaglioni che lo referenziano.','S','[(SELECT count(*) 
from taxratebracket 
where taxcode = %<tax.taxcode>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','7','D','tax','S','S','S','N','N',{ts '2007-09-13 12:16:55.467'},'NINO','Il tipo di ritenuta %<description>% non può essere cancellato in quanto  sono stati già definite aliquote che lo referenziano.','S','[(SELECT count(*) 
from taxratestart 
where taxcode = %<tax.taxcode>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','8','D','tax','S','S','S','N','N',{ts '2007-09-13 12:17:01.657'},'NINO','La  ritenuta %<description>% non può essere cancellata in quanto esistono  ritenute che la referenziano.','S','[(SELECT count(*) 
from tax 
where maintaxcode = %<tax.taxcode>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','9','D','tax','S','S','S','N','N',{ts '2008-07-22 15:59:42.887'},'SARA','Il tipo di ritenuta %<description>% non può essere cancellato in quanto esistono correzioni ritenute  che lo referenziano.','S','[execute count_table_field ''expensetaxcorrige'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','10','D','tax','S','S','S','N','N',{ts '2008-07-22 16:00:21.090'},'SARA','Il tipo di ritenuta %<description>% non può essere cancellato in quanto esistono riepiloghi storici di ritenute  che lo referenziano.','S','[execute count_table_field ''expensetaxofficial'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','11','D','tax','S','S','S','N','N',{ts '2008-07-22 16:05:22.247'},'SARA','La ritenuta %<taxcode>% %<description>% non può essere cancellata in quanto esistono ritenute su contratti occasionali che la referenziano.','S','[execute count_table_field ''casualcontracttax'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','12','D','tax','S','S','S','N','N',{ts '2008-07-22 16:06:00.170'},'SARA','La ritenuta %<taxcode>% %<description>% non può essere cancellata in quanto esistono ritenute su prestazioni professionali che la referenziano.','S','[execute count_table_field ''profservicetax'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','13','D','tax','S','S','S','N','N',{ts '2008-07-22 16:08:57.513'},'SARA','La ritenuta %<taxcode>% %<description>% non può essere cancellata in quanto esistono ritenute su compensi a dipendenti che la referenziano.','S','[execute count_table_field ''wageadditiontax'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','14','D','tax','S','S','S','N','N',{ts '2008-07-22 16:36:25.137'},'SARA','La ritenuta %<taxcode>% %<description>% non può essere cancellata in quanto esistono ritenute  c/amministrazione dei pagamenti stipendi che la referenziano.','S','[execute count_table_field ''admpay_admintax'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','15','D','tax','S','S','S','N','N',{ts '2008-07-22 16:36:48.483'},'SARA','La ritenuta %<taxcode>% %<description>% non può essere cancellata in quanto esistono ritenute c/dipendente dei pagamenti stipendi che la referenziano.','S','[execute count_table_field ''admpay_employtax'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','16','D','tax','S','S','S','N','N',{ts '2008-07-24 12:00:31.920'},'SARA','La ritenuta %<taxcode>% %<description>% non può essere cancellata in quanto esistono scaglioni applicati per le ritenute associate a contratti occasionali che la referenziano.','S','[execute count_table_field ''casualcontracttaxbracket'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','17','D','tax','S','S','S','N','N',{ts '2008-07-24 12:05:59.577'},'SARA','La ritenuta %<taxcode>% %<description>% non può essere cancellata in quanto esistono detrazioni associate a cedolini di contratti parasubordinati che la referenziano.','S','[execute count_table_field ''payrollabatement'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','18','D','tax','S','S','S','N','N',{ts '2008-07-24 12:07:03.547'},'SARA','La ritenuta %<taxcode>% %<description>% non può essere cancellata in quanto esistono ritenute associate a cedolini di contratti parasubordinati che la referenziano.','S','[execute count_table_field ''payrolltax'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','19','D','tax','S','S','S','N','N',{ts '2008-07-24 12:07:51.127'},'SARA','La ritenuta %<taxcode>% %<description>% non può essere cancellata in quanto esistono correzioni ritenute associate a cedolini di contratti parasubordinati che la referenziano.','S','[execute count_table_field ''payrolltaxcorrige'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','20','D','tax','S','S','S','N','N',{ts '2008-07-24 12:11:54.717'},'SARA','La ritenuta %<taxcode>% %<description>% non può essere cancellata in quanto esistono movimenti finanziari associati alla liquidazione ritenute che la referenziano.','S','[execute count_table_field ''taxpayexpense'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','21','D','tax','S','S','S','N','N',{ts '2008-07-24 12:25:01.187'},'SARA','La ritenuta %<taxcode>% %<description>% non può essere cancellata in quanto esistono configurazioni di automatismi che la referenziano (ripartizioni percentuali) .','S','[execute count_table_field ''taxpaymentpartsetup'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','22','D','tax','S','S','S','N','N',{ts '2008-07-24 12:25:50.063'},'SARA','La ritenuta %<taxcode>% %<description>% non può essere cancellata in quanto esistono configurazioni di automatismi che la referenziano (ripartizioni per regione o provincia autonoma) .','S','[execute count_table_field ''taxregionsetup'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','23','D','tax','S','S','S','N','N',{ts '2008-07-24 12:28:08.827'},'SARA','La ritenuta %<taxcode>% %<description>% non può essere cancellata in quanto esistono classificazioni che la referenziano.','S','[execute count_table_field ''taxsorting'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','24','D','tax','S','S','S','N','N',{ts '2008-07-24 12:28:42.780'},'SARA','La ritenuta %<taxcode>% %<description>% non può essere cancellata in quanto esistono configurazioni di classificazioni che la referenziano.','S','[execute count_table_field ''taxsortingsetup'',''taxcode'',
%<tax.taxcode>%,@outvar output]{I}=0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN013','1','I','tax','S','S','S','N','N',{ts '2007-07-24 15:09:05.707'},'SARA','La Causale per la Liquidazione deve essere identica su tutte le ritenute raggruppate','N','(
%<tax.maintaxcode>% is null
)
OR
(
[SELECT COUNT(DISTINCT taxcode) from tax where 
ISNULL(maintaxcode,taxcode) = ISNULL(%<tax.maintaxcode>%,%<tax.taxcode>%)
]{I} =1
)
OR
(
[select COUNT(DISTINCT ISNULL(idaccmotive_pay,''X'')) from tax 
 where  ISNULL(maintaxcode,taxcode) = ISNULL(%<tax.maintaxcode>%,%<tax.taxcode>%)
]{I} <2
)

--tax.fiscaltaxcode
--tax.idaccmotive_pay')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','tax','S','S','S','N','N',{ts '2008-10-10 15:21:08.153'},'SARA','Tipo di ritenuta %<taxcode>% - %<tax.taxref>%già esistente','S','[(SELECT count(*) 
from tax 
where taxcode = %<tax.taxcode>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','tax','S','S','S','N','N',{ts '2008-10-10 15:20:24.997'},'SARA','Descrizione %<tax.description>% del tipo di ritenuta %<tax.taxref>% già esistente','S','[(SELECT count(*) 
from tax 
where description = %<tax.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN013','1','U','tax','S','S','S','N','N',{ts '2007-07-24 15:15:47.440'},'SARA','La Causale per la Liquidazione deve essere identica su tutte le ritenute raggruppate','N','(
ISNULL(%<tax.idaccmotive_pay>%,'''') = ISNULL(&<tax.idaccmotive_pay>&,'''')
)
OR
(
[select COUNT(DISTINCT T.taxcode) from tax T where 
ISNULL(T.maintaxcode,T.taxcode) = ISNULL(%<tax.maintaxcode>%,%<tax.taxcode>%)
]{I} =1
)
OR
(
[select COUNT(DISTINCT ISNULL(idaccmotive_pay,''X'')) from tax 
 where  ISNULL(maintaxcode,taxcode) = ISNULL(%<tax.maintaxcode>%,%<tax.taxcode>%)
]{I} <2
)


--tax.fiscaltaxcode
--tax.idaccmotive_pay')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN013','2','U','tax','S','S','S','N','N',{ts '2007-12-13 14:39:43.777'},'SARA','Per poter raggruppare delle ritenute la configurazione delle ritenute raggruppate deve essere identica','N','(
    (ISNULL(%<tax.maintaxcode>%,0) = ISNULL(&<tax.maintaxcode>&,0) )
     OR
    (%<tax.maintaxcode>% IS NULL)
)
 

OR
(
[select COUNT(DISTINCT ISNULL(idaccmotive_pay,''X'')) from tax 
 where  ISNULL(maintaxcode,taxcode) = ISNULL(%<tax.maintaxcode>%,%<tax.taxcode>%)
]{I} <2
AND
[select COUNT(DISTINCT ISNULL(expiringday,-1000)) from taxsetup 
JOIN tax T ON T.taxcode = %<tax.taxcode>% and  ayear = %<sys_esercizio>%
where taxsetup.taxcode in (select taxcode from tax where ISNULL(tax.maintaxcode,tax.taxcode)  = ISNULL(T.maintaxcode,T.taxcode))
 ]{I} <2
AND
[select COUNT(DISTINCT ISNULL(idexpirationkind,0)) from taxsetup 
JOIN tax T ON T.taxcode = %<tax.taxcode>% and  ayear = %<sys_esercizio>%
where taxsetup.taxcode in (select taxcode from tax where ISNULL(tax.maintaxcode,tax.taxcode)   = ISNULL(T.maintaxcode,T.taxcode))
 ]{I} <2
AND
[select COUNT(DISTINCT ISNULL(paymentagency,-1000)) from taxsetup 
JOIN tax T ON T.taxcode = %<tax.taxcode>% and  ayear = %<sys_esercizio>%
where taxsetup.taxcode in (select taxcode from tax where ISNULL(tax.maintaxcode,tax.taxcode)  = ISNULL(T.maintaxcode,T.taxcode))
 ]{I} <2
AND
[select COUNT(DISTINCT ISNULL(idfinadmintax,0)) from taxsetup 
JOIN tax T ON T.taxcode = %<tax.taxcode>% and  ayear = %<sys_esercizio>%
where taxsetup.taxcode in (select taxcode from tax where ISNULL(tax.maintaxcode,tax.taxcode)   = ISNULL(T.maintaxcode,T.taxcode))
 ]{I} <2
AND
[select COUNT(DISTINCT ISNULL(idfinexpensecontra,0)) from taxsetup 
JOIN tax T ON T.taxcode = %<tax.taxcode>% and  ayear = %<sys_esercizio>%
where taxsetup.taxcode in (select taxcode from tax where ISNULL(tax.maintaxcode,tax.taxcode)  = ISNULL(T.maintaxcode,T.taxcode))
 ]{I} <2
AND
[select COUNT(DISTINCT flag) from taxsetup 
JOIN tax T ON T.taxcode = %<taxsetup.taxcode>% and  ayear = %<sys_esercizio>%
where taxsetup.taxcode in (select taxcode from tax where ISNULL(tax.maintaxcode,tax.taxcode)   = ISNULL(T.maintaxcode,T.taxcode))
 ]{I} <2
)


--tax.fiscaltaxcode
--tax.idaccmotive_pay')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN013','3','U','tax','S','S','S','N','N',{ts '2007-10-09 12:11:41.400'},'NINO','Ritenuta  %<tax.description>% già refenziata da altre ai fini della liquidazione: il codice ritenuta per liquidazione  non deve essere impostato.','N','%<tax.maintaxcode>% is null
OR
(
[SELECT COUNT(*) 
FROM tax
WHERE ISNULL(maintaxcode,0)= %<tax.taxcode>%
AND   taxcode <> %<tax.taxcode>%]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN013','4','U','tax','S','S','S','N','N',{ts '2007-10-09 12:14:36.823'},'NINO','La ritenuta  %<tax.description>% non può essere associata a se stessa  ai fini della liquidazione','N','ISNULL(%<tax.maintaxcode>%,0) <> ISNULL(%<tax.taxcode>%,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN014','1','U','tax','S','S','S','N','N',{ts '2007-12-13 16:43:39.843'},'SARA','Attenzione: per le ritenute raggruppate ai fini della liquidazione, verrà utilizzata la ripartizione geografica configurata  per la ritenuta  %<taxview.maintaxdescription>%','N','(
ISNULL(%<tax.maintaxcode>%,0) = ISNULL(&<tax.maintaxcode>&,0)
)
OR
(
 %<tax.maintaxcode>% IS NULL
)
OR
[select flag FROM taxsetup 
WHERE taxcode = %<tax.taxcode>%
 AND  ayear = %<sys_esercizio>%
]{I} & 4 = 0
OR
(
[select COUNT(*) from taxregionsetup T
WHERE T.taxcode = %<tax.taxcode>% 
AND ayear = %<sys_esercizio>%
]{I} = 0
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN014','2','U','tax','S','S','S','N','N',{ts '2007-12-13 16:44:01.297'},'SARA','Attenzione: per le ritenute raggruppate ai fini della liquidazione, verrà utilizzata la ripartizione percentuale configurata  per la ritenuta  %<taxview.maintaxdescription>%','N','(
ISNULL(%<tax.maintaxcode>%,0) = ISNULL(&<tax.maintaxcode>&,0)
)
OR
(
 %<tax.maintaxcode>% IS NULL
)
OR
[select flag FROM taxsetup 
WHERE taxcode = %<tax.taxcode>%
 AND   ayear = %<sys_esercizio>%
]{I} & 4 = 0
OR
(
[select COUNT(*) from taxpaymentpartsetup T
WHERE T.taxcode = %<tax.taxcode>% 
AND ayear = %<sys_esercizio>%
]{I} = 0
)')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','tax','S','S','S','N','N',{ts '2008-10-10 15:20:32.123'},'SARA','Descrizione %<tax.description>% del tipo di ritenuta %<tax.taxref>% già esistente','S','[(SELECT count(*) 
from tax 
where taxcode <> %<tax.taxcode>% 
and description = %<tax.description>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','taxableminmax','S','S','S','N','N',{ts '2007-12-13 14:26:53.340'},'NINO','Esiste già un altro minimale/massimale per l''imponibile %<taxableminmax.taxablecode>% per l''esercizio %<esercizio>% che inizia nel mese %<taxableminmax.startmonth>%','S','[SELECT COUNT(*) FROM taxableminmax
WHERE ayear = %<sys_esercizio>%
AND taxablecode = %<taxableminmax.taxablecode>%
AND startmonth = %<taxableminmax.startmonth>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','taxpay','S','S','S','N','N',{ts '2007-09-13 12:17:10.467'},'NINO','Esistono movimenti di spesa collegati alla liquidazione periodica delle ritenute %<taxcode>% %<ytaxpay>% %<ntaxpay>%. Cancellare prima i movimenti di spesa','S','[(SELECT count(*) 
from taxpayexpense 
where taxcode = %<taxpay.taxcode>%
and ytaxpay = %<taxpay.ytaxpay>% 
and ntaxpay = %<taxpay.ntaxpay>%)]{I} = 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN007','1','I','taxpay','S','S','S','N','N',{ts '2008-06-12 14:56:06.317'},'NINO','La liquidazione delle ritenute deve essere uguale alla somma delle ritenute c/dipendente e c/amministrazione','N','ISNULL(
	[SELECT
	SUM(
		ISNULL(employtax, 0) +
		ISNULL(admintax, 0)
	)
	FROM expensetax
	WHERE ytaxpay = %<taxpay.ytaxpay>% 
	AND ntaxpay =  %<taxpay.ntaxpay>%]{V}
,0) +
ISNULL(
	[SELECT
	SUM(
		ISNULL(employamount, 0) +
		ISNULL(adminamount, 0)
	)
	FROM expensetaxcorrige
	WHERE ytaxpay = %<taxpay.ytaxpay>% 
	AND ntaxpay =  %<taxpay.ntaxpay>%]{V}
,0)
= %<taxpay.amount>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN001','1','U','taxpay','S','S','S','N','N',{ts '2007-03-14 09:27:55.970'},'''NINO''','L''importo della liquidazione della ritenuta %<taxcode>% per il periodo dal %<start>% al %<stop>% è diverso dai movimenti di spesa collegati','S','[SELECT ISNULL(SUM(curramount), 0) 
from taxpayexpenseview 
where taxcode = %<taxpay.taxcode>% 
and ytaxpay = %<taxpay.ytaxpay>% 
and ntaxpay = %<taxpay.ntaxpay>% 
and nphase = %<sys_maxexpensephase>%]{N} = %<taxpay.amount>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN002','1','U','taxpay','S','S','S','N','N',{ts '2008-06-12 14:51:33.097'},'NINO','L''importo della liquidazione della ritenuta %<taxcode>% per il periodo dal %<start>% al %<stop>% è diverso dalla somma degli importi delle ritenute operate','S','ISNULL(
	[SELECT
	SUM(
		ISNULL(employtax, 0) +
		ISNULL(admintax, 0)
	)
	FROM expensetax
	WHERE ytaxpay = %<taxpay.ytaxpay>% 
	AND ntaxpay =  %<taxpay.ntaxpay>%]{V}
,0) +
ISNULL(
	[SELECT
	SUM(
		ISNULL(employamount, 0) +
		ISNULL(adminamount, 0)
	)
	FROM expensetaxcorrige
	WHERE ytaxpay = %<taxpay.ytaxpay>% 
	AND ntaxpay =  %<taxpay.ntaxpay>%]{V}
,0)
= %<taxpay.amount>%')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN014','1','I','taxpaymentpartsetup','S','S','S','N','N',{ts '2007-06-27 12:14:29.093'},'''SARA''','Attenzione: per tutte le ritenute raggruppate ai fini della liquidazione, verrà utilizzata la ripartizione percentuale configurata  per questa ritenuta  %<taxpaymentpartsetup.taxcode>%','N','(
[SELECT maintaxcode FROM tax 
 WHERE taxcode = %<taxpaymentpartsetup.taxcode>%]{C} is not null 
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN014','2','I','taxpaymentpartsetup','S','S','S','N','N',{ts '2007-06-27 12:14:54.140'},'''SARA''','Attenzione: per le ritenute raggruppate ai fini della liquidazione, verrà utilizzata la ripartizione percentuale configurata  per la ritenuta  principale. Pertanto questa configurazione non sarà utilizzata','N','(
[SELECT maintaxcode FROM tax 
 WHERE taxcode = %<taxpaymentpartsetup.taxcode>%]{C} is null 
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','taxpaymentpartsetup','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Configurazione degli automatismi per il versamento percentuale per la ritenuta %<taxcode>% per l''esercizio %<esercizio>% al creditore/debitore %<registry.title>% già esistente','S','[(SELECT count(*) 
from taxpaymentpartsetup 
where taxcode = %<taxpaymentpartsetup.taxcode>% 
and ayear = %<taxpaymentpartsetup.ayear>% 
and idreg = %<taxpaymentpartsetup.idreg>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN014','1','U','taxpaymentpartsetup','S','S','S','N','N',{ts '2007-06-27 11:58:07.343'},'''SARA''','Attenzione: per tutte le ritenute raggruppate ai fini della liquidazione, verrà utilizzata la ripartizione percentuale configurata  per questa ritenuta  %<taxpaymentpartsetup.taxcode>%','N','(
ISNULL(%<taxpaymentpartsetup.idreg>%,-1000) = ISNULL(&<taxpaymentpartsetup.idreg>&,-1000)
AND 
ISNULL(%<taxpaymentpartsetup.percentage>%,-1000) = ISNULL(&<taxpaymentpartsetup.percentage>&,-1000)
)
OR
(
[SELECT maintaxcode FROM tax 
 WHERE taxcode = %<taxpaymentpartsetup.taxcode>%]{C} is not null 
)
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN014','2','U','taxpaymentpartsetup','S','S','S','N','N',{ts '2007-06-27 12:08:18.343'},'''SARA''','Attenzione: per le ritenute raggruppate ai fini della liquidazione, verrà utilizzata la ripartizione percentuale configurata  per la ritenuta  principale. Pertanto questa configurazione non sarà utilizzata','N','(
ISNULL(%<taxpaymentpartsetup.idreg>%,-1000) = ISNULL(&<taxpaymentpartsetup.idreg>&,-1000)
AND 
ISNULL(%<taxpaymentpartsetup.percentage>%,-1000) = ISNULL(&<taxpaymentpartsetup.percentage>&,-1000)
)
OR
(
[SELECT maintaxcode FROM tax 
 WHERE taxcode = %<taxpaymentpartsetup.taxcode>%]{C} is null 
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN014','1','I','taxregionsetup','S','S','S','N','N',{ts '2007-06-27 12:15:17.017'},'''SARA''','Attenzione: per tutte le ritenute raggruppate ai fini della liquidazione, verrà utilizzata la ripartizione geografica configurata  per la ritenuta  %<taxregionsetup.taxcode>%','N','(
[SELECT maintaxcode FROM tax 
 WHERE taxcode = %<taxregionsetup.taxcode>%]{C} is not null 
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN014','2','I','taxregionsetup','S','S','S','N','N',{ts '2007-06-27 12:15:38.280'},'''SARA''','Attenzione: per le ritenute raggruppate ai fini della liquidazione, verrà utilizzata la ripartizione geografica configurata  per la ritenuta  principale. Pertanto questa configurazione non sarà utilizzata','N','(
[SELECT maintaxcode FROM tax 
 WHERE taxcode = %<taxregionsetup.taxcode>%]{C} is null 
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN014','1','U','taxregionsetup','S','S','S','N','N',{ts '2007-06-27 11:58:42.517'},'''SARA''','Attenzione: per tutte le ritenute raggruppate ai fini della liquidazione, verrà utilizzata la ripartizione geografica configurata  per la ritenuta  %<taxregionsetup.taxcode>%','N','(
ISNULL(%<taxregionsetup.idplace>%,-1000) = ISNULL(&<taxregionsetup.idplace>&,-1000)
AND 
ISNULL(%<taxregionsetup.kind>%,'''') = ISNULL(&<taxregionsetup.kind>&,'''')
AND
ISNULL(%<taxregionsetup.regionalagency>%,-1000) = ISNULL(&<taxregionsetup.regionalagency>&,-1000)
)
OR
(
[SELECT maintaxcode FROM tax 
 WHERE taxcode = %<taxregionsetup.taxcode>%]{C} is not null 
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN014','2','U','taxregionsetup','S','S','S','N','N',{ts '2007-06-27 11:58:27.640'},'''SARA''','Attenzione: per le ritenute raggruppate ai fini della liquidazione, verrà utilizzata la ripartizione geografica configurata  per la ritenuta  principale. Pertanto questa configurazione non sarà utilizzata','N','(
ISNULL(%<taxregionsetup.idplace>%,-1000) = ISNULL(&<taxregionsetup.idplace>&,-1000)
AND 
ISNULL(%<taxregionsetup.kind>%,'''') = ISNULL(&<taxregionsetup.kind>&,'''')
AND
ISNULL(%<taxregionsetup.regionalagency>%,-1000) = ISNULL(&<taxregionsetup.regionalagency>&,-1000)
)
OR
(
[SELECT maintaxcode FROM tax 
 WHERE taxcode = %<taxregionsetup.taxcode>%]{C} is null 
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN013','1','I','taxsetup','S','S','S','N','N',{ts '2007-12-13 14:37:20.873'},'SARA','La configurazione delle ritenute raggruppate deve essere identica','N','(
 [SELECT COUNT(tax.taxcode) FROM tax 
  JOIN tax T ON T.taxcode = %<taxsetup.taxcode>%
  WHERE ISNULL(tax.maintaxcode,tax.taxcode) = ISNULL(T.maintaxcode,T.taxcode)]{I} = 1
)
OR
(
[select COUNT(DISTINCT ISNULL(expiringday,-1000)) from taxsetup 
JOIN tax T ON T.taxcode = %<taxsetup.taxcode>% and  ayear = %<sys_esercizio>%
where taxsetup.taxcode in (select taxcode from tax where ISNULL(tax.maintaxcode,tax.taxcode)  = ISNULL(T.maintaxcode,T.taxcode))
 ]{I} <2
AND
[select COUNT(DISTINCT ISNULL(idexpirationkind,0)) from taxsetup 
JOIN tax T ON T.taxcode = %<taxsetup.taxcode>% and  ayear = %<sys_esercizio>%
where taxsetup.taxcode in (select taxcode from tax where ISNULL(tax.maintaxcode,tax.taxcode)   = ISNULL(T.maintaxcode,T.taxcode))
 ]{I} <2
AND
[select COUNT(DISTINCT ISNULL(paymentagency,-1000)) from taxsetup 
JOIN tax T ON T.taxcode = %<taxsetup.taxcode>% and  ayear = %<sys_esercizio>%
where taxsetup.taxcode in (select taxcode from tax where ISNULL(tax.maintaxcode,tax.taxcode)  = ISNULL(T.maintaxcode,T.taxcode))
 ]{I} <2
AND
[select COUNT(DISTINCT ISNULL(idfinadmintax,0)) from taxsetup 
JOIN tax T ON T.taxcode = %<taxsetup.taxcode>% and  ayear = %<sys_esercizio>%
where taxsetup.taxcode in (select taxcode from tax where ISNULL(tax.maintaxcode,tax.taxcode)   = ISNULL(T.maintaxcode,T.taxcode))
 ]{I} <2
AND
[select COUNT(DISTINCT ISNULL(idfinexpensecontra,0)) from taxsetup 
JOIN tax T ON T.taxcode = %<taxsetup.taxcode>% and  ayear = %<sys_esercizio>%
where taxsetup.taxcode in (select taxcode from tax where ISNULL(tax.maintaxcode,tax.taxcode)  = ISNULL(T.maintaxcode,T.taxcode))
 ]{I} <2
AND
[select COUNT(DISTINCT flag) from taxsetup 
JOIN tax T ON T.taxcode = %<taxsetup.taxcode>% and  ayear = %<sys_esercizio>%
where taxsetup.taxcode in (select taxcode from tax where ISNULL(tax.maintaxcode,tax.taxcode)   = ISNULL(T.maintaxcode,T.taxcode))
 ]{I} <2
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','taxsetup','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Configurazione degli automatismi per la ritenuta %<taxcode>% per l''esercizio %<esercizio>% già esistente','S','[(SELECT count(*) 
from taxsetup 
where taxcode = %<taxsetup.taxcode>% 
and ayear = %<taxsetup.ayear>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN013','1','U','taxsetup','S','S','S','N','N',{ts '2007-12-13 15:48:04.157'},'SARA','La configurazione delle ritenute raggruppate deve essere identica','N','(
ISNULL(%<taxsetup.expiringday>%,0) = ISNULL(&<taxsetup.expiringday>&,0)
AND 
ISNULL(%<taxsetup.flag>%,0) = ISNULL(&<taxsetup.flag>&,0)
AND
ISNULL(%<taxsetup.idexpirationkind>%,'''') = ISNULL(&<taxsetup.idexpirationkind>&,'''')
AND
ISNULL(%<taxsetup.idfinadmintax>%,0) = ISNULL(&<taxsetup.idfinadmintax>&,0)
AND
ISNULL(%<taxsetup.idfinexpensecontra>%,0) = ISNULL(&<taxsetup.idfinexpensecontra>&,0)
AND
ISNULL(%<taxsetup.paymentagency>%,0) = ISNULL(&<taxsetup.paymentagency>&,0)
)
OR
(
 [SELECT COUNT(tax.taxcode) FROM tax 
  JOIN tax T ON T.taxcode = %<taxsetup.taxcode>%
  WHERE ISNULL(tax.maintaxcode,tax.taxcode) = ISNULL(T.maintaxcode,T.taxcode)]{I} = 1
)
OR
(
[select COUNT(DISTINCT ISNULL(expiringday,-1000)) from taxsetup 
JOIN tax T ON T.taxcode = %<taxsetup.taxcode>% and  ayear = %<sys_esercizio>%
where taxsetup.taxcode in (select taxcode from tax where ISNULL(tax.maintaxcode,tax.taxcode)  = ISNULL(T.maintaxcode,T.taxcode))
 ]{I} <2
AND
[select COUNT(DISTINCT ISNULL(idexpirationkind,0)) from taxsetup 
JOIN tax T ON T.taxcode = %<taxsetup.taxcode>% and  ayear = %<sys_esercizio>%
where taxsetup.taxcode in (select taxcode from tax where ISNULL(tax.maintaxcode,tax.taxcode)   = ISNULL(T.maintaxcode,T.taxcode))
 ]{I} <2
AND
[select COUNT(DISTINCT ISNULL(paymentagency,-1000)) from taxsetup 
JOIN tax T ON T.taxcode = %<taxsetup.taxcode>% and  ayear = %<sys_esercizio>%
where taxsetup.taxcode in (select taxcode from tax where ISNULL(tax.maintaxcode,tax.taxcode)  = ISNULL(T.maintaxcode,T.taxcode))
 ]{I} <2
AND
[select COUNT(DISTINCT ISNULL(idfinadmintax,0)) from taxsetup 
JOIN tax T ON T.taxcode = %<taxsetup.taxcode>% and  ayear = %<sys_esercizio>%
where taxsetup.taxcode in (select taxcode from tax where ISNULL(tax.maintaxcode,tax.taxcode)   = ISNULL(T.maintaxcode,T.taxcode))
 ]{I} <2
AND
[select COUNT(DISTINCT ISNULL(idfinexpensecontra,0)) from taxsetup 
JOIN tax T ON T.taxcode = %<taxsetup.taxcode>% and  ayear = %<sys_esercizio>%
where taxsetup.taxcode in (select taxcode from tax where ISNULL(tax.maintaxcode,tax.taxcode)  = ISNULL(T.maintaxcode,T.taxcode))
 ]{I} <2
AND
[select COUNT(DISTINCT flag) from taxsetup 
JOIN tax T ON T.taxcode = %<taxsetup.taxcode>% and  ayear = %<sys_esercizio>%
where taxsetup.taxcode in (select taxcode from tax where ISNULL(tax.maintaxcode,tax.taxcode)   = ISNULL(T.maintaxcode,T.taxcode))
 ]{I} <2
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','title','S','S','S','N','N',{ts '2007-09-13 12:17:20.967'},'NINO','Cancellazione Impossibile! Esistono dati in anagrafica collegati al titolo %<title.description>%','S','[(SELECT count(*)  from registry where idtitle =%<title.idtitle>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','title','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del titolo già esistente','S','[(SELECT count(*) 
from title
where description = %<title.description>%)]{N} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','title','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione del titolo già esistente    ','S','[(SELECT count(*) 
from title
where  idtitle<> %<title.idtitle>% and description = %<title.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR010','1','I','trasmissionmanager','S','S','S','N','N',{ts '2009-10-20 16:26:16.437'},'SARA','Il responsabile della trasmissione deve essere una persona fisica e deve avere il codice fiscale','S','( %<trasmissionmanager.idtrasmissiondocument>%=''INTRASTAT'' )

OR

[SELECT ISNULL(registryclass.flaghuman,''N'')
FROM registryclass
JOIN registry
ON registryclass.idregistryclass = registry.idregistryclass
WHERE registry.idreg = %<trasmissionmanager.idreg>%]{C} = ''S''
AND
[SELECT ISNULL(cf,'''') FROM registry
WHERE idreg = %<trasmissionmanager.idreg>%]{C} <> ['''']
AND
[SELECT LEN(cf) FROM registry
WHERE idreg = %<trasmissionmanager.idreg>%]{N} = [16]
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','trasmissionmanager','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Responsabile per la trasmissione del documento %<trasmissionmanager.idtrasmissiondocument>% per l''esercizio %<esercizio>% già esistente','S','[SELECT COUNT(*) FROM trasmissionmanager
WHERE ayear = %<sys_esercizio>%
AND idtrasmissiondocument = %<trasmissionmanager.idtrasmissiondocument>%]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANAGR010','1','U','trasmissionmanager','S','S','S','N','N',{ts '2009-10-20 16:26:08.063'},'SARA','Il responsabile della trasmissione deve essere una persona fisica e deve avere il codice fiscale','S','( %<trasmissionmanager.idtrasmissiondocument>%=''INTRASTAT'' )

OR

[SELECT ISNULL(registryclass.flaghuman,''N'')
FROM registryclass
JOIN registry
ON registryclass.idregistryclass = registry.idregistryclass
WHERE registry.idreg = %<trasmissionmanager.idreg>%]{C} = ''S''
AND
[SELECT ISNULL(cf,'''') FROM registry
WHERE idreg = %<trasmissionmanager.idreg>%]{C} <> ['''']
AND
[SELECT LEN(cf) FROM registry
WHERE idreg = %<trasmissionmanager.idreg>%]{N} = [16]')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','treasurer','S','S','S','N','N',{ts '2007-09-13 12:17:27.843'},'NINO','Cancellazione Impossibile! Esistono reversali di incasso collegate al tesoriere %<idtreasurer>%','S','[(SELECT count(*) 
from proceeds 
where idtreasurer = %<treasurer.idtreasurer>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','treasurer','S','S','S','N','N',{ts '2007-09-13 12:17:38.687'},'NINO','Cancellazione Impossibile! Esistono mandati collegati al tesoriere %<idtreasurer>%','S','[(SELECT count(*) 
from payment 
where idtreasurer = %<treasurer.idtreasurer>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','treasurer','S','S','S','N','N',{ts '2007-09-13 12:17:45.047'},'NINO','Cancellazione Impossibile! Esistono distinte di trasmissione delle reversali di incasso collegate al tesoriere %<idtreasurer>%','S','[(SELECT count(*) 
from proceedstransmission 
where idtreasurer = %<treasurer.idtreasurer>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','5','D','treasurer','S','S','S','N','N',{ts '2007-09-13 12:17:51.360'},'NINO','Cancellazione Impossibile! Esistono distinte di trasmissione dei mandati di pagamento collegate al tesoriere %<idtreasurer>%','S','[(SELECT count(*) 
from paymenttransmission 
where idtreasurer = %<treasurer.idtreasurer>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','6','D','treasurer','S','S','S','N','N',{ts '2012-11-30 11:57:57.537'},'sa','Cancellazione Impossibile! Esistono operazioni di Girofondo collegate al cassiere %<treasurer.description>%.','S','[(SELECT count(*) 
from moneytransfer
where idtreasurersource = %<treasurer.idtreasurer>%)]{I} = 0
and 
[(SELECT count(*) 
from moneytransfer
where idtreasurerdest = %<treasurer.idtreasurer>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM004','1','D','treasurer','S','S','S','N','N',{ts '2007-11-21 11:25:36.250'},'Nino07032012','La cancellazione del cassiere %<description>% comporterà la cancellazione dei saldi iniziali','S','[(SELECT count(*) 
from treasurerstart 
where idtreasurer = %<treasurer.idtreasurer>%)]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','treasurer','S','S','S','N','N',{ts '2007-11-21 11:26:14.000'},'Nino07032012','Cassiere %<codetreasurer>% già esistente','S','[SELECT count(*) 
from treasurer 
where codetreasurer = %<treasurer.codetreasurer>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','treasurer','S','S','S','N','N',{ts '2007-11-21 11:26:37.267'},'Nino07032012','Esiste già un cassiere predefinito','S','[SELECT count(*)
from treasurer
where flagdefault = ''S'']{I} = 0
OR 
(%<treasurer.flagdefault>% <> ''S'')')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','treasurer','S','S','S','N','N',{ts '2007-11-21 11:27:00.920'},'Nino07032012','Esiste già un cassiere predefinito','S','[SELECT count(*)
from treasurer
where flagdefault = ''S''
and idtreasurer <> %<treasurer.idtreasurer>%]{I} = 0
or
(%<treasurer.flagdefault>%=''N'')
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','treasurerstart','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Saldo iniziale del tesoriere %<idtreasurer>% per l''esercizio %<esercizio>% già esistente','S','[(SELECT count(*) 
from treasurerstart 
where idtreasurer = %<treasurerstart.idtreasurer>% 
and ayear = %<treasurerstart.ayear>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','underwriter','S','S','S','N','N',{ts '2007-09-13 12:17:57.407'},'NINO','Cancellazione Impossibile! Esistono upb collegati alL''ente finanziatore %<description>%','S','[(SELECT count(*) 
from upb 
where idunderwriter = %<underwriter.idunderwriter>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','underwriter','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Ente finanziatore %<idunderwriter>% già esistente','S','[(SELECT count(*) 
from underwriter 
where idunderwriter = %<underwriter.idunderwriter>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','underwriter','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione dell''ente finanziatore già esistente','S','[(SELECT count(*) 
from underwriter 
where description = %<underwriter.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','underwriter','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Descrizione dell''ente finanziatore già esistente','S','[(SELECT count(*) 
from underwriter 
where idunderwriter <> %<underwriter.idunderwriter>% 
and description = %<underwriter.description>%)]{N} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','underwriting','S','S','S','N','N',{ts '2012-09-20 11:52:09.197'},'sa','Cancellazione Impossibile! Esistono movimenti di Entrata collegati al  Finanziamento %<underwriting.title>%','S','[(SELECT count(*) 
from income 
where idunderwriting = %<underwriting.idunderwriting>%)]{I} 
= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','underwriting','S','S','S','N','N',{ts '2012-09-20 11:52:41.077'},'sa','Cancellazione Impossibile! Esistono Contratti attivi collegati al  Finanziamento %<underwriting.title>%','S','[(SELECT count(*) 
from estimate 
where idunderwriting = %<underwriting.idunderwriting>%)]{I} 
= 0 ')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','underwriting','S','S','S','N','N',{ts '2012-09-20 11:53:35.847'},'sa','Cancellazione Impossibile! Esistono variazioni di Movimenti di Spesa collegati al  Finanziamento %<underwriting.title>%','S','[(SELECT count(*) 
from expensevar 
where idunderwriting = %<underwriting.idunderwriting>%)]{I} 
= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','underwriting','S','S','S','N','N',{ts '2012-09-20 11:54:07.583'},'sa','Cancellazione Impossibile! Esistono variazioni di Bilancio collegati al  Finanziamento %<underwriting.title>%','S','[(SELECT count(*) 
from finvardetail
where idunderwriting = %<underwriting.idunderwriting>%)]{I} 
= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','5','D','underwriting','S','S','S','N','N',{ts '2012-09-20 11:54:58.433'},'sa','Cancellazione Impossibile! Esistono Impegni collegati al  Finanziamento %<underwriting.title>%','S','[(SELECT count(*) 
from underwritingappropriation
where idunderwriting = %<underwriting.idunderwriting>%)]{I} 
= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','6','D','underwriting','S','S','S','N','N',{ts '2012-09-20 11:55:48.237'},'sa','Cancellazione Impossibile! Esistono Pagamenti collegati al  Finanziamento %<underwriting.title>%','S','[(SELECT count(*) 
from underwritingpayment
where idunderwriting = %<underwriting.idunderwriting>%)]{I} 
= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','7','D','underwriting','S','S','S','N','N',{ts '2012-10-16 15:32:33.773'},'sa','Cancellazione Impossibile! Esistono operazioni di picola spesa collegate al  Finanziamento %<underwriting.title>%','S','[(SELECT count(*) 
from pettycashoperationunderwriting
where idunderwriting = %<underwriting.idunderwriting>%)]{I} 
= 0 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM103','1','D','underwritingappropriation','S','S','S','N','N',{ts '2012-09-17 14:21:03.073'},'sa','E'' possibile rimuovere l''assegnazione ad un Finanziamento solo nell''esercizio di creazione delll''Impegno','S','[select count(*) from expense E   
where E.idexp=%<underwritingappropriation.idexp>%  
and E.ymov <> %<sys_esercizio>%]{I}=0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM104','1','D','underwritingappropriation','S','S','S','N','N',{ts '2013-01-25 11:47:23.710'},'sa','L''importo dell''Impegno c/residuo assegnato a un Finanziamento non può essere inferiore all''importo  finanziato dei relativi Pagamenti.','N','-- RESIDUI
[SELECT ET.flag
FROM expense  E
JOIN expensetotal ET
	ON ET.idexp = E.idexp
WHERE  E.idexp = %<underwritingappropriation.idexp>%
AND ET.ayear = %<sys_esercizio>%]{I} & 1 = 0

OR
isnull([SELECT flagcredit from config 
where ayear=%<sys_esercizio>%]{C},''N'')=''N''  
OR NOT EXISTS
(select *  from underwritingpayment E   
join expenselink EL 
	on EL.idchild = E.idexp
	and  EL.idparent =%<underwritingappropriation.idexp>% 
	and  EL.nlevel  = %<sys_appropriationphase>%
	and E.idunderwriting=%<underwritingappropriation.idunderwriting>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM109','1','D','underwritingappropriation','S','S','S','N','N',{ts '2013-02-07 13:07:19.700'},'sa','Il movimento di spesa non è stato interamente attribuito al/ai Fnanziamento/i.','N','ISNULL(
		[(SELECT ISNULL(SUM(amount),0)
		FROM underwritingappropriation 
		WHERE idexp= %<underwritingappropriation.idexp>%)]{V}
	,0)
+
ISNULL (   [select SUM(amount) from expensevar where
		idexp=%<underwritingappropriation.idexp>%
		and
		idunderwriting is not null
                 ]{V},0)
	=
	ISNULL([SELECT curramount FROM expensetotal
	WHERE ayear = %<sys_esercizio>%  
	AND   idexp= %<underwritingappropriation.idexp>%]{V},0)
OR 
[SELECT assured 
FROM upb  
WHERE idupb = ([select idupb 
		from expenseyear
		where 	ayear = %<sys_esercizio>%
		and idexp=%<underwritingappropriation.idexp>%]{C})]{C} =''S'' 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM111','1','D','underwritingappropriation','S','S','S','N','N',{ts '2013-01-25 11:45:56.803'},'sa','L''importo dell''Impegno c/competenza assegnato a un Finanziamento non può essere inferiore all''importo  finanziato dei relativi Pagamenti.','N','-- COMPETENZA
[SELECT ET.flag
FROM expense  E
JOIN expensetotal ET
	ON ET.idexp = E.idexp
WHERE  E.idexp = %<underwritingappropriation.idexp>%
AND ET.ayear = %<sys_esercizio>%]{I} & 1 <> 0

OR
isnull([SELECT flagcredit from config 
where ayear=%<sys_esercizio>%]{C},''N'')=''N''  
OR NOT EXISTS
(select *  from underwritingpayment E   
join expenselink EL 
	on EL.idchild = E.idexp
	and  EL.idparent =%<underwritingappropriation.idexp>% 
	and  EL.nlevel  = %<sys_appropriationphase>%
	and E.idunderwriting=%<underwritingappropriation.idunderwriting>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI007','1','I','underwritingappropriation','S','N','S','S','N',{ts '2013-05-15 09:56:03.993'},'sara','La dotazione crediti di Finanziamento: %<underwritingappropriationview.underwriting>%,  UPB %<expenseview.codeupb>%, Bilancio %<expenseview.codefin>% è INSUFFICIENTE!','N','ISNULL(  [SELECT  ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0)  
	FROM upbunderwritingtotal
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
]{V} ,0)
-  
ISNULL(  [SELECT ISNULL(totalcompetency, 0) 
	FROM underwritingexpensetotal
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	 AND nphase =  %<sys_expensefinphase>%
	]{V} ,0) 
>= 0 

or
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		WHERE idexp = %<underwritingappropriation.idexp>% 
		AND ayear = %<sys_esercizio>%]{C}
]{C}
= ''S''')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO034','1','I','underwritingappropriation','S','N','S','S','N',{ts '2013-05-10 14:22:20.547'},'sara','La dotazione crediti di Finanziamento: %<underwritingappropriationview.underwriting>% , UPB: %<underwritingappropriationview.upb>% , Bilancio: %<underwritingappropriationview.codefin>% è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0)  
	from upbunderwritingtotal 
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	and nphase =%<sys_expensefinphase>%
]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	FROM pettycashoperationunderwriting POU
	join pettycashoperation PO
		ON POU.idpettycash=PO.idpettycash
		and POU.yoperation=PO.yoperation
		and POU.noperation=PO.noperation
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	AND PO.yrestore IS NULL 
	AND PO.nrestore IS NULL]{V}
,0)
>= 0 

OR
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		WHERE idexp = %<underwritingappropriation.idexp>% 
		AND ayear = %<sys_esercizio>%]{C}
]{C}
= ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO036','1','I','underwritingappropriation','S','N','S','N','N',{ts '2013-05-14 15:33:47.130'},'sara','La previsione della voce in spesa di Finanziamento: %<underwritingappropriationview.underwriting>% , UPB: %<underwritingappropriationview.upb>% , Bilancio: %<underwritingappropriationview.codefin>% è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbunderwritingtotal 
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	AND idunderwriting= %<underwritingappropriation.idunderwriting>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	AND idunderwriting= %<underwritingappropriation.idunderwriting>%
	and nphase =%<sys_expensefinphase>%
]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	FROM pettycashoperationunderwriting POU
	join pettycashoperation PO
		ON POU.idpettycash=PO.idpettycash
		and POU.yoperation=PO.yoperation
		and POU.noperation=PO.noperation
	WHERE PO.idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND PO.idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND POU.idunderwriting = %<underwritingappropriation.idunderwriting>%
	AND PO.yrestore IS NULL 
	AND PO.nrestore IS NULL]{V}
,0)

>= 0 
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO037','1','I','underwritingappropriation','N','S','N','N','N',{ts '2013-05-14 19:15:28.057'},'sara','La previsione della voce in spesa di Finanziamento: %<underwritingappropriationview.underwriting>% , UPB: %<underwritingappropriationview.upb>% , Bilancio: %<underwritingappropriationview.codefin>% è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbunderwritingtotal 
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	AND idunderwriting= %<underwritingappropriation.idunderwriting>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears, 0)   
	from underwritingexpensetotal 
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	AND idunderwriting= %<underwritingappropriation.idunderwriting>%
	and nphase =%<sys_expensefinphase>%
]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	WHERE PO.idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND PO.idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND POU.idunderwriting = %<underwritingappropriation.idunderwriting>%
	AND PO.yrestore IS NULL 
	AND PO.nrestore IS NULL]{V}
,0)

>= 0 

or 
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<underwritingappropriation.idexp>%]{I}')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM103','1','I','underwritingappropriation','S','S','S','N','N',{ts '2012-09-17 14:21:24.680'},'sa','E'' possibile associare un Finanziamento solo nell''esercizio di creazione dell'' Impegno','S','[select count(*) from expense E   
where E.idexp=%<underwritingappropriation.idexp>%  
and E.ymov <> %<sys_esercizio>%]{I}=0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM104','1','I','underwritingappropriation','S','S','S','N','N',{ts '2013-03-20 11:36:33.343'},'sa','L''importo dell''Impegno  c/residuo assegnato a un Finanziamento non può essere inferiore all''importo  finanziato dei relativi Pagamenti 
N.impegno %<underwritingappropriationview.nmov>%
Cod.finanziamento %<underwritingappropriationview.codeunderwriting>%
Importo %<underwritingappropriationview.amount>%
Descrizione: %<underwritingappropriation.description>%','N','[SELECT ET.flag
FROM expense  E
JOIN expensetotal ET
	ON ET.idexp = E.idexp
WHERE  E.idexp = %<underwritingappropriation.idexp>%
AND ET.ayear = %<sys_esercizio>%]{I} & 1 = 0

OR

isnull([SELECT flagcredit from config 
where ayear=%<sys_esercizio>%]{C},''N'')=''N''  
OR
[select isnull(E.topay,-1) from expensecreditproceedsview E   
where E.idexp=%<underwritingappropriation.idexp>%  
and E.idunderwriting=%<underwritingappropriation.idunderwriting>%]{V}>=0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM109','1','I','underwritingappropriation','S','S','S','N','N',{ts '2013-02-07 13:07:10.763'},'sa','Il movimento di spesa non è stato interamente attribuito al/ai Fnanziamento/i.','N','ISNULL(
		[(SELECT ISNULL(SUM(amount),0)
		FROM underwritingappropriation 
		WHERE idexp= %<underwritingappropriation.idexp>%)]{V}
	,0)
+
ISNULL (   [select SUM(amount) from expensevar where
		idexp=%<underwritingappropriation.idexp>%
		and
		idunderwriting is not null
                 ]{V},0)
	=
	ISNULL([SELECT curramount FROM expensetotal
	WHERE ayear = %<sys_esercizio>%  
	AND   idexp= %<underwritingappropriation.idexp>%]{V},0)
OR 
[SELECT assured 
FROM upb  
WHERE idupb = ([select idupb 
		from expenseyear
		where 	ayear = %<sys_esercizio>%
		and idexp=%<underwritingappropriation.idexp>%]{C})]{C} =''S'' 



')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM110','2','I','underwritingappropriation','N','S','N','N','N',{ts '2013-05-16 18:08:14.197'},'sa','La previsione della voce spesa Finanziamento: %<underwritingappropriationview.underwriting>% , UPB: %<underwritingappropriationview.upb>% , Bilancio: %<underwritingappropriationview.codefin>%   è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(currentprev,0)+
	ISNULL(previsionvariation, 0)
	from upbunderwritingtotal
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from underwritingexpensetotal
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	and nphase =  %<sys_expensefinphase>%
  ]{V}
,0)
>= 0 
OR
(%<sys_expensefinphase>%<> [select nphase from expense where 
			idexp=%<underwritingappropriation.idexp>%]{I})
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM110','3','I','underwritingappropriation','S','N','S','N','N',{ts '2013-05-16 18:07:47.420'},'sa','La previsione di competenza della voce spesa Finanziamento: %<underwritingappropriationview.underwriting>% , UPB: %<underwritingappropriationview.upb>% , Bilancio: %<underwritingappropriationview.codefin>%   è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbunderwritingtotal
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	and nphase =%<sys_expensefinphase>%
]{V}
,0)
>= 0 

or 
%<sys_expensefinphase>% <> 
     [select nphase from expense where 
			idexp=%<underwritingappropriation.idexp>%]{I}


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM111','1','I','underwritingappropriation','S','S','S','N','N',{ts '2013-03-20 11:39:47.467'},'sa','L''importo dell''Impegno  c/competenza assegnato a un Finanziamento non può essere inferiore all''importo  finanziato dei relativi Pagamenti 
N.impegno %<underwritingappropriationview.nmov>%
Cod.finanziamento %<underwritingappropriationview.codeunderwriting>%
Importo %<underwritingappropriationview.amount>%
Descrizione: %<underwritingappropriation.description>%','N','[SELECT ET.flag
FROM expense  E
JOIN expensetotal ET
	ON ET.idexp = E.idexp
WHERE  E.idexp = %<underwritingappropriation.idexp>%
AND ET.ayear = %<sys_esercizio>%]{I} & 1 <> 0

OR

isnull([SELECT flagcredit from config 
where ayear=%<sys_esercizio>%]{C},''N'')=''N''  
OR
[select isnull(E.topay,-1) from expensecreditproceedsview E   
where E.idexp=%<underwritingappropriation.idexp>%  
and E.idunderwriting=%<underwritingappropriation.idunderwriting>%]{V}>=0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CREDI007','1','U','underwritingappropriation','S','N','S','S','N',{ts '2013-05-14 22:55:40.667'},'sara','La dotazione crediti di Finanziamento: %<underwritingappropriationview.underwriting>%,  UPB %<expenseview.codeupb>%, Bilancio %<expenseview.codefin>% è INSUFFICIENTE!','S','%<underwritingappropriation.amount>%<&<underwritingappropriation.amount>&

OR

ISNULL(  [SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0)  
	FROM upbunderwritingtotal
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
]{V} ,0)
-  
ISNULL(  [SELECT ISNULL(totalcompetency, 0) 
	FROM underwritingexpensetotal
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	 AND nphase =  %<sys_expensefinphase>%
	]{V} ,0) 
+ 
ISNULL(&<underwritingappropriation.amount>&, 0)
- 
ISNULL(%<underwritingappropriation.amount>%, 0) 
>= 0 

OR
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		WHERE idexp = %<underwritingappropriation.idexp>% 
		AND ayear = %<sys_esercizio>%]{C}
]{C}
= ''S''



')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO034','3','U','underwritingappropriation','S','N','S','S','N',{ts '2013-05-14 11:25:20.530'},'sara','La dotazione crediti di Finanziamento: %<underwritingappropriationview.underwriting>% , UPB: %<underwritingappropriationview.upb>% , Bilancio: %<underwritingappropriationview.codefin>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0)  
	from upbunderwritingtotal 
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from underwritingexpensetotal 
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V} ,0)
-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	FROM pettycashoperationunderwriting POU
	join pettycashoperation PO
		ON POU.idpettycash=PO.idpettycash
		and POU.yoperation=PO.yoperation
		and POU.noperation=PO.noperation
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	AND PO.yrestore IS NULL 
	AND PO.nrestore IS NULL]{V}
,0)

+ 
ISNULL(&<underwritingappropriation.amount>&, 0)
- 
ISNULL(%<underwritingappropriation.amount>%, 0) 
>= 0

OR
%<underwritingappropriation.idunderwriting>% <> &<underwritingappropriation.idunderwriting>& 
or
%<underwritingappropriation.amount>%<&<underwritingappropriation.amount>&

OR
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		WHERE idexp = %<underwritingappropriation.idexp>% 
		AND ayear = %<sys_esercizio>%]{C}
]{C}
= ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO034','4','U','underwritingappropriation','S','N','S','S','N',{ts '2013-05-14 11:32:59.997'},'sara','La dotazione crediti di Finanziamento: %<underwritingappropriationview.underwriting>% , UPB: %<underwritingappropriationview.upb>% , Bilancio: %<underwritingappropriationview.codefin>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totcreditpart, 0) + 
	ISNULL(creditvariation, 0)  
	from upbunderwritingtotal 
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from underwritingexpensetotal 
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V} ,0)

- 
ISNULL(%<underwritingappropriation.amount>%, 0) 
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0)
	from expensevar
	where idexp = %<underwritingappropriation.idexp>%
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	and yvar = %<sys_esercizio>%]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	FROM pettycashoperationunderwriting POU
	join pettycashoperation PO
		ON POU.idpettycash=PO.idpettycash
		and POU.yoperation=PO.yoperation
		and POU.noperation=PO.noperation
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	AND PO.yrestore IS NULL 
	AND PO.nrestore IS NULL]{V}
,0)

>= 0

OR
%<underwritingappropriation.idunderwriting>% = &<underwritingappropriation.idunderwriting>& 
OR
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		WHERE idexp = %<underwritingappropriation.idexp>% 
		AND ayear = %<sys_esercizio>%]{C}
]{C}
= ''S''

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO036','1','U','underwritingappropriation','S','N','S','N','N',{ts '2013-05-14 14:48:30.083'},'sara','La previsione della voce in spesa di Finanziamento: %<underwritingappropriationview.underwriting>% , UPB: %<underwritingappropriationview.upb>% , Bilancio: %<underwritingappropriationview.codefin>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
	ISNULL(previsionvariation, 0)
	from upbunderwritingtotal 
	where idfin = %<expenseyear.idfin>%
	AND idupb= %<expenseyear.idupb>%
	AND idunderwriting = %<underwritingappropriation.idunderwriting>%
]{V} 
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	where idfin = %<expenseyear.idfin>% 
	AND idupb= %<expenseyear.idupb>%
	AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	and nphase =%<sys_expensefinphase>%]
{V} ,0)
-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	FROM pettycashoperationunderwriting POU
	join pettycashoperation PO
		ON POU.idpettycash=PO.idpettycash
		and POU.yoperation=PO.yoperation
		and POU.noperation=PO.noperation
	WHERE PO.idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND PO.idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND POU.idunderwriting = %<underwritingappropriation.idunderwriting>%
	AND PO.yrestore IS NULL
	AND PO.nrestore IS NULL]{V}
,0)
+ 
ISNULL(&<underwritingappropriation.amount>&, 0)
- 
ISNULL(%<underwritingappropriation.amount>%, 0) >= 0 


OR
%<underwritingappropriation.idunderwriting>% <> &<underwritingappropriation.idunderwriting>&

OR
%<underwritingappropriation.amount>%<&<underwritingappropriation.amount>&

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO036','2','U','underwritingappropriation','S','N','S','N','N',{ts '2013-05-14 14:48:38.750'},'sara','La previsione della voce in spesa di Finanziamento: %<underwritingappropriationview.underwriting>% , UPB: %<underwritingappropriationview.upb>% , Bilancio: %<underwritingappropriationview.codefin>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbunderwritingtotal 
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
]{V} 
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal 
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	and nphase =%<sys_expensefinphase>%
]{V} 
,0)
-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	FROM pettycashoperationunderwriting POU
	join pettycashoperation PO
		ON POU.idpettycash=PO.idpettycash
		and POU.yoperation=PO.yoperation
		and POU.noperation=PO.noperation
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	AND PO.yrestore IS NULL 
	AND PO.nrestore IS NULL]{V}
,0)
- 
ISNULL(%<underwritingappropriation.amount>%, 0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0)
	from expensevar
	where idexp = %<underwritingappropriation.idexp>%
	AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	and yvar = %<sys_esercizio>%]{V}
,0)
>= 0 

or
%<underwritingappropriation.idunderwriting>% = &<underwritingappropriation.idunderwriting>&




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO037','1','U','underwritingappropriation','N','S','N','N','N',{ts '2013-05-14 19:16:02.940'},'sara','La previsione della voce in spesa di Finanziamento: %<underwritingappropriationview.underwriting>% , UPB: %<underwritingappropriationview.upb>% , Bilancio: %<underwritingappropriationview.codefin>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
	ISNULL(previsionvariation, 0)
	from upbunderwritingtotal 
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	AND idunderwriting = %<underwritingappropriation.idunderwriting>%
]{V} 
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears, 0)   
	from underwritingexpensetotal 
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	and nphase =%<sys_expensefinphase>%]
{V} ,0)
-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	FROM pettycashoperationunderwriting POU
	join pettycashoperation PO
		ON POU.idpettycash=PO.idpettycash
		and POU.yoperation=PO.yoperation
		and POU.noperation=PO.noperation
	WHERE PO.idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND PO.idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND POU.idunderwriting = %<underwritingappropriation.idunderwriting>%
	AND PO.yrestore IS NULL
	AND PO.nrestore IS NULL]{V}
,0)

+ 
ISNULL(&<underwritingappropriation.amount>&, 0)
- 
ISNULL(%<underwritingappropriation.amount>%, 0) 

>= 0 

or
%<underwritingappropriation.idunderwriting>% <> &<underwritingappropriation.idunderwriting>&

or
%<underwritingappropriation.amount>%<&<underwritingappropriation.amount>&
or
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<underwritingappropriation.idexp>%]{I}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO037','2','U','underwritingappropriation','N','S','N','N','N',{ts '2013-05-15 12:32:35.730'},'sara','La previsione della voce in spesa di Finanziamento: %<underwritingappropriationview.underwriting>% , UPB: %<underwritingappropriationview.upb>% , Bilancio: %<underwritingappropriationview.codefin>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbunderwritingtotal 
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
]{V} 
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0)+ISNULL(totalarrears, 0)   
	from underwritingexpensetotal 
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
]{V} 
,0)
-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	FROM pettycashoperationunderwriting POU
	join pettycashoperation PO
		ON POU.idpettycash=PO.idpettycash
		and POU.yoperation=PO.yoperation
		and POU.noperation=PO.noperation
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	AND PO.yrestore IS NULL 
	AND PO.nrestore IS NULL]{V}
,0)


- 
ISNULL(%<underwritingappropriation.amount>%, 0)
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0)
	from expensevar
	where idexp = %<underwritingappropriation.idexp>%
	AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	and yvar = %<sys_esercizio>%]{V}
,0)
>= 0 
or
%<underwritingappropriation.idunderwriting>% = &<underwritingappropriation.idunderwriting>&
or
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<underwritingappropriation.idexp>%]{I}





')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM103','1','U','underwritingappropriation','S','S','S','N','N',{ts '2012-09-17 14:22:08.123'},'sa','E'' possibile modificare i  Finanziamenti associati ad Impegni solo nell''esercizio in cui sono stati creati','S','[select count(*) from expense E   
where E.idexp=%<underwritingappropriation.idexp>%  
and E.ymov <> %<sys_esercizio>%]{I}=0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM104','1','U','underwritingappropriation','S','S','S','N','N',{ts '2013-03-20 11:36:27.407'},'sa','L''importo dell''Impegno c/residuo assegnato a un Finanziamento non può essere inferiore all''importo  finanziato dei relativi Pagamenti 
N.impegno %<underwritingappropriationview.nmov>%
Cod.finanziamento %<underwritingappropriationview.codeunderwriting>%
Importo %<underwritingappropriationview.amount>%
Descrizione: %<underwritingappropriation.description>%','N','[SELECT ET.flag
FROM expense  E
JOIN expensetotal ET
	ON ET.idexp = E.idexp
WHERE  E.idexp = %<underwritingappropriation.idexp>%
AND ET.ayear = %<sys_esercizio>%]{I} & 1 = 0

OR

isnull([SELECT flagcredit from config 
where ayear=%<sys_esercizio>%]{C},''N'')=''N''  
OR
[select isnull(E.topay,-1) from expensecreditproceedsview E   
where E.idexp=%<underwritingappropriation.idexp>%  
and E.idunderwriting=%<underwritingappropriation.idunderwriting>%]{V}>=0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM109','1','U','underwritingappropriation','S','S','S','N','N',{ts '2013-02-07 13:07:31.577'},'sa','Il movimento di spesa non è stato interamente attribuito al/ai Fnanziamento/i.','N','ISNULL(
		[(SELECT ISNULL(SUM(amount),0)
		FROM underwritingappropriation 
		WHERE idexp= %<underwritingappropriation.idexp>%)]{V}
	,0)
+
ISNULL (   [select SUM(amount) from expensevar where
		idexp=%<underwritingappropriation.idexp>%
		and
		idunderwriting is not null
                 ]{V},0)
	=
	ISNULL([SELECT curramount FROM expensetotal
	WHERE ayear = %<sys_esercizio>%  
	AND   idexp= %<underwritingappropriation.idexp>%]{V},0)
OR 
[SELECT assured 
FROM upb  
WHERE idupb = ([select idupb 
		from expenseyear
		where 	ayear = %<sys_esercizio>%
		and idexp=%<underwritingappropriation.idexp>%]{C})]{C} =''S'' 





')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM110','2','U','underwritingappropriation','N','S','N','N','N',{ts '2013-06-06 12:44:22.233'},'nino','La previsione della voce spesa Finanziamento: %<underwritingappropriationview.underwriting>% , UPB: %<underwritingappropriationview.upb>% , Bilancio: %<underwritingappropriationview.codefin>%   è INSUFFICIENTE!','S','[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
from upbunderwritingtotal
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
]{V} 
- 
[SELECT ISNULL(totalcompetency, 0) + 
ISNULL(totalarrears, 0) 
from underwritingexpensetotal
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
and nphase = %<sys_expensefinphase>%]{V} 

+ 
ISNULL(&<underwritingappropriation.amount>&, 0)
- 
ISNULL(%<underwritingappropriation.amount>%, 0) 

>= 0

or
(%<underwritingappropriation.idunderwriting>% <> &<underwritingappropriation.idunderwriting>&) 
or
(%<underwritingappropriation.amount>% < &<underwritingappropriation.amount>&)
OR
(%<sys_expensefinphase>%<> [select nphase from expense where 
			idexp=%<underwritingappropriation.idexp>%]{I})

')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM110','3','U','underwritingappropriation','N','S','N','N','N',{ts '2013-05-16 18:09:07.810'},'sa','La previsione della voce spesa Finanziamento: %<underwritingappropriationview.underwriting>% , UPB: %<underwritingappropriationview.upb>% , Bilancio: %<underwritingappropriationview.codefin>%   è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbunderwritingtotal
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) + 
	ISNULL(totalarrears, 0) 
	from underwritingexpensetotal
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V}
,0)

- 
ISNULL(%<underwritingappropriation.amount>%, 0)

-
ISNULL(
	[SELECT ISNULL(sum(amount), 0)
	from expensevar
	where idexp = %<underwritingappropriation.idexp>%
	AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	and yvar = %<sys_esercizio>%]{V}
,0)
>= 0 
OR
%<underwritingappropriation.idunderwriting>% = &<underwritingappropriation.idunderwriting>&

OR 
(%<sys_expensefinphase>%<> [select nphase from expense where 
			idexp=%<underwritingappropriation.idexp>%]{I})

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM110','4','U','underwritingappropriation','S','N','S','N','N',{ts '2013-05-16 18:09:20.127'},'sa','La previsione di competenza della voce spesa Finanziamento: %<underwritingappropriationview.underwriting>% , UPB: %<underwritingappropriationview.upb>% , Bilancio: %<underwritingappropriationview.codefin>%   è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbunderwritingtotal
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
]{V} 
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) 
from underwritingexpensetotal
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
and nphase = %<sys_expensefinphase>%]{V} ,0)

+ 
ISNULL(&<underwritingappropriation.amount>&, 0)
- 
ISNULL(%<underwritingappropriation.amount>%, 0) 

>= 0 

or
%<underwritingappropriation.idunderwriting>% <> &<underwritingappropriation.idunderwriting>&
or 
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<underwritingappropriation.idexp>%]{I}
or
%<underwritingappropriation.amount>%<&<underwritingappropriation.amount>&

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM110','5','U','underwritingappropriation','S','N','S','N','N',{ts '2013-05-16 18:09:32.893'},'sa','La previsione di competenza della voce spesa Finanziamento: %<underwritingappropriationview.underwriting>% , UPB: %<underwritingappropriationview.upb>% , Bilancio: %<underwritingappropriationview.codefin>%   è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(currentprev,0)+
		ISNULL(previsionvariation, 0)
	from upbunderwritingtotal
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
]{V} 
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) 
	from underwritingexpensetotal
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingappropriation.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	and nphase = %<sys_expensefinphase>%]{V} 
,0)
-
ISNULL(%<underwritingappropriation.amount>%, 0)

-
ISNULL(
	[SELECT ISNULL(sum(amount), 0)
	from expensevar
	where idexp = %<underwritingappropriation.idexp>%
	AND idunderwriting = %<underwritingappropriation.idunderwriting>%
	and yvar = %<sys_esercizio>%]{V}
,0)
>= 0 
or 
[select ymov from expense where 
			idexp=%<underwritingappropriation.idexp>%]{I} <> %<sys_esercizio>%

or
 %<underwritingappropriation.idunderwriting>% = &<underwritingappropriation.idunderwriting>& 
or 
%<sys_expensefinphase>% <> [select nphase from expense where 
			idexp=%<underwritingappropriation.idexp>%]{I}
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM111','1','U','underwritingappropriation','S','S','S','N','N',{ts '2013-03-20 11:39:51.343'},'sa','L''importo dell''Impegno c/competenza assegnato a un Finanziamento non può essere inferiore all''importo  finanziato dei relativi Pagamenti 
N.impegno %<underwritingappropriationview.nmov>%
Cod.finanziamento %<underwritingappropriationview.codeunderwriting>%
Importo %<underwritingappropriationview.amount>%
Descrizione: %<underwritingappropriation.description>%','N','[SELECT ET.flag
FROM expense  E
JOIN expensetotal ET
	ON ET.idexp = E.idexp
WHERE  E.idexp = %<underwritingappropriation.idexp>%
AND ET.ayear = %<sys_esercizio>%]{I} & 1 <> 0

OR

isnull([SELECT flagcredit from config 
where ayear=%<sys_esercizio>%]{C},''N'')=''N''  
OR
[select isnull(E.topay,-1) from expensecreditproceedsview E   
where E.idexp=%<underwritingappropriation.idexp>%  
and E.idunderwriting=%<underwritingappropriation.idunderwriting>%]{V}>=0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO035','1','I','underwritingpayment','S','S','S','N','S',{ts '2013-05-15 11:25:06.337'},'sara','La dotazione incassi di Finanziamento: %<underwritingpaymentview.underwriting>% , UPB: %<underwritingpaymentview.upb>% , Bilancio: %<underwritingpaymentview.codefin>% è INSUFFICIENTE!','N','ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)  
	from upbunderwritingtotal 
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingpayment.idunderwriting>%
]{V}
,0)
- 
ISNULL(
	[SELECT ISNULL(totalcompetency, 0) +ISNULL(totalarrears,0)
	from underwritingexpensetotal 
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingpayment.idunderwriting>%
	and nphase =%<sys_maxexpensephase>%
]{V}
,0)
-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	FROM pettycashoperationunderwriting POU
	join pettycashoperation PO
		ON POU.idpettycash=PO.idpettycash
		and POU.yoperation=PO.yoperation
		and POU.noperation=PO.noperation
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingpayment.idunderwriting>%
	AND PO.yrestore IS NULL 
	AND PO.nrestore IS NULL]{V}
,0)
>= 0 

OR
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		WHERE idexp = %<underwritingpayment.idexp>% 
		AND ayear = %<sys_esercizio>%]{C}
]{C}
= ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO038','1','I','underwritingpayment','S','N','N','N','N',{ts '2013-05-15 12:41:12.197'},'sara','La previsione della voce di spesa Finanziamento: %<underwritingpaymentview.underwriting>% , UPB: %<underwritingpaymentview.upb>% , Bilancio: %<underwritingpaymentview.codefin>% è inferiore alle righe di mandato.','N','ISNULL(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	from upbunderwritingtotal 
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	AND idunderwriting= %<underwritingpayment.idunderwriting>%
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) + ISNULL(totalarrears,0) 
	from underwritingexpensetotal 
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	AND idunderwriting= %<underwritingpayment.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%
]{V} ,0)
-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	WHERE PO.idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND PO.idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND POU.idunderwriting = %<underwritingpayment.idunderwriting>%
	AND PO.yrestore IS NULL 
	AND PO.nrestore IS NULL]{V}
	,0)
-%<underwritingpayment.amount>%

 >= 0 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS007','1','I','underwritingpayment','S','N','S','N','S',{ts '2013-05-13 11:55:57.167'},'sara','La dotazione incassi di Finanziamento: %<underwritingpaymentview.underwriting>% , UPB: %<underwritingpaymentview.upb>% , Bilancio: %<underwritingpaymentview.codefin>% è INSUFFICIENTE!','N','ISNULL(  [SELECT  ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)  
	FROM upbunderwritingtotal
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingpayment.idunderwriting>%
]{V} ,0)
-  
ISNULL(  [SELECT ISNULL(totalcompetency, 0) +isnull(totalarrears,0) 
	FROM underwritingexpensetotal
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingpayment.idunderwriting>%
	 AND nphase =  %<sys_maxexpensephase>%
	]{V} ,0) 
>= 0 

or
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		WHERE idexp = %<underwritingpayment.idexp>% 
		AND ayear = %<sys_esercizio>%]{C}
]{C}
= ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM104','1','I','underwritingpayment','S','S','S','N','N',{ts '2013-03-20 11:36:21.297'},'sa','L''importo dell''Impegno c/residuo assegnato a un Finanziamento non può essere inferiore all''importo  finanziato dei relativi Pagamenti 
N.pagamento %<underwritingpaymentview.nmov>%
Cod.finanziamento %<underwritingpaymentview.codeunderwriting>%
Importo %<underwritingpayment.amount>%
Descrizione: %<underwritingpaymentview.description>%','N','[SELECT ET.flag
FROM expense  E
JOIN expensetotal ET
	ON ET.idexp = E.idexp
WHERE  E.idexp = %<underwritingpayment.idexp>%
AND ET.ayear = %<sys_esercizio>%]{I} & 1 = 0

OR

(isnull([SELECT flagproceeds from config 
where ayear=%<sys_esercizio>%]{C},''N'')=''N''
)
  
OR EXISTS
(select isnull(E.topay,-1) from expensecreditproceedsview E  
join expenselink EL ON EL.idparent =  E.idexp
and EL.nlevel =  %<sys_appropriationphase>%
where EL.idchild =%<underwritingpayment.idexp>%  
and E.idunderwriting=%<underwritingpayment.idunderwriting>%
and isnull(E.topay,-1) >=0 )')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM110','4','I','underwritingpayment','S','N','N','N','N',{ts '2013-05-16 18:11:35.040'},'sa','La previsione di cassa della voce spesa Finanziamento: %<underwritingpaymentview.underwriting>% , UPB: %<underwritingpaymentview.upb>% , Bilancio: %<underwritingpaymentview.codefin>%  è INSUFFICIENTE!','N','(
	(
	ISNULL([SELECT ISNULL(currentsecondaryprev, 0)+ ISNULL(secondaryvariation,0) FROM upbunderwritingtotal
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	and idunderwriting= %<underwritingpayment.idunderwriting>%
	]{V},0)
	-
	ISNULL(
		[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0) FROM
			underwritingexpensetotal
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	and idunderwriting= %<underwritingpayment.idunderwriting>%
	and nphase= %<sys_maxexpensephase>%
				]{V}
			,0)
	) >= 0
)
OR
(%<sys_maxexpensephase>% <> [select nphase from expense where 
			idexp=%<underwritingpayment.idexp>%]{I})

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM111','1','I','underwritingpayment','S','S','S','N','N',{ts '2013-03-20 11:40:29.890'},'sa','L''importo dell''Impegno c/competenza assegnato a un Finanziamento non può essere inferiore all''importo  finanziato dei relativi Pagamenti 
N.pagamento %<underwritingpaymentview.nmov>%
Cod.finanziamento %<underwritingpaymentview.codeunderwriting>%
Importo %<underwritingpayment.amount>%
Descrizione: %<underwritingpaymentview.description>%','N','[SELECT ET.flag
FROM expense  E
JOIN expensetotal ET
	ON ET.idexp = E.idexp
WHERE  E.idexp = %<underwritingpayment.idexp>%
AND ET.ayear = %<sys_esercizio>%]{I} & 1 <> 0

OR

(isnull([SELECT flagproceeds from config 
where ayear=%<sys_esercizio>%]{C},''N'')=''N''
)
  
OR EXISTS
(select isnull(E.topay,-1) from expensecreditproceedsview E  
join expenselink EL ON EL.idparent =  E.idexp
and EL.nlevel =  %<sys_appropriationphase>%
where EL.idchild =%<underwritingpayment.idexp>%  
and E.idunderwriting=%<underwritingpayment.idunderwriting>%
and isnull(E.topay,-1) >=0 )')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO035','3','U','underwritingpayment','S','S','S','N','S',{ts '2013-05-15 11:27:57.380'},'sara','La dotazione incassi di Finanziamento: %<underwritingpaymentview.underwriting>% , UPB: %<underwritingpaymentview.upb>% , Bilancio: %<underwritingpaymentview.codefin>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)  
	from upbunderwritingtotal 
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingpayment.idunderwriting>%
]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) +ISNULL(totalarrears,0)
from underwritingexpensetotal 
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingpayment.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%]{V} ,0)
-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	FROM pettycashoperationunderwriting POU
	join pettycashoperation PO
		ON POU.idpettycash=PO.idpettycash
		and POU.yoperation=PO.yoperation
		and POU.noperation=PO.noperation
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingpayment.idunderwriting>%
	AND PO.yrestore IS NULL 
	AND PO.nrestore IS NULL]{V}
,0)

+ 
ISNULL(&<underwritingpayment.amount>&, 0)
- 
ISNULL(%<underwritingpayment.amount>%, 0) 
>= 0
OR
%<underwritingpayment.idunderwriting>% <> &<underwritingpayment.idunderwriting>& 
OR
%<underwritingpayment.amount>%<&<underwritingpayment.amount>&

OR
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		WHERE idexp = %<underwritingpayment.idexp>% 
		AND ayear = %<sys_esercizio>%]{C}
]{C}
= ''S''
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO035','4','U','underwritingpayment','S','S','S','N','S',{ts '2013-05-15 11:29:19.490'},'sara','La dotazione incassi di Finanziamento: %<underwritingpaymentview.underwriting>% , UPB: %<underwritingpaymentview.upb>% , Bilancio: %<underwritingpaymentview.codefin>% è INSUFFICIENTE!','S','ISNULL(
	[SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)  
	from upbunderwritingtotal 
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingpayment.idunderwriting>%
]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) +ISNULL(totalarrears,0)
from underwritingexpensetotal 
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingpayment.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%]{V} ,0)
-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	FROM pettycashoperationunderwriting POU
	join pettycashoperation PO
		ON POU.idpettycash=PO.idpettycash
		and POU.yoperation=PO.yoperation
		and POU.noperation=PO.noperation
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingpayment.idunderwriting>%
	AND PO.yrestore IS NULL 
	AND PO.nrestore IS NULL]{V}
,0)

- 
ISNULL(%<underwritingpayment.amount>%, 0) 
>= 0
OR
%<underwritingpayment.idunderwriting>% = &<underwritingpayment.idunderwriting>& 
OR
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		WHERE idexp = %<underwritingpayment.idexp>% 
		AND ayear = %<sys_esercizio>%]{C}
]{C}
= ''S''

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO038','1','U','underwritingpayment','S','N','N','N','N',{ts '2013-05-15 12:42:01.253'},'sara','La previsione della voce di spesa Finanziamento: %<underwritingpaymentview.underwriting>% , UPB: %<underwritingpaymentview.upb>% , Bilancio: %<underwritingpaymentview.codefin>% è inferiore alle righe di mandato.','S','ISNULL(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	from upbunderwritingtotal 
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	AND idunderwriting= %<underwritingpayment.idunderwriting>%
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) + ISNULL(totalarrears,0) 
	from underwritingexpensetotal 
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	AND idunderwriting= %<underwritingpayment.idunderwriting>%	
	and nphase = %<sys_maxexpensephase>%
]{V} ,0)
	-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	WHERE PO.idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND PO.idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND POU.idunderwriting = %<underwritingpayment.idunderwriting>%
	AND PO.yrestore IS NULL 
	AND PO.nrestore IS NULL]{V}
	,0)

- 
ISNULL(%<underwritingpayment.amount>%, 0) 
+ 
ISNULL(&<underwritingpayment.amount>&, 0) 

>= 0 

OR
(ISNULL(%<underwritingpayment.idunderwriting>%,0) <> ISNULL(&<underwritingpayment.idunderwriting>&,0))

OR
%<underwritingpayment.amount>%<&<underwritingpayment.amount>&
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('FOECO038','2','U','underwritingpayment','S','N','N','N','N',{ts '2013-05-15 12:42:24.420'},'sara','La previsione della voce di spesa Finanziamento: %<underwritingpaymentview.underwriting>% , UPB: %<underwritingpaymentview.upb>% , Bilancio: %<underwritingpaymentview.codefin>% è inferiore alle righe di mandato.','S','ISNULL(
	[SELECT isnull(currentsecondaryprev,0)+ISNULL(secondaryvariation, 0) 
	from upbunderwritingtotal 
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	AND idunderwriting= %<underwritingpayment.idunderwriting>%
	]{V}
,0)
- 
isnull([SELECT ISNULL(totalcompetency, 0) + ISNULL(totalarrears,0) 
	from underwritingexpensetotal 
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	AND idunderwriting= %<underwritingpayment.idunderwriting>%
	and nphase = %<sys_maxexpensephase>%
]{V} ,0)
	-
ISNULL(
	[SELECT ISNULL(SUM(POU.amount), 0) 
	from pettycashoperation PO
	join pettycashoperationunderwriting POU
		on PO.idpettycash=POU.idpettycash
		and PO.yoperation=POU.yoperation
		and PO.noperation=POU.noperation
	WHERE PO.idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND PO.idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND POU.idunderwriting = %<underwritingpayment.idunderwriting>%
	AND PO.yrestore IS NULL 
	AND PO.nrestore IS NULL]{V}
	,0)
- 
ISNULL(%<underwritingpayment.amount>%, 0) 
>= 0 
OR
ISNULL(%<underwritingpayment.idunderwriting>%,0) = ISNULL(&<underwritingpayment.idunderwriting>&,0)


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS007','1','U','underwritingpayment','S','N','S','N','S',{ts '2013-05-15 11:35:09.417'},'sara','La dotazione incassi di Finanziamento: %<underwritingpaymentview.underwriting>% , UPB: %<underwritingpaymentview.upb>% , Bilancio: %<underwritingpaymentview.codefin>% è INSUFFICIENTE!','S','%<underwritingpayment.amount>%<&<underwritingpayment.amount>&

OR

ISNULL(  [SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)  
	FROM upbunderwritingtotal
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingpayment.idunderwriting>%
]{V} ,0)
-  
ISNULL(  [SELECT ISNULL(totalcompetency, 0) +isnull(totalarrears,0) 
	FROM underwritingexpensetotal
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingpayment.idunderwriting>%
	 AND nphase =  %<sys_maxexpensephase>%
	]{V} ,0) 
+ 
ISNULL(&<underwritingpayment.amount>&, 0)
- 
ISNULL(%<underwritingpayment.amount>%, 0) 
>= 0 
OR
%<underwritingpayment.idunderwriting>% <> &<underwritingpayment.idunderwriting>&
OR
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		WHERE idexp = %<underwritingpayment.idexp>% 
		AND ayear = %<sys_esercizio>%]{C}
]{C}
= ''S''




')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('INCAS007','2','U','underwritingpayment','S','S','S','N','S',{ts '2013-05-15 11:36:35.180'},'sara','La dotazione incassi di Finanziamento: %<underwritingpaymentview.underwriting>% , UPB: %<underwritingpaymentview.upb>% , Bilancio: %<underwritingpaymentview.codefin>% è INSUFFICIENTE!','S','ISNULL(  [SELECT ISNULL(totproceedspart, 0) + 
	ISNULL(proceedsvariation, 0)  
	FROM upbunderwritingtotal
	WHERE  idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	   AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingpayment.idunderwriting>%
]{V} ,0)
-  
ISNULL(  [SELECT ISNULL(totalcompetency, 0) +isnull(totalarrears,0) 
	FROM underwritingexpensetotal
	WHERE idfin = [SELECT idfin 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{I}
	 AND idupb = [SELECT idupb 
			FROM expenseyear 
			WHERE idexp = %<underwritingpayment.idexp>% 
			AND ayear = %<sys_esercizio>%]{C}
	 AND idunderwriting = %<underwritingpayment.idunderwriting>%
	 AND nphase =  %<sys_maxexpensephase>%
	]{V} ,0) 
- 
ISNULL(%<underwritingpayment.amount>%, 0) 
-
ISNULL(
	[SELECT ISNULL(sum(amount), 0)
	from expensevar
	where idexp = %<expenseyear.idexp>%
	AND idunderwriting = %<underwritingpayment.idunderwriting>%
	and yvar = %<sys_esercizio>%]{V}
,0)
>= 0 
OR
%<underwritingpayment.idunderwriting>% = &<underwritingpayment.idunderwriting>&
OR
[select assured from upb
	where idupb=
	[SELECT idupb 
		from expenseyear 
		WHERE idexp = %<underwritingpayment.idexp>% 
		AND ayear = %<sys_esercizio>%]{C}
]{C}
= ''S''





')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM104','1','U','underwritingpayment','S','S','S','N','N',{ts '2013-03-20 11:36:14.017'},'sa','L''importo dell''Impegno c/residuo assegnato a un Finanziamento non può essere inferiore all''importo  finanziato dei relativi Pagamenti
N.pagamento %<underwritingpaymentview.nmov>%
Cod.finanziamento %<underwritingpaymentview.codeunderwriting>%
Importo %<underwritingpayment.amount>% 
Descrizione: %<underwritingpaymentview.description>%','N','[SELECT ET.flag
FROM expense  E
JOIN expensetotal ET
	ON ET.idexp = E.idexp
WHERE  E.idexp = %<underwritingpayment.idexp>%
AND ET.ayear = %<sys_esercizio>%]{I} & 1 = 0

OR

(isnull([SELECT flagproceeds from config 
where ayear=%<sys_esercizio>%]{C},''N'')=''N'' )
OR EXISTS
(select isnull(E.topay,-1) from expensecreditproceedsview E  
join expenselink EL ON EL.idparent =  E.idexp
and EL.nlevel =  %<sys_appropriationphase>%
where EL.idchild =%<underwritingpayment.idexp>%  
and E.idunderwriting=%<underwritingpayment.idunderwriting>%
and isnull(E.topay,-1) >=0 )')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM110','1','U','underwritingpayment','S','N','N','N','N',{ts '2013-05-16 18:13:46.500'},'sa','La previsione di cassa della voce spesa Finanziamento: %<underwritingpaymentview.underwriting>% , UPB: %<underwritingpaymentview.upb>% , Bilancio: %<underwritingpaymentview.codefin>%  è INSUFFICIENTE!','N','(
		(
			ISNULL(
				[SELECT
				ISNULL(currentsecondaryprev, 0)+isnull(secondaryvariation,0) 
				FROM upbunderwritingtotal
			WHERE  idfin = [SELECT idfin 
					FROM expenseyear 
					WHERE idexp = %<underwritingpayment.idexp>% 
					AND ayear = %<sys_esercizio>%]{I}
			   AND idupb = [SELECT idupb 
					FROM expenseyear 
					WHERE idexp = %<underwritingpayment.idexp>% 
					AND ayear = %<sys_esercizio>%]{C}
			and idunderwriting= %<underwritingpayment.idunderwriting>%
				]{V}
			,0)
			- 
			ISNULL(		
				[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0) FROM
					underwritingexpensetotal
				WHERE  idfin = [SELECT idfin FROM expenseyear  WHERE idexp = %<underwritingpayment.idexp>%  	AND ayear = %<sys_esercizio>%]{I}
				   AND idupb = [SELECT idupb  FROM expenseyear  WHERE idexp = %<underwritingpayment.idexp>%  	AND ayear = %<sys_esercizio>%]{C}
				and idunderwriting= %<underwritingpayment.idunderwriting>%
				and nphase= %<sys_maxexpensephase>%
				]{V}
			,0)
		) >= 0
)
OR

ISNULL(%<underwritingpayment.idunderwriting>%,0) <> ISNULL(&<underwritingpayment.idunderwriting>&,0)

OR 
(%<sys_maxexpensephase>% <> [select nphase from expense where 
			idexp=%<underwritingpayment.idexp>%]{I})
or
%<underwritingpayment.amount>%<=&<underwritingpayment.amount>&

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM110','6','U','underwritingpayment','S','N','N','N','N',{ts '2013-05-16 18:12:05.447'},'sa','La previsione di cassa della voce spesa Finanziamento: %<underwritingpaymentview.underwriting>% , UPB: %<underwritingpaymentview.upb>% , Bilancio: %<underwritingpaymentview.codefin>%  è INSUFFICIENTE!','N','(
	(
		ISNULL(
			[SELECT
				ISNULL(currentsecondaryprev, 0)+isnull(secondaryvariation,0) 
				FROM upbunderwritingtotal
			WHERE  idfin = [SELECT idfin 
					FROM expenseyear 
					WHERE idexp = %<underwritingpayment.idexp>% 
					AND ayear = %<sys_esercizio>%]{I}
			   AND idupb = [SELECT idupb 
					FROM expenseyear 
					WHERE idexp = %<underwritingpayment.idexp>% 
					AND ayear = %<sys_esercizio>%]{C}
			and idunderwriting= %<underwritingpayment.idunderwriting>%
				]{V}
			,0)
		- 
		ISNULL(
			[SELECT ISNULL(totalcompetency,0)+ISNULL(totalarrears,0) FROM
					underwritingexpensetotal
				WHERE  idfin = [SELECT idfin FROM expenseyear  WHERE idexp = %<underwritingpayment.idexp>%  	AND ayear = %<sys_esercizio>%]{I}
				   AND idupb = [SELECT idupb  FROM expenseyear  WHERE idexp = %<underwritingpayment.idexp>%  	AND ayear = %<sys_esercizio>%]{C}
				and idunderwriting= %<underwritingpayment.idunderwriting>%
				and nphase=  %<sys_maxexpensephase>%
			]{V}
			,0)
	) >= 0
)
OR

ISNULL(%<underwritingpayment.idunderwriting>%,0) = ISNULL(&<underwritingpayment.idunderwriting>&,0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM111','1','U','underwritingpayment','S','S','S','N','N',{ts '2013-03-20 11:40:34.843'},'sa','L''importo dell''Impegno c/competenza assegnato a un Finanziamento non può essere inferiore all''importo finanziato dei relativi Pagamenti 
N.pagamento %<underwritingpaymentview.nmov>%
Cod.finanziamento %<underwritingpaymentview.codeunderwriting>%
Importo %<underwritingpayment.amount>%
Descrizione: %<underwritingpaymentview.description>%','N','[SELECT ET.flag
FROM expense  E
JOIN expensetotal ET
	ON ET.idexp = E.idexp
WHERE  E.idexp = %<underwritingpayment.idexp>%
AND ET.ayear = %<sys_esercizio>%]{I} & 1 <> 0

OR

(isnull([SELECT flagproceeds from config 
where ayear=%<sys_esercizio>%]{C},''N'')=''N'' )
OR EXISTS
(select isnull(E.topay,-1) from expensecreditproceedsview E  
join expenselink EL ON EL.idparent =  E.idexp
and EL.nlevel =  %<sys_appropriationphase>%
where EL.idchild =%<underwritingpayment.idexp>%  
and E.idunderwriting=%<underwritingpayment.idunderwriting>%
and isnull(E.topay,-1) >=0 )')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','U','uniconfig','S','S','S','N','N',{ts '2007-11-15 10:14:03.860'},'XXNINO','La fase spesa bilancio non può essere cambiata in quanto esistono movimenti di spesa collegati','S','&<uniconfig.expensefinphase>& = %<uniconfig.expensefinphase>%
or 
[(SELECT count(*) 
from expense 
where nphase = %<sys_expensefinphase>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','U','uniconfig','S','S','S','N','N',{ts '2007-11-15 10:14:13.437'},'XXNINO','La fase spesa creditore non può essere cambiata in quanto
esistono movimenti di spesa collegati','S','&<uniconfig.expenseregphase>& = %<uniconfig.expenseregphase>%
or 
[(SELECT count(*) 
from expense 
where nphase = %<sys_expenseregphase>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','U','uniconfig','N','N','N','N','N',{ts '2007-11-15 10:15:58.843'},'XXNINO','La fase entrata bilancio non può essere cambiata in quanto esistono movimenti di entrata collegati','S','&<uniconfig.incomefinphase>& = %<uniconfig.incomefinphase>%
or 
[(SELECT count(*) 
from income 
where nphase = %<sys_incomefinphase>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','U','uniconfig','N','N','N','N','N',{ts '2007-11-15 10:16:14.530'},'XXNINO','La fase entrata creditore non può essere cambiata in quanto esistono movimenti di entrata collegati','S','&<uniconfig.incomeregphase>& = %<uniconfig.incomeregphase>%
or 
[(SELECT count(*) 
from income 
where nphase = %<sys_incomeregphase>%)]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN020','1','D','unifiedtax','S','S','S','N','N',{ts '2009-03-04 17:19:23.667'},'SARA','Non si può cancellare un dettaglio ritenute centralizzate se questo è inserito nell''F24EP.','S','( %<idunifiedf24ep>% IS NULL )

')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('RITEN020','1','D','unifiedtaxcorrige','S','S','S','N','N',{ts '2009-03-05 12:44:21.170'},'SARA','Non si può cancellare una correzione di un dettaglio ritenute centralizzate se questo è inserito nell''F24EP.','S','( %<idunifiedf24ep>% IS NULL )


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','unit','S','S','S','N','N',{ts '2010-07-22 14:39:31.703'},'SA','Non si può cancellare l''unità di carico/scarico: " %<unit.description>% "se vi sono articoli che la utilizzano. ','S','[(SELECT COUNT(*) FROM list
	WHERE idunit = %<unit.idunit>%)]{I} = 0
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono UPB dipendenti dall'' UPB %<title>%','S','[SELECT COUNT(*) FROM upb WHERE paridupb = %<upb.idupb>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','2','D','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono movimenti di entrata collegati all''UPB %<title>%','S','[SELECT COUNT(*) FROM incomeyear WHERE idupb = %<upb.idupb>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','3','D','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono movimenti di spesa collegati all''UPB %<title>%','S','[SELECT COUNT(*) FROM expenseyear WHERE idupb = %<upb.idupb>%]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','4','D','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono operazioni del fondo economale imputate all''UPB %<title>%','S','[SELECT COUNT(*)
FROM pettycashoperation
WHERE idupb = %<upb.idupb>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','5','D','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono variazioni di bilancio collegate all''UPB %<title>%','S','[SELECT COUNT(*) FROM finvardetail WHERE idupb =%<upb.idupb>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','6','D','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono dettagli del buono d''ordine collegati all''UPB %<title>%','S','[SELECT COUNT(*) FROM mandatedetail WHERE idupb = %<upb.idupb>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','7','D','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono dettagli del documento IVA collegati all''UPB %<title>%','S','[SELECT COUNT(*) FROM invoicedetail WHERE idupb = %<upb.idupb>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','8','D','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono classificazioni associate all''UPB %<title>%','S','[SELECT COUNT(*) FROM upbsorting WHERE idupb = %<upb.idupb>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','9','D','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono previsioni di bilancio dell''UPB %<title>%','S','[SELECT COUNT(*) FROM finyear WHERE idupb = %<upb.idupb>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','10','D','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono classificazioni automatiche dei movimenti di spesa collegate all''UPB %<title>%','S','[SELECT COUNT(*) FROM autoexpensesorting WHERE idupb = %<upb.idupb>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','11','D','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono classificazioni automatiche dei movimenti di entrata collegate all''UPB %<title>%','S','[SELECT COUNT(*) FROM autoincomesorting WHERE idupb = %<upb.idupb>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','12','D','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono filtri sulle classificazioni automatiche dei movimenti di entrata collegati all''UPB %<title>%','S','[SELECT COUNT(*) FROM sortingincomefilter WHERE idupb = %<upb.idupb>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','13','D','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono filtri sulle classificazioni automatiche dei movimenti di spesa collegati all''UPB %<title>%','S','[SELECT COUNT(*) FROM sortingexpensefilter WHERE idupb = %<upb.idupb>%]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','14','D','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono titpi di buono d''ordine collegati all''UPB %<title>%','S','[SELECT COUNT(*) FROM mandatekind WHERE idupb = %<upb.idupb>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','15','D','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono dettagli di scritture in Partita Doppia collegate all''UPB %<title>%','S','[SELECT COUNT(*) 
FROM entrydetail
WHERE idupb = %<upb.idupb>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','16','D','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono dettagli del contratto collegati all''UPB %<title>%','S','[SELECT COUNT(*) FROM estimatedetail WHERE idupb = %<upb.idupb>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','17','D','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Cancellazione Impossibile! Esistono titpi di contratto collegati all''UPB %<title>%','S','[SELECT COUNT(*) FROM estimatekind WHERE idupb = %<upb.idupb>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','18','D','upb','S','S','S','N','N',{ts '2012-08-01 12:14:30.237'},'sa','Cancellazione Impossibile! Esistono assegnazioni crediti collegati all''UPB %<title>%','S','[SELECT COUNT(*) FROM creditpart WHERE idupb = %<upb.idupb>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','19','D','upb','S','S','S','N','N',{ts '2012-07-31 15:59:13.967'},'sa','Cancellazione Impossibile! Esistono assegnazioni di cassa collegati all''UPB %<title>%','S','[SELECT COUNT(*) FROM proceedspart WHERE idupb = %<upb.idupb>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM038','1','I','upb','S','S','S','N','N',{ts '2006-09-07 12:40:54.437'},'Nino07032012','Il totale dell''accertato è inferiore al totale dell''impegnato per l''UPB scelto','S','ISNULL(%<upb.previousassessment>%,0) >= ISNULL(%<upb.previousappropriation>%,0)
OR
%<upb.assured>% <> ''S''')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','I','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Codice dell''UPB %<title>% già esistente','S','[SELECT COUNT(*) FROM upb WHERE codeupb = %<upb.codeupb>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','I','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','L''ordine di stampa dell''UPB %<title>% già esistente','S','[SELECT COUNT(*) FROM upb WHERE printingorder = %<upb.printingorder>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM038','1','U','upb','S','S','S','S','N',{ts '2007-09-01 10:38:04.813'},'NINO','Il totale dell''accertato è inferiore al totale dell''impegnato per l''UPB scelto','S','%<upb.assured>% <> ''S''
OR
ISNULL(
	[SELECT SUM(amount) FROM incomeyear
		JOIN income on income.idinc=incomeyear.idinc
		JOIN incometotal on incometotal.idinc=incomeyear.idinc
					AND incometotal.ayear=incomeyear.ayear
	WHERE idupb = %<upb.idupb>%
	AND income.nphase = %<sys_assessmentphase>%
	AND (incometotal.flag & 1)=0
]{V}
,0)
+
ISNULL(
	[SELECT SUM(incomevar.amount)
	FROM incomevar
	JOIN incomeyear
			ON incomevar.idinc = incomeyear.idinc
			AND incomeyear.ayear=%<sys_esercizio>%
	JOIN income ON income.idinc=incomevar.idinc
	WHERE incomevar.yvar <= %<sys_esercizio>%
	AND incomeyear.idupb = %<upb.idupb>%
	AND income.nphase = %<sys_assessmentphase>%
]{V}
,0)
+
ISNULL(%<upb.previousassessment>%,0)
+
ISNULL(
	[SELECT SUM(creditvariation)
	FROM upbtotal
	WHERE idupb = %<upb.idupb>%]{V}
,0)
>=
ISNULL(
	[SELECT SUM(amount)
	FROM expenseyear
		JOIN expense on expense.idexp=expenseyear.idexp
		JOIN expensetotal on expensetotal.idexp=expenseyear.idexp 
			AND expensetotal.ayear= expenseyear.ayear
	WHERE idupb = %<upb.idupb>%
	AND expense.nphase = %<sys_appropriationphase>%
	AND (expensetotal.flag & 1) = 0
]{V}
,0)
+
ISNULL(
	[SELECT SUM(expensevar.amount) FROM expensevar
		JOIN expenseyear
			ON expensevar.idexp = expenseyear.idexp
			AND expenseyear.ayear= %<sys_esercizio>%
		JOIN expense on expense.idexp = expensevar.idexp
	WHERE expensevar.yvar <= %<sys_esercizio>%
	AND expenseyear.idupb = %<upb.idupb>%
	AND expense.nphase = %<sys_appropriationphase>%
]{V}
,0)
+
ISNULL(%<upb.previousappropriation>%,0)
OR
(ISNULL(%<upb.previousappropriation>%,0) = ISNULL(&<upb.previousappropriation>&,0)
AND ISNULL(%<upb.previousassessment>%,0) = ISNULL(&<upb.previousassessment>&,0))
')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM039','1','U','upb','S','S','S','N','N',{ts '2007-10-13 19:51:20.967'},'NINO','Esistono movimenti di spesa imputati a %<upb.codeupb>% - %<upb.title>% il cui  responsabile scelto è differente da quello dell''UPB','S','(ISNULL(%<upb.idman>%,0)= ISNULL(&<upb.idman>&,0))
OR
(%<upb.idman>% is null)
OR
[SELECT COUNT(*) 
	 FROM  expense 
  	 JOIN  expenseyear
	 ON    expenseyear.idexp=expense.idexp 
	 AND   expenseyear.ayear = %<sys_esercizio>% 
	 WHERE idupb = %<upb.idupb>% 
       AND   ISNULL(idman,0) <>ISNULL(%<upb.idman>%,0)
	 AND  ISNULL(idman,0)<>0
        ]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM039','2','U','upb','S','S','S','N','N',{ts '2007-10-13 19:51:34.483'},'NINO','Esistono movimenti di entrata  imputati a %<upb.codeupb>% - %<upb.title>% il cui  responsabile scelto è differente da quello dell''UPB','S','(ISNULL(%<upb.idman>%,0)= ISNULL(&<upb.idman>&,0))
OR
(%<upb.idman>% is null)
OR
[SELECT COUNT(*) 
	 FROM  income 
  	 JOIN  incomeyear
	 ON    incomeyear.idinc = income.idinc 
	 AND   incomeyear.ayear = %<sys_esercizio>% 
	 WHERE idupb = %<upb.idupb>% 
       AND   ISNULL(idman,0) <> ISNULL(%<upb.idman>%,0)
	 AND  ISNULL(idman,0)<>0
       ]{I}  = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM105','1','U','upb','S','S','S','N','N',{ts '2012-09-20 12:21:13.263'},'sa','Non è possibile modificare il Codice e l''Ordine di Stampa dell''UPB %<upb.title>% in quanto è già usato in movimenti finanziari di Spesa','S','(
	(ISNULL(%<upb.codeupb>%,0)= ISNULL(&<upb.codeupb>&,0))
	AND
	(ISNULL(%<upb.printingorder>%,0)= ISNULL(&<upb.printingorder>&,0))
)
OR
(
	[SELECT COUNT(*) 
		 FROM expenseyear
		 WHERE idupb = %<upb.idupb>% 
	]{I} = 0
	
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM105','2','U','upb','S','S','S','N','N',{ts '2012-09-20 11:19:43.847'},'sa','Non è possibile modificare il Codice e l''Ordine di Stampa dell''UPB %<upb.title>% in quanto è già usato in previsione','S','(
	(ISNULL(%<upb.codeupb>%,0)= ISNULL(&<upb.codeupb>&,0))
	AND
	(ISNULL(%<upb.printingorder>%,0)= ISNULL(&<upb.printingorder>&,0))
)
OR
(
	[SELECT COUNT(*) 
		 FROM  finvardetail
		 WHERE idupb = %<upb.idupb>% 
	]{I} = 0
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM105','3','U','upb','S','S','S','N','N',{ts '2012-09-20 12:21:34.023'},'sa','Non è possibile modificare il Codice e l''Ordine di Stampa dell''UPB %<upb.title>% in quanto è già usato in movimenti finanziari di Entrata','S','(
	(ISNULL(%<upb.codeupb>%,0)= ISNULL(&<upb.codeupb>&,0))
	AND
	(ISNULL(%<upb.printingorder>%,0)= ISNULL(&<upb.printingorder>&,0))
)
OR
(
	[SELECT COUNT(*) 
		 FROM  incomeyear
		 WHERE idupb = %<upb.idupb>% 
	]{I} = 0
	
)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM117','1','U','upb','S','S','S','N','N',{ts '2013-07-17 16:27:57.167'},'sa','Non è possibile modificare il cassiere associato all''UPB %<upb.title>% perchè esiste un''operazione di girofondo avente come origine questo cassiere tramite un''operazione di storno.','S','ISNULL(%<upb.idtreasurer>%,0)  = ISNULL(&<upb.idtreasurer>&,0)
OR
[SELECT  COUNT(*)
 FROM moneytotransfer_available_view
WHERE idupbincome= ISNULL(%<upb.idupb>%,'''')
AND      kind = ''storno''
AND      idtreasurerincome= ISNULL(&<upb.idtreasurer>&,0)
and       ISNULL(moneytransfered,0) >0
]{I} = 0


 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM117','2','U','upb','S','S','S','N','N',{ts '2013-07-17 16:29:10.143'},'sa','Non è possibile modificare il cassiere associato all''UPB %<upb.title>% perchè esiste un''operazione di girofondo avente questo cassiere come destinazione  tramite un''operazione di storno.','S','ISNULL(%<upb.idtreasurer>%,0)  = ISNULL(&<upb.idtreasurer>&,0)
OR
[SELECT  COUNT(*)
 FROM moneytotransfer_available_view
WHERE idupb= ISNULL(%<upb.idupb>%,'''')
AND      kind = ''storno''
AND      idtreasurer= ISNULL(&<upb.idtreasurer>&,0)
and       ISNULL(moneytransfered,0) >0
]{I} = 0


 


')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM117','4','U','upb','S','S','S','N','N',{ts '2013-07-17 16:29:22.627'},'sa','Non è possibile modificare il cassiere associato all''UPB %<upb.title>% perchè esiste un''operazione di girofondo avente questo cassiere come destinazione  tramite un''assegnazione di cassa.','S','ISNULL(%<upb.idtreasurer>%,0)  = ISNULL(&<upb.idtreasurer>&,0)
OR
[SELECT  COUNT(*)
 FROM moneytotransfer_available_view
WHERE idupb= ISNULL(%<upb.idupb>%,'''')
AND      kind = ''assegnazione''
AND      idtreasurer= ISNULL(&<upb.idtreasurer>&,0)
and       ISNULL(moneytransfered,0) >0
]{I} = 0


 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','1','U','upb','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','L''ordine di stampa dell''UPB %<title>% già esistente','S','[SELECT COUNT(*) FROM upb
WHERE printingorder = %<upb.printingorder>%
AND idupb <> %<upb.idupb>%]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM001','2','U','upb','S','S','S','N','N',{ts '2013-02-28 17:17:00.643'},'sa','Esiste già un UPB con codice  %<codeupb>% .','S','[SELECT COUNT(*) FROM upb
WHERE codeupb = %<upb.codeupb>%
AND idupb <> %<upb.idupb>%]{I} = 0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('ANPRE001','1','D','wageaddition','S','S','S','N','N',{ts '2007-09-01 10:43:41.017'},'NINO','Non è possibile cancellare il contratto dipendente %<ncon>% / %<ycon>% perché è stata generata la relativa Anagrafe delle Prestazioni.
','S','[(select count(*)
from serviceregistry 
where substring(idrelated,1,7) = ''wageadd''
and substring(idrelated,9,4)= convert(varchar(4),%<wageaddition.ycon>%)
and substring(idrelated,14,4)= convert(varchar(4),%<wageaddition.ncon>%))]{I} 
= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM002','1','D','wageaddition','S','S','S','N','N',{ts '2007-09-01 10:43:48.233'},'NINO','Cancellazione Impossibile! Esistono movimenti di spesa collegati al contratto dipendente %<ncon>% / %<ycon>%','S','[(SELECT count(*) 
from expensewageaddition 
where ycon = %<wageaddition.ycon>%
and ncon = %<wageaddition.ncon>%)]{I} 
= 0 ')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('CLOSE005','1','I','wageaddition','S','S','S','N','N',{ts '2009-02-24 10:07:43.750'},'SARA','Non è possibile inserire il nuovo contratto %<wageaddition.ycon>%  perchè i residui dell''esercizio  %<wageaddition.ycon>% sono stati già trasferiti. ','S','(ISNULL(  [SELECT flag  FROM accountingyear  
WHERE ayear = %<wageaddition.ycon>%]{I} ,0) & 0x0F) < 5
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DIPEN001','1','I','wageaddition','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Inserire il codice fiscale per il percipiente %<registry.title>%','S','[SELECT COUNT(*) FROM registry
WHERE idreg = %<wageaddition.idreg>%
AND cf IS NOT NULL
]{I} > 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DIPEN002','1','I','wageaddition','S','S','S','N','N',{ts '2007-11-14 14:02:03.343'},'SARA','Per %<registry.title>% deve esistere un indirizzo di residenza (predefinito) valido alla data del %<wageaddition.stop>%','S','--Deve esistere un indirizzo di residenza
--per il percipiente alla data di inizio del contratto
[(SELECT count(*) from registryaddress 
JOIN address
 ON registryaddress.idaddresskind = address.idaddress
where registryaddress.idreg = %<wageaddition.idreg>%
and %<wageaddition.start>% 
between registryaddress.start and ISNULL(registryaddress.stop, %<wageaddition.start>%)
and address.codeaddress = ''07_SW_DEF''
)]{I}>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DIPEN002','2','I','wageaddition','S','S','S','N','N',{ts '2007-11-14 14:01:33.453'},'SARA','Per un percipiente residente all''estero deve esistere un domicilio fiscale italiano valido alla data del %<wageaddition.stop>%','S','--Alla data di inizio del contratto
--deve esistere un domicilio fiscale italiano
--per il percipiente residente all''estero
[(SELECT count(*) from registryaddress 
JOIN address
 ON registryaddress.idaddresskind = address.idaddress
where registryaddress.idreg = %<wageaddition.idreg>%
and %<wageaddition.start>% 
	between registryaddress.start and ISNULL(registryaddress.stop, %<wageaddition.start>%)
and address.codeaddress = ''07_SW_DEF''
 and idnation is not null
)]{I} = 0 or
[(SELECT count(*) from registryaddress
JOIN address
 ON registryaddress.idaddresskind = address.idaddress
where registryaddress.idreg = %<wageaddition.idreg>%
and %<wageaddition.start>% 
	between registryaddress.start and ISNULL(registryaddress.stop, %<wageaddition.start>%)
and address.codeaddress = ''07_SW_DOM'' and idcity is not null
)]{I} > 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DIPEN005','1','I','wageaddition','S','S','S','N','N',{ts '2008-10-09 10:45:22.640'},'SARA','La prestazione scelta va svolta da soggetti residenti in Italia, invece il percipiente %<registry.title>% ha la Residenza o Sede Amministrativa all''estero.','S','([SELECT COUNT(*) 
  FROM service 
 WHERE idser = %<wageaddition.idser>%
  AND ISNULL(flagforeign,''N'') <> ''S'']{I}=0)
OR
([SELECT COUNT(*) 
  FROM registryaddress 
  JOIN address 
    ON registryaddress.idaddresskind = address.idaddress
WHERE idreg = %<wageaddition.idreg>%
AND   codeaddress = ''07_SW_DEF''
AND
(
ISNULL(%<wageaddition.start>%,{d ''1900-01-01''})  BETWEEN ISNULL(start,{d ''1900-01-01''})  AND ISNULL(stop,{d ''2079-01-01''})
OR  
ISNULL(%<wageaddition.stop>%,{d ''2079-01-01''})  BETWEEN ISNULL(start,{d ''1900-01-01''})  AND ISNULL(stop,{d ''2079-01-01''})
)
AND ISNULL(flagforeign,''N'') = ''S''
]{I}=0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('SYSTM014','1','I','wageaddition','S','S','S','N','N',{ts '2009-02-26 15:19:58.377'},'ASSISTENZA','Non è possibile salvare un compenso a dipendente con numero negativo','N','%<wageaddition.ncon>%>0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DIPEN001','1','U','wageaddition','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Inserire il codice fiscale per il percipiente %<registry.title>%','S','[SELECT COUNT(*) FROM registry
WHERE idreg = %<wageaddition.idreg>%
AND cf IS NOT NULL
]{I} > 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DIPEN002','1','U','wageaddition','S','S','S','N','N',{ts '2007-11-14 14:00:48.297'},'SARA','Per %<registry.title>% deve esistere un indirizzo di residenza (predefinito) valido alla data del %<wageaddition.start>% ','S','--Deve esistere un indirizzo di residenza
--per il percipiente alla data di inizio del contratto
[(SELECT count(*) from registryaddress 
JOIN address
 ON registryaddress.idaddresskind = address.idaddress
where registryaddress.idreg = %<wageaddition.idreg>%
and %<wageaddition.start>% 
	between registryaddress.start and ISNULL(registryaddress.stop, %<wageaddition.start>%)
and address.codeaddress = ''07_SW_DEF''
)]{I}>0')
GO

INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DIPEN002','2','U','wageaddition','S','S','S','N','N',{ts '2007-11-14 14:01:45.110'},'SARA','Per un percipiente residente all''estero deve esistere un domicilio fiscale italiano valido alla data del %<wageaddition.start>%','S','--Alla data di inizio del contratto
--deve esistere un domicilio fiscale italiano
--per il percipiente residente all''estero
[(SELECT count(*) from registryaddress 
JOIN address
 ON registryaddress.idaddresskind = address.idaddress
where registryaddress.idreg = %<wageaddition.idreg>%
and %<wageaddition.start>% 
	between registryaddress.start and ISNULL(registryaddress.stop, %<wageaddition.start>%)
and address.codeaddress = ''07_SW_DEF''
and idnation is not null
)]{I} = 0 or
[(SELECT count(*) from registryaddress
JOIN address
 ON registryaddress.idaddresskind = address.idaddress
where registryaddress.idreg = %<wageaddition.idreg>%
and %<wageaddition.start>% 
	between registryaddress.start and ISNULL(registryaddress.stop, %<wageaddition.start>%)
and address.codeaddress = ''07_SW_DOM'' and idcity is not null
)]{I} > 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DIPEN004','1','U','wageaddition','S','S','S','N','N',{ts '2007-09-01 10:44:47.813'},'NINO','L''importo lordo del contratto dipendente %<ycon>% %<ncon>% è minore dei movimenti di spesa che lo contabilizzano','S','%<wageaddition.feegross>%
- 
[SELECT ISNULL(sum(expenseyear.amount), 0) 
from expense 
join expenseyear
on expense.idexp = expenseyear.idexp
join expensetotal
on expenseyear.idexp = expensetotal.idexp
and expenseyear.ayear = expensetotal.ayear
join expensewageaddition 
on expensewageaddition.idexp = expense.idexp 
where expensewageaddition.ycon = %<wageaddition.ycon>% 
and expensewageaddition.ncon = %<wageaddition.ncon>%
and (expensetotal.flag & 2) = 2]{V}
-
[SELECT ISNULL(sum(expensevar.amount), 0) 
from expensevar 
join expensewageaddition 
on expensewageaddition.idexp = expensevar.idexp 
WHERE ISNULL(expensevar.autokind,0)<>4
and expensewageaddition.ycon = %<wageaddition.ycon>% 
and expensewageaddition.ncon = %<wageaddition.ncon>%]{V} 
>= 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DIPEN005','1','U','wageaddition','S','S','S','N','N',{ts '2008-10-09 10:46:13.077'},'SARA','La prestazione scelta va svolta da soggetti residenti in Italia, invece il percipiente %<registry.title>% ha la Residenza o Sede Amministrativa all''estero.','S','([SELECT COUNT(*) 
  FROM service 
 WHERE idser = %<wageaddition.idser>%
  AND ISNULL(flagforeign,''N'') <> ''S'']{I}=0)
OR
(
%<wageaddition.idser>% =  &<wageaddition.idser>&
AND 
%<wageaddition.start>% =  &<wageaddition.start>&
AND
%<wageaddition.stop>%  =  &<wageaddition.stop>&
AND
%<wageaddition.idreg>%  =  &<wageaddition.idreg>&
)
OR
([SELECT COUNT(*) 
  FROM registryaddress 
  JOIN address 
    ON registryaddress.idaddresskind = address.idaddress
WHERE idreg = %<wageaddition.idreg>%
AND   codeaddress = ''07_SW_DEF''
AND
(
ISNULL(%<wageaddition.start>%,{d ''1900-01-01''})  BETWEEN ISNULL(start,{d ''1900-01-01''})  AND ISNULL(stop,{d ''2079-01-01''})
OR  
ISNULL(%<wageaddition.stop>%,{d ''2079-01-01''})  BETWEEN ISNULL(start,{d ''1900-01-01''})  AND ISNULL(stop,{d ''2079-01-01''})
)
AND ISNULL(flagforeign,''N'') = ''S''
]{I}=0)
')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM015','1','U','wageaddition','S','S','S','N','N',{ts '2006-01-01 00:00:00.000'},'Software and more','Non si può modificare il percipiente in un contratto dipendente totalmente o parzialmente contabilizzato.','S','([SELECT count(*) 
FROM expensewageaddition
WHERE expensewageaddition.ycon = %<wageaddition.ycon>% AND
expensewageaddition.ncon = %<wageaddition.ncon>%]{I}
=
0)
or
(&<wageaddition.idreg>& = %<wageaddition.idreg>%)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('MOVIM035','1','U','wageaddition','S','S','S','N','N',{ts '2007-08-31 19:53:46.860'},'NINO','Non può essere cambiata la prestazione del contratto dipendente %<wageaddition.ncon>% / %<wageaddition.ycon>% perché è stato già contabilizzato','S','[SELECT COUNT(*)
FROM expensewageaddition
JOIN expenselink
ON expensewageaddition.idexp = expenselink.idparent
JOIN expenselast
ON expenselast.idexp = expenselink.idchild
WHERE ycon = %<wageaddition.ycon>%
AND ncon = %<wageaddition.ncon>%]{I} = 0
OR
(
%<wageaddition.idser>% = &<wageaddition.idser>&
AND
%<wageaddition.adate>% = &<wageaddition.adate>&
)')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DIPEN006','1','D','wageadditiontax','S','S','S','N','N',{ts '2011-04-08 11:09:41.703'},'sara','Attenzione si sta effettuando una cancellazione di una ritenuta su un contratto contabilizzato ','N','--post
 [SELECT COUNT(*) FROM expensewageaddition 
	WHERE expensewageaddition.ycon = %<wageadditiontax.ycon>%
	AND expensewageaddition.ncon = %<wageadditiontax.ncon>%
 ]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DIPEN006','1','I','wageadditiontax','S','S','S','N','N',{ts '2011-04-08 10:03:27.377'},'sara','Attenzione si sta effettuando un inserimento di una ritenuta su un contratto contabilizzato ','N','--post
 [SELECT COUNT(*) FROM expensewageaddition 
	WHERE expensewageaddition.ycon = %<wageadditiontax.ycon>%
	AND expensewageaddition.ncon = %<wageadditiontax.ncon>%
 ]{I} = 0')
INSERT INTO [auditcheck] (idaudit,idcheck,opkind,tablename,flag_both,flag_cash,flag_comp,flag_credit,flag_proceeds,lt,lu,message,precheck,sqlcmd) VALUES ('DIPEN006','1','U','wageadditiontax','S','S','S','N','N',{ts '2011-04-08 11:03:09.217'},'sara','Attenzione si sta effettuando una modifica ad una ritenuta su un contratto contabilizzato ','N','--post

 [SELECT COUNT(*) FROM expensewageaddition 
	WHERE expensewageaddition.ycon = %<wageadditiontax.ycon>%
	AND expensewageaddition.ncon = %<wageadditiontax.ncon>%
 ]{I} = 0

OR
(
isnull(%<wageadditiontax.employtax>%,0) = 
isnull(&<wageadditiontax.employtax>&,0)
AND
isnull(%<wageadditiontax.admintax>%,0) = 
isnull(&<wageadditiontax.admintax>&,0)
AND
isnull(%<wageadditiontax.taxable>%,0) = 
isnull(&<wageadditiontax.taxable>&,0)
AND
isnull(%<wageadditiontax.adminrate>%,0) = 
isnull(&<wageadditiontax.adminrate>&,0)
AND
isnull(%<wageadditiontax.employrate>%,0) = 
isnull(&<wageadditiontax.employrate>&,0)
)

')
GO

-- FINE GENERAZIONE SCRIPT --

