<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Xceed.Grid</name>
  </assembly>
  <members>
    <member name="T:Xceed.Editors.ColumnSortDirection">
      <summary>Value indicating the direction in which a column is sorted</summary>
    </member>
    <member name="T:Xceed.Editors.ColumnWidthAdjustment">
      <summary>Value representing the style with which the width of the columns will be adjusted.</summary>
    </member>
    <member name="T:Xceed.Editors.CompareType">
      <summary>Value representing how string representations of items (<see cref="T:Xceed.Editors.ComboBoxItem"></see>) contained in a <see cref="T:Xceed.Editors.WinComboBox"></see> control are considered.</summary>
    </member>
    <member name="T:Xceed.Editors.ImagePosition">
      <summary>Value representing the position on an image in an editor.</summary>
    </member>
    <member name="T:Xceed.Editors.SearchMode">
      <summary>Value representing the mode to use when searching for items in the <A href="Xceed.Grid~Xceed.Editors.WinComboBox.html">WinComboBox</A> control.</summary>
    </member>
    <member name="T:Xceed.Editors.WinComboBox.SearchPattern">
      <summary>Value representing the pattern to use when searching for a string within the WinComboBox's control <see cref="P:Xceed.Editors.WinComboBox.DropDownControl"></see>.</summary>
    </member>
    <member name="T:Xceed.Editors.ColumnInfo">
      <summary>Represents a column in the <see cref="T:Xceed.Editors.WinComboBox"></see> control's dropdown.</summary>
    </member>
    <member name="T:Xceed.Editors.ColumnInfoList">
      <summary>Contains a list of <see cref="T:Xceed.Editors.ColumnInfo"></see> objects.</summary>
    </member>
    <member name="T:Xceed.Editors.ComboBoxItem">
      <summary>Represents an item in the <see cref="T:Xceed.Editors.WinComboBox"></see> control's dropdown.</summary>
    </member>
    <member name="T:Xceed.Editors.ComboBoxItemList">
      <summary>Contains a list of <see cref="T:Xceed.Editors.ComboBoxItem"></see> objects.</summary>
    </member>
    <member name="T:Xceed.Editors.ComboBoxTextBoxArea">
      <summary>Class which represents the inner textbox of the <see cref="T:Xceed.Editors.WinComboBox"></see> control.</summary>
    </member>
    <member name="T:Xceed.Editors.QueryImageEventArgs">
      <summary>Provides information about the image to be painted in a <see cref="T:Xceed.Editors.WinComboBox"></see>.</summary>
    </member>
    <member name="T:Xceed.Editors.QueryItemTextEventArgs">
      <summary>Provides the information necessary to format the <see cref="P:Xceed.Editors.WinComboBox.SelectedItem"></see>'s text in the <see cref="T:Xceed.Editors.WinComboBox"></see>.</summary>
    </member>
    <member name="T:Xceed.Editors.WinComboBox">
      <summary>The WinComboBox class represents an extensible and themable multi-column combobox for Windows Forms.</summary>
    </member>
    <member name="M:Xceed.Editors.ColumnInfo.#ctor(System.String,System.Type,System.Int32,System.Int32,Xceed.Editors.ColumnSortDirection)">
      <summary>Initializes a new instance of the ColumnInfo class specifying various characteristics.</summary>
    </member>
    <member name="M:Xceed.Editors.ColumnInfo.#ctor(System.String,System.Type,System.Int32,System.Int32,Xceed.Editors.ColumnSortDirection,System.Boolean)">
      <summary>Initializes a new instance of the ColumnInfo class specifying various characteristics.</summary>
    </member>
    <member name="M:Xceed.Editors.ColumnInfo.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the ColumnInfo class specifying its name and data type.</summary>
    </member>
    <member name="M:Xceed.Editors.ColumnInfo.#ctor(System.String,System.Type,System.Int32,Xceed.Editors.ColumnSortDirection)">
      <summary>Initializes a new instance of the ColumnInfo class specifying various characteristics.</summary>
    </member>
    <member name="M:Xceed.Editors.ColumnInfo.#ctor(System.String,System.Type,System.Int32)">
      <summary>Initializes a new instance of the ColumnInfo class specifying various characteristics.</summary>
    </member>
    <member name="P:Xceed.Editors.ColumnInfo.DataType">
      <summary>Gets or sets the data type of the items in the column. The specified datatype will be 
            ignored if the <see cref="T:Xceed.Editors.WinComboBox"></see> is bound to a datasource.</summary>
    </member>
    <member name="P:Xceed.Editors.ColumnInfo.Name">
      <summary>Gets or set the name of the column.</summary>
    </member>
    <member name="P:Xceed.Editors.ColumnInfo.SortDirection">
      <summary>Gets or sets the direction in which the column is sorted.</summary>
    </member>
    <member name="P:Xceed.Editors.ColumnInfo.SortIndex">
      <summary>Gets or sets the order in which the column is sorted.</summary>
    </member>
    <member name="P:Xceed.Editors.ColumnInfo.Visible">
      <summary>Gets or sets a boolean value indicating if the column is visible.</summary>
    </member>
    <member name="P:Xceed.Editors.ColumnInfo.Width">
      <summary>Gets or sets the width of the column in pixels</summary>
    </member>
    <member name="M:Xceed.Editors.ColumnInfoList.Add(Xceed.Editors.ColumnInfo)">
      <summary>Adds a <see cref="T:Xceed.Editors.ColumnInfo"></see> object to the list.</summary>
      <returns>The index at which the new item was inserted.</returns>
    </member>
    <member name="M:Xceed.Editors.ColumnInfoList.AddRange(Xceed.Editors.ColumnInfo[])">
      <summary>Adds the <see cref="T:Xceed.Editors.ColumnInfo"></see> objects to the end of the list.</summary>
    </member>
    <member name="M:Xceed.Editors.ColumnInfoList.Clear">
      <summary>Removes all items from the list.</summary>
    </member>
    <member name="M:Xceed.Editors.ColumnInfoList.Contains(Xceed.Editors.ColumnInfo)">
      <summary>Retrieves a boolean value indicating if the item exists in the list.</summary>
      <returns>true if the item is found in the list; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Editors.ColumnInfoList.GetNames">
      <summary>Retrieves a string arary containing the column names of each <see cref="T:Xceed.Editors.ColumnInfo"></see> object in the list.</summary>
      <returns>A string array containing the column names of each <see cref="T:Xceed.Editors.ColumnInfo"></see> object in the list.</returns>
    </member>
    <member name="M:Xceed.Editors.ColumnInfoList.IndexOf(Xceed.Editors.ColumnInfo)">
      <summary>Searches for the specified item in the list and returns the zero-based
            index of the first occurrence.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="columnInfo"></see> 
            within the entire list, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Editors.ColumnInfoList.Insert(System.Int32,Xceed.Editors.ColumnInfo)">
      <summary>Inserts the item in the list at the specified index.</summary>
    </member>
    <member name="M:Xceed.Editors.ColumnInfoList.OnClear(System.Boolean@)">
      <summary>Performs additional custom processes when clearing the contents of the list.</summary>
    </member>
    <member name="M:Xceed.Editors.ColumnInfoList.OnClearComplete">
      <summary>Performs additional custom processing when clearing the contents of the list.</summary>
    </member>
    <member name="M:Xceed.Editors.ColumnInfoList.OnInsert(System.Int32@,System.Object,System.Boolean@)">
      <summary>Performs additional custom processing before inserting a new <see cref="T:Xceed.Editors.ColumnInfo"></see> into the list.</summary>
    </member>
    <member name="M:Xceed.Editors.ColumnInfoList.OnInsertComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processing after inserting a new <see cref="T:Xceed.Editors.ColumnInfo"></see> into the list.</summary>
    </member>
    <member name="M:Xceed.Editors.ColumnInfoList.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processing after removing a <see cref="T:Xceed.Editors.ColumnInfo"></see> from the list.</summary>
    </member>
    <member name="M:Xceed.Editors.ColumnInfoList.Remove(Xceed.Editors.ColumnInfo)">
      <summary>Removes the first occurrence of <see cref="columnInfo"></see> from the list.</summary>
    </member>
    <member name="M:Xceed.Editors.ColumnInfoList.RemoveAt(System.Int32)">
      <summary>Removes the item at the specified index.</summary>
    </member>
    <member name="P:Xceed.Editors.ColumnInfoList.Item(System.String)">
      <summary>Gets the column that corresponds to <see cref="columnName"></see>.</summary>
    </member>
    <member name="P:Xceed.Editors.ColumnInfoList.Item(System.Int32)">
      <summary>Gets the column at the specified index.</summary>
    </member>
    <member name="M:Xceed.Editors.ComboBoxItem.#ctor(System.Object[])">
      <summary>Initializes a new instance of the ComboBoxItem class specifying the values that the item contains.</summary>
    </member>
    <member name="M:Xceed.Editors.ComboBoxItem.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current ComboBoxItem.</summary>
      <returns>trueif the specified object is equal to the current ComboBoxItem; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Editors.ComboBoxItem.GetHashCode">
      <summary>Serves as a hash function for the ComboBoxItem, suitable for use in hashing algorithms 
            and data structures like a hash table.</summary>
      <returns>A hash code for the current ComboBoxItem.</returns>
    </member>
    <member name="P:Xceed.Editors.ComboBoxItem.ValueCount">
      <summary>Gets the number of values contained in the item.</summary>
    </member>
    <member name="P:Xceed.Editors.ComboBoxItem.Values">
      <summary>Gets the values contained within the item.</summary>
    </member>
    <member name="P:Xceed.Editors.ComboBoxItem.Item(System.Int32)">
      <summary>Gets the value at the specified index.</summary>
    </member>
    <member name="P:Xceed.Editors.ComboBoxItem.Item(System.String)">
      <summary>Gets the value at the specified column name.</summary>
    </member>
    <member name="M:Xceed.Editors.ComboBoxItemList.AddRange(System.Collections.ICollection)">
      <summary>Adds the specified values to the end of the list.</summary>
    </member>
    <member name="M:Xceed.Editors.ComboBoxItemList.Clear">
      <summary>Removes all items from the list.</summary>
    </member>
    <member name="M:Xceed.Editors.ComboBoxItemList.CopyTo(System.Array,System.Int32)">
      <summary>Copies the items of the list to an array, starting at a particular array index.</summary>
    </member>
    <member name="M:Xceed.Editors.ComboBoxItemList.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the list.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator"></see> that can be used to iterate through the list.</returns>
    </member>
    <member name="M:Xceed.Editors.ComboBoxItemList.IndexOf(Xceed.Editors.ComboBoxItem)">
      <summary>Searches for the specified <see cref="T:Xceed.Editors.ComboBoxItem"></see> in the list and returns the zero-based
            index of the first occurrence.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="item"></see> 
            within the entire list, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Editors.ComboBoxItemList.Insert(System.Int32,Xceed.Editors.ComboBoxItem)">
      <summary>Inserts a <see cref="T:Xceed.Editors.ComboBoxItem"></see> into the list at the specified index.</summary>
    </member>
    <member name="M:Xceed.Editors.ComboBoxItemList.Remove(Xceed.Editors.ComboBoxItem)">
      <summary>Removes the first occurrence of <see cref="item"></see> from the list.</summary>
    </member>
    <member name="M:Xceed.Editors.ComboBoxItemList.RemoveAt(System.Int32)">
      <summary>Removes the item at the specified index.</summary>
    </member>
    <member name="M:Xceed.Editors.ComboBoxItemList.Add(Xceed.Editors.ComboBoxItem)">
      <summary>Adds a <see cref="T:Xceed.Editors.ComboBoxItem"></see> to the list.</summary>
      <returns>The index at which the new item was added.</returns>
    </member>
    <member name="M:Xceed.Editors.ComboBoxItemList.Add(System.Object[])">
      <summary>Adds the specified values to the <see cref="T:Xceed.Editors.WinComboBox"></see> as a single <see cref="T:Xceed.Editors.ComboBoxItem"></see>.</summary>
    </member>
    <member name="M:Xceed.Editors.ComboBoxItemList.Contains(Xceed.Editors.ComboBoxItem)">
      <summary>Retrieves a boolean value indicating if the item exists in the list.</summary>
      <returns>true if the <see cref="T:Xceed.Editors.ComboBoxItem"></see> is found in the list; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Editors.ComboBoxItemList.Contains(System.Object[])">
      <summary>Retrieves a boolean value indicating if the items exists in the list.</summary>
      <returns>true if the items are found in the list; false otherwise.</returns>
    </member>
    <member name="P:Xceed.Editors.ComboBoxItemList.ColumnCount">
      <summary>Gets the number of columns in the parent <see cref="T:Xceed.Editors.WinComboBox"></see> control's dropdown.</summary>
    </member>
    <member name="P:Xceed.Editors.ComboBoxItemList.Count">
      <summary>Gets the number of items contained in the list.</summary>
    </member>
    <member name="P:Xceed.Editors.ComboBoxItemList.IsSynchronized">
      <summary>Gets a boolean value indicating if access to the list is synchronized (thread-safe).</summary>
    </member>
    <member name="P:Xceed.Editors.ComboBoxItemList.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:Xceed.Editors.ComboBoxItem"></see> at the specified index.</summary>
    </member>
    <member name="P:Xceed.Editors.ComboBoxItemList.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the list.</summary>
    </member>
    <member name="M:Xceed.Editors.ComboBoxTextBoxArea.Clone">
      <summary>Creates a shallow copy of the control.</summary>
      <returns>An <see cref="T:System.Object"></see> representing the shallow copy of the control.</returns>
    </member>
    <member name="M:Xceed.Editors.ComboBoxTextBoxArea.IsInputKey(System.Windows.Forms.Keys)">
      <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</summary>
      <returns>true if the specified key is a regular input key; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Editors.ComboBoxTextBoxArea.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.ComboBoxTextBoxArea.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyPress"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.ComboBoxTextBoxArea.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseWheel"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.ComboBoxTextBoxArea.OnRawTextChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.TextBoxArea.RawTextChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.ComboBoxTextBoxArea.PaintBordersCore(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Editors.ComboBoxTextBoxArea.PaintImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image)">
      <summary>Paints the <see cref="image"></see> in the <see cref="destinationRectangle"></see> using
            the provided <see cref="graphics"></see>.</summary>
    </member>
    <member name="M:Xceed.Editors.ComboBoxTextBoxArea.SetMaskCore(System.String)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Editors.ComboBoxTextBoxArea.ValidateTextCore(System.String,System.Boolean)">
      <summary>Validates that the specified text can be parsed into a valid value for the combobox.</summary>
    </member>
    <member name="M:Xceed.Editors.ComboBoxTextBoxArea.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages.</summary>
    </member>
    <member name="P:Xceed.Editors.ComboBoxTextBoxArea.Mask">
      <summary>Gets or sets the mask applied to the textbox's text.</summary>
    </member>
    <member name="P:Xceed.Editors.ComboBoxTextBoxArea.MaskPromptChar">
      <summary>Gets or sets the character used to prompt a user for input.</summary>
    </member>
    <member name="M:Xceed.Editors.QueryImageEventArgs.#ctor(System.Drawing.Image)">
      <summary>Initializes a new instance of the QueryImageEventArgs class specifying the image to be painted in the <see cref="T:Xceed.Editors.WinComboBox"></see>.</summary>
    </member>
    <member name="P:Xceed.Editors.QueryImageEventArgs.Image">
      <summary>Gets or sets the image to be painted in the <see cref="T:Xceed.Editors.WinComboBox"></see>.</summary>
    </member>
    <member name="M:Xceed.Editors.QueryItemTextEventArgs.#ctor(Xceed.Editors.ComboBoxItem,System.String)">
      <summary>Initializes a new instance of the QueryItemTextEventArgs class.</summary>
    </member>
    <member name="P:Xceed.Editors.QueryItemTextEventArgs.DisplayFormat">
      <summary>Gets the format with which the <see cref="P:Xceed.Editors.WinComboBox.SelectedItem"></see> is displayed in the <see cref="T:Xceed.Editors.WinComboBox"></see>.</summary>
    </member>
    <member name="P:Xceed.Editors.QueryItemTextEventArgs.Item">
      <summary>Gets the <see cref="T:Xceed.Editors.ComboBoxItem"></see> currently selected in the <see cref="T:Xceed.Editors.WinComboBox"></see>'s dropdown.</summary>
    </member>
    <member name="P:Xceed.Editors.QueryItemTextEventArgs.Text">
      <summary>Gets or sets the <see cref="P:Xceed.Editors.WinComboBox.SelectedItem"></see>'s text to display in the
            <see cref="T:Xceed.Editors.WinComboBox"></see>.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.BeginInit">
      <summary>Signals the beginning of a batch modification process.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.Clone">
      <summary>Creates a shallow copy of the control.</summary>
      <returns>An <see cref="T:System.Object"></see> representing the shallow copy of the control.</returns>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.CreateDefaultDropDownControl">
      <summary>Creates the default <see cref="P:Xceed.Editors.WinComboBox.DropDownControl"></see>.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Control"></see> representing the default <see cref="P:Xceed.Editors.WinComboBox.DropDownControl"></see>.</returns>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.CreateTextBoxArea">
      <summary>Creates the <see cref="P:Xceed.Editors.WinComboBox.TextBoxArea"></see> to which will be contained by the 
            WinComboBox control.</summary>
      <returns>A reference to a <see cref="P:Xceed.Editors.WinComboBox.TextBoxArea"></see> representing the TextBoxArea
            contained by the WinComboBox control.</returns>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.EndInit">
      <summary>Signals the end of a batch modification process.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnAllowFreeTextChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.AllowFreeTextChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnColumnWidthAdjustmentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.ColumnWidthAdjustmentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnCompareTypeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.CompareTypeChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnDataBindingChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.DataBindingChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnDataMemberChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.DataMemberChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnDataSourceChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.DataSourceChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnDisplayFormatChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.DisplayFormatChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnDroppedDownChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinTextBox.DroppedDownChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnImageAlignmentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.ImageAlignmentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnImageMemberChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.ImageMemberChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnImagePaddingChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.ImagePaddingChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnImagePositionChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.ImagePositionChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnImageSizeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.ImageSizeChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnImageStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.ImageStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnIntegralHeightChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.IntegralHeightChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnItemHeightChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.ItemHeightChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnMaxDropDownItemsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.MaxDropDownItemsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnPreserveImageAspectRatioChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.PreserveImageAspectRatioChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnQueryImage(Xceed.Editors.QueryImageEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.QueryImage"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnQueryItemText(Xceed.Editors.QueryItemTextEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.QueryItemText"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnSearchModeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.SearchModeChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnSelectedIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.SelectedIndexChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnSelectedItemChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.SelectedItemChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnSelectedValueChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.SelectedValueChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.OnValueMemberChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Editors.WinComboBox.ValueMemberChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.ResetAllowFreeText">
      <summary>Resets the value of the <see cref="P:Xceed.Editors.WinComboBox.AllowFreeText"></see> property to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultAllowFreeText"></see>.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.ResetColumnWidthAdjustment">
      <summary>Resets the value of the <see cref="P:Xceed.Editors.WinComboBox.ColumnWidthAdjustment"></see> property to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultColumnWidthAdjustment"></see>.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.ResetCompareType">
      <summary>Resets the value of the <see cref="P:Xceed.Editors.WinComboBox.CompareType"></see> property to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultCompareType"></see>.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.ResetDisplayFormat">
      <summary>Resets the value of the <see cref="P:Xceed.Editors.WinComboBox.DisplayFormat"></see> property to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultDisplayFormat"></see>.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.ResetImageAlignment">
      <summary>Resets the value of the <see cref="P:Xceed.Editors.WinComboBox.ImageAlignment"></see> property to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultImageAlignment"></see>.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.ResetImageMember">
      <summary>Resets the value of the <see cref="P:Xceed.Editors.WinComboBox.ImageMember"></see> property to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultImageMember"></see>.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.ResetImagePadding">
      <summary>Resets the value of the <see cref="P:Xceed.Editors.WinComboBox.ImagePadding"></see> property to its default value,
            <see cref="P:Xceed.Editors.WinComboBox.DefaultImagePadding"></see>.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.ResetImagePosition">
      <summary>Resets the value of the <see cref="P:Xceed.Editors.WinComboBox.ImagePosition"></see> property to its default value,
            <see cref="P:Xceed.Editors.WinComboBox.DefaultImagePosition"></see>.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.ResetImageSize">
      <summary>Resets the value of the <see cref="P:Xceed.Editors.WinComboBox.ImageSize"></see> property to its default value,
            <see cref="P:Xceed.Editors.WinComboBox.DefaultImageSize"></see>.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.ResetImageStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Editors.WinComboBox.ImageStyle"></see> property to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultImageStyle"></see>.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.ResetItemHeight">
      <summary>Resets the value of the <see cref="P:Xceed.Editors.WinComboBox.ItemHeight"></see> property to its 
            default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultItemHeight"></see>.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.ResetMaxDropDownItems">
      <summary>Resets the value of the <see cref="P:Xceed.Editors.WinComboBox.MaxDropDownItems"></see> property to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultMaxDropDownItems"></see>.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.ResetPreserveImageAspectRatio">
      <summary>Resets the value of the <see cref="P:Xceed.Editors.WinComboBox.PreserveImageAspectRatio"></see> property
            to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultPreserveImageAspectRatio"></see>.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.ResetSearchMode">
      <summary>Resets the value of the <see cref="P:Xceed.Editors.WinComboBox.SearchMode"></see> property to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultSearchMode"></see>.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.ResetValueMember">
      <summary>Resets the value of the <see cref="P:Xceed.Editors.WinComboBox.ValueMember"></see> property to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultValueMember"></see>.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.SetDataBinding(System.Object,System.String)">
      <summary>Sets the <see cref="P:Xceed.Editors.WinComboBox.DataSource"></see> and <see cref="P:Xceed.Editors.WinComboBox.DataMember"></see> properties 
            at run time.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.SetDropDownButtonDefaults(Xceed.Editors.WinButton)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.SetDropDownControlCore(System.Windows.Forms.Control)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.Dispose(System.Boolean)">
      <summary>Releases all resources used by the control.</summary>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.Find(System.Object,System.String)">
      <summary>Searches for specific value in a column.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="value"></see> in <see cref="columnName"></see>. If -1, the value was not found.</returns>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.Find(System.Object,System.Int32,System.String)">
      <summary>Searches for specific value in a column at the specified starting index.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="value"></see> in <see cref="columnName"></see>. If -1, the value was not found.</returns>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.Find(System.String,System.Int32,System.String,Xceed.Editors.WinComboBox+SearchPattern,Xceed.Editors.CompareType)">
      <summary>Searches for a string in a column at the specified starting index.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="test"></see> in <see cref="columnName"></see>. If -1, the value was not found.</returns>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.Find(System.String)">
      <summary>Returns the index of the comboBoxItem which would be displayed as the passed parameter.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="displayText"></see>. If -1, the value was not found.</returns>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.Find(System.String,Xceed.Editors.WinComboBox+SearchPattern)">
      <summary>Returns the index of the comboBoxItem which would be displayed as the passed parameter.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="displayText"></see>. If -1, the value was not found.</returns>
    </member>
    <member name="M:Xceed.Editors.WinComboBox.Find(System.String,Xceed.Editors.WinComboBox+SearchPattern,Xceed.Editors.CompareType)">
      <summary>Returns the index of the comboBoxItem which would be displayed as the passed parameter.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="displayText"></see>. If -1, the value was not found.</returns>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.AllowFreeText">
      <summary>Gets or sets a value indicating if text other than combobox values can be entered into the combobox.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.Columns">
      <summary>Gets a list representing the collection of the columns contained in the WinComboBox.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.ColumnWidthAdjustment">
      <summary>Gets or sets a <see cref="P:Xceed.Editors.WinComboBox.ColumnWidthAdjustment"></see> value defining how the widths of the columns
            in the combobox's dropdown are adjusted.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.CompareType">
      <summary>Gets or sets a value indicating how string representations of items (<see cref="T:Xceed.Editors.ComboBoxItem"></see>) 
            contained in the combobox are considered.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.DataMember">
      <summary>Gets or sets the table to bind to within the object returned by the <see cref="P:Xceed.Editors.WinComboBox.DataSource"></see> property.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.DataSource">
      <summary>Gets or sets the data source used to populate the combobox.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.DefaultAllowFreeText">
      <summary>Gets the default value of the <see cref="P:Xceed.Editors.WinComboBox.AllowFreeText"></see> property.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.DefaultColumnWidthAdjustment">
      <summary>Gets the default value of the <see cref="P:Xceed.Editors.WinComboBox.ColumnWidthAdjustment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.DefaultCompareType">
      <summary>Gets the default value of the <see cref="P:Xceed.Editors.WinComboBox.CompareType"></see> property.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.DefaultDisplayFormat">
      <summary>Gets the default value of the <see cref="P:Xceed.Editors.WinComboBox.DisplayFormat"></see> property.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.DefaultImageAlignment">
      <summary>Gets the default value of the <see cref="P:Xceed.Editors.WinComboBox.ImageAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.DefaultImageMember">
      <summary>Gets the default value of the <see cref="P:Xceed.Editors.WinComboBox.ImageMember"></see> property.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.DefaultImagePadding">
      <summary>Gets the default value of the <see cref="P:Xceed.Editors.WinComboBox.ImagePadding"></see> property.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.DefaultImagePosition">
      <summary>Gets the default value of the <see cref="P:Xceed.Editors.WinComboBox.ImagePosition"></see> property.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.DefaultImageSize">
      <summary>Gets the default value of the <see cref="P:Xceed.Editors.WinComboBox.ImageSize"></see> property.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.DefaultImageStyle">
      <summary>Gets the default value of the <see cref="P:Xceed.Editors.WinComboBox.ImageStyle"></see> property.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.DefaultItemHeight">
      <summary>Gets the default value of the <see cref="P:Xceed.Editors.WinComboBox.ItemHeight"></see> property.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.DefaultMaxDropDownItems">
      <summary>Gets the default value of the <see cref="P:Xceed.Editors.WinComboBox.MaxDropDownItems"></see> property.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.DefaultPreserveImageAspectRatio">
      <summary>Gets the default value of the <see cref="P:Xceed.Editors.WinComboBox.PreserveImageAspectRatio"></see> property.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.DefaultSearchMode">
      <summary>Gets the default value of the <see cref="P:Xceed.Editors.WinComboBox.SearchMode"></see> property.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.DefaultValueMember">
      <summary>Gets the default value of the <see cref="P:Xceed.Editors.WinComboBox.ValueMember"></see> property.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.DisplayFormat">
      <summary>Gets or sets the format with which the <A href="Xceed.Grid~Xceed.Editors.WinComboBox~SelectedItem.html">SelectedItem</A> is displayed in the combobox.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.ImageAlignment">
      <summary>Gets or sets the alignment of the WinComboBox's image.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.ImageMember">
      <summary>Gets or sets a string that specifies the field of the data source from which to draw the image.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.ImagePadding">
      <summary>Gets or sets the padding surrounding the image.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.ImagePosition">
      <summary>Gets or sets the position of the image in the WinComboBox.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.ImageSize">
      <summary>Gets or sets the size of the image.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.ImageStyle">
      <summary>Gets or sets the style with which the image is displayed.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.IntegralHeight">
      <summary>Gets or sets a boolean value indicating if the height of the control should be adjusted to completely display the last visible item in the dropdown.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.ItemHeight">
      <summary>Gets or sets the height, in pixels, of each item in the combobox.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.Items">
      <summary>Gets a list representing the collection of the items contained in the WinComboBox.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.MaxDropDownItems">
      <summary>Gets or sets the maximum number of items that can be shown in the combobox's dropdown.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.PreserveImageAspectRatio">
      <summary>Gets or sets a boolean value indicating if the image should preserve its aspect ratio.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.SearchMode">
      <summary>Gets or sets a value indicating the mode to use when searching for items in the combobox.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.SelectedIndex">
      <summary>Gets the zero-based index of the <see cref="P:Xceed.Editors.WinComboBox.SelectedItem"></see> in the <see cref="P:Xceed.Editors.WinComboBox.Items"></see> collection.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.SelectedItem">
      <summary>Gets or sets the <see cref="T:Xceed.Editors.ComboBoxItem"></see> currently selected in the combobox's dropdown.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.SelectedValue">
      <summary>Gets or sets the value that is currently selected in the <see cref="P:Xceed.Editors.WinComboBox.SelectedItem"></see>.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.ValueMember">
      <summary>Gets or sets a string that specifies the field of the data source from which to draw the value.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.DropDownControl">
      <summary>Gets the Xceed.Grid.GridControl used as the WinComboBox control's dropdown.</summary>
    </member>
    <member name="P:Xceed.Editors.WinComboBox.TextBoxArea">
      <summary>Gets the <see cref="T:Xceed.Editors.ComboBoxTextBoxArea"></see> responsible for the text area of the WinComboBox control.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.AllowFreeTextChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.AllowFreeText"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.ColumnWidthAdjustmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.ColumnWidthAdjustment"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.CompareTypeChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.CompareType"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.DataBindingChanged">
      <summary>Raised when the values of the <see cref="P:Xceed.Editors.WinComboBox.DataSource"></see> or <see cref="P:Xceed.Editors.WinComboBox.DataMember"></see> properties
            are changed, or when the <see cref="M:Xceed.Editors.WinComboBox.SetDataBinding(System.Object,System.String)"></see> method is called.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.DataMemberChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.DataMember"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.DataSourceChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.DataSource"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.DisplayFormatChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.DisplayFormat"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.ImageAlignmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.ImageAlignment"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.ImageMemberChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.ImageMember"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.ImagePaddingChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.ImagePadding"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.ImagePositionChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.ImagePosition"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.ImageSizeChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.ImageSize"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.ImageStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.ImageStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.IntegralHeightChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.IntegralHeight"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.ItemHeightChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.ItemHeight"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.MaxDropDownItemsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.MaxDropDownItems"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.PreserveImageAspectRatioChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.PreserveImageAspectRatio"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.QueryImage">
      <summary>Raised when the <see cref="P:Xceed.Editors.WinComboBox.ImagePosition"></see> property is set to ImagePosition.Left or ImagePosition.Right and 
            allows the image that is to be painted to be changed or modified.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.QueryItemText">
      <summary>Raised when the value of the <see cref="E:Xceed.Editors.WinComboBox.QueryItemText"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.SearchModeChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.SearchMode"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.SelectedIndexChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.SelectedIndex"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.SelectedItemChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.SelectedItem"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.SelectedValueChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.SelectedValue"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Editors.WinComboBox.ValueMemberChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Editors.WinComboBox.ValueMember"></see> property is changed.</summary>
    </member>
    <member name="T:Xceed.Editors.QueryImageEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Editors.WinComboBox.QueryImage"></see> event.</summary>
    </member>
    <member name="T:Xceed.Editors.QueryItemTextEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Editors.WinComboBox.QueryItemText"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.ICellEditor">
      <summary>
        <B>OBSOLETE: The ICellEditor interface is obsolete and has been replaced by the <see cref="T:Xceed.Grid.Editors.CellEditorManager"></see> class. </B>Provides the functionality for a control to be used as a cell editor.</summary>
    </member>
    <member name="T:Xceed.Grid.ICellViewer">
      <summary>
        <B>OBSOLETE: The ICellViewer interface is obsolete and has been replaced by the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see> class. </B>Provides the functionality for a control to be used to view to content of cells.</summary>
    </member>
    <member name="M:Xceed.Grid.ICellEditor.ActivateControl(Xceed.Grid.Cell)">
      <summary>Activates the control that will be used to edit the content of a cell.</summary>
    </member>
    <member name="M:Xceed.Grid.ICellEditor.GetControlValue">
      <summary>Retrieves the value assigned to the control.</summary>
      <returns>A reference to the value assigned to the control.</returns>
    </member>
    <member name="M:Xceed.Grid.ICellEditor.GetFittedHeight(Xceed.Grid.AutoHeightMode)">
      <summary>Retrieves a value representing the fitted height of the cell editor in pixels.</summary>
      <returns>A value representing the fitted height of the cell editor in pixels.
            If -1, then no fitted height is required or desired.</returns>
    </member>
    <member name="M:Xceed.Grid.ICellEditor.GetFittedWidth">
      <summary>Retrieves a value representing the fitted width of the cell editor in pixels.</summary>
      <returns>A value representing the fitted width of the cell editor in pixels.
            If -1, then no fitted width is required or desired.</returns>
    </member>
    <member name="M:Xceed.Grid.ICellEditor.IsActivationChar(System.Char)">
      <summary>Retrieves a boolean value indicating if the control is activated by the char.</summary>
      <returns>true if the control is activated by the char; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.ICellEditor.IsActivationKey(System.Windows.Forms.Keys)">
      <summary>Retrieves a boolean value indicating if the control is activated by the key.</summary>
      <returns>true if the control is activated by the key; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.ICellEditor.IsInputChar(System.Char)">
      <summary>Determines if a character is an input character that the control recognizes.</summary>
      <returns>true if the character should be sent directly to the control and not preprocessed; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.ICellEditor.IsInputKey(System.Windows.Forms.Keys)">
      <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</summary>
      <returns>true if the specified key is a regular input key; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.ICellEditor.SetControlValue(System.Object,System.IFormatProvider)">
      <summary>Assigns a value to the control.</summary>
    </member>
    <member name="P:Xceed.Grid.ICellEditor.Control">
      <summary>Gets the control used to edit cells.</summary>
    </member>
    <member name="P:Xceed.Grid.ICellEditor.HandleActivationClick">
      <summary>Gets or sets a boolean value indicating if the control should handle the mouse click once it is activated.</summary>
    </member>
    <member name="P:Xceed.Grid.ICellEditor.InPlace">
      <summary>Gets a boolean value indicating if the rectangle of the cell editor should be painted with the same size as the cell's client rectangle.</summary>
    </member>
    <member name="M:Xceed.Grid.ICellViewer.GetFittedHeight(Xceed.Grid.Cell,Xceed.Grid.AutoHeightMode)">
      <summary>Retrieves a value representing the fitted height of the cell viewer in pixels.</summary>
      <returns>A value representing the fitted height of the cell viewer in pixels.
            If -1, then no fitted height is required or desired.</returns>
    </member>
    <member name="M:Xceed.Grid.ICellViewer.GetFittedWidth(Xceed.Grid.Cell)">
      <summary>Retrieves a value representing the fitted width of the cell viewer in pixels.</summary>
      <returns>A value representing the fitted width of the cell viewer in pixels.
            If -1, then no fitted width is required or desired.</returns>
    </member>
    <member name="M:Xceed.Grid.ICellViewer.PaintCellValue(Xceed.Grid.GridPaintEventArgs,Xceed.Grid.Cell)">
      <summary>Paints the value of <see cref="cell"></see>.</summary>
      <returns>true if the viewer painted the cell's content; false if the viewer was not able to paint the cell's content and wants the cell to paint itself.</returns>
    </member>
    <member name="T:Xceed.Grid.AutoHeightMode">
      <summary>A value indicating what the default height of the row will be in the case where its <see cref="P:Xceed.Grid.Row.Height"></see> property is not explicitly set.</summary>
    </member>
    <member name="T:Xceed.Grid.AutoWidthMode">
      <summary>This enumeration is reserved for future use.</summary>
    </member>
    <member name="T:Xceed.Grid.CellEditorDisplayConditions">
      <summary>Value representing under what conditions cell editors are displayed.</summary>
    </member>
    <member name="T:Xceed.Grid.ColumnTypes">
      <summary>Value representing the column types which will be cleared from the grid's list of columns. This enumeration is used only by the <see cref="M:Xceed.Grid.Collections.ColumnList.Clear"></see> method.</summary>
    </member>
    <member name="T:Xceed.Grid.CreateControlMode">
      <summary>Value representing how a <see cref="T:Xceed.Grid.Editors.CellEditorManager"></see> creates the control used to edit the contents of a cell.</summary>
    </member>
    <member name="T:Xceed.Grid.ErrorBehaviors">
      <summary>Value representing the behaviors displayed by the grid when an error occurs.</summary>
    </member>
    <member name="T:Xceed.Grid.GridScrollBars">
      <summary>Specifies the type of scroll bars to display in a grid.</summary>
    </member>
    <member name="T:Xceed.Grid.GridSection">
      <summary>Value representing various sections of the grid in which a row can be located.</summary>
    </member>
    <member name="T:Xceed.Grid.GroupByCellLayout">
      <summary>Value representing the layout of the cells in a <see cref="T:Xceed.Grid.GroupByRow"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.HorizontalAlignment">
      <summary>Value indicating the horizontal alignment of a grid element's content.</summary>
    </member>
    <member name="T:Xceed.Grid.HorizontalDirection">
      <summary>Value indicating the direction in which the <see cref="P:Xceed.Grid.GridControl.CurrentCell"></see> and <see cref="P:Xceed.Grid.GridControl.CurrentColumn"></see> can be moved.</summary>
    </member>
    <member name="T:Xceed.Grid.ImageArea">
      <summary>Value representing the area where a <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>'s image is displayed.</summary>
    </member>
    <member name="T:Xceed.Grid.ImageStyle">
      <summary>Value indicating the style in which an image is displayed.</summary>
    </member>
    <member name="T:Xceed.Grid.RowLocation">
      <summary>Value indicating the section of the grid or group in which a row is located.</summary>
    </member>
    <member name="T:Xceed.Grid.ScrollDirection">
      <summary>Value indicating the direction in which to scroll the grid.</summary>
    </member>
    <member name="T:Xceed.Grid.ShowFixedColumnSplitter">
      <summary>Value representing when the <see cref="P:Xceed.Grid.GridControl.FixedColumnSplitter"></see> or <see cref="P:Xceed.Grid.DetailGrid.FixedColumnSplitter"></see> is displayed.</summary>
    </member>
    <member name="T:Xceed.Grid.ShowPlusMinus">
      <summary>Value indicating whether plus-sign (+) and minus-sign (-) buttons are displayed next to DataRows.</summary>
    </member>
    <member name="T:Xceed.Grid.SortDirection">
      <summary>Value indicating the direction in which an element is sorted.</summary>
    </member>
    <member name="T:Xceed.Grid.StatFunction">
      <summary>Value representing the statistical function used by a <see cref="T:Xceed.Grid.SummaryCell"></see> to calculate its value.</summary>
    </member>
    <member name="T:Xceed.Grid.TitlePosition">
      <summary>Value representing the position of a <see cref="T:Xceed.Grid.SummaryCell"></see>'s <see cref="P:Xceed.Grid.SummaryCell.Title"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.UIVirtualizationMode">
      <summary>Value representing the UI&amp;amp;nbsp;virtualization mode&amp;amp;nbsp;used&amp;amp;nbsp;by the grid.</summary>
    </member>
    <member name="T:Xceed.Grid.VerticalAlignment">
      <summary>Value indicating the vertical alignment of a grid element's content.</summary>
    </member>
    <member name="T:Xceed.Grid.VerticalDirection">
      <summary>Value indicating the direction in which the <see cref="P:Xceed.Grid.GridControl.CurrentRow"></see> can be moved.</summary>
    </member>
    <member name="T:Xceed.Grid.VisualGridElementState">
      <summary>
        <P>A value representing the current state of a VisualGridElement.</P>
      </summary>
    </member>
    <member name="T:Xceed.Grid.Borders">
      <summary>A structure representing the borders of a visual grid element.</summary>
    </member>
    <member name="M:Xceed.Grid.Borders.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new Borders stucture representing, in pixels, the thickness of the left, top, right and bottom borders of a visual grid element.</summary>
    </member>
    <member name="M:Xceed.Grid.Borders.#ctor(System.Int32)">
      <summary>Initializes a new Borders structure with the left, top, right and bottom borders all having the same thickness.</summary>
    </member>
    <member name="P:Xceed.Grid.Borders.Bottom">
      <summary>Gets or sets a value representing the thickness, in pixels, of the bottom border.</summary>
    </member>
    <member name="P:Xceed.Grid.Borders.Left">
      <summary>Gets or sets a value representing the thickness, in pixels, of the left border.</summary>
    </member>
    <member name="P:Xceed.Grid.Borders.Right">
      <summary>Gets or sets a value representing the thickness, in pixels, of the right border.</summary>
    </member>
    <member name="P:Xceed.Grid.Borders.Top">
      <summary>Gets or sets a value representing the thickness, in pixels, of the top border.</summary>
    </member>
    <member name="F:Xceed.Grid.Borders.Empty">
      <summary>Represents an empty Borders structure.</summary>
    </member>
    <member name="T:Xceed.Grid.AddingDataRowEventArgs">
      <summary>Provides information on the current <see cref="P:Xceed.Grid.AddingDataRowEventArgs.DataRow"></see> object being built.</summary>
    </member>
    <member name="T:Xceed.Grid.ApplyToDesignerAttribute">
      <summary>Specifies whether the property this attribute is bound to must also be represented in the Grid Designer. If this attribute is not set, false is assumed.</summary>
    </member>
    <member name="T:Xceed.Grid.Cell">
      <summary>Represents any type of cell in the grid. The <see cref="T:Xceed.Grid.DataCell"></see>, <see cref="T:Xceed.Grid.InsertionCell"></see>, <see cref="T:Xceed.Grid.ValueCell"></see>, <see cref="T:Xceed.Grid.SummaryCell"></see>, and <see cref="T:Xceed.Grid.ColumnManagerCell"></see> all derive from this class.</summary>
    </member>
    <member name="T:Xceed.Grid.CellImageFormatInfo">
      <summary>Provides a <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see> with image formatting information.</summary>
    </member>
    <member name="T:Xceed.Grid.CellRow">
      <summary>Represents a row that contains a cell for each column in the grid.</summary>
    </member>
    <member name="T:Xceed.Grid.CellTextFormatInfo">
      <summary>Provides a <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see> with text formatting information.</summary>
    </member>
    <member name="T:Xceed.Grid.CellValidationErrorEventArgs">
      <summary>Provides information on the cell whose value failed the validation process.</summary>
    </member>
    <member name="T:Xceed.Grid.Column">
      <summary>Represents any type of column in the grid and can be instantiated to contain unbound data. The <see cref="T:Xceed.Grid.DataBoundColumn"></see> derives from this class.</summary>
    </member>
    <member name="T:Xceed.Grid.ColumnAddedEventArgs">
      <summary>Provides information on the column that has been added to the grid.</summary>
    </member>
    <member name="T:Xceed.Grid.ColumnManagerCell">
      <summary>Specialization of the <see cref="T:Xceed.Grid.Cell"></see> class which represents a cell that is used to manage the columns in the grid.</summary>
    </member>
    <member name="T:Xceed.Grid.ColumnManagerRow">
      <summary>Specialization of the <see cref="T:Xceed.Grid.CellRow"></see> class which represents a row that contains <see cref="T:Xceed.Grid.ColumnManagerCell"></see> which are used to manage the columns in the grid.</summary>
    </member>
    <member name="T:Xceed.Grid.ColumnRemovedEventArgs">
      <summary>Provides information on the column that was removed from the grid.</summary>
    </member>
    <member name="T:Xceed.Grid.DataBoundColumn">
      <summary>Represents a column that is bound to a data source.</summary>
    </member>
    <member name="T:Xceed.Grid.DataCell">
      <summary>Specialization of the <see cref="T:Xceed.Grid.Cell"></see> class which represents a cell that contains databound data.</summary>
    </member>
    <member name="T:Xceed.Grid.DataRow">
      <summary>Specialization of the <see cref="T:Xceed.Grid.CellRow"></see> class which represents a row that is bound to a data source or user provided data.</summary>
    </member>
    <member name="T:Xceed.Grid.DetailGrid">
      <summary>Represents a grid that is used to display detail data in a hierarchical master/detail grid.</summary>
    </member>
    <member name="T:Xceed.Grid.DetailGridMargin">
      <summary>Represents the margin of a detail grid.</summary>
    </member>
    <member name="T:Xceed.Grid.EditLeftEventArgs">
      <summary>Provides information on the cell's data when the cell has exited edit mode.</summary>
    </member>
    <member name="T:Xceed.Grid.EnteringEditEventArgs">
      <summary>Provides information on the <see cref="T:Xceed.Grid.Cell"></see> that is being edited.</summary>
    </member>
    <member name="T:Xceed.Grid.FixedColumnSplitter">
      <summary>Represents the area in a grid used as a splitter between the fixed columns and the scrollable columns.</summary>
    </member>
    <member name="T:Xceed.Grid.GradientMap">
      <summary>Represents a gradient map used to apply a Vista-like gradient to parts of the grid.</summary>
    </member>
    <member name="T:Xceed.Grid.GradientStop">
      <summary>Represents a gradient stop in a <see cref="T:Xceed.Grid.GradientMap"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.GradientStopList">
      <summary>Specialization of the CollectionBase class representing a list of <see cref="T:Xceed.Grid.GradientStop"></see> objects.</summary>
    </member>
    <member name="T:Xceed.Grid.GridControl">
      <summary>Represents the Xceed grid control. It allows you to display and edit data using a flexible and extensible grid.</summary>
    </member>
    <member name="T:Xceed.Grid.GridElement">
      <summary>Represents any element in the grid and exposes properties and methods that allow their manipulations.</summary>
    </member>
    <member name="T:Xceed.Grid.GridElementBase">
      <summary>Base class for all grid elements.</summary>
    </member>
    <member name="T:Xceed.Grid.GridElementStyle">
      <summary>Represents the style of a <see cref="T:Xceed.Grid.GridElement"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.GridException">
      <summary>The exception that is thrown by the grid when a non-fatal grid-specific error occurs.</summary>
    </member>
    <member name="T:Xceed.Grid.GridInternalException">
      <summary>The exception that is thrown by the grid when a fatal grid-specific error occurs.</summary>
    </member>
    <member name="T:Xceed.Grid.GridPaintEventArgs">
      <summary>Provides information regarding the area that is to be painted.</summary>
    </member>
    <member name="T:Xceed.Grid.GridPrintDocument">
      <summary>Represents a reusable object that allows grids to be printed.</summary>
    </member>
    <member name="T:Xceed.Grid.GridStyle">
      <summary>Represents the style of a grid.</summary>
    </member>
    <member name="T:Xceed.Grid.GridValidationException">
      <summary>The exception that is thrown by the grid when the value of a cell does not pass the validation process.</summary>
    </member>
    <member name="T:Xceed.Grid.Group">
      <summary>Represents a group in the grid.</summary>
    </member>
    <member name="T:Xceed.Grid.GroupAddedEventArgs">
      <summary>Provides information on the group added to the grid.</summary>
    </member>
    <member name="T:Xceed.Grid.GroupBase">
      <summary>Represents a group in a grid.</summary>
    </member>
    <member name="T:Xceed.Grid.GroupByRow">
      <summary>Specialization of the <see cref="T:Xceed.Grid.Row"></see> class which represents a row in which <see cref="T:Xceed.Grid.ColumnManagerCell"></see> objects can be drag and dropped in order to group a grid's data rows.</summary>
    </member>
    <member name="T:Xceed.Grid.GroupByRow.GroupByCell">
      <summary>Represents the cells displayed by the <see cref="T:Xceed.Grid.GroupByRow"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.GroupByRowStyle">
      <summary>Represents the style of a <see cref="T:Xceed.Grid.GroupByRow"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.GroupManagerRow">
      <summary>Specialization of the <see cref="T:Xceed.Grid.Row"></see> class which represents a row that is used to manage the groups in the grid.</summary>
    </member>
    <member name="T:Xceed.Grid.GroupMargin">
      <summary>Represents the margin of a group.</summary>
    </member>
    <member name="T:Xceed.Grid.InitializingDetailGridEventArgs">
      <summary>Provides information regarding the <see cref="T:Xceed.Grid.DetailGrid"></see> being initialized.</summary>
    </member>
    <member name="T:Xceed.Grid.InitializingNewDataRowEventArgs">
      <summary>Provides information regarding the <see cref="P:Xceed.Grid.InitializingNewDataRowEventArgs.DataRow"></see> being initialized.</summary>
    </member>
    <member name="T:Xceed.Grid.InsertionCell">
      <summary>Specialization of the <see cref="T:Xceed.Grid.Cell"></see> class which represents a cell that is used to insert new values into an <see cref="T:Xceed.Grid.InsertionRow"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.InsertionRow">
      <summary>Represents a row that contains a cell for each column in the grid and is used to insert new <see cref="T:Xceed.Grid.DataRow"></see> objects into a grid.</summary>
    </member>
    <member name="T:Xceed.Grid.LeavingEditEventArgs">
      <summary>Provides information on the <see cref="T:Xceed.Grid.Cell"></see> object that has been edited.</summary>
    </member>
    <member name="T:Xceed.Grid.Licenser">
      <summary>Class which is used to register Xceed Grid for .NET.</summary>
    </member>
    <member name="T:Xceed.Grid.QueryGroupKeysEventArgs">
      <summary>Provides the information necessary to group the grid's data rows.</summary>
    </member>
    <member name="T:Xceed.Grid.QueryPrintPageEventArgs">
      <summary>Provides information on the page that is about to be printed.</summary>
    </member>
    <member name="T:Xceed.Grid.Row">
      <summary>Represents any type of row in the grid. The <see cref="T:Xceed.Grid.TextRow"></see>, <see cref="T:Xceed.Grid.CellRow"></see>, <see cref="T:Xceed.Grid.SpacerRow"></see>, and <see cref="T:Xceed.Grid.GroupManagerRow"></see> class all derive from this class.</summary>
    </member>
    <member name="T:Xceed.Grid.RowInsertedEventArgs">
      <summary>Provides information on the <see cref="P:Xceed.Grid.RowInsertedEventArgs.DataRow"></see> that has been inserted into a grid using the <see cref="T:Xceed.Grid.InsertionRow"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.RowSelector">
      <summary>Represents a grid element that is used to select a row.</summary>
    </member>
    <member name="T:Xceed.Grid.RowSelectorPane">
      <summary>Represents the area of the grid where the <see cref="T:Xceed.Grid.RowSelector"></see> objects are displayed and exposes properties that control their behavior.</summary>
    </member>
    <member name="T:Xceed.Grid.RowValidationErrorEventArgs">
      <summary>Provides information regarding the row which failed the validation process.</summary>
    </member>
    <member name="T:Xceed.Grid.SpacerRow">
      <summary>Specialization of the <see cref="T:Xceed.Grid.Row"></see> class which represents a row that is used to provide spacing between rows and detail grids in the grid.</summary>
    </member>
    <member name="T:Xceed.Grid.SpacerRowSelector">
      <summary>Represents a grid element that is used to select a row.</summary>
    </member>
    <member name="T:Xceed.Grid.StatelessVisualGridElementStyle">
      <summary>Represents the style of a <see cref="T:Xceed.Grid.VisualGridElement"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.StyleSheet">
      <summary>Represents a style that can be applied to the grid to change its overall appearance.</summary>
    </member>
    <member name="T:Xceed.Grid.SummaryCell">
      <summary>Specialization of the&amp;amp;nbsp;&amp;lt;A href="Xceed.Grid~Xceed.Grid.Cell.html"&amp;gt;Cell&amp;lt;/A&amp;gt; class which represents a cell that is used to display the result of a statistical function.</summary>
    </member>
    <member name="T:Xceed.Grid.SummaryRow">
      <summary>Specialization of the <STRONG>CellRow</STRONG>class which represents a row used to display the results of statistical functions.</summary>
    </member>
    <member name="T:Xceed.Grid.TextRow">
      <summary>Specialization of the <see cref="T:Xceed.Grid.Row"></see> class which represents a row that contains only text.</summary>
    </member>
    <member name="T:Xceed.Grid.ValueCell">
      <summary>Specialization of the <see cref="T:Xceed.Grid.Cell"></see> class which represents a cell that contains non-databound data.</summary>
    </member>
    <member name="T:Xceed.Grid.ValueChangingEventArgs">
      <summary>Provides information on the cell whose value is about to change.</summary>
    </member>
    <member name="T:Xceed.Grid.ValueRow">
      <summary>Represents a row that contains a cell for each column in the grid but is not bound to a data source.</summary>
    </member>
    <member name="T:Xceed.Grid.VisualGridElement">
      <summary>Represents any visual element in the grid and exposes properties and methods that allow their manipulations. The <see cref="T:Xceed.Grid.Column"></see> and <see cref="T:Xceed.Grid.Group"></see> classes do not have a visual representation therefore, they derive directly from the <see cref="T:Xceed.Grid.GridElement"></see> class.</summary>
    </member>
    <member name="T:Xceed.Grid.VisualGridElementStyle">
      <summary>Represents the style of a <see cref="T:Xceed.Grid.VisualGridElement"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.AddingDataRowEventArgs.#ctor(Xceed.Grid.DataRow)">
      <summary>Provides information on the current <see cref="P:Xceed.Grid.AddingDataRowEventArgs.DataRow"></see> object being built.</summary>
    </member>
    <member name="P:Xceed.Grid.AddingDataRowEventArgs.DataRow">
      <summary>Gets a reference to the <see cref="P:Xceed.Grid.AddingDataRowEventArgs.DataRow"></see> object being built.</summary>
    </member>
    <member name="P:Xceed.Grid.ApplyToDesignerAttribute.ApplyToDesigner">
      <summary>Gets a boolean value indicating if the property should be represented in the Grid Designer.</summary>
    </member>
    <member name="F:Xceed.Grid.ApplyToDesignerAttribute.No">
      <summary>Specifies that a property will not be represented at design time in the Grid Designer. This&amp;amp;nbsp;&amp;lt;STRONG&amp;gt;static&amp;lt;/STRONG&amp;gt; field is read-only.</summary>
    </member>
    <member name="F:Xceed.Grid.ApplyToDesignerAttribute.Yes">
      <summary>Specifies that a property will be represented at design time in the Grid Designer. This&amp;amp;nbsp;&amp;lt;STRONG&amp;gt;static&amp;lt;/STRONG&amp;gt; field is read-only.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.BringIntoView">
      <summary>Brings the cell into the visible area of the grid.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.CreateInstance">
      <summary>Must create a new <see cref="T:Xceed.Grid.Cell"></see> object that is a copy of the current instance.</summary>
      <returns>Should return a reference to the newly create <see cref="T:Xceed.Grid.Cell"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.Cell.GetDisplayText">
      <summary>Retrieves the formatted text displayed by the cell.</summary>
      <returns>A string representing the formatted text (<see cref="P:Xceed.Grid.Cell.Value"></see>).</returns>
    </member>
    <member name="M:Xceed.Grid.Cell.GetDisplayTextCore">
      <summary>Retrieves the formatted text displayed by the cell.</summary>
      <returns>A string representing the formatted text (<see cref="P:Xceed.Grid.Cell.Value"></see>).</returns>
    </member>
    <member name="M:Xceed.Grid.Cell.GetFittedDisplayHeight(Xceed.Grid.AutoHeightMode,System.Int32,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves the fitted height of the cell in pixels.</summary>
      <returns>The fitted height of the cell in pixels.</returns>
    </member>
    <member name="M:Xceed.Grid.Cell.GetFittedDisplayWidth(Xceed.Grid.AutoWidthMode,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves the fitted width of the cell in pixels.</summary>
      <returns>A value containing the fitted width of the cell, including its <see cref="P:Xceed.Grid.Cell.Borders"></see>, in pixels.</returns>
    </member>
    <member name="M:Xceed.Grid.Cell.GetFittedHeight(Xceed.Grid.AutoHeightMode)">
      <summary>Retrieves the fitted height of the cell in pixels.</summary>
      <returns>A value containing the fitted height of the cell, including its <see cref="P:Xceed.Grid.Cell.Borders"></see>, in pixels. If <see cref="mode"></see> is set to <see cref="F:Xceed.Grid.AutoHeightMode.AllContent"></see> and the value of the cell is $$NULL$$, DBNull or <see cref="F:System.String.Empty"></see>, then the equivalent of calling GetFittedHeight with <see cref="F:Xceed.Grid.AutoHeightMode.Minimum"></see> is returned.</returns>
    </member>
    <member name="M:Xceed.Grid.Cell.GetFittedWidth">
      <summary>Retrieves the fitted width of the cell in pixels.</summary>
      <returns>A value containing the fitted width of the cell, including its <see cref="P:Xceed.Grid.Cell.Borders"></see>, in pixels.</returns>
    </member>
    <member name="M:Xceed.Grid.Cell.GetValue">
      <summary>Retrieves the value assigned to the cell.</summary>
      <returns>The value assigned to the cell.</returns>
    </member>
    <member name="M:Xceed.Grid.Cell.Initialize(System.String)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.IsInputChar(System.Char)">
      <summary>Determines if a character is an input character that the cell recognizes.</summary>
      <returns>true if the character should be sent directly to the grid and not preprocessed; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Cell.IsInputKey(System.Windows.Forms.Keys)">
      <summary>Returns a boolean value indicating if the key(s) pressed is an input key for the cell.</summary>
      <returns>true if the key(s) pressed in an input key; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Cell.LeaveEdit(System.Boolean)">
      <summary>Stops the edition of the cell.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnCanBeCurrentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Cell.CanBeCurrentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnCellEditorDisplayConditionsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Cell.CellEditorDisplayConditionsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnCellEditorManagerChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Cell.CellEditorManagerChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnCellViewerManagerChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Cell.CellViewerManagerChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnEditEntered(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Cell.EditEntered"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnEditLeft(Xceed.Grid.EditLeftEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Cell.EditLeft"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnEnteringEdit(Xceed.Grid.EnteringEditEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Cell.EnteringEdit"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnErrorDescriptionChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Cell.ErrorDescriptionChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnFormatProviderChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Cell.FormatProviderChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnFormatSpecifierChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Cell.FormatSpecifierChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.KeyDown"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.KeyPress"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnLeavingEdit(Xceed.Grid.LeavingEditEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Cell.LeavingEdit"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnMouseEnter(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.MouseEnter"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnMouseLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.MouseLeave"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnNullTextChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Cell.NullTextChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnNullValueChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Cell.NullValueChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnQueryAccessibilityHelp(System.Windows.Forms.QueryAccessibilityHelpEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Cell.QueryAccessibilityHelp"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnSiblingValueChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Cell.SiblingValueChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnValidationError(Xceed.Grid.CellValidationErrorEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Cell.ValidationError"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnValueChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Cell.ValueChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.OnValueChanging(Xceed.Grid.ValueChangingEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Cell.ValueChanging"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.PaintBorders(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the borders of the <see cref="T:Xceed.Grid.Cell"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.PaintForeground(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the foreground of the <see cref="T:Xceed.Grid.Cell"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.ResetAccessibleDefaultActionDescription">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Cell.AccessibleDefaultActionDescription"></see> property to its default value, <see cref="P:Xceed.Grid.Cell.DefaultAccessibleDefaultActionDescription"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.ResetAccessibleDescription">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Cell.AccessibleDescription"></see> property to its default value, <see cref="P:Xceed.Grid.Cell.DefaultAccessibleDescription"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.ResetAccessibleName">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Cell.AccessibleName"></see> property to its default value, <see cref="P:Xceed.Grid.Cell.DefaultAccessibleName"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.ResetCanBeCurrent">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Cell.CanBeCurrent"></see> property
            to its default value, <see cref="P:Xceed.Grid.Cell.DefaultCanBeCurrent"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.ResetCellEditorDisplayConditions">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Cell.CellEditorDisplayConditions"></see> property
            to its default value, <see cref="P:Xceed.Grid.Cell.DefaultCellEditorDisplayConditions"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.ResetCellEditorManager">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Cell.CellEditorManager"></see> property
            to its default value, <see cref="P:Xceed.Grid.Cell.DefaultCellEditorManager"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.ResetCellViewerManager">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Cell.CellViewerManager"></see> property
            to its default value, <see cref="P:Xceed.Grid.Cell.DefaultCellViewerManager"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.ResetErrorDescription">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Cell.ErrorDescription"></see> property to its default value, <STRONG>string.Empty</STRONG>.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.ResetFormatProvider">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Cell.FormatProvider"></see> property to its default value,
            <see cref="P:Xceed.Grid.Cell.DefaultFormatProvider"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.ResetFormatSpecifier">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Cell.FormatSpecifier"></see> property to its 
            default value, <see cref="P:Xceed.Grid.Cell.DefaultFormatSpecifier"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.ResetNullText">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Cell.NullText"></see> property to its 
            default value, <see cref="P:Xceed.Grid.Cell.DefaultNullText"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.ResetNullValue">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Cell.NullValue"></see> property to its  default value, <see cref="P:Xceed.Grid.Cell.DefaultNullValue"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.SetValue(System.Object)">
      <summary>Assigns the value to the cell.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.SetVisibleCore(Xceed.Grid.GridElement+AmbientBool)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.ToString">
      <summary>Returns a string representing the <see cref="P:Xceed.Grid.Cell.Value"></see> of the cell.</summary>
      <returns>A string representing the <see cref="P:Xceed.Grid.Cell.Value"></see> of the cell.</returns>
    </member>
    <member name="M:Xceed.Grid.Cell.EnterEdit">
      <summary>Enter edit mode.</summary>
    </member>
    <member name="M:Xceed.Grid.Cell.EnterEdit(System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>Enter edit mode and raise the cell editor's <see cref="E:System.Windows.Forms.Control.MouseDown"></see> event.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AccessibleDefaultActionDescription">
      <summary>Gets or sets the default action description of the element for use by accessibility client applications.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AccessibleDescription">
      <summary>Gets or sets the description of the element used by accessibility client applications.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AccessibleName">
      <summary>Gets or sets the name of the element used by accessibility client applications.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AmbientBackColor">
      <summary>Gets the ambient value of the cell's <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AmbientCellEditorDisplayConditions">
      <summary>Gets the ambient value of the cell's <see cref="P:Xceed.Grid.Cell.CellEditorDisplayConditions"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AmbientCellEditorManager">
      <summary>Gets the ambient value of the cell's <see cref="P:Xceed.Grid.Cell.CellEditorManager"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AmbientCellViewerManager">
      <summary>Gets the ambient value of the cell's <see cref="P:Xceed.Grid.Cell.CellViewerManager"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AmbientClipPartialLine">
      <summary>Gets the ambient value of the cell's <see cref="P:Xceed.Grid.GridElement.ClipPartialLine"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AmbientFont">
      <summary>Gets the ambient value of the cell's <see cref="P:Xceed.Grid.GridElement.Font"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AmbientForeColor">
      <summary>Gets the ambient value of the cell's <see cref="P:Xceed.Grid.GridElement.ForeColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AmbientFormatProvider">
      <summary>Gets the ambient value of the cell's <see cref="P:Xceed.Grid.Cell.FormatProvider"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AmbientFormatSpecifier">
      <summary>Gets the ambient value of the cell's <see cref="P:Xceed.Grid.Cell.FormatSpecifier"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AmbientHorizontalAlignment">
      <summary>Gets the ambient value of the cell's <see cref="P:Xceed.Grid.GridElement.HorizontalAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AmbientNullText">
      <summary>Gets the ambient value of the cell's <see cref="P:Xceed.Grid.Cell.NullText"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AmbientNullValue">
      <summary>Gets the ambient value of the cell's <see cref="P:Xceed.Grid.Cell.NullValue"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AmbientOverrideUIStyle">
      <summary>Gets the ambient value of the cell's <see cref="P:Xceed.Grid.GridElement.OverrideUIStyle"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AmbientParent">
      <summary>Gets the ambient parent of the cell.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AmbientReadOnly">
      <summary>Gets the ambient value of the cell's <see cref="P:Xceed.Grid.GridElement.ReadOnly"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AmbientTrimming">
      <summary>Gets the ambient value of the cell's <see cref="P:Xceed.Grid.GridElement.Trimming"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AmbientVerticalAlignment">
      <summary>Gets the ambient value of the cell's <see cref="P:Xceed.Grid.GridElement.VerticalAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.AmbientWordWrap">
      <summary>Gets the ambient value of the cell's <see cref="P:Xceed.Grid.GridElement.WordWrap"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.Borders">
      <summary>Gets the borders of the <see cref="T:Xceed.Grid.Cell"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.CanBeCurrent">
      <summary>Gets or sets a boolean value indicating if the cell can be the current cell.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.CellEditorControl">
      <summary>Gets the control that is currently displayed by the cell (according to the <see cref="P:Xceed.Grid.Cell.CellEditorDisplayConditions"></see>) property, or the control that is currently editing the content of the cell.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.CellEditorDisplayConditions">
      <summary>Gets or sets a value representing under what conditions a cell's editor is displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.CellEditorManager">
      <summary>Gets or sets the <see cref="T:Xceed.Grid.Editors.CellEditorManager"></see> that will be used to edit the content of the cell.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.CellViewerManager">
      <summary>Gets or sets the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see> that will be used to view the content of the cell.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.DefaultAccessibleDefaultActionDescription">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Cell.AccessibleDefaultActionDescription"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.DefaultAccessibleDescription">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Cell.AccessibleDescription"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.DefaultAccessibleName">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Cell.AccessibleName"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.DefaultCanBeCurrent">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Cell.CanBeCurrent"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.DefaultCellEditorDisplayConditions">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Cell.CellEditorDisplayConditions"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.DefaultCellEditorManager">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Cell.CellEditorManager"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.DefaultCellViewerManager">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Cell.CellViewerManager"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.DefaultFormatProvider">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Cell.FormatProvider"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.DefaultFormatSpecifier">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Cell.FormatSpecifier"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.DefaultNullText">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Cell.NullText"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.DefaultNullValue">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Cell.NullValue"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.ErrorDescription">
      <summary>Gets or sets the description of the error that will be displayed in the tooltip
            when the mouse passes over the cell.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.FieldName">
      <summary>Gets the field name of the cell's parent column.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.FormatProvider">
      <summary>Gets or sets the custom Format Provider that will be used to format the cell's data.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.FormatSpecifier">
      <summary>Gets or sets the format that will be used to display the cell's content.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.IsBeingEdited">
      <summary>Gets a boolean value indicating if the cell has an active cell editor.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.IsCellEditorDisplayConditionsAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Cell.CellEditorDisplayConditions"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.IsCellEditorManagerAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Cell.CellEditorManager"></see> property gets its value from its parent column.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.IsCellViewerManagerAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Cell.CellViewerManager"></see> property gets its value from its parent column.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.IsCurrent">
      <summary>Gets a boolean value indicating if the cell is the current cell.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.IsFormatProviderAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Cell.FormatProvider"></see> property gets its value from its parent column.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.IsFormatSpecifierAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Cell.FormatSpecifier"></see> property gets its value from its parent column.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.IsNullTextAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Cell.NullText"></see> property gets its value from its parent column.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.IsNullValueAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Cell.NullValue"></see> property gets its value from its parent column.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.NullText">
      <summary>Gets or sets the text that is displayed when the cell contains $$NULL$$.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.NullValue">
      <summary>Gets or sets the $$NULL$$ value of the cell.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.ParentColumn">
      <summary>Gets the parent column of the cell.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.ParentGrid">
      <summary>Gets the parent grid of the cell.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.ParentRow">
      <summary>Gets the parent row of the cell.</summary>
    </member>
    <member name="P:Xceed.Grid.Cell.Value">
      <summary>Gets or sets the content of the cell.</summary>
    </member>
    <member name="E:Xceed.Grid.Cell.CanBeCurrentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Cell.CanBeCurrent"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Cell.CellEditorDisplayConditionsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Cell.CellEditorDisplayConditions"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Cell.CellEditorManagerChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Cell.CellEditorManager"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Cell.CellViewerManagerChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Cell.CellViewerManager"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Cell.EditEntered">
      <summary>Raised when the cell has entered edit mode.</summary>
    </member>
    <member name="E:Xceed.Grid.Cell.EditLeft">
      <summary>Raised when the cell has exited edit mode.</summary>
    </member>
    <member name="E:Xceed.Grid.Cell.EnteringEdit">
      <summary>Raised before editing a cell.</summary>
    </member>
    <member name="E:Xceed.Grid.Cell.ErrorDescriptionChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Cell.ErrorDescription"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Cell.FormatProviderChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Cell.FormatProvider"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Cell.FormatSpecifierChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Cell.FormatSpecifier"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Cell.LeavingEdit">
      <summary>Raised after a cell has been edited to validate the content of the cell.</summary>
    </member>
    <member name="E:Xceed.Grid.Cell.NullTextChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Cell.NullText"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Cell.NullValueChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Cell.NullValue"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Cell.QueryAccessibilityHelp">
      <summary>Raised when an Accessibility client invokes help for that element.</summary>
    </member>
    <member name="E:Xceed.Grid.Cell.SiblingValueChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Cell.Value"></see> property of one of the cell's siblings is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Cell.ValidationError">
      <summary>Raised when the value of the cell does not pass the validation process.</summary>
    </member>
    <member name="E:Xceed.Grid.Cell.ValueChanged">
      <summary>Raised when a cell's value has been changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Cell.ValueChanging">
      <summary>Raised when a cell's value is being changed.</summary>
    </member>
    <member name="M:Xceed.Grid.CellImageFormatInfo.CreateFromCell(Xceed.Grid.Cell)">
      <summary>Creates a new CellImageFormatInfo instance which retrieves its values from the specified 
            <see cref="T:Xceed.Grid.Cell"></see>.</summary>
      <returns>A new CellImageFormatInfo instance whose values have been set from the values retrieved from 
            <see cref="cell"></see>.</returns>
    </member>
    <member name="M:Xceed.Grid.CellImageFormatInfo.CreateFromColumn(Xceed.Grid.Column)">
      <summary>Creates a new CellImageFormatInfo instance which retrieves its values from the specified 
            <see cref="T:Xceed.Grid.Column"></see>.</summary>
      <returns>A new CellImageFormatInfo instance whose values have been set from the values retrieved from 
            <see cref="column"></see>.</returns>
    </member>
    <member name="P:Xceed.Grid.CellImageFormatInfo.BackColor">
      <summary>Gets the background color that will be used to display the image in the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.CellImageFormatInfo.ForeColor">
      <summary>Gets the foreground color that will be used to display the image in the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>.</summary>
    </member>
    <member name="F:Xceed.Grid.CellImageFormatInfo.Empty">
      <summary>Gets an empty CellImageFormatInfo.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.BeginEdit">
      <summary>Places the row in edition mode and keeps a copy of the row's current data.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.BeginEditCore">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.CancelEdit">
      <summary>Cancels any modifications made to the row and restores the original data.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.CancelEditCore(System.Collections.ArrayList)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.CreateCell(Xceed.Grid.Column)">
      <summary>Creates a new <see cref="T:Xceed.Grid.Cell"></see> object in the <see cref="T:Xceed.Grid.CellRow"></see>
            for the specified column.</summary>
      <returns>A reference to the newly created <see cref="T:Xceed.Grid.Cell"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.CellRow.EndEdit">
      <summary>Commits the modifications made to the row's data and exits edition mode.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.EndEditCore">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.GetFittedDisplayHeight(Xceed.Grid.AutoHeightMode,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves the fitted height of the row in pixels.</summary>
      <returns>The fitted height of the row in pixels.</returns>
    </member>
    <member name="M:Xceed.Grid.CellRow.OnAllowCellNavigationChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.CellRow.AllowCellNavigationChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.OnBeginningEdit(System.ComponentModel.CancelEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.CellRow.BeginningEdit"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.OnCellEditorDisplayConditionsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.CellRow.CellEditorDisplayConditionsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.OnCellValueChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.CellRow.CellValueChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.OnEditBegun(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.CellRow.EditBegun"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.OnEditCanceled(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.CellRow.EditCanceled"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.OnEditEnded(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.CellRow.EditEnded"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.OnEndingEdit(System.ComponentModel.CancelEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.CellRow.EndingEdit"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.OnErrorDescriptionChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.CellRow.ErrorDescriptionChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.OnFitHeightToEditorsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.CellRow.FitHeightToEditorsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.OnMouseEnter(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.MouseEnter"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.OnMouseLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.MouseLeave"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.OnShowFixedColumnSplitterChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.CellRow.ShowFixedColumnSplitterChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.OnValidationError(Xceed.Grid.RowValidationErrorEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.CellRow.ValidationError"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.PaintErrorState(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the <see cref="T:Xceed.Grid.CellRow"></see> in an error state.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.PaintSelectedState(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the <see cref="T:Xceed.Grid.CellRow"></see> in a selected state.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.ResetAllowCellNavigation">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.CellRow.AllowCellNavigation"></see> property to its default value,
            <see cref="P:Xceed.Grid.CellRow.DefaultAllowCellNavigation"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.ResetCellEditorDisplayConditions">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.CellRow.CellEditorDisplayConditions"></see> property
            to its default value, <see cref="P:Xceed.Grid.CellRow.DefaultCellEditorDisplayConditions"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.ResetErrorDescription">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.CellRow.ErrorDescription"></see> property to its default value,
            <see cref="P:Xceed.Grid.CellRow.DefaultErrorDescription"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.ResetFitHeightToEditors">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.CellRow.FitHeightToEditors"></see> property to its default value,
            <see cref="P:Xceed.Grid.CellRow.DefaultFitHeightToEditors"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.CellRow.ResetShowFixedColumnSplitter">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.CellRow.ShowFixedColumnSplitter"></see> property to its default value,
            <see cref="P:Xceed.Grid.CellRow.DefaultShowFixedColumnSplitter"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.CellRow.AllowCellNavigation">
      <summary>Gets or sets a boolean value indicating if it is possible to navigate from cell to cell in the row.</summary>
    </member>
    <member name="P:Xceed.Grid.CellRow.AmbientAllowCellNavigation">
      <summary>Gets the ambient value of the row's <see cref="P:Xceed.Grid.CellRow.AllowCellNavigation"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.CellRow.AmbientCellEditorDisplayConditions">
      <summary>Gets the ambient value of the grid element's <see cref="P:Xceed.Grid.CellRow.CellEditorDisplayConditions"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.CellRow.CellEditorDisplayConditions">
      <summary>Gets or sets a value representing under what conditions cell editors are displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.CellRow.Cells">
      <summary>Gets a list of all the cells contained within the row.</summary>
    </member>
    <member name="P:Xceed.Grid.CellRow.CellType">
      <summary>Gets the <see cref="T:System.Type"></see> of the cells contained
            in the row.</summary>
    </member>
    <member name="P:Xceed.Grid.CellRow.DefaultAllowCellNavigation">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.CellRow.AllowCellNavigation"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.CellRow.DefaultCellEditorDisplayConditions">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.CellRow.CellEditorDisplayConditions"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.CellRow.DefaultErrorDescription">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.CellRow.ErrorDescription"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.CellRow.DefaultFitHeightToEditors">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.CellRow.FitHeightToEditors"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.CellRow.DefaultShowFixedColumnSplitter">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.CellRow.ShowFixedColumnSplitter"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.CellRow.EnforceCellDataTypes">
      <summary>Gets a boolean value indicating if the data types of the cells should match the data type of their respective parent columns.</summary>
    </member>
    <member name="P:Xceed.Grid.CellRow.ErrorDescription">
      <summary>Gets or sets the description of the error that will be displayed in the tooltip
            when the mouse passes over the row or the row's row selector.</summary>
    </member>
    <member name="P:Xceed.Grid.CellRow.FitHeightToEditors">
      <summary>Gets or sets a boolean value indicating if the height of the row should be adjusted to fit the editors of the row's cells.</summary>
    </member>
    <member name="P:Xceed.Grid.CellRow.IsAllowCellNavigationAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.CellRow.AllowCellNavigation"></see> property gets its value from its parent grid.</summary>
    </member>
    <member name="P:Xceed.Grid.CellRow.IsBeingEdited">
      <summary>Gets a boolean value indicating if the row is being edited.</summary>
    </member>
    <member name="P:Xceed.Grid.CellRow.IsCellEditorDisplayConditionsAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.CellRow.CellEditorDisplayConditions"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.CellRow.ShowFixedColumnSplitter">
      <summary>Gets or sets a value indicating when the <see cref="P:Xceed.Grid.GridControl.FixedColumnSplitter"></see> or 
            <see cref="P:Xceed.Grid.DetailGrid.FixedColumnSplitter"></see> is displayed.</summary>
    </member>
    <member name="E:Xceed.Grid.CellRow.AllowCellNavigationChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.CellRow.AllowCellNavigation"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.CellRow.BeginningEdit">
      <summary>Raised when the <see cref="M:Xceed.Grid.CellRow.BeginEdit"></see> method is called to signal that the
            row is about to be edited.</summary>
    </member>
    <member name="E:Xceed.Grid.CellRow.CellEditorDisplayConditionsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.CellRow.CellEditorDisplayConditions"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.CellRow.CellValueChanged">
      <summary>Raised when the value of one of the cells in the row is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.CellRow.EditBegun">
      <summary>Raised after the <see cref="E:Xceed.Grid.CellRow.BeginningEdit"></see> event to signal that the row is being edited.</summary>
    </member>
    <member name="E:Xceed.Grid.CellRow.EditCanceled">
      <summary>Raised when the <see cref="M:Xceed.Grid.CellRow.CancelEdit"></see> method has been called to cancel
            the modifications made to the row.</summary>
    </member>
    <member name="E:Xceed.Grid.CellRow.EditEnded">
      <summary>Raised when the row has finished being edited.</summary>
    </member>
    <member name="E:Xceed.Grid.CellRow.EndingEdit">
      <summary>Raised when the <see cref="M:Xceed.Grid.CellRow.EndEdit"></see> method is called to signal that the row has finished being edited and that the changes are about to be committed.</summary>
    </member>
    <member name="E:Xceed.Grid.CellRow.ErrorDescriptionChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.CellRow.ErrorDescription"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.CellRow.FitHeightToEditorsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.CellRow.FitHeightToEditors"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.CellRow.ShowFixedColumnSplitterChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.CellRow.ShowFixedColumnSplitter"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.CellRow.ValidationError">
      <summary>Raised by the <see cref="M:Xceed.Grid.Collections.DataRowList.AddNew"></see> or <see cref="M:Xceed.Grid.CellRow.EndEdit"></see> methods when the values of one of the cells in the DataRow does not pass the validation process.</summary>
    </member>
    <member name="M:Xceed.Grid.CellTextFormatInfo.CreateFromCell(Xceed.Grid.Cell)">
      <summary>Creates a new CellTextFormatInfo instance which retrieves its values from the specified 
            <see cref="T:Xceed.Grid.Cell"></see>.</summary>
      <returns>A new CellTextFormatInfo instance whose values have been set from the values retrieved from 
            <see cref="cell"></see>.</returns>
    </member>
    <member name="M:Xceed.Grid.CellTextFormatInfo.CreateFromColumn(Xceed.Grid.Column)">
      <summary>Creates a new CellTextFormatInfo instance which retrieves its values from the specified 
            <see cref="T:Xceed.Grid.Column"></see>.</summary>
      <returns>A new CellTextFormatInfo instance whose values have been set from the values retrieved from 
            <see cref="column"></see>.</returns>
    </member>
    <member name="P:Xceed.Grid.CellTextFormatInfo.FormatProvider">
      <summary>Gets the custom Format Provider that will be used to format the text displayed in the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.CellTextFormatInfo.FormatSpecifier">
      <summary>Gets the format that will be used to display the text in the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.CellTextFormatInfo.NullText">
      <summary>Gets the text that is displayed when the text to display in the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>
            is equal to <see cref="P:Xceed.Grid.CellTextFormatInfo.NullValue"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.CellTextFormatInfo.NullValue">
      <summary>Gets the $$NULL$$ value of the cell or column from which the CellTextFormatInfo was created.</summary>
    </member>
    <member name="P:Xceed.Grid.CellTextFormatInfo.StringFormat">
      <summary>Gets the <see cref="T:System.Drawing.StringFormat"></see> that is to be used to paint the text that is to be displayed by the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>.</summary>
    </member>
    <member name="F:Xceed.Grid.CellTextFormatInfo.Empty">
      <summary>Gets an empty CellTextFormatInfo.</summary>
    </member>
    <member name="M:Xceed.Grid.CellValidationErrorEventArgs.#ctor(System.Object,System.Exception)">
      <summary>Provides information on the cell whose value failed the validation process.</summary>
    </member>
    <member name="P:Xceed.Grid.CellValidationErrorEventArgs.CancelEdit">
      <summary>Gets or sets a boolean value indicating if the cell whould exit edit mode.</summary>
    </member>
    <member name="P:Xceed.Grid.CellValidationErrorEventArgs.Exception">
      <summary>Gets the exception that was thrown.</summary>
    </member>
    <member name="P:Xceed.Grid.CellValidationErrorEventArgs.Value">
      <summary>Gets the value that failed the validation process.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.#ctor">
      <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.#ctor(System.String)">
      <summary>Initializes a new instance of the Column class specifying the name of the column.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the Column class specifying the name of the column and its data type.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.#ctor(Xceed.Grid.Column)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.Column"></see> class specifying the Column that will be 
            used as a template to create the columns.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.BringIntoView">
      <summary>Brings the column into the visible area of the grid.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.CreateInstance">
      <summary>Creates a new <see cref="T:Xceed.Grid.Column"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to the newly create <see cref="T:Xceed.Grid.Column"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.Column.OnCanBeGroupedChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Column.CanBeGroupedChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.OnCanBeSortedChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Column.CanBeSortedChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.OnCellEditorDisplayConditionsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Column.CellEditorDisplayConditionsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.OnCellEditorManagerChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Column.CellEditorManagerChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.OnCellViewerManagerChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Column.CellViewerManagerChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.OnDataComparerChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Column.DataComparerChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.OnFixedChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Column.FixedChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.OnFormatProviderChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Column.FormatProviderChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.OnFormatSpecifierChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Column.FormatSpecifierChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.OnMaxWidthChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Column.MaxWidthChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.OnMinWidthChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Column.MinWidthChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.OnNullTextChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Column.NullTextChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.OnNullValueChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Column.NullValueChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.OnSortDirectionChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Column.SortDirectionChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.OnTitleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Column.TitleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.OnVisibleIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Column.VisibleIndexChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.OnWidthChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Column.WidthChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.ResetCanBeGrouped">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Column.CanBeGrouped"></see> property to its default value,
            <see cref="P:Xceed.Grid.Column.DefaultCanBeGrouped"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.ResetCanBeSorted">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Column.CanBeSorted"></see> property to its default value,
            <see cref="P:Xceed.Grid.Column.DefaultCanBeSorted"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.ResetCellEditorDisplayConditions">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Column.CellEditorDisplayConditions"></see> property to its default 
            value, <see cref="P:Xceed.Grid.Column.DefaultCellEditorDisplayConditions"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.ResetCellEditorManager">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Column.CellEditorManager"></see> property
            to its default value, <see cref="P:Xceed.Grid.Column.DefaultCellEditorManager"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.ResetCellViewerManager">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Column.CellViewerManager"></see> property
            to its default value, <see cref="P:Xceed.Grid.Column.DefaultCellViewerManager"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.ResetDataComparer">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Column.DataComparer"></see> property to its default value,
            <see cref="P:Xceed.Grid.Column.DefaultDataComparer"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.ResetFixed">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Column.Fixed"></see> property to its default value,
            <see cref="P:Xceed.Grid.Column.DefaultFixed"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.ResetFormatProvider">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Column.FormatProvider"></see> property to its default value,
            <see cref="P:Xceed.Grid.Column.DefaultFormatProvider"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.ResetFormatSpecifier">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Column.FormatSpecifier"></see> property to its default value, <see cref="P:Xceed.Grid.Column.DefaultFormatSpecifier"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.ResetMaxWidth">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Column.MaxWidth"></see> property to its default value, <see cref="P:Xceed.Grid.Column.DefaultMaxWidth"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.ResetMinWidth">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Column.MinWidth"></see> property to its default value,
            <see cref="P:Xceed.Grid.Column.DefaultMinWidth"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.ResetNullText">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Column.NullText"></see> property to its default value, <see cref="P:Xceed.Grid.Column.DefaultNullText"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.ResetNullValue">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Column.NullValue"></see> property to its default value, <see cref="P:Xceed.Grid.Column.DefaultNullValue"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.ResetSortDirection">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Column.SortDirection"></see> property to its default value,
            <see cref="P:Xceed.Grid.Column.DefaultSortDirection"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.ResetTitle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Column.Title"></see> property to its default value, <see cref="P:Xceed.Grid.Column.DefaultTitle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.ResetWidth">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Column.Width"></see> property to its default value, <see cref="P:Xceed.Grid.Column.DefaultWidth"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.SetVisibleCore(Xceed.Grid.GridElement+AmbientBool)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.Column.GetFittedWidth">
      <summary>Retrieves the fitted width of the column in pixels.</summary>
      <returns>A value containing the fitted width of the column in pixels.</returns>
    </member>
    <member name="M:Xceed.Grid.Column.GetFittedWidth(Xceed.Grid.AutoWidthMode,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves the fitted width of the column in pixels.</summary>
      <returns>A value containing the fitted width of the column, including its <see cref="T:Xceed.Grid.Borders"></see>, in pixels.</returns>
    </member>
    <member name="M:Xceed.Grid.Column.Initialize(System.String,System.Type)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.AmbientParent">
      <summary>Gets the ambient parent of the column.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.CanBeGrouped">
      <summary>Gets or sets a boolean value indicating if the column can be used to group the data rows.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.CanBeSorted">
      <summary>Gets or sets a boolean value indicating if the column can be sorted.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.CellEditorDisplayConditions">
      <summary>Gets or sets a value representing under what conditions cell editors are displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.CellEditorManager">
      <summary>Gets or sets the <see cref="T:Xceed.Grid.Editors.CellEditorManager"></see> that will be used to edit the content of the column's cells.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.CellViewerManager">
      <summary>Gets or sets the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see> that will be used to view the 
            content of the column's cells.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DataComparer">
      <summary>Gets or sets an instance of a class which implements the 
            <see cref="T:System.Collections.IComparer"></see> interface in order to compare the column's 
            data during grouping and sorting.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DataType">
      <summary>Gets the data type of the column.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DefaultCanBeGrouped">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Column.CanBeGrouped"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DefaultCanBeSorted">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Column.CanBeSorted"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DefaultCellEditorDisplayConditions">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Column.CellEditorDisplayConditions"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DefaultCellEditorManager">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Column.CellEditorManager"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DefaultCellViewerManager">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Column.CellViewerManager"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DefaultDataComparer">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Column.DataComparer"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DefaultFixed">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Column.Fixed"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DefaultFormatProvider">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Column.FormatProvider"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DefaultFormatSpecifier">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Column.FormatSpecifier"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DefaultMaxWidth">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Column.MaxWidth"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DefaultMinWidth">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Column.MinWidth"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DefaultNullText">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Column.NullText"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DefaultNullValue">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Column.NullValue"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DefaultReadOnly">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.ReadOnly"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DefaultSortDirection">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Column.SortDirection"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DefaultTitle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Column.Title"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DefaultVisible">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.Visible"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DefaultWidth">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Column.Width"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.DisplayableIndex">
      <summary>Gets the displayable index of the column.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.FieldName">
      <summary>Gets the field name of the column.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.Fixed">
      <summary>Gets or sets a boolean value indicating if the column is fixed.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.FormatProvider">
      <summary>Gets or sets the custom Format Provider that will be used to format
            the data in the column's cells.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.FormatSpecifier">
      <summary>Gets or sets the format that will be used to display data, in the column's cells.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.Index">
      <summary>Gets the index of the column in the grid's collection of columns.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.IsFirstDisplayable">
      <summary>Gets a boolean value indicating whether the first column is displayable.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.IsLastDisplayable">
      <summary>Gets a boolean value indicating whether the last column is displayable.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.IsReadOnlyAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.ReadOnly"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.MaxWidth">
      <summary>Gets or sets the maximum width of the column, in pixels.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.MinWidth">
      <summary>Gets or sets the minimum width of the column, in pixels.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.NullText">
      <summary>Gets or sets the text that is displayed when one of the column's cells contains $$NULL$$.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.NullValue">
      <summary>Gets or sets the $$NULL$$ value of the column.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.ParentGrid">
      <summary>Gets the parent grid of the column.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.SortDirection">
      <summary>Gets or sets a value indicating the direction in which the column is sorted.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.SortIndex">
      <summary>Gets the index of the column within the <see cref="P:Xceed.Grid.DetailGrid.SortedColumns"></see> list.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.Title">
      <summary>Gets or sets the title of the column displayed in the corresponding cell in the <see cref="T:Xceed.Grid.ColumnManagerRow"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.VisibleIndex">
      <summary>Gets or sets the visible position of the column.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.Width">
      <summary>Gets or sets the width of the column in pixels.</summary>
    </member>
    <member name="P:Xceed.Grid.Column.ReportStyle">
      <summary>Gets the report style of the column.</summary>
    </member>
    <member name="E:Xceed.Grid.Column.CanBeGroupedChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Column.CanBeGrouped"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Column.CanBeSortedChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Column.CanBeSorted"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Column.CellEditorDisplayConditionsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Column.CellEditorDisplayConditions"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Column.CellEditorManagerChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Column.CellEditorManager"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Column.CellViewerManagerChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Column.CellViewerManager"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Column.DataComparerChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Column.DataComparer"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Column.FixedChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Column.Fixed"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Column.FormatProviderChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Column.FormatProvider"></see> property 
            is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Column.FormatSpecifierChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Column.FormatSpecifier"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Column.MaxWidthChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Column.MaxWidth"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Column.MinWidthChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Column.MinWidth"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Column.NullTextChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Column.NullText"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Column.NullValueChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Column.NullValue"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Column.SortDirectionChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Column.SortDirection"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Column.TitleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Column.Title"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Column.VisibleIndexChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Column.VisibleIndex"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Column.WidthChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Column.Width"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnAddedEventArgs.#ctor(Xceed.Grid.Column)">
      <summary>Initializes a new instance of the ColumnAddedEventArgs class specifying the control that has been
            added to the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnAddedEventArgs.Column">
      <summary>Gets the <see cref="T:Xceed.Grid.Column"></see> that has been added to the grid.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.#ctor">
      <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.ColumnManagerCell"></see> class specifying its field name.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.#ctor(Xceed.Grid.ColumnManagerCell)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.ColumnManagerCell"></see> class
            specifying the template that will be used to create the ColumnManagerCells
            that will be contained within the <see cref="T:Xceed.Grid.ColumnManagerRow"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.#ctor(Xceed.Grid.Column)">
      <summary>Initializes a new instance of the ColumnManagerCell class specifying its parent
            column.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.CreateInstance">
      <summary>Creates a new <see cref="T:Xceed.Grid.Cell"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to the newly created <see cref="T:Xceed.Grid.Cell"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.GetDisplayTextCore">
      <summary>Retrieves the formatted text to paint in the cell. This does not necessarily correspond to <see cref="P:Xceed.Grid.Column.Title"></see>.</summary>
      <returns>The formatted text to paint in the cell. The value.ToString() is returned. If the cell <see cref="P:Xceed.Grid.Cell.Value"></see> is $$NULL$$, string.empty is returned.</returns>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.GetFittedDisplayHeight(Xceed.Grid.AutoHeightMode,System.Int32,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves the fitted height of the cell in pixels.</summary>
      <returns>The fitted height of the cell in pixels. If <see cref="mode"></see> is set to <see cref="T:Xceed.Grid.AutoHeightMode"></see>.AllContent and the value of the cell is $$NULL$$, DBNull or <see cref="F:System.String.Empty"></see>, then the equivalent of calling GetFittedHeight with <see cref="T:Xceed.Grid.AutoHeightMode"></see>.Minimum is returned.</returns>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.GetFittedDisplayWidth(Xceed.Grid.AutoWidthMode,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves the fitted width of the cell in pixels.</summary>
      <returns>A value containing the fitted width of the cell, including its <see cref="P:Xceed.Grid.ColumnManagerCell.Borders"></see>, in pixels.</returns>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.GetValue">
      <summary>Retrieves the value assigned to the ColumnManagerCell.</summary>
      <returns>The value assigned to the ColumnManagerCell.</returns>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.Initialize">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.OnClick(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.Click"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.OnDoubleClick(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.DoubleClick"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.OnMouseEnter(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.MouseEnter"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.OnMouseLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.MouseLeave"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.MouseUp"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.PaintBackground(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the background of the grid element.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.PaintForeground(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the foreground of the <see cref="T:Xceed.Grid.ColumnManagerCell"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.PaintHotState(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the column manager cell in a hot state.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.ResetHotTracking">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.ColumnManagerCell.HotTracking"></see> property
            to its default value, <see cref="P:Xceed.Grid.ColumnManagerCell.DefaultHotTracking"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerCell.SetValue(System.Object)">
      <summary>Assigns the value to the ColumnManagerCell.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerCell.AmbientBackColor">
      <summary>Gets the ambient value of the column manager cell's <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerCell.AmbientHotTracking">
      <summary>Gets the ambient value of the grid element's <see cref="P:Xceed.Grid.ColumnManagerCell.HotTracking"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerCell.Borders">
      <summary>Gets the borders of the <see cref="T:Xceed.Grid.Cell"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerCell.DefaultAccessibleDefaultActionDescription">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Cell.AccessibleDefaultActionDescription"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerCell.DefaultAccessibleDescription">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Cell.AccessibleDescription"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerCell.DefaultHotTracking">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.ColumnManagerCell.HotTracking"></see> property</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerCell.DefaultVerticalAlignment">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.VerticalAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerCell.HotTracking">
      <summary>Gets or sets a boolean value indicating if hot tracking is enabled for the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerCell.IsHotTrackingAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.ColumnManagerCell.HotTracking"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerCell.IsVerticalAlignmentAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.VerticalAlignment"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerCell.MouseState">
      <summary>Value indicating if the mouse events will be handled by the ColumnManagerCell.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerRow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.ColumnManagerRow"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerRow.#ctor(Xceed.Grid.RowSelector)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.ColumnManagerRow"></see> class specifying its <see cref="T:Xceed.Grid.RowSelector"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerRow.#ctor(Xceed.Grid.ColumnManagerRow)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.ColumnManagerRow"></see> class
            specifying the template that will be used to create the ColumnManagerRows
            contained within the grid.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerRow.CreateCell(Xceed.Grid.Column)">
      <summary>Creates a new <see cref="T:Xceed.Grid.Cell"></see> object in the <see cref="T:Xceed.Grid.ColumnManagerRow"></see>
            for the specified column.</summary>
      <returns>A reference to the newly created <see cref="T:Xceed.Grid.Cell"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerRow.CreateInstance">
      <summary>Creates a new <see cref="T:Xceed.Grid.Row"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to newly create <see cref="T:Xceed.Grid.Row"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerRow.OnAllowColumnReorderChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.ColumnManagerRow.AllowColumnReorderChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerRow.OnAllowColumnResizeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.ColumnManagerRow.AllowColumnResizeChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerRow.OnAllowSortChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.ColumnManagerRow.AllowSortChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerRow.PaintBackground(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the background of the <see cref="T:Xceed.Grid.ColumnManagerRow"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerRow.PaintBorders(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the borders of the <see cref="T:Xceed.Grid.ColumnManagerRow"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerRow.PaintHotState(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the column manager row in a hot state.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerRow.ResetAllowColumnReorder">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.ColumnManagerRow.AllowColumnReorder"></see> property to its default value,
            <see cref="P:Xceed.Grid.ColumnManagerRow.DefaultAllowColumnReorder"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerRow.ResetAllowColumnResize">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.ColumnManagerRow.AllowColumnResize"></see> property to its default value,
            <see cref="P:Xceed.Grid.ColumnManagerRow.DefaultAllowColumnResize"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerRow.ResetAllowSort">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.ColumnManagerRow.AllowSort"></see> property to its default value,
            <see cref="P:Xceed.Grid.ColumnManagerRow.DefaultAllowSort"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnManagerRow.ResetHotTracking">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.ColumnManagerRow.HotTracking"></see> property
            to its default value, <see cref="P:Xceed.Grid.ColumnManagerRow.DefaultHotTracking"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerRow.AllowColumnReorder">
      <summary>Gets or sets a boolean value indicating if the columns can be reordered.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerRow.AllowColumnResize">
      <summary>Gets or sets a boolean value indicating if the columns can be resized using the ColumnManagerRow.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerRow.AllowSort">
      <summary>Gets or sets a boolean value indicating if the columns can sorted.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerRow.AmbientHotTracking">
      <summary>Gets the ambient value of the grid element's <see cref="P:Xceed.Grid.ColumnManagerRow.HotTracking"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerRow.Borders">
      <summary>Gets the borders of the <see cref="T:Xceed.Grid.ColumnManagerRow"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerRow.CellType">
      <summary>Gets the <see cref="T:System.Type"></see> of the cells contained
            in the ColumnManagerRow.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerRow.DefaultAllowColumnReorder">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.ColumnManagerRow.AllowColumnReorder"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerRow.DefaultAllowColumnResize">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.ColumnManagerRow.AllowColumnResize"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerRow.DefaultAllowSort">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.ColumnManagerRow.AllowSort"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerRow.DefaultBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerRow.DefaultCanBeCurrent">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.CanBeCurrent"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerRow.DefaultHotTracking">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.ColumnManagerRow.HotTracking"></see> property</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerRow.DefaultShowFixedColumnSplitter">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.CellRow.ShowFixedColumnSplitter"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerRow.DefaultShowTreeLine">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.ShowTreeLine"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerRow.HotTracking">
      <summary>Gets or sets a boolean value indicating if hot tracking is enabled for the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerRow.IsBackColorAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnManagerRow.IsHotTrackingAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.ColumnManagerRow.HotTracking"></see> property gets its value from its parent.</summary>
    </member>
    <member name="E:Xceed.Grid.ColumnManagerRow.AllowColumnReorderChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.ColumnManagerRow.AllowColumnReorder"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.ColumnManagerRow.AllowColumnResizeChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.ColumnManagerRow.AllowColumnResize"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.ColumnManagerRow.AllowSortChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.ColumnManagerRow.AllowSort"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.ColumnRemovedEventArgs.#ctor(Xceed.Grid.Column,System.Int32)">
      <summary>Initializes a new instance of the ColumnRemovedEventArgs class.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnRemovedEventArgs.Column">
      <summary>Gets the <see cref="T:Xceed.Grid.Column"></see> that was removed from the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.ColumnRemovedEventArgs.Index">
      <summary>Gets the zero-based index at which the <see cref="P:Xceed.Grid.ColumnRemovedEventArgs.Column"></see> was removed.</summary>
    </member>
    <member name="M:Xceed.Grid.DataBoundColumn.#ctor">
      <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.DataBoundColumn.#ctor(System.String)">
      <summary>Initializes a new instance of the DataBoundColumn class specifying its name.</summary>
    </member>
    <member name="M:Xceed.Grid.DataBoundColumn.#ctor(Xceed.Grid.DataBoundColumn)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.DataBoundColumn"></see> class specifying
            the DataBoundColumn that will be used as a template to create the DataBoundColumns.</summary>
    </member>
    <member name="M:Xceed.Grid.DataBoundColumn.CreateInstance">
      <summary>Creates a new <see cref="T:Xceed.Grid.Column"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to the newly create <see cref="T:Xceed.Grid.Column"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.DataBoundColumn.Initialize(System.String)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:Xceed.Grid.DataBoundColumn.Linked">
      <summary>Gets a boolean value indicating if the column is linked to a field in the data source.</summary>
    </member>
    <member name="P:Xceed.Grid.DataBoundColumn.ReadOnlyDataSource">
      <summary>Gets a boolean value indicating if the field in the data source to which the column is <see cref="P:Xceed.Grid.DataBoundColumn.Linked"></see> is read only.</summary>
    </member>
    <member name="M:Xceed.Grid.DataCell.#ctor">
      <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.DataCell.#ctor(System.String)">
      <summary>Initializes a new instance of the DataCell class specifying its field name.</summary>
    </member>
    <member name="M:Xceed.Grid.DataCell.#ctor(Xceed.Grid.DataCell)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.DataCell"></see> class specifying
            the DataCell that will be used as a template to create other DataCell objects.</summary>
    </member>
    <member name="M:Xceed.Grid.DataCell.#ctor(Xceed.Grid.Column)">
      <summary>Initializes a new instance of the DataCell class specifying its parent
            column.</summary>
    </member>
    <member name="M:Xceed.Grid.DataCell.CreateInstance">
      <summary>Creates a new <see cref="T:Xceed.Grid.DataCell"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to the newly create <see cref="T:Xceed.Grid.Cell"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.DataCell.GetValue">
      <summary>Retrieves the value assigned to the data cell.</summary>
      <returns>The value assigned to the data cell.</returns>
    </member>
    <member name="M:Xceed.Grid.DataCell.Initialize">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.DataCell.SetValue(System.Object)">
      <summary>Assigns the value to the data cell.</summary>
    </member>
    <member name="M:Xceed.Grid.DataRow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.DataRow"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.DataRow.#ctor(Xceed.Grid.RowSelector)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.DataRow"></see> class specifying its <see cref="T:Xceed.Grid.RowSelector"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.DataRow.#ctor(Xceed.Grid.DataRow)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.DataRow"></see> class
            specifying the template that will be used to create the data rows
            contained within the grid.</summary>
    </member>
    <member name="M:Xceed.Grid.DataRow.BeginEditCore">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.DataRow.CancelEditCore(System.Collections.ArrayList)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.DataRow.CreateCell(Xceed.Grid.Column)">
      <summary>Creates a new <see cref="T:Xceed.Grid.Cell"></see> object in the <see cref="T:Xceed.Grid.DataRow"></see>
            for the specified column.</summary>
      <returns>A reference to the newly created <see cref="T:Xceed.Grid.Cell"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.DataRow.CreateInstance">
      <summary>Creates a new <see cref="T:Xceed.Grid.Row"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to the newly created <see cref="T:Xceed.Grid.Row"></see> 
            object.</returns>
    </member>
    <member name="M:Xceed.Grid.DataRow.EndEditCore">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.DataRow.GetStyle">
      <summary>Retrieves a reference to the <see cref="T:Xceed.Grid.VisualGridElementStyle"></see> that is applied
            to the row.</summary>
      <returns>A reference to the <see cref="T:Xceed.Grid.VisualGridElementStyle"></see> that is applied to the row.</returns>
    </member>
    <member name="M:Xceed.Grid.DataRow.GetStyleIndex">
      <summary>Retrieves the index of the <see cref="T:Xceed.Grid.GridElementStyle"></see> that is applied to the row.</summary>
      <returns>A zero-based index representing the <see cref="T:Xceed.Grid.GridElementStyle"></see> that 
            is applied to the row.</returns>
    </member>
    <member name="M:Xceed.Grid.DataRow.OnShowPlusMinusChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DataRow.ShowPlusMinusChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DataRow.Remove">
      <summary>Removes the data row from the grid as well as from the data source.</summary>
    </member>
    <member name="M:Xceed.Grid.DataRow.ResetShowPlusMinus">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.DataRow.ShowPlusMinus"></see> property
            to its default value, <see cref="P:Xceed.Grid.DataRow.DefaultShowPlusMinus"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.AmbientBackColor">
      <summary>Gets the ambient value of the datarow's <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.AmbientClipPartialLine">
      <summary>Gets the ambient value of the datarow's <see cref="P:Xceed.Grid.GridElement.ClipPartialLine"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.AmbientFont">
      <summary>Gets the ambient value of the datarow's <see cref="P:Xceed.Grid.GridElement.Font"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.AmbientForeColor">
      <summary>Gets the ambient value of the datarow's <see cref="P:Xceed.Grid.GridElement.ForeColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.AmbientHorizontalAlignment">
      <summary>Gets the ambient value of the datarow's <see cref="P:Xceed.Grid.GridElement.HorizontalAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.AmbientTrimming">
      <summary>Gets the ambient value of the datarow's <see cref="P:Xceed.Grid.GridElement.Trimming"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.AmbientVerticalAlignment">
      <summary>Gets the ambient value of the datarow's <see cref="P:Xceed.Grid.GridElement.VerticalAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.AmbientWordWrap">
      <summary>Gets the ambient value of the datarow's <see cref="P:Xceed.Grid.GridElement.WordWrap"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.CellType">
      <summary>Gets the <see cref="T:System.Type"></see> of the cells contained
            in the data row.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.DefaultBackgroundImage">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.VisualGridElement.BackgroundImage"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.DefaultBackgroundImageAlignment">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.VisualGridElement.BackgroundImageAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.DefaultBackgroundImageStyle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.VisualGridElement.BackgroundImageStyle"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.DefaultCanBeSelected">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.CanBeSelected"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.DefaultHotVisualStyle">
      <summary>Gets the default visual style of a
                <see cref="T:Xceed.Grid.DataRow"></see> that is in a hot state.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.DefaultShowPlusMinus">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.DataRow.ShowPlusMinus"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.DefaultVisibleWhenCollapsed">
      <summary>Gets the default value of the&amp;amp;nbsp;&amp;lt;A href="Xceed.Grid~Xceed.Grid.DataRow~VisibleWhenCollapsed.html"&amp;gt;VisibleWhenCollapsed&amp;lt;/A&amp;gt; property.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.DetailGrids">
      <summary>Gets the list of detail grids associated with the DataRow.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.EnforceCellDataTypes">
      <summary>Gets a boolean value indicating if the data types of the cells should match the data type of their respective parent columns.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.Index">
      <summary>Gets the index of the row in the grid's collection of <see cref="P:Xceed.Grid.DetailGrid.DataRows"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.ShowPlusMinus">
      <summary>Gets or sets a value indicating whether plus-sign (+) and minus-sign (-) buttons are displayed next 
            to DataRows that contain child DetailGrids.</summary>
    </member>
    <member name="P:Xceed.Grid.DataRow.SourceObject">
      <summary>Gets the object from which the row is getting is value.</summary>
    </member>
    <member name="E:Xceed.Grid.DataRow.ShowPlusMinusChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.DataRow.ShowPlusMinus"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.DetailGrid"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.#ctor(Xceed.Grid.GroupMargin,Xceed.Grid.SpacerRow,Xceed.Grid.SpacerRow)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.DetailGrid"></see> class specifying its margins.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.#ctor(Xceed.Grid.GroupMargin,Xceed.Grid.SpacerRow,Xceed.Grid.SpacerRow,Xceed.Grid.FixedColumnSplitter)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.DetailGrid"></see> class specifying its margins.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.#ctor(Xceed.Grid.DetailGrid,Xceed.Grid.DetailGrid)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.DetailGrid"></see> class specifying the template that will be used to create other detail grids.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.ApplyStyleSheet(Xceed.Grid.StyleSheet)">
      <summary>Applies the specified stylesheet to the grid.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.BeginInit">
      <summary>Signals the beginning of a batch modification process.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.BringIntoView">
      <summary>Brings the detail grid into the visible area of the <see cref="P:Xceed.Grid.GridElement.GridControl"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.Clear">
      <summary>Clears the entire content of the grid including the data binding and styles and collections.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.CreateInstance(Xceed.Grid.DetailGrid)">
      <summary>Creates a new <see cref="T:Xceed.Grid.DetailGrid"></see> object that is a copy of the current instance indicating if the new instance should be synchronized with the original detail grid.</summary>
      <returns>A reference to newly create DetailGrid object.</returns>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.EndInit">
      <summary>Signals the end of a batch modification process.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.Initialize">
      <summary>Initializes the content of the detail grid.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.Invalidate">
      <summary>Invalidates the rectangle of the detail grid and causes a paint message to be sent to the 
            <see cref="P:Xceed.Grid.GridElement.GridControl"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnAddingDataRow(Xceed.Grid.AddingDataRowEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.AddingDataRow"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnAllowCellNavigationChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.AllowCellNavigationChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnAutoCreateColumnsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.AutoCreateColumnsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnColumnAdded(Xceed.Grid.ColumnAddedEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.ColumnAdded"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnColumnRemoved(Xceed.Grid.ColumnRemovedEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.ColumnRemoved"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnDataBindingChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.DataBindingChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnDataMemberChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.DataMemberChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnDataSourceChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.DataSourceChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnErrorBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.ErrorBackColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnErrorForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.ErrorForeColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnErrorVisualStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.ErrorVisualStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnGroupAdded(Xceed.Grid.GroupAddedEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.GroupAdded"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnGroupingUpdated(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.GroupingUpdated"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnHideSelectionChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.HideSelectionChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnInactiveSelectionBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.InactiveSelectionBackColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnInactiveSelectionForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.InactiveSelectionForeColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnInactiveSelectionVisualStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.InactiveSelectionVisualStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnInitializingDetailGrid(Xceed.Grid.InitializingDetailGridEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.InitializingDetailGrid"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnInitializingNewDataRow(Xceed.Grid.InitializingNewDataRowEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.InitializingNewDataRow"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnQueryGroupKeys(Xceed.Grid.QueryGroupKeysEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.QueryGroupKeys"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnSelectionBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.SelectionBackColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnSelectionForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.SelectionForeColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnSelectionVisualStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.SelectionVisualStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnShowTreeLinesChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.ShowTreeLinesChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnShowUnlinkedColumnsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.ShowUnlinkedColumnsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnSorted(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.Sorted"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.OnSortedColumnsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.DetailGrid.SortedColumnsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.ResetAllowCellNavigation">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.DetailGrid.AllowCellNavigation"></see> property
            to its default value, <see cref="P:Xceed.Grid.DetailGrid.DefaultAllowCellNavigation"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.ResetAutoCreateColumns">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.DetailGrid.AutoCreateColumns"></see> property to its default value, <see cref="P:Xceed.Grid.DetailGrid.DefaultAutoCreateColumns"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.ResetErrorBackColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.DetailGrid.ErrorBackColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.DetailGrid.DefaultErrorBackColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.ResetErrorForeColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.DetailGrid.ErrorForeColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.DetailGrid.DefaultErrorForeColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.ResetErrorVisualStyle">
      <summary>Resets the visual style of a row that contains a cell that contains an 
            error in the <see cref="T:Xceed.Grid.DetailGrid"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.ResetHideSelection">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.DetailGrid.HideSelection"></see> property
            to its default value, <see cref="P:Xceed.Grid.DetailGrid.DefaultHideSelection"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.ResetInactiveSelectionBackColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.DetailGrid.InactiveSelectionBackColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.DetailGrid.DefaultInactiveSelectionBackColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.ResetInactiveSelectionForeColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.DetailGrid.InactiveSelectionForeColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.DetailGrid.DefaultInactiveSelectionForeColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.ResetInactiveSelectionVisualStyle">
      <summary>Resets the visual style of an inactive selected row in the 
                <see cref="T:Xceed.Grid.DetailGrid"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.ResetSelectionBackColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.DetailGrid.SelectionBackColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.DetailGrid.DefaultSelectionBackColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.ResetSelectionForeColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.DetailGrid.SelectionForeColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.DetailGrid.DefaultSelectionForeColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.ResetSelectionVisualStyle">
      <summary>Resets the visual style of a selected row in the <see cref="T:Xceed.Grid.DetailGrid"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.ResetShowTreeLines">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.DetailGrid.ShowTreeLines"></see> property
            to its default value, <see cref="P:Xceed.Grid.DetailGrid.DefaultShowTreeLines"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.ResetShowUnlinkedColumns">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.DetailGrid.ShowUnlinkedColumns"></see> property to its default value,
            <see cref="P:Xceed.Grid.DetailGrid.DefaultShowUnlinkedColumns"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.ResetStyle">
      <summary>Resets the values of the properties affected by the <see cref="M:Xceed.Grid.DetailGrid.ApplyStyleSheet(Xceed.Grid.StyleSheet)"></see>
            method to their default values.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.ResetTitle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.DetailGrid.Title"></see> property to its default value, <see cref="P:Xceed.Grid.DetailGrid.DefaultTitle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.SetDataBinding(System.Object,System.String)">
      <summary>Sets the <see cref="P:Xceed.Grid.DetailGrid.DataSource"></see> and <see cref="P:Xceed.Grid.DetailGrid.DataMember"></see> properties 
            at run time.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.UpdateDetailGrids">
      <summary>Updates the detail grid's contained in the detail grid. Any modifications made to the 
            <see cref="P:Xceed.Grid.DetailGrid.DetailGridTemplates"></see> property must be followed by a call to UpdateDetailGrids otherwise 
            the changes will not be reflected in the detail grid.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.UpdateGrouping">
      <summary>Updates the way in which the grid is grouped according to the groups
            specified in the <see cref="P:Xceed.Grid.DetailGrid.GroupTemplates"></see> property.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGrid.UpdateRectangles">
      <summary>Recalculates and repaints (invalidates) the rectangles of each <see cref="T:Xceed.Grid.GridElement"></see>
            in the <see cref="P:Xceed.Grid.GridElement.GridControl"></see>. <b>The rectangles of the 
            <see cref="P:Xceed.Grid.GridElement.GridControl"></see> are not affected.</b></summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.AllowCellNavigation">
      <summary>Gets or sets a boolean value indicating if it is possible to navigate from cell to cell in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.AmbientParent">
      <summary>Gets the ambient parent of the group.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.AutoCreateColumns">
      <summary>Gets or sets a boolean value indicating if columns should be automatically created when the grid is bound.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.BottomMargin">
      <summary>Gets the bottom margin of the detail grid.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.Columns">
      <summary>Gets a list of all the columns in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DataMember">
      <summary>Gets or sets a specific table in the data source.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DataRows">
      <summary>Gets a list of all the data rows in the grid, regardless
            of the group hierarchy and sort.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DataRowTemplate">
      <summary>Gets or sets a reference to the <see cref="T:Xceed.Grid.DataRow"></see> object used as a template
            to create the data rows that will be contained within the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DataRowTemplateStyles">
      <summary>Gets a list of the styles applied to the grid's datarows.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DataSource">
      <summary>Gets or sets the data source used to populate the grid's <see cref="T:Xceed.Grid.DataRow"></see> object.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DefaultAllowCellNavigation">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.DetailGrid.AllowCellNavigation"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DefaultAutoCreateColumns">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.DetailGrid.AutoCreateColumns"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DefaultErrorBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.DetailGrid.ErrorBackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DefaultErrorForeColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.DetailGrid.ErrorForeColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DefaultErrorVisualStyle">
      <summary>Gets the default visual style of a row that contains a cell that contains 
            an error in the <see cref="T:Xceed.Grid.DetailGrid"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DefaultHideSelection">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.DetailGrid.HideSelection"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DefaultInactiveSelectionBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.DetailGrid.InactiveSelectionBackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DefaultInactiveSelectionForeColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.DetailGrid.InactiveSelectionForeColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DefaultInactiveSelectionVisualStyle">
      <summary>Gets the default visual style of an inactive selected row in the 
                <see cref="T:Xceed.Grid.DetailGrid"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DefaultSelectionBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.DetailGrid.SelectionBackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DefaultSelectionForeColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.DetailGrid.SelectionForeColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DefaultSelectionVisualStyle">
      <summary>Gets the default visual style of a selected row in the <see cref="T:Xceed.Grid.DetailGrid"></see></summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DefaultShowTreeLines">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.DetailGrid.ShowTreeLines"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DefaultShowUnlinkedColumns">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.DetailGrid.ShowUnlinkedColumns"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DefaultTitle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.DetailGrid.Title"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.DetailGridTemplates">
      <summary>Gets a list of the DetailGrid objects used as templates to create the detail grids that will be 
            associated with each of the grid's DataRows.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.ErrorBackColor">
      <summary>Gets or sets the background color that is used when an error occurs in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.ErrorForeColor">
      <summary>Gets or sets the foreground color that is used when an error occurs in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.ErrorVisualStyle">
      <summary>Gets or sets the visual style of a row that contains a cell that 
            contains an error in the <see cref="T:Xceed.Grid.DetailGrid"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.FixedColumnSplitter">
      <summary>Gets the grid's fixed column splitter.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.GroupTemplates">
      <summary>Gets a list of the <see cref="T:Xceed.Grid.Group"></see> objects used as templates 
            to create the groups that will be contained within the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.HideSelection">
      <summary>Gets or sets a value indicating whether the selected rows in the grid remain highlighted when the grid loses focus.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.InactiveSelectionBackColor">
      <summary>Gets or sets the inactive selection background color of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.InactiveSelectionForeColor">
      <summary>Gets or sets the inactive selection foreground color of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.InactiveSelectionVisualStyle">
      <summary>
        <para>
                    Gets or sets the visual style of an inactive selected row in the <see cref="T:Xceed.Grid.DetailGrid"></see>.
                </para>
      </summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.InBatchInitialization">
      <summary>Gets a boolean value indicating if the grid is in batch initialization mode.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.IsCollapseRoot">
      <summary>Gets a boolean value indicating if the detail grid caused the collapsing of all its child detail grids.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.ParentDataRow">
      <summary>Gets the parent <see cref="T:Xceed.Grid.DataRow"></see> of the detail grid.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.SelectionBackColor">
      <summary>Gets or sets the selection background color of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.SelectionForeColor">
      <summary>Gets or sets the selection foreground color of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.SelectionVisualStyle">
      <summary>Gets or sets the visual style of a selected row in the <see cref="T:Xceed.Grid.DetailGrid"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.ShowTreeLines">
      <summary>Gets or sets a boolean value indicating if the tree lines that link detail grids to their <see cref="P:Xceed.Grid.GroupBase.ParentGrid"></see> should be visible.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.ShowUnlinkedColumns">
      <summary>Gets or sets a boolean value indicating if the DataBoundColumns should be visible even if they are not linked to a field in the data source.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.SortedColumns">
      <summary>Gets a list of all the columns used to sort the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.Title">
      <summary>Gets or sets the title of the detail grid displayed in the <see cref="T:Xceed.Grid.GroupByRow"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.TopMargin">
      <summary>Gets the top margin of the detail grid.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGrid.ReportStyle">
      <summary>Gets the report style of the detail grid.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.AddingDataRow">
      <summary>Raised when a new data row is being added to the grid.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.AllowCellNavigationChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.DetailGrid.AllowCellNavigation"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.AutoCreateColumnsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.DetailGrid.AutoCreateColumns"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.ColumnAdded">
      <summary>Raised when a column is added to the grid.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.ColumnRemoved">
      <summary>Raised when a column is removed from the grid.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.DataBindingChanged">
      <summary>Raised when the values of the <see cref="P:Xceed.Grid.DetailGrid.DataSource"></see> or <see cref="P:Xceed.Grid.DetailGrid.DataMember"></see> properties
            are changed, or when the <see cref="M:Xceed.Grid.DetailGrid.SetDataBinding(System.Object,System.String)"></see> method is called.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.DataMemberChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.DetailGrid.DataMember"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.DataSourceChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.DetailGrid.DataSource"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.ErrorBackColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.DetailGrid.ErrorBackColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.ErrorForeColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.DetailGrid.ErrorForeColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.ErrorVisualStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.DetailGrid.ErrorVisualStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.GroupAdded">
      <summary>Raised when a new group is added to the grid.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.GroupingUpdated">
      <summary>Raised when the data rows in the grid have been grouped.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.HideSelectionChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.DetailGrid.HideSelection"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.InactiveSelectionBackColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.DetailGrid.InactiveSelectionBackColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.InactiveSelectionForeColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.DetailGrid.InactiveSelectionForeColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.InactiveSelectionVisualStyleChanged">
      <summary>Raised when the value of the
                <see cref="P:Xceed.Grid.DetailGrid.InactiveSelectionVisualStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.InitializingDetailGrid">
      <summary>Raised for each <see cref="T:Xceed.Grid.DataRow"></see> about to be added to the detail grid to initialize its
            detail grid(s).</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.InitializingNewDataRow">
      <summary>Raised <b>only</b> by the <see cref="M:Xceed.Grid.Collections.DataRowList.AddNew"></see> method to initialize the
            default values of cells in the data row.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.QueryGroupKeys">
      <summary>Raised after a data row has been built in order to group it.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.SelectionBackColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.DetailGrid.SelectionBackColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.SelectionForeColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.DetailGrid.SelectionForeColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.SelectionVisualStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.DetailGrid.SelectionVisualStyle"></see>
                property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.ShowTreeLinesChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.DetailGrid.ShowTreeLines"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.ShowUnlinkedColumnsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.DetailGrid.ShowUnlinkedColumns"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.Sorted">
      <summary>Raised when the grid has been sorted.</summary>
    </member>
    <member name="E:Xceed.Grid.DetailGrid.SortedColumnsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.DetailGrid.SortedColumns"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGridMargin.#ctor">
      <summary>Initialize a new instance of the DetailGridMargin class.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGridMargin.#ctor(Xceed.Grid.DetailGridMargin,Xceed.Grid.GroupBase)">
      <summary>Initializes a new instance of the DetailGridMargin class specifying the template that 
            will be used to create other DetailGridMargins.</summary>
    </member>
    <member name="M:Xceed.Grid.DetailGridMargin.CreateInstance(Xceed.Grid.GroupBase)">
      <summary>Creates a new <see cref="T:Xceed.Grid.DetailGridMargin"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to the newly created <see cref="T:Xceed.Grid.GroupMargin"></see> object.</returns>
    </member>
    <member name="P:Xceed.Grid.DetailGridMargin.AmbientParent">
      <summary>Gets the ambient parent of the DetailGridMargin.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGridMargin.Borders">
      <summary>Gets the borders of the <see cref="T:Xceed.Grid.Cell"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGridMargin.DefaultVisible">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.Visible"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.DetailGridMargin.IsBackColorAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property gets its value from its parent.</summary>
    </member>
    <member name="M:Xceed.Grid.EditLeftEventArgs.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the EditLeftEventArgs class.</summary>
    </member>
    <member name="P:Xceed.Grid.EditLeftEventArgs.Commited">
      <summary>Gets a boolean value indicating if the modifications have been committed to the cell.</summary>
    </member>
    <member name="M:Xceed.Grid.EnteringEditEventArgs.#ctor(Xceed.Grid.Editors.CellEditorManager,System.Boolean)">
      <summary>Initializes a new instance of the EnteringEditEventArgs class.</summary>
    </member>
    <member name="P:Xceed.Grid.EnteringEditEventArgs.CellEditorManager">
      <summary>Gets or sets the <see cref="T:Xceed.Grid.Editors.CellEditorManager"></see> that will be used to edit the content of the cell.</summary>
    </member>
    <member name="M:Xceed.Grid.FixedColumnSplitter.#ctor">
      <summary>Initializes a new instance of the FixedColumnSplitter class.</summary>
    </member>
    <member name="M:Xceed.Grid.FixedColumnSplitter.#ctor(Xceed.Grid.FixedColumnSplitter)">
      <summary>Initializes a new instance of the FixedColumnSplitter class specifying the FixedColumnSplitter
            to use as a template.</summary>
    </member>
    <member name="M:Xceed.Grid.FixedColumnSplitter.BringIntoView">
      <summary>Brings the fixed column splitter into the visible area of the grid.</summary>
    </member>
    <member name="M:Xceed.Grid.FixedColumnSplitter.CreateInstance">
      <summary>Creates a new <see cref="T:Xceed.Grid.FixedColumnSplitter"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to newly create <see cref="T:Xceed.Grid.FixedColumnSplitter"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.FixedColumnSplitter.OnAllowRepositioningChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.FixedColumnSplitter.AllowRepositioningChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.FixedColumnSplitter.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.FixedColumnSplitter.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.FixedColumnSplitter.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.FixedColumnSplitter.OnWidthChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.FixedColumnSplitter.WidthChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.FixedColumnSplitter.PaintBackground(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the background of the fixed column splitter.</summary>
    </member>
    <member name="M:Xceed.Grid.FixedColumnSplitter.PaintGripperBackground(Xceed.Grid.ColumnManagerRow,Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the background of the fixed column splitter's gripper.</summary>
    </member>
    <member name="M:Xceed.Grid.FixedColumnSplitter.PaintGripperForeground(Xceed.Grid.ColumnManagerRow,Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the foreground of the fixed column splitter's gripper.</summary>
    </member>
    <member name="M:Xceed.Grid.FixedColumnSplitter.PaintHotState(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the FixedColumnSplitter in a hot state.</summary>
    </member>
    <member name="M:Xceed.Grid.FixedColumnSplitter.ResetAllowRepositioning">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.FixedColumnSplitter.AllowRepositioning"></see> property to its default value, <see cref="P:Xceed.Grid.FixedColumnSplitter.DefaultAllowRepositioning"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.FixedColumnSplitter.ResetWidth">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.FixedColumnSplitter.Width"></see> property to its default value, <see cref="P:Xceed.Grid.FixedColumnSplitter.DefaultWidth"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.FixedColumnSplitter.SetVisibleCore(Xceed.Grid.GridElement+AmbientBool)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:Xceed.Grid.FixedColumnSplitter.AllowRepositioning">
      <summary>Gets or sets a boolean value indicating if the fixed column splitter can be moved allowing for fixed columns to be added or removed.</summary>
    </member>
    <member name="P:Xceed.Grid.FixedColumnSplitter.AmbientParent">
      <summary>Gets the ambient parent of the fixed column splitter.</summary>
    </member>
    <member name="P:Xceed.Grid.FixedColumnSplitter.Borders">
      <summary>Gets the borders of the fixed column splitter.</summary>
    </member>
    <member name="P:Xceed.Grid.FixedColumnSplitter.DefaultAllowRepositioning">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.FixedColumnSplitter.AllowRepositioning"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.FixedColumnSplitter.DefaultBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.FixedColumnSplitter.DefaultVisible">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.Visible"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.FixedColumnSplitter.DefaultWidth">
      <summary>Gets the default value, in pixels, of the <see cref="P:Xceed.Grid.FixedColumnSplitter.Width"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.FixedColumnSplitter.IsBackColorAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.FixedColumnSplitter.ParentGrid">
      <summary>Gets the parent grid of the fixed column splitter.</summary>
    </member>
    <member name="P:Xceed.Grid.FixedColumnSplitter.Position">
      <summary>Gets or sets the position of the fixed column splitter.</summary>
    </member>
    <member name="P:Xceed.Grid.FixedColumnSplitter.Width">
      <summary>Gets or sets the width, in pixels, of the fixed column splitter.</summary>
    </member>
    <member name="E:Xceed.Grid.FixedColumnSplitter.AllowRepositioningChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.FixedColumnSplitter.AllowRepositioning"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.FixedColumnSplitter.WidthChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.FixedColumnSplitter.Width"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.GradientMap.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GradientMap"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.GradientMap.#ctor(Xceed.Grid.GradientMap)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GradientMap"></see> class, using the provided gradient map.</summary>
    </member>
    <member name="M:Xceed.Grid.GradientMap.Clone">
      <summary>Creates a copy of this <see cref="T:Xceed.Grid.GradientMap"></see> object.</summary>
      <returns>The GradientMap object this method creates, cast as an object.</returns>
    </member>
    <member name="M:Xceed.Grid.GradientMap.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current
                <see cref="T:Xceed.Grid.GradientMap"></see>.</summary>
      <returns>&amp;lt;b&amp;gt;true&amp;lt;/b&amp;gt; if the specified object is equal to the current
                <see cref="T:Xceed.Grid.GradientMap"></see>; otherwise, &amp;lt;strong&amp;gt;false&amp;lt;/strong&amp;gt;.
            &amp;lt;crlf&amp;gt;&amp;lt;b&amp;gt;true&amp;lt;/b&amp;gt; if the specified object is equal to the current
                <see cref="T:Xceed.Grid.GradientMap"></see>; otherwise, &amp;lt;b&amp;gt;false&amp;lt;/b&amp;gt;.</returns>
    </member>
    <member name="M:Xceed.Grid.GradientMap.GetHashCode">
      <summary>Serves as a hash function for the <see cref="T:Xceed.Grid.GradientMap"></see>, suitable
                for use in hashing algorithms and data structures such as a hash table.</summary>
      <returns>An integer value representing a hash code for the current
                <see cref="T:Xceed.Grid.GradientMap"></see>.</returns>
    </member>
    <member name="M:Xceed.Grid.GradientMap.GetOffsetColorPairs(System.Double[]@,System.Drawing.Color[]@)">
      <summary>Returns the offsets in the gradient map and their corresponding colors.</summary>
    </member>
    <member name="M:Xceed.Grid.GradientMap.OnGradientModeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GradientMap.GradientModeChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GradientMap.ResetGradientMode">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GradientMap.GradientMode"></see> property to its default value, <see cref="P:Xceed.Grid.GradientMap.DefaultGradientMode"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GradientMap.DefaultGradientMode">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GradientMap.GradientMode"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GradientMap.GradientMode">
      <summary>Gets the gradient mode of a <see cref="T:Xceed.Grid.GradientMap"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GradientMap.GradientStops">
      <summary>Gets the gradient stops of a <see cref="T:Xceed.Grid.GradientMap"></see>.</summary>
    </member>
    <member name="E:Xceed.Grid.GradientMap.GradientModeChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GradientMap.GradientMode"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.GradientStop.#ctor(System.Double,System.Drawing.Color)">
      <summary>Initializes a new instance of the GradientStop class.</summary>
    </member>
    <member name="M:Xceed.Grid.GradientStop.#ctor">
      <summary>Initializes a new instance of the GradientStop class.</summary>
    </member>
    <member name="M:Xceed.Grid.GradientStop.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current
                <see cref="T:Xceed.Grid.GradientStop"></see>.</summary>
      <returns>
        <b>true</b> if the specified object is equal to the current
                <see cref="T:Xceed.Grid.GradientStop"></see>; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Xceed.Grid.GradientStop.GetHashCode">
      <summary>Serves as a hash function for the <see cref="T:Xceed.Grid.GradientStop"></see>,
                suitable for use in hashing algorithms and data structures such as a hash table.</summary>
      <returns>An integer value representing a hash code for the current
                <see cref="T:Xceed.Grid.GradientStop"></see>.</returns>
    </member>
    <member name="P:Xceed.Grid.GradientStop.Color">
      <summary>Gets or sets the color of the <see cref="T:Xceed.Grid.GradientStop"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GradientStop.Offset">
      <summary>Gets or sets the offset of the <see cref="T:Xceed.Grid.GradientStop"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GradientStopList.#ctor">
      <summary>Initializes a new instance of the GradientStopList class.</summary>
    </member>
    <member name="M:Xceed.Grid.GradientStopList.Add(Xceed.Grid.GradientStop)">
      <summary>Adds a <see cref="GradientStop"></see> to the GradientStopList.
                GradientStops must be added sequentially in the order of their offsets. Adding a
                GradientStop whose offset is less than the offset of the last GradientStop added to the
                collection will cause an ArgumentOutOfRangeException to be thrown.</summary>
      <returns>The index of the <see cref="T:Xceed.Grid.GradientStop"></see> added to the collection.</returns>
    </member>
    <member name="M:Xceed.Grid.GradientStopList.Contains(Xceed.Grid.GradientStop)">
      <summary>Retrieves a boolean value indicating whether a specific
                <see cref="GradientStop"></see> object exists in the collection.</summary>
      <returns>
        <b>true</b> if the <see cref="T:Xceed.Grid.GradientStop"></see> exists in the list; otherwise,
                <b>false</b>.</returns>
    </member>
    <member name="M:Xceed.Grid.GradientStopList.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current
                <see cref="T:Xceed.Grid.GradientStop"></see>.</summary>
      <returns>
        <b>true</b> if the specified object is equal to the current
                <see cref="T:Xceed.Grid.GradientStop"></see>; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Xceed.Grid.GradientStopList.GetHashCode">
      <summary>Serves as a hash function for the <see cref="T:Xceed.Grid.GradientStop"></see>,
                suitable for use in hashing algorithms and data structures such as a hash table.</summary>
      <returns>A hash code for the current <see cref="T:Xceed.Grid.GradientStop"></see>.</returns>
    </member>
    <member name="M:Xceed.Grid.GradientStopList.GetOffsetColorPairs(System.Double[]@,System.Drawing.Color[]@)">
      <summary>Returns the offsets in the gradient map and their corresponding colors.</summary>
    </member>
    <member name="M:Xceed.Grid.GradientStopList.IndexOf(Xceed.Grid.GradientStop)">
      <summary>Searches for the specified <see cref="T:Xceed.Grid.GradientStop"></see>
                object and returns the zero-based index of the occurrence within the collection.</summary>
      <returns>The zero-based index of the first occurrence of
                <see cref="gradientStop"></see> within the entire list, if found;
                otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Grid.GradientStopList.OnInsert(System.Int32,System.Object)">
      <summary>Performs additional custom processes before inserting a new item into
                the <see cref="T:Xceed.Grid.GradientStopList"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GradientStopList.Remove(Xceed.Grid.GradientStop)">
      <summary>Removes the specified <see cref="GradientStop"></see> object
                from the collection.</summary>
    </member>
    <member name="P:Xceed.Grid.GradientStopList.Item(System.Int32)">
      <summary>Gets the <see cref="T:Xceed.Grid.GradientStop"></see> at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GridControl"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.#ctor(Xceed.Grid.RowSelectorPane)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GridControl"></see> class specifying the <see cref="P:Xceed.Grid.GridControl.RowSelectorPane"></see> that will be displayed in the grid.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.#ctor(Xceed.Grid.RowSelectorPane,Xceed.Grid.FixedColumnSplitter)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GridControl"></see> class specifying the <see cref="P:Xceed.Grid.GridControl.RowSelectorPane"></see> that will be displayed in the grid.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.#ctor(Xceed.Grid.GridControl)">
      <summary>Initializes a new instance of the GridControl class specifying the GridControl
            control that will be used as a template.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ApplyStyleSheet(Xceed.Grid.StyleSheet)">
      <summary>Applies the specified stylesheet to the grid.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.BeginInit">
      <summary>Signals the beginning of a batch modification process.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.Clear">
      <summary>Clears the entire content of the grid including the data binding and styles and collections.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.Clone">
      <summary>Creates a shallow copy of the control.</summary>
      <returns>An <see cref="T:System.Object"></see> representing the shallow copy of the control.</returns>
    </member>
    <member name="M:Xceed.Grid.GridControl.CreateAccessibilityInstance">
      <summary>Creates a new accessibility object for the element.</summary>
      <returns>A new <see cref="T:System.Windows.Forms.AccessibleObject"></see> for the element.</returns>
    </member>
    <member name="M:Xceed.Grid.GridControl.EndInit">
      <summary>Signals the end of a batch modification process.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.GetSortedDataRows(System.Boolean)">
      <summary>Retrieves a collection of sorted data rows.</summary>
      <returns>A reference to a <see cref="T:Xceed.Grid.Collections.ReadOnlyDataRowList"></see> containing a list
            of sorted data rows.</returns>
    </member>
    <member name="M:Xceed.Grid.GridControl.IsInputChar(System.Char)">
      <summary>Determines if a character is an input character that the grid recognizes.</summary>
      <returns>true if the character should be sent directly to the grid and not preprocessed; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.GridControl.IsInputKey(System.Windows.Forms.Keys)">
      <summary>Returns a boolean value indicating if the key(s) pressed is an input key for the grid.</summary>
      <returns>true if the key(s) pressed in an input key; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.GridControl.MoveCurrentCell(Xceed.Grid.HorizontalDirection)">
      <summary>Moves the <see cref="P:Xceed.Grid.GridControl.CurrentCell"></see> in the specified horizontal direction.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.MoveCurrentColumn(Xceed.Grid.HorizontalDirection)">
      <summary>Moves the <see cref="P:Xceed.Grid.GridControl.CurrentColumn"></see> in the specified horizontal direction.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnAddingDataRow(Xceed.Grid.AddingDataRowEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.AddingDataRow"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnAllowCellNavigationChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.AllowCellNavigationChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnAutoCreateColumnsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.AutoCreateColumnsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnBackgroundImageAlignmentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.BackgroundImageAlignmentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnBackgroundImageStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.BackgroundImageStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnBindingContextChanged(System.EventArgs)">
      <summary>Raised when the <see cref="T:System.Windows.Forms.BindingContext"></see> of the Xceed 
            Grid control changes.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnBorderStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.BorderStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnCellEditorDisplayConditionsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.CellEditorDisplayConditionsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnClick(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Click"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnClipCurrentCellSelectionChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.ClipCurrentCellSelectionChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnClipPartialLineChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.ClipPartialLineChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnColumnAdded(Xceed.Grid.ColumnAddedEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.ColumnAdded"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnColumnRemoved(Xceed.Grid.ColumnRemovedEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.ColumnRemoved"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.ControlRemoved"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnCurrentCellChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.CurrentCellChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnCurrentColumnChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.CurrentColumnChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnCurrentRowChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.CurrentRowChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnDataBindingChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.DataBindingChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnDataMemberChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.DataMemberChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnDataRowsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.DataRowsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnDataSourceChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.DataSourceChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnDoubleClick(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DoubleClick"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DragDrop"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DragEnter"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnDragLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DragLeave"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DragOver"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnEnter(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Enter"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnErrorBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.ErrorBackColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnErrorBehaviorsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.ErrorBehaviorsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnErrorBlinkRateChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.ErrorBlinkRateChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnErrorBlinkStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.ErrorBlinkStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnErrorForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.ErrorForeColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnErrorIconChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.ErrorIconChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnFirstVisibleColumnChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.FirstVisibleColumnChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnFirstVisibleRowChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.FirstVisibleRowChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.FontChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.GiveFeedback"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnGotFocus(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.GotFocus"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnGridLineBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.GridLineBackColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnGridLineColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.GridLineColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnGridLineStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.GridLineStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnGripLocationChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.GripLocationChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnGroupAdded(Xceed.Grid.GroupAddedEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.GroupAdded"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnGroupingUpdated(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.GroupingUpdated"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnHandleCreated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnHandleDestroyed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnHideSelectionChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.HideSelectionChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnHorizontalAlignmentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.HorizontalAlignmentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnInactiveSelectionBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.InactiveSelectionBackColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnInactiveSelectionForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.InactiveSelectionForeColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnInitializingDetailGrid(Xceed.Grid.InitializingDetailGridEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.InitializingDetailGrid"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnInitializingNewDataRow(Xceed.Grid.InitializingNewDataRowEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.InitializingNewDataRow"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyPress"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyUp"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Leave"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnMouseEnter(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseEnter"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnMouseLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseWheel"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnNotifyMessage(System.Windows.Forms.Message)">
      <summary>Notifies the control of Windows messages.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnOverflowErrorTextChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.OverflowErrorTextChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnOverrideUIStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.OverrideUIStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Paint"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnParentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.QueryContinueDrag"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnQueryGroupKeys(Xceed.Grid.QueryGroupKeysEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.QueryGroupKeys"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnReadOnlyChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.ReadOnlyChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnResize(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Resize"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnScrollBarsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.ScrollBarsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnSelectedRowsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.SelectedRowsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnSelectedValueChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.SelectedValueChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnSelectionBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.SelectionBackColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnSelectionForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.SelectionForeColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnSelectionModeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.SelectionModeChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnShowFocusRectangleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.ShowFocusRectangleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnShowTreeLinesChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.ShowTreeLinesChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnShowUnlinkedColumnsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.ShowUnlinkedColumnsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnSingleClickEditChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.SingleClickEditChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnSorted(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.Sorted"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnSortedColumnsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.SortedColumnsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnSynchronizeDetailGridsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.SynchronizeDetailGridsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnTitleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.TitleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnTreeLineColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.TreeLineColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnTrimmingChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.TrimmingChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnUIVirtualizationModeChanged(System.EventArgs)">
      <summary>Raises the <A href="Xceed.Grid~Xceed.Grid.GridControl~UIVirtualizationModeChanged_EV.html">UIVirtualizationModeChanged</A> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Validating"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnValueMemberChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.ValueMemberChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnVerticalAlignmentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.VerticalAlignmentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.OnWordWrapChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridControl.WordWrapChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.PaintFocusRectangle(Xceed.Grid.VisualGridElement,System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
      <summary>Paints the focus rectangle around the <see cref="P:Xceed.Grid.GridControl.CurrentRow"></see> and <see cref="P:Xceed.Grid.GridControl.CurrentCell"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.Print">
      <summary>Prints the content of the grid using the default printer dialog.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.PrintPreview">
      <summary>Previews the content of the grid before printing using the
            default print preview dialog.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
      <summary>Processes a command key.</summary>
      <returns>true if the character was processed by the control; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetAllowCellNavigation">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.AllowCellNavigation"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultAllowCellNavigation"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetAutoCreateColumns">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.AutoCreateColumns"></see> property to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultAutoCreateColumns"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetBackColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.BackColor"></see> property to its default value.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetBackgroundImageAlignment">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.BackgroundImageAlignment"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultBackgroundImageAlignment"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetBackgroundImageStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.BackgroundImageStyle"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultBackgroundImageStyle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetBorderStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.BorderStyle"></see> property to its default value,
            <see cref="P:Xceed.Grid.GridControl.DefaultBorderStyle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetCellEditorDisplayConditions">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.CellEditorDisplayConditions"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultCellEditorDisplayConditions"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetClipCurrentCellSelection">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.ClipCurrentCellSelection"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultClipCurrentCellSelection"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetClipPartialLine">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.ClipPartialLine"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultClipPartialLine"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetErrorBackColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.ErrorBackColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultErrorBackColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetErrorBehaviors">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.ErrorBehaviors"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultErrorBehaviors"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetErrorBlinkRate">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.ErrorBlinkRate"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultErrorBlinkRate"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetErrorBlinkStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.ErrorBlinkStyle"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultErrorBlinkStyle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetErrorForeColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.ErrorForeColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultErrorForeColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetErrorIcon">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.ErrorIcon"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultErrorIcon"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetForeColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.ForeColor"></see> property to its default value.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetGradientMap">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.GradientMap"></see> property 
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultGradientMap"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetGridLineBackColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.GridLineBackColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultGridLineBackColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetGridLineColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.GridLineColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultGridLineColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetGridLineStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.GridLineStyle"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultGridLineStyle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetGripLocation">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.GripLocation"></see> property to its default value, 
            <see cref="T:Xceed.UI.GripLocation"></see>.None.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetHideSelection">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.HideSelection"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultHideSelection"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetHorizontalAlignment">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.HorizontalAlignment"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultHorizontalAlignment"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetInactiveSelectionBackColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.InactiveSelectionBackColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultInactiveSelectionBackColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetInactiveSelectionForeColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.InactiveSelectionForeColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultInactiveSelectionForeColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetOverflowErrorText">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.OverflowErrorText"></see> property to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultOverflowErrorText"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetOverrideUIStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.OverrideUIStyle"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultOverrideUIStyle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetReadOnly">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.ReadOnly"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultReadOnly"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetReportStyle">
      <summary>Resets the property values of the <see cref="P:Xceed.Grid.GridControl.ReportStyle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetScrollBars">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.ScrollBars"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultScrollBars"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetSelectionBackColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.SelectionBackColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultSelectionBackColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetSelectionForeColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.SelectionForeColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultSelectionForeColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetSelectionMode">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.SelectionMode"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultSelectionMode"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetShowFocusRectangle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.ShowFocusRectangle"></see> property to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultShowFocusRectangle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetShowTreeLines">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.ShowTreeLines"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultShowTreeLines"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetShowUnlinkedColumns">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.ShowUnlinkedColumns"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultShowUnlinkedColumns"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetSingleClickEdit">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.SingleClickEdit"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultSingleClickEdit"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetStyle">
      <summary>Resets the values of the properties affected by the <see cref="M:Xceed.Grid.GridControl.ApplyStyleSheet(Xceed.Grid.StyleSheet)"></see>
            method to their default values.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetSynchronizeDetailGrids">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.SynchronizeDetailGrids"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultSynchronizeDetailGrids"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetTitle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.Title"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultTitle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetTreeLineColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.TreeLineColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultTreeLineColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetTrimming">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.Trimming"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultTrimming"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetUIStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.UIStyle"></see> property to its default value.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetUIVirtualizationMode">
      <summary>Resets the value of the <A href="Xceed.Grid~Xceed.Grid.GridControl~UIVirtualizationMode.html">UIVirtualizationMode</A> to its default value.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetValueMember">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.ValueMember"></see> property to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultValueMember"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetVerticalAlignment">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.VerticalAlignment"></see> property to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultVerticalAlignment"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.ResetWordWrap">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridControl.WordWrap"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridControl.DefaultWordWrap"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.Scroll(Xceed.Grid.ScrollDirection)">
      <summary>Scrolls the grid in the specified direction.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.SetDataBinding(System.Object,System.String)">
      <summary>Sets the <see cref="P:Xceed.Grid.GridControl.DataSource"></see> and <see cref="P:Xceed.Grid.GridControl.DataMember"></see> properties 
            at run time.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.UpdateDetailGrids">
      <summary>Updates the detail grid's contained in the grid. Any modifications made to the <see cref="P:Xceed.Grid.GridControl.DetailGridTemplates"></see>
            property must be followed by a call to UpdateDetailGrids otherwise the changes will not be 
            reflected in the grid.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.UpdateGrouping">
      <summary>Updates the way in which the grid is grouped according to the groups
            specified in the <see cref="P:Xceed.Grid.GridControl.GroupTemplates"></see> property.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.UpdateRectangles">
      <summary>Recalculates and repaints (invalidates) the rectangles of each <see cref="T:Xceed.Grid.GridElement"></see> in the grid. <B>The grid's rectangles are not affected.</B></summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.GetVisualGridElementAtPoint(System.Drawing.Point)">
      <summary>Retrieves a reference to the grid element located at the specified coordinates.</summary>
      <returns>A reference to the <see cref="T:Xceed.Grid.VisualGridElement"></see> located at the specified coordinates.</returns>
    </member>
    <member name="M:Xceed.Grid.GridControl.GetVisualGridElementAtPoint(System.Int32,System.Int32)">
      <summary>Retrieves a reference to the grid element located at the specified x and y coordinates.</summary>
      <returns>A reference to the <see cref="T:Xceed.Grid.VisualGridElement"></see> located at the 
            specified x and y coordinates.</returns>
    </member>
    <member name="M:Xceed.Grid.GridControl.MoveCurrentRow(Xceed.Grid.VerticalDirection)">
      <summary>Moves the <see cref="P:Xceed.Grid.GridControl.CurrentRow"></see> in the specified vertical direction.</summary>
    </member>
    <member name="M:Xceed.Grid.GridControl.MoveCurrentRow(Xceed.Grid.VerticalDirection,Xceed.Grid.GridSection)">
      <summary>Moves the <see cref="P:Xceed.Grid.GridControl.CurrentRow"></see> in the specified vertical direction to the specified grid section.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.AllowCellNavigation">
      <summary>Gets or sets a boolean value indicating if it is possible to navigate from cell to cell in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.AutoCreateColumns">
      <summary>Gets or sets a boolean value indicating if columns should be automatically created when the grid is bound.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.BackColor">
      <summary>Gets or sets the background color of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.BackgroundImage">
      <summary>Gets or sets the grid's background image.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.BackgroundImageAlignment">
      <summary>Gets or sets the alignment of the grid's background image.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.BackgroundImageStyle">
      <summary>Gets or sets the style of the grid's background image.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.BorderStyle">
      <summary>Gets or sets the border style of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.CellEditorDisplayConditions">
      <summary>Gets or sets a value representing under what conditions cell editors are displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.CellEditorManagerMapping">
      <summary>Gets a table containing a list of <see cref="T:Xceed.Grid.Editors.CellEditorManager"></see> controls and the datatype of the cell's which they will edit.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.CellViewerManagerMapping">
      <summary>Gets a table containing a list of <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see> controls and the datatype of the cell's whose content they will display.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.ClipCurrentCellSelection">
      <summary>Gets or sets a value indicating whether the selection state of a row will be applied to the 
            current cell.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.ClipPartialLine">
      <summary>Gets or sets a boolean value indicating if partial lines should be clipped.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.Columns">
      <summary>Gets a list of all the columns in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.CurrentCell">
      <summary>Gets or sets a reference to the grid's current cell.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.CurrentColumn">
      <summary>Gets or sets a reference to the grid's current column.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.CurrentGrid">
      <summary>Gets the current detail grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.CurrentRow">
      <summary>Gets or sets the grid's current row</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DataMember">
      <summary>Gets or sets a specific table in the data source.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DataRows">
      <summary>Gets a list of all the data rows in the grid, regardless
            of the group hierarchy and sort.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DataRowTemplate">
      <summary>Gets or sets a reference to the <see cref="T:Xceed.Grid.DataRow"></see> object used as a template
            to create the data rows that will be contained within the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DataRowTemplateStyles">
      <summary>Gets a list of the styles applied to the grid's datarows.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DataSource">
      <summary>Gets or sets the data source used to populate the grid's <see cref="T:Xceed.Grid.DataRow"></see> object.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultAllowCellNavigation">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.AllowCellNavigation"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultAutoCreateColumns">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.AutoCreateColumns"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultBackgroundImageAlignment">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.BackgroundImageAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultBackgroundImageStyle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.BackgroundImageStyle"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultBorderStyle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.BorderStyle"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultCellEditorDisplayConditions">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.CellEditorDisplayConditions"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultClipCurrentCellSelection">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.ClipCurrentCellSelection"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultClipPartialLine">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.ClipPartialLine"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultErrorBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.ErrorBackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultErrorBehaviors">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.ErrorBehaviors"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultErrorBlinkRate">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.ErrorBlinkRate"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultErrorBlinkStyle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.ErrorBlinkStyle"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultErrorForeColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.ErrorForeColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultErrorIcon">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.ErrorIcon"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultGradientMap">
      <summary>Gets the default <see cref="P:Xceed.Grid.GridControl.GradientMap"></see> of the
                <see cref="T:Xceed.Grid.GridControl"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultGridLineBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.GridLineBackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultGridLineColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.GridLineColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultGridLineStyle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.GridLineStyle"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultHideSelection">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.HideSelection"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultHorizontalAlignment">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.HorizontalAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultInactiveSelectionBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.InactiveSelectionBackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultInactiveSelectionForeColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.InactiveSelectionForeColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultOverflowErrorText">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.OverflowErrorText"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultOverrideUIStyle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.OverrideUIStyle"></see>
                property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultReadOnly">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.ReadOnly"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultScrollBars">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.ScrollBars"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultSelectionBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.SelectionBackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultSelectionForeColor">
      <summary>Gets a <see cref="T:System.Drawing.Color"></see> structure representing the default value of 
            the <see cref="P:Xceed.Grid.GridControl.SelectionForeColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultSelectionMode">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.SelectionMode"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultShowFocusRectangle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.ShowFocusRectangle"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultShowTreeLines">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.ShowTreeLines"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultShowUnlinkedColumns">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.ShowUnlinkedColumns"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultSingleClickEdit">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.SingleClickEdit"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultSize">
      <summary>Gets the default value of the <see cref="T:System.Drawing.Size"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultSynchronizeDetailGrids">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.SynchronizeDetailGrids"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultTitle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.Title"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultTreeLineColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.TreeLineColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultTrimming">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.Trimming"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultUIVirtualizationMode">
      <summary>Gets the default value of the <A href="Xceed.Grid~Xceed.Grid.GridControl~UIVirtualizationMode.html">UIVirtualizationMode</A> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultValueMember">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.ValueMember"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultVerticalAlignment">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.VerticalAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DefaultWordWrap">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridControl.WordWrap"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DetailGridTemplates">
      <summary>Gets a list of the <see cref="T:Xceed.Grid.DetailGrid"></see> objects used as templates to create the detail grids that will be associated with each of the grid's DataRows.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.DisplayRectangle">
      <summary>Gets the display rectangle of the grid in client coordinates excluding
            the borders and scrollbars.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.Disposing">
      <summary>Gets a value indicating whether the control is in the process of being disposed of.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.ErrorBackColor">
      <summary>Gets or sets the background color that is used when an error occurs in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.ErrorBehaviors">
      <summary>Gets or sets the behavior the grid will exhibit if an error occurs.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.ErrorBlinkRate">
      <summary>Gets or sets the blink rate of the error icon (on the <see cref="T:Xceed.Grid.RowSelector"></see>) and the 
            background of cells and rows when an error occurs in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.ErrorBlinkStyle">
      <summary>Gets or sets blink style of the error icon (on the <see cref="T:Xceed.Grid.RowSelector"></see>) and the 
            background of cells and rows when an error occurs in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.ErrorForeColor">
      <summary>Gets or sets the foreground color that is used when an error occurs in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.ErrorIcon">
      <summary>Gets or sets the error icon displayed on the <see cref="T:Xceed.Grid.RowSelector"></see> when an error
            occurs in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.ErrorVisualStyle">
      <summary>Gets or sets the visual style of a row that contains a cell that
                contains an error in the <see cref="T:Xceed.Grid.GridControl"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.FirstVisibleColumn">
      <summary>Gets or sets the first visible column avaiable in the visible section of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.FirstVisibleRow">
      <summary>Gets or sets the first visible row available in the visible section of the grid's body.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.FixedColumnSplitter">
      <summary>Gets the grid's fixed column splitter.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.FixedFooterRows">
      <summary>Gets a list of all the fixed footer rows of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.FixedHeaderRows">
      <summary>Gets a list of all the fixed header rows of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.Font">
      <summary>Gets or sets the font of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.FooterRows">
      <summary>Gets a list of all the non-fixed footer rows of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.ForeColor">
      <summary>Gets or sets the foreground color of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.GradientMap">
      <summary>Gets or sets the gradient map of the <see cref="T:Xceed.Grid.GridControl"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.GridLineBackColor">
      <summary>Gets or sets the background color of the gridlines in the case where the
            <see cref="P:Xceed.Grid.GridControl.GridLineStyle"></see> is different than <see cref="F:System.Drawing.Drawing2D.DashStyle.Solid"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.GridLineColor">
      <summary>Gets or sets the color of the gridlines.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.GridLinePen">
      <summary>Gets the pen that is used to draw the gridlines.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.GridLineStyle">
      <summary>Gets or sets the style of the gridlines.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.GripLocation">
      <summary>Gets or sets the location of the resizing grip when the grid is dock-filled on a form.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.Groups">
      <summary>Gets a list of all the groups contained within the grid once it has has been built.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.GroupTemplates">
      <summary>Gets a list of the <see cref="T:Xceed.Grid.Group"></see> objects used as templates 
            to create the groups that will be contained within the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.HeaderRows">
      <summary>Gets a list of all the non-fixed header rows of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.HideSelection">
      <summary>Gets or sets a value indicating whether the selected rows in the grid remain highlighted when the grid loses focus.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment of the grid's content.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.InactiveSelectionBackColor">
      <summary>Gets or sets the inactive selection background color of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.InactiveSelectionForeColor">
      <summary>Gets or sets the inactive selection foreground color of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.InactiveSelectionVisualStyle">
      <summary>Gets or sets the visual style of an inactive selected row in the
                <see cref="T:Xceed.Grid.GridControl"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.InBatchInitialization">
      <summary>Gets a boolean value indicating if the grid is in batch initialization mode.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.IsReportStyleDefined">
      <summary>Gets a boolean value indicating if one or more properties of the <see cref="P:Xceed.Grid.GridControl.ReportStyle"></see> have been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.OverflowErrorText">
      <summary>Gets or sets the string that is displayed when the result of a statistical function exceeds the capacity of its datatype.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.OverrideUIStyle">
      <summary>Gets or sets a boolean value indicating whether any theming based on the UIStyle property of 
            the <see cref="T:Xceed.Grid.GridControl"></see> will be overridden.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.ReadOnly">
      <summary>Gets or sets a boolean value indicating if the grid can be edited.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.ReportSettings">
      <summary>Gets the grid's report settings.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.ReportStyle">
      <summary>Gets the report style of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.RowSelectorPane">
      <summary>Gets a reference to the grid's <see cref="P:Xceed.Grid.GridControl.RowSelectorPane"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.ScrollBars">
      <summary>Gets or sets a value indicating which scrollbars will be diplayed.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.SelectedRows">
      <summary>Gets a list of all the selected rows.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.SelectedValue">
      <summary>Gets or sets the value of the member property specified by the <see cref="P:Xceed.Grid.GridControl.ValueMember"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.SelectionBackColor">
      <summary>Gets or sets the selection background color of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.SelectionForeColor">
      <summary>Gets or sets the selection foreground color of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.SelectionMode">
      <summary>Gets or sets the selection mode of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.SelectionVisualStyle">
      <summary>Gets or sets the visual style of a selected row in the
                <see cref="T:Xceed.Grid.GridControl"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.ShowFocusRectangle">
      <summary>Gets or sets a boolean value indicating if the focus rectangle should be displayed around the <see cref="P:Xceed.Grid.GridControl.CurrentRow"></see> and/or <see cref="P:Xceed.Grid.GridControl.CurrentCell"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.ShowTreeLines">
      <summary>Gets or sets a boolean value indicating if the tree lines that link detail grids to their <see cref="P:Xceed.Grid.GroupBase.ParentGrid"></see> should be visible.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.ShowUnlinkedColumns">
      <summary>Gets or sets a boolean value indicating if the DataBoundColumns should be visible even if they are not linked to a field in the data source.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.SideMargin">
      <summary>Gets the side margin of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.SingleClickEdit">
      <summary>Gets or sets a boolean value indicating if the cell editor should be activated when the cell receives focus.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.SortedColumns">
      <summary>Gets a list of all the columns used to sort the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.SynchronizeDetailGrids">
      <summary>Gets or sets a boolean value indicating if the detail grids should be synchronized.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.Theme">
      <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.Title">
      <summary>Gets or sets the title of the grid displayed in the <see cref="T:Xceed.Grid.GroupByRow"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.TreeLineColor">
      <summary>Gets or sets the color of the treelines.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.TreeLinePen">
      <summary>Gets the pen that is used to draw the treelines.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.Trimming">
      <summary>Gets or sets a value indicating how text displayed in the cell will be 
            trimmed when it exceeds the edges of the layout rectangle.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.UIStyle">
      <summary>Gets or sets the appearance of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.UIVirtualizationMode">
      <summary>Gets or sets a value representing the UI virtualization mode used by the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.ValueMember">
      <summary>Gets or sets a string that specifies the property of the data source from which to draw the value.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.VerticalAlignment">
      <summary>Gets or sets the vertical alignment of the grid's content.</summary>
    </member>
    <member name="P:Xceed.Grid.GridControl.WordWrap">
      <summary>Gets or sets a boolean value indicating if the text of the grid element should be wrapped.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.AddingDataRow">
      <summary>Raised when a new data row is being added to the grid.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.AllowCellNavigationChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.AllowCellNavigation"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.AutoCreateColumnsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.AutoCreateColumns"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.BackgroundImageAlignmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.BackgroundImageAlignment"></see> property 
            is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.BackgroundImageStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.BackgroundImageStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.BorderStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.BorderStyle"></see> property 
            is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.CellEditorDisplayConditionsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.CellEditorDisplayConditions"></see> property 
            is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.ClipCurrentCellSelectionChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.ClipCurrentCellSelection"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.ClipPartialLineChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.ClipPartialLine"></see> property 
            is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.ColumnAdded">
      <summary>Raised when a column is added to the grid.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.ColumnRemoved">
      <summary>Raised when a column is removed from the grid.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.CurrentCellChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.CurrentCell"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.CurrentColumnChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.CurrentColumn"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.CurrentRowChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.CurrentRow"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.DataBindingChanged">
      <summary>Raised when the values of the <see cref="P:Xceed.Grid.GridControl.DataSource"></see> or <see cref="P:Xceed.Grid.GridControl.DataMember"></see> properties
            are changed, or when the <see cref="M:Xceed.Grid.GridControl.SetDataBinding(System.Object,System.String)"></see> method is called.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.DataMemberChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.DataMember"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.DataRowsChanged">
      <summary>Raised when modifications are made to the content of a cell in a data row
            and when a data row is added or removed from the grid.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.DataSourceChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.DataSource"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.ErrorBackColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.ErrorBackColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.ErrorBehaviorsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.ErrorBehaviors"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.ErrorBlinkRateChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.ErrorBlinkRate"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.ErrorBlinkStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.ErrorBlinkStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.ErrorForeColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.ErrorForeColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.ErrorIconChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.ErrorIcon"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.FirstVisibleColumnChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.FirstVisibleColumn"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.FirstVisibleRowChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.FirstVisibleRow"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.GridLineBackColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.GridLineBackColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.GridLineColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.GridLineColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.GridLineStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.GridLineStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.GripLocationChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.GripLocation"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.GroupAdded">
      <summary>Raised when a new group is added to the grid.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.GroupingUpdated">
      <summary>Raised when the data rows in the grid have been grouped.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.HideSelectionChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.HideSelection"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.HorizontalAlignmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.HorizontalAlignment"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.InactiveSelectionBackColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.InactiveSelectionBackColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.InactiveSelectionForeColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.InactiveSelectionForeColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.InitializingDetailGrid">
      <summary>Raised for each <see cref="T:Xceed.Grid.DataRow"></see> about to be added to the grid to initialize its
            detail grid(s).</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.InitializingNewDataRow">
      <summary>Raised <b>only</b> by the <see cref="M:Xceed.Grid.Collections.DataRowList.AddNew"></see> method to initialize the
            default values of cells in the data row.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.OverflowErrorTextChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.OverflowErrorText"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.OverrideUIStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.OverrideUIStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.QueryGroupKeys">
      <summary>Raised after a data row has been built in order to group it.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.ReadOnlyChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.ReadOnly"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.ScrollBarsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.ScrollBars"></see> property 
            is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.SelectedRowsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.SelectedRows"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.SelectedValueChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.SelectedValue"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.SelectionBackColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.SelectionBackColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.SelectionForeColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.SelectionForeColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.SelectionModeChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.SelectionMode"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.ShowFocusRectangleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.ShowFocusRectangle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.ShowTreeLinesChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.ShowTreeLines"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.ShowUnlinkedColumnsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.ShowUnlinkedColumns"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.SingleClickEditChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.SingleClickEdit"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.Sorted">
      <summary>Raised when the grid has been sorted.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.SortedColumnsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.SortedColumns"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.SynchronizeDetailGridsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.SynchronizeDetailGrids"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.TitleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.Title"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.TreeLineColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.TreeLineColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.TrimmingChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.Trimming"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.UIVirtualizationModeChanged">
      <summary>Raised when the value of the <A href="Xceed.Grid~Xceed.Grid.GridControl~UIVirtualizationMode.html">UIVirtualizationMode</A> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.ValueMemberChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.ValueMember"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.VerticalAlignmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.VerticalAlignment"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridControl.WordWrapChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridControl.WordWrap"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.BringIntoView">
      <summary>Brings the grid element into the visible area of the grid.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.OnBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElement.BackColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.OnClipPartialLineChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElement.ClipPartialLineChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.OnFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElement.FontChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.OnForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElement.ForeColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.OnHorizontalAlignmentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElement.HorizontalAlignmentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.OnOverrideUIStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElement.OverrideUIStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.OnReadOnlyChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElement.ReadOnlyChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.OnTrimmingChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElement.TrimmingChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.OnVerticalAlignmentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElement.VerticalAlignmentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.OnVisibleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElement.VisibleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.OnWordWrapChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElement.WordWrapChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.ResetBackColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridElement.DefaultBackColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.ResetClipPartialLine">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElement.ClipPartialLine"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridElement.DefaultClipPartialLine"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.ResetFont">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElement.Font"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridElement.DefaultFont"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.ResetForeColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElement.ForeColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridElement.DefaultForeColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.ResetHorizontalAlignment">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElement.HorizontalAlignment"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridElement.DefaultHorizontalAlignment"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.ResetOverrideUIStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElement.OverrideUIStyle"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridElement.DefaultOverrideUIStyle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.ResetReadOnly">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElement.ReadOnly"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridElement.DefaultReadOnly"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.ResetReportStyle">
      <summary>Resets the property values of the <see cref="P:Xceed.Grid.GridElement.ReportStyle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.ResetStyle">
      <summary>Resets the values of the properties affected by a
            <see cref="T:Xceed.Grid.GridElementStyle"></see> to their default values.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.ResetTag">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElement.Tag"></see> property to its default value, <see cref="P:Xceed.Grid.GridElement.DefaultTag"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.ResetTrimming">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElement.Trimming"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridElement.DefaultTrimming"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.ResetVerticalAlignment">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElement.VerticalAlignment"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridElement.DefaultVerticalAlignment"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.ResetVisible">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElement.Visible"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridElement.DefaultVisible"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.ResetWordWrap">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElement.WordWrap"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridElement.DefaultWordWrap"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElement.SetVisibleCore(Xceed.Grid.GridElement+AmbientBool)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.Alignment">
      <summary>Gets the alignment of the element's content.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.AmbientBackColor">
      <summary>Gets the ambient value of the grid element's <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.AmbientClipPartialLine">
      <summary>Gets the ambient value of the grid element's <see cref="P:Xceed.Grid.GridElement.ClipPartialLine"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.AmbientFont">
      <summary>Gets the ambient value of the grid element's <see cref="P:Xceed.Grid.GridElement.Font"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.AmbientForeColor">
      <summary>Gets the ambient value of the grid element's <see cref="P:Xceed.Grid.GridElement.ForeColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.AmbientHorizontalAlignment">
      <summary>Gets the ambient value of the grid element's <see cref="P:Xceed.Grid.GridElement.HorizontalAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.AmbientOverrideUIStyle">
      <summary>Gets the ambient value of the grid elements's <see cref="P:Xceed.Grid.GridElement.OverrideUIStyle"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.AmbientParent">
      <summary>Gets the ambient parent of the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.AmbientReadOnly">
      <summary>Gets the ambient value of the grid element's <see cref="P:Xceed.Grid.GridElement.ReadOnly"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.AmbientTrimming">
      <summary>Gets the ambient value of the grid element's <see cref="P:Xceed.Grid.GridElement.Trimming"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.AmbientVerticalAlignment">
      <summary>Gets the ambient value of the grid element's <see cref="P:Xceed.Grid.GridElement.VerticalAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.AmbientWordWrap">
      <summary>Gets the ambient value of the grid element's <see cref="P:Xceed.Grid.GridElement.WordWrap"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.BackColor">
      <summary>Gets or sets the background color of the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.ClipPartialLine">
      <summary>Gets or sets a boolean value indicating if partial lines should be clipped.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.DefaultBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.DefaultClipPartialLine">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.ClipPartialLine"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.DefaultFont">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.Font"></see> property</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.DefaultForeColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.ForeColor"></see> property</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.DefaultHorizontalAlignment">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.HorizontalAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.DefaultOverrideUIStyle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.OverrideUIStyle"></see>
                property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.DefaultReadOnly">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.ReadOnly"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.DefaultTag">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.Tag"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.DefaultTrimming">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.Trimming"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.DefaultVerticalAlignment">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.VerticalAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.DefaultVisible">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.Visible"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.DefaultWordWrap">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.WordWrap"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.Font">
      <summary>Gets or sets the font of the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.ForeColor">
      <summary>Gets or sets the foreground color of the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.GridControl">
      <summary>Gets the <see cref="P:Xceed.Grid.GridElement.GridControl"></see> in which all the grid elements are contained.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment of the grid element's content.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.IsBackColorAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.IsClipPartialLineAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.ClipPartialLine"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.IsFontAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.Font"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.IsForeColorAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.ForeColor"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.IsHorizontalAlignmentAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.HorizontalAlignment"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.IsOverrideUIStyleAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.OverrideUIStyle"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.IsOverrideUIStyleDefined">
      <summary>Gets a boolean value indicating whether the <see cref="P:Xceed.Grid.GridControl.OverrideUIStyle"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.IsReadOnlyAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.ReadOnly"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.IsReportStyleDefined">
      <summary>Gets a boolean value indicating if one or more properties of the <see cref="P:Xceed.Grid.GridElement.ReportStyle"></see> have been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.IsTrimmingAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.Trimming"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.IsVerticalAlignmentAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.VerticalAlignment"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.IsWordWrapAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.WordWrap"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.OverrideUIStyle">
      <summary>Gets or sets a boolean value indicating whether any theming based on the UIStyle property of 
            the <see cref="T:Xceed.Grid.GridControl"></see> will be overridden.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.ParentGrid">
      <summary>Gets the parent grid of the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.ParentVisible">
      <summary>Gets a boolean value indicating if the GridElement's parent is visible.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.ReadOnly">
      <summary>Gets or sets a boolean value indicating if the content of cell(s) can be edited.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.ReportStyle">
      <summary>Gets the report style of the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.Tag">
      <summary>Gets or sets the object that contains data about the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.Theme">
      <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.Trimming">
      <summary>Gets or sets a value indicating how text displayed in the cell will be trimmed when it exceeds the edges of the layout rectangle.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.VerticalAlignment">
      <summary>Gets or sets the vertical alignment of the grid element's content.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.Visible">
      <summary>Gets or sets a boolean value indicating if the GridElement is visible.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElement.WordWrap">
      <summary>Gets or sets a boolean value indicating if the text of the grid element should be wrapped.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElement.BackColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElement.ClipPartialLineChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElement.ClipPartialLine"></see> property 
            is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElement.FontChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElement.Font"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElement.ForeColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElement.ForeColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElement.HorizontalAlignmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElement.HorizontalAlignment"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElement.OverrideUIStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElement.OverrideUIStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElement.ReadOnlyChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElement.ReadOnly"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElement.TrimmingChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElement.Trimming"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElement.VerticalAlignmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElement.VerticalAlignment"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElement.VisibleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElement.Visible"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElement.WordWrapChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElement.WordWrap"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GridElementStyle"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.#ctor(Xceed.Grid.GridElementStyle)">
      <summary>Initializes a new instance of the GridElementStyle class specifying a
            GridElementStyle from which to copy property values.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.Clone">
      <summary>Creates an exact copy of the style.</summary>
      <returns>A reference to the newly created <see cref="T:Xceed.Grid.GridElementStyle"></see>.</returns>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:Xceed.Grid.GridElementStyle"></see>.</summary>
      <returns>
        <b>true</b> if the specified object is equal to the current
                <see cref="T:Xceed.Grid.GridElementStyle"></see>; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.GetHashCode">
      <summary>Serves as a hash function for the <see cref="T:Xceed.Grid.GridElementStyle"></see> object, suitable for 
            use in hashing algorithms and data structures such as a hash table.</summary>
      <returns>An integer value representing a hash code for the current <see cref="T:Xceed.Grid.GridElementStyle"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.OnBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElementStyle.BackColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.OnClipPartialLineChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElementStyle.ClipPartialLineChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.OnFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElementStyle.FontChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.OnForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElementStyle.ForeColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.OnHorizontalAlignmentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElementStyle.HorizontalAlignmentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.OnOverrideUIStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElementStyle.OverrideUIStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.OnStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElementStyle.StyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.OnTrimmingChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElementStyle.TrimmingChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.OnVerticalAlignmentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElementStyle.VerticalAlignmentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.OnWordWrapChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridElementStyle.WordWrapChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.Reset">
      <summary>Resets all of the properties that have been explicitly set back to their default values.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.ResetBackColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElementStyle.BackColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridElementStyle.DefaultBackColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.ResetClipPartialLine">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElementStyle.ClipPartialLine"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridElementStyle.DefaultClipPartialLine"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.ResetFont">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElementStyle.Font"></see> property to its default value, 
            <see cref="P:Xceed.Grid.GridElementStyle.DefaultFont"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.ResetForeColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElementStyle.ForeColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridElementStyle.DefaultForeColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.ResetHorizontalAlignment">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElementStyle.HorizontalAlignment"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridElementStyle.DefaultHorizontalAlignment"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.ResetOverrideUIStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElementStyle.OverrideUIStyle"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridElementStyle.DefaultOverrideUIStyle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.ResetTrimming">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElementStyle.Trimming"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridElementStyle.DefaultTrimming"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.ResetVerticalAlignment">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElementStyle.VerticalAlignment"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridElementStyle.DefaultVerticalAlignment"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.ResetWordWrap">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridElementStyle.WordWrap"></see> property to its default value,
            <see cref="P:Xceed.Grid.GridElementStyle.DefaultWordWrap"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.Apply(Xceed.Grid.GridElement)">
      <summary>Applies the style to the specified grid element.</summary>
    </member>
    <member name="M:Xceed.Grid.GridElementStyle.Apply(Xceed.Grid.GridControl)">
      <summary>Applies the style to the specified grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.BackColor">
      <summary>Gets or sets the background color of the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.ClipPartialLine">
      <summary>Gets or sets a boolean value indicating if partial lines should be clipped.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.DefaultBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElementStyle.BackColor"></see> property</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.DefaultClipPartialLine">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElementStyle.ClipPartialLine"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.DefaultFont">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElementStyle.Font"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.DefaultForeColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElementStyle.ForeColor"></see> property</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.DefaultHorizontalAlignment">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElementStyle.HorizontalAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.DefaultOverrideUIStyle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElementStyle.OverrideUIStyle"></see>
                property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.DefaultTrimming">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElementStyle.Trimming"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.DefaultVerticalAlignment">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElementStyle.VerticalAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.DefaultWordWrap">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElementStyle.WordWrap"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.Font">
      <summary>Gets or sets the font of the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.ForeColor">
      <summary>Gets or sets the foreground color of the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment of the grid element's content.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.IsBackColorDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElementStyle.BackColor"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.IsClipPartialLineDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElementStyle.ClipPartialLine"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.IsFontDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElementStyle.Font"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.IsForeColorDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElementStyle.ForeColor"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.IsHorizontalAlignmentDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElementStyle.HorizontalAlignment"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.IsOverrideUIStyleDefined">
      <summary>Gets a boolean value indicating whether the <see cref="P:Xceed.Grid.GridElementStyle.OverrideUIStyle"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.IsTrimmingDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElementStyle.Trimming"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.IsVerticalAlignmentDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElementStyle.VerticalAlignment"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.IsWordWrapDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElementStyle.WordWrap"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.OverrideUIStyle">
      <summary>Gets or sets a boolean value indicating whether any theming based on the UIStyle property of 
            the <see cref="T:Xceed.Grid.GridControl"></see> will be overridden.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.Properties">
      <summary>Gets a collection of property names whose values have been explicitly set
            as well as the corresponding values.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.Trimming">
      <summary>Gets or sets a value indicating how text displayed in the cell will be 
            trimmed when it exceeds the edges of the layout rectangle.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.VerticalAlignment">
      <summary>Gets or sets the vertical alignment of the grid element's content when it is printed in a report.</summary>
    </member>
    <member name="P:Xceed.Grid.GridElementStyle.WordWrap">
      <summary>Gets or sets a boolean value indicating if the text of the grid element should be wrapped.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElementStyle.BackColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElementStyle.BackColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElementStyle.ClipPartialLineChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElementStyle.ClipPartialLine"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElementStyle.FontChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElementStyle.Font"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElementStyle.ForeColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElementStyle.ForeColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElementStyle.HorizontalAlignmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElementStyle.HorizontalAlignment"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElementStyle.OverrideUIStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElementStyle.OverrideUIStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElementStyle.StyleChanged">
      <summary>Raised when the value of any visual property has been changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElementStyle.TrimmingChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElementStyle.Trimming"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElementStyle.VerticalAlignmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElementStyle.VerticalAlignment"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridElementStyle.WordWrapChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridElementStyle.WordWrap"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.GridException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GridException"></see> class with a specified error message.</summary>
    </member>
    <member name="M:Xceed.Grid.GridException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GridException"></see> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
    </member>
    <member name="M:Xceed.Grid.GridException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the GridException class specify serialization information and
            a streaming context.</summary>
    </member>
    <member name="M:Xceed.Grid.GridInternalException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GridInternalException"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.GridInternalException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GridInternalException"></see> class with a specified error message.</summary>
    </member>
    <member name="M:Xceed.Grid.GridInternalException.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GridException"></see> class with a reference to the inner exception that is the cause of this exception.</summary>
    </member>
    <member name="M:Xceed.Grid.GridInternalException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GridException"></see> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
    </member>
    <member name="M:Xceed.Grid.GridInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the GridInternalException class specify serialization information and
            a streaming context.</summary>
    </member>
    <member name="M:Xceed.Grid.GridPaintEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the GridPaintEventArgs class.</summary>
    </member>
    <member name="M:Xceed.Grid.GridPaintEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.Rectangle,Xceed.Grid.StatelessVisualGridElementStyle,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the GridPaintEventArgs class.</summary>
    </member>
    <member name="P:Xceed.Grid.GridPaintEventArgs.BottomBorderWidth">
      <summary>Gets the width needed to draw the bottom border (if one is required) of the <see cref="T:Xceed.Grid.DetailGrid"></see> objects.</summary>
    </member>
    <member name="P:Xceed.Grid.GridPaintEventArgs.ClientPosition">
      <summary>Gets the position of the grid's ClientRectangle in grid coordinates.</summary>
    </member>
    <member name="P:Xceed.Grid.GridPaintEventArgs.ClientRectangle">
      <summary>Gets the client rectangle of the grid element. The rectangle represents the
            visible portion of the grid element and is in client coordinates. The X and Y 
            coordinates are always 0,0.</summary>
    </member>
    <member name="P:Xceed.Grid.GridPaintEventArgs.DisplayRectangle">
      <summary>Gets the display rectangle of the grid element. The rectangle is in 
            client coordinates and the X and Y coordinates can be negative 
            if the grid is scrolled.</summary>
    </member>
    <member name="P:Xceed.Grid.GridPaintEventArgs.DisplayVisualStyle">
      <summary>Gets the display visual style of the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.GridPaintEventArgs.Graphics">
      <summary>Gets the <see cref="P:Xceed.Grid.GridPaintEventArgs.Graphics"></see> object used to paint.</summary>
    </member>
    <member name="P:Xceed.Grid.GridPaintEventArgs.Printing">
      <summary>Gets a boolean value indicating if the element is being printed.</summary>
    </member>
    <member name="M:Xceed.Grid.GridPrintDocument.#ctor(Xceed.Grid.GridControl)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GridPrintDocument"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.GridPrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridPrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
      <summary>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridPrintDocument.OnQueryPrintPage(Xceed.Grid.QueryPrintPageEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridPrintDocument.QueryPrintPage"></see> event.</summary>
    </member>
    <member name="P:Xceed.Grid.GridPrintDocument.CurrentPageNumber">
      <summary>Gets the page number of the current page.</summary>
    </member>
    <member name="P:Xceed.Grid.GridPrintDocument.Grid">
      <summary>Gets a reference to the grid to print.</summary>
    </member>
    <member name="E:Xceed.Grid.GridPrintDocument.QueryPrintPage">
      <summary>Raised when a page is about to be printed.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.#ctor(Xceed.Grid.GridStyle)">
      <summary>Initializes a new instance of the GridStyle class specifying a
            GridStyle from which to copy property values.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GridStyle"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.Clone">
      <summary>Creates an exact copy of the style.</summary>
      <returns>A reference to the newly created <see cref="T:Xceed.Grid.GridStyle"></see>.</returns>
    </member>
    <member name="M:Xceed.Grid.GridStyle.OnBorderStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridStyle.BorderStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.OnClipCurrentCellSelectionChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridStyle.ClipCurrentCellSelectionChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.OnErrorBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridStyle.ErrorBackColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.OnErrorForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridStyle.ErrorForeColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.OnErrorVisualStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridStyle.ErrorVisualStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.OnGridLineColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridStyle.GridLineColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.OnGridLineStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridStyle.GridLineStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.OnInactiveSelectionBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridStyle.InactiveSelectionBackColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.OnInactiveSelectionForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridStyle.InactiveSelectionForeColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.OnInactiveSelectionVisualStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridStyle.InactiveSelectionVisualStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.OnSelectionBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridStyle.SelectionBackColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.OnSelectionForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridStyle.SelectionForeColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.OnSelectionVisualStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridStyle.SelectionVisualStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.OnShowFocusRectangleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GridStyle.ShowFocusRectangleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.ResetBorderStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridStyle.BorderStyle"></see> property to its default value, 
            <see cref="P:Xceed.Grid.GridStyle.DefaultBorderStyle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.ResetClipCurrentCellSelection">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridStyle.ClipCurrentCellSelection"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridStyle.DefaultClipCurrentCellSelection"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.ResetErrorBackColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridStyle.ErrorBackColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridStyle.DefaultErrorBackColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.ResetErrorForeColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridStyle.ErrorForeColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridStyle.DefaultErrorForeColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.ResetErrorVisualStyle">
      <summary>Resets the visual style of a row that contains a cell that contains an 
            error in the grid.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.ResetGridLineColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridStyle.GridLineColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridStyle.DefaultGridLineColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.ResetGridLineStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridStyle.GridLineStyle"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridStyle.DefaultGridLineStyle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.ResetInactiveSelectionBackColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridStyle.InactiveSelectionBackColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridStyle.DefaultInactiveSelectionBackColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.ResetInactiveSelectionForeColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridStyle.InactiveSelectionForeColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridStyle.DefaultInactiveSelectionForeColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.ResetInactiveSelectionVisualStyle">
      <summary>Resets the visual style of an inactive selected row in the 
                grid.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.ResetSelectionBackColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridStyle.SelectionBackColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridStyle.DefaultSelectionBackColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.ResetSelectionForeColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridStyle.SelectionForeColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.GridStyle.DefaultSelectionForeColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.ResetSelectionVisualStyle">
      <summary>Resets the visual style of a selected row in the grid.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.ResetShowFocusRectangle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GridStyle.ShowFocusRectangle"></see> property to its 
            default value, <see cref="P:Xceed.Grid.GridStyle.DefaultShowFocusRectangle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.Apply(Xceed.Grid.GridControl)">
      <summary>Applies the style to the specified grid control.</summary>
    </member>
    <member name="M:Xceed.Grid.GridStyle.Apply(Xceed.Grid.GridElement)">
      <summary>Applies the style to the specified grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.BorderStyle">
      <summary>Gets or sets the border style of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.ClipCurrentCellSelection">
      <summary>Gets or sets a value indicating whether the selection state of a row will be applied to the 
            current cell.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.DefaultBorderStyle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridStyle.BorderStyle"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.DefaultClipCurrentCellSelection">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridStyle.ClipCurrentCellSelection"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.DefaultErrorBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridStyle.ErrorBackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.DefaultErrorForeColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridStyle.ErrorForeColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.DefaultErrorVisualStyle">
      <summary>Gets the default visual style of a row that contains a cell that contains 
            an error in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.DefaultGridLineColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridStyle.GridLineColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.DefaultGridLineStyle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridStyle.GridLineStyle"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.DefaultInactiveSelectionBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridStyle.InactiveSelectionBackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.DefaultInactiveSelectionForeColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridStyle.InactiveSelectionForeColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.DefaultInactiveSelectionVisualStyle">
      <summary>Gets the default visual style of an inactive selected row in the 
                grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.DefaultSelectionBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridStyle.SelectionBackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.DefaultSelectionForeColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridStyle.SelectionForeColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.DefaultSelectionVisualStyle">
      <summary>Gets the default visual style of a selected row in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.DefaultShowFocusRectangle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridStyle.ShowFocusRectangle"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.ErrorBackColor">
      <summary>Gets or sets the background color that is used when an error occurs in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.ErrorForeColor">
      <summary>Gets or sets the foreground color that is used when an error occurs in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.ErrorVisualStyle">
      <summary>Gets or sets the visual style of a row that contains a cell that 
            contains an error in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.GridLineColor">
      <summary>Gets or sets the color of the grid's lines.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.GridLineStyle">
      <summary>Gets or sets the style of the grid's lines.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.InactiveSelectionBackColor">
      <summary>Gets or sets the inactive selection background color of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.InactiveSelectionForeColor">
      <summary>Gets or sets the inactive selection foreground color of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.InactiveSelectionVisualStyle">
      <summary>
        <para>
                    Gets or sets the visual style of an inactive selected row in the grid.
                </para>
      </summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.IsBorderStyleDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridStyle.BorderStyle"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.IsClipCurrentCellSelectionDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridStyle.ClipCurrentCellSelection"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.IsErrorBackColorDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridStyle.ErrorBackColor"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.IsErrorForeColorDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridStyle.ErrorForeColor"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.IsErrorVisualStyleDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridStyle.ErrorVisualStyle"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.IsGridLineColorDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridStyle.GridLineColor"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.IsGridLineStyleDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridStyle.GridLineStyle"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.IsInactiveSelectionBackColorDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridStyle.InactiveSelectionBackColor"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.IsInactiveSelectionForeColorDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridStyle.InactiveSelectionForeColor"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.IsInactiveSelectionVisualStyleDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridStyle.InactiveSelectionVisualStyle"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.IsSelectionBackColorDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridStyle.SelectionBackColor"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.IsSelectionForeColorDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridStyle.SelectionForeColor"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.IsSelectionVisualStyleDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridStyle.SelectionVisualStyle"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.IsShowFocusRectangleDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridStyle.ShowFocusRectangle"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.SelectionBackColor">
      <summary>Gets or sets the selection background color of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.SelectionForeColor">
      <summary>Gets or sets the selection foreground color of the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.SelectionVisualStyle">
      <summary>Gets or sets the visual style of a selected row in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GridStyle.ShowFocusRectangle">
      <summary>Gets or sets a boolean value indicating whether the focus rectangle should be displayed around the <see cref="P:Xceed.Grid.GridControl.CurrentRow"></see> and/or <see cref="P:Xceed.Grid.GridControl.CurrentCell"></see>.</summary>
    </member>
    <member name="E:Xceed.Grid.GridStyle.BorderStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridStyle.BorderStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridStyle.ClipCurrentCellSelectionChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridStyle.ClipCurrentCellSelection"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridStyle.ErrorBackColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridStyle.ErrorBackColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridStyle.ErrorForeColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridStyle.ErrorForeColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridStyle.ErrorVisualStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridStyle.ErrorVisualStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridStyle.GridLineColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridStyle.GridLineColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridStyle.GridLineStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridStyle.GridLineStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridStyle.InactiveSelectionBackColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridStyle.InactiveSelectionBackColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridStyle.InactiveSelectionForeColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridStyle.InactiveSelectionForeColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridStyle.InactiveSelectionVisualStyleChanged">
      <summary>Raised when the value of the
                <see cref="P:Xceed.Grid.GridStyle.InactiveSelectionVisualStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridStyle.SelectionBackColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridStyle.SelectionBackColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridStyle.SelectionForeColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridStyle.SelectionForeColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridStyle.SelectionVisualStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridStyle.SelectionVisualStyle"></see>
                property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GridStyle.ShowFocusRectangleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GridStyle.ShowFocusRectangle"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.GridValidationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GridValidationException"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.GridValidationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GridValidationException"></see> class with a specified error message.</summary>
    </member>
    <member name="M:Xceed.Grid.GridValidationException.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GridValidationException"></see> class with a reference to the inner exception that is the cause of this exception.</summary>
    </member>
    <member name="M:Xceed.Grid.GridValidationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GridValidationException"></see> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
    </member>
    <member name="M:Xceed.Grid.GridValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the GridValidationException class specify serialization information and
            a streaming context.</summary>
    </member>
    <member name="M:Xceed.Grid.Group.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.Group"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.Group.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.Group"></see> class specifying its <see cref="P:Xceed.Grid.Group.GroupBy"></see> value.</summary>
    </member>
    <member name="M:Xceed.Grid.Group.#ctor(Xceed.Grid.GroupMargin)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.Group"></see> class specifying its margin.</summary>
    </member>
    <member name="M:Xceed.Grid.Group.#ctor(Xceed.Grid.Group)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.Group"></see> class
            specifying the template that will be used to create other groups.</summary>
    </member>
    <member name="M:Xceed.Grid.Group.BringIntoView">
      <summary>Brings the group into the visible area of the grid.</summary>
    </member>
    <member name="M:Xceed.Grid.Group.CalculateKey(Xceed.Grid.DataRow)">
      <summary>Calculates the key of the <see cref="T:Xceed.Grid.DataRow"></see> to determine if it is to be added to this group.</summary>
      <returns>An object representing the group's key.</returns>
    </member>
    <member name="M:Xceed.Grid.Group.CreateInstance">
      <summary>Creates a new <see cref="T:Xceed.Grid.Group"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to the newly created <see cref="T:Xceed.Grid.Group"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.Group.OnGroupByChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Group.GroupByChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Group.OnGroupByRowTitleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Group.GroupByRowTitleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Group.ResetGroupBy">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Group.GroupBy"></see> property to its default 
            value, <see cref="P:Xceed.Grid.Group.DefaultGroupBy"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Group.ResetGroupByRowTitle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Group.GroupByRowTitle"></see> to its default value, <see cref="P:Xceed.Grid.Group.DefaultGroupByRowTitle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Group.Remove">
      <summary>Removes the group from the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.Group.AmbientParent">
      <summary>Gets the ambient parent of the group.</summary>
    </member>
    <member name="P:Xceed.Grid.Group.DefaultAccessibleName">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupBase.AccessibleName"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Group.DefaultGroupBy">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Group.GroupBy"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Group.DefaultGroupByRowTitle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Group.GroupByRowTitle"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Group.DefaultTitle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupBase.Title"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Group.GroupBy">
      <summary>Gets or sets the fieldname of the column in the grid by which the 
            data bound rows are grouped.</summary>
    </member>
    <member name="P:Xceed.Grid.Group.GroupByRowTitle">
      <summary>Gets or sets the string used by the <see cref="T:Xceed.Grid.GroupByRow"></see> to represent the group.</summary>
    </member>
    <member name="P:Xceed.Grid.Group.IsCollapseRoot">
      <summary>Gets a boolean value indicating if the group caused the collapsing of all its child groups.</summary>
    </member>
    <member name="P:Xceed.Grid.Group.Key">
      <summary>Gets an object representing the value which caused the group to be created.</summary>
    </member>
    <member name="P:Xceed.Grid.Group.ParentGroup">
      <summary>Gets a reference to the parent group of the group.</summary>
    </member>
    <member name="E:Xceed.Grid.Group.GroupByChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Group.GroupBy"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Group.GroupByRowTitleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Group.GroupByRowTitle"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupAddedEventArgs.#ctor(Xceed.Grid.Group,Xceed.Grid.DataRow)">
      <summary>Provides information on the group added to the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupAddedEventArgs.DataRow">
      <summary>Gets the datarow that caused the new group to be created and added to the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupAddedEventArgs.Group">
      <summary>Gets the group that has just been added to the grid.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupBase.Collapse">
      <summary>Collapses the group and all its child groups.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupBase.Expand">
      <summary>Expands the group and its child groups if applicable.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupBase.GetSortedDataRowCount(System.Boolean)">
      <summary>Retrieves a value indicating the number of <see cref="T:Xceed.Grid.DataRow"></see> objects 
            in the group.</summary>
      <returns>A value indicating the number of data rows in the group.</returns>
    </member>
    <member name="M:Xceed.Grid.GroupBase.GetSortedDataRows(System.Boolean)">
      <summary>Retrieves a collection of sorted data rows.</summary>
      <returns>A reference to a <see cref="T:Xceed.Grid.Collections.ReadOnlyDataRowList"></see> containing a list
            of sorted data rows.</returns>
    </member>
    <member name="M:Xceed.Grid.GroupBase.OnCellEditorDisplayConditionsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GroupBase.CellEditorDisplayConditionsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupBase.OnCollapsedChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GroupBase.CollapsedChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupBase.OnDataRowsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GroupBase.DataRowsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupBase.OnQueryAccessibilityHelp(System.Windows.Forms.QueryAccessibilityHelpEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GroupBase.QueryAccessibilityHelp"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupBase.OnTitleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GroupBase.TitleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupBase.ResetAccessibleDefaultActionDescription">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupBase.AccessibleDefaultActionDescription"></see> property to its default value, <see cref="P:Xceed.Grid.GroupBase.DefaultAccessibleDefaultActionDescription"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupBase.ResetAccessibleDescription">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupBase.AccessibleDescription"></see> property to its default value, <see cref="P:Xceed.Grid.GroupBase.DefaultAccessibleDescription"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupBase.ResetAccessibleName">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupBase.AccessibleName"></see> property to its default value, <see cref="P:Xceed.Grid.GroupBase.DefaultAccessibleName"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupBase.ResetCellEditorDisplayConditions">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupBase.CellEditorDisplayConditions"></see> property
            to its default value, <see cref="P:Xceed.Grid.GroupBase.DefaultCellEditorDisplayConditions"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupBase.ResetCollapsed">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupBase.Collapsed"></see> property to its default value,
            <see cref="P:Xceed.Grid.GroupBase.DefaultCollapsed"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupBase.ResetTitle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupBase.Title"></see> property to its default value, <see cref="P:Xceed.Grid.GroupBase.DefaultTitle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupBase.SetVisibleCore(Xceed.Grid.GridElement+AmbientBool)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.AccessibleDefaultActionDescription">
      <summary>Gets or sets the default action description of the element for use by accessibility client applications.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.AccessibleDescription">
      <summary>Gets or sets the description of the element used by accessibility client applications.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.AccessibleName">
      <summary>Gets or sets the name of the element used by accessibility client applications.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.AmbientCellEditorDisplayConditions">
      <summary>Gets the ambient value of the grid element's <see cref="P:Xceed.Grid.GroupBase.CellEditorDisplayConditions"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.AmbientParent">
      <summary>Gets the ambient parent of the group.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.CellEditorDisplayConditions">
      <summary>Gets or sets a value representing under what conditions cell editors are displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.Collapsed">
      <summary>Gets or sets a boolean value indicating if the group is collapsed.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.DefaultAccessibleDefaultActionDescription">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupBase.AccessibleDefaultActionDescription"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.DefaultAccessibleDescription">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupBase.AccessibleDescription"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.DefaultAccessibleName">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupBase.AccessibleName"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.DefaultCellEditorDisplayConditions">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupBase.CellEditorDisplayConditions"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.DefaultCollapsed">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupBase.Collapsed"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.DefaultTitle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupBase.Title"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.FooterRows">
      <summary>Gets a list of all the footer rows of the group.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.Groups">
      <summary>Gets a list of all the groups contained within the group once it
            has been built.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.HeaderRows">
      <summary>Gets a list of all the header rows of the group.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.IsCellEditorDisplayConditionsAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GroupBase.CellEditorDisplayConditions"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.IsCollapseRoot">
      <summary>Gets a boolean value indicating if the group caused the collapsing of all its child groups.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.Level">
      <summary>Gets a value indicating the level of the group within the group hierarchy.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.ParentGrid">
      <summary>Gets the parent grid of the group.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.ParentGroup">
      <summary>Gets a reference to the parent group of the group.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.SideMargin">
      <summary>Gets the side margin of the group.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.Title">
      <summary>Gets or sets the title of the group.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupBase.ReportStyle">
      <summary>Gets the report style of the group.</summary>
    </member>
    <member name="E:Xceed.Grid.GroupBase.CellEditorDisplayConditionsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GroupBase.CellEditorDisplayConditions"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GroupBase.CollapsedChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GroupBase.Collapsed"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GroupBase.DataRowsChanged">
      <summary>Raised when modifications are made to the content of a cell in a data row
            and when a data row is added or removed from the group.</summary>
    </member>
    <member name="E:Xceed.Grid.GroupBase.QueryAccessibilityHelp">
      <summary>Raised when an Accessibility client invokes help for that element.</summary>
    </member>
    <member name="E:Xceed.Grid.GroupBase.TitleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GroupBase.Title"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GroupByRow"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.#ctor(Xceed.Grid.RowSelector)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GroupByRow"></see> class specifying its <see cref="T:Xceed.Grid.RowSelector"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.#ctor(Xceed.Grid.GroupByRow)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GroupByRow"></see> class
            specifying the template that will be used to create other GroupByRows.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.CreateInstance">
      <summary>Creates a new <see cref="T:Xceed.Grid.GroupByRow"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to the newly create <see cref="T:Xceed.Grid.Row"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.GetFittedDisplayHeight(Xceed.Grid.AutoHeightMode,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves the fitted height of the row in pixels.</summary>
      <returns>The fitted height of the row in pixels.</returns>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.InsertGroupCore(Xceed.Grid.DetailGrid,System.Int32,System.String)">
      <summary>Inserts a new <see cref="T:Xceed.Grid.Group"></see> object into the list of <see cref="P:Xceed.Grid.GridControl.GroupTemplates"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.MoveGroupCore(Xceed.Grid.DetailGrid,System.Int32,System.Int32)">
      <summary>Changes the position if a group in the list of <see cref="P:Xceed.Grid.GridControl.GroupTemplates"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.OnAllowGroupingModificationChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GroupByRow.AllowGroupingModificationChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.OnAllowSortChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GroupByRow.AllowSortChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.OnCellBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GroupByRow.CellBackColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.OnCellFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GroupByRow.CellFontChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.OnCellForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GroupByRow.CellForeColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.OnCellLayoutChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GroupByRow.CellLayoutChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.OnClick(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.Click"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.OnGroupTemplateChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GroupByRow.GroupTemplateChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.MouseDown"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.OnMouseLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.MouseLeave"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.MouseMove"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.MouseUp"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.OnNoGroupTextChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GroupByRow.NoGroupTextChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.PaintBackground(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the background of the <see cref="T:Xceed.Grid.GroupByRow"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.PaintForeground(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the foreground of the <see cref="T:Xceed.Grid.GroupByRow"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.RemoveGroupCore(Xceed.Grid.DetailGrid,System.Int32)">
      <summary>Removes a group from the list of <see cref="P:Xceed.Grid.GridControl.GroupTemplates"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.ResetAllowGroupingModification">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupByRow.AllowGroupingModification"></see> property to 
            its default value, <see cref="P:Xceed.Grid.GroupByRow.DefaultAllowGroupingModification"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.ResetAllowSort">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupByRow.AllowSort"></see> property to its default value, <see cref="P:Xceed.Grid.GroupByRow.DefaultAllowSort"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.ResetCellBackColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupByRow.CellBackColor"></see> property to its 
            default value, <see cref="P:Xceed.Grid.GroupByRow.DefaultCellBackColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.ResetCellFont">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupByRow.CellFont"></see> property to its default value, <see cref="P:Xceed.Grid.GroupByRow.DefaultCellFont"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.ResetCellForeColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupByRow.CellForeColor"></see> property to 
            its default value, <see cref="P:Xceed.Grid.GroupByRow.DefaultCellForeColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.ResetCellLayout">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupByRow.CellLayout"></see> property to its 
            default value, <see cref="P:Xceed.Grid.GroupByRow.DefaultCellLayout"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.ResetGroupTemplate">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupByRow.GroupTemplate"></see> property to its 
            default value, , <see cref="P:Xceed.Grid.GroupByRow.DefaultGroupTemplate"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.ResetNoGroupText">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupByRow.NoGroupText"></see> property 
            to its default value, <see cref="P:Xceed.Grid.GroupByRow.DefaultNoGroupText"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.ResetStyle">
      <summary>Resets the values of the properties affected by a
            <see cref="T:Xceed.Grid.GroupByRowStyle"></see> to their default values.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.SetHeightCore(System.Int32)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.GetCells">
      <summary>Gets the cells in the GroupByRow.</summary>
      <returns>An array of <see cref="T:Xceed.Grid.GroupByRow.GroupByCell"></see> objects that represent the cells in the GroupByRow.</returns>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.AllowGroupingModification">
      <summary>Gets or sets a boolean value indicating if groups can be added, removed or reordered using the GroupByRow.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.AllowSort">
      <summary>Gets or sets a boolean value indicating if the columns can sorted.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.Borders">
      <summary>Gets the borders of the <see cref="T:Xceed.Grid.GroupByRow"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.CellBackColor">
      <summary>Gets or sets the background color of the cells in the <see cref="T:Xceed.Grid.GroupByRow"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.CellFont">
      <summary>Gets or sets the font of the cells of the <see cref="T:Xceed.Grid.GroupByRow"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.CellForeColor">
      <summary>Gets or sets the foreground color of the cells in the <see cref="T:Xceed.Grid.GroupByRow"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.CellLayout">
      <summary>Gets or sets the layout of the cells in the <see cref="T:Xceed.Grid.GroupByRow"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.DefaultAllowGroupingModification">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupByRow.AllowGroupingModification"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.DefaultAllowSort">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupByRow.AllowSort"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.DefaultBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.DefaultCanBeCurrent">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.CanBeCurrent"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.DefaultCanBeSelected">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.CanBeSelected"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.DefaultCellBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupByRow.CellBackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.DefaultCellFont">
      <summary>Gets the default value of the <see cref="T:System.Drawing.Font"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.DefaultCellForeColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupByRow.CellForeColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.DefaultCellLayout">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupByRow.CellLayout"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.DefaultGroupTemplate">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupByRow.GroupTemplate"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.DefaultIndented">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.Indented"></see> Indented.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.DefaultMaxHeight">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.MaxHeight"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.DefaultMinHeight">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.MinHeight"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.DefaultNoGroupText">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupByRow.NoGroupText"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.DefaultVerticalAlignment">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.VerticalAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.GroupTemplate">
      <summary>Gets or sets a reference to the group that will be used as a template
            to create the groups created by the GroupByRow.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.IsBackColorAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.IsVerticalAlignmentAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.VerticalAlignment"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.NoGroupText">
      <summary>Gets or sets the text displayed by the <see cref="T:Xceed.Grid.GroupByRow"></see> when the grid does not contain any groups.</summary>
    </member>
    <member name="E:Xceed.Grid.GroupByRow.AllowGroupingModificationChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GroupByRow.AllowGroupingModification"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GroupByRow.AllowSortChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GroupByRow.AllowSort"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GroupByRow.CellBackColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GroupByRow.CellBackColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GroupByRow.CellFontChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GroupByRow.CellFont"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GroupByRow.CellForeColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GroupByRow.CellForeColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GroupByRow.CellLayoutChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GroupByRow.CellLayout"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GroupByRow.GroupTemplateChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GroupByRow.GroupTemplate"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GroupByRow.NoGroupTextChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GroupByRow.NoGroupText"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.GroupByCell.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current GroupByCell.</summary>
      <returns>true if the specified object is equal to the current GroupByCell; otherwise, false.</returns>
    </member>
    <member name="M:Xceed.Grid.GroupByRow.GroupByCell.GetHashCode">
      <summary>Serves as a hash function for the GroupByCell, suitable for use in hashing algorithms
            and data structures like a hash table.</summary>
      <returns>A hash code for the current GroupByCell.</returns>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.GroupByCell.DisplayRectangle">
      <summary>Gets the display rectangle of the GroupByCell. The rectangle is in 
            client coordinates and the X and Y coordinates can be negative 
            if the grid is scrolled.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.GroupByCell.FieldName">
      <summary>Gets the field name of the column represented by this GroupByCell.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.GroupByCell.GroupLevel">
      <summary>Gets the level of the group represented by the GroupByCell.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.GroupByCell.Index">
      <summary>Gets the index of the GroupByCell in the <see cref="T:Xceed.Grid.GroupByRow.GroupByCell"></see> array.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.GroupByCell.RelatedGrid">
      <summary>Get an instance of the <see cref="T:Xceed.Grid.DetailGrid"></see> represented by the GroupByCell.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRow.GroupByCell.Title">
      <summary>Gets the title of the column represented by the GroupByCell.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRowStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GroupByRowStyle"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRowStyle.#ctor(Xceed.Grid.GroupByRowStyle)">
      <summary>Initializes a new instance of the GroupByRowStyle class specifying a
            GroupByRowStyle from which to copy property values.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRowStyle.Clone">
      <summary>Creates an exact copy of the style.</summary>
      <returns>A reference to the newly created <see cref="T:Xceed.Grid.GroupByRowStyle"></see>.</returns>
    </member>
    <member name="M:Xceed.Grid.GroupByRowStyle.OnCellBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GroupByRowStyle.CellBackColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRowStyle.OnCellFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GroupByRowStyle.CellFontChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRowStyle.OnCellForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GroupByRowStyle.CellForeColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRowStyle.OnCellLayoutChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GroupByRowStyle.CellLayoutChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRowStyle.ResetCellBackColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupByRowStyle.CellBackColor"></see> property to its 
            default value, <see cref="P:Xceed.Grid.GroupByRowStyle.DefaultCellBackColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRowStyle.ResetCellFont">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupByRowStyle.CellFont"></see> property to its default 
            value, <see cref="P:Xceed.Grid.GroupByRowStyle.DefaultCellFont"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRowStyle.ResetCellForeColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupByRowStyle.CellForeColor"></see> property to its default value,
            <see cref="P:Xceed.Grid.GroupByRowStyle.DefaultCellForeColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRowStyle.ResetCellLayout">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupByRowStyle.CellLayout"></see> property to its 
            default value, <see cref="P:Xceed.Grid.GroupByRowStyle.DefaultCellLayout"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupByRowStyle.Apply(Xceed.Grid.GridElement)">
      <summary>Applies the style to the specified grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRowStyle.CellBackColor">
      <summary>Gets or sets the background color of the cells in the <see cref="T:Xceed.Grid.GroupByRow"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRowStyle.CellFont">
      <summary>Gets or sets the font of the cells of the <see cref="T:Xceed.Grid.GroupByRow"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRowStyle.CellForeColor">
      <summary>Gets or sets the foreground color of the cells in the <see cref="T:Xceed.Grid.GroupByRow"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRowStyle.CellLayout">
      <summary>Gets or sets the layout of the cells in the <see cref="T:Xceed.Grid.GroupByRow"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRowStyle.DefaultCellBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupByRowStyle.CellBackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRowStyle.DefaultCellFont">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupByRowStyle.CellFont"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRowStyle.DefaultCellForeColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupByRowStyle.CellForeColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRowStyle.DefaultCellLayout">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupByRowStyle.CellLayout"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRowStyle.IsCellBackColorDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GroupByRowStyle.CellBackColor"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRowStyle.IsCellFontDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GroupByRowStyle.CellFont"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRowStyle.IsCellForeColorDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GroupByRowStyle.CellForeColor"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupByRowStyle.IsCellLayoutDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GroupByRowStyle.CellLayout"></see> property has been explicitly set.</summary>
    </member>
    <member name="E:Xceed.Grid.GroupByRowStyle.CellBackColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GroupByRowStyle.CellBackColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GroupByRowStyle.CellFontChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GroupByRowStyle.CellFont"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GroupByRowStyle.CellForeColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GroupByRowStyle.CellForeColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.GroupByRowStyle.CellLayoutChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GroupByRowStyle.CellLayout"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupManagerRow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GroupManagerRow"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupManagerRow.#ctor(Xceed.Grid.RowSelector)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GroupManagerRow"></see> class specifying its <see cref="T:Xceed.Grid.RowSelector"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupManagerRow.#ctor(Xceed.Grid.GroupManagerRow)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.GroupManagerRow"></see> class
            specifying the template that will be used to create other rows.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupManagerRow.CreateInstance">
      <summary>Creates a new <see cref="T:Xceed.Grid.Row"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to newly create <see cref="T:Xceed.Grid.Row"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.GroupManagerRow.GetFittedDisplayHeight(Xceed.Grid.AutoHeightMode,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves the fitted height of the row in pixels.</summary>
      <returns>The fitted height of the row in pixels.</returns>
    </member>
    <member name="M:Xceed.Grid.GroupManagerRow.GetVariableText(System.String)">
      <summary>Retrieves the string equivalent of <EM>variableName</EM> used when dynamically resolving the variables specified in the <A href="Xceed.Grid~Xceed.Grid.GroupManagerRow~TitleFormat.html">TitleFormat</A> property.</summary>
      <returns>The string equivalent of <EM>variableName</EM>.</returns>
    </member>
    <member name="M:Xceed.Grid.GroupManagerRow.IsInputKey(System.Windows.Forms.Keys)">
      <summary>Returns a boolean value indicating if the key(s) pressed is an input key for the GroupManagerRow.</summary>
      <returns>true if the key(s) pressed in an input key; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.GroupManagerRow.OnClick(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.Click"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupManagerRow.OnDoubleClick(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.DoubleClick"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupManagerRow.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.KeyDown"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupManagerRow.OnSiblingDataRowsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Row.SiblingDataRowsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupManagerRow.OnTitleFormatChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GroupManagerRow.TitleFormatChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupManagerRow.PaintBorders(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the borders of the <see cref="T:Xceed.Grid.GroupManagerRow"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupManagerRow.PaintForeground(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the foreground of the <see cref="T:Xceed.Grid.GroupManagerRow"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupManagerRow.ResetTitleFormat">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupManagerRow.TitleFormat"></see> property
            to its default value, <see cref="P:Xceed.Grid.GroupManagerRow.DefaultTitleFormat"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupManagerRow.DefaultBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupManagerRow.DefaultCanBeSelected">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.CanBeSelected"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupManagerRow.DefaultIndented">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.Indented"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupManagerRow.DefaultMinHeight">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.MinHeight"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupManagerRow.DefaultTitleFormat">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupManagerRow.TitleFormat"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupManagerRow.DefaultTrimming">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.Trimming"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupManagerRow.DefaultVisibleWhenCollapsed">
      <summary>Gets the default value of the <see cref="Xceed.Grid~Xceed.Grid.GroupManagerRow~VisibleWhenCollapsed.html"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupManagerRow.IsBackColorAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupManagerRow.IsTrimmingAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.Trimming"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupManagerRow.Title">
      <summary>Gets the title displayed by the GroupManagerRow.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupManagerRow.TitleFormat">
      <summary>Gets or sets a variable containing string representing the text displayed by the <see cref="T:Xceed.Grid.GroupManagerRow"></see>.</summary>
    </member>
    <member name="E:Xceed.Grid.GroupManagerRow.TitleFormatChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GroupManagerRow.TitleFormat"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupMargin.#ctor">
      <summary>Initialize a new instance of the GroupMargin class.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupMargin.#ctor(Xceed.Grid.GroupMargin,Xceed.Grid.GroupBase)">
      <summary>Initializes a new instance of the GroupMargin class 
            specifying the template that will be used to create other groups.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupMargin.BringIntoView">
      <summary>Brings the group margin into the visible area of the grid.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupMargin.CreateInstance(Xceed.Grid.GroupBase)">
      <summary>Creates a new <see cref="T:Xceed.Grid.GroupMargin"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to the newly created <see cref="T:Xceed.Grid.GroupMargin"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.GroupMargin.OnWidthChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.GroupMargin.WidthChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupMargin.ResetWidth">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.GroupMargin.Width"></see> property to its default value,
            <see cref="P:Xceed.Grid.GroupMargin.DefaultWidth"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.GroupMargin.SetVisibleCore(Xceed.Grid.GridElement+AmbientBool)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupMargin.AmbientParent">
      <summary>Gets the ambient parent of the GroupMargin.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupMargin.ClipPartialLine">
      <summary>Gets or sets a boolean value indicating if partial lines should be clipped.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupMargin.DefaultBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupMargin.DefaultWidth">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GroupMargin.Width"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupMargin.Font">
      <summary>Gets or sets the font of the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupMargin.ForeColor">
      <summary>Gets or sets the foreground color of the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupMargin.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment of the grid element's content.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupMargin.IsBackColorAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupMargin.ParentGrid">
      <summary>Gets a reference to the parent grid of the GroupMargin.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupMargin.ParentGroup">
      <summary>Gets a reference to the parent group of the group margin.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupMargin.ReadOnly">
      <summary>Gets or sets a boolean value indicating if the content of the grid element can be edited.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupMargin.Trimming">
      <summary>Gets or sets a value indicating how text displayed in the cell will be trimmed when it exceeds the edges of the layout rectangle.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupMargin.VerticalAlignment">
      <summary>Gets or sets the vertical alignment of the grid element's content.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupMargin.Width">
      <summary>Gets or sets the width of the group margin, in pixels.</summary>
    </member>
    <member name="P:Xceed.Grid.GroupMargin.WordWrap">
      <summary>Gets or sets a boolean value indicating if the text of the grid element should be wrapped.</summary>
    </member>
    <member name="E:Xceed.Grid.GroupMargin.WidthChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.GroupMargin.Width"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.InitializingDetailGridEventArgs.#ctor(Xceed.Grid.DetailGrid)">
      <summary>Initializes a new instance of the InitializingDetailGridEventArgs class.</summary>
    </member>
    <member name="P:Xceed.Grid.InitializingDetailGridEventArgs.Grid">
      <summary>Gets a reference to a <see cref="T:Xceed.Grid.DetailGrid"></see> object representing the detail grid
            that is about to be "attached" to a <see cref="T:Xceed.Grid.DataRow"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.InitializingNewDataRowEventArgs.#ctor(Xceed.Grid.DataRow)">
      <summary>Provides information regarding the <see cref="P:Xceed.Grid.InitializingNewDataRowEventArgs.DataRow"></see> being initialized.</summary>
    </member>
    <member name="P:Xceed.Grid.InitializingNewDataRowEventArgs.DataRow">
      <summary>Gets a reference to a <see cref="P:Xceed.Grid.InitializingNewDataRowEventArgs.DataRow"></see> object representing the data row
            which was created using the <see cref="M:Xceed.Grid.Collections.DataRowList.AddNew"></see> method.</summary>
    </member>
    <member name="M:Xceed.Grid.InsertionCell.#ctor">
      <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.InsertionCell.#ctor(System.String)">
      <summary>Initializes a new instance of the InsertionCell class specifying its field name.</summary>
    </member>
    <member name="M:Xceed.Grid.InsertionCell.#ctor(Xceed.Grid.InsertionCell)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.InsertionCell"></see> class specifying
            the InsertionCell that will be used as a template to create other InsertionCells.</summary>
    </member>
    <member name="M:Xceed.Grid.InsertionCell.#ctor(Xceed.Grid.Column)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.InsertionCell"></see> class specifying its parent
            column.</summary>
    </member>
    <member name="M:Xceed.Grid.InsertionCell.CreateInstance">
      <summary>Creates a new <see cref="T:Xceed.Grid.Cell"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to the newly create <see cref="T:Xceed.Grid.Cell"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.InsertionCell.GetValue">
      <summary>Retrieves the value assigned to the InsertionCell.</summary>
      <returns>The value assigned to the InsertionCell.</returns>
    </member>
    <member name="M:Xceed.Grid.InsertionCell.Initialize">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.InsertionCell.OnIdleValueChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.InsertionCell.IdleValueChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.InsertionCell.ResetIdleValue">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.InsertionCell.IdleValue"></see> property to its default value, <see cref="P:Xceed.Grid.InsertionCell.DefaultIdleValue"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.InsertionCell.SetValue(System.Object)">
      <summary>Assigns the value to the InsertionCell.</summary>
    </member>
    <member name="P:Xceed.Grid.InsertionCell.DefaultIdleValue">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.InsertionCell.IdleValue"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.InsertionCell.IdleValue">
      <summary>Gets or sets the value displayed in an InsertionCell when it is not in edition.</summary>
    </member>
    <member name="E:Xceed.Grid.InsertionCell.IdleValueChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.InsertionCell.IdleValue"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.InsertionRow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.InsertionRow"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.InsertionRow.#ctor(Xceed.Grid.InsertionRow)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.InsertionRow"></see> class specifying
            the template that will be used to create other rows.</summary>
    </member>
    <member name="M:Xceed.Grid.InsertionRow.#ctor(Xceed.Grid.RowSelector)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.InsertionRow"></see> class specifying its <see cref="T:Xceed.Grid.RowSelector"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.InsertionRow.BeginEditCore">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.InsertionRow.CancelEditCore(System.Collections.ArrayList)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.InsertionRow.CreateCell(Xceed.Grid.Column)">
      <summary>Creates a new <see cref="T:Xceed.Grid.Cell"></see> object in the <see cref="T:Xceed.Grid.InsertionRow"></see>
            for the specified column.</summary>
      <returns>A reference to the newly created <see cref="T:Xceed.Grid.Cell"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.InsertionRow.CreateInstance">
      <summary>Creates a new <see cref="T:Xceed.Grid.Row"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to newly create <see cref="T:Xceed.Grid.Row"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.InsertionRow.EndEditCore">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.InsertionRow.OnRowInserted(Xceed.Grid.RowInsertedEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.InsertionRow.RowInserted"></see> event.</summary>
    </member>
    <member name="P:Xceed.Grid.InsertionRow.CellType">
      <summary>Gets the <see cref="T:System.Type"></see> of the cells contained in the row.</summary>
    </member>
    <member name="P:Xceed.Grid.InsertionRow.EnforceCellDataTypes">
      <summary>Gets a boolean value indicating if the data types of the cells should match the data type of their respective parent columns.</summary>
    </member>
    <member name="E:Xceed.Grid.InsertionRow.RowInserted">
      <summary>Raised when a new <see cref="T:Xceed.Grid.DataRow"></see> has been inserted into a grid using the 
            <see cref="T:Xceed.Grid.InsertionRow"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.LeavingEditEventArgs.#ctor(System.Windows.Forms.Control,System.Object)">
      <summary>Provides information on the <see cref="T:Xceed.Grid.Cell"></see> object that has been edited.</summary>
    </member>
    <member name="P:Xceed.Grid.LeavingEditEventArgs.CellEditorControl">
      <summary>Gets the control that is currently editing the content of the cell.</summary>
    </member>
    <member name="P:Xceed.Grid.LeavingEditEventArgs.NewValue">
      <summary>Gets or sets the new value assigned to the <see cref="P:Xceed.Grid.Cell.Value"></see> property
            of the cell.</summary>
    </member>
    <member name="P:Xceed.Grid.Licenser.LicenseKey">
      <summary>Gets or sets the license key used to license this product.</summary>
    </member>
    <member name="M:Xceed.Grid.QueryGroupKeysEventArgs.#ctor(Xceed.Grid.DataRow,Xceed.Grid.Collections.GroupKeyList)">
      <summary>Initializes a new instance of the QueryGroupKeysEventArgs class.</summary>
    </member>
    <member name="P:Xceed.Grid.QueryGroupKeysEventArgs.DataRow">
      <summary>Gets the data row to group.</summary>
    </member>
    <member name="P:Xceed.Grid.QueryGroupKeysEventArgs.GroupKeys">
      <summary>Gets a list containing the group values.</summary>
    </member>
    <member name="M:Xceed.Grid.QueryPrintPageEventArgs.#ctor(System.Drawing.Printing.PrintPageEventArgs,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the QueryPrintPageEventArgs class.</summary>
    </member>
    <member name="P:Xceed.Grid.QueryPrintPageEventArgs.CurrentPageNumber">
      <summary>Gets the number of the page that is about to be printed.</summary>
    </member>
    <member name="P:Xceed.Grid.QueryPrintPageEventArgs.IsPageSelected">
      <summary>Gets or sets a boolean value indicating if the page is to be printed.</summary>
    </member>
    <member name="P:Xceed.Grid.QueryPrintPageEventArgs.PrintPageEventArgs">
      <summary>Gets the <see cref="P:Xceed.Grid.QueryPrintPageEventArgs.PrintPageEventArgs"></see> used by the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.BringIntoView">
      <summary>Brings the row into the visible area of the grid.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.CreateInstance">
      <summary>Creates a new <see cref="T:Xceed.Grid.Row"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to newly create <see cref="T:Xceed.Grid.Row"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.Row.GetFittedDisplayHeight(Xceed.Grid.AutoHeightMode,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves the fitted height of the row in pixels.</summary>
      <returns>The fitted height of the row in pixels.</returns>
    </member>
    <member name="M:Xceed.Grid.Row.GetFittedHeight(Xceed.Grid.AutoHeightMode)">
      <summary>Retrieves the fitted height of the row in pixels.</summary>
      <returns>A value containing the fitted height of the row in pixels. Unless overridden, <see cref="P:Xceed.Grid.Row.MinHeight"></see>.</returns>
    </member>
    <member name="M:Xceed.Grid.Row.OnAutoHeightModeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Row.AutoHeightModeChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.OnCanBeCurrentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Row.CanBeCurrentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.OnCanBeSelectedChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Row.CanBeSelectedChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.OnDoubleClick(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.DoubleClick"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.OnHeightChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Row.HeightChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.OnIndentedChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Row.IndentedChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.OnIsCurrentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Row.IsCurrentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.OnIsSelectedChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Row.IsSelectedChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.OnMaxHeightChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Row.MaxHeightChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.OnMinHeightChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Row.MinHeightChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.OnQueryAccessibilityHelp(System.Windows.Forms.QueryAccessibilityHelpEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Row.QueryAccessibilityHelp"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.OnShowTreeLineChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Row.ShowTreeLineChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.OnSiblingDataRowsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Row.SiblingDataRowsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.OnVisibleWhenCollapsedChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Row.VisibleWhenCollapsedChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.PaintHotState(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the row in a hot state.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.PaintSelectedState(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the row in a selected state.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.Remove">
      <summary>Removes the row from its containing list.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.ResetAccessibleDefaultActionDescription">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Row.AccessibleDefaultActionDescription"></see> property to its default value, <see cref="P:Xceed.Grid.Row.DefaultAccessibleDefaultActionDescription"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.ResetAccessibleDescription">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Row.AccessibleDescription"></see> property to its default value, <see cref="P:Xceed.Grid.Row.DefaultAccessibleDescription"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.ResetAccessibleName">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Row.AccessibleName"></see> property to its default value, <see cref="P:Xceed.Grid.Row.DefaultAccessibleName"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.ResetAutoHeightMode">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Row.AutoHeightMode"></see> property to its 
            default value, <see cref="P:Xceed.Grid.Row.DefaultAutoHeightMode"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.ResetCanBeCurrent">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Row.CanBeCurrent"></see> property 
            to its default value, <see cref="P:Xceed.Grid.Row.DefaultCanBeCurrent"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.ResetCanBeSelected">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Row.CanBeSelected"></see> property to 
            its default value, <see cref="P:Xceed.Grid.Row.DefaultCanBeSelected"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.ResetHeight">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Row.Height"></see> property to its 
            default value, <see cref="P:Xceed.Grid.Row.DefaultHeight"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.ResetIndented">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Row.Indented"></see> property to its 
            default value, <see cref="P:Xceed.Grid.Row.DefaultIndented"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.ResetMaxHeight">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Row.MaxHeight"></see> property to 
            its default value, <see cref="P:Xceed.Grid.Row.DefaultMaxHeight"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.ResetMinHeight">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Row.MinHeight"></see> property to 
            its default value, <see cref="P:Xceed.Grid.Row.DefaultMinHeight"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.ResetShowTreeLine">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Row.ShowTreeLine"></see> property to its 
            default value, <see cref="P:Xceed.Grid.Row.DefaultShowTreeLine"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.ResetVisibleWhenCollapsed">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Row.VisibleWhenCollapsed"></see> property to 
            its default value, <see cref="P:Xceed.Grid.Row.DefaultVisibleWhenCollapsed"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.SetHeightCore(System.Int32)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.Row.SetVisibleCore(Xceed.Grid.GridElement+AmbientBool)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.AccessibleDefaultActionDescription">
      <summary>Gets or sets the default action description of the element for use by accessibility client applications.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.AccessibleDescription">
      <summary>Gets or sets the description of the element used by accessibility client applications.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.AccessibleName">
      <summary>Gets or sets the name of the element used by accessibility client applications.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.AmbientParent">
      <summary>Gets the ambient parent of the row.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.AutoHeightMode">
      <summary>Gets or sets a value indicating what the default height
            of the row will be in the case where the <see cref="P:Xceed.Grid.Row.Height"></see>
            property is not explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.Borders">
      <summary>Gets the borders of the <see cref="T:Xceed.Grid.Row"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.CanBeCurrent">
      <summary>Gets or sets a boolean value indicating if the row can be the current row.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.CanBeSelected">
      <summary>Gets or sets a boolean value indicating if the row can be selected.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.DefaultAccessibleDefaultActionDescription">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.AccessibleDefaultActionDescription"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.DefaultAccessibleDescription">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.AccessibleDescription"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.DefaultAccessibleName">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.AccessibleName"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.DefaultAutoHeightMode">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.AutoHeightMode"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.DefaultCanBeCurrent">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.CanBeCurrent"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.DefaultCanBeSelected">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.CanBeSelected"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.DefaultHeight">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.Height"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.DefaultIndented">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.Indented"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.DefaultMaxHeight">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.MaxHeight"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.DefaultMinHeight">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.MinHeight"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.DefaultShowTreeLine">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.ShowTreeLine"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.DefaultVisibleWhenCollapsed">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.VisibleWhenCollapsed"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.Height">
      <summary>Gets or sets the height of the row in pixels.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.Indented">
      <summary>Gets or sets a boolean value indicating if the row is indented.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.IsCurrent">
      <summary>Gets a boolean value indicating if the row is the current row.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.IsSelected">
      <summary>Gets or sets a boolean value indicating if the row is selected.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.Location">
      <summary>Gets a value representing the location of the row within its <see cref="P:Xceed.Grid.Row.ParentGroup"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.MaxHeight">
      <summary>Gets or sets the maximum height of the row in pixels.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.MinHeight">
      <summary>Gets or sets the minimum height of the row in pixels.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.ParentGrid">
      <summary>Gets a reference to the parent grid of the row.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.ParentGroup">
      <summary>Gets a reference to the parent group of the row.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.RowSelector">
      <summary>Gets a reference to the row's <see cref="P:Xceed.Grid.Row.RowSelector"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.ShowTreeLine">
      <summary>Gets or sets a value indicating whether or not this Row's horizontal treeline is displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.VisibleWhenCollapsed">
      <summary>Gets a boolean value indicating if the row is visible when its parent group is collapsed.</summary>
    </member>
    <member name="P:Xceed.Grid.Row.ReportStyle">
      <summary>Gets the report style of the row.</summary>
    </member>
    <member name="E:Xceed.Grid.Row.AutoHeightModeChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Row.AutoHeightMode"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Row.CanBeCurrentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Row.CanBeCurrent"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Row.CanBeSelectedChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Row.CanBeSelected"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Row.HeightChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Row.Height"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Row.IndentedChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Row.Indented"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Row.IsCurrentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Row.IsCurrent"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Row.IsSelectedChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Row.IsSelected"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Row.MaxHeightChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Row.MaxHeight"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Row.MinHeightChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Row.MinHeight"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Row.QueryAccessibilityHelp">
      <summary>Raised when an Accessibility client invokes help for that element.</summary>
    </member>
    <member name="E:Xceed.Grid.Row.ShowTreeLineChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Row.ShowTreeLine"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Row.SiblingDataRowsChanged">
      <summary>Raised when modifications are made to the content of a cell in a sibling data row
            and when a sibling data row is added or removed from the parent group.</summary>
    </member>
    <member name="E:Xceed.Grid.Row.VisibleWhenCollapsedChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Row.VisibleWhenCollapsed"></see> property 
            is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.RowInsertedEventArgs.#ctor(Xceed.Grid.DataRow)">
      <summary>Initializes a new instance of the RowInsertedEventArgs class.</summary>
    </member>
    <member name="P:Xceed.Grid.RowInsertedEventArgs.DataRow">
      <summary>Gets a reference to the <see cref="P:Xceed.Grid.RowInsertedEventArgs.DataRow"></see> that has been inserted.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.#ctor">
      <summary>Initializes a new instance of the RowSelector class.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.#ctor(Xceed.Grid.RowSelector,Xceed.Grid.Row)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.RowSelector"></see> class
            specifying the template that will be used to create other RowSelectors.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.BringIntoView">
      <summary>Brings the RowSelector into the visible area of the grid.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.CreateInstance(Xceed.Grid.Row)">
      <summary>Creates a new <see cref="T:Xceed.Grid.RowSelector"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to newly create <see cref="T:Xceed.Grid.RowSelector"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.RowSelector.OnCurrentImageIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.RowSelector.CurrentImageIndexChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.OnDefaultImageIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.RowSelector.DefaultImageIndexChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.OnDoubleClick(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.DoubleClick"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.OnEditImageIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.RowSelector.EditImageIndexChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.OnErrorImageIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.RowSelector.ErrorImageIndexChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.OnInsertImageIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.RowSelector.InsertImageIndexChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.OnMouseEnter(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.MouseEnter"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.OnMouseLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.MouseLeave"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.MouseUp"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.OnQueryAccessibilityHelp(System.Windows.Forms.QueryAccessibilityHelpEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.RowSelector.QueryAccessibilityHelp"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.OnSelectedImageIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.RowSelector.SelectedImageIndexChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.PaintBackground(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the background of the <see cref="T:Xceed.Grid.RowSelector"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.PaintForeground(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the foreground of the <see cref="T:Xceed.Grid.RowSelector"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.PaintHotState(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the row selector in a hot state.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.ResetAccessibleDefaultActionDescription">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.RowSelector.AccessibleDefaultActionDescription"></see> property to its default value, <see cref="P:Xceed.Grid.RowSelector.DefaultAccessibleDefaultActionDescription"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.ResetAccessibleDescription">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.RowSelector.AccessibleDescription"></see> property to its default value, <see cref="P:Xceed.Grid.RowSelector.DefaultAccessibleDescription"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.ResetAccessibleName">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.RowSelector.AccessibleName"></see> property to its default value, <see cref="P:Xceed.Grid.RowSelector.DefaultAccessibleName"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.ResetCurrentImageIndex">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.RowSelector.CurrentImageIndex"></see> property 
            to its default value, <see cref="P:Xceed.Grid.RowSelector.DefaultCurrentImageIndex"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.ResetDefaultImageIndex">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.RowSelector.DefaultImageIndex"></see> property 
            to its default value, <see cref="P:Xceed.Grid.RowSelector.DefaultDefaultImageIndex"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.ResetEditImageIndex">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.RowSelector.EditImageIndex"></see> property 
            to its default value, <see cref="P:Xceed.Grid.RowSelector.DefaultEditImageIndex"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.ResetErrorImageIndex">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.RowSelector.ErrorImageIndex"></see> property 
            to its default value, <see cref="P:Xceed.Grid.RowSelector.DefaultErrorImageIndex"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.ResetHotTracking">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.RowSelector.HotTracking"></see> property
            to its default value, <see cref="P:Xceed.Grid.RowSelector.DefaultHotTracking"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.ResetInsertImageIndex">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.RowSelector.InsertImageIndex"></see> property 
            to its default value, <see cref="P:Xceed.Grid.RowSelector.DefaultInsertImageIndex"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.ResetSelectedImageIndex">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.RowSelector.SelectedImageIndex"></see> property 
            to its default value, <see cref="P:Xceed.Grid.RowSelector.DefaultSelectedImageIndex"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelector.SetVisibleCore(Xceed.Grid.GridElement+AmbientBool)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.AccessibleDefaultActionDescription">
      <summary>Gets or sets the default action description of the element for use by accessibility client applications.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.AccessibleDescription">
      <summary>Gets or sets the description of the element used by accessibility client applications.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.AccessibleName">
      <summary>Gets or sets the name of the element used by accessibility client applications.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.AmbientBackColor">
      <summary>Gets the ambient value of the row selector's <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.AmbientCurrentImageIndex">
      <summary>Gets the ambient value of the row selector's <see cref="P:Xceed.Grid.RowSelector.CurrentImageIndex"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.AmbientDefaultImageIndex">
      <summary>Gets the ambient value of the row selector's <see cref="P:Xceed.Grid.RowSelector.DefaultImageIndex"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.AmbientEditImageIndex">
      <summary>Gets the ambient value of the row selector's <see cref="P:Xceed.Grid.RowSelector.EditImageIndex"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.AmbientErrorImageIndex">
      <summary>Gets the ambient value of the row selector's <see cref="P:Xceed.Grid.RowSelector.ErrorImageIndex"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.AmbientHotTracking">
      <summary>Gets the ambient value of the grid element's <see cref="P:Xceed.Grid.RowSelector.HotTracking"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.AmbientInsertImageIndex">
      <summary>Gets the ambient value of the row selector's <see cref="P:Xceed.Grid.RowSelector.InsertImageIndex"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.AmbientParent">
      <summary>Gets the ambient parent of the RowSelector.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.AmbientSelectedImageIndex">
      <summary>Gets the ambient value of the row selector's <see cref="P:Xceed.Grid.RowSelector.SelectedImageIndex"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.Borders">
      <summary>Gets the borders of the <see cref="T:Xceed.Grid.RowSelector"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.ClipPartialLine">
      <summary>Gets or sets a boolean value indicating if partial lines should be clipped.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.CurrentImageIndex">
      <summary>Gets or sets the index of the image to use to represent the current row.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.DefaultAccessibleDefaultActionDescription">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelector.AccessibleDefaultActionDescription"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.DefaultAccessibleDescription">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelector.AccessibleDescription"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.DefaultAccessibleName">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelector.AccessibleName"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.DefaultCurrentImageIndex">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelector.CurrentImageIndex"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.DefaultDefaultImageIndex">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelector.DefaultImageIndex"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.DefaultEditImageIndex">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelector.EditImageIndex"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.DefaultErrorImageIndex">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelector.ErrorImageIndex"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.DefaultHotTracking">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelector.HotTracking"></see> property</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.DefaultImageIndex">
      <summary>Gets or sets the index of the image to use by default.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.DefaultInsertImageIndex">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelector.InsertImageIndex"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.DefaultSelectedImageIndex">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelector.SelectedImageIndex"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.EditImageIndex">
      <summary>Gets or sets the index of the image to use to represent the row being edited.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.ErrorImageIndex">
      <summary>Gets or sets the index of the image to use to represent the row which contains errors.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.Font">
      <summary>Gets or sets the font of the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.ForeColor">
      <summary>Gets or sets the foreground color of the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment of the grid element's content.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.HotTracking">
      <summary>Gets or sets a boolean value indicating if hot tracking is enabled for the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.InsertImageIndex">
      <summary>Gets or sets the index of the image to use to represent the insertion row.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.IsCurrentImageIndexAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.RowSelector.CurrentImageIndex"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.IsDefaultImageIndexAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.RowSelector.DefaultImageIndex"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.IsEditImageIndexAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.RowSelector.EditImageIndex"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.IsErrorImageIndexAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.RowSelector.ErrorImageIndex"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.IsHotTrackingAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.RowSelector.HotTracking"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.IsInsertImageIndexAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.RowSelector.InsertImageIndex"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.IsSelectedImageIndexAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.RowSelector.SelectedImageIndex"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.MouseState">
      <summary>Value indicating if the mouse events will be handled by the RowSelector.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.ParentGrid">
      <summary>Gets the parent grid of the RowSelector.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.ReadOnly">
      <summary>Gets or sets a boolean value indicating if the content of the grid element can be edited.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.Row">
      <summary>Gets the row associated with the RowSelector.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.SelectedImageIndex">
      <summary>Gets or sets the index of the image to use to represent the selected row.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.Trimming">
      <summary>Gets or sets a value indicating how text displayed in the cell will be trimmed when it exceeds the edges of the layout rectangle.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.VerticalAlignment">
      <summary>Gets or sets the vertical alignment of the grid element's content.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelector.WordWrap">
      <summary>Gets or sets a boolean value indicating if the text of the grid element should be wrapped.</summary>
    </member>
    <member name="E:Xceed.Grid.RowSelector.CurrentImageIndexChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.RowSelector.CurrentImageIndex"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.RowSelector.DefaultImageIndexChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.RowSelector.DefaultImageIndex"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.RowSelector.EditImageIndexChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.RowSelector.EditImageIndex"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.RowSelector.ErrorImageIndexChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.RowSelector.ErrorImageIndex"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.RowSelector.InsertImageIndexChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.RowSelector.InsertImageIndex"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.RowSelector.QueryAccessibilityHelp">
      <summary>Raised when an Accessibility client invokes help for that element.</summary>
    </member>
    <member name="E:Xceed.Grid.RowSelector.SelectedImageIndexChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.RowSelector.SelectedImageIndex"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.#ctor">
      <summary>Initializes a new instance of the RowSelectorPane class.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.#ctor(Xceed.Grid.RowSelectorPane,Xceed.Grid.GroupBase)">
      <summary>Initializes a new instance of the RowSelectorPane class specifying the RowSelectorPane to use
            as a template as well as its parent group.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.CreateInstance(Xceed.Grid.GroupBase)">
      <summary>Creates a new <see cref="T:Xceed.Grid.GroupMargin"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to the newly created <see cref="T:Xceed.Grid.GroupMargin"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.GetDefaultImageList">
      <summary>Retrieves the default imagelist used by the RowSelectorPane.</summary>
      <returns>A reference to an <see cref="P:Xceed.Grid.RowSelectorPane.ImageList"></see> object representing the default
            imagelist used by the RowSelectorPane.</returns>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.OnAllowRowResizeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.RowSelectorPane.AllowRowResizeChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.OnCurrentImageIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.RowSelectorPane.CurrentImageIndexChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.OnDefaultImageIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.RowSelectorPane.DefaultImageIndexChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.OnEditImageIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.RowSelectorPane.EditImageIndexChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.OnErrorImageIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.RowSelectorPane.ErrorImageIndexChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.OnImageListChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.RowSelectorPane.ImageListChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.OnInsertImageIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.RowSelectorPane.InsertImageIndexChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.OnSelectedImageIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.RowSelectorPane.SelectedImageIndexChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.PaintBackground(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the background of the <see cref="T:Xceed.Grid.RowSelectorPane"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.PaintHotState(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the row selector pane in a hot state.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.ResetAllowRowResize">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.RowSelectorPane.AllowRowResize"></see> property
            to its default value, <see cref="P:Xceed.Grid.RowSelectorPane.DefaultAllowRowResize"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.ResetCurrentImageIndex">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.RowSelectorPane.CurrentImageIndex"></see> property 
            to its default value, <see cref="P:Xceed.Grid.RowSelectorPane.DefaultCurrentImageIndex"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.ResetDefaultImageIndex">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.RowSelectorPane.DefaultImageIndex"></see> property to 
            its default value, <see cref="P:Xceed.Grid.RowSelectorPane.DefaultImageIndex"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.ResetEditImageIndex">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.RowSelectorPane.EditImageIndex"></see> property to 
            its default value, <see cref="P:Xceed.Grid.RowSelectorPane.DefaultEditImageIndex"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.ResetErrorImageIndex">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.RowSelectorPane.ErrorImageIndex"></see> property to 
            its default value, <see cref="P:Xceed.Grid.RowSelectorPane.DefaultErrorImageIndex"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.ResetHotTracking">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.RowSelectorPane.HotTracking"></see> property
            to its default value, <see cref="P:Xceed.Grid.RowSelectorPane.DefaultHotTracking"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.ResetImageList">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.RowSelectorPane.ImageList"></see> property
            to its default value, <see cref="P:Xceed.Grid.RowSelectorPane.DefaultImageList"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.ResetInsertImageIndex">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.RowSelectorPane.InsertImageIndex"></see> property 
            to its default value, <see cref="P:Xceed.Grid.RowSelectorPane.DefaultInsertImageIndex"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.RowSelectorPane.ResetSelectedImageIndex">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.RowSelectorPane.SelectedImageIndex"></see> property to 
            its default value, <see cref="P:Xceed.Grid.RowSelectorPane.DefaultSelectedImageIndex"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.AllowRowResize">
      <summary>Gets or sets a boolean value indicating if the rows can be resized using the row selectors.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.AmbientHotTracking">
      <summary>Gets the ambient value of the grid element's <see cref="P:Xceed.Grid.RowSelectorPane.HotTracking"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.Borders">
      <summary>Gets the borders of the <see cref="T:Xceed.Grid.RowSelectorPane"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.CurrentImageIndex">
      <summary>Gets or sets the index of the image to use to represent the current row.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.DefaultAllowRowResize">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelectorPane.AllowRowResize"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.DefaultBackColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.DefaultCurrentImageIndex">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelectorPane.CurrentImageIndex"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.DefaultDefaultImageIndex">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelectorPane.DefaultImageIndex"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.DefaultEditImageIndex">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelectorPane.EditImageIndex"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.DefaultErrorImageIndex">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelectorPane.ErrorImageIndex"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.DefaultHotTracking">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelectorPane.HotTracking"></see> property</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.DefaultImageIndex">
      <summary>Gets or sets the index of the image to use by default.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.DefaultImageList">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelectorPane.ImageList"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.DefaultInsertImageIndex">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelectorPane.InsertImageIndex"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.DefaultSelectedImageIndex">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelectorPane.SelectedImageIndex"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.EditImageIndex">
      <summary>Gets or sets the index of the image to use to represent the row being edited.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.ErrorImageIndex">
      <summary>Gets or sets the index of the image displayed when a <see cref="T:Xceed.Grid.Row"></see> contains an error.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.HotTracking">
      <summary>Gets or sets a boolean value indicating if hot tracking is enabled for the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.ImageList">
      <summary>Gets or sets the list of images that will be used by each
            <see cref="T:Xceed.Grid.RowSelector"></see> when needed.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.InsertImageIndex">
      <summary>Gets or sets the index of the image to use to represent the insertion row.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.IsBackColorAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.IsHotTrackingAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.RowSelectorPane.HotTracking"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.RowSelectorPane.SelectedImageIndex">
      <summary>Gets or sets the index of the image displayed when a <see cref="T:Xceed.Grid.Row"></see> is selected.</summary>
    </member>
    <member name="E:Xceed.Grid.RowSelectorPane.AllowRowResizeChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.RowSelectorPane.AllowRowResize"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.RowSelectorPane.CurrentImageIndexChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.RowSelectorPane.CurrentImageIndex"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.RowSelectorPane.DefaultImageIndexChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.RowSelectorPane.DefaultImageIndex"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.RowSelectorPane.EditImageIndexChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.RowSelectorPane.EditImageIndex"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.RowSelectorPane.ErrorImageIndexChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.RowSelectorPane.ErrorImageIndex"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.RowSelectorPane.ImageListChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.RowSelectorPane.ImageList"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.RowSelectorPane.InsertImageIndexChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.RowSelectorPane.InsertImageIndex"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.RowSelectorPane.SelectedImageIndexChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.RowSelectorPane.SelectedImageIndex"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.RowValidationErrorEventArgs.#ctor(System.Exception)">
      <summary>Provides information regarding the row which failed the validation process.</summary>
    </member>
    <member name="P:Xceed.Grid.RowValidationErrorEventArgs.CancelEdit">
      <summary>Gets or sets a boolean value indicating if the row whould exit edit mode.</summary>
    </member>
    <member name="P:Xceed.Grid.RowValidationErrorEventArgs.Exception">
      <summary>Gets the exception that was thrown.</summary>
    </member>
    <member name="M:Xceed.Grid.SpacerRow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.SpacerRow"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.SpacerRow.#ctor(Xceed.Grid.RowSelector)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.SpacerRow"></see> class specifying its <see cref="T:Xceed.Grid.RowSelector"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.SpacerRow.#ctor(Xceed.Grid.SpacerRow)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.SpacerRow"></see> class specifying the template that will 
            be used to create other SpacerRows.</summary>
    </member>
    <member name="M:Xceed.Grid.SpacerRow.CreateInstance">
      <summary>Creates a new <see cref="T:Xceed.Grid.SpacerRow"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to the newly create <see cref="T:Xceed.Grid.Row"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.SpacerRow.GetFittedDisplayHeight(Xceed.Grid.AutoHeightMode,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves the fitted height of the row in pixels.</summary>
      <returns>The fitted height of the row in pixels.</returns>
    </member>
    <member name="M:Xceed.Grid.SpacerRow.PaintBorders(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the borders of the SpacerRow.</summary>
    </member>
    <member name="M:Xceed.Grid.SpacerRow.SetHeightCore(System.Int32)">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRow.AmbientParent">
      <summary>Gets the ambient parent of the SpacerRow.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRow.Borders">
      <summary>Gets the borders of the <see cref="T:Xceed.Grid.SpacerRow"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRow.CanBeCurrent">
      <summary>Gets or sets a boolean value indicating if the row can be the current row.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRow.CanBeSelected">
      <summary>Gets or sets a boolean value indicating if the row can be selected.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRow.ClipPartialLine">
      <summary>Gets or sets a boolean value indicating if partial lines should be clipped.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRow.DefaultCanBeCurrent">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.CanBeCurrent"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRow.DefaultIndented">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.Indented"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRow.DefaultMaxHeight">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.MaxHeight"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRow.DefaultMinHeight">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.MinHeight"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRow.DefaultShowTreeLine">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Row.ShowTreeLine"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRow.Font">
      <summary>Gets or sets the font of the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRow.ForeColor">
      <summary>Gets or sets the foreground color of the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRow.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment of the grid element's content.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRow.Indented">
      <summary>Gets or sets a boolean value indicating if the row is indented.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRow.ReadOnly">
      <summary>Gets or sets a boolean value indicating if the content of the grid element can be edited.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRow.ShowTreeLine">
      <summary>Gets or sets a value indicating whether or not this Row's horizontal treeline is displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRow.Trimming">
      <summary>Gets or sets a value indicating how text displayed in the cell will be trimmed when it exceeds the edges of the layout rectangle.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRow.VerticalAlignment">
      <summary>Gets or sets the vertical alignment of the grid element's content.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRow.WordWrap">
      <summary>Gets or sets a boolean value indicating if the text of the grid element should be wrapped.</summary>
    </member>
    <member name="M:Xceed.Grid.SpacerRowSelector.#ctor">
      <summary>Initializes a new instance of the SpacerRowSelector class.</summary>
    </member>
    <member name="M:Xceed.Grid.SpacerRowSelector.#ctor(Xceed.Grid.SpacerRowSelector,Xceed.Grid.Row)">
      <summary>Initializes a new instance of the SpacerRowSelector class specifying the template 
            that will be used to create other SpacerRowSelectors.</summary>
    </member>
    <member name="M:Xceed.Grid.SpacerRowSelector.CreateInstance(Xceed.Grid.Row)">
      <summary>Creates a new SpacerRowSelector object that is a copy of the current instance.</summary>
      <returns>A reference to newly created <see cref="T:Xceed.Grid.RowSelector"></see> object.</returns>
    </member>
    <member name="P:Xceed.Grid.SpacerRowSelector.DefaultHotTracking">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.RowSelector.HotTracking"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.SpacerRowSelector.IsHotTrackingAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.RowSelector.HotTracking"></see> property gets its value from its parent.</summary>
    </member>
    <member name="M:Xceed.Grid.StatelessVisualGridElementStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.StatelessVisualGridElementStyle"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.StatelessVisualGridElementStyle.#ctor(Xceed.Grid.StatelessVisualGridElementStyle)">
      <summary>Initializes a new instance of the StatelessVisualGridElementStyle class specifying a
            StatelessVisualGridElementStyle from which to copy property values.</summary>
    </member>
    <member name="M:Xceed.Grid.StatelessVisualGridElementStyle.Clone">
      <summary>Creates an exact copy of the style.</summary>
      <returns>A reference to the newly created <see cref="T:Xceed.Grid.GridElementStyle"></see>.</returns>
    </member>
    <member name="M:Xceed.Grid.StatelessVisualGridElementStyle.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current
                <see cref="T:Xceed.Grid.StatelessVisualGridElementStyle"></see>.</summary>
      <returns>
        <strong>true</strong> if the specified object is equal to the current
                <see cref="T:Xceed.Grid.StatelessVisualGridElementStyle"></see>; otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Xceed.Grid.StatelessVisualGridElementStyle.GetHashCode">
      <summary>Serves as a hash function for the StatelessVisualGridElementStyle object, 
            suitable for use in hashing algorithms and data structures such as a hash table.</summary>
      <returns>An integer value representing a hash code for the current StatelessVisualGridElementStyle.</returns>
    </member>
    <member name="M:Xceed.Grid.StatelessVisualGridElementStyle.OnBackgroundImageAlignmentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImageAlignmentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.StatelessVisualGridElementStyle.OnBackgroundImageChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImageChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.StatelessVisualGridElementStyle.OnBackgroundImageStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImageStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.StatelessVisualGridElementStyle.OnGradientMapChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.StatelessVisualGridElementStyle.GradientMapChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.StatelessVisualGridElementStyle.ResetBackgroundImage">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImage"></see> property 
            to its default value, <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.DefaultBackgroundImage"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.StatelessVisualGridElementStyle.ResetBackgroundImageAlignment">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImageAlignment"></see> property
            to its default value, <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.DefaultBackgroundImageAlignment"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.StatelessVisualGridElementStyle.ResetBackgroundImageStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImageStyle"></see> property
            to its default value, <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.DefaultBackgroundImageStyle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.StatelessVisualGridElementStyle.ResetGradientMap">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.GradientMap"></see> property 
            to its default value, <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.DefaultGradientMap"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.StatelessVisualGridElementStyle.Apply(Xceed.Grid.GridElement)">
      <summary>Applies the style to the specified grid element.</summary>
    </member>
    <member name="M:Xceed.Grid.StatelessVisualGridElementStyle.Apply(Xceed.Grid.GridControl)">
      <summary>Applies the style to the specified grid.</summary>
    </member>
    <member name="P:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImage">
      <summary>Gets or sets the background image of the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImageAlignment">
      <summary>Gets or sets the alignment of the grid element's background image.</summary>
    </member>
    <member name="P:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImageStyle">
      <summary>Gets or sets the style of the grid element's background image.</summary>
    </member>
    <member name="P:Xceed.Grid.StatelessVisualGridElementStyle.DefaultBackgroundImage">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImage"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.StatelessVisualGridElementStyle.DefaultBackgroundImageAlignment">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImageAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.StatelessVisualGridElementStyle.DefaultBackgroundImageStyle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImageStyle"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.StatelessVisualGridElementStyle.DefaultGradientMap">
      <summary>Gets the default <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.GradientMap"></see> of the
                <see cref="T:Xceed.Grid.StatelessVisualGridElementStyle"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.StatelessVisualGridElementStyle.GradientMap">
      <summary>Gets or sets the GradientMap of the visual grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.StatelessVisualGridElementStyle.IsBackgroundImageAlignmentDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImageAlignment"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.StatelessVisualGridElementStyle.IsBackgroundImageDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImage"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.StatelessVisualGridElementStyle.IsBackgroundImageStyleDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImageStyle"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.StatelessVisualGridElementStyle.IsGradientMapDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.GradientMap"></see> property has been explicitly set.</summary>
    </member>
    <member name="E:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImageAlignmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImageAlignment"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImageChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImage"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImageStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.BackgroundImageStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.StatelessVisualGridElementStyle.GradientMapChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.StatelessVisualGridElementStyle.GradientMap"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.StyleSheet.Clone">
      <summary>Creates a clone of the <see cref="T:Xceed.Grid.StyleSheet"></see>.</summary>
      <returns>An object representing the clone of the <see cref="T:Xceed.Grid.StyleSheet"></see>.</returns>
    </member>
    <member name="M:Xceed.Grid.StyleSheet.Load(System.String)">
      <summary>Loads a XML file to create a <see cref="T:Xceed.Grid.StyleSheet"></see> object.</summary>
      <returns>A reference to the <see cref="T:Xceed.Grid.StyleSheet"></see> object that has been created from
            the XML file.</returns>
    </member>
    <member name="M:Xceed.Grid.StyleSheet.Load(System.IO.Stream)">
      <summary>Loads a stream to create a <see cref="T:Xceed.Grid.StyleSheet"></see> object.</summary>
      <returns>A reference to the <see cref="T:Xceed.Grid.StyleSheet"></see> object that has been created from
            the stream.</returns>
    </member>
    <member name="M:Xceed.Grid.StyleSheet.Save(System.String,System.Boolean)">
      <summary>Saves the stylesheet as a XML file specifying if an existing XML file should be replaced.</summary>
    </member>
    <member name="M:Xceed.Grid.StyleSheet.Save(System.IO.Stream)">
      <summary>Saves the stylesheet as a stream.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.Army">
      <summary>Gets a reference to the Army stylesheet.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.Classic">
      <summary>Gets a reference to the Classic stylesheet.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.ColumnManagerRow">
      <summary>Gets or sets the style applied to each <see cref="P:Xceed.Grid.StyleSheet.ColumnManagerRow"></see>
            found in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.DataRows">
      <summary>Gets a list of the styles applied to each data row in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.Default">
      <summary>Gets a reference to the default stylesheet.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.Document">
      <summary>Gets a reference to the Document stylesheet.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.FixedFooter">
      <summary>Gets or sets the style applied to the rows located in the grid's fixed
            footer section.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.FixedHeader">
      <summary>Gets or sets the style applied to the rows located in the grid's fixed
            header section.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.Gradient">
      <summary>Gets a reference to the Gradient stylesheet.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.Grid">
      <summary>Gets or sets the style applied to the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.GridFooter">
      <summary>Gets or sets the style applied to the rows located in the grid's footer section.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.GridHeader">
      <summary>Gets or sets the style applied to the rows located in the grid's header section.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.Group">
      <summary>Gets or sets the style applied to each <see cref="P:Xceed.Grid.StyleSheet.Group"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.GroupByRow">
      <summary>Gets or sets the style applied to all <see cref="P:Xceed.Grid.StyleSheet.GroupByRow"></see> objects currently
            in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.GroupFooter">
      <summary>Gets or sets the style applied to the rows located in each group's footer section.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.GroupHeader">
      <summary>Gets or sets the style applied to the rows located in each group's header section.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.GroupManagerRow">
      <summary>Gets or sets the style applied to each <see cref="P:Xceed.Grid.StyleSheet.GroupManagerRow"></see>
            found in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.GroupMargin">
      <summary>Gets or set the style applied to the group margins.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.InsertionRow">
      <summary>Gets or sets the style applied to all <see cref="P:Xceed.Grid.StyleSheet.InsertionRow"></see> objects currently
            in the grid.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.InverseGreen">
      <summary>Gets a reference to the InverseGreen stylesheet.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.Office2007Blue">
      <summary>Gets a reference to the Office2007Blue stylesheet.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.Office2007Gray">
      <summary>Gets a reference to the Office2007Gray stylesheet.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.RowSelectorPane">
      <summary>Gets or sets the style of the <see cref="P:Xceed.Grid.StyleSheet.RowSelectorPane"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.Sunshine">
      <summary>Gets a reference to the Sunshine stylesheet.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.Tan">
      <summary>Gets a reference to the Tan stylesheet.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.Terminal">
      <summary>Gets a reference to the Terminal stylesheet.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.TheBlues">
      <summary>Gets a reference to the TheBlues stylesheet.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.TheLargeBlues">
      <summary>Gets a reference to the TheLargeBlues stylesheet.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.WinForm">
      <summary>Gets a reference to the WinForm stylesheet.</summary>
    </member>
    <member name="P:Xceed.Grid.StyleSheet.Xceed">
      <summary>Gets a reference to the Xceed stylesheet.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.#ctor">
      <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.#ctor(System.String)">
      <summary>Initializes a new instance of the SummaryCell class specifying its field name.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.#ctor(Xceed.Grid.SummaryCell)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.SummaryCell"></see> class specifying
            the template that will be used to create other SummaryCells.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.#ctor(Xceed.Grid.Column)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.SummaryCell"></see> class specifying its parent
            column.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.CreateInstance">
      <summary>Creates a new <see cref="T:Xceed.Grid.SummaryCell"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to the newly create <see cref="T:Xceed.Grid.Cell"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.GetValue">
      <summary>Retrieves the value assigned to the cell.</summary>
      <returns>The value assigned to the cell.</returns>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.GetVariableText(System.String)">
      <summary>Retrieves the string equivalent of <EM>variableName</EM> used when dynamically resolving the variables specified in the <A href="Xceed.Grid~Xceed.Grid.SummaryCell~TitleFormat.html">TitleFormat</A> property.</summary>
      <returns>The string equivalent of <EM>variableName</EM>.</returns>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.Initialize">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.OnResultDataTypeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.SummaryCell.ResultDataTypeChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.OnRunningStatGroupLevelChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.SummaryCell.RunningStatGroupLevelChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.OnStatFieldNameChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.SummaryCell.StatFieldNameChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.OnStatFunctionChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.SummaryCell.StatFunctionChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.OnTitleFormatChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.SummaryCell.TitleFormatChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.OnTitlePositionChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.SummaryCell.TitlePositionChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.ResetResultDataType">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.SummaryCell.ResultDataType"></see> property to its default value, <see cref="P:Xceed.Grid.SummaryCell.DefaultResultDataType"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.ResetRunningStatGroupLevel">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.SummaryCell.RunningStatGroupLevel"></see> property to its default value, <see cref="P:Xceed.Grid.SummaryCell.DefaultRunningStatGroupLevel"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.ResetStatFieldName">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.SummaryCell.StatFieldName"></see> property to its default value, <see cref="P:Xceed.Grid.SummaryCell.DefaultStatFieldName"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.ResetStatFunction">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.SummaryCell.StatFunction"></see> property to its default value, <see cref="P:Xceed.Grid.SummaryCell.DefaultStatFunction"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.ResetTitleFormat">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.SummaryCell.TitleFormat"></see> property to its default value, <see cref="P:Xceed.Grid.SummaryCell.DefaultTitleFormat"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryCell.ResetTitlePosition">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.SummaryCell.TitlePosition"></see> property to its default value, <see cref="P:Xceed.Grid.SummaryCell.DefaultTitlePosition"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.AmbientResultDataType">
      <summary>Gets the ambient value of the cell's <see cref="P:Xceed.Grid.SummaryCell.ResultDataType"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.AmbientRunningStatGroupLevel">
      <summary>Gets the ambient value of the cell's <see cref="P:Xceed.Grid.SummaryCell.RunningStatGroupLevel"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.Borders">
      <summary>Gets the borders of the cell.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.DefaultCanBeCurrent">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Cell.CanBeCurrent"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.DefaultReadOnly">
      <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.DefaultResultDataType">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.SummaryCell.ResultDataType"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.DefaultRunningStatGroupLevel">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.SummaryCell.RunningStatGroupLevel"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.DefaultStatFieldName">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.SummaryCell.StatFieldName"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.DefaultStatFunction">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.SummaryCell.StatFunction"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.DefaultTitleFormat">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.SummaryCell.TitleFormat"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.DefaultTitlePosition">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.SummaryCell.TitlePosition"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.DefaultVisible">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.GridElement.Visible"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.IsCellViewerManagerAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Cell.CellViewerManager"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.IsReadOnlyAmbient">
      <summary>Gets a boolean value indicating if the <see cref="Xceed.Grid~Xceed.Grid.SummaryCell~ReadOnly.html"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.IsResultDataTypeAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.SummaryCell.ResultDataType"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.IsRunningStatGroupLevelAmbient">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.SummaryCell.RunningStatGroupLevel"></see> property gets its value from its parent.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.ResultDataType">
      <summary>Gets or sets the datatype of the statistical function result.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.RunningStatGroupLevel">
      <summary>Gets or sets a value indicating for what group <see cref="P:Xceed.Grid.GroupBase.Level"></see> the running statistical 
            function will be calculated.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.StatFieldName">
      <summary>Gets or sets the fieldname of the column whose values are to be used to calculate the <see cref="P:Xceed.Grid.SummaryCell.StatFunction"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.StatFunction">
      <summary>Gets or sets the statistical function used by the SummaryCell to calculate its value.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.Title">
      <summary>Gets the title displayed by the SummaryCell.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.TitleFormat">
      <summary>Gets or sets a string used to dynamically create the SummaryCell's <see cref="P:Xceed.Grid.SummaryCell.Title"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryCell.TitlePosition">
      <summary>Gets or sets the position of the SummaryCell's <see cref="P:Xceed.Grid.SummaryCell.Title"></see>.</summary>
    </member>
    <member name="E:Xceed.Grid.SummaryCell.ResultDataTypeChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.SummaryCell.ResultDataType"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.SummaryCell.RunningStatGroupLevelChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.SummaryCell.RunningStatGroupLevel"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.SummaryCell.StatFieldNameChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.SummaryCell.StatFieldName"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.SummaryCell.StatFunctionChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.SummaryCell.StatFunction"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.SummaryCell.TitleFormatChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.SummaryCell.TitleFormat"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.SummaryCell.TitlePositionChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.SummaryCell.TitlePosition"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryRow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.SummaryRow"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryRow.#ctor(Xceed.Grid.SummaryRow)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.SummaryRow"></see> class specifying
            the template that will be used to create other rows.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryRow.#ctor(Xceed.Grid.RowSelector)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.SummaryRow"></see> class specifying its <see cref="T:Xceed.Grid.RowSelector"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryRow.CreateCell(Xceed.Grid.Column)">
      <summary>Creates a new <see cref="T:Xceed.Grid.Cell"></see> object in the <see cref="T:Xceed.Grid.SummaryRow"></see>
            for the specified column.</summary>
      <returns>A reference to the newly created <see cref="T:Xceed.Grid.Cell"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.SummaryRow.CreateInstance">
      <summary>Creates a new <see cref="T:Xceed.Grid.SummaryRow"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to newly create <see cref="T:Xceed.Grid.Row"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.SummaryRow.GetFittedDisplayHeight(Xceed.Grid.AutoHeightMode,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves the fitted height of the row in pixels.</summary>
      <returns>The fitted height of the row in pixels.</returns>
    </member>
    <member name="M:Xceed.Grid.SummaryRow.GetVariableText(System.String)">
      <summary>Retrieves the string equivalent of <EM>variableName</EM> used when dynamically resolving the variables specified in the <see cref="P:Xceed.Grid.SummaryRow.TextFormat"></see> property.</summary>
      <returns>The string equivalent of <EM>variableName.</EM></returns>
    </member>
    <member name="M:Xceed.Grid.SummaryRow.OnFormatProviderChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.SummaryRow.FormatProviderChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryRow.OnRunningStatGroupLevelChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.SummaryRow.RunningStatGroupLevelChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryRow.OnSiblingDataRowsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Row.SiblingDataRowsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryRow.OnTextFormatChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.SummaryRow.TextFormatChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryRow.PaintForeground(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the foreground of the SummaryRow.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryRow.ResetFormatProvider">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.SummaryRow.FormatProvider"></see> property to its default value,
            <see cref="P:Xceed.Grid.SummaryRow.DefaultFormatProvider"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryRow.ResetRunningStatGroupLevel">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.SummaryRow.RunningStatGroupLevel"></see> property to its default value, <see cref="P:Xceed.Grid.SummaryRow.DefaultRunningStatGroupLevel"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.SummaryRow.ResetTextFormat">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.SummaryRow.TextFormat"></see> property to its default value, <see cref="P:Xceed.Grid.SummaryRow.DefaultTextFormat"></see> .</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryRow.CellType">
      <summary>Gets the <see cref="T:System.Type"></see> of the cells contained in the row.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryRow.DefaultFormatProvider">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.SummaryRow.FormatProvider"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryRow.DefaultRunningStatGroupLevel">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.SummaryRow.RunningStatGroupLevel"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryRow.DefaultTextFormat">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.SummaryRow.TextFormat"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryRow.FormatProvider">
      <summary>Gets or sets the custom Format Provider that will be used to format the variables contained
            in the <see cref="P:Xceed.Grid.SummaryRow.TextFormat"></see> and <see cref="P:Xceed.Grid.SummaryCell.TitleFormat"></see> properties.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryRow.RunningStatGroupLevel">
      <summary>Gets or sets a value indicating for what group <see cref="P:Xceed.Grid.GroupBase.Level"></see> the running statistical 
            function will be calculated.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryRow.Text">
      <summary>Gets the text displayed by the SummaryRow.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryRow.TextFormat">
      <summary>Gets or sets a string used to dynamically create the SummaryRow's <see cref="P:Xceed.Grid.SummaryRow.Text"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.SummaryRow.ReportStyle">
      <summary>Gets the report style of the summary row.</summary>
    </member>
    <member name="E:Xceed.Grid.SummaryRow.FormatProviderChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.SummaryRow.FormatProvider"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.SummaryRow.RunningStatGroupLevelChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.SummaryRow.RunningStatGroupLevel"></see> property is changed</summary>
    </member>
    <member name="E:Xceed.Grid.SummaryRow.TextFormatChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.SummaryRow.TextFormat"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.TextRow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.TextRow"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.TextRow.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.TextRow"></see> class using the specified string as its text.</summary>
    </member>
    <member name="M:Xceed.Grid.TextRow.#ctor(Xceed.Grid.RowSelector)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.TextRow"></see> class specifying its <see cref="T:Xceed.Grid.RowSelector"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.TextRow.#ctor(Xceed.Grid.TextRow)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.TextRow"></see> class
            specifying the template that will be used to create other text rows.</summary>
    </member>
    <member name="M:Xceed.Grid.TextRow.CreateInstance">
      <summary>Creates a new <see cref="T:Xceed.Grid.TextRow"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to newly create <see cref="T:Xceed.Grid.Row"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.TextRow.GetFittedDisplayHeight(Xceed.Grid.AutoHeightMode,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves the fitted height of the row in pixels.</summary>
      <returns>The fitted height of the row in pixels.</returns>
    </member>
    <member name="M:Xceed.Grid.TextRow.OnTextChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.TextRow.TextChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.TextRow.PaintForeground(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the foreground of the <see cref="T:Xceed.Grid.TextRow"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.TextRow.ResetText">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.TextRow.Text"></see> property
            to its default value, <see cref="P:Xceed.Grid.TextRow.DefaultText"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.TextRow.DefaultText">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.TextRow.Text"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.TextRow.Text">
      <summary>Gets or sets the text of the <see cref="T:Xceed.Grid.TextRow"></see>.</summary>
    </member>
    <member name="E:Xceed.Grid.TextRow.TextChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.TextRow.Text"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.ValueCell.#ctor">
      <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.ValueCell.#ctor(System.String)">
      <summary>Initializes a new instance of the ValueCell class specifying its field name.</summary>
    </member>
    <member name="M:Xceed.Grid.ValueCell.#ctor(Xceed.Grid.ValueCell)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.ValueCell"></see> class specifying
            the template that will be used to create other ValueCells.</summary>
    </member>
    <member name="M:Xceed.Grid.ValueCell.#ctor(Xceed.Grid.Column)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.ValueCell"></see> class specifying its parent
            column.</summary>
    </member>
    <member name="M:Xceed.Grid.ValueCell.CreateInstance">
      <summary>Creates a new <see cref="T:Xceed.Grid.ValueCell"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to the newly create <see cref="T:Xceed.Grid.Cell"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.ValueCell.GetValue">
      <summary>Retrieves the value assigned to the ValueCell.</summary>
      <returns>The value assigned to the ValueCell.</returns>
    </member>
    <member name="M:Xceed.Grid.ValueCell.Initialize">
      <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Xceed.Grid.ValueCell.SetValue(System.Object)">
      <summary>Assigns the value to the ValueCell.</summary>
    </member>
    <member name="M:Xceed.Grid.ValueChangingEventArgs.#ctor(System.Object)">
      <summary>Provides information in the cell whose value is being changed.</summary>
    </member>
    <member name="P:Xceed.Grid.ValueChangingEventArgs.NewValue">
      <summary>Gets or sets the new value that is to be assigned to the cell.</summary>
    </member>
    <member name="M:Xceed.Grid.ValueRow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.ValueRow"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.ValueRow.#ctor(Xceed.Grid.ValueRow)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.ValueRow"></see> class specifying
            the template that will be used to create other rows.</summary>
    </member>
    <member name="M:Xceed.Grid.ValueRow.#ctor(Xceed.Grid.RowSelector)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.ValueRow"></see> class specifying its <see cref="T:Xceed.Grid.RowSelector"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.ValueRow.CreateCell(Xceed.Grid.Column)">
      <summary>Creates a new <see cref="T:Xceed.Grid.Cell"></see> object in the <see cref="T:Xceed.Grid.ValueRow"></see>
            for the specified column.</summary>
      <returns>A reference to the newly created <see cref="T:Xceed.Grid.Cell"></see> object.</returns>
    </member>
    <member name="M:Xceed.Grid.ValueRow.CreateInstance">
      <summary>Creates a new <see cref="T:Xceed.Grid.ValueRow"></see> object that is a copy of the current instance.</summary>
      <returns>A reference to newly create <see cref="T:Xceed.Grid.Row"></see> object.</returns>
    </member>
    <member name="P:Xceed.Grid.ValueRow.CellType">
      <summary>Gets the <see cref="T:System.Type"></see> of the cells contained in the row.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.CalculateStringFormat(System.Drawing.StringFormat)">
      <summary>Calculates the string format to apply to visual grid element.</summary>
      <returns>The calculated string format.</returns>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.ClientPointToGrid(System.Drawing.Point)">
      <summary>Computes the location of the specified client point into grid coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.Point"></see> that represents the converted <see cref="point"></see> in grid 
            coordinates.</returns>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.ClientRectangleToGrid(System.Drawing.Rectangle)">
      <summary>Computes the size and location of the specified client rectangle in grid coordinates</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle"></see> that represents the converted <see cref="rectangle"></see> 
            in grid coordinates.</returns>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
      <summary>Begins a drag-and-drop operation.</summary>
      <returns>A value from the <see cref="T:System.Windows.Forms.DragDropEffects"></see> enumeration that represents 
            the final effect that was performed during the drag-and-drop operation.</returns>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.GetDisplayVisualStyle(Xceed.Grid.VisualGridElementState)">
      <summary>Retrieves the grid element's visual style used to paint itself.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.GridPointToClient(System.Drawing.Point)">
      <summary>Computes the location of the specified grid point into client coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.Point"></see> that represents the converted <see cref="point"></see> in client 
            coordinates.</returns>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.GridRectangleToClient(System.Drawing.Rectangle)">
      <summary>Computes the size and location of the specified grid rectangle in client coordinates</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle"></see> that represents the converted <see cref="rectangle"></see> 
            in client coordinates.</returns>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.Invalidate">
      <summary>Invalidates the rectangle of the grid element and causes a paint message 
            to be sent to the grid control.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.IsInputChar(System.Char)">
      <summary>Determines if a character is an input character that the grid element recognizes.</summary>
      <returns>true if the character should be sent directly to the grid and not preprocessed; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.IsInputKey(System.Windows.Forms.Keys)">
      <summary>Returns a boolean value indicating if the key(s) pressed is an input key for the grid element.</summary>
      <returns>true if the key(s) pressed in an input key; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnAllowDropChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.AllowDropChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnBackgroundImageAlignmentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.BackgroundImageAlignmentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnBackgroundImageChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.BackgroundImageChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnBackgroundImageStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.BackgroundImageStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnClick(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.Click"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnDoubleClick(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.DoubleClick"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DragDrop"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DragEnter"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnDragLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DragLeave"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DragOver"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.GiveFeedback"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnGradientMapChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.GradientMapChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnHotVisualStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.HotVisualStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.KeyDown"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.KeyPress"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.KeyUp"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnMouseEnter(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.MouseEnter"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnMouseLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.MouseLeave"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.MouseUp"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnPaint(Xceed.Grid.GridPaintEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElement.Paint"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.QueryContinueDrag"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.PaintBackground(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the background of the grid element.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.PaintBorders(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the borders of the grid element.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.PaintForeground(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the foreground of the grid element.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.PaintHotState(Xceed.Grid.GridPaintEventArgs)">
      <summary>Paints the <see cref="T:Xceed.Grid.VisualGridElement"></see> in a hot state.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.PointToClient(System.Drawing.Point)">
      <summary>Determines the location of the specified screen point into client coordinates.
            Should not be used when doing painting destined for printing.</summary>
      <returns>A <see cref="T:System.Drawing.Point"></see> that represents the converted Point 
            in client coordinates.</returns>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.PointToScreen(System.Drawing.Point)">
      <summary>Determines  the location of the specified client point into screen coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.Point"></see> that represents the converted Point 
            in screen coordinates.</returns>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.RectangleToClient(System.Drawing.Rectangle)">
      <summary>Determine the size and location of the specified screen rectangle in client coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle"></see> that represents the converted Rectangle in
            client coordinates.</returns>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.RectangleToScreen(System.Drawing.Rectangle)">
      <summary>Determines the size and location of the specified client rectangle in screen coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle"></see> that represents the converted Rectangle in
            screen coordinates.</returns>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.ResetAllowDrop">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.VisualGridElement.AllowDrop"></see> property to its 
            default value, <see cref="P:Xceed.Grid.VisualGridElement.DefaultAllowDrop"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.ResetBackgroundImage">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.VisualGridElement.BackgroundImage"></see> property 
            to its default value, <see cref="P:Xceed.Grid.VisualGridElement.DefaultBackgroundImage"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.ResetBackgroundImageAlignment">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.VisualGridElement.BackgroundImageAlignment"></see> property
            to its default value, <see cref="P:Xceed.Grid.VisualGridElement.DefaultBackgroundImageAlignment"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.ResetBackgroundImageStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.VisualGridElement.BackgroundImageStyle"></see> property
            to its default value, <see cref="P:Xceed.Grid.VisualGridElement.DefaultBackgroundImageStyle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.ResetGradientMap">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.VisualGridElement.GradientMap"></see> property 
            to its default value, <see cref="P:Xceed.Grid.VisualGridElement.DefaultGradientMap"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.ResetHotVisualStyle">
      <summary>Resets the hot visual style of a <see cref="T:Xceed.Grid.VisualGridElement"></see>
                that is in a hot state.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElement.ResetStyle">
      <summary>Resets the values of the properties affected by a
            <see cref="T:Xceed.Grid.GridElementStyle"></see> to their default values.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.AllowDrop">
      <summary>Gets or sets a boolean value indicating whether the grid element can accept data that the user drags onto it.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.AmbientBackColor">
      <summary>Gets the ambient value of the visual grid element's <see cref="P:Xceed.Grid.GridElement.BackColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.BackgroundImage">
      <summary>Gets or sets the background image of the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.BackgroundImageAlignment">
      <summary>Gets or sets the alignment of the grid element's background image.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.BackgroundImageStyle">
      <summary>Gets or sets the style of the grid element's background image.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.Borders">
      <summary>Gets the borders of the grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.Bounds">
      <summary>Gets a <see cref="T:System.Drawing.Rectangle"></see> structure that represents the grid element's bounds.
            The X and Y coordinates are relative to the grid's client rectangle 
            and can be negative if the grid is scrolled.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.Capture">
      <summary>Gets or sets a boolean value indicating if the grid element will receive all mouse events.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.ClientRectangle">
      <summary>Gets the client rectangle of the grid element. The rectangle represents the
            visible portion of the grid element and is in client coordinates. The X and Y 
            coordinates are always 0,0.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.DefaultAllowDrop">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.VisualGridElement.AllowDrop"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.DefaultBackgroundImage">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.VisualGridElement.BackgroundImage"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.DefaultBackgroundImageAlignment">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.VisualGridElement.BackgroundImageAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.DefaultBackgroundImageStyle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.VisualGridElement.BackgroundImageStyle"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.DefaultGradientMap">
      <summary>Gets the default <see cref="P:Xceed.Grid.VisualGridElement.GradientMap"></see> of the
                <see cref="T:Xceed.Grid.VisualGridElement"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.DefaultHotVisualStyle">
      <summary>Gets the default visual style of a
                <see cref="T:Xceed.Grid.VisualGridElement"></see> that is in a hot state.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.DisplayRectangle">
      <summary>Gets the display rectangle of the grid element. The rectangle is in 
            client coordinates and the X and Y coordinates can be negative 
            if the grid is scrolled.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.GradientMap">
      <summary>Gets or sets the GradientMap of the visual grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.HotVisualStyle">
      <summary>Gets or sets the style of a <see cref="T:Xceed.Grid.VisualGridElement"></see> that
                is in a hot state.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.IsMouseOver">
      <summary>Gets a boolean value indicating whether the mouse is over the current <see cref="T:Xceed.Grid.VisualGridElement"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElement.ReportStyle">
      <summary>Gets the report style of the grid element.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.AllowDropChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.VisualGridElement.AllowDrop"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.BackgroundImageAlignmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.VisualGridElement.BackgroundImageAlignment"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.BackgroundImageChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.VisualGridElement.BackgroundImage"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.BackgroundImageStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.VisualGridElement.BackgroundImageStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.Click">
      <summary>Raised when the grid element is clicked.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.DoubleClick">
      <summary>Raised when the grid element is double clicked.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.DragDrop">
      <summary>Raised when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.DragEnter">
      <summary>Raised when an object is dragged into the grid element's bounds.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.DragLeave">
      <summary>Raised when an object is dragged out of the grid element's bounds.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.DragOver">
      <summary>Raised when an object is dragged over the grid element's bounds.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.GiveFeedback">
      <summary>Raised during a drag operation.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.GradientMapChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.VisualGridElement.GradientMap"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.HotVisualStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.VisualGridElement.HotVisualStyle"></see>
                property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.KeyDown">
      <summary>Raised when a key is pressed while the grid element has focus.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.KeyPress">
      <summary>Raised when a key is pressed while the grid element has focus.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.KeyUp">
      <summary>Raised when a key is released while the grid element has focus.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.MouseDown">
      <summary>Raised when the mouse pointer is over the grid element and a 
            mouse button is pressed.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.MouseEnter">
      <summary>Raised when the mouse pointer enters the grid element.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.MouseLeave">
      <summary>Raised when the mouse pointer leaves the grid element.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.MouseMove">
      <summary>Raised when the mouse pointer is moved over the grid element.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.MouseUp">
      <summary>Raised when the mouse pointer is over the grid element and a mouse 
            button is released.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.Paint">
      <summary>Raised after the grid element's background and foreground have been painted.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElement.QueryContinueDrag">
      <summary>Raised during a drag-and-drop operation and allows the drag source to determine
            whether the drag-and-drop operation should be cancelled.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElementStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.VisualGridElementStyle"></see> class.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElementStyle.#ctor(Xceed.Grid.VisualGridElementStyle)">
      <summary>Initializes a new instance of the VisualGridElementStyle class specifying a
            VisualGridElementStyle from which to copy property values.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElementStyle.Clone">
      <summary>Creates an exact copy of the style.</summary>
      <returns>A reference to the newly created <see cref="T:Xceed.Grid.GridElementStyle"></see>.</returns>
    </member>
    <member name="M:Xceed.Grid.VisualGridElementStyle.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current
                <see cref="T:Xceed.Grid.VisualGridElementStyle"></see>.</summary>
      <returns>
        <strong>true</strong> if the specified object is equal to the current
                <see cref="T:Xceed.Grid.VisualGridElementStyle"></see>; otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Xceed.Grid.VisualGridElementStyle.GetHashCode">
      <summary>Serves as a hash function for the <see cref="T:Xceed.Grid.VisualGridElementStyle"></see> object, suitable for 
            use in hashing algorithms and data structures such as a hash table.</summary>
      <returns>An integer value representing a hash code for the current <see cref="T:Xceed.Grid.VisualGridElementStyle"></see>.</returns>
    </member>
    <member name="M:Xceed.Grid.VisualGridElementStyle.OnHotVisualStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.VisualGridElementStyle.HotVisualStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElementStyle.ResetHotVisualStyle">
      <summary>Resets the hot visual style of a <see cref="T:Xceed.Grid.VisualGridElement"></see>
                that is in a hot state.</summary>
    </member>
    <member name="M:Xceed.Grid.VisualGridElementStyle.Apply(Xceed.Grid.GridElement)">
      <summary>Applies the style to the specified grid element.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElementStyle.DefaultHotVisualStyle">
      <summary>Gets the default visual style of a
                <see cref="T:Xceed.Grid.VisualGridElement"></see> that is in a hot state.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElementStyle.HotVisualStyle">
      <summary>Gets or sets the style of a <see cref="T:Xceed.Grid.VisualGridElement"></see> that
                is in a hot state.</summary>
    </member>
    <member name="P:Xceed.Grid.VisualGridElementStyle.IsHotVisualStyleDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.VisualGridElementStyle.HotVisualStyle"></see> property has been explicitly set.</summary>
    </member>
    <member name="E:Xceed.Grid.VisualGridElementStyle.HotVisualStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.VisualGridElementStyle.HotVisualStyle"></see>
                property is changed.</summary>
    </member>
    <member name="T:Xceed.Grid.AddingDataRowEventHandler">
      <summary>Represents the method that will handle the DetailGrid's <see cref="E:Xceed.Grid.DetailGrid.AddingDataRow"></see> event and the grid's <see cref="E:Xceed.Grid.GridControl.AddingDataRow"></see> events.</summary>
    </member>
    <member name="T:Xceed.Grid.CellValidationErrorEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Cell.ValidationError"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.ColumnAddedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.GridControl.ColumnAdded"></see> and <see cref="E:Xceed.Grid.DetailGrid.ColumnAdded"></see> events.</summary>
    </member>
    <member name="T:Xceed.Grid.ColumnRemovedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.GridControl.ColumnRemoved"></see> and <see cref="E:Xceed.Grid.DetailGrid.ColumnRemoved"></see> events.</summary>
    </member>
    <member name="T:Xceed.Grid.EditLeftEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Cell.EditLeft"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.EnteringEditEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Cell.EnteringEdit"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.GridPaintEventHandler">
      <summary>Represents the method that will handle the paint events.</summary>
    </member>
    <member name="T:Xceed.Grid.GroupAddedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.GridControl.GroupAdded"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.InitializingDetailGridEventHandler">
      <summary>Represents the method that will handle the <see cref="T:Xceed.Grid.InitializingDetailGridEventArgs"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.InitializingNewDataRowEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.GridControl.InitializingNewDataRow"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.LeavingEditEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Cell.LeavingEdit"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.QueryGroupKeysEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.GridControl.QueryGroupKeys"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.QueryPrintPageEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.GridPrintDocument.QueryPrintPage"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.RowInsertedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.InsertionRow.RowInserted"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.RowValidationErrorEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.CellRow.ValidationError"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.ValueChangingEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Cell.ValueChanging"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Collections.CellEditorManagerDictionary">
      <summary>Contains a list of <see cref="T:Xceed.Grid.Editors.CellEditorManager"></see>s and their associated datatypes.</summary>
    </member>
    <member name="T:Xceed.Grid.Collections.CellList">
      <summary>Contains a readonly list of cells.</summary>
    </member>
    <member name="T:Xceed.Grid.Collections.CellViewerManagerDictionary">
      <summary>Contains a list of <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>s and their associated datatypes.</summary>
    </member>
    <member name="T:Xceed.Grid.Collections.ColumnList">
      <summary>Contains a list of columns.</summary>
    </member>
    <member name="T:Xceed.Grid.Collections.DataRowList">
      <summary>Contains an editable list of <see cref="T:Xceed.Grid.DataRow"></see> objects used by the <see cref="M:Xceed.Grid.GroupBase.GetSortedDataRows(System.Boolean)"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.Collections.DetailGridList">
      <summary>Contains a list of detail grids.</summary>
    </member>
    <member name="T:Xceed.Grid.Collections.EventHandlerTable">
      <summary>Provides a list of delegates.</summary>
    </member>
    <member name="T:Xceed.Grid.Collections.GroupKeyList">
      <summary>Contains a list of objects.</summary>
    </member>
    <member name="T:Xceed.Grid.Collections.GroupList">
      <summary>Contains a list of groups.</summary>
    </member>
    <member name="T:Xceed.Grid.Collections.ReadOnlyDataRowList">
      <summary>Contains a readonly list of <see cref="T:Xceed.Grid.DataRow"></see> objects used by the <see cref="M:Xceed.Grid.GroupBase.GetSortedDataRows(System.Boolean)"></see> method.</summary>
    </member>
    <member name="T:Xceed.Grid.Collections.ReadOnlyDetailGridList">
      <summary>Contains a readonly list of <see cref="T:Xceed.Grid.DetailGrid"></see> objects.</summary>
    </member>
    <member name="T:Xceed.Grid.Collections.ReadOnlyGroupList">
      <summary>Contains a readonly list of <see cref="T:Xceed.Grid.Group"></see> objects used by the <see cref="P:Xceed.Grid.GroupBase.Groups"></see> property.</summary>
    </member>
    <member name="T:Xceed.Grid.Collections.RowList">
      <summary>Contains a list of rows.</summary>
    </member>
    <member name="T:Xceed.Grid.Collections.SelectedRowList">
      <summary>Contains a list of selected rows.</summary>
    </member>
    <member name="T:Xceed.Grid.Collections.SortedColumnList">
      <summary>Represents the list of columns by which the data rows in the grid are sorted.</summary>
    </member>
    <member name="T:Xceed.Grid.Collections.VirtualListBase">
      <summary>Represents a list of virtualized grid elements.</summary>
    </member>
    <member name="T:Xceed.Grid.Collections.VisualGridElementStyleList">
      <summary>Contains a list of <see cref="T:Xceed.Grid.VisualGridElementStyle"></see> objects.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellEditorManagerDictionary.Clear">
      <summary>Clears all entries from the hashtable.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellEditorManagerDictionary.Clone">
      <summary>Creates a shallow copy of the hashtable.</summary>
      <returns>An <see cref="T:System.Object"></see> representing the shallow copy of the hashtable.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.CellEditorManagerDictionary.Add(System.Object,System.Object)">
      <summary>Adds an entry to the hashtable specifying the type (<see cref="key"></see>) and <see cref="T:Xceed.Grid.Editors.CellEditorManager"></see> (<see cref="value"></see>) that will be used to edit cells of the specified datatype.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellEditorManagerDictionary.Add(System.Type,Xceed.Grid.Editors.CellEditorManager)">
      <summary>Adds an entry to the hashtable specifying the type and <see cref="T:Xceed.Grid.Editors.CellEditorManager"></see> that will be used to edit cells of the specified datatype.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellEditorManagerDictionary.Contains(System.Type)">
      <summary>Determines if the hashtable contains an entry of the specified type.</summary>
      <returns>true if the hashtable contains an entry for the specified type; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.CellEditorManagerDictionary.Contains(System.Object)">
      <summary>Determines if the hashtable contains an entry of the specified type.</summary>
      <returns>true if the hashtable contains an entry for the specified type; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.CellEditorManagerDictionary.ContainsKey(System.Type)">
      <summary>Determines if the hashtable contains an entry of the specified type.</summary>
      <returns>true if the hashtable contains an entry for the specified type; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.CellEditorManagerDictionary.ContainsValue(Xceed.Grid.Editors.CellEditorManager)">
      <summary>Determines if the hashtable contains an entry for the specified <see cref="T:Xceed.Grid.Editors.CellEditorManager"></see>.</summary>
      <returns>true if the hashtable contains an entry for the specified <see cref="T:Xceed.Grid.Editors.CellEditorManager"></see>; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.CellEditorManagerDictionary.Remove(System.Type)">
      <summary>Removes the entry with the specified type from the hashtable.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.CellEditorManagerDictionary.Item(System.Object)">
      <summary>Gets or sets the value associated with the specified key.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.CellEditorManagerDictionary.Item(System.Type)">
      <summary>Gets or sets the <see cref="T:Xceed.Grid.Editors.CellEditorManager"></see> associated with the specified type.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellList.Add(Xceed.Grid.Cell)">
      <summary>Adds a cell to the list.</summary>
      <returns>The index at which the cell was added.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.CellList.Clear">
      <summary>Removes all cells from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellList.Contains(Xceed.Grid.Cell)">
      <summary>Retrieves a boolean value indicating if a specific cell exists in the list.</summary>
      <returns>true if the cell exists in the list; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.CellList.CreateItemFromTemplate(System.Int32)">
      <summary>Creates a cell&amp;amp;nbsp;from from a template.</summary>
      <returns>A <A href="Xceed.Grid~Xceed.Grid.Cell.html">Cell</A>, cast as an object.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.CellList.Insert(System.Int32,Xceed.Grid.Cell)">
      <summary>Inserts a cell into the list at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellList.OnClear(System.Boolean@)">
      <summary>Performs additional custom processes when clearing the contents of the
            <see cref="T:Xceed.Grid.Collections.CellList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellList.OnInsert(System.Int32@,System.Object,System.Boolean@)">
      <summary>Performs additional custom processes before inserting a new element into the <see cref="T:Xceed.Grid.Collections.CellList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellList.OnInsertComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes after inserting a new element into the 
            <see cref="T:Xceed.Grid.Collections.CellList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellList.OnPlaceHolderInserted(System.Int32)">
      <summary>Performs additional custom processes when a place holder has been inserted.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellList.OnRemove(System.Int32,System.Object,System.Boolean@)">
      <summary>Performs additional custom processes when removing an element from the <see cref="T:Xceed.Grid.Collections.CellList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellList.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes after removing an element from the 
            <see cref="T:Xceed.Grid.Collections.CellList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellList.OnSet(System.Int32,System.Object,System.Object,System.Boolean@)">
      <summary>Performs additional custom processes before setting a value in the 
            <see cref="T:Xceed.Grid.Collections.CellList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellList.OnValidate(System.Object)">
      <summary>Performs additional custom processes when validating a value.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellList.Remove(Xceed.Grid.Cell)">
      <summary>Removes the cell from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellList.RemoveAt(System.Int32)">
      <summary>Removes the cell from the list at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellList.IndexOf(Xceed.Grid.Cell)">
      <summary>Searches for the specified <see cref="T:Xceed.Grid.Cell"></see> object and returns the zero-based index of the first occurrence within the list.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="value"></see> 
            within the entire list, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.CellList.IndexOf(System.String)">
      <summary>Searches for the specified string and returns the zero-based index of the first occurrence within the list.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="name"></see> 
            within the entire list, if found; otherwise, returns -1.</returns>
    </member>
    <member name="P:Xceed.Grid.Collections.CellList.IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:Xceed.Grid.Collections.CellList"></see> has a fixed size.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.CellList.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:Xceed.Grid.Collections.CellList"></see> is readonly.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.CellList.Item(System.Int32)">
      <summary>Gets the cell at the specified index.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.CellList.Item(System.String)">
      <summary>Gets or sets the cell that corresponds to <see cref="name"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellViewerManagerDictionary.Clear">
      <summary>Clears all entries from the hashtable.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellViewerManagerDictionary.Clone">
      <summary>Creates a shallow copy of the hashtable.</summary>
      <returns>An <see cref="T:System.Object"></see> representing the shallow copy of the hashtable.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.CellViewerManagerDictionary.Add(System.Object,System.Object)">
      <summary>Adds an entry to the hashtable specifying the type (<see cref="key"></see>) and <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see> (<see cref="value"></see>) that will be used to display the content of cells of the specified datatype.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellViewerManagerDictionary.Add(System.Type,Xceed.Grid.Viewers.CellViewerManager)">
      <summary>Adds an entry to the hashtable specifying the type (<see cref="type"></see>) and <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see> (<see cref="cellViewerManager"></see>) that will be used to display the content of cells of the specified datatype.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.CellViewerManagerDictionary.Contains(System.Type)">
      <summary>Determines if the hashtable contains an entry of the specified type.</summary>
      <returns>true if the hashtable contains an entry for the specified type; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.CellViewerManagerDictionary.Contains(System.Object)">
      <summary>Determines if the hashtable contains an entry of the specified type.</summary>
      <returns>true if the hashtable contains an entry for the specified type; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.CellViewerManagerDictionary.ContainsKey(System.Type)">
      <summary>Determines if the hashtable contains an entry of the specified type.</summary>
      <returns>true if the hashtable contains an entry for the specified type; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.CellViewerManagerDictionary.ContainsValue(Xceed.Grid.Viewers.CellViewerManager)">
      <summary>Determines if the hashtable contains an entry for the specified <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>.</summary>
      <returns>true if the hashtable contains an entry for the specified <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.CellViewerManagerDictionary.Remove(System.Type)">
      <summary>Removes the entry with the specified type from the hashtable.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.CellViewerManagerDictionary.Item(System.Object)">
      <summary>Gets or sets the value associated with the specified key.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.CellViewerManagerDictionary.Item(System.Type)">
      <summary>Gets or sets the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see> associated with the specified type.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.ColumnList.Add(Xceed.Grid.Column)">
      <summary>Adds a column to the list.</summary>
      <returns>The index at which the column was added.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.ColumnList.Contains(Xceed.Grid.Column)">
      <summary>Retrieves a boolean value indicating if a specific column exists in the list.</summary>
      <returns>true if the column exists in the list; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.ColumnList.GenerateFromType(System.Type)">
      <summary>Generates a list of bound columns based on the specified type.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.ColumnList.GetColumnAtDisplayableIndex(System.Int32)">
      <summary>Retrieves a reference to the column at the specified displayable index.</summary>
      <returns>A reference to a <see cref="T:Xceed.Grid.Column"></see> object at the specified
            displayable index.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.ColumnList.GetColumnAtVisibleIndex(System.Int32)">
      <summary>Retrieves a reference to the column at the specified visible index.</summary>
      <returns>A reference to a <see cref="T:Xceed.Grid.Column"></see> object at the specified
            visible index.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.ColumnList.Insert(System.Int32,Xceed.Grid.Column)">
      <summary>Inserts a column into the list at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.ColumnList.OnClear(System.Boolean@)">
      <summary>Performs additional custom processes when clearing the contents of the
            <see cref="T:Xceed.Grid.Collections.ColumnList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.ColumnList.OnClearComplete">
      <summary>Performs additional custom processes when clearing the contents of the 
            <see cref="T:Xceed.Grid.Collections.ColumnList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.ColumnList.OnInsert(System.Int32@,System.Object,System.Boolean@)">
      <summary>Performs additional custom processes before inserting a new column 
            into the <see cref="T:Xceed.Grid.Collections.ColumnList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.ColumnList.OnInsertComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes after insertion of a new column 
            into the <see cref="T:Xceed.Grid.Collections.ColumnList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.ColumnList.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes when removing a column from the 
            the <see cref="T:Xceed.Grid.Collections.ColumnList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.ColumnList.OnSet(System.Int32,System.Object,System.Object,System.Boolean@)">
      <summary>Performs additional custom processes before setting a value in the 
            <see cref="T:Xceed.Grid.Collections.ColumnList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.ColumnList.OnValidate(System.Object)">
      <summary>Performs validation of <see cref="value"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.ColumnList.Remove(Xceed.Grid.Column)">
      <summary>Removes the column from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.ColumnList.RemoveAt(System.Int32)">
      <summary>Removes the column from the list at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.ColumnList.Clear">
      <summary>Removes all the columns from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.ColumnList.Clear(Xceed.Grid.ColumnTypes)">
      <summary>Removes the specified types of columns from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.ColumnList.IndexOf(Xceed.Grid.Column)">
      <summary>Searches for the specified <see cref="T:Xceed.Grid.Column"></see> object and returns the zero-based index of the first occurrence within the list.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="value"></see> 
            within the entire list, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.ColumnList.IndexOf(System.String)">
      <summary>Searches for the specified column name and returns the zero-based index of the first occurrence within the list.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="fieldName"></see> within the entire list, if found; otherwise, returns -1.</returns>
    </member>
    <member name="P:Xceed.Grid.Collections.ColumnList.DisplayableColumnCount">
      <summary>Gets the number of displayable columns.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.ColumnList.Item(System.Int32)">
      <summary>Gets the column at the specified index.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.ColumnList.Item(System.String)">
      <summary>Gets the column that corresponds to <see cref="name"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.DataRowList.Clear">
      <summary>Removes all rows from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.DataRowList.OnClear(System.Boolean@)">
      <summary>Performs additional custom processes when clearing the contents of the 
            <see cref="T:Xceed.Grid.Collections.DataRowList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.DataRowList.OnClearComplete">
      <summary>Performs additional custom processes when clearing the contents of the 
            <see cref="T:Xceed.Grid.Collections.DataRowList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.DataRowList.OnInsert(System.Int32@,System.Object,System.Boolean@)">
      <summary>Performs additional custom processes before inserting a new row 
            into the <see cref="T:Xceed.Grid.Collections.DataRowList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.DataRowList.OnInsertComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes after insertion of a new row 
            into the <see cref="T:Xceed.Grid.Collections.DataRowList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.DataRowList.OnRemove(System.Int32,System.Object,System.Boolean@)">
      <summary>Performs additional custom processes when removing an element from the 
            <see cref="T:Xceed.Grid.Collections.DataRowList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.DataRowList.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes when removing a row from the 
            the <see cref="T:Xceed.Grid.Collections.DataRowList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.DataRowList.OnSet(System.Int32,System.Object,System.Object,System.Boolean@)">
      <summary>Performs additional custom processes before setting a value in the 
            <see cref="T:Xceed.Grid.Collections.DataRowList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.DataRowList.Remove(Xceed.Grid.DataRow)">
      <summary>Removes the row from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.DataRowList.RemoveAt(System.Int32)">
      <summary>Removes the row from the list at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.DataRowList.AddNew">
      <summary>Adds a new row to the list with its cells initialized to their default values. <B><see cref="M:Xceed.Grid.CellRow.EndEdit"></see> must be called after AddNew in order to add the data row to the grid.</B></summary>
      <returns>A reference to the newly added <see cref="T:Xceed.Grid.DataRow"></see> object.</returns>
    </member>
    <member name="P:Xceed.Grid.Collections.DataRowList.IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:Xceed.Grid.Collections.DataRowList"></see> has a fixed size.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.DataRowList.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:Xceed.Grid.Collections.DataRowList"></see> is readonly.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.DetailGridList.Add(Xceed.Grid.DetailGrid)">
      <summary>Adds a detail grid to the list.</summary>
      <returns>The index at which the detail grid was added.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.DetailGridList.Clear">
      <summary>Removes all the detail grids from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.DetailGridList.Contains(Xceed.Grid.DetailGrid)">
      <summary>Retrieves a boolean value indicating if a specific detail grid exists in the list.</summary>
      <returns>true if the detail grid exists in the list; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.DetailGridList.IndexOf(Xceed.Grid.DetailGrid)">
      <summary>Searches for the specified <see cref="T:Xceed.Grid.DetailGrid"></see> object and returns the zero-based
            index of the first occurrence within the list.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="value"></see> 
            within the entire list, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.DetailGridList.Insert(System.Int32,Xceed.Grid.DetailGrid)">
      <summary>Inserts a detail grid into the list at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.DetailGridList.OnValidate(System.Object)">
      <summary>Performs additional custom processes when validating a value.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.DetailGridList.Remove(Xceed.Grid.DetailGrid)">
      <summary>Removes the detail grid from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.DetailGridList.RemoveAt(System.Int32)">
      <summary>Removes the detail grid from the list at the specified index.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.DetailGridList.IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:Xceed.Grid.Collections.DetailGridList"></see> has a fixed size.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.DetailGridList.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:Xceed.Grid.Collections.DetailGridList"></see> is readonly.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.DetailGridList.Item(System.Int32)">
      <summary>Gets or sets the detail grid at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.EventHandlerTable.#ctor">
      <summary>Initializes a new instance of the EventHandlerTable class.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.EventHandlerTable.#ctor(Xceed.Grid.Collections.EventHandlerTable)">
      <summary>Initializes a new instance of the EventHandlerTable class specifying the EventHandlerTable that will be used as a template.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.EventHandlerTable.AddHandler(System.Object,System.Delegate)">
      <summary>Adds a delegate to the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.EventHandlerTable.Clone">
      <summary>Creates an exact copy of the <see cref="T:Xceed.Grid.Collections.EventHandlerTable"></see>.</summary>
      <returns>An object representing the newly cloned <see cref="T:Xceed.Grid.Collections.EventHandlerTable"></see>.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.EventHandlerTable.Combine(Xceed.Grid.Collections.EventHandlerTable)">
      <summary>Adds the delegates contained in <see cref="eventHandlerTable"></see> into the current <see cref="T:Xceed.Grid.Collections.EventHandlerTable"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.EventHandlerTable.RemoveHandler(System.Object,System.Delegate)">
      <summary>Removes a delegate from the list.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.EventHandlerTable.Item(System.Object)">
      <summary>Gets or sets the <see cref="T:System.Delegate"></see> for the specified object.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.GroupKeyList.Contains(System.Object)">
      <summary>Retrieves a boolean value indicating if a specific object exists in the list.</summary>
      <returns>true if the object exists in the list; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.GroupKeyList.IndexOf(System.Object)">
      <summary>Searches for the specified object and returns the zero-based
            group level of the first occurrence within the list.</summary>
      <returns>The zero-based group level of the first occurrence of <see cref="value"></see> 
            within the entire list, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.GroupKeyList.OnValidate(System.Object)">
      <summary>Performs additional custom processes when validating a value.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.GroupKeyList.IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:Xceed.Grid.Collections.GroupKeyList"></see> has a fixed size.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.GroupKeyList.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:Xceed.Grid.Collections.GroupKeyList"></see> is readonly.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.GroupKeyList.Item(System.Int32)">
      <summary>Gets the object at the specified group level.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.GroupList.Add(Xceed.Grid.Group)">
      <summary>Adds a group to the list.</summary>
      <returns>The index at which the group was added.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.GroupList.Clear">
      <summary>Removes all groups from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.GroupList.Insert(System.Int32,Xceed.Grid.Group)">
      <summary>Inserts a group into the list at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.GroupList.Remove(Xceed.Grid.Group)">
      <summary>Removes the group from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.GroupList.RemoveAt(System.Int32)">
      <summary>Removes the group from the list at the specified index.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.GroupList.IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:Xceed.Grid.Collections.GroupList"></see> has a fixed size.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.GroupList.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:Xceed.Grid.Collections.GroupList"></see> is readonly.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.ReadOnlyDataRowList.Contains(Xceed.Grid.DataRow)">
      <summary>Retrieves a boolean value indicating if a specific data row exists in the list.</summary>
      <returns>true if the data row exists in the list; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.ReadOnlyDataRowList.IndexOf(Xceed.Grid.DataRow)">
      <summary>Searches for the specified <see cref="T:Xceed.Grid.DataRow"></see> object and returns the zero-based
            index of the first occurrence within the list.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="value"></see> 
            within the entire list, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.ReadOnlyDataRowList.OnValidate(System.Object)">
      <summary>Performs additional custom processes when validating a value.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.ReadOnlyDataRowList.IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.IList"></see> has a fixed size.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.ReadOnlyDataRowList.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.IList"></see> is read-only.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.ReadOnlyDataRowList.Item(System.Int32)">
      <summary>Gets the DataRow at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.ReadOnlyDetailGridList.Contains(Xceed.Grid.DetailGrid)">
      <summary>Retrieves a boolean value indicating if a specific detail grid exists in the list.</summary>
      <returns>true if the detail grid exists in the list; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.ReadOnlyDetailGridList.IndexOf(Xceed.Grid.DetailGrid)">
      <summary>Searches for the specified <see cref="T:Xceed.Grid.DetailGrid"></see> object and returns the zero-based
            index of the first occurrence within the list.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="value"></see> 
            within the entire list, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.ReadOnlyDetailGridList.OnValidate(System.Object)">
      <summary>Performs additional custom processes when validating a value.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.ReadOnlyDetailGridList.IsFixedSize">
      <summary>Gets a value indicating whether the list has a fixed size.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.ReadOnlyDetailGridList.IsReadOnly">
      <summary>Gets a value indicating whether the list is readonly.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.ReadOnlyDetailGridList.Item(System.Int32)">
      <summary>Gets the detail grid at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.ReadOnlyGroupList.Contains(Xceed.Grid.Group)">
      <summary>Retrieves a boolean value indicating if a specific group exists in the list.</summary>
      <returns>true if the group exists in the list; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.ReadOnlyGroupList.IndexOf(Xceed.Grid.Group)">
      <summary>Searches for the specified <see cref="T:Xceed.Grid.Group"></see> object and returns the zero-based
            index of the first occurrence within the list.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="value"></see> 
            within the entire list, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.ReadOnlyGroupList.OnValidate(System.Object)">
      <summary>Performs additional custom processes when validating a value.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.ReadOnlyGroupList.IsFixedSize">
      <summary>Gets a value indicating whether the list has a fixed size.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.ReadOnlyGroupList.IsReadOnly">
      <summary>Gets a value indicating whether the list is readonly.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.ReadOnlyGroupList.Item(System.Int32)">
      <summary>Gets the group at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.RowList.Add(Xceed.Grid.Row)">
      <summary>Adds a row to the list.</summary>
      <returns>The index at which the row was added.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.RowList.Clear">
      <summary>Removes all rows from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.RowList.Contains(Xceed.Grid.Row)">
      <summary>Retrieves a boolean value indicating if a specific row exists in the list.</summary>
      <returns>true if the row exists in the list; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.RowList.IndexOf(Xceed.Grid.Row)">
      <summary>Searches for the specified <see cref="T:Xceed.Grid.Row"></see> object and returns the zero-based
            index of the first occurrence within the list.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="value"></see> 
            within the entire list, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.RowList.Insert(System.Int32,Xceed.Grid.Row)">
      <summary>Inserts a row into the list at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.RowList.OnValidate(System.Object)">
      <summary>Performs additional custom processes when validating a value.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.RowList.Remove(Xceed.Grid.Row)">
      <summary>Removes the row from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.RowList.RemoveAt(System.Int32)">
      <summary>Removes the row from the list at the specified index.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.RowList.IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:Xceed.Grid.Collections.RowList"></see> has a fixed size.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.RowList.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:Xceed.Grid.Collections.RowList"></see> is readonly.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.RowList.Item(System.Int32)">
      <summary>Gets the row at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SelectedRowList.AddRange(Xceed.Grid.Row,Xceed.Grid.Row,System.Boolean)">
      <summary>Selects a contiguous range of rows.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SelectedRowList.OnClear(System.Boolean@)">
      <summary>Performs additional custom processes when clearing the contents of the
            <see cref="T:Xceed.Grid.Collections.SelectedRowList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SelectedRowList.OnClearComplete">
      <summary>Performs additional custom processes after clearing the contents of the SelectedRowList instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SelectedRowList.OnInsert(System.Int32@,System.Object,System.Boolean@)">
      <summary>Performs additional custom processes before inserting a new element into the SelectedRowList instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SelectedRowList.OnInsertComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes after inserting a new element into the 
            <see cref="T:Xceed.Grid.Collections.SelectedRowList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SelectedRowList.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes after removing an element from the
            <see cref="T:Xceed.Grid.Collections.SelectedRowList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SelectedRowList.OnSet(System.Int32,System.Object,System.Object,System.Boolean@)">
      <summary>Performs additional custom processes before setting a value in the 
            <see cref="T:Xceed.Grid.Collections.SelectedRowList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SelectedRowList.ResetTo(Xceed.Grid.Row)">
      <summary>Clears the current selection of row and selects the specified <see cref="T:Xceed.Grid.Row"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.AddRange(Xceed.Grid.Column[])">
      <summary>Adds the elements of a column array to the end of the SortedColumnList collection.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.Clear">
      <summary>Removes all columns from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.Contains(Xceed.Grid.Column)">
      <summary>Retrieves a boolean value indicating if a specific column exists in the list.</summary>
      <returns>true if the column exists in the list; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.IndexOf(Xceed.Grid.Column)">
      <summary>Searches for the specified&amp;amp;nbsp;&amp;lt;A href="Xceed.Grid~Xceed.Grid.Column.html"&amp;gt;Column&amp;lt;/A&amp;gt; object and returns the zero-based index of the first occurrence within the list.</summary>
      <returns>The zero-based index of the first occurrence of <EM>column </EM>within the entire list, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.OnClear(System.Boolean@)">
      <summary>Performs additional custom processes when clearing the contents of the 
            <see cref="T:Xceed.Grid.Collections.SortedColumnList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.OnClearComplete">
      <summary>Performs additional custom processes after clearing the contents of the 
            <see cref="T:Xceed.Grid.Collections.SortedColumnList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.OnInsert(System.Int32@,System.Object,System.Boolean@)">
      <summary>Performs additional custom processes before inserting a new element into the
            <see cref="T:Xceed.Grid.Collections.SortedColumnList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.OnInsertComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes after inserting a new element into the 
            <see cref="T:Xceed.Grid.Collections.SortedColumnList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes after removing an element from the 
            <see cref="T:Xceed.Grid.Collections.SortedColumnList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.OnSet(System.Int32,System.Object,System.Object,System.Boolean@)">
      <summary>Performs additional custom processes before setting a value in the 
            <see cref="T:Xceed.Grid.Collections.SortedColumnList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Performs additional custom processes after setting a value in the 
            <see cref="T:Xceed.Grid.Collections.SortedColumnList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.OnValidate(System.Object)">
      <summary>Performs additional custom processes when validating a value.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.Remove(Xceed.Grid.Column)">
      <summary>Removes the column from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.RemoveAt(System.Int32)">
      <summary>Removes the column from the list at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.ToString">
      <summary>Retrieves an SQL query-like string representing the OrderBy clause.</summary>
      <returns>An SQL query-like string representing the OrderBy clause.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.Add(Xceed.Grid.Column)">
      <summary>Adds a column to the list.</summary>
      <returns>The index at which the column was added.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.Add(Xceed.Grid.Column,System.Boolean)">
      <summary>Adds a column to the list.</summary>
      <returns>The index at which the column was added.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.Add(System.String)">
      <summary>Adds a column with the specified fieldname to the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.Add(System.String,System.Boolean)">
      <summary>Adds a column with the specified fieldname to the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.Insert(System.Int32,Xceed.Grid.Column)">
      <summary>Inserts a column into the list at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.Insert(System.Int32,Xceed.Grid.Column,System.Boolean)">
      <summary>Inserts a column into the list at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.Insert(System.Int32,System.String)">
      <summary>Inserts a column into the list at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.SortedColumnList.Insert(System.Int32,System.String,System.Boolean)">
      <summary>Inserts a the column with the specified fieldname into the list at the specified index.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.SortedColumnList.Item(System.Int32)">
      <summary>Gets the column at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.VirtualListBase.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the list to the specified array.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.VirtualListBase.Count">
      <summary>Gets the number of items contained in the list.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.VirtualListBase.IsFixedSize">
      <summary>Gets a value indicating if the list has a fixed size.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.VirtualListBase.IsReadOnly">
      <summary>Gets a value indicating if the list is read-only.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.VirtualListBase.IsSynchronized">
      <summary>Gets a boolean value indicating if access to the&amp;amp;nbsp;list is&amp;amp;nbsp;synchronized (thread-safe).</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.VirtualListBase.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.VisualGridElementStyleList.#ctor(Xceed.Grid.Collections.VisualGridElementStyleList)">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.Collections.VisualGridElementStyleList"></see> class specifying
            the VisualGridElementStyleList that will be used as a template to create the VisualGridElementStyleLists.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.VisualGridElementStyleList.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.Collections.VisualGridElementStyleList"></see> class</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.VisualGridElementStyleList.Add(Xceed.Grid.VisualGridElementStyle)">
      <summary>Adds a style to the list.</summary>
      <returns>The index at which the style was added.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.VisualGridElementStyleList.Clear">
      <summary>Removes all the styles from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.VisualGridElementStyleList.Contains(Xceed.Grid.VisualGridElementStyle)">
      <summary>Retrieves a boolean value indicating if a specific style exists in the list.</summary>
      <returns>true if the style exists in the list; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.VisualGridElementStyleList.IndexOf(Xceed.Grid.VisualGridElementStyle)">
      <summary>Searches for the specified <see cref="T:Xceed.Grid.VisualGridElementStyle"></see> object and returns the zero-based
            index of the first occurrence within the list.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="value"></see> 
            within the entire list, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Grid.Collections.VisualGridElementStyleList.Insert(System.Int32,Xceed.Grid.VisualGridElementStyle)">
      <summary>Inserts a style into the list at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.VisualGridElementStyleList.OnClear(System.Boolean@)">
      <summary>Performs additional custom processes when clearing the contents of the
            <see cref="T:Xceed.Grid.Collections.VisualGridElementStyleList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.VisualGridElementStyleList.OnClearComplete">
      <summary>Performs additional custom processes when clearing the contents of the 
            <see cref="T:Xceed.Grid.Collections.VisualGridElementStyleList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.VisualGridElementStyleList.OnInsertComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes after insertion of a new style 
            into the <see cref="T:Xceed.Grid.Collections.VisualGridElementStyleList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.VisualGridElementStyleList.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes when removing a style from the 
            the <see cref="T:Xceed.Grid.Collections.VisualGridElementStyleList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.VisualGridElementStyleList.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Performs additional custom processes after setting a value in the 
            <see cref="T:Xceed.Grid.Collections.VisualGridElementStyleList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.VisualGridElementStyleList.OnStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Collections.VisualGridElementStyleList.StyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.VisualGridElementStyleList.OnValidate(System.Object)">
      <summary>Performs validation of <see cref="value"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.VisualGridElementStyleList.Remove(Xceed.Grid.VisualGridElementStyle)">
      <summary>Removes the style from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Collections.VisualGridElementStyleList.RemoveAt(System.Int32)">
      <summary>Removes the style from the list at the specified index.</summary>
    </member>
    <member name="P:Xceed.Grid.Collections.VisualGridElementStyleList.Item(System.Int32)">
      <summary>Gets or sets the style at the specified index.</summary>
    </member>
    <member name="E:Xceed.Grid.Collections.VisualGridElementStyleList.StyleChanged">
      <summary>Raised when a property value of one of the elements in the list has been changed or when 
            a style is added or removed from the list.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.DisplayStyle">
      <summary>Value indicating how the contents of various cell editors are displayed.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.Signs">
      <summary>Value representing the accepted sign(s), negative, positive or either, of the value entered in the <see cref="T:Xceed.Grid.Editors.GridNumericTextBox"></see> editor.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.ActivatingControlEventArgs">
      <summary>Provides information regarding the cell whose content the control is about to edit.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.CellEditorEventArgs">
      <summary>Provides information on the <see cref="T:Xceed.Grid.Cell"></see> currently being edited as well as the <see cref="P:Xceed.Grid.Editors.CellEditorEventArgs.Control"></see> used to edit the cell's content.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.CellEditorManager">
      <summary>The CellEditorManager class allows for any control to be used as an editor to edit the content of a cells.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.CheckBoxEditor">
      <summary>The CheckBoxEditor class represents an editor that can be used to edit the content of cells which have a boolean datatype.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.ComboBoxEditor">
      <summary>The ComboBoxEditor class represents an editor that can be used to edit the content of cells which have an ID/Value mapping.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.ControlViewer">
      <summary>
        <B>OBSOLETE: The ControlViewer class is obsolete and has been replaced by the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see> class. </B>Allows for any control to be used as a cell viewer.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.CustomEditor">
      <summary>
        <B>OBSOLETE: The CustomEditor class is obsolete and has been replaced by the <see cref="T:Xceed.Grid.Editors.CellEditorManager"></see> class. </B>Allows for any control to be used as a cell editor.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.DateEditor">
      <summary>The DateEditor class represents an editor that can be used to edit the content of cells which have a <see cref="T:System.DateTime"></see> datatype.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.GettingControlValueEventArgs">
      <summary>Provides information regarding the value that is to be displayed by the custom editor.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.GettingEditorControlValueEventArgs">
      <summary>Provides information on the <see cref="T:Xceed.Grid.Cell"></see> currently being edited, the <see cref="T:System.Windows.Forms.Control"></see> used to edit the cell's content, as well as the cell's value and its datatype.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.GridCalculatorBox">
      <summary>
        <B>OBSOLETE: The GridCalculatorBox class is obsolete and has been replaced by the <see cref="T:Xceed.Grid.Editors.NumericEditor"></see> and <see cref="T:Xceed.Grid.Viewers.NumericViewer"></see> classes. </B>Represents a control that provides mathematical operations to change the value of a cell.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.GridCheckBox">
      <summary>
        <B>OBSOLETE: The GridCheckBox class is obsolete and has been replaced by the CheckBoxEditor and CheckBoxViewer classes. </B>Represents a checkbox that is used to view and edit the content of cells which have a boolean data type.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.GridComboBox">
      <summary>
        <B>OBSOLETE: The GridComboBox class is obsolete and has been replaced by the ComboBoxEditor and ComboBoxViewer classes. </B>Represents a combobox which is used to both view and edit the content of cells.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.GridDateTimePicker">
      <summary>
        <B>OBSOLETE: The GridDateTimePicker class is obsolete and has been replaced by the DateEditor and DateViewer classes. </B>Represents a datetime picker used to edit to content of cells which have a DateTime datatype.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.GridImageBox">
      <summary>
        <B>OBSOLETE: The GridImageBox class is obsolete and has been replaced by the ImageViewer class. </B>Represents a viewer that is used to display images in a cell.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.GridMaskedTextBox">
      <summary>
        <B>OBSOLETE: The GridMaskedTextBox class is obsolete and has been replaced by the TextEditor and TextViewer classes. </B>Represents a textbox which uses a mask to edit the content of cells.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.GridNumericTextBox">
      <summary>
        <B>OBSOLETE: The GridNumericTextBox class is obsolete and has been replaced by the NumericEditor and NumericViewer classes. </B>Represents a textbox which edits cells whose content is a numeric value.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.GridRichTextBox">
      <summary>
        <B>OBSOLETE: The GridRichTextBox is obsolete and has been replaced by the <see cref="T:Xceed.Grid.Editors.CellEditorManager"></see> class. </B>Represents a RichTextBox which is used to edit the content of cells.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.GridTextBox">
      <summary>
        <B>OBSOLETE: The GridTextBox class is obsolete and has been replaced by the TextEditor and TextViewer classes. </B>Represents a textbox which is used to edit the content of cells which have a string datatype.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.ImageMap">
      <summary>Represents a value and its corresponding image index.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.ImageMapList">
      <summary>Represents a collection of values and their corresponding image indexes.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.NumericEditor">
      <summary>The NumericEditor class represents an editor that can be used to edit the content of cells which have a numeric datatype.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.QueryEditorActivationCharEventArgs">
      <summary>Provides information on a cell and the activation character required to activate its associated editor.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.QueryEditorActivationKeyEventArgs">
      <summary>Provides information on a cell and the activation key required to activate its associated editor.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.QueryEditorBoundsEventArgs">
      <summary>Provides information on the <see cref="T:Xceed.Grid.Cell"></see> to be edited as well as the <see cref="T:System.Windows.Forms.Control"></see> used to edit the cell's content in order to calculate the editor's bounds.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.QueryEditorFittedHeightEventArgs">
      <summary>Provides information on the <see cref="T:Xceed.Grid.Cell"></see> to be edited as well as the <see cref="T:System.Windows.Forms.Control"></see> used to edit the cell's content in order to retrieve the editor's fitted height.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.QueryEditorFittedWidthEventArgs">
      <summary>Provides information on the <see cref="T:Xceed.Grid.Cell"></see> to be edited as well as the <see cref="T:System.Windows.Forms.Control"></see> used to edit the cell's content in order to retrieve the editor's fitted width.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.QueryEditorInputCharEventArgs">
      <summary>Provides information on the <see cref="T:Xceed.Grid.Cell"></see> to be edited, the <see cref="T:System.Windows.Forms.Control"></see> used to edit the cell's content, and the input character to process.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.QueryEditorInputKeyEventArgs">
      <summary>Provides information on the <see cref="T:Xceed.Grid.Cell"></see> to be edited, the <see cref="T:System.Windows.Forms.Control"></see> used to edit the cell's content, and the input key to process.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.SettingControlValueEventArgs">
      <summary>Provides information regarding the value about to be assigned to the <see cref="T:Xceed.Grid.Editors.ControlViewer"></see> or <see cref="T:Xceed.Grid.Editors.CustomEditor"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.TextEditor">
      <summary>The TextEditor class represents an editor that can be used to edit the content of cells which have a string datatype.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.ValidatingEditorEventArgs">
      <summary>Provides information when validating an editor's value.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ActivatingControlEventArgs.Cell">
      <summary>Gets a reference to the cell whose content is about to be edited.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorEventArgs.#ctor(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Initializes a new instance of the CellEditorEventArgs class specifying the <see cref="T:Xceed.Grid.Cell"></see> currently being edited as well as the <see cref="P:Xceed.Grid.Editors.CellEditorEventArgs.Control"></see> used to edit the cell's content.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.CellEditorEventArgs.Cell">
      <summary>Gets the <see cref="T:Xceed.Grid.Cell"></see> being edited.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.CellEditorEventArgs.Control">
      <summary>Gets the <see cref="P:Xceed.Grid.Editors.CellEditorEventArgs.Control"></see> used to edit the cell's content.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.#ctor(System.Windows.Forms.Control,System.String,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the CellEditorManager class specifying the control that will be used as a template to edit the content of cells, as well as other characteristics that will apply to the editor.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.#ctor(System.Windows.Forms.Control,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the CellEditorManager class specifying the control that will be used as a
            template to edit the content of cells, as well as other characteristics that will apply to the editor.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.ActivateControl(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Activates the <see cref="control"></see> that will be used to edit the content of the 
            <see cref="cell"></see> and raises the <see cref="E:Xceed.Grid.Editors.CellEditorManager.ActivatingControl"></see> event.</summary>
      <summary>Activates the control that will be used to edit the content of a cell.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.ActivateControlCore(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Activates the <see cref="control"></see> that will be used to edit the content of the <see cref="cell"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.CalculateEditorBounds(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Drawing.Rectangle@)">
      <summary>Calculates the bounds of the editor and raises the <see cref="E:Xceed.Grid.Editors.CellEditorManager.QueryEditorBounds"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.CalculateEditorBoundsCore(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Drawing.Rectangle@)">
      <summary>Calculates the bounds of the editor.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.CreateControl">
      <summary>Creates the <see cref="T:System.Windows.Forms.Control"></see> that will be used to edit the content of cells.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Control"></see> that will be used to edit the content of cells. If <see cref="P:Xceed.Grid.Editors.CellEditorManager.CreateControlMode"></see> is set to
            <see cref="T:Xceed.Grid.CreateControlMode"></see>.ClonedInstance, a new instance of the control should be returned.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.DeactivateControl(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Deactivates the <see cref="control"></see> that will be used to edit the content of the 
            <see cref="cell"></see> and raises the <see cref="E:Xceed.Grid.Editors.CellEditorManager.DeactivatingControl"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.DeactivateControlCore(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Deactivates the <see cref="control"></see> that will be used to edit the content of the <see cref="cell"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.Finalize">
      <summary>Allows the object to attempt to free resources and perform other cleanup operations before it is reclaimed 
            by garbage collection.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.GetControlValue(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Type)">
      <summary>Retrieves the value of the <see cref="control"></see> and raises the <see cref="E:Xceed.Grid.Editors.CellEditorManager.GettingControlValue"></see> event.</summary>
      <summary>Retrieves the value assigned to the control.</summary>
      <returns>The value that will be assigned to the cell being edited by the <see cref="control"></see>, in the correct datatype.</returns>
      <returns>A reference to the value assigned to the control.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.GetControlValueCore(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Type)">
      <summary>Retrieves the value of the <see cref="control"></see>.</summary>
      <returns>The value that will be assigned to the cell being edited by the <see cref="control"></see>, in the correct datatype.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.GetFittedHeight(System.Windows.Forms.Control,Xceed.Grid.Cell,Xceed.Grid.AutoHeightMode,System.Int32,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves a value representing the fitted height of the editor in pixels and raises the
            <see cref="E:Xceed.Grid.Editors.CellEditorManager.QueryFittedHeight"></see> event.</summary>
      <summary>Retrieves a value representing the fitted height of the cell editor in pixels.</summary>
      <returns>A value representing the fitted height of the editor in pixels. If -1, then no fitted height is required or desired.</returns>
      <returns>A value representing the fitted height of the cell editor in pixels.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.GetFittedHeightCore(System.Windows.Forms.Control,Xceed.Grid.Cell,Xceed.Grid.AutoHeightMode,System.Int32,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves a value representing the fitted height of the editor in pixels.</summary>
      <returns>A value representing the fitted height of the editor in pixels. If -1, then no fitted height is required or desired.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.GetFittedWidth(System.Windows.Forms.Control,Xceed.Grid.Cell,Xceed.Grid.AutoWidthMode,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves a value representing the fitted width of the editor in pixels and raises the 
            <see cref="E:Xceed.Grid.Editors.CellEditorManager.QueryFittedWidth"></see> event.</summary>
      <summary>Retrieves a value representing the fitted width of the cell editor in pixels.</summary>
      <returns>A value representing the fitted width of the cell editor in pixels. If -1, then no fitted width is required or desired.</returns>
      <returns>A value representing the fitted width of the cell editor in pixels.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.GetFittedWidthCore(System.Windows.Forms.Control,Xceed.Grid.Cell,Xceed.Grid.AutoWidthMode,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves a value representing the fitted width of the editor in pixels.</summary>
      <returns>A value representing the fitted width of the cell editor in pixels. If -1, then no fitted width is required or desired.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.GetPropertyValue(System.Object)">
      <summary>Retrieves the value of the specified property in the <see cref="P:Xceed.Grid.Editors.CellEditorManager.Properties"></see>
            collection.</summary>
      <returns>An object representing the value of the property.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.GetService(System.Type)">
      <summary>Returns an object that represents a service provided by the <see cref="T:System.ComponentModel.Component"></see> or by its <see cref="P:Xceed.Grid.Editors.CellEditorManager.Container"></see>.</summary>
      <returns>
        <P>An Object that represents a service provided by the Component. </P>
        <P>This value is $$NULL$$ if the Component does not provide the specified service. </P>
      </returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.HandleActivationClick(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Drawing.Point)">
      <summary>Gets a boolean value indicating if the control should handle the mouse click once it is activated.</summary>
      <returns>true if the control should handle the mouse click once it is activated; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.IsActivationChar(Xceed.Grid.Cell,System.Char)">
      <summary>Retrieves a boolean value indicating if the editor is activated by the char and raises the <see cref="E:Xceed.Grid.Editors.CellEditorManager.QueryActivationChar"></see> event.</summary>
      <summary>Retrieves a boolean value indicating if the control is activated by the char.</summary>
      <returns>true if the editor is activated by the char; false otherwise.</returns>
      <returns>true if the control is activated by the char; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.IsActivationCharCore(Xceed.Grid.Cell,System.Char)">
      <summary>Retrieves a boolean value indicating if the editor is activated by the char.</summary>
      <returns>true if the editor is activated by the char; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.IsActivationKey(Xceed.Grid.Cell,System.Windows.Forms.Keys)">
      <summary>Retrieves a boolean value indicating if the editor is activated by the key and raises the <see cref="E:Xceed.Grid.Editors.CellEditorManager.QueryActivationKey"></see> event.</summary>
      <summary>Retrieves a boolean value indicating if the control is activated by the key.</summary>
      <returns>true if the editor is activated by the key; false otherwise.</returns>
      <returns>true if the control is activated by the key; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.IsActivationKeyCore(Xceed.Grid.Cell,System.Windows.Forms.Keys)">
      <summary>Retrieves a boolean value indicating if the editor is activated by the key.</summary>
      <returns>true if the editor is activated by the key; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.IsInputChar(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Char)">
      <summary>Determines if a character is an input character that the editor recognizes and raises the <see cref="E:Xceed.Grid.Editors.CellEditorManager.QueryInputChar"></see> event.</summary>
      <summary>Determines if a character is an input character that the control recognizes.</summary>
      <returns>true if the character should be sent directly to the editor and not preprocessed; false otherwise.</returns>
      <returns>true if the character should be sent directly to the control and not preprocessed; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.IsInputCharCore(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Char)">
      <summary>Determines if a character is an input character that the editor recognizes.</summary>
      <returns>true if the character should be sent directly to the editor and not preprocessed; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.IsInputKey(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Windows.Forms.Keys)">
      <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing and raises the <see cref="E:Xceed.Grid.Editors.CellEditorManager.QueryInputKey"></see> event.</summary>
      <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</summary>
      <returns>true if the specified key is a regular input key; false otherwise.</returns>
      <returns>true if the specified key is a regular input key; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.IsInputKeyCore(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Windows.Forms.Keys)">
      <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</summary>
      <returns>true if the specified key is a regular input key; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.IsPropertyDefined(System.Object)">
      <summary>Retrieves a boolean value indicating if the specified property has been explicitly set.</summary>
      <returns>true if the property has been explicitly set; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.RemovePropertyValue(System.Object)">
      <summary>Removes the specified property from the <see cref="P:Xceed.Grid.Editors.CellEditorManager.Properties"></see> collection.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.SetControlAppearance(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Sets the appearance of the control that will be used to edit the content of the <see cref="cell"></see>
            and raises the <see cref="E:Xceed.Grid.Editors.CellEditorManager.SettingControlAppearance"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.SetControlAppearanceCore(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Sets the appearance of the control that will be used to edit the content of the <see cref="cell"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.SetControlValue(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Assigns the value of the <see cref="cell"></see> to the <see cref="control"></see> and
            raises the <see cref="E:Xceed.Grid.Editors.CellEditorManager.SettingControlValue"></see> event.</summary>
      <summary>Assigns a value to the control.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.SetControlValueCore(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Assigns the value of the <see cref="cell"></see> to the <see cref="control"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.Validate(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Validates if the editor's value is valid and can be assigned to its underlying cell as well as raises the <see cref="E:Xceed.Grid.Editors.CellEditorManager.Validating"></see> event.</summary>
      <returns>true if the value is valid; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.ValidateCore(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Validates if the editor's value is valid and can be assigned to its underlying cell.</summary>
      <returns>true if the value is valid; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.Dispose">
      <summary>Releases all resources.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.Dispose(System.Boolean)">
      <summary>Releases all resources.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CellEditorManager.RaiseEvent(System.Object,System.EventArgs)">
      <summary>Raises the specified event.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.CellEditorManager.Container">
      <summary>Gets the <see cref="T:System.ComponentModel.IContainer"></see> associated with the <see cref="T:System.ComponentModel.ISite"></see> when implemented by a class.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.CellEditorManager.CreateControlMode">
      <summary>Gets a value representing the mode in which the control used to edit the content of cells is created.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.CellEditorManager.DesignMode">
      <summary>Gets a value that indicates whether the <see cref="T:System.ComponentModel.Component"></see> is currently in design mode.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.CellEditorManager.Events">
      <summary>Gets a list of the events to which the CellEditorManager is subscribed.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.CellEditorManager.InPlace">
      <summary>Gets a boolean value indicating if the <see cref="T:System.Windows.Forms.Control"></see> is painted within the bounds of the cell.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.CellEditorManager.Properties">
      <summary>Gets a collection of property names whose values have been explicitly set
            as well as the corresponding values.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.CellEditorManager.Site">
      <summary>Gets or sets the <see cref="T:System.ComponentModel.ISite"></see> associated with the <see cref="T:System.ComponentModel.IComponent"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.CellEditorManager.TemplateControl">
      <summary>Gets the <see cref="T:System.Windows.Forms.Control"></see> that will be used as a template to create the controls 
            that will edit the content of cells.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.CellEditorManager.ActivatingControl">
      <summary>Raised to activate the control that will be used to edit the content of its corresponding cell.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.CellEditorManager.DeactivatingControl">
      <summary>Raised to deactivate the control that was used to edit the content of its corresponding cell.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.CellEditorManager.Disposed">
      <summary>Represents the method that handles the Disposed event of a component.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.CellEditorManager.GettingControlValue">
      <summary>Raised when retrieving the value assigned to the editor.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.CellEditorManager.QueryActivationChar">
      <summary>Raised when a character is pressed to determine if it the editor is activated by the character.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.CellEditorManager.QueryActivationKey">
      <summary>Raised when a key is pressed to determine if it the editor is activated by the key.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.CellEditorManager.QueryEditorBounds">
      <summary>Raised when calculating the bounds of the editor.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.CellEditorManager.QueryFittedHeight">
      <summary>Raised to calculate the fitted height of the editor in pixels.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.CellEditorManager.QueryFittedWidth">
      <summary>Raised to calculate the fitted width of the editor in pixels.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.CellEditorManager.QueryInputChar">
      <summary>Raised to determine if a character is an input character that the editor recognizes.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.CellEditorManager.QueryInputKey">
      <summary>Raised to determine whether the specified key is a regular input key or a special key that requires preprocessing.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.CellEditorManager.SettingControlAppearance">
      <summary>Raised to set the appearance of the control that will be used to edit the content of its corresponding cell.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.CellEditorManager.SettingControlValue">
      <summary>Raised when the value of a cell is about to be assigned to the control used to edit its content.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.CellEditorManager.Validating">
      <summary>Raised when validating the editor's value to determine if it can be assigned to its underlying cell.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CheckBoxEditor.#ctor">
      <summary>Initializes a new instance of the CheckBoxEditor class.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CheckBoxEditor.#ctor(Xceed.Editors.WinCheckBox)">
      <summary>Initializes a new instance of the CheckBoxEditor class specifying the WinCheckBox control that will be used as a template.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CheckBoxEditor.#ctor(Xceed.Editors.WinCheckBox,System.Boolean)">
      <summary>Initializes a new instance of the CellEditorManager class specifying the control that will be used as a
            template to edit the content of <b>boolean </b> cells, as well as other characteristics that will apply 
            to the editor.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CheckBoxEditor.CalculateEditorBoundsCore(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Drawing.Rectangle@)">
      <summary>Calculates the bounds of the editor.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CheckBoxEditor.CreateControl">
      <summary>Creates the <see cref="T:System.Windows.Forms.Control"></see> that will be used to edit the content of cells.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Control"></see> that will be used to edit the content of cells. If <see cref="P:Xceed.Grid.Editors.CheckBoxEditor.CreateControlMode"></see> is set to
            <see cref="T:Xceed.Grid.CreateControlMode"></see>.ClonedInstance, a new instance of the control should be returned.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CheckBoxEditor.GetControlValueCore(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Type)">
      <summary>Retrieves the value of the <see cref="control"></see>.</summary>
      <returns>The value that will be assigned to the cell being edited by the <see cref="control"></see>, in the correct datatype.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CheckBoxEditor.IsActivationCharCore(Xceed.Grid.Cell,System.Char)">
      <summary>Retrieves a boolean value indicating if the editor is activated by the char.</summary>
      <returns>true if the editor is activated by the char; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CheckBoxEditor.IsActivationKeyCore(Xceed.Grid.Cell,System.Windows.Forms.Keys)">
      <summary>Retrieves a boolean value indicating if the editor is activated by the key.</summary>
      <returns>true if the editor is activated by the key; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CheckBoxEditor.OnFitSizeToCellChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.CheckBoxEditor.FitSizeToCellChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CheckBoxEditor.ResetFitSizeToCell">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Editors.CheckBoxEditor.FitSizeToCell"></see> property to its default value, <see cref="P:Xceed.Grid.Editors.CheckBoxEditor.DefaultFitSizeToCell"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CheckBoxEditor.SetControlAppearanceCore(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Sets the appearance of the control that will be used to edit the content of the <see cref="cell"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CheckBoxEditor.SetControlValueCore(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Assigns the value of the <see cref="cell"></see> to the <see cref="control"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.CheckBoxEditor.CreateControlMode">
      <summary>Gets a value representing the mode in which the control used to edit the content of cells is created.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.CheckBoxEditor.DefaultFitSizeToCell">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Editors.CheckBoxEditor.FitSizeToCell"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.CheckBoxEditor.FitSizeToCell">
      <summary>Gets or sets a boolean value indicating if the control should completely occupy the cell.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.CheckBoxEditor.TemplateControl">
      <summary>Gets the <see cref="T:System.Windows.Forms.Control"></see> that will be used as a template to create the controls that will edit the content of <B>boolean </B>cells.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.CheckBoxEditor.FitSizeToCellChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Editors.CheckBoxEditor.FitSizeToCell"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ComboBoxEditor.#ctor">
      <summary>Initializes a new instance of the ComboBoxEditor class.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ComboBoxEditor.#ctor(Xceed.Editors.WinComboBox)">
      <summary>Initializes a new instance of the ComboBoxEditor class specifying the WinComboBox control that will be used as a template.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ComboBoxEditor.#ctor(System.Object,System.String,System.String)">
      <summary>Initializes a new instance of the ComboBoxEditor class specifying its data binding information.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ComboBoxEditor.#ctor(System.Object,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the ComboBoxEditor class specifying its data binding information.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ComboBoxEditor.#ctor(System.Object,System.String,System.String,System.String,Xceed.Editors.ImagePosition,System.Drawing.Size,System.String)">
      <summary>Initializes a new instance of the ComboBoxEditor class specifying its data binding information.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ComboBoxEditor.GetControlValueCore(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Type)">
      <summary>Retrieves the value of the <see cref="control"></see>.</summary>
      <returns>The value that will be assigned to the cell being edited by the <see cref="control"></see>, in the correct datatype.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.ComboBoxEditor.IsInputKeyCore(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Windows.Forms.Keys)">
      <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</summary>
      <returns>true if the specified key is a regular input key; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.ComboBoxEditor.ResetDisplayFormat">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Editors.ComboBoxEditor.DisplayFormat"></see> property to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultDisplayFormat"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ComboBoxEditor.ResetImageAlignment">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Editors.ComboBoxEditor.ImageAlignment"></see> property to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultImageAlignment"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ComboBoxEditor.ResetImageMember">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Editors.ComboBoxEditor.ImageMember"></see> property to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultImageMember"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ComboBoxEditor.ResetImagePadding">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Editors.ComboBoxEditor.ImagePadding"></see> property to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultImagePadding"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ComboBoxEditor.ResetImagePosition">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Editors.ComboBoxEditor.ImagePosition"></see> property to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultImagePosition"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ComboBoxEditor.ResetImageSize">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Editors.ComboBoxEditor.ImageSize"></see> property to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultImageSize"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ComboBoxEditor.ResetImageStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Editors.ComboBoxEditor.ImageStyle"></see> property to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultImageStyle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ComboBoxEditor.ResetPreserveImageAspectRatio">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Editors.ComboBoxEditor.PreserveImageAspectRatio"></see> property to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultPreserveImageAspectRatio"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ComboBoxEditor.ResetValueMember">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Editors.ComboBoxEditor.ValueMember"></see> property to its default value, <see cref="P:Xceed.Editors.WinComboBox.DefaultValueMember"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ComboBoxEditor.SetControlAppearanceCore(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Sets the appearance of the control that will be used to edit the content of the <see cref="cell"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ComboBoxEditor.SetControlValueCore(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Assigns the value of the <see cref="cell"></see> to the <see cref="control"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ComboBoxEditor.SetDataBinding(System.Object,System.String)">
      <summary>Sets the <see cref="P:Xceed.Grid.Editors.ComboBoxEditor.DataSource"></see> and <see cref="P:Xceed.Grid.Editors.ComboBoxEditor.DataMember"></see> properties 
            at run time.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ComboBoxEditor.Columns">
      <summary>Gets a list representing the collection of the columns contained in the ComboBoxEditor.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ComboBoxEditor.DataMember">
      <summary>Gets or sets the table to bind to within the object returned by the <see cref="P:Xceed.Grid.Editors.ComboBoxEditor.DataSource"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ComboBoxEditor.DataSource">
      <summary>Gets or sets the data source used to populate the ComboBoxEditor</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ComboBoxEditor.DisplayFormat">
      <summary>Gets or sets the format with which the selected item is displayed in the ComboBoxEditor.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ComboBoxEditor.ImageAlignment">
      <summary>Gets or sets the alignment of the image.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ComboBoxEditor.ImageMember">
      <summary>Gets or sets a string that specifies the field of the data source from which to draw the image.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ComboBoxEditor.ImagePadding">
      <summary>Gets or sets the padding surrounding the image.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ComboBoxEditor.ImagePosition">
      <summary>Gets or sets the position of the image.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ComboBoxEditor.ImageSize">
      <summary>Gets or sets the size of the image.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ComboBoxEditor.ImageStyle">
      <summary>Gets or sets the style with which the image is displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ComboBoxEditor.Items">
      <summary>Gets a list representing the collection of the items contained in the ComboBoxEditor.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ComboBoxEditor.PreserveImageAspectRatio">
      <summary>Gets or sets a boolean value indicating if the image should preserve its aspect ratio.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ComboBoxEditor.ValueMember">
      <summary>Gets or sets a string that specifies the field of the data source from which to draw the value.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ComboBoxEditor.TemplateControl">
      <summary>Gets the <see cref="T:System.Windows.Forms.Control"></see> that will be used as a template to create the controls that will edit the content of cells.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ControlViewer.OnSettingControlValue(Xceed.Grid.Editors.SettingControlValueEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.ControlViewer.SettingControlValue"></see> event.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ControlViewer.Control">
      <summary>Gets a reference to the underlining control used to view the content
            of a cell.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ControlViewer.PropertyName">
      <summary>Gets a value representing the property used to set the control's value.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.ControlViewer.SettingControlValue">
      <summary>Raised when the property used to set the control's value is being set.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CustomEditor.#ctor(System.Windows.Forms.Control,System.String,System.Boolean)">
      <summary>Initializes a new instance of the CustomEditor class specifying
            the control to use to edit the content of a cell, the property used to 
            get or set the control's value as well as if the control should appear inplace.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CustomEditor.IsActivationChar(System.Char)">
      <summary>Retrieves a boolean value indicating if the control is activated by the char.</summary>
      <returns>true if the control is activated by the char; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CustomEditor.IsActivationKey(System.Windows.Forms.Keys)">
      <summary>Retrieves a boolean value indicating if the control is activated by the key.</summary>
      <returns>true if the control is activated by the key; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CustomEditor.IsInputChar(System.Char)">
      <summary>Determines if a character is an input character that the control recognizes.</summary>
      <returns>true if the character should be sent directly to the control and not preprocessed; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CustomEditor.IsInputKey(System.Windows.Forms.Keys)">
      <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</summary>
      <returns>true if the specified key is a regular input key; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.CustomEditor.OnActivatingControl(Xceed.Grid.Editors.ActivatingControlEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.CustomEditor.ActivatingControl"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CustomEditor.OnGettingControlValue(Xceed.Grid.Editors.GettingControlValueEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.CustomEditor.GettingControlValue"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CustomEditor.OnHandleActivationClickChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.CustomEditor.HandleActivationClickChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.CustomEditor.OnSettingControlValue(Xceed.Grid.Editors.SettingControlValueEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.CustomEditor.SettingControlValue"></see> event.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.CustomEditor.Control">
      <summary>Gets the control used to edit cells.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.CustomEditor.HandleActivationClick">
      <summary>Gets or sets a boolean value indicating if the control should activate on the mouse click.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.CustomEditor.InPlace">
      <summary>Gets a boolean value indicating if the rectangle of the cell editor should be painted with the same size as the cell's client rectangle.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.CustomEditor.PropertyName">
      <summary>Gets a value representing the property used to set the control's value.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.CustomEditor.ActivatingControl">
      <summary>Raised when the control used to edit the content a cell is being activated.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.CustomEditor.GettingControlValue">
      <summary>Raised when the value of the property used to set the control's value is being retrieved.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.CustomEditor.HandleActivationClickChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Editors.CustomEditor.HandleActivationClick"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.CustomEditor.SettingControlValue">
      <summary>Raised when the property used to set the control's value is being set.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.DateEditor.#ctor">
      <summary>Initializes a new instance of the DateEditor class.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.DateEditor.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the DateEditor class specifying if the calendar. can be shown.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.DateEditor.#ctor(Xceed.Editors.WinDatePicker)">
      <summary>Initializes a new instance of the DateEditor class specifying the WinDatePicker control that will be used as a template.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.DateEditor.GetControlValueCore(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Type)">
      <summary>Retrieves the value of the <see cref="control"></see>.</summary>
      <returns>The value that will be assigned to the cell being edited by the <see cref="control"></see>, in the correct datatype.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.DateEditor.IsInputKeyCore(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Windows.Forms.Keys)">
      <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</summary>
      <returns>true if the specified key is a regular input key; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.DateEditor.SetControlAppearanceCore(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Sets the appearance of the control that will be used to edit the content of the <see cref="cell"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.DateEditor.SetControlValueCore(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Assigns the value of the <see cref="cell"></see> to the <see cref="control"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.DateEditor.TemplateControl">
      <summary>Gets the <see cref="T:Xceed.Editors.WinDatePicker"></see> control that will be used as a template to create the controls that will edit the content of cells which have a <see cref="T:System.DateTime"></see> datatype.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GettingControlValueEventArgs.Handled">
      <summary>Gets or sets a boolean value indicating if the editor can handle the value.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GettingControlValueEventArgs.Value">
      <summary>Gets or sets the value that will be modified by the editor.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GettingEditorControlValueEventArgs.#ctor(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Type,System.Object)">
      <summary>Initializes a new instance of the CellEditorEventArgs class specifying the <see cref="T:Xceed.Grid.Cell"></see> 
            currently being edited, <see cref="T:System.Windows.Forms.Control"></see> used to edit the cell's content, as well as the
            cell's value and its datatype.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GettingEditorControlValueEventArgs.CellValue">
      <summary>Gets or sets the <see cref="P:Xceed.Grid.Editors.CellEditorEventArgs.Cell"></see>'s value.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GettingEditorControlValueEventArgs.ValueDataType">
      <summary>Gets the datatype of the <see cref="P:Xceed.Grid.Editors.GettingEditorControlValueEventArgs.CellValue"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.HidePanel">
      <summary>Hides the calculator portion of the <see cref="T:Xceed.Grid.Editors.GridCalculatorBox"></see> editor.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.IsInputChar(System.Char)">
      <summary>Determines if a character is an input character that the control recognizes.</summary>
      <returns>true if the character should be sent directly to the control and not preprocessed; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.IsInputKey(System.Windows.Forms.Keys)">
      <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</summary>
      <returns>true if the specified key is a regular input key; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.OnFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.FontChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.OnGotFocus(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.GotFocus"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyPress"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.OnLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Leave"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.OnLostFocus(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.LostFocus"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.OnMaxLengthChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.GridCalculatorBox.MaxLengthChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.OnMouseEnter(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Leave"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.OnMouseLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Leave"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Paint"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.SendKey(System.Char)">
      <summary>Simulates the pressing of the key that was clicked.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>Performs the work of setting the specified bounds of the <see cref="T:Xceed.Grid.Editors.GridCalculatorBox"></see> editor.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.ShowPanel">
      <summary>Shows the calculator portion of the <see cref="T:Xceed.Grid.Editors.GridCalculatorBox"></see> editor.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCalculatorBox.TogglePanel">
      <summary>Shows or hides the calculator portion of the <see cref="T:Xceed.Grid.Editors.GridCalculatorBox"></see> editor
            depending on its current state.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridCalculatorBox.DefaultSize">
      <summary>Gets the default value of the <see cref="T:System.Drawing.Size"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridCalculatorBox.Expression">
      <summary>Gets the mathematical expression used to calculate <see cref="P:Xceed.Grid.Editors.GridCalculatorBox.Value"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridCalculatorBox.MaxLength">
      <summary>Gets or sets the maximum number of characters that can be entered in the 
            <see cref="T:Xceed.Grid.Editors.GridCalculatorBox"></see> editor.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridCalculatorBox.Text">
      <summary>Gets or sets the text associated with the <see cref="T:Xceed.Grid.Editors.GridCalculatorBox"></see> editor.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridCalculatorBox.Value">
      <summary>Gets or sets the value calculated by the <see cref="T:Xceed.Grid.Editors.GridCalculatorBox"></see> editor.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.GridCalculatorBox.MaxLengthChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Editors.GridCalculatorBox.MaxLength"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridCheckBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.Editors.GridCheckBox"></see> editor
            with a <see cref="F:System.Windows.Forms.FlatStyle.Flat"></see> appearance. This editor
            is used by default to edit the content of cells which have a boolean
            datatype.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridCheckBox.FitToCell">
      <summary>Gets or sets a boolean value indicating if the control should completely occupy the cell.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridComboBox.#ctor">
      <summary>Initializes a new instance of the GridComboBox control with a DropDownList style.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ComboBox.DrawItem"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridComboBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ComboBox.MeasureItem"></see> event.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridComboBox.DisplayStyle">
      <summary>Gets or sets a value indicating how the content of the GridComboBox will be displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridComboBox.ImageAlign">
      <summary>Gets or sets the alignment of the images in the GridComboBox.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridComboBox.ImageList">
      <summary>Gets or sets the list of images that will be used by the GridComboBox when needed.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridComboBox.ImageMaps">
      <summary>Gets a list of values which are mapped to an image in the GridComboBox's
            <see cref="P:Xceed.Grid.Editors.GridComboBox.ImageList"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridComboBox.TextAlign">
      <summary>Gets the alignment of the text in the GridComboBox.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridComboBox.Trimming">
      <summary>Gets a value indicating how text displayed in the editor will be trimmed when it 
            exceeds the edges of the editor.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridDateTimePicker.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Xceed.Grid.Editors.GridDateTimePicker"></see> control.
            This editor is used by default to edit the content of cells which have a datetime
            datatype.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridImageBox.#ctor">
      <summary>Initializes a new instance of the GridImageBox class.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridImageBox.GetImage(System.Object)">
      <summary>Returns the displayed image.</summary>
      <returns>An <see cref="T:System.Drawing.Image"></see> corresponding to the cell's value.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.GridMaskedTextBox.#ctor">
      <summary>Initializes a new instance of the GridMaskedTextBox class.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridMaskedTextBox.Cut">
      <summary>Moves the current selection in the GridMaskedTextBox to the clipboard.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridMaskedTextBox.IsCharValid(System.Char,System.Char)">
      <summary>Verifies if a character is valid for a specific mask.</summary>
      <returns>true if <PARAM refname="charToValidate" />is valid for the specified mask character; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.GridMaskedTextBox.OnGotFocus(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.GotFocus"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridMaskedTextBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridMaskedTextBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyPress"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridMaskedTextBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyUp"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridMaskedTextBox.OnMaskChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.GridMaskedTextBox.MaskChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridMaskedTextBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridMaskedTextBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridMaskedTextBox.OnOverwriteChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.GridMaskedTextBox.OverwriteChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridMaskedTextBox.OnRawTextChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.GridMaskedTextBox.RawTextChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridMaskedTextBox.OnSelectOnFocusChanged(System.EventArgs)">
      <summary>Raises the <see cref="P:Xceed.Grid.Editors.GridMaskedTextBox.SelectOnFocus"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridMaskedTextBox.OnStrictValidationChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.GridMaskedTextBox.StrictValidationChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridMaskedTextBox.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Validating"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridMaskedTextBox.OnValidationError(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.GridMaskedTextBox.ValidationError"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridMaskedTextBox.Paste">
      <summary>Replaces the current selection in the GridMaskedTextBox with the contents of the clipboard</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridMaskedTextBox.BorderStyle">
      <summary>Gets or sets the border style for the control.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridMaskedTextBox.Mask">
      <summary>Gets or sets the mask used to edit the content of a cell.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridMaskedTextBox.MaskChars">
      <summary>Gets an array containing the possible masking characters.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridMaskedTextBox.Overwrite">
      <summary>Gets or sets a boolean value indicating if existing text in the GridMaskedTextBox can be overwritten when keys are pressed.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridMaskedTextBox.RawText">
      <summary>Gets or sets the raw (non-formatted) text entered in the GridMaskedTextBox without
            the literals of the mask.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridMaskedTextBox.SelectOnFocus">
      <summary>Gets or sets a boolean value indicating if the entire content of the GridMaskedTextBox should be selected when it gets focus.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridMaskedTextBox.StrictValidation">
      <summary>Gets or sets a boolean value indicating whether the editor's content should be validated while it is being entered.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridMaskedTextBox.Text">
      <summary>Gets or sets the formatted text entered in the GridMaskedTextBox.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.GridMaskedTextBox.MaskChanged">
      <summary>Raised when the valus of the <see cref="P:Xceed.Grid.Editors.GridMaskedTextBox.Mask"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.GridMaskedTextBox.OverwriteChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Editors.GridMaskedTextBox.Overwrite"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.GridMaskedTextBox.RawTextChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Editors.GridMaskedTextBox.RawText"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.GridMaskedTextBox.SelectOnFocusChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Editors.GridMaskedTextBox.SelectOnFocus"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.GridMaskedTextBox.StrictValidationChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Editors.GridMaskedTextBox.StrictValidation"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.GridMaskedTextBox.ValidationError">
      <summary>Raised when the text entered into the editor does not match the mask.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridNumericTextBox.#ctor">
      <summary>Initializes a new instance of the GridNumericTextBox class.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridNumericTextBox.OnAllowedSignsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.GridNumericTextBox.AllowedSignsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridNumericTextBox.OnDecimalsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.GridNumericTextBox.DecimalsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridNumericTextBox.OnFormatProviderChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.GridNumericTextBox.FormatProviderChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridNumericTextBox.OnFormatSpecifierChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.GridNumericTextBox.FormatSpecifierChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridNumericTextBox.OnGotFocus(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.GotFocus"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridNumericTextBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridNumericTextBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyPress"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridNumericTextBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyUp"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridNumericTextBox.OnLengthChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.GridNumericTextBox.LengthChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridNumericTextBox.OnLostFocus(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.LostFocus"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridNumericTextBox.OnSelectOnFocusChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.GridNumericTextBox.SelectOnFocusChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridNumericTextBox.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Validating"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridNumericTextBox.OnValidationError(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.GridNumericTextBox.ValidationError"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridNumericTextBox.OnValueChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Editors.GridNumericTextBox.ValueChanged"></see> event.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridNumericTextBox.AllowedSigns">
      <summary>Gets or sets a value indicating if the numeric value entered in the editor can be 
            negative, positive or either.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridNumericTextBox.BorderStyle">
      <summary>Gets or sets the border style for the control.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridNumericTextBox.Decimals">
      <summary>Gets or sets a value indicating the maximum number of digits which can 
            be entered after the decimal point.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridNumericTextBox.FormatProvider">
      <summary>Gets or sets the custom Format Provider that will be used to format
            the editor's data.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridNumericTextBox.FormatSpecifier">
      <summary>Gets or sets the format that will be used to display the editor's content.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridNumericTextBox.Length">
      <summary>Gets or sets a value indicating the maximum number of digits that can be entered.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridNumericTextBox.SelectOnFocus">
      <summary>Gets or sets a boolean value indicating if the entire content of the GridNumericTextBox should be selected when it gets focus.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridNumericTextBox.Value">
      <summary>Gets or sets the numeric value of the editor without seperators or other formatting characters.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.GridNumericTextBox.AllowedSignsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Editors.GridNumericTextBox.AllowedSigns"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.GridNumericTextBox.DecimalsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Editors.GridNumericTextBox.Decimals"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.GridNumericTextBox.FormatProviderChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Editors.GridNumericTextBox.FormatProvider"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.GridNumericTextBox.FormatSpecifierChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Editors.GridNumericTextBox.FormatSpecifier"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.GridNumericTextBox.LengthChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Editors.GridNumericTextBox.Length"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.GridNumericTextBox.SelectOnFocusChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Editors.GridNumericTextBox.SelectOnFocus"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.GridNumericTextBox.ValidationError">
      <summary>Raised when the text entered into the editor fails the validation process.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.GridNumericTextBox.ValueChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Editors.GridNumericTextBox.Value"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridRichTextBox.#ctor">
      <summary>Initializes a new instance of the GridRichTextBox class.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridRichTextBox.OnGotFocus(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.GotFocus"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridRichTextBox.OnSelectOnFocusChanged(System.EventArgs)">
      <summary>Raises the <see cref="P:Xceed.Grid.Editors.GridRichTextBox.SelectOnFocus"></see> event.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridRichTextBox.SelectOnFocus">
      <summary>Gets or sets a boolean value indicating if the entire content of the GridRichTextBox should be selected when it gets focus.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.GridRichTextBox.SelectOnFocusChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Editors.GridRichTextBox.SelectOnFocus"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridTextBox.#ctor">
      <summary>Initializes a new instance of the GridTextBox class. This editor
            is used by default to edit the content of cells which have a string
            or numeric datatype.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridTextBox.OnGotFocus(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.GotFocus"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.GridTextBox.OnSelectOnFocusChanged(System.EventArgs)">
      <summary>Raises the <see cref="P:Xceed.Grid.Editors.GridTextBox.SelectOnFocus"></see> event.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridTextBox.BorderStyle">
      <summary>Gets or sets the border style for the control.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.GridTextBox.SelectOnFocus">
      <summary>Gets or sets a boolean value indicating if the entire content of the GridTextBox should be selected when it gets focus.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.GridTextBox.SelectOnFocusChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Editors.GridTextBox.SelectOnFocus"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ImageMap.#ctor(System.Object,System.Int32)">
      <summary>Initializes a new instance of the ImageMap class specifing a value and
            the index of the image to which it is mapped.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ImageMap.ImageIndex">
      <summary>Gets or sets the index of the image to which <see cref="P:Xceed.Grid.Editors.ImageMap.Value"></see> is mapped.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ImageMap.Value">
      <summary>Gets or sets the value to map to an image.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ImageMapList.Add(Xceed.Grid.Editors.ImageMap)">
      <summary>Adds a <see cref="T:Xceed.Grid.Editors.ImageMap"></see> object to the list.</summary>
      <returns>The index at which the <see cref="T:Xceed.Grid.Editors.ImageMap"></see> object was added.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.ImageMapList.AddRange(Xceed.Grid.Editors.ImageMap[])">
      <summary>Adds the elements of a <see cref="T:Xceed.Grid.Editors.ImageMap"></see> array to the end of the ValueIndexCollection 
            collection.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ImageMapList.Clear">
      <summary>Removes all <see cref="T:Xceed.Grid.Editors.ImageMap"></see> objects from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ImageMapList.Contains(Xceed.Grid.Editors.ImageMap)">
      <summary>Retrieves a boolean value indicating if a specific <see cref="T:Xceed.Grid.Editors.ImageMap"></see> object exists in the list.</summary>
      <returns>true if the <see cref="T:Xceed.Grid.Editors.ImageMap"></see> object exists in the list; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.ImageMapList.IndexOf(Xceed.Grid.Editors.ImageMap)">
      <summary>Searches for the specified <see cref="T:Xceed.Grid.Editors.ImageMap"></see> object and returns the zero-based
            index of the first occurrence within the list.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="value"></see> 
            within the entire list, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.ImageMapList.Insert(System.Int32,Xceed.Grid.Editors.ImageMap)">
      <summary>Inserts a <see cref="T:Xceed.Grid.Editors.ImageMap"></see> object into the list at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ImageMapList.OnValidate(System.Object)">
      <summary>Performs additional custom processes when validating a value.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ImageMapList.Remove(Xceed.Grid.Editors.ImageMap)">
      <summary>Removes the <see cref="T:Xceed.Grid.Editors.ImageMap"></see> object from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ImageMapList.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:Xceed.Grid.Editors.ImageMap"></see> object from the list at the specified index.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ImageMapList.IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:Xceed.Grid.Editors.ImageMapList"></see> has a fixed size.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ImageMapList.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:Xceed.Grid.Editors.ImageMapList"></see> is readonly.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ImageMapList.Item(System.Int32)">
      <summary>Gets the <see cref="T:Xceed.Grid.Editors.ImageMap"></see> object at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.NumericEditor.#ctor">
      <summary>Initializes a new instance of the WinNumericTextBox class.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.NumericEditor.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the WinNumericTextBox class specifying if the calculator can be shown.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.NumericEditor.#ctor(Xceed.Editors.WinNumericTextBox)">
      <summary>Initializes a new instance of the NumericEditor class specifying the WinNumericTextBox control that will be used as a template.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.NumericEditor.GetControlValueCore(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Type)">
      <summary>Retrieves the value of the <see cref="control"></see>.</summary>
      <returns>The value that will be assigned to the cell being edited by the <see cref="control"></see>, in the correct datatype.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.NumericEditor.SetControlAppearanceCore(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Sets the appearance of the control that will be used to edit the content of the <see cref="cell"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.NumericEditor.SetControlValueCore(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Assigns the value of the <see cref="cell"></see> to the <see cref="control"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.NumericEditor.TemplateControl">
      <summary>Gets the <see cref="T:Xceed.Editors.WinNumericTextBox"></see> control that will be used as a template to create the controls that will edit the content of cells which have a numeric datatype.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.QueryEditorActivationCharEventArgs.#ctor(Xceed.Grid.Cell,System.Char,System.Boolean)">
      <summary>Initializes a new instance of the QueryEditorActivationCharEventArgs class specifying the cell whose content
            is to be edited as well as the character which may or may not activate the cell's editor.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorActivationCharEventArgs.Cell">
      <summary>Gets the <see cref="T:Xceed.Grid.Cell"></see> whose content is to be edited by the editor.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorActivationCharEventArgs.CharCode">
      <summary>Gets the character to test.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorActivationCharEventArgs.IsActivationChar">
      <summary>Gets or sets a boolean value indicating if the character provided by <see cref="P:Xceed.Grid.Editors.QueryEditorActivationCharEventArgs.CharCode"></see> activates the editor.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.QueryEditorActivationKeyEventArgs.#ctor(Xceed.Grid.Cell,System.Windows.Forms.Keys,System.Boolean)">
      <summary>Initializes a new instance of the QueryEditorActivationKeyEventArgs class specifying the cell whose content
            is to be edited as well as the key which may or may not activate the cell's editor.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorActivationKeyEventArgs.Cell">
      <summary>Gets the <see cref="T:Xceed.Grid.Cell"></see> whose content is to be edited by the editor.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorActivationKeyEventArgs.IsActivationKey">
      <summary>Gets or sets a boolean value indicating if the key provided by <see cref="P:Xceed.Grid.Editors.QueryEditorActivationKeyEventArgs.KeyData"></see> activates the editor.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorActivationKeyEventArgs.KeyData">
      <summary>Gets the key to test.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.QueryEditorBoundsEventArgs.#ctor(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Drawing.Rectangle)">
      <summary>Initializes a new instance of the QueryEditorBoundsEventArgs class specifying the cell to be 
            edited, the control used to edit the cell's content, as well as various information required
            to calculate the editor's bounds.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorBoundsEventArgs.Bounds">
      <summary>Gets or sets the bounds to the editor.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.QueryEditorFittedHeightEventArgs.#ctor(System.Windows.Forms.Control,Xceed.Grid.Cell,Xceed.Grid.AutoHeightMode,System.Int32,System.Drawing.Graphics,System.Boolean,System.Int32)">
      <summary>Initializes a new instance of the QueryEditorFittedHeightEventArgs class specifying the cell to be 
            edited, the control used to edit the cell's content, as well as various information required
            to calculate the editor's fitted height.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorFittedHeightEventArgs.CellDisplayWidth">
      <summary>Gets the display width of the cell.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorFittedHeightEventArgs.FittedHeight">
      <summary>Gets or sets the fitted height of the editor.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorFittedHeightEventArgs.Graphics">
      <summary>Gets the <see cref="P:Xceed.Grid.Editors.QueryEditorFittedHeightEventArgs.Graphics"></see> object used to paint.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorFittedHeightEventArgs.Mode">
      <summary>Gets an <see cref="T:Xceed.Grid.AutoHeightMode"></see> value indicating in regards to what factors the fitted height of 
            the editor will be calculated.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorFittedHeightEventArgs.Printing">
      <summary>Gets a boolean value indicating if the editor is being printed.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.QueryEditorFittedWidthEventArgs.#ctor(System.Windows.Forms.Control,Xceed.Grid.Cell,Xceed.Grid.AutoWidthMode,System.Drawing.Graphics,System.Boolean,System.Int32)">
      <summary>Initializes a new instance of the QueryEditorFittedHeightEventArgs class specifying the cell to be 
            edited, the control used to edit the cell's content, as well as various information required
            to calculate the editor's fitted width.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorFittedWidthEventArgs.FittedWidth">
      <summary>Gets or sets the fitted width of the editor.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorFittedWidthEventArgs.Graphics">
      <summary>Gets the <see cref="P:Xceed.Grid.Editors.QueryEditorFittedWidthEventArgs.Graphics"></see> object used to paint.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorFittedWidthEventArgs.Mode">
      <summary>This property is reserved for future use.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorFittedWidthEventArgs.Printing">
      <summary>Gets a boolean value indicating if the editor is being printed.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.QueryEditorInputCharEventArgs.#ctor(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Char,System.Boolean)">
      <summary>Initializes a new instance of the QueryEditorInputCharEventArgs class specifying the cell to be 
            edited, the control used to edit the cell's content, and the input character to process.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorInputCharEventArgs.CharCode">
      <summary>Gets the character to test.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorInputCharEventArgs.IsInputChar">
      <summary>Gets or sets a boolean value indicating if the <see cref="P:Xceed.Grid.Editors.QueryEditorInputCharEventArgs.CharCode"></see> should be sent directly to the editor.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.QueryEditorInputKeyEventArgs.#ctor(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Windows.Forms.Keys,System.Boolean)">
      <summary>Initializes a new instance of the QueryEditorInputCharEventArgs class specifying the cell to be 
            edited, the control used to edit the cell's content, and the input key to process.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorInputKeyEventArgs.IsInputKey">
      <summary>Gets or sets a boolean value indicating if the specified key is a regular input key.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.QueryEditorInputKeyEventArgs.KeyData">
      <summary>Gets one of the <see cref="T:System.Windows.Forms.Keys"></see> values.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.SettingControlValueEventArgs.CustomFormatProvider">
      <summary>Gets the custom Format Provider that will be used to format 
            <see cref="P:Xceed.Grid.Editors.SettingControlValueEventArgs.Value"></see></summary>
    </member>
    <member name="P:Xceed.Grid.Editors.SettingControlValueEventArgs.Handled">
      <summary>Gets or sets a boolean value indicating if the value can be handled by the editor or viewer.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.SettingControlValueEventArgs.Value">
      <summary>Gets the value to assign to the cell editor or viewer.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.TextEditor.#ctor">
      <summary>Initializes a new instance of the TextEditor class.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.TextEditor.#ctor(System.String)">
      <summary>Initializes a new instance of the TextEditor class specifying the string to use as a mask.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.TextEditor.#ctor(Xceed.Editors.WinTextBox)">
      <summary>Initializes a new instance of the TextEditor class specifying the WinTextBox control that will be used as a template.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.TextEditor.#ctor(Xceed.Editors.WinTextBox,System.String,System.Boolean)">
      <summary>Initializes a new instance of the TextEditor class specifying the WinTextBox control that will be used as a
            template to edit the content of cells which have a string datatype, as well as other characteristics that 
            will apply to the editor.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.TextEditor.CalculateEditorBoundsCore(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Drawing.Rectangle@)">
      <summary>Calculates the bounds of the editor.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.TextEditor.CreateControl">
      <summary>Creates the <see cref="T:System.Windows.Forms.Control"></see> that will be used to edit the content of cells.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Control"></see> that will be used to edit the content of cells. If <see cref="P:Xceed.Grid.Editors.TextEditor.CreateControlMode"></see> is set to
            <see cref="T:Xceed.Grid.CreateControlMode"></see>.ClonedInstance, a new instance of the control should be returned.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.TextEditor.DeactivateControlCore(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Deactivates the <see cref="control"></see> that will be used to edit the content of the <see cref="cell"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.TextEditor.GetControlValueCore(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Type)">
      <summary>Retrieves the value of the <see cref="control"></see>.</summary>
      <returns>The value that will be assigned to the cell being edited by the <see cref="control"></see>, in the correct datatype.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.TextEditor.GetFittedHeightCore(System.Windows.Forms.Control,Xceed.Grid.Cell,Xceed.Grid.AutoHeightMode,System.Int32,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves a value representing the fitted height of the editor in pixels.</summary>
      <returns>A value representing the fitted height of the editor in pixels. If -1, then no fitted height is required or desired.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.TextEditor.HandleActivationClick(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Drawing.Point)">
      <summary>Gets a boolean value indicating if the control should handle the mouse click once it is activated.</summary>
      <returns>true if the control should handle the mouse click once it is activated; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.TextEditor.IsActivationCharCore(Xceed.Grid.Cell,System.Char)">
      <summary>Retrieves a boolean value indicating if the editor is activated by the char.</summary>
      <returns>true if the editor is activated by the char; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.TextEditor.IsActivationKeyCore(Xceed.Grid.Cell,System.Windows.Forms.Keys)">
      <summary>Retrieves a boolean value indicating if the editor is activated by the key.</summary>
      <returns>true if the editor is activated by the key; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.TextEditor.IsInputKeyCore(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Windows.Forms.Keys)">
      <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</summary>
      <returns>true if the specified key is a regular input key; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Editors.TextEditor.SetControlAppearanceCore(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Sets the appearance of the control that will be used to edit the content of the <see cref="cell"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.TextEditor.SetControlValueCore(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Assigns the value of the <see cref="cell"></see> to the <see cref="control"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.TextEditor.CreateControlMode">
      <summary>Gets a value representing the mode in which the control used to edit the content of cells is created.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.TextEditor.Mask">
      <summary>Gets or sets the mask applied to the editor's text.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.TextEditor.MaskPromptChar">
      <summary>Gets or sets the character used to prompt a user for input.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.TextEditor.PasswordChar">
      <summary>Gets or sets the character used to mask characters of a password.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.TextEditor.TemplateControl">
      <summary>Gets the <see cref="T:Xceed.Editors.WinTextBox"></see> control that will be used as a template to create the controls that will edit the content of cells which have a <see cref="T:System.String"></see> datatype.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.TextEditor.MaskChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Editors.TextEditor.Mask"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Editors.TextEditor.MaskPromptCharChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Editors.TextEditor.MaskPromptChar"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.Editors.ValidatingEditorEventArgs.#ctor(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Boolean)">
      <summary>Initializes a new instance of the ValidatingEditorEventArgs class specifying the cell to be 
            edited, the control used to edit the cell's content, and a boolean value indicating if the editor's
            value is valid.</summary>
    </member>
    <member name="P:Xceed.Grid.Editors.ValidatingEditorEventArgs.Valid">
      <summary>Gets or sets a boolean value indicating if the editor's value is valid and can be assigned to its underlying cell.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.ActivatingControlEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Editors.CustomEditor.ActivatingControl"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.CellEditorEventHandler">
      <summary>Represents the method that will handle various <see cref="T:Xceed.Grid.Editors.CellEditorManager"></see> events.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.GettingControlValueEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Editors.CustomEditor.GettingControlValue"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.GettingEditorControlValueEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Editors.CellEditorManager.GettingControlValue"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.QueryEditorActivationCharEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Editors.CellEditorManager.QueryActivationChar"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.QueryEditorActivationKeyEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Editors.CellEditorManager.QueryActivationKey"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.QueryEditorBoundsEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Editors.CellEditorManager.QueryEditorBounds"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.QueryEditorFittedHeightEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Editors.CellEditorManager.QueryFittedHeight"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.QueryEditorFittedWidthEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Editors.CellEditorManager.QueryFittedWidth"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.QueryEditorInputCharEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Editors.CellEditorManager.QueryInputChar"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.QueryEditorInputKeyEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Editors.CellEditorManager.QueryInputKey"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.SettingControlValueEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Editors.CustomEditor.SettingControlValue"></see> and <see cref="E:Xceed.Grid.Editors.ControlViewer.SettingControlValue"></see> events.</summary>
    </member>
    <member name="T:Xceed.Grid.Editors.ValidatingEditorEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Editors.CellEditorManager.Validating"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Exporting.CellDataFormat">
      <summary>Value representing how the content of a cell is treated.</summary>
    </member>
    <member name="T:Xceed.Grid.Exporting.DetailGridsMode">
      <summary>Value representing how detail grids are handled during export.</summary>
    </member>
    <member name="T:Xceed.Grid.Exporting.CustomStyleList">
      <summary>Specialization of the CollectionBase class representing a list of <see cref="T:Xceed.Grid.Exporting.ExcelStyle"></see> objects.</summary>
    </member>
    <member name="T:Xceed.Grid.Exporting.ExcelExporter">
      <summary>The ExcelExporter class allows data from a <see cref="T:Xceed.Grid.GridControl"></see> to be exported as a spreadsheet in XML format, suitable for import into Microsoft Excel.</summary>
    </member>
    <member name="T:Xceed.Grid.Exporting.ExcelStyle">
      <summary>The ExcelStyle class defines the style to be used in the column header of the exported spreadsheet.</summary>
    </member>
    <member name="T:Xceed.Grid.Exporting.WritingCellElementEventArgs">
      <summary>Provides information on the cell element being written.</summary>
    </member>
    <member name="T:Xceed.Grid.Exporting.WritingElementEventArgs">
      <summary>Provides information on the element being written.</summary>
    </member>
    <member name="T:Xceed.Grid.Exporting.WritingRowElementEventArgs">
      <summary>Provides information on the row element being written.</summary>
    </member>
    <member name="T:Xceed.Grid.Exporting.XMLSSAttribute">
      <summary>The XMLSSAttribute class describes an attribute that can optionally be found in an XML element.</summary>
    </member>
    <member name="T:Xceed.Grid.Exporting.XMLSSAttributeCollection">
      <summary>Specialization of the CollectionBase class containing a collection of <see cref="T:Xceed.Grid.Exporting.XMLSSAttribute"></see> objects, representing the attributes of an element in an XML tree.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.CustomStyleList.Add(Xceed.Grid.Exporting.ExcelStyle)">
      <summary>Adds an <see cref="T:Xceed.Grid.Exporting.ExcelStyle"></see> to the CustomStyleList.</summary>
      <returns>The unique ID of the style to be used when referencing it in an XMLSS element's StyleID attribute.</returns>
    </member>
    <member name="M:Xceed.Grid.Exporting.CustomStyleList.Insert(System.Int32,Xceed.Grid.Exporting.ExcelStyle)">
      <summary>Inserts an <see cref="T:Xceed.Grid.Exporting.ExcelStyle"></see> object to the CustomStyleList at the specified index.</summary>
      <returns>The unique ID of the style to be used when referencing the ExcelStyle object in an XMLSS element's StyleID attribute.</returns>
    </member>
    <member name="M:Xceed.Grid.Exporting.CustomStyleList.OnClear">
      <summary>Performs additional custom processes when clearing the contents of the <see cref="T:Xceed.Grid.Exporting.CustomStyleList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.CustomStyleList.OnClearComplete">
      <summary>Performs additional custom processes after clearing the contents of the <see cref="T:Xceed.Grid.Exporting.CustomStyleList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.CustomStyleList.OnInsert(System.Int32,System.Object)">
      <summary>Performs additional custom processes before inserting a new item into the <see cref="T:Xceed.Grid.Exporting.CustomStyleList"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.CustomStyleList.OnInsertComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes after inserting a new 
            <see cref="T:Xceed.Grid.Exporting.ExcelStyle"></see> into the 
            <see cref="T:Xceed.Grid.Exporting.CustomStyleList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.CustomStyleList.OnRemove(System.Int32,System.Object)">
      <summary>Performs additional custom processes when removing an element from the <see cref="T:Xceed.Grid.Exporting.CustomStyleList"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.CustomStyleList.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes after removing an 
            <see cref="T:Xceed.Grid.Exporting.ExcelStyle"></see> from the <see cref="T:Xceed.Grid.Exporting.CustomStyleList"></see> instance.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.CustomStyleList.Remove(System.String)">
      <summary>Removes an <see cref="T:Xceed.Grid.Exporting.ExcelStyle"></see> object from the CustomStyleList with the specified style ID.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.CustomStyleList.IndexOf(Xceed.Grid.Exporting.ExcelStyle)">
      <summary>Searches for the specified <see cref="T:Xceed.Grid.Exporting.ExcelStyle"></see> and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="excelStyle"></see> 
            within the entire collection, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Grid.Exporting.CustomStyleList.IndexOf(System.String)">
      <summary>Searches for the specified ID and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>The zero-based index of the first <see cref="T:Xceed.Grid.Exporting.ExcelStyle"></see> 
            within the entire collection whose ID matches <see cref="styleID"></see>, if found; 
            otherwise, returns -1.</returns>
    </member>
    <member name="P:Xceed.Grid.Exporting.CustomStyleList.Item(System.Int32)">
      <summary>Gets the <see cref="T:Xceed.Grid.Exporting.ExcelStyle"></see> at the specified index.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.CustomStyleList.Item(System.String)">
      <summary>Gets the ExcelStyle that corresponds to <see cref="styleID"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.GetPropertyValue(System.Object)">
      <summary>Retrieves the value of the specified property in the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.Properties"></see>
            collection.</summary>
      <returns>An object representing the value of the property.</returns>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.IsPropertyDefined(System.Object)">
      <summary>Retrieves a boolean value indicating if the specified property has been explicitly set.</summary>
      <returns>true if the property has been explicitly set; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.OnCellDataFormatChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Exporting.ExcelExporter.CellDataFormatChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.OnColumnHeaderStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Exporting.ExcelExporter.ColumnHeaderStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.OnDetailGridsModeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Exporting.ExcelExporter.DetailGridsModeChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.OnGridLineColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Exporting.ExcelExporter.GridLineColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.OnIncludeColumnHeadersChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Exporting.ExcelExporter.IncludeColumnHeadersChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.OnIncludeDetailGridsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Exporting.ExcelExporter.IncludeDetailGridsChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.OnIncludeGridStylesChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Exporting.ExcelExporter.IncludeGridStylesChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.OnRepeatParentDataChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Exporting.ExcelExporter.RepeatParentDataChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.OnWritingCell(Xceed.Grid.Exporting.WritingElementEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Exporting.ExcelExporter.WritingCell"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.OnWritingColumn(Xceed.Grid.Exporting.WritingElementEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Exporting.ExcelExporter.WritingColumn"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.OnWritingRow(Xceed.Grid.Exporting.WritingRowElementEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Exporting.ExcelExporter.WritingRow"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.OnWritingTable(Xceed.Grid.Exporting.WritingElementEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Exporting.ExcelExporter.WritingTable"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.OnWritingWorkbook(Xceed.Grid.Exporting.WritingElementEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Exporting.ExcelExporter.WritingWorkbook"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.OnWritingWorksheet(Xceed.Grid.Exporting.WritingElementEventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Exporting.ExcelExporter.WritingWorksheet"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.RaiseEvent(System.Object,System.EventArgs)">
      <summary>Raises the specified event.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.RemovePropertyValue(System.Object)">
      <summary>Removes the specified property from the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.Properties"></see> collection.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.ResetCellDataFormat">
      <summary>Resets the value of the <see cref="T:Xceed.Grid.Exporting.CellDataFormat"></see> property
            to its default value, <see cref="P:Xceed.Grid.Exporting.ExcelExporter.DefaultCellDataFormat"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.ResetColumnHeaderStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.ColumnHeaderStyle"></see> property
            to its default value, <see cref="P:Xceed.Grid.Exporting.ExcelExporter.DefaultColumnHeaderStyle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.ResetDetailGridsMode">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.DetailGridsMode"></see> property
            to its default value, <see cref="P:Xceed.Grid.Exporting.ExcelExporter.DefaultDetailGridsMode"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.ResetGridLineColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.GridLineColor"></see> property
            to its default value, <see cref="P:Xceed.Grid.Exporting.ExcelExporter.DefaultGridLineColor"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.ResetIncludeColumnHeaders">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.IncludeColumnHeaders"></see> property
            to its default value, <see cref="P:Xceed.Grid.Exporting.ExcelExporter.DefaultIncludeColumnHeaders"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.ResetIncludeDetailGrids">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.IncludeDetailGrids"></see> property
            to its default value, <see cref="P:Xceed.Grid.Exporting.ExcelExporter.DefaultIncludeDetailGrids"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.ResetIncludeGridStyles">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.IncludeGridStyles"></see> property
            to its default value, <see cref="P:Xceed.Grid.Exporting.ExcelExporter.DefaultIncludeGridStyles"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.ResetRepeatParentData">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.RepeatParentData"></see> property
            to its default value, <see cref="P:Xceed.Grid.Exporting.ExcelExporter.DefaultRepeatParentData"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.Export(Xceed.Grid.GridControl,System.String)">
      <summary>Exports the data of a <see cref="T:Xceed.Grid.GridControl"></see> to a spreadsheet in XML suitable for import into Microsoft Excel.</summary>
      <exception caption="" cref="System.IO.IOException">Can be thrown if access to the specified file is denied.</exception>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.Export(Xceed.Grid.DetailGrid,System.String)">
      <summary>Exports the data of a <see cref="T:Xceed.Grid.DetailGrid"></see> to a spreadsheet in XML suitable for import into Microsoft Excel.</summary>
      <exception caption="" cref="System.IO.IOException">Can be thrown if access to the specified file is denied.</exception>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.Export(Xceed.Grid.GridControl,System.IO.Stream)">
      <summary>Exports the data of a <see cref="T:Xceed.Grid.GridControl"></see> in XML to a stream.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.Export(Xceed.Grid.GridControl,System.IO.Stream,System.Boolean)">
      <summary>Exports the data of a <see cref="T:Xceed.Grid.GridControl"></see> in XML to a stream and specifying if the output stream should be closed once the process is finished.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.Export(Xceed.Grid.DetailGrid,System.IO.Stream)">
      <summary>Exports the data of a <see cref="T:Xceed.Grid.DetailGrid"></see> in XML to a stream.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelExporter.Export(Xceed.Grid.DetailGrid,System.IO.Stream,System.Boolean)">
      <summary>Exports the data of a <see cref="T:Xceed.Grid.DetailGrid"></see> in XML to a stream and specifying if the output stream should be closed once the process is finished.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelExporter.CellDataFormat">
      <summary>Gets or sets an <see cref="T:Xceed.Grid.Exporting.CellDataFormat"></see> value
            representing how the content of a cell is treated.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelExporter.ColumnHeaderStyle">
      <summary>Gets or sets the style of the column header.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelExporter.CustomStyles">
      <summary>Gets a list of custom styles.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelExporter.DefaultCellDataFormat">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.CellDataFormat"></see> 
            property</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelExporter.DefaultColumnHeaderStyle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.ColumnHeaderStyle"></see> property</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelExporter.DefaultDetailGridsMode">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.DetailGridsMode"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelExporter.DefaultGridLineColor">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.GridLineColor"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelExporter.DefaultIncludeColumnHeaders">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.IncludeColumnHeaders"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelExporter.DefaultIncludeDetailGrids">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.IncludeDetailGrids"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelExporter.DefaultIncludeGridStyles">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.IncludeGridStyles"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelExporter.DefaultRepeatParentData">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.RepeatParentData"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelExporter.DetailGridsMode">
      <summary>Gets or sets the mode used to determine how detail grids are presented in
            the exported grid.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelExporter.Events">
      <summary>Gets a list of the events to which the grid element is subscribed.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelExporter.GridLineColor">
      <summary>Gets or sets the color of the spreadsheet's grid lines.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelExporter.IncludeColumnHeaders">
      <summary>Gets or sets a boolean value indicating whether column headers are to be included in the exported grid.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelExporter.IncludeDetailGrids">
      <summary>Gets or sets a boolean value indicating whether detail grids are to be included in the exported grid.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelExporter.IncludeGridStyles">
      <summary>Gets or sets a boolean value indicating whether the styles of the GridControl whose data is to be exported should be used in the exported spreadsheet.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelExporter.Properties">
      <summary>Gets a collection of property names whose values have been explicitly set
            as well as the corresponding values.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelExporter.RepeatParentData">
      <summary>Gets or sets a boolean value indicating whether parent data rows should be repeated with every child row in the exported grid.</summary>
    </member>
    <member name="E:Xceed.Grid.Exporting.ExcelExporter.CellDataFormatChanged">
      <summary>Raised when the value of the <see cref="T:Xceed.Grid.Exporting.CellDataFormat"></see> 
            property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Exporting.ExcelExporter.ColumnHeaderStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.ColumnHeaderStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Exporting.ExcelExporter.DetailGridsModeChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.DetailGridsMode"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Exporting.ExcelExporter.GridLineColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.GridLineColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Exporting.ExcelExporter.IncludeColumnHeadersChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.IncludeColumnHeaders"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Exporting.ExcelExporter.IncludeDetailGridsChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.IncludeDetailGrids"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Exporting.ExcelExporter.IncludeGridStylesChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.IncludeGridStyles"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Exporting.ExcelExporter.RepeatParentDataChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Exporting.ExcelExporter.RepeatParentData"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Exporting.ExcelExporter.WritingCell">
      <summary>Raised when a Cell element is being written.</summary>
    </member>
    <member name="E:Xceed.Grid.Exporting.ExcelExporter.WritingColumn">
      <summary>Raised when a Column element is being written.</summary>
    </member>
    <member name="E:Xceed.Grid.Exporting.ExcelExporter.WritingRow">
      <summary>Raised when a Row element is being written.</summary>
    </member>
    <member name="E:Xceed.Grid.Exporting.ExcelExporter.WritingTable">
      <summary>Raised when a Table element is being written.</summary>
    </member>
    <member name="E:Xceed.Grid.Exporting.ExcelExporter.WritingWorkbook">
      <summary>Raised when a Workbook element is being written.</summary>
    </member>
    <member name="E:Xceed.Grid.Exporting.ExcelExporter.WritingWorksheet">
      <summary>Raised when a Worksheet element is being written</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelStyle.#ctor(Xceed.Grid.GridElement)">
      <summary>Initializes a new instance of the ExcelStyle class using the appearance of the specified <see cref="T:Xceed.Grid.GridElement"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelStyle.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Drawing.ContentAlignment)">
      <summary>Initializes a new instance of the ExcelStyle class using the specified colors, font and alignment.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelStyle.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current ExcelStyle.</summary>
      <returns>true if the specified object is equal to the current ExcelStyle; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Exporting.ExcelStyle.GetHashCode">
      <summary>Serves as a hash function for the ExcelStyle, suitable for use in hashing algorithms 
            and data structures like a hash table.</summary>
      <returns>A hash code for the current ExcelStyle.</returns>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelStyle.BackColor">
      <summary>Gets the background color of the ExcelStyle.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelStyle.ContentAlignment">
      <summary>Gets the content alignment of the ExcelStyle.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelStyle.Font">
      <summary>Gets the font of the ExcelStyle.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelStyle.ForeColor">
      <summary>Gets the foreground color of the ExcelStyle.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.ExcelStyle.ID">
      <summary>Gets the ExcelStyle's name.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.WritingCellElementEventArgs.#ctor(Xceed.Grid.Exporting.XMLSSAttributeCollection,Xceed.Grid.Cell,Xceed.Grid.Exporting.XMLSSAttribute,System.String)">
      <summary>Initializes a new instance of the WritingCellElementEventArgs class, specifying the attributes, cell, typeAttribute and
            value to use.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.WritingCellElementEventArgs.Cell">
      <summary>Gets the cell being written.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.WritingCellElementEventArgs.TypeAttribute">
      <summary>Gets the Type attribute of the cell's Data element.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.WritingCellElementEventArgs.Value">
      <summary>Gets or sets the value of the Data element of the cell to be written to the document.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.WritingElementEventArgs.#ctor(Xceed.Grid.Exporting.XMLSSAttributeCollection)">
      <summary>Initializes a new instance of the WritingElementEventArgs class, specifying the attributes to use.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.WritingElementEventArgs.Attributes">
      <summary>Gets a collection of <see cref="T:Xceed.Grid.Exporting.XMLSSAttribute"></see> objects representing the attributes 
            of an element in an XML tree.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.WritingRowElementEventArgs.#ctor(Xceed.Grid.Exporting.XMLSSAttributeCollection,Xceed.Grid.Row)">
      <summary>Initializes a new instance of the WritingCellElementEventArgs class, specifying the attributes, cell, typeAttribute and
            value to use.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.WritingRowElementEventArgs.Row">
      <summary>Gets the row being written.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.XMLSSAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the XMLSSAttribute class with the default XMLSS prefix and namespace, but using the specified localName and value.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.XMLSSAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the XMLSSAttribute class using the specified XMLSS prefix, localName, namespace and value.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.XMLSSAttribute.LocalName">
      <summary>Gets the localName of the XMLSSAttribute.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.XMLSSAttribute.NameSpace">
      <summary>Gets the namespace of the XMLSSAttribute.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.XMLSSAttribute.Prefix">
      <summary>Gets the prefix of the XMLSSAttribute.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.XMLSSAttribute.Value">
      <summary>Gets the value of the XMLSSAttribute.</summary>
    </member>
    <member name="F:Xceed.Grid.Exporting.XMLSSAttribute.DefaultNameSpace">
      <summary>Returns the default namespace for an XML spreadsheet attribute.</summary>
    </member>
    <member name="F:Xceed.Grid.Exporting.XMLSSAttribute.DefaultPrefix">
      <summary>Returns the default prefix for an XML spreadsheet attribute.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.XMLSSAttributeCollection.#ctor">
      <summary>Initializes a new instance of the XMLSSAttributeCollection class.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.XMLSSAttributeCollection.Add(Xceed.Grid.Exporting.XMLSSAttribute)">
      <summary>Adds an <see cref="T:Xceed.Grid.Exporting.XMLSSAttribute"></see> to the XMLSSAttributeCollection.</summary>
      <returns>The index of the XMLSSAttribute added to the collection.</returns>
    </member>
    <member name="M:Xceed.Grid.Exporting.XMLSSAttributeCollection.AddRange(Xceed.Grid.Exporting.XMLSSAttributeCollection)">
      <summary>Adds the elements of an <see cref="T:Xceed.Grid.Exporting.XMLSSAttributeCollection"></see> to the collection.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.XMLSSAttributeCollection.OnInsert(System.Int32,System.Object)">
      <summary>Performs additional custom processes before inserting a new item into the <see cref="T:Xceed.Grid.Exporting.XMLSSAttributeCollection"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.XMLSSAttributeCollection.Contains(System.String,System.String)">
      <summary>Retrieves a boolean value indicating whether a specific <see cref="T:Xceed.Grid.Exporting.XMLSSAttribute"></see> object exists in the collection.</summary>
      <returns>true if the <see cref="T:Xceed.Grid.Exporting.XMLSSAttribute"></see> object exists in the collection; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Exporting.XMLSSAttributeCollection.Contains(System.String)">
      <summary>Retrieves a boolean value indicating whether a specific <see cref="T:Xceed.Grid.Exporting.XMLSSAttribute"></see> object exists in the collection.</summary>
      <returns>true if the <see cref="T:Xceed.Grid.Exporting.XMLSSAttribute"></see> object exists in the collection; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Exporting.XMLSSAttributeCollection.Contains(Xceed.Grid.Exporting.XMLSSAttribute)">
      <summary>Retrieves a boolean value indicating whether a specific <see cref="T:Xceed.Grid.Exporting.XMLSSAttribute"></see> object exists in the collection.</summary>
      <returns>true if the <see cref="T:Xceed.Grid.Exporting.XMLSSAttribute"></see> object exists in the collection; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Exporting.XMLSSAttributeCollection.IndexOf(System.String,System.String)">
      <summary>Searches for the <see cref="T:Xceed.Grid.Exporting.XMLSSAttribute"></see> with the specified prefix and local name and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>The zero-based index of the first occurrence of an XMLSSAttribute matching <see cref="prefix"></see> 
            and <see cref="localName"></see> within the entire collection, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Grid.Exporting.XMLSSAttributeCollection.IndexOf(System.String)">
      <summary>Searches for the <see cref="T:Xceed.Grid.Exporting.XMLSSAttribute"></see> using only the specified local name and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>The zero-based index of the first occurrence of an XMLSSAttribute matching 
            <see cref="localName"></see> within the entire collection, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Grid.Exporting.XMLSSAttributeCollection.IndexOf(Xceed.Grid.Exporting.XMLSSAttribute)">
      <summary>Searches for the <see cref="T:Xceed.Grid.Exporting.XMLSSAttribute"></see> using only the specified local name and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="value"></see> 
            within the entire list, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Grid.Exporting.XMLSSAttributeCollection.Remove(System.String,System.String)">
      <summary>Removes an <see cref="T:Xceed.Grid.Exporting.XMLSSAttribute"></see> object with the specified prefix and localName from the collection.</summary>
    </member>
    <member name="M:Xceed.Grid.Exporting.XMLSSAttributeCollection.Remove(System.String)">
      <summary>Removes an <see cref="T:Xceed.Grid.Exporting.XMLSSAttribute"></see> object with the specified localName from the collection.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.XMLSSAttributeCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:Xceed.Grid.Exporting.XMLSSAttribute"></see> at the specified index.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.XMLSSAttributeCollection.Item(System.String,System.String)">
      <summary>Gets the <see cref="T:Xceed.Grid.Exporting.XMLSSAttribute"></see> with the specified prefix and localName.</summary>
    </member>
    <member name="P:Xceed.Grid.Exporting.XMLSSAttributeCollection.Item(System.String)">
      <summary>Gets the <see cref="T:Xceed.Grid.Exporting.XMLSSAttribute"></see> matching the specified localName.</summary>
    </member>
    <member name="T:Xceed.Grid.Exporting.WritingCellElementEventHandler">
      <summary>Represents the method that will handle the <B>Exporting.WritingCellElement</B> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Exporting.WritingElementEventHandler">
      <summary>Represents the method that will handle the <B>Exporting.WritingElement</B> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Exporting.WritingRowElementEventHandler">
      <summary>Represents the method that will handle the <B>Exporting.WritingRowElement</B> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.ColumnLayout">
      <summary>Value representing how columns which surpass the available page width are printed in a report.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.ImageAutoSize">
      <summary>Value representing how the image size will be handled in a report.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.PageBreak">
      <summary>Value representing when a page break should be applied.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.ReportLineThickness">
      <summary>Value representing the thickness of a <see cref="T:Xceed.Grid.Reporting.ReportLine"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.RowHeightExpansion">
      <summary>Value representing how the height of the rows contained in the group expand to their content.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.RowLayout">
      <summary>
        <B>OBSOLETE: The RowLayout enumeration is obsolete and has been replaced by the <see cref="T:Xceed.Grid.Reporting.ColumnLayout"></see> enumeration.</B> Value representing how rows which surpass the available page width are printed.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.Unit">
      <summary>Value representing a unit of measurement.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.CellViewerManagerReportStyle">
      <summary>Represents the report style of a <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.ColumnReportStyle">
      <summary>Represents the report style of a <see cref="T:Xceed.Grid.Column"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.GridControlReportStyle">
      <summary>Represents the report style of a <see cref="T:Xceed.Grid.GridControl"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.GridElementReportStyle">
      <summary>Represents the report style of a <see cref="T:Xceed.Grid.GridElement"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.GridReportStyle">
      <summary>Represents the report style of a grid.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.GridReportStyleList">
      <summary>Contains a list of <see cref="T:Xceed.Grid.Reporting.GridReportStyle"></see> objects.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.GroupReportStyle">
      <summary>Represents the report style of a <see cref="T:Xceed.Grid.Group"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.GroupReportStyleList">
      <summary>Contains a list of <see cref="T:Xceed.Grid.Reporting.GroupReportStyle"></see> objects.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.PropertyNameCollection">
      <summary>Contains a collection of <B>case-sensitive </B>property names.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.ReportLine">
      <summary>Class which represents a horizontal line, above or below a row or group, when it is printed in a report.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.ReportSettings">
      <summary>Class which represents the report settings of a <see cref="T:Xceed.Grid.GridControl"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.RowReportStyle">
      <summary>Represents the report style of a <see cref="T:Xceed.Grid.Row"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.RowReportStyleList">
      <summary>Contains a list of <see cref="T:Xceed.Grid.Reporting.RowReportStyle"></see> objects.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.SummaryRowReportStyle">
      <summary>Represents the report style of a <see cref="T:Xceed.Grid.SummaryRow"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.UnitConverter">
      <summary>The UnitConverter class allows a value to be converted to and from a specified Unit, or to and from hundredths of an inch.</summary>
    </member>
    <member name="T:Xceed.Grid.Reporting.VisualGridElementReportStyle">
      <summary>Represents the report style of a <see cref="T:Xceed.Grid.VisualGridElement"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.CellViewerManagerReportStyle.OnImageAlignmentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageAlignmentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.CellViewerManagerReportStyle.OnImageAreaChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageAreaChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.CellViewerManagerReportStyle.OnImageAutoSizeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageAutoSizeChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.CellViewerManagerReportStyle.OnImagePaddingChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImagePaddingChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.CellViewerManagerReportStyle.OnImageSizeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageSizeChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.CellViewerManagerReportStyle.OnImageStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.CellViewerManagerReportStyle.OnPreserveImageAspectRatioChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.CellViewerManagerReportStyle.PreserveImageAspectRatioChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.CellViewerManagerReportStyle.OnTextPaddingChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.CellViewerManagerReportStyle.TextPaddingChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.CellViewerManagerReportStyle.Reset">
      <summary>Resets all of the properties that have been explicitly set back to their default values.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ResetImageAlignment">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageAlignment"></see> property to its default value, ImageAlignment.CellAmbient.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ResetImageArea">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageArea"></see> property to its default value, ImageArea.None.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ResetImageAutoSize">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageAutoSize"></see> property to its default value, <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageAutoSize"></see>.ImageScreenSize.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ResetImagePadding">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImagePadding"></see> property to its default value, ImagePadding.Empty.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ResetImageSize">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageSize"></see> property to its default value, Size.Empty.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ResetImageStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageStyle"></see> property to its default value, ImageStyle.Align.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ResetPreserveImageAspectRatio">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.PreserveImageAspectRatio"></see> property to its default value, true.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ResetTextPadding">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.TextPadding"></see> property to its default value, Margins.Empty.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageAlignment">
      <summary>Gets or sets the alignment of the image in the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageArea"></see> when the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>
            is printed in a report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageArea">
      <summary>Gets or sets the area where the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>'s image is displayed when it is
            printed in a report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageAutoSize">
      <summary>Gets or sets a value representing how the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>'s 
            image size will be handled in a report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImagePadding">
      <summary>Gets or sets the padding surrounding the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>'s image, in hundredths of an inch, when 
             it is printed in a report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageSize">
      <summary>Gets or sets the size of the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>'s image when it is printed in a report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageStyle">
      <summary>Gets or sets a value indicating the style with which the image is displayed when the 
            <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see> is printed in a report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.IsImageAlignmentDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageAlignment"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.IsImageAreaDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageArea"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.IsImageAutoSizeDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageAutoSize"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.IsImagePaddingDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImagePadding"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.IsImageSizeDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageSize"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.IsImageStyleDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageStyle"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.IsPreserveImageAspectRatioDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.PreserveImageAspectRatio"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.IsTextPaddingDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.TextPadding"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.PreserveImageAspectRatio">
      <summary>Gets or sets a boolean value indicating if the image should preserve its aspect ratio when the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see> is printed in a report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.Properties">
      <summary>Gets a collection of property names whose values have been explicitly set
            as well as the corresponding values.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.TextPadding">
      <summary>Gets or sets the padding surrounding the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>'s text, in hundredths of an inch, when 
             it is printed in a report.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageAlignmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageAlignment"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageAreaChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageArea"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageAutoSizeChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageAutoSize"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImagePaddingChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImagePadding"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageSizeChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageSize"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.ImageStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.CellViewerManagerReportStyle.PreserveImageAspectRatioChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.PreserveImageAspectRatio"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.CellViewerManagerReportStyle.TextPaddingChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.CellViewerManagerReportStyle.TextPadding"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ColumnReportStyle.#ctor(Xceed.Grid.Column)">
      <summary>Initializes a new instance of the ColumnReportStyle class specifying the <see cref="T:Xceed.Grid.Column"></see> for which the report style is to be created.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ColumnReportStyle.OnWidthChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.ColumnReportStyle.WidthChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ColumnReportStyle.ResetWidth">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.ColumnReportStyle.Width"></see> property to its default value, <see cref="P:Xceed.Grid.Column.Width"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ColumnReportStyle.DefaultVisible">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.Visible"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ColumnReportStyle.IsWidthDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.ColumnReportStyle.Width"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ColumnReportStyle.Width">
      <summary>Gets or sets the width, in hundredths of an inch, of the column when it is printed in a report.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.ColumnReportStyle.WidthChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.ColumnReportStyle.Width"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridControlReportStyle.#ctor">
      <summary>Initializes a new instance of the GridControlReportStyle class.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridControlReportStyle.ResetFixedFooterRow">
      <summary>Resets the property values of the <see cref="P:Xceed.Grid.Reporting.GridControlReportStyle.FixedFooterRow"></see> report style.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridControlReportStyle.ResetFixedHeaderRow">
      <summary>Resets the property values of the <see cref="P:Xceed.Grid.Reporting.GridControlReportStyle.FixedHeaderRow"></see> report style.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridControlReportStyle.FixedFooterRow">
      <summary>Gets the report style of the <see cref="T:Xceed.Grid.Row"></see>s contained in a 
            <see cref="T:Xceed.Grid.GridControl"></see>'s <see cref="P:Xceed.Grid.GridControl.FixedFooterRows"></see> section.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridControlReportStyle.FixedHeaderRow">
      <summary>Gets the report style of the <see cref="T:Xceed.Grid.Row"></see>s contained in a 
            <see cref="T:Xceed.Grid.GridControl"></see>'s <see cref="P:Xceed.Grid.GridControl.FixedHeaderRows"></see> section.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridControlReportStyle.IsFixedFooterRowDefined">
      <summary>Gets a boolean value indicating if one or more properties of the <see cref="P:Xceed.Grid.Reporting.GridControlReportStyle.FixedFooterRow"></see> report style have been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridControlReportStyle.IsFixedHeaderRowDefined">
      <summary>Gets a boolean value indicating if one or more properties of the <see cref="P:Xceed.Grid.Reporting.GridControlReportStyle.FixedHeaderRow"></see> report style have been explicitly set.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.#ctor">
      <summary>Initializes a new instance of the GridElementReportStyle class.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.#ctor(Xceed.Grid.Reporting.GridElementReportStyle)">
      <summary>Initializes a new instance of the GridElementReportStyle class specifying a
            GridElementReportStyle from which to copy property values.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.Clone">
      <summary>Creates an exact copy of the style.</summary>
      <returns>A reference to the newly created <see cref="T:Xceed.Grid.Reporting.GridElementReportStyle"></see>.</returns>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.OnBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GridElementReportStyle.BackColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.OnClipPartialLineChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GridElementReportStyle.ClipPartialLineChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.OnFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GridElementReportStyle.FontChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.OnForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GridElementReportStyle.ForeColorChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.OnHorizontalAlignmentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GridElementReportStyle.HorizontalAlignmentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.OnTrimmingChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GridElementReportStyle.TrimmingChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.OnVerticalAlignmentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GridElementReportStyle.VerticalAlignmentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.OnVisibleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GridElementReportStyle.VisibleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.OnWordWrapChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GridElementReportStyle.WordWrapChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.Reset">
      <summary>Resets all of the properties that have been explicitly set back to their default values.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.ResetBackColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.BackColor"></see> property to its default value, <see cref="F:System.Drawing.Color.Empty"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.ResetClipPartialLine">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.ClipPartialLine"></see> property to its default value, true.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.ResetFont">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.Font"></see> property to its default value, $$NULL$$.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.ResetForeColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.ForeColor"></see> property to its default value, <see cref="F:System.Drawing.Color.Empty"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.ResetHorizontalAlignment">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.HorizontalAlignment"></see> property to its default value, HorizontalAlignment.Default.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.ResetTrimming">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.Trimming"></see> property to its default value, StringTrimming.EllipsisWord.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.ResetVerticalAlignment">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.VerticalAlignment"></see> property to its default value, VerticalAlignment.Default.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.ResetVisible">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.Visible"></see> property to its default value, true.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridElementReportStyle.ResetWordWrap">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.WordWrap"></see> property to its default value, true.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.BackColor">
      <summary>Gets or sets the background color of the grid element when it is printed in a report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.ClipPartialLine">
      <summary>Gets or sets a boolean value indicating if partial lines should be clipped.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.DefaultVisible">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.Visible"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.Font">
      <summary>Gets or sets the font that the grid element will have when it is printed in a report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.ForeColor">
      <summary>Gets or sets the foreground color that the grid element will have when it is printed in a report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment that the grid element will have when it is printed in a report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.IsBackColorDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.BackColor"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.IsClipPartialLineDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.ClipPartialLine"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.IsFontDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.Font"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.IsForeColorDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.ForeColor"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.IsHorizontalAlignmentDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.HorizontalAlignment"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.IsTrimmingDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.Trimming"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.IsVerticalAlignmentDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.VerticalAlignment"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.IsVisibleDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.Visible"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.IsWordWrapDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.WordWrap"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.Properties">
      <summary>Gets a collection of property names whose values have been explicitly set
            as well as the corresponding values.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.Trimming">
      <summary>Gets or sets a value indicating how the text displayed in the grid element will be trimmed when it exceeds the 
            edges of the layout rectangle.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.VerticalAlignment">
      <summary>Gets or sets the vertical alignment that the grid element will have when it is printed in a report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.Visible">
      <summary>Gets or sets a boolean value indicating if the grid element is visible when it is printed in a report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridElementReportStyle.WordWrap">
      <summary>Gets or sets a boolean value indicating if the text of the grid element should be wrapped when it is printed in a report.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GridElementReportStyle.BackColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.BackColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GridElementReportStyle.ClipPartialLineChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.ClipPartialLine"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GridElementReportStyle.FontChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.Font"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GridElementReportStyle.ForeColorChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.ForeColor"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GridElementReportStyle.HorizontalAlignmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.HorizontalAlignment"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GridElementReportStyle.TrimmingChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.Trimming"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GridElementReportStyle.VerticalAlignmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.VerticalAlignment"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GridElementReportStyle.VisibleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.Visible"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GridElementReportStyle.WordWrapChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GridElementReportStyle.WordWrap"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridReportStyle.#ctor">
      <summary>Initializes a new instance of the GridReportStyle class.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridReportStyle.OnBackgroundImageAlignmentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GridReportStyle.BackgroundImageAlignmentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridReportStyle.OnBackgroundImageChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GridReportStyle.BackgroundImageChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridReportStyle.OnBackgroundImageStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GridReportStyle.BackgroundImageStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridReportStyle.ResetBackgroundImage">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GridReportStyle.BackgroundImage"></see> property to its default value, $$NULL$$.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridReportStyle.ResetBackgroundImageAlignment">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GridReportStyle.BackgroundImageAlignment"></see> property to its default value, ContentAlignment.MiddleCenter.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridReportStyle.ResetBackgroundImageStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GridReportStyle.BackgroundImageStyle"></see> property to its default value, <see cref="T:Xceed.Grid.ImageStyle"></see>.Align.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridReportStyle.ResetColumnManagerRow">
      <summary>Resets the property values of the <see cref="P:Xceed.Grid.Reporting.GridReportStyle.ColumnManagerRow"></see> report style.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridReportStyle.BackgroundImage">
      <summary>Gets or sets the background image of the report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridReportStyle.BackgroundImageAlignment">
      <summary>Gets or sets the alignment of the report's <see cref="P:Xceed.Grid.Reporting.GridReportStyle.BackgroundImage"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridReportStyle.BackgroundImageStyle">
      <summary>Gets or sets the style of the report's <see cref="P:Xceed.Grid.Reporting.GridReportStyle.BackgroundImage"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridReportStyle.BottomMargin">
      <summary>Gets or sets the height of the grid's bottom margin, in hundredths of an inch.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridReportStyle.ColumnManagerRow">
      <summary>Gets the report style of the <see cref="T:Xceed.Grid.ColumnManagerRow"></see>s contained in the report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridReportStyle.DataRowCount">
      <summary>Gets the number of <see cref="T:Xceed.Grid.Reporting.RowReportStyle"></see>s contained in <see cref="P:Xceed.Grid.Reporting.GridReportStyle.DataRows"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridReportStyle.DataRows">
      <summary>Gets the report styles of the <see cref="T:Xceed.Grid.DataRow"></see>s contained in the report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridReportStyle.DefaultBottomMargin">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Reporting.GridReportStyle.BottomMargin"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridReportStyle.DefaultTopMargin">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Reporting.GridReportStyle.TopMargin"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridReportStyle.DetailGridCount">
      <summary>Gets the number of <see cref="T:Xceed.Grid.Reporting.GridReportStyle"></see>s contained in <see cref="P:Xceed.Grid.Reporting.GridReportStyle.DetailGrids"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridReportStyle.DetailGrids">
      <summary>Gets the report styles of the <see cref="T:Xceed.Grid.DetailGrid"></see>s contained in the report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridReportStyle.GroupLevelCount">
      <summary>Gets the number of <see cref="T:Xceed.Grid.Reporting.GroupReportStyle"></see>s contained in <see cref="P:Xceed.Grid.Reporting.GridReportStyle.GroupLevels"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridReportStyle.GroupLevels">
      <summary>Gets the report styles of the <see cref="T:Xceed.Grid.Group"></see>s contained in the report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridReportStyle.IsBackgroundImageAlignmentDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GridReportStyle.BackgroundImageAlignment"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridReportStyle.IsBackgroundImageDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GridReportStyle.BackgroundImage"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridReportStyle.IsBackgroundImageStyleDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GridReportStyle.BackgroundImageStyle"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridReportStyle.IsColumnManagerRowDefined">
      <summary>Gets a boolean value indicating if one or more properties of the <see cref="P:Xceed.Grid.Reporting.GridReportStyle.ColumnManagerRow"></see> report style have been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridReportStyle.TopMargin">
      <summary>Gets or sets the height of the grid's top margin, in hundredths of an inch.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GridReportStyle.BackgroundImageAlignmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GridReportStyle.BackgroundImageAlignment"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GridReportStyle.BackgroundImageChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GridReportStyle.BackgroundImage"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GridReportStyle.BackgroundImageStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GridReportStyle.BackgroundImageStyle"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridReportStyleList.#ctor">
      <summary>Initializes a new instance of the GridReportStyleList class.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridReportStyleList.#ctor(System.Int32)">
      <summary>Initializes a new instance of the GridReportStyleList class specifying its initial capacity.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridReportStyleList.Add(Xceed.Grid.Reporting.GridReportStyle)">
      <summary>Adds a <see cref="T:Xceed.Grid.Reporting.GridReportStyle"></see> to the list.</summary>
      <returns>The index at which the <see cref="T:Xceed.Grid.Reporting.GridReportStyle"></see> was added.</returns>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridReportStyleList.AddRange(Xceed.Grid.Reporting.GridReportStyle[])">
      <summary>Adds the elements of a <see cref="T:Xceed.Grid.Reporting.GridReportStyle"></see> array to the end of the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridReportStyleList.Clear">
      <summary>Removes all <see cref="T:Xceed.Grid.Reporting.RowReportStyle"></see> objects from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridReportStyleList.Contains(Xceed.Grid.Reporting.GridReportStyle)">
      <summary>Retrieves a boolean value indicating if a specific <see cref="T:Xceed.Grid.Reporting.GridReportStyle"></see> exists in the list.</summary>
      <returns>true if the <see cref="T:Xceed.Grid.Reporting.GridReportStyle"></see> exists in the list; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridReportStyleList.IndexOf(Xceed.Grid.Reporting.GridReportStyle)">
      <summary>Searches for the specified <see cref="T:Xceed.Grid.Reporting.GridReportStyle"></see> and returns the zero-based index of the first 
            occurrence within the list.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="value"></see> 
            within the entire list, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridReportStyleList.Insert(System.Int32,Xceed.Grid.Reporting.GridReportStyle)">
      <summary>Inserts a <see cref="T:Xceed.Grid.Reporting.GridReportStyle"></see> into the list at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridReportStyleList.OnInsert(System.Int32@,System.Object,System.Boolean@)">
      <summary>Performs additional custom processes before inserting a new <see cref="T:Xceed.Grid.Reporting.GridReportStyle"></see> 
            into the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridReportStyleList.Remove(Xceed.Grid.Reporting.GridReportStyle)">
      <summary>Removes the <see cref="T:Xceed.Grid.Reporting.GridReportStyle"></see> from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GridReportStyleList.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:Xceed.Grid.Reporting.GridReportStyle"></see> from the list at the specified index.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GridReportStyleList.Item(System.Int32)">
      <summary>Gets the <see cref="T:Xceed.Grid.Reporting.GridReportStyle"></see> at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.#ctor">
      <summary>Initializes a new instance of the GroupReportStyle class.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.OnBottomMarginChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GroupReportStyle.BottomMarginChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.OnCollapsedChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GroupReportStyle.CollapsedChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.OnKeepTogetherChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GroupReportStyle.KeepTogetherChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.OnPageBreakChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GroupReportStyle.PageBreakChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.OnRowHeightChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GroupReportStyle.RowHeightChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.OnRowHeightExpansionChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GroupReportStyle.RowHeightExpansionChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.OnRowHeightExpansionLimitChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GroupReportStyle.RowHeightExpansionLimitChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.OnSideMarginWidthChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GroupReportStyle.SideMarginWidthChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.OnTopMarginChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.GroupReportStyle.TopMarginChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.ResetBottomBorder">
      <summary>Resets the property values of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.BottomBorder"></see> report style.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.ResetBottomMargin">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.BottomMargin"></see> property to its default value, <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.DefaultBottomMargin"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.ResetCollapsed">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.Collapsed"></see> property to its default value, false.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.ResetFooterRow">
      <summary>Resets the property values of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.FooterRow"></see> report style.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.ResetGroupManagerRow">
      <summary>Resets the property values of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.GroupManagerRow"></see> report style.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.ResetHeaderRow">
      <summary>Resets the property values of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.HeaderRow"></see> report style.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.ResetKeepTogether">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.KeepTogether"></see> property to its default value, <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.DefaultKeepTogether"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.ResetPageBreak">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.PageBreak"></see> property to its default value, <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.DefaultPageBreak"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.ResetRowHeight">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.RowHeight"></see> property to its default value, 0.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.ResetRowHeightExpansion">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.RowHeightExpansion"></see> property to its default value, NeverExpand.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.ResetRowHeightExpansionLimit">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.RowHeightExpansionLimit"></see> property to its default value, 0.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.ResetSideMarginWidth">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.SideMarginWidth"></see> property to its default value, 10.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.ResetSummaryRow">
      <summary>Resets the property values of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.SummaryRow"></see> report style.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.ResetTopBorder">
      <summary>Resets the property values of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.TopBorder"></see> report style.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyle.ResetTopMargin">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.TopMargin"></see> property to its default value, <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.DefaultTopMargin"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.BottomBorder">
      <summary>Gets the report style of the group's bottom border.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.BottomMargin">
      <summary>Gets or sets the height of the group's bottom margin, in hundredths of an inch.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.Collapsed">
      <summary>Gets or sets a boolean value indicating if the group is collapsed when it is printed in the report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.DefaultBottomMargin">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.BottomMargin"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.DefaultKeepTogether">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.KeepTogether"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.DefaultPageBreak">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.PageBreak"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.DefaultTopMargin">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.TopMargin"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.FooterRow">
      <summary>Gets the report style of the <see cref="T:Xceed.Grid.Row"></see>s contained in the 
            <see cref="T:Xceed.Grid.Group"></see>'s <see cref="P:Xceed.Grid.GroupBase.FooterRows"></see> section.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.GroupManagerRow">
      <summary>Gets the report style of the <see cref="T:Xceed.Grid.GroupManagerRow"></see>s contained in the group.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.HeaderRow">
      <summary>Gets the report style of the <see cref="T:Xceed.Grid.Row"></see>s contained in the 
            <see cref="T:Xceed.Grid.Group"></see>'s <see cref="P:Xceed.Grid.GroupBase.HeaderRows"></see> section.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.IsBottomBorderDefined">
      <summary>Gets a boolean value indicating if one or more properties of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.BottomBorder"></see> report style have been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.IsBottomMarginDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.BottomMargin"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.IsCollapsedDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.Collapsed"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.IsFooterRowDefined">
      <summary>Gets a boolean value indicating if one or more properties of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.FooterRow"></see> report style have been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.IsGroupManagerRowDefined">
      <summary>Gets a boolean value indicating if one or more properties of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.GroupManagerRow"></see> report style have been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.IsHeaderRowDefined">
      <summary>Gets a boolean value indicating if one or more properties of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.HeaderRow"></see> report style have been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.IsKeepTogetherDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.KeepTogether"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.IsPageBreakDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.PageBreak"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.IsRowHeightDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.RowHeight"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.IsRowHeightExpansionDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.RowHeightExpansion"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.IsRowHeightExpansionLimitDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.RowHeightExpansionLimit"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.IsSideMarginWidthDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.SideMarginWidth"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.IsSummaryRowDefined">
      <summary>Gets a boolean value indicating if one or more properties of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.SummaryRow"></see> report style have been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.IsTopBorderDefined">
      <summary>Gets a boolean value indicating if one or more properties of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.TopBorder"></see> report style have been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.IsTopMarginDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.TopMargin"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.KeepTogether">
      <summary>Gets or sets a boolean value indicating if the content of the group should be kept together when it is printed in a report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.PageBreak">
      <summary>Gets or sets a value indicating when a page break should be applied.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.RowHeight">
      <summary>Gets or sets the height, in hundredths of an inch, of the rows contained in the group.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.RowHeightExpansion">
      <summary>Gets or sets a value indicating how the height of the rows contained in the group expands
            to their content.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.RowHeightExpansionLimit">
      <summary>Gets or sets the height limit, in hundredths of an inch, of the rows contained in the group.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.SideMarginWidth">
      <summary>Gets or sets the width of the group's side margin, in hundredths of an inch.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.SummaryRow">
      <summary>Gets the report style of the <see cref="T:Xceed.Grid.SummaryRow"></see>s contained in the group.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.TopBorder">
      <summary>Gets the report style of the group's top border.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyle.TopMargin">
      <summary>Gets or sets the height of the group's top margin, in hundredths of an inch.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GroupReportStyle.BottomMarginChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.BottomMargin"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GroupReportStyle.CollapsedChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.Collapsed"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GroupReportStyle.KeepTogetherChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.KeepTogether"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GroupReportStyle.PageBreakChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.PageBreak"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GroupReportStyle.RowHeightChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.RowHeight"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GroupReportStyle.RowHeightExpansionChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.RowHeightExpansion"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GroupReportStyle.RowHeightExpansionLimitChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.RowHeightExpansionLimit"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GroupReportStyle.SideMarginWidthChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.SideMarginWidth"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.GroupReportStyle.TopMarginChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.GroupReportStyle.TopMargin"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyleList.#ctor">
      <summary>Initializes a new instance of the GroupReportStyleList class.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyleList.#ctor(System.Int32)">
      <summary>Initializes a new instance of the GroupReportStyleList class specifying its initial capacity.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyleList.Add(Xceed.Grid.Reporting.GroupReportStyle)">
      <summary>Adds a <see cref="T:Xceed.Grid.Reporting.GroupReportStyle"></see> to the list.</summary>
      <returns>The index at which the <see cref="T:Xceed.Grid.Reporting.GroupReportStyle"></see> was added.</returns>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyleList.AddRange(Xceed.Grid.Reporting.GroupReportStyle[])">
      <summary>Adds the elements of a <see cref="T:Xceed.Grid.Reporting.GroupReportStyle"></see> array to the end of the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyleList.Clear">
      <summary>Removes all <see cref="T:Xceed.Grid.Reporting.GroupReportStyle"></see> objects from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyleList.Contains(Xceed.Grid.Reporting.GroupReportStyle)">
      <summary>Retrieves a boolean value indicating if a specific <see cref="T:Xceed.Grid.Reporting.GroupReportStyle"></see> exists in the list.</summary>
      <returns>true if the <see cref="T:Xceed.Grid.Reporting.GroupReportStyle"></see> exists in the list; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyleList.IndexOf(Xceed.Grid.Reporting.GroupReportStyle)">
      <summary>Searches for the specified <see cref="T:Xceed.Grid.Reporting.GroupReportStyle"></see> and returns the zero-based index of the first 
            occurrence within the list.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="value"></see> 
            within the entire list, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyleList.Insert(System.Int32,Xceed.Grid.Reporting.GroupReportStyle)">
      <summary>Inserts a <see cref="T:Xceed.Grid.Reporting.GroupReportStyle"></see> into the list at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyleList.OnInsert(System.Int32@,System.Object,System.Boolean@)">
      <summary>Performs additional custom processes before inserting a new <see cref="T:Xceed.Grid.Reporting.GroupReportStyle"></see> 
            into the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyleList.Remove(Xceed.Grid.Reporting.GroupReportStyle)">
      <summary>Removes the <see cref="T:Xceed.Grid.Reporting.GroupReportStyle"></see> from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.GroupReportStyleList.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:Xceed.Grid.Reporting.GroupReportStyle"></see> from the list at the specified index.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.GroupReportStyleList.Item(System.Int32)">
      <summary>Gets the <see cref="T:Xceed.Grid.Reporting.GroupReportStyle"></see> at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.PropertyNameCollection.Add(System.String)">
      <summary>Adds the specified property name ot the collection.</summary>
      <returns>The zero-based index at which the property name was added to the collection.</returns>
    </member>
    <member name="M:Xceed.Grid.Reporting.PropertyNameCollection.Clear">
      <summary>Removes all property names from the collection.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.PropertyNameCollection.Contains(System.String)">
      <summary>Retrieves a boolean value indicating if the specified property name is contained in the collection.</summary>
      <returns>true if the specified property name is contained in the collection; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Reporting.PropertyNameCollection.IndexOf(System.String)">
      <summary>Retrieves the zero-based index of the specified property name.</summary>
      <returns>The zero-based index of the specified property name.</returns>
    </member>
    <member name="M:Xceed.Grid.Reporting.PropertyNameCollection.Remove(System.String)">
      <summary>Removes the specified property name from the collection.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.PropertyNameCollection.RemoveAt(System.Int32)">
      <summary>Removes the property name at the specified index from the collection.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.PropertyNameCollection.Item(System.Int32)">
      <summary>Gets the property name at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportLine.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current report line.</summary>
      <returns>true if the specified object is equal to the current report line; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportLine.GetHashCode">
      <summary>Retrieves the hash code of the report line.</summary>
      <returns>A value representing the hash code of the report line.</returns>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportLine.ResetDashStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.ReportLine.DashStyle"></see> property to its default value, DashStyle.Solid.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportLine.ResetForeColor">
      <summary>Resets the value of the <see cref="T:System.Drawing.Color"></see> property to its default value, Color.Black.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportLine.ResetThickness">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.ReportLine.Thickness"></see> property to its default value, ReportLineThickness.None.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportLine.DashStyle">
      <summary>Gets or sets the dash style of the report line.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportLine.ForeColor">
      <summary>Gets or sets the color of the report line.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportLine.IsDashStyleDefined">
      <summary>Gets or sets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.ReportLine.DashStyle"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportLine.IsForeColorDefined">
      <summary>Gets or sets a boolean value indicating if the <see cref="T:System.Drawing.Color"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportLine.IsThicknessDefined">
      <summary>Gets or sets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.ReportLine.Thickness"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportLine.Thickness">
      <summary>Gets or sets the thickness of the report line.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportSettings.ResetColor">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.ReportSettings.Color"></see> property to its default value, false.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportSettings.ResetColumnLayout">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.ReportSettings.ColumnLayout"></see> property to its default value, 
            <see cref="T:Xceed.Grid.Reporting.ColumnLayout"></see>.SpanAcrossPages.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportSettings.ResetDefaultPath">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.ReportSettings.DefaultPath"></see> property to its default value, <see cref="P:System.Windows.Forms.Application.LocalUserAppDataPath"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportSettings.ResetLandscape">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.ReportSettings.Landscape"></see> property to its default value, false.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportSettings.ResetMargins">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.ReportSettings.Margins"></see> property to its default value, $$NULL$$.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportSettings.ResetPaperSize">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.ReportSettings.PaperSize"></see> property to its default value, $$NULL$$.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportSettings.ResetPaperSourceName">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.ReportSettings.PaperSourceName"></see> property to its default value, $$NULL$$.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportSettings.ResetPrinterName">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.ReportSettings.PrinterName"></see> property to its default value.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportSettings.ResetTitle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.ReportSettings.Title"></see> property to its default value, <see cref="P:Xceed.Grid.GridControl.Title"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportSettings.Load">
      <summary>Loads the report settings from the XML file contained in the <see cref="P:Xceed.Grid.Reporting.ReportSettings.DefaultPath"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportSettings.Load(System.String)">
      <summary>Loads the report settings from the specified XML file.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportSettings.Load(System.IO.Stream)">
      <summary>Loads the XML report settings from the specified <see cref="T:System.IO.Stream"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportSettings.Save">
      <summary>Saves the values of the properties specified by the <see cref="P:Xceed.Grid.Reporting.ReportSettings.PersistedColumnProperties"></see> and <see cref="P:Xceed.Grid.Reporting.ReportSettings.PersistedSettings"></see> properties to a file in the <see cref="P:Xceed.Grid.Reporting.ReportSettings.DefaultPath"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportSettings.Save(System.String)">
      <summary>Saves the report settings to the specified XML file.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.ReportSettings.Save(System.IO.Stream)">
      <summary>Saves the report settings to the specified <see cref="T:System.IO.Stream"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.Color">
      <summary>Gets or sets a boolean value indicating if the report should be printed in color.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.ColumnLayout">
      <summary>Gets or sets a value indicating how columns which surpass the available page width are printed in
            a report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.CustomVariables">
      <summary>Gets a dictionary of <b>case-insensitive </b> custom variables.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.DefaultPath">
      <summary>Gets or sets the default path from which the XML files containing the report settings are saved and loaded.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.IsColorDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.ReportSettings.Color"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.IsColumnLayoutDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.ReportSettings.ColumnLayout"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.IsLandscapeDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.ReportSettings.Landscape"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.IsMarginsDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.ReportSettings.Margins"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.IsPaperSizeDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.ReportSettings.PaperSize"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.IsPaperSourceNameDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.ReportSettings.PaperSourceName"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.IsPrinterNameDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.ReportSettings.PrinterName"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.IsTitleDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.ReportSettings.Title"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.Landscape">
      <summary>Gets or sets a boolean value indicating if the report should be printed in landscape orientation.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.Margins">
      <summary>Gets or sets the margins of the printed report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.PaperSize">
      <summary>Gets or sets the size of the paper on which the report will be printed.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.PaperSource">
      <summary>Gets the paper tray from which the printer gets paper.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.PaperSourceName">
      <summary>Gets or sets the name of the paper source.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.PersistedColumnProperties">
      <summary>Gets a collection containing the <STRONG>case-sensitive </STRONG>names of the <see cref="T:Xceed.Grid.Reporting.ColumnReportStyle"></see> properties that will be saved when the <see cref="M:Xceed.Grid.Reporting.ReportSettings.Save"></see> method is called, and loaded when the <see cref="M:Xceed.Grid.Reporting.ReportSettings.Load"></see> method is called.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.PersistedSettings">
      <summary>Gets the &amp;lt;STRONG&amp;gt;case-sensitive&amp;amp;nbsp; &amp;lt;/STRONG&amp;gt;names of the properties of the ReportSettings that will be persisted with the grid and saved or loaded when the <see cref="M:Xceed.Grid.Reporting.ReportSettings.Save"></see> or <see cref="M:Xceed.Grid.Reporting.ReportSettings.Load"></see> methods are called.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.PrinterName">
      <summary>Gets or sets the name of the printer on which to print the report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.ReportSettings.Title">
      <summary>Gets or sets the title of the report.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.#ctor">
      <summary>Initializes a new instance of the RowReportStyle class.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.OnBottomMarginChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.RowReportStyle.BottomMarginChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.OnIndentedChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.RowReportStyle.IndentedChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.OnPageBreakChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.RowReportStyle.PageBreakChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.OnRepeatOnEachPageChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.RowReportStyle.RepeatOnEachPageChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.OnRowHeightChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.RowReportStyle.RowHeightChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.OnRowHeightExpansionChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.RowReportStyle.RowHeightExpansionChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.OnRowHeightExpansionLimitChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.RowReportStyle.RowHeightExpansionLimitChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.OnTopMarginChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.RowReportStyle.TopMarginChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.OnVisibleWhenCollapsedChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.RowReportStyle.VisibleWhenCollapsedChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.ResetBottomBorder">
      <summary>Resets the property values of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.BottomBorder"></see> report style.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.ResetBottomMargin">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.BottomMargin"></see> property to its default value, 0.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.ResetIndented">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.Indented"></see> property to its default value, true.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.ResetPageBreak">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.PageBreak"></see> property to its default value, <see cref="P:Xceed.Grid.Reporting.RowReportStyle.DefaultPageBreak"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.ResetRepeatOnEachPage">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.RepeatOnEachPage"></see> property to its default value, <see cref="P:Xceed.Grid.Reporting.RowReportStyle.DefaultRepeatOnEachPage"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.ResetRowHeight">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.RowHeight"></see> property to its default value, 0.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.ResetRowHeightExpansion">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.RowHeightExpansion"></see> property to its default value, NeverExpand.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.ResetRowHeightExpansionLimit">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.RowHeightExpansionLimit"></see> property to its default value, 0.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.ResetTopBorder">
      <summary>Resets the property values of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.TopBorder"></see> report style.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.ResetTopMargin">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.TopMargin"></see> property to its default value, 0.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyle.ResetVisibleWhenCollapsed">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.VisibleWhenCollapsed"></see> property to its default value, false.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.BottomBorder">
      <summary>Gets the report style of the row's bottom border.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.BottomMargin">
      <summary>Gets or sets the height of the row's bottom margin, in hundredths of an inch.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.DefaultPageBreak">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.PageBreak"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.DefaultRepeatOnEachPage">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.RepeatOnEachPage"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.Indented">
      <summary>Gets or sets a boolean value indicating if the row is indented.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.IsBottomBorderDefined">
      <summary>Gets a boolean value indicating if one or more properties of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.BottomBorder"></see> report style have been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.IsBottomMarginDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.BottomMargin"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.IsIndentedDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.Indented"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.IsPageBreakDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.PageBreak"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.IsRepeatOnEachPageDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.RepeatOnEachPage"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.IsRowHeightDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.RowHeight"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.IsRowHeightExpansionDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.RowHeightExpansion"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.IsRowHeightExpansionLimitDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.RowHeightExpansionLimit"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.IsTopBorderDefined">
      <summary>Gets a boolean value indicating if one or more properties of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.TopBorder"></see> report style have been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.IsTopMarginDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.TopMargin"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.IsVisibleWhenCollapsedDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.VisibleWhenCollapsed"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.PageBreak">
      <summary>Gets or sets a value indicating when a page break should be applied.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.RepeatOnEachPage">
      <summary>Gets or sets a boolean value indicating if the row should be repeated on each page when it is printed in a report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.RowHeight">
      <summary>Gets or sets the height of the row, in hundredths of an inch.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.RowHeightExpansion">
      <summary>Gets or sets a value indicating how the height of the row expands to its content.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.RowHeightExpansionLimit">
      <summary>Gets or sets the height limit of the row, in hundredths of an inch.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.TopBorder">
      <summary>Gets the report style of the row's top border.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.TopMargin">
      <summary>Gets or sets the height of the row's top margin, in hundredths of an inch.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyle.VisibleWhenCollapsed">
      <summary>Gets or sets a boolean value indicating if the row is visible when its parent group is collapsed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.RowReportStyle.BottomMarginChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.BottomMargin"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.RowReportStyle.IndentedChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.Indented"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.RowReportStyle.PageBreakChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.PageBreak"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.RowReportStyle.RepeatOnEachPageChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.RepeatOnEachPage"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.RowReportStyle.RowHeightChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.RowHeight"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.RowReportStyle.RowHeightExpansionChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.RowHeightExpansion"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.RowReportStyle.RowHeightExpansionLimitChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.RowHeightExpansionLimit"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.RowReportStyle.TopMarginChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.TopMargin"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.RowReportStyle.VisibleWhenCollapsedChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.RowReportStyle.VisibleWhenCollapsed"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyleList.#ctor">
      <summary>Initializes a new instance of the RowReportStyleList class.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyleList.#ctor(System.Int32)">
      <summary>Initializes a new instance of the RowReportStyleList class specifying its initial capacity.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyleList.Add(Xceed.Grid.Reporting.RowReportStyle)">
      <summary>Adds a <see cref="T:Xceed.Grid.Reporting.RowReportStyle"></see> to the list.</summary>
      <returns>The index at which the <see cref="T:Xceed.Grid.Reporting.RowReportStyle"></see> was added.</returns>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyleList.AddRange(Xceed.Grid.Reporting.RowReportStyle[])">
      <summary>Adds the elements of a <see cref="T:Xceed.Grid.Reporting.RowReportStyle"></see> array to the end of the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyleList.Clear">
      <summary>Removes all <see cref="T:Xceed.Grid.Reporting.RowReportStyle"></see> objects from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyleList.Contains(Xceed.Grid.Reporting.RowReportStyle)">
      <summary>Retrieves a boolean value indicating if a specific <see cref="T:Xceed.Grid.Reporting.RowReportStyle"></see> exists in the list.</summary>
      <returns>true if the <see cref="T:Xceed.Grid.Reporting.RowReportStyle"></see> exists in the list; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyleList.IndexOf(Xceed.Grid.Reporting.RowReportStyle)">
      <summary>Searches for the specified <see cref="T:Xceed.Grid.Reporting.RowReportStyle"></see> and returns the zero-based index of the first 
            occurrence within the list.</summary>
      <returns>The zero-based index of the first occurrence of <see cref="value"></see> 
            within the entire list, if found; otherwise, returns -1.</returns>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyleList.Insert(System.Int32,Xceed.Grid.Reporting.RowReportStyle)">
      <summary>Inserts a <see cref="T:Xceed.Grid.Reporting.RowReportStyle"></see> into the list at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyleList.OnInsert(System.Int32@,System.Object,System.Boolean@)">
      <summary>Performs additional custom processes before inserting a new <see cref="T:Xceed.Grid.Reporting.RowReportStyle"></see> 
            into the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyleList.Remove(Xceed.Grid.Reporting.RowReportStyle)">
      <summary>Removes the <see cref="T:Xceed.Grid.Reporting.RowReportStyle"></see> from the list.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.RowReportStyleList.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:Xceed.Grid.Reporting.RowReportStyle"></see> from the list at the specified index.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.RowReportStyleList.Item(System.Int32)">
      <summary>Gets the <see cref="T:Xceed.Grid.Reporting.RowReportStyle"></see> at the specified index.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.SummaryRowReportStyle.#ctor">
      <summary>Initializes a new instance of the SummaryRowReportStyle class.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.SummaryRowReportStyle.ResetStatFieldBottomBorder">
      <summary>Resets the property values of the <see cref="P:Xceed.Grid.Reporting.SummaryRowReportStyle.StatFieldBottomBorder"></see> report style.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.SummaryRowReportStyle.ResetStatFieldTopBorder">
      <summary>Resets the property values of the <see cref="P:Xceed.Grid.Reporting.SummaryRowReportStyle.StatFieldTopBorder"></see> report style.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.SummaryRowReportStyle.IsStatFieldBottomBorderDefined">
      <summary>Gets a boolean value indicating if one or more properties of the <see cref="P:Xceed.Grid.Reporting.SummaryRowReportStyle.StatFieldBottomBorder"></see> report style have been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.SummaryRowReportStyle.IsStatFieldTopBorderDefined">
      <summary>Gets a boolean value indicating if one or more properties of the <see cref="P:Xceed.Grid.Reporting.SummaryRowReportStyle.StatFieldTopBorder"></see> report style have been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.SummaryRowReportStyle.StatFieldBottomBorder">
      <summary>Gets the report style of the bottom border of the <see cref="T:Xceed.Grid.SummaryCell"></see>s in the
            row which have a <see cref="P:Xceed.Grid.SummaryCell.StatFunction"></see> defined.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.SummaryRowReportStyle.StatFieldTopBorder">
      <summary>Gets the report style of the top border of the <see cref="T:Xceed.Grid.SummaryCell"></see>s in the
            row which have a <see cref="P:Xceed.Grid.SummaryCell.StatFunction"></see> defined.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.UnitConverter.#ctor(Xceed.Grid.Reporting.Unit)">
      <summary>Initializes a new instance of the UnitConverter class specifying the <see cref="T:Xceed.Grid.Reporting.Unit"></see> which will be used
            to convert values to and from hundredth's of an inch.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.UnitConverter.ConvertFrom(System.Int32)">
      <summary>Converts the specified from hundredth's of an inch to the current <see cref="P:Xceed.Grid.Reporting.UnitConverter.BaseUnit"></see>.</summary>
      <returns>A value representing the converted value in the current <see cref="P:Xceed.Grid.Reporting.UnitConverter.BaseUnit"></see>.</returns>
    </member>
    <member name="M:Xceed.Grid.Reporting.UnitConverter.ConvertTo(System.Double)">
      <summary>Converts the specified value from the current <see cref="P:Xceed.Grid.Reporting.UnitConverter.BaseUnit"></see> to hundredth's of an inch.</summary>
      <returns>A value representing converted value in hundredth's of an inch. The value will be rounded using a banker's round.</returns>
    </member>
    <member name="M:Xceed.Grid.Reporting.UnitConverter.FromHundredthsOfAnInch(System.Int32,Xceed.Grid.Reporting.Unit)">
      <summary>Converts the value from hundredth's of an inch to the specified <see cref="T:Xceed.Grid.Reporting.Unit"></see>.</summary>
      <returns>A value representing the converted <see cref="value"></see> in the specified unit.</returns>
    </member>
    <member name="M:Xceed.Grid.Reporting.UnitConverter.ToHundredthsOfAnInch(System.Double,Xceed.Grid.Reporting.Unit)">
      <summary>Converts the value from the specified <see cref="T:Xceed.Grid.Reporting.Unit"></see> to hundredth's of an inch.</summary>
      <returns>A value representing the converted value in hundredth's of an inch. The value will be rounded using a banker's round.</returns>
    </member>
    <member name="P:Xceed.Grid.Reporting.UnitConverter.BaseUnit">
      <summary>Gets or sets the <see cref="T:Xceed.Grid.Reporting.Unit"></see> which will be used to convert values to and from hundredth's of an inch.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.VisualGridElementReportStyle.#ctor">
      <summary>Initializes a new instance of the VisualGridElementReportStyle class.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.VisualGridElementReportStyle.OnBackgroundImageAlignmentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImageAlignmentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.VisualGridElementReportStyle.OnBackgroundImageChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImageChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.VisualGridElementReportStyle.OnBackgroundImageStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImageStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.VisualGridElementReportStyle.ResetBackgroundImage">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImage"></see> property to its default value, $$NULL$$.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.VisualGridElementReportStyle.ResetBackgroundImageAlignment">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImage"></see> property to its default value, ContentAlignment.TopLeft.</summary>
    </member>
    <member name="M:Xceed.Grid.Reporting.VisualGridElementReportStyle.ResetBackgroundImageStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImage"></see> property to its default value, ImageStyle.Align.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImage">
      <summary>Gets or sets the background image of the grid element when it is printed in a report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImageAlignment">
      <summary>Gets or sets the alignment of the grid element's <see cref="P:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImage"></see> when it is printed in a report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImageStyle">
      <summary>Gets or sets the style of the grid element's <see cref="P:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImage"></see> when it is printed in a report.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.VisualGridElementReportStyle.IsBackgroundImageAlignmentDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImageAlignment"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.VisualGridElementReportStyle.IsBackgroundImageDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImage"></see> property has been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Reporting.VisualGridElementReportStyle.IsBackgroundImageStyleDefined">
      <summary>Gets a boolean value indicating if the <see cref="P:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImageStyle"></see> property has been explicitly set.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImageAlignmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImageAlignment"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImageChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImage"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImageStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Reporting.VisualGridElementReportStyle.BackgroundImageStyle"></see> property is changed.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.ViewerImageAlignment">
      <summary>Value representing the alignment of a <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>'s image in the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImageArea"></see>.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.CellViewerEventArgs">
      <summary>Provides information on the cell and the control used to view its content.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.CellViewerManager">
      <summary>The CellViewerManager class allows for any control to be used as a viewer to display the content of a cell as well as allows custom painting of a cell's background and foreground.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.CellViewerPaintEventArgs">
      <summary>Provides information on the cell for which the viewer provides custom painting.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.CheckBoxViewer">
      <summary>Represents a viewer that is used to view the content of cells which have a boolean value.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.ComboBoxViewer">
      <summary>The ComboBoxViewer class represents a viewer that can be used to display the content of cells which have an ID/Value mapping.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.DateViewer">
      <summary>The DateViewer class represents a viewer that can be used to view the content of cells which have a <see cref="T:System.DateTime"></see> datatype.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.ImageViewer">
      <summary>Represents a viewer that is used to display an image in a cell.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.NumericViewer">
      <summary>Represents a cell viewer that can be used to view the content of cells which have a numeric data type.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.QueryViewerControlBoundsEventArgs">
      <summary>Provides information on the <see cref="T:Xceed.Grid.Cell"></see> to be viewed as well as the <see cref="T:System.Windows.Forms.Control"></see> used to view the cell's content in order to calculate the viewer's bounds.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.QueryViewerFittedHeightEventArgs">
      <summary>Provides information on the cell whose content is to be displayed as well as various information required to calculate the baseline.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.QueryViewerFittedWidthEventArgs">
      <summary>Provides information on the <see cref="T:Xceed.Grid.Cell"></see> whose content is to be displayed in order to retrieve the viewer's fitted width.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.QueryViewerImageEventArgs">
      <summary>Provides information on the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>'s image.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.QueryViewerTextEventArgs">
      <summary>Provides information on the <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see>'s text.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.TextViewer">
      <summary>Represents a viewer that is used to view the content of cells as text.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerEventArgs.#ctor(System.Windows.Forms.Control,Xceed.Grid.Cell)">
      <summary>Initializes a new instance of the CellViewerEventArgs specifying the cell whose content is 
            displayed as well as the control used to view it.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerEventArgs.Cell">
      <summary>Gets the <see cref="T:Xceed.Grid.Cell"></see> whose content is being displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerEventArgs.Control">
      <summary>Gets the <see cref="T:System.Windows.Forms.Control"></see> used to view the content of the <see cref="P:Xceed.Grid.Viewers.CellViewerEventArgs.Cell"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.#ctor">
      <summary>Initializes a new instance of the CellViewerManager class.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.#ctor(System.Windows.Forms.Control,System.String)">
      <summary>Initializes a new instance of the CellViewerManager class specifying the control used to view
            a cell's content as well as the property used to get/set the control's value.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.CalculateAreas(System.Int32,Xceed.UI.Margins,Xceed.UI.Margins,System.Drawing.Rectangle,System.Drawing.Rectangle@,System.Drawing.Rectangle@)">
      <summary>Calculates the text and image areas of the cell viewer.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.CalculateControlBounds(Xceed.Grid.Cell,System.Drawing.Rectangle@)">
      <summary>Calculates the bounds of the viewer and raises the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.QueryControlBounds"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.CalculateControlBoundsCore(Xceed.Grid.Cell,System.Drawing.Rectangle@)">
      <summary>Calculates the bounds of the viewer.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.Finalize">
      <summary>Allows the object to attempt to free resources and perform other cleanup operations before it is reclaimed 
            by garbage collection.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.GetAccessibleText(System.Object,Xceed.Grid.CellTextFormatInfo,Xceed.Grid.GridElement)">
      <summary>Retrieves the viewer's accessibilty text for the specified <see cref="T:Xceed.Grid.Cell"></see> and
            raises the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.QueryAccessibleText"></see> event.</summary>
      <returns>A string representing the viewer's accessibilty text. By default, the result of <see cref="M:Xceed.Grid.Viewers.CellViewerManager.GetText(System.Object)"></see>
            will be returned.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.GetAccessibleTextCore(System.Object,Xceed.Grid.CellTextFormatInfo,Xceed.Grid.GridElement)">
      <summary>Retrieves the viewer's accessibilty text for the specified <see cref="T:Xceed.Grid.Cell"></see>.</summary>
      <returns>A string representing the viewer's accessibilty text. By default, the result of <see cref="M:Xceed.Grid.Viewers.CellViewerManager.GetText(System.Object)"></see>
            will be returned.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.GetFittedHeight(Xceed.Grid.Cell,Xceed.Grid.AutoHeightMode,System.Int32,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves a value representing the fitted height of the viewer in pixels and raises the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.QueryFittedHeight"></see> event.</summary>
      <returns>A value representing the fitted height of the viewer in pixels. If -1, then no fitted height is required or 
            desired.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.GetFittedHeightCore(Xceed.Grid.Cell,Xceed.Grid.AutoHeightMode,System.Int32,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves a value representing the fitted height of the viewer in pixels.</summary>
      <returns>A value representing the fitted height of the viewer in pixels. If -1, then no fitted height is required or 
            desired.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.GetFittedWidth(Xceed.Grid.Cell,Xceed.Grid.AutoWidthMode,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves a value representing the fitted width of the viewer in pixels and raises the
            <see cref="E:Xceed.Grid.Viewers.CellViewerManager.QueryFittedWidth"></see> event.</summary>
      <returns>A value representing the fitted width of the viewer in pixels. If -1, then no fitted width is required or 
            desired.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.GetFittedWidthCore(Xceed.Grid.Cell,Xceed.Grid.AutoWidthMode,System.Drawing.Graphics,System.Boolean)">
      <summary>Retrieves a value representing the fitted width of the viewer in pixels.</summary>
      <returns>A value representing the fitted width of the viewer in pixels. If -1, then no fitted width is required or 
            desired.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.GetImageCore(System.Object,Xceed.Grid.CellImageFormatInfo,Xceed.Grid.GridElement)">
      <summary>Retrieves the image displayed by the viewer.</summary>
      <returns>An <see cref="T:System.Drawing.Image"></see> representing the image. displayed by the viewer.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.GetPropertyValue(System.Object)">
      <summary>Retrieves the value of the specified property in the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.Properties"></see> collection.</summary>
      <returns>An object representing the value of the property.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.GetService(System.Type)">
      <summary>Returns an object that represents a service provided by the <see cref="T:System.ComponentModel.Component"></see> or by its <see cref="P:Xceed.Grid.Viewers.CellViewerManager.Container"></see>.</summary>
      <returns>
        <P>An Object that represents a service provided by the Component. </P>
        <P>This value is $$NULL$$ if the Component does not provide the specified service. </P>
      </returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.GetTextCore(System.Object,Xceed.Grid.CellTextFormatInfo,Xceed.Grid.GridElement)">
      <summary>Retrieves the text displayed by the viewer.</summary>
      <returns>A string representing the text displayed by the viewer.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.IsPropertyDefined(System.Object)">
      <summary>Retrieves a boolean value indicating if the specified property has been explicitly set.</summary>
      <returns>true if the property has been explicitly set; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.OnImageAlignmentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.ImageAlignmentChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.OnImageAreaChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.ImageAreaChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.OnImagePaddingChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.ImagePaddingChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.OnImageSizeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.ImageSizeChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.OnImageStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.ImageStyleChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.OnPreserveImageAspectRatioChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.PreserveImageAspectRatioChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.OnTextPaddingChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.TextPaddingChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.PaintCellBackground(Xceed.Grid.Cell,Xceed.Grid.GridPaintEventArgs,System.Boolean@)">
      <summary>Paints the background of the <see cref="cell"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.PaintCellForeground(Xceed.Grid.Cell,Xceed.Grid.GridPaintEventArgs,System.Boolean@)">
      <summary>Paints the foreground of the <see cref="cell"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.RemovePropertyValue(System.Object)">
      <summary>Removes the specified property from the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.Properties"></see> collection.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.ResetImageAlignment">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImageAlignment"></see> property to its default value, <see cref="P:Xceed.Grid.Viewers.CellViewerManager.DefaultImageAlignment"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.ResetImageArea">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImageArea"></see> property to its default value, <see cref="P:Xceed.Grid.Viewers.CellViewerManager.DefaultImageArea"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.ResetImagePadding">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImagePadding"></see> property to its default value,
            <see cref="P:Xceed.Grid.Viewers.CellViewerManager.DefaultImagePadding"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.ResetImageSize">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImageSize"></see> property to its default value,
            <see cref="P:Xceed.Grid.Viewers.CellViewerManager.DefaultImageSize"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.ResetImageStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImageStyle"></see> property to its default value, <see cref="P:Xceed.Grid.Viewers.CellViewerManager.DefaultImageStyle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.ResetPreserveImageAspectRatio">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.PreserveImageAspectRatio"></see> property
            to its default value, <see cref="P:Xceed.Grid.Viewers.CellViewerManager.DefaultPreserveImageAspectRatio"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.ResetReportStyle">
      <summary>Resets the property values of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ReportStyle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.ResetTextPadding">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.TextPadding"></see> property to its default value,
            <see cref="P:Xceed.Grid.Viewers.CellViewerManager.DefaultTextPadding"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.SetControlAppearance(Xceed.Grid.Cell)">
      <summary>Sets the underlining <see cref="P:Xceed.Grid.Viewers.CellViewerManager.Control"></see>'s appearance and raises the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.SettingControlAppearance"></see>
            event.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.SetControlAppearanceCore(Xceed.Grid.Cell)">
      <summary>Sets the underlining <see cref="P:Xceed.Grid.Viewers.CellViewerManager.Control"></see>'s appearance.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.SetControlValue(Xceed.Grid.Cell)">
      <summary>Assigns the <see cref="cell"></see>'s value to the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.Control"></see> and
            raises the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.SettingControlValue"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.SetControlValueCore(Xceed.Grid.Cell)">
      <summary>Assigns the <see cref="cell"></see>'s value to the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.Control"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.Dispose">
      <summary>Releases all resources.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.Dispose(System.Boolean)">
      <summary>Releases all resources.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.GetImage(System.Object)">
      <summary>Retrieves the image displayed by the viewer and raises the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.QueryImage"></see> event.</summary>
      <returns>An <see cref="T:System.Drawing.Image"></see> representing the image. displayed by the viewer.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.GetImage(System.Object,Xceed.Grid.CellImageFormatInfo)">
      <summary>Retrieves the image displayed by the viewer and raises the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.QueryImage"></see> event.</summary>
      <returns>An <see cref="T:System.Drawing.Image"></see> representing the image. displayed by the viewer.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.GetImage(System.Object,Xceed.Grid.CellImageFormatInfo,Xceed.Grid.GridElement)">
      <summary>Retrieves the image displayed by the viewer and raises the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.QueryImage"></see> event.</summary>
      <returns>An <see cref="T:System.Drawing.Image"></see> representing the image. displayed by the viewer.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.GetText(System.Object)">
      <summary>Retrieves the text displayed by the viewer and raises the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.QueryText"></see> event.</summary>
      <returns>A string representing the text displayed by the viewer.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.GetText(System.Object,Xceed.Grid.CellTextFormatInfo)">
      <summary>Retrieves the text displayed by the viewer and raises the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.QueryText"></see> event.</summary>
      <returns>A string representing the text displayed by the viewer.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.GetText(System.Object,Xceed.Grid.CellTextFormatInfo,Xceed.Grid.GridElement)">
      <summary>Retrieves the text displayed by the viewer and raises the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.QueryText"></see> event.</summary>
      <returns>A string representing the text displayed by the viewer.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerManager.RaiseEvent(System.Object,System.EventArgs)">
      <summary>Raises the specified event.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.Container">
      <summary>Gets the <see cref="T:System.ComponentModel.IContainer"></see> associated with the <see cref="T:System.ComponentModel.ISite"></see> when implemented by a class.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.Control">
      <summary>Gets a reference to the underlining control used to view a cell's content.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.DefaultImageAlignment">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImageAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.DefaultImageArea">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImageArea"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.DefaultImagePadding">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImagePadding"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.DefaultImageSize">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImageSize"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.DefaultImageStyle">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImageStyle"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.DefaultPreserveImageAspectRatio">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.PreserveImageAspectRatio"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.DefaultTextPadding">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.TextPadding"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.DesignMode">
      <summary>Gets a value that indicates whether the <see cref="T:System.ComponentModel.Component"></see> is currently in design mode.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.Events">
      <summary>Gets a list of the events to which the CellViewerManager is subscribed.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.ImageAlignment">
      <summary>Gets or sets the alignment of the image in the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImageArea"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.ImageArea">
      <summary>Gets or sets the area where the viewer's image is displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.ImagePadding">
      <summary>Gets or sets the padding surrounding the viewer's image.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.ImageSize">
      <summary>Gets or sets the size of the viewer's image.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.ImageStyle">
      <summary>Gets or sets a value indicating the style with which the image is displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.IsReportStyleDefined">
      <summary>Gets a boolean value indicating if one or more properties of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ReportStyle"></see> have been explicitly set.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.PreserveImageAspectRatio">
      <summary>Gets or sets a boolean value indicating if the image should preserve its aspect ratio.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.Properties">
      <summary>Gets a collection of property names whose values have been explicitly set
            as well as the corresponding values.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.PropertyName">
      <summary>Gets a value representing the property used to set the control's value.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.ReportStyle">
      <summary>Gets the report style of the viewer.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.Site">
      <summary>Gets or sets the <see cref="T:System.ComponentModel.ISite"></see> associated with the <see cref="T:System.ComponentModel.IComponent"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerManager.TextPadding">
      <summary>Gets or sets the padding surrounding the viewer's text.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CellViewerManager.Disposed">
      <summary>Represents the method that handles the Disposed event of a component.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CellViewerManager.ImageAlignmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImageAlignment"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CellViewerManager.ImageAreaChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImageArea"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CellViewerManager.ImagePaddingChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImagePadding"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CellViewerManager.ImageSizeChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImageSize"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CellViewerManager.ImageStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImageStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CellViewerManager.Paint">
      <summary>Raised after the cell's background and foreground have been painted.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CellViewerManager.PreserveImageAspectRatioChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.PreserveImageAspectRatio"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CellViewerManager.QueryAccessibleText">
      <summary>Raised when retrieving a cell's accessibility text.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CellViewerManager.QueryControlBounds">
      <summary>Raised when calculating the bounds of the control.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CellViewerManager.QueryFittedHeight">
      <summary>Raised to calculate the fitted height of the viewer in pixels.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CellViewerManager.QueryFittedWidth">
      <summary>Raised to calculate the fitted width of the viewer in pixels.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CellViewerManager.QueryImage">
      <summary>Raised when retrieving the image displayed by the cell viewer.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CellViewerManager.QueryText">
      <summary>Raised when retrieving the text displayed by the cell viewer.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CellViewerManager.SettingControlAppearance">
      <summary>Raised when the appearance of the underlining control is about to be set.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CellViewerManager.SettingControlValue">
      <summary>Raised when the value of a cell is being assigned to the underlining <see cref="P:Xceed.Grid.Viewers.CellViewerManager.Control"></see>.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CellViewerManager.TextPaddingChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.TextPadding"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerPaintEventArgs.#ctor(Xceed.Grid.Cell,System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the CellViewerPaintEventArgs class specifying the cell for which the viewer 
            provides custom painting, as well as the information necessary to paint.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CellViewerPaintEventArgs.#ctor(Xceed.Grid.Cell,System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.Rectangle,Xceed.Grid.StatelessVisualGridElementStyle,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the CellViewerPaintEventArgs class specifying the cell for which the viewer 
            provides custom painting, as well as the information necessary to paint.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CellViewerPaintEventArgs.Cell">
      <summary>Gets the <see cref="T:Xceed.Grid.Cell"></see> for which the viewer provides custom painting.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CheckBoxViewer.#ctor">
      <summary>Initializes a new instance of the CheckBoxViewer class.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CheckBoxViewer.#ctor(Xceed.Editors.WinCheckBox)">
      <summary>Initializes a new instance of the CheckBoxViewer class specifying the underlying WinCheckBox control that
            will be used to view the content of cells.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CheckBoxViewer.GetCheckState(System.Object,Xceed.Grid.CellTextFormatInfo,Xceed.Grid.GridElement)">
      <summary>Retrieves the <see cref="T:System.Windows.Forms.CheckState"></see> of the viewer.</summary>
      <returns>A <see cref="T:System.Windows.Forms.CheckState"></see> value representing the check state of the viewer.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CheckBoxViewer.GetImageCore(System.Object,Xceed.Grid.CellImageFormatInfo,Xceed.Grid.GridElement)">
      <summary>Retrieves the image displayed by the viewer.</summary>
      <returns>An <see cref="T:System.Drawing.Image"></see> representing the image. displayed by the viewer.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.CheckBoxViewer.SetControlAppearanceCore(Xceed.Grid.Cell)">
      <summary>Sets the underlining <see cref="P:Xceed.Grid.Viewers.CheckBoxViewer.Control"></see>'s appearance.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.CheckBoxViewer.SetControlValueCore(Xceed.Grid.Cell)">
      <summary>Assigns the <see cref="cell"></see>'s value to the <see cref="P:Xceed.Grid.Viewers.CheckBoxViewer.Control"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CheckBoxViewer.DefaultImageArea">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImageArea"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CheckBoxViewer.DefaultImageSize">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImageSize"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CheckBoxViewer.ImageAlignment">
      <summary>Gets or sets the alignment of the image in the <see cref="P:Xceed.Grid.Viewers.CheckBoxViewer.ImageArea"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CheckBoxViewer.ImageArea">
      <summary>Gets or sets the area where the viewer's image is displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CheckBoxViewer.ImagePadding">
      <summary>Gets or sets the padding surrounding the viewer's image.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CheckBoxViewer.ImageSize">
      <summary>Gets or sets the size of the viewer's image.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CheckBoxViewer.ImageStyle">
      <summary>Gets or sets a value indicating the style with which the image is displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CheckBoxViewer.PreserveImageAspectRatio">
      <summary>Gets or sets a boolean value indicating if the image should preserve its aspect ratio.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.CheckBoxViewer.Control">
      <summary>Gets the underlying WinCheckBox control that is used to view the content of cells.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CheckBoxViewer.ImageAlignmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.CheckBoxViewer.ImageAlignment"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CheckBoxViewer.ImageAreaChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.CheckBoxViewer.ImageArea"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CheckBoxViewer.ImagePaddingChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.CheckBoxViewer.ImagePadding"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CheckBoxViewer.ImageSizeChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.CheckBoxViewer.ImageSize"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CheckBoxViewer.ImageStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.CheckBoxViewer.ImageStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.CheckBoxViewer.PreserveImageAspectRatioChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.CheckBoxViewer.PreserveImageAspectRatio"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.#ctor">
      <summary>Initializes a new instance of the ComboBoxViewer class.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.#ctor(System.Object,System.String,System.String)">
      <summary>Initializes a new instance of the ComboBoxViewer class specifying its data binding information.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.#ctor(System.Object,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the ComboBoxViewer class specifying its data binding information.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.#ctor(System.Object,System.String,System.String,System.String,Xceed.Grid.ImageArea,System.Drawing.Size,System.String)">
      <summary>Initializes a new instance of the ComboBoxViewer class specifying its data binding information.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.#ctor(Xceed.Editors.WinComboBox)">
      <summary>Initializes a new instance of the ComboBoxViewer class specifying the underlying WinComboBox control that
            will be used to view the content of cells.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.GetImageCore(System.Object,Xceed.Grid.CellImageFormatInfo,Xceed.Grid.GridElement)">
      <summary>Retrieves the image displayed by the viewer.</summary>
      <returns>An <see cref="T:System.Drawing.Image"></see> representing the image. displayed by the viewer.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.GetTextCore(System.Object,Xceed.Grid.CellTextFormatInfo,Xceed.Grid.GridElement)">
      <summary>Retrieves the text displayed by the viewer.</summary>
      <returns>A string representing the text displayed by the viewer.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.OnDataMemberChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Viewers.ComboBoxViewer.DataMemberChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.OnDataSourceChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Viewers.ComboBoxViewer.DataSourceChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.OnDisplayFormatChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Viewers.ComboBoxViewer.DisplayFormatChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.OnImageMemberChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Viewers.ComboBoxViewer.ImageMemberChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.OnValueMemberChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Viewers.ComboBoxViewer.ValueMemberChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.ResetDisplayFormat">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.DisplayFormat"></see> property to its default value, <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.DefaultDisplayFormat"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.ResetImageAlignment">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.ImageAlignment"></see> property to its default value, <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.DefaultImageAlignment"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.ResetImageArea">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImageArea"></see> to its default value, <see cref="P:Xceed.Grid.Viewers.CellViewerManager.DefaultImageArea"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.ResetImageMember">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.ImageMember"></see> property to its default value, <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.DefaultImageMember"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.ResetImagePadding">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImagePadding"></see> property to its default value, <see cref="P:Xceed.Grid.Viewers.CellViewerManager.DefaultImagePadding"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.ResetImageSize">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImageSize"></see> property to its default value, <see cref="P:Xceed.Grid.Viewers.CellViewerManager.DefaultImageSize"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.ResetImageStyle">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.ImageStyle"></see> property to its default value, <see cref="P:Xceed.Grid.Viewers.CellViewerManager.DefaultImageStyle"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.ResetPreserveImageAspectRatio">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.PreserveImageAspectRatio"></see> property
            to its default value, <see cref="P:Xceed.Grid.Viewers.CellViewerManager.DefaultPreserveImageAspectRatio"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.ResetValueMember">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.ValueMember"></see> property to its default value, <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.DefaultValueMember"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.SetControlAppearanceCore(Xceed.Grid.Cell)">
      <summary>Sets the underlining <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.Control"></see>'s appearance.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.SetControlValueCore(Xceed.Grid.Cell)">
      <summary>Assigns the <see cref="cell"></see>'s value to the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.Control"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.SetDataBinding(System.Object,System.String)">
      <summary>Sets the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.DataSource"></see> and <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.DataMember"></see> properties 
            at run time.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ComboBoxViewer.Dispose(System.Boolean)">
      <summary>Releases all resources used by the control.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.ComboBoxViewer.DataMember">
      <summary>Gets or sets a specific table in the data source.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.ComboBoxViewer.DataSource">
      <summary>Gets or sets the data source used to populate the ComboBoxViewer</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.ComboBoxViewer.DefaultDisplayFormat">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.DisplayFormat"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.ComboBoxViewer.DefaultImageAlignment">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.ImageAlignment"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.ComboBoxViewer.DefaultImageMember">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.ImageMember"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.ComboBoxViewer.DefaultValueMember">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.ValueMember"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.ComboBoxViewer.DisplayFormat">
      <summary>Gets or sets the format with which the selected item is displayed in the ComboBoxViewer.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.ComboBoxViewer.ImageAlignment">
      <summary>Gets or sets the alignment of the image in the <see cref="P:Xceed.Grid.Viewers.CellViewerManager.ImageArea"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.ComboBoxViewer.ImageArea">
      <summary>Gets or sets the area where the viewer's image is displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.ComboBoxViewer.ImageMember">
      <summary>Gets or sets a string that specifies the field of the data source from which to draw the image.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.ComboBoxViewer.ImagePadding">
      <summary>Gets or sets the padding surrounding the viewer's image.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.ComboBoxViewer.ImageSize">
      <summary>Gets or sets the size of the viewer's image.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.ComboBoxViewer.ImageStyle">
      <summary>Gets or sets a value indicating the style with which the image is displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.ComboBoxViewer.PreserveImageAspectRatio">
      <summary>Gets or sets a boolean value indicating if the image should preserve its aspect ratio.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.ComboBoxViewer.ValueMember">
      <summary>Gets or sets a string that specifies the field of the data source from which to draw the value.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.ComboBoxViewer.Control">
      <summary>Gets the underlying WinComboBox control that is used to view the content of cells.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.ComboBoxViewer.DataMemberChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.DataMember"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.ComboBoxViewer.DataSourceChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.DataSource"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.ComboBoxViewer.DisplayFormatChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.DisplayFormat"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.ComboBoxViewer.ImageAlignmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.ImageAlignment"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.ComboBoxViewer.ImageAreaChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.ImageArea"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.ComboBoxViewer.ImageMemberChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.ImageMember"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.ComboBoxViewer.ImagePaddingChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.ImagePadding"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.ComboBoxViewer.ImageSizeChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.ImageSize"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.ComboBoxViewer.ImageStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.ImageStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.ComboBoxViewer.PreserveImageAspectRatioChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.PreserveImageAspectRatio"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.ComboBoxViewer.ValueMemberChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.ComboBoxViewer.ValueMember"></see> property is changed.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.DateViewer.#ctor">
      <summary>Initializes a new instance of the DateViewer class.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.DateViewer.#ctor(Xceed.Editors.WinDatePicker)">
      <summary>Initializes a new instance of the DateViewer class specifying the underlying WinDatePicker control that
            will be used to view the content of cells.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.DateViewer.GetDate(System.Object,Xceed.Grid.CellTextFormatInfo,Xceed.Grid.GridElement)">
      <summary>Retrieves the date displayed by the viewer.</summary>
      <returns>A <see cref="T:System.DateTime"></see> value representing the date displayed by the viewer.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.DateViewer.GetTextCore(System.Object,Xceed.Grid.CellTextFormatInfo,Xceed.Grid.GridElement)">
      <summary>Retrieves the text displayed by the viewer.</summary>
      <returns>A string representing the text displayed by the viewer.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.DateViewer.SetControlAppearanceCore(Xceed.Grid.Cell)">
      <summary>Sets the underlining <see cref="P:Xceed.Grid.Viewers.DateViewer.Control"></see>'s appearance.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.DateViewer.SetControlValueCore(Xceed.Grid.Cell)">
      <summary>Assigns the <see cref="cell"></see>'s value to the <see cref="P:Xceed.Grid.Viewers.DateViewer.Control"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.DateViewer.Control">
      <summary>Gets the underlying WinDatePicker control that is used to view the content of cells.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ImageViewer.#ctor">
      <summary>Initializes a new instance of the ImageViewer class.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ImageViewer.#ctor(System.Drawing.Size)">
      <summary>Initializes a new instance of the ImageViewer class specifying the size of the image displayed by the viewer.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ImageViewer.#ctor(System.Drawing.Size,Xceed.Grid.ImageStyle)">
      <summary>Initializes a new instance of the ImageViewer class specifying the size and style of the image displayed by
            the viewer.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.ImageViewer.GetImageCore(System.Object,Xceed.Grid.CellImageFormatInfo,Xceed.Grid.GridElement)">
      <summary>Retrieves the image that is displayed by the ImageViewer.</summary>
      <returns>A reference to the <see cref="T:System.Drawing.Image"></see> displayed by the ImageViewer.</returns>
    </member>
    <member name="P:Xceed.Grid.Viewers.ImageViewer.DefaultImageArea">
      <summary>Gets the default value of the <see cref="T:Xceed.Grid.ImageArea"></see> property.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.NumericViewer.#ctor">
      <summary>Initializes a new instance of the NumericViewer class.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.NumericViewer.#ctor(Xceed.Editors.WinNumericTextBox)">
      <summary>Initializes a new instance of the NumericViewer class specifying the underlying WinNumericTextBox control that
            will be used to view the content of cells which have a numeric data type.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.NumericViewer.GetNumber(System.Type,System.Object,Xceed.Grid.CellTextFormatInfo,Xceed.Grid.GridElement)">
      <summary>Retrieves the number displayed by the viewer.</summary>
      <returns>An object representing the number displayed by the viewer.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.NumericViewer.GetTextCore(System.Object,Xceed.Grid.CellTextFormatInfo,Xceed.Grid.GridElement)">
      <summary>Retrieves the text displayed by the viewer.</summary>
      <returns>A string representing the text displayed by the viewer.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.NumericViewer.SetControlAppearanceCore(Xceed.Grid.Cell)">
      <summary>Sets the underlining <see cref="P:Xceed.Grid.Viewers.NumericViewer.Control"></see>'s appearance.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.NumericViewer.SetControlValueCore(Xceed.Grid.Cell)">
      <summary>Assigns the <see cref="cell"></see>'s value to the <see cref="P:Xceed.Grid.Viewers.NumericViewer.Control"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.NumericViewer.Control">
      <summary>Gets the underlying WinNumericTextBox control that is used to view the content of cells.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.QueryViewerControlBoundsEventArgs.#ctor(System.Windows.Forms.Control,Xceed.Grid.Cell,System.Drawing.Rectangle)">
      <summary>Initializes a new instance of the QueryViewerControlBoundsEventArgs class specifying the cell to be 
            viewed, the control used to view the cell's content, as well as various information required
            to calculate the control's bounds.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerControlBoundsEventArgs.Bounds">
      <summary>Gets or sets the bounds to the control.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.QueryViewerFittedHeightEventArgs.#ctor(Xceed.Grid.Cell,Xceed.Grid.AutoHeightMode,System.Int32,System.Drawing.Graphics,System.Boolean,System.Int32)">
      <summary>Initializes a new instance of the QueryViewerFittedHeightEventArgs specifying the cell whose content
            is to be displayed as well as various information required to calculate the baseline.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerFittedHeightEventArgs.Cell">
      <summary>Gets the <see cref="T:Xceed.Grid.Cell"></see> whose content is to be displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerFittedHeightEventArgs.CellDisplayWidth">
      <summary>Gets the display width of the cell.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerFittedHeightEventArgs.FittedHeight">
      <summary>Gets or sets the fitted height of the viewer.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerFittedHeightEventArgs.Graphics">
      <summary>Gets the <see cref="P:Xceed.Grid.Viewers.QueryViewerFittedHeightEventArgs.Graphics"></see> object used to paint.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerFittedHeightEventArgs.Mode">
      <summary>Gets an <see cref="T:Xceed.Grid.AutoHeightMode"></see> value indicating in regards to what factors the fitted height of 
            the viewer will be calculated.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerFittedHeightEventArgs.Printing">
      <summary>Gets a boolean value indicating if the viewer is being printed.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.QueryViewerFittedWidthEventArgs.#ctor(Xceed.Grid.Cell,Xceed.Grid.AutoWidthMode,System.Drawing.Graphics,System.Boolean,System.Int32)">
      <summary>Initializes a new instance of the QueryViewerFittedWidthEventArgs class specifying the cell whose content
            is to be displayed as well as various information required to calculate the viewers's fitted width.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerFittedWidthEventArgs.Cell">
      <summary>Gets the <see cref="T:Xceed.Grid.Cell"></see> whose content is to be displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerFittedWidthEventArgs.FittedWidth">
      <summary>Gets or sets the fitted width of the viewer.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerFittedWidthEventArgs.Graphics">
      <summary>Gets the <see cref="P:Xceed.Grid.Viewers.QueryViewerFittedWidthEventArgs.Graphics"></see> object used to paint.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerFittedWidthEventArgs.Mode">
      <summary>This property is reserved for future use.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerFittedWidthEventArgs.Printing">
      <summary>Gets a boolean value indicating if the viewer is being printed.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.QueryViewerImageEventArgs.#ctor(System.Object,Xceed.Grid.CellImageFormatInfo,Xceed.Grid.GridElement,System.Drawing.Image)">
      <summary>Initializes a new instance of the QueryViewerImageEventArgs class specifying the <see cref="T:Xceed.Grid.Cell"></see>
            whose content is to be displayed as well as the viewer's <see cref="T:System.Drawing.Image"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerImageEventArgs.FormatInfo">
      <summary>Gets a <see cref="T:Xceed.Grid.CellImageFormatInfo"></see> which provides image formatting information.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerImageEventArgs.GridElement">
      <summary>Gets the <see cref="T:Xceed.Grid.GridElement"></see> associated with the <see cref="P:Xceed.Grid.Viewers.QueryViewerImageEventArgs.Value"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerImageEventArgs.Image">
      <summary>Gets or sets the viewer's image.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerImageEventArgs.Value">
      <summary>Gets the value of the underlying cell.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.QueryViewerTextEventArgs.#ctor(System.Object,Xceed.Grid.CellTextFormatInfo,Xceed.Grid.GridElement,System.String)">
      <summary>Initializes a new instance of the QueryViewerImageEventArgs class specifying the <see cref="T:Xceed.Grid.Cell"></see>
            whose content is to be displayed as well as the viewer's <see cref="P:Xceed.Grid.Viewers.QueryViewerTextEventArgs.Text"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerTextEventArgs.FormatInfo">
      <summary>Gets a <see cref="T:Xceed.Grid.CellTextFormatInfo"></see> which provides text formatting information.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerTextEventArgs.GridElement">
      <summary>Gets the <see cref="T:Xceed.Grid.GridElement"></see> associated with the <see cref="P:Xceed.Grid.Viewers.QueryViewerTextEventArgs.Value"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerTextEventArgs.Text">
      <summary>Gets or sets the viewer's text.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.QueryViewerTextEventArgs.Value">
      <summary>Gets the value of the underlying cell.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.TextViewer.#ctor">
      <summary>Initializes a new instance of the TextViewer class.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.TextViewer.#ctor(Xceed.Editors.WinTextBox)">
      <summary>Initializes a new instance of the TextViewer class specifying the underlying WinTextBox control that
            will be used to view the content of cells.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.TextViewer.#ctor(System.String)">
      <summary>Initializes a new instance of the TextViewer specifying the <see cref="P:Xceed.Grid.Viewers.TextViewer.Mask"></see> to apply to the displayed text.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.TextViewer.CalculateControlBoundsCore(Xceed.Grid.Cell,System.Drawing.Rectangle@)">
      <summary>Calculates the bounds of the viewer.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.TextViewer.GetTextCore(System.Object,Xceed.Grid.CellTextFormatInfo,Xceed.Grid.GridElement)">
      <summary>Retrieves the text displayed by the viewer.</summary>
      <returns>A string representing the text displayed by the viewer.</returns>
    </member>
    <member name="M:Xceed.Grid.Viewers.TextViewer.OnMaskChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Viewers.TextViewer.MaskChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.TextViewer.OnPasswordCharChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:Xceed.Grid.Viewers.TextViewer.PasswordCharChanged"></see> event.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.TextViewer.ResetMask">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Viewers.TextViewer.Mask"></see> property to its default value, <see cref="P:Xceed.Grid.Viewers.TextViewer.DefaultMask"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.TextViewer.ResetPasswordChar">
      <summary>Resets the value of the <see cref="P:Xceed.Grid.Viewers.TextViewer.PasswordChar"></see> property to its default value, <see cref="P:Xceed.Grid.Viewers.TextViewer.DefaultPasswordChar"></see>.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.TextViewer.SetControlAppearanceCore(Xceed.Grid.Cell)">
      <summary>Sets the underlining <see cref="P:Xceed.Grid.Viewers.TextViewer.Control"></see>'s appearance.</summary>
    </member>
    <member name="M:Xceed.Grid.Viewers.TextViewer.SetControlValueCore(Xceed.Grid.Cell)">
      <summary>Assigns the <see cref="cell"></see>'s value to the <see cref="P:Xceed.Grid.Viewers.TextViewer.Control"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.TextViewer.DefaultMask">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Viewers.TextViewer.Mask"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.TextViewer.DefaultPasswordChar">
      <summary>Gets the default value of the <see cref="P:Xceed.Grid.Viewers.TextViewer.PasswordChar"></see> property.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.TextViewer.ImageAlignment">
      <summary>Gets or sets the alignment of the image in the <see cref="P:Xceed.Grid.Viewers.TextViewer.ImageArea"></see>.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.TextViewer.ImageArea">
      <summary>Gets or sets the area where the viewer's image is displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.TextViewer.ImagePadding">
      <summary>Gets or sets the padding surrounding the viewer's image.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.TextViewer.ImageSize">
      <summary>Gets or sets the size of the viewer's image.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.TextViewer.ImageStyle">
      <summary>Gets or sets a value indicating the style with which the image is displayed.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.TextViewer.Mask">
      <summary>Gets or sets the mask used to display the content of a cell.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.TextViewer.PasswordChar">
      <summary>Gets or sets the character used to mask characters of a password.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.TextViewer.PreserveImageAspectRatio">
      <summary>Gets or sets a boolean value indicating if the image should preserve its aspect ratio.</summary>
    </member>
    <member name="P:Xceed.Grid.Viewers.TextViewer.Control">
      <summary>Gets the underlying WinTextBox control that is used to view the content of cells.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.TextViewer.ImageAlignmentChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.TextViewer.ImageAlignment"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.TextViewer.ImageAreaChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.TextViewer.ImageArea"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.TextViewer.ImagePaddingChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.TextViewer.ImagePadding"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.TextViewer.ImageSizeChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.TextViewer.ImageSize"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.TextViewer.ImageStyleChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.TextViewer.ImageStyle"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.TextViewer.MaskChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.TextViewer.Mask"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.TextViewer.PasswordCharChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.TextViewer.PasswordChar"></see> property is changed.</summary>
    </member>
    <member name="E:Xceed.Grid.Viewers.TextViewer.PreserveImageAspectRatioChanged">
      <summary>Raised when the value of the <see cref="P:Xceed.Grid.Viewers.TextViewer.PreserveImageAspectRatio"></see> property is changed.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.CellViewerEventHandler">
      <summary>Represents the method that will handle various <see cref="T:Xceed.Grid.Viewers.CellViewerManager"></see> events.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.CellViewerPaintEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.Paint"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.QueryViewerControlBoundsEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.QueryControlBounds"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.QueryViewerFittedHeightEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.QueryFittedHeight"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.QueryViewerFittedWidthEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.QueryFittedWidth"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.QueryViewerImageEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.QueryImage"></see> event.</summary>
    </member>
    <member name="T:Xceed.Grid.Viewers.QueryViewerTextEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Xceed.Grid.Viewers.CellViewerManager.QueryText"></see> event.</summary>
    </member>
  </members>
</doc>