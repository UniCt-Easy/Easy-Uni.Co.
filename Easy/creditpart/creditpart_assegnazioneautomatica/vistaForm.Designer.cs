/*
    Easy
    Copyright (C) 2019 Università degli Studi di Catania (www.unict.it)

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

ï»¿//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace creditpart_assegnazioneautomatica {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("vistaForm")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class vistaForm : System.Data.DataSet {
        
        private creditpartDataTable tablecreditpart;
        
        private incomeviewDataTable tableincomeview;
        
        private incomephaseDataTable tableincomephase;
        
        private finDataTable tablefin;
        
        private System.Data.DataRelation relationfincreditpart;
        
        private System.Data.DataRelation relationincomeviewcreditpart;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vistaForm() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected vistaForm(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["creditpart"] != null)) {
                    base.Tables.Add(new creditpartDataTable(ds.Tables["creditpart"]));
                }
                if ((ds.Tables["incomeview"] != null)) {
                    base.Tables.Add(new incomeviewDataTable(ds.Tables["incomeview"]));
                }
                if ((ds.Tables["incomephase"] != null)) {
                    base.Tables.Add(new incomephaseDataTable(ds.Tables["incomephase"]));
                }
                if ((ds.Tables["fin"] != null)) {
                    base.Tables.Add(new finDataTable(ds.Tables["fin"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public creditpartDataTable creditpart {
            get {
                return this.tablecreditpart;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public incomeviewDataTable incomeview {
            get {
                return this.tableincomeview;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public incomephaseDataTable incomephase {
            get {
                return this.tableincomephase;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public finDataTable fin {
            get {
                return this.tablefin;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            vistaForm cln = ((vistaForm)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["creditpart"] != null)) {
                    base.Tables.Add(new creditpartDataTable(ds.Tables["creditpart"]));
                }
                if ((ds.Tables["incomeview"] != null)) {
                    base.Tables.Add(new incomeviewDataTable(ds.Tables["incomeview"]));
                }
                if ((ds.Tables["incomephase"] != null)) {
                    base.Tables.Add(new incomephaseDataTable(ds.Tables["incomephase"]));
                }
                if ((ds.Tables["fin"] != null)) {
                    base.Tables.Add(new finDataTable(ds.Tables["fin"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablecreditpart = ((creditpartDataTable)(base.Tables["creditpart"]));
            if ((initTable == true)) {
                if ((this.tablecreditpart != null)) {
                    this.tablecreditpart.InitVars();
                }
            }
            this.tableincomeview = ((incomeviewDataTable)(base.Tables["incomeview"]));
            if ((initTable == true)) {
                if ((this.tableincomeview != null)) {
                    this.tableincomeview.InitVars();
                }
            }
            this.tableincomephase = ((incomephaseDataTable)(base.Tables["incomephase"]));
            if ((initTable == true)) {
                if ((this.tableincomephase != null)) {
                    this.tableincomephase.InitVars();
                }
            }
            this.tablefin = ((finDataTable)(base.Tables["fin"]));
            if ((initTable == true)) {
                if ((this.tablefin != null)) {
                    this.tablefin.InitVars();
                }
            }
            this.relationfincreditpart = this.Relations["fincreditpart"];
            this.relationincomeviewcreditpart = this.Relations["incomeviewcreditpart"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "vistaForm";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Vistaassegnazionecrediti_automatica.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablecreditpart = new creditpartDataTable();
            base.Tables.Add(this.tablecreditpart);
            this.tableincomeview = new incomeviewDataTable();
            base.Tables.Add(this.tableincomeview);
            this.tableincomephase = new incomephaseDataTable();
            base.Tables.Add(this.tableincomephase);
            this.tablefin = new finDataTable();
            base.Tables.Add(this.tablefin);
            System.Data.ForeignKeyConstraint fkc;
            fkc = new System.Data.ForeignKeyConstraint("vistaFormKey3", new System.Data.DataColumn[] {
                        this.tablefin.idfinColumn}, new System.Data.DataColumn[] {
                        this.tablecreditpart.idfinColumn});
            this.tablecreditpart.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new System.Data.ForeignKeyConstraint("vistaFormKey2", new System.Data.DataColumn[] {
                        this.tableincomeview.idincColumn}, new System.Data.DataColumn[] {
                        this.tablecreditpart.idincColumn});
            this.tablecreditpart.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationfincreditpart = new System.Data.DataRelation("fincreditpart", new System.Data.DataColumn[] {
                        this.tablefin.idfinColumn}, new System.Data.DataColumn[] {
                        this.tablecreditpart.idfinColumn}, false);
            this.Relations.Add(this.relationfincreditpart);
            this.relationincomeviewcreditpart = new System.Data.DataRelation("incomeviewcreditpart", new System.Data.DataColumn[] {
                        this.tableincomeview.idincColumn}, new System.Data.DataColumn[] {
                        this.tablecreditpart.idincColumn}, false);
            this.Relations.Add(this.relationincomeviewcreditpart);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializecreditpart() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeincomeview() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeincomephase() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializefin() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            vistaForm ds = new vistaForm();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void creditpartRowChangeEventHandler(object sender, creditpartRowChangeEvent e);
        
        public delegate void incomeviewRowChangeEventHandler(object sender, incomeviewRowChangeEvent e);
        
        public delegate void incomephaseRowChangeEventHandler(object sender, incomephaseRowChangeEvent e);
        
        public delegate void finRowChangeEventHandler(object sender, finRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class creditpartDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnidinc;
            
            private System.Data.DataColumn columnncreditpart;
            
            private System.Data.DataColumn columnidfin;
            
            private System.Data.DataColumn column__codicebilancio;
            
            private System.Data.DataColumn columnycreditpart;
            
            private System.Data.DataColumn columndescription;
            
            private System.Data.DataColumn columnamount;
            
            private System.Data.DataColumn columnadate;
            
            private System.Data.DataColumn columntxt;
            
            private System.Data.DataColumn columnrtf;
            
            private System.Data.DataColumn columncu;
            
            private System.Data.DataColumn columnct;
            
            private System.Data.DataColumn columnlu;
            
            private System.Data.DataColumn columnlt;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public creditpartDataTable() {
                this.TableName = "creditpart";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal creditpartDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected creditpartDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idincColumn {
                get {
                    return this.columnidinc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ncreditpartColumn {
                get {
                    return this.columnncreditpart;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idfinColumn {
                get {
                    return this.columnidfin;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn @__codicebilancioColumn {
                get {
                    return this.column__codicebilancio;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ycreditpartColumn {
                get {
                    return this.columnycreditpart;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn adateColumn {
                get {
                    return this.columnadate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn txtColumn {
                get {
                    return this.columntxt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rtfColumn {
                get {
                    return this.columnrtf;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public creditpartRow this[int index] {
                get {
                    return ((creditpartRow)(this.Rows[index]));
                }
            }
            
            public event creditpartRowChangeEventHandler creditpartRowChanging;
            
            public event creditpartRowChangeEventHandler creditpartRowChanged;
            
            public event creditpartRowChangeEventHandler creditpartRowDeleting;
            
            public event creditpartRowChangeEventHandler creditpartRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddcreditpartRow(creditpartRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public creditpartRow AddcreditpartRow(incomeviewRow parentincomeviewRowByincomeviewcreditpart, int ncreditpart, finRow parentfinRowByfincreditpart, string @__codicebilancio, short ycreditpart, string description, decimal amount, System.DateTime adate, string txt, byte[] rtf, string cu, System.DateTime ct, string lu, System.DateTime lt) {
                creditpartRow rowcreditpartRow = ((creditpartRow)(this.NewRow()));
                rowcreditpartRow.ItemArray = new object[] {
                        parentincomeviewRowByincomeviewcreditpart[0],
                        ncreditpart,
                        parentfinRowByfincreditpart[0],
                        @__codicebilancio,
                        ycreditpart,
                        description,
                        amount,
                        adate,
                        txt,
                        rtf,
                        cu,
                        ct,
                        lu,
                        lt};
                this.Rows.Add(rowcreditpartRow);
                return rowcreditpartRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public creditpartRow FindByidincncreditpart(int idinc, int ncreditpart) {
                return ((creditpartRow)(this.Rows.Find(new object[] {
                            idinc,
                            ncreditpart})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                creditpartDataTable cln = ((creditpartDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new creditpartDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidinc = base.Columns["idinc"];
                this.columnncreditpart = base.Columns["ncreditpart"];
                this.columnidfin = base.Columns["idfin"];
                this.column__codicebilancio = base.Columns["!codicebilancio"];
                this.columnycreditpart = base.Columns["ycreditpart"];
                this.columndescription = base.Columns["description"];
                this.columnamount = base.Columns["amount"];
                this.columnadate = base.Columns["adate"];
                this.columntxt = base.Columns["txt"];
                this.columnrtf = base.Columns["rtf"];
                this.columncu = base.Columns["cu"];
                this.columnct = base.Columns["ct"];
                this.columnlu = base.Columns["lu"];
                this.columnlt = base.Columns["lt"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidinc = new System.Data.DataColumn("idinc", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidinc);
                this.columnncreditpart = new System.Data.DataColumn("ncreditpart", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnncreditpart);
                this.columnidfin = new System.Data.DataColumn("idfin", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfin);
                this.column__codicebilancio = new System.Data.DataColumn("!codicebilancio", typeof(string), null, System.Data.MappingType.Element);
                this.column__codicebilancio.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "__codicebilancio");
                this.column__codicebilancio.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "__codicebilancioColumn");
                this.column__codicebilancio.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column__codicebilancio");
                this.column__codicebilancio.ExtendedProperties.Add("Generator_UserColumnName", "!codicebilancio");
                base.Columns.Add(this.column__codicebilancio);
                this.columnycreditpart = new System.Data.DataColumn("ycreditpart", typeof(short), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnycreditpart);
                this.columndescription = new System.Data.DataColumn("description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnamount = new System.Data.DataColumn("amount", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columnadate = new System.Data.DataColumn("adate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnadate);
                this.columntxt = new System.Data.DataColumn("txt", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntxt);
                this.columnrtf = new System.Data.DataColumn("rtf", typeof(byte[]), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrtf);
                this.columncu = new System.Data.DataColumn("cu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnct = new System.Data.DataColumn("ct", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlu = new System.Data.DataColumn("lu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnlt = new System.Data.DataColumn("lt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey1", new System.Data.DataColumn[] {
                                this.columnidinc,
                                this.columnncreditpart}, true));
                this.columnidinc.AllowDBNull = false;
                this.columnncreditpart.AllowDBNull = false;
                this.columnidfin.AllowDBNull = false;
                this.columnycreditpart.AllowDBNull = false;
                this.columndescription.AllowDBNull = false;
                this.columnadate.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlt.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public creditpartRow NewcreditpartRow() {
                return ((creditpartRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new creditpartRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(creditpartRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.creditpartRowChanged != null)) {
                    this.creditpartRowChanged(this, new creditpartRowChangeEvent(((creditpartRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.creditpartRowChanging != null)) {
                    this.creditpartRowChanging(this, new creditpartRowChangeEvent(((creditpartRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.creditpartRowDeleted != null)) {
                    this.creditpartRowDeleted(this, new creditpartRowChangeEvent(((creditpartRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.creditpartRowDeleting != null)) {
                    this.creditpartRowDeleting(this, new creditpartRowChangeEvent(((creditpartRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovecreditpartRow(creditpartRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "creditpartDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class incomeviewDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnidinc;
            
            private System.Data.DataColumn columnnphase;
            
            private System.Data.DataColumn columnphase;
            
            private System.Data.DataColumn columnymov;
            
            private System.Data.DataColumn columnnmov;
            
            private System.Data.DataColumn columnparentidinc;
            
            private System.Data.DataColumn columnayear;
            
            private System.Data.DataColumn columndescription;
            
            private System.Data.DataColumn columnidreg;
            
            private System.Data.DataColumn columnregistry;
            
            private System.Data.DataColumn columnidfin;
            
            private System.Data.DataColumn columncodefin;
            
            private System.Data.DataColumn columnfinance;
            
            private System.Data.DataColumn columnidman;
            
            private System.Data.DataColumn columnmanager;
            
            private System.Data.DataColumn columnnpro;
            
            private System.Data.DataColumn columndoc;
            
            private System.Data.DataColumn columndocdate;
            
            private System.Data.DataColumn columnayearstartamount;
            
            private System.Data.DataColumn columncurramount;
            
            private System.Data.DataColumn columnavailable;
            
            private System.Data.DataColumn columnunpartitioned;
            
            private System.Data.DataColumn columnflag;
            
            private System.Data.DataColumn columnflagarrear;
            
            private System.Data.DataColumn columnautokind;
            
            private System.Data.DataColumn columnidpayment;
            
            private System.Data.DataColumn columnexpiration;
            
            private System.Data.DataColumn columnadate;
            
            private System.Data.DataColumn columncu;
            
            private System.Data.DataColumn columnct;
            
            private System.Data.DataColumn columnlu;
            
            private System.Data.DataColumn columnlt;
            
            private System.Data.DataColumn columnidupb;
            
            private System.Data.DataColumn columncodeupb;
            
            private System.Data.DataColumn columnupb;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public incomeviewDataTable() {
                this.TableName = "incomeview";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal incomeviewDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected incomeviewDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idincColumn {
                get {
                    return this.columnidinc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nphaseColumn {
                get {
                    return this.columnnphase;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn phaseColumn {
                get {
                    return this.columnphase;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ymovColumn {
                get {
                    return this.columnymov;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nmovColumn {
                get {
                    return this.columnnmov;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn parentidincColumn {
                get {
                    return this.columnparentidinc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ayearColumn {
                get {
                    return this.columnayear;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idregColumn {
                get {
                    return this.columnidreg;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn registryColumn {
                get {
                    return this.columnregistry;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idfinColumn {
                get {
                    return this.columnidfin;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn codefinColumn {
                get {
                    return this.columncodefin;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn financeColumn {
                get {
                    return this.columnfinance;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idmanColumn {
                get {
                    return this.columnidman;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn managerColumn {
                get {
                    return this.columnmanager;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nproColumn {
                get {
                    return this.columnnpro;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn docColumn {
                get {
                    return this.columndoc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn docdateColumn {
                get {
                    return this.columndocdate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ayearstartamountColumn {
                get {
                    return this.columnayearstartamount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn curramountColumn {
                get {
                    return this.columncurramount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn availableColumn {
                get {
                    return this.columnavailable;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unpartitionedColumn {
                get {
                    return this.columnunpartitioned;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn flagarrearColumn {
                get {
                    return this.columnflagarrear;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn autokindColumn {
                get {
                    return this.columnautokind;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idpaymentColumn {
                get {
                    return this.columnidpayment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn expirationColumn {
                get {
                    return this.columnexpiration;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn adateColumn {
                get {
                    return this.columnadate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idupbColumn {
                get {
                    return this.columnidupb;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn codeupbColumn {
                get {
                    return this.columncodeupb;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn upbColumn {
                get {
                    return this.columnupb;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public incomeviewRow this[int index] {
                get {
                    return ((incomeviewRow)(this.Rows[index]));
                }
            }
            
            public event incomeviewRowChangeEventHandler incomeviewRowChanging;
            
            public event incomeviewRowChangeEventHandler incomeviewRowChanged;
            
            public event incomeviewRowChangeEventHandler incomeviewRowDeleting;
            
            public event incomeviewRowChangeEventHandler incomeviewRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddincomeviewRow(incomeviewRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public incomeviewRow AddincomeviewRow(
                        int idinc, 
                        byte nphase, 
                        string phase, 
                        short ymov, 
                        int nmov, 
                        int parentidinc, 
                        short ayear, 
                        string description, 
                        int idreg, 
                        string registry, 
                        string idfin, 
                        string codefin, 
                        string finance, 
                        int idman, 
                        string manager, 
                        int npro, 
                        string doc, 
                        System.DateTime docdate, 
                        decimal ayearstartamount, 
                        decimal curramount, 
                        decimal available, 
                        decimal unpartitioned, 
                        byte flag, 
                        string flagarrear, 
                        int autokind, 
                        int idpayment, 
                        System.DateTime expiration, 
                        System.DateTime adate, 
                        string cu, 
                        System.DateTime ct, 
                        string lu, 
                        System.DateTime lt, 
                        string idupb, 
                        string codeupb, 
                        string upb) {
                incomeviewRow rowincomeviewRow = ((incomeviewRow)(this.NewRow()));
                rowincomeviewRow.ItemArray = new object[] {
                        idinc,
                        nphase,
                        phase,
                        ymov,
                        nmov,
                        parentidinc,
                        ayear,
                        description,
                        idreg,
                        registry,
                        idfin,
                        codefin,
                        finance,
                        idman,
                        manager,
                        npro,
                        doc,
                        docdate,
                        ayearstartamount,
                        curramount,
                        available,
                        unpartitioned,
                        flag,
                        flagarrear,
                        autokind,
                        idpayment,
                        expiration,
                        adate,
                        cu,
                        ct,
                        lu,
                        lt,
                        idupb,
                        codeupb,
                        upb};
                this.Rows.Add(rowincomeviewRow);
                return rowincomeviewRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public incomeviewRow FindByidinc(int idinc) {
                return ((incomeviewRow)(this.Rows.Find(new object[] {
                            idinc})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                incomeviewDataTable cln = ((incomeviewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new incomeviewDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidinc = base.Columns["idinc"];
                this.columnnphase = base.Columns["nphase"];
                this.columnphase = base.Columns["phase"];
                this.columnymov = base.Columns["ymov"];
                this.columnnmov = base.Columns["nmov"];
                this.columnparentidinc = base.Columns["parentidinc"];
                this.columnayear = base.Columns["ayear"];
                this.columndescription = base.Columns["description"];
                this.columnidreg = base.Columns["idreg"];
                this.columnregistry = base.Columns["registry"];
                this.columnidfin = base.Columns["idfin"];
                this.columncodefin = base.Columns["codefin"];
                this.columnfinance = base.Columns["finance"];
                this.columnidman = base.Columns["idman"];
                this.columnmanager = base.Columns["manager"];
                this.columnnpro = base.Columns["npro"];
                this.columndoc = base.Columns["doc"];
                this.columndocdate = base.Columns["docdate"];
                this.columnayearstartamount = base.Columns["ayearstartamount"];
                this.columncurramount = base.Columns["curramount"];
                this.columnavailable = base.Columns["available"];
                this.columnunpartitioned = base.Columns["unpartitioned"];
                this.columnflag = base.Columns["flag"];
                this.columnflagarrear = base.Columns["flagarrear"];
                this.columnautokind = base.Columns["autokind"];
                this.columnidpayment = base.Columns["idpayment"];
                this.columnexpiration = base.Columns["expiration"];
                this.columnadate = base.Columns["adate"];
                this.columncu = base.Columns["cu"];
                this.columnct = base.Columns["ct"];
                this.columnlu = base.Columns["lu"];
                this.columnlt = base.Columns["lt"];
                this.columnidupb = base.Columns["idupb"];
                this.columncodeupb = base.Columns["codeupb"];
                this.columnupb = base.Columns["upb"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidinc = new System.Data.DataColumn("idinc", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidinc);
                this.columnnphase = new System.Data.DataColumn("nphase", typeof(byte), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnphase);
                this.columnphase = new System.Data.DataColumn("phase", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnphase);
                this.columnymov = new System.Data.DataColumn("ymov", typeof(short), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnymov);
                this.columnnmov = new System.Data.DataColumn("nmov", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnmov);
                this.columnparentidinc = new System.Data.DataColumn("parentidinc", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnparentidinc);
                this.columnayear = new System.Data.DataColumn("ayear", typeof(short), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnayear);
                this.columndescription = new System.Data.DataColumn("description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnidreg = new System.Data.DataColumn("idreg", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidreg);
                this.columnregistry = new System.Data.DataColumn("registry", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistry);
                this.columnidfin = new System.Data.DataColumn("idfin", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfin);
                this.columncodefin = new System.Data.DataColumn("codefin", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncodefin);
                this.columnfinance = new System.Data.DataColumn("finance", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfinance);
                this.columnidman = new System.Data.DataColumn("idman", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidman);
                this.columnmanager = new System.Data.DataColumn("manager", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmanager);
                this.columnnpro = new System.Data.DataColumn("npro", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnpro);
                this.columndoc = new System.Data.DataColumn("doc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndoc);
                this.columndocdate = new System.Data.DataColumn("docdate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndocdate);
                this.columnayearstartamount = new System.Data.DataColumn("ayearstartamount", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnayearstartamount);
                this.columncurramount = new System.Data.DataColumn("curramount", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncurramount);
                this.columnavailable = new System.Data.DataColumn("available", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnavailable);
                this.columnunpartitioned = new System.Data.DataColumn("unpartitioned", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnunpartitioned);
                this.columnflag = new System.Data.DataColumn("flag", typeof(byte), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnflagarrear = new System.Data.DataColumn("flagarrear", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnflagarrear);
                this.columnautokind = new System.Data.DataColumn("autokind", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnautokind);
                this.columnidpayment = new System.Data.DataColumn("idpayment", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidpayment);
                this.columnexpiration = new System.Data.DataColumn("expiration", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnexpiration);
                this.columnadate = new System.Data.DataColumn("adate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnadate);
                this.columncu = new System.Data.DataColumn("cu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnct = new System.Data.DataColumn("ct", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlu = new System.Data.DataColumn("lu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnlt = new System.Data.DataColumn("lt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.columnidupb = new System.Data.DataColumn("idupb", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidupb);
                this.columncodeupb = new System.Data.DataColumn("codeupb", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncodeupb);
                this.columnupb = new System.Data.DataColumn("upb", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnupb);
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey4", new System.Data.DataColumn[] {
                                this.columnidinc}, true));
                this.columnidinc.AllowDBNull = false;
                this.columnidinc.Unique = true;
                this.columnnphase.AllowDBNull = false;
                this.columnphase.AllowDBNull = false;
                this.columnymov.AllowDBNull = false;
                this.columnnmov.AllowDBNull = false;
                this.columnayear.AllowDBNull = false;
                this.columndescription.AllowDBNull = false;
                this.columnunpartitioned.ReadOnly = true;
                this.columnadate.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlt.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public incomeviewRow NewincomeviewRow() {
                return ((incomeviewRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new incomeviewRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(incomeviewRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.incomeviewRowChanged != null)) {
                    this.incomeviewRowChanged(this, new incomeviewRowChangeEvent(((incomeviewRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.incomeviewRowChanging != null)) {
                    this.incomeviewRowChanging(this, new incomeviewRowChangeEvent(((incomeviewRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.incomeviewRowDeleted != null)) {
                    this.incomeviewRowDeleted(this, new incomeviewRowChangeEvent(((incomeviewRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.incomeviewRowDeleting != null)) {
                    this.incomeviewRowDeleting(this, new incomeviewRowChangeEvent(((incomeviewRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveincomeviewRow(incomeviewRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "incomeviewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class incomephaseDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnnphase;
            
            private System.Data.DataColumn columndescription;
            
            private System.Data.DataColumn columnflagregistry;
            
            private System.Data.DataColumn columnflagfinance;
            
            private System.Data.DataColumn columncu;
            
            private System.Data.DataColumn columnct;
            
            private System.Data.DataColumn columnlu;
            
            private System.Data.DataColumn columnlt;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public incomephaseDataTable() {
                this.TableName = "incomephase";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal incomephaseDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected incomephaseDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nphaseColumn {
                get {
                    return this.columnnphase;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn flagregistryColumn {
                get {
                    return this.columnflagregistry;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn flagfinanceColumn {
                get {
                    return this.columnflagfinance;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public incomephaseRow this[int index] {
                get {
                    return ((incomephaseRow)(this.Rows[index]));
                }
            }
            
            public event incomephaseRowChangeEventHandler incomephaseRowChanging;
            
            public event incomephaseRowChangeEventHandler incomephaseRowChanged;
            
            public event incomephaseRowChangeEventHandler incomephaseRowDeleting;
            
            public event incomephaseRowChangeEventHandler incomephaseRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddincomephaseRow(incomephaseRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public incomephaseRow AddincomephaseRow(byte nphase, string description, string flagregistry, string flagfinance, string cu, System.DateTime ct, string lu, System.DateTime lt) {
                incomephaseRow rowincomephaseRow = ((incomephaseRow)(this.NewRow()));
                rowincomephaseRow.ItemArray = new object[] {
                        nphase,
                        description,
                        flagregistry,
                        flagfinance,
                        cu,
                        ct,
                        lu,
                        lt};
                this.Rows.Add(rowincomephaseRow);
                return rowincomephaseRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public incomephaseRow FindBynphase(byte nphase) {
                return ((incomephaseRow)(this.Rows.Find(new object[] {
                            nphase})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                incomephaseDataTable cln = ((incomephaseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new incomephaseDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnphase = base.Columns["nphase"];
                this.columndescription = base.Columns["description"];
                this.columnflagregistry = base.Columns["flagregistry"];
                this.columnflagfinance = base.Columns["flagfinance"];
                this.columncu = base.Columns["cu"];
                this.columnct = base.Columns["ct"];
                this.columnlu = base.Columns["lu"];
                this.columnlt = base.Columns["lt"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnphase = new System.Data.DataColumn("nphase", typeof(byte), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnphase);
                this.columndescription = new System.Data.DataColumn("description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnflagregistry = new System.Data.DataColumn("flagregistry", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnflagregistry);
                this.columnflagfinance = new System.Data.DataColumn("flagfinance", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnflagfinance);
                this.columncu = new System.Data.DataColumn("cu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnct = new System.Data.DataColumn("ct", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlu = new System.Data.DataColumn("lu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnlt = new System.Data.DataColumn("lt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey5", new System.Data.DataColumn[] {
                                this.columnnphase}, true));
                this.columnnphase.AllowDBNull = false;
                this.columnnphase.Unique = true;
                this.columndescription.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlt.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public incomephaseRow NewincomephaseRow() {
                return ((incomephaseRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new incomephaseRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(incomephaseRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.incomephaseRowChanged != null)) {
                    this.incomephaseRowChanged(this, new incomephaseRowChangeEvent(((incomephaseRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.incomephaseRowChanging != null)) {
                    this.incomephaseRowChanging(this, new incomephaseRowChangeEvent(((incomephaseRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.incomephaseRowDeleted != null)) {
                    this.incomephaseRowDeleted(this, new incomephaseRowChangeEvent(((incomephaseRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.incomephaseRowDeleting != null)) {
                    this.incomephaseRowDeleting(this, new incomephaseRowChangeEvent(((incomephaseRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveincomephaseRow(incomephaseRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "incomephaseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class finDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnidfin;
            
            private System.Data.DataColumn columncodefin;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public finDataTable() {
                this.TableName = "fin";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal finDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected finDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idfinColumn {
                get {
                    return this.columnidfin;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn codefinColumn {
                get {
                    return this.columncodefin;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public finRow this[int index] {
                get {
                    return ((finRow)(this.Rows[index]));
                }
            }
            
            public event finRowChangeEventHandler finRowChanging;
            
            public event finRowChangeEventHandler finRowChanged;
            
            public event finRowChangeEventHandler finRowDeleting;
            
            public event finRowChangeEventHandler finRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddfinRow(finRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public finRow AddfinRow(string idfin, string codefin) {
                finRow rowfinRow = ((finRow)(this.NewRow()));
                rowfinRow.ItemArray = new object[] {
                        idfin,
                        codefin};
                this.Rows.Add(rowfinRow);
                return rowfinRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public finRow FindByidfin(string idfin) {
                return ((finRow)(this.Rows.Find(new object[] {
                            idfin})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                finDataTable cln = ((finDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new finDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidfin = base.Columns["idfin"];
                this.columncodefin = base.Columns["codefin"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidfin = new System.Data.DataColumn("idfin", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfin);
                this.columncodefin = new System.Data.DataColumn("codefin", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncodefin);
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey6", new System.Data.DataColumn[] {
                                this.columnidfin}, true));
                this.columnidfin.AllowDBNull = false;
                this.columnidfin.Unique = true;
                this.columncodefin.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public finRow NewfinRow() {
                return ((finRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new finRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(finRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.finRowChanged != null)) {
                    this.finRowChanged(this, new finRowChangeEvent(((finRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.finRowChanging != null)) {
                    this.finRowChanging(this, new finRowChangeEvent(((finRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.finRowDeleted != null)) {
                    this.finRowDeleted(this, new finRowChangeEvent(((finRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.finRowDeleting != null)) {
                    this.finRowDeleting(this, new finRowChangeEvent(((finRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovefinRow(finRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "finDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class creditpartRow : System.Data.DataRow {
            
            private creditpartDataTable tablecreditpart;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal creditpartRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecreditpart = ((creditpartDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idinc {
                get {
                    return ((int)(this[this.tablecreditpart.idincColumn]));
                }
                set {
                    this[this.tablecreditpart.idincColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ncreditpart {
                get {
                    return ((int)(this[this.tablecreditpart.ncreditpartColumn]));
                }
                set {
                    this[this.tablecreditpart.ncreditpartColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idfin {
                get {
                    return ((string)(this[this.tablecreditpart.idfinColumn]));
                }
                set {
                    this[this.tablecreditpart.idfinColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string @__codicebilancio {
                get {
                    try {
                        return ((string)(this[this.tablecreditpart.@__codicebilancioColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'!codicebilancio\' in table \'creditpart\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecreditpart.@__codicebilancioColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ycreditpart {
                get {
                    return ((short)(this[this.tablecreditpart.ycreditpartColumn]));
                }
                set {
                    this[this.tablecreditpart.ycreditpartColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    return ((string)(this[this.tablecreditpart.descriptionColumn]));
                }
                set {
                    this[this.tablecreditpart.descriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal amount {
                get {
                    try {
                        return ((decimal)(this[this.tablecreditpart.amountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'amount\' in table \'creditpart\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecreditpart.amountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime adate {
                get {
                    return ((System.DateTime)(this[this.tablecreditpart.adateColumn]));
                }
                set {
                    this[this.tablecreditpart.adateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string txt {
                get {
                    try {
                        return ((string)(this[this.tablecreditpart.txtColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'txt\' in table \'creditpart\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecreditpart.txtColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] rtf {
                get {
                    try {
                        return ((byte[])(this[this.tablecreditpart.rtfColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'rtf\' in table \'creditpart\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecreditpart.rtfColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cu {
                get {
                    return ((string)(this[this.tablecreditpart.cuColumn]));
                }
                set {
                    this[this.tablecreditpart.cuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ct {
                get {
                    return ((System.DateTime)(this[this.tablecreditpart.ctColumn]));
                }
                set {
                    this[this.tablecreditpart.ctColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    return ((string)(this[this.tablecreditpart.luColumn]));
                }
                set {
                    this[this.tablecreditpart.luColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    return ((System.DateTime)(this[this.tablecreditpart.ltColumn]));
                }
                set {
                    this[this.tablecreditpart.ltColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public finRow finRow {
                get {
                    return ((finRow)(this.GetParentRow(this.Table.ParentRelations["fincreditpart"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fincreditpart"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public incomeviewRow incomeviewRow {
                get {
                    return ((incomeviewRow)(this.GetParentRow(this.Table.ParentRelations["incomeviewcreditpart"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["incomeviewcreditpart"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is__codicebilancioNull() {
                return this.IsNull(this.tablecreditpart.@__codicebilancioColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set__codicebilancioNull() {
                this[this.tablecreditpart.@__codicebilancioColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsamountNull() {
                return this.IsNull(this.tablecreditpart.amountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetamountNull() {
                this[this.tablecreditpart.amountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstxtNull() {
                return this.IsNull(this.tablecreditpart.txtColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettxtNull() {
                this[this.tablecreditpart.txtColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrtfNull() {
                return this.IsNull(this.tablecreditpart.rtfColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrtfNull() {
                this[this.tablecreditpart.rtfColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class incomeviewRow : System.Data.DataRow {
            
            private incomeviewDataTable tableincomeview;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal incomeviewRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableincomeview = ((incomeviewDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idinc {
                get {
                    return ((int)(this[this.tableincomeview.idincColumn]));
                }
                set {
                    this[this.tableincomeview.idincColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte nphase {
                get {
                    return ((byte)(this[this.tableincomeview.nphaseColumn]));
                }
                set {
                    this[this.tableincomeview.nphaseColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phase {
                get {
                    return ((string)(this[this.tableincomeview.phaseColumn]));
                }
                set {
                    this[this.tableincomeview.phaseColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ymov {
                get {
                    return ((short)(this[this.tableincomeview.ymovColumn]));
                }
                set {
                    this[this.tableincomeview.ymovColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nmov {
                get {
                    return ((int)(this[this.tableincomeview.nmovColumn]));
                }
                set {
                    this[this.tableincomeview.nmovColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int parentidinc {
                get {
                    try {
                        return ((int)(this[this.tableincomeview.parentidincColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'parentidinc\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.parentidincColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ayear {
                get {
                    return ((short)(this[this.tableincomeview.ayearColumn]));
                }
                set {
                    this[this.tableincomeview.ayearColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    return ((string)(this[this.tableincomeview.descriptionColumn]));
                }
                set {
                    this[this.tableincomeview.descriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idreg {
                get {
                    try {
                        return ((int)(this[this.tableincomeview.idregColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idreg\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.idregColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string registry {
                get {
                    try {
                        return ((string)(this[this.tableincomeview.registryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'registry\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.registryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idfin {
                get {
                    try {
                        return ((string)(this[this.tableincomeview.idfinColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idfin\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.idfinColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string codefin {
                get {
                    try {
                        return ((string)(this[this.tableincomeview.codefinColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'codefin\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.codefinColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string finance {
                get {
                    try {
                        return ((string)(this[this.tableincomeview.financeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'finance\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.financeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idman {
                get {
                    try {
                        return ((int)(this[this.tableincomeview.idmanColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idman\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.idmanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string manager {
                get {
                    try {
                        return ((string)(this[this.tableincomeview.managerColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'manager\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.managerColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int npro {
                get {
                    try {
                        return ((int)(this[this.tableincomeview.nproColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'npro\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.nproColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string doc {
                get {
                    try {
                        return ((string)(this[this.tableincomeview.docColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'doc\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.docColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime docdate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableincomeview.docdateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'docdate\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.docdateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ayearstartamount {
                get {
                    try {
                        return ((decimal)(this[this.tableincomeview.ayearstartamountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ayearstartamount\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.ayearstartamountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal curramount {
                get {
                    try {
                        return ((decimal)(this[this.tableincomeview.curramountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'curramount\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.curramountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal available {
                get {
                    try {
                        return ((decimal)(this[this.tableincomeview.availableColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'available\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.availableColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal unpartitioned {
                get {
                    try {
                        return ((decimal)(this[this.tableincomeview.unpartitionedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'unpartitioned\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.unpartitionedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte flag {
                get {
                    try {
                        return ((byte)(this[this.tableincomeview.flagColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'flag\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.flagColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flagarrear {
                get {
                    try {
                        return ((string)(this[this.tableincomeview.flagarrearColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'flagarrear\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.flagarrearColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int autokind {
                get {
                    try {
                        return ((int)(this[this.tableincomeview.autokindColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'autokind\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.autokindColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idpayment {
                get {
                    try {
                        return ((int)(this[this.tableincomeview.idpaymentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idpayment\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.idpaymentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime expiration {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableincomeview.expirationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'expiration\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.expirationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime adate {
                get {
                    return ((System.DateTime)(this[this.tableincomeview.adateColumn]));
                }
                set {
                    this[this.tableincomeview.adateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cu {
                get {
                    return ((string)(this[this.tableincomeview.cuColumn]));
                }
                set {
                    this[this.tableincomeview.cuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ct {
                get {
                    return ((System.DateTime)(this[this.tableincomeview.ctColumn]));
                }
                set {
                    this[this.tableincomeview.ctColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    return ((string)(this[this.tableincomeview.luColumn]));
                }
                set {
                    this[this.tableincomeview.luColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    return ((System.DateTime)(this[this.tableincomeview.ltColumn]));
                }
                set {
                    this[this.tableincomeview.ltColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idupb {
                get {
                    try {
                        return ((string)(this[this.tableincomeview.idupbColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idupb\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.idupbColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string codeupb {
                get {
                    try {
                        return ((string)(this[this.tableincomeview.codeupbColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'codeupb\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.codeupbColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string upb {
                get {
                    try {
                        return ((string)(this[this.tableincomeview.upbColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'upb\' in table \'incomeview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomeview.upbColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsparentidincNull() {
                return this.IsNull(this.tableincomeview.parentidincColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetparentidincNull() {
                this[this.tableincomeview.parentidincColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidregNull() {
                return this.IsNull(this.tableincomeview.idregColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidregNull() {
                this[this.tableincomeview.idregColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsregistryNull() {
                return this.IsNull(this.tableincomeview.registryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetregistryNull() {
                this[this.tableincomeview.registryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidfinNull() {
                return this.IsNull(this.tableincomeview.idfinColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidfinNull() {
                this[this.tableincomeview.idfinColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodefinNull() {
                return this.IsNull(this.tableincomeview.codefinColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodefinNull() {
                this[this.tableincomeview.codefinColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfinanceNull() {
                return this.IsNull(this.tableincomeview.financeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfinanceNull() {
                this[this.tableincomeview.financeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidmanNull() {
                return this.IsNull(this.tableincomeview.idmanColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidmanNull() {
                this[this.tableincomeview.idmanColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmanagerNull() {
                return this.IsNull(this.tableincomeview.managerColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmanagerNull() {
                this[this.tableincomeview.managerColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnproNull() {
                return this.IsNull(this.tableincomeview.nproColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnproNull() {
                this[this.tableincomeview.nproColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdocNull() {
                return this.IsNull(this.tableincomeview.docColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdocNull() {
                this[this.tableincomeview.docColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdocdateNull() {
                return this.IsNull(this.tableincomeview.docdateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdocdateNull() {
                this[this.tableincomeview.docdateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsayearstartamountNull() {
                return this.IsNull(this.tableincomeview.ayearstartamountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetayearstartamountNull() {
                this[this.tableincomeview.ayearstartamountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscurramountNull() {
                return this.IsNull(this.tableincomeview.curramountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcurramountNull() {
                this[this.tableincomeview.curramountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsavailableNull() {
                return this.IsNull(this.tableincomeview.availableColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetavailableNull() {
                this[this.tableincomeview.availableColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunpartitionedNull() {
                return this.IsNull(this.tableincomeview.unpartitionedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunpartitionedNull() {
                this[this.tableincomeview.unpartitionedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagNull() {
                return this.IsNull(this.tableincomeview.flagColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagNull() {
                this[this.tableincomeview.flagColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagarrearNull() {
                return this.IsNull(this.tableincomeview.flagarrearColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagarrearNull() {
                this[this.tableincomeview.flagarrearColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsautokindNull() {
                return this.IsNull(this.tableincomeview.autokindColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetautokindNull() {
                this[this.tableincomeview.autokindColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidpaymentNull() {
                return this.IsNull(this.tableincomeview.idpaymentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidpaymentNull() {
                this[this.tableincomeview.idpaymentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsexpirationNull() {
                return this.IsNull(this.tableincomeview.expirationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetexpirationNull() {
                this[this.tableincomeview.expirationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidupbNull() {
                return this.IsNull(this.tableincomeview.idupbColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidupbNull() {
                this[this.tableincomeview.idupbColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodeupbNull() {
                return this.IsNull(this.tableincomeview.codeupbColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodeupbNull() {
                this[this.tableincomeview.codeupbColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupbNull() {
                return this.IsNull(this.tableincomeview.upbColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupbNull() {
                this[this.tableincomeview.upbColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public creditpartRow[] GetcreditpartRows() {
                return ((creditpartRow[])(base.GetChildRows(this.Table.ChildRelations["incomeviewcreditpart"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class incomephaseRow : System.Data.DataRow {
            
            private incomephaseDataTable tableincomephase;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal incomephaseRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableincomephase = ((incomephaseDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte nphase {
                get {
                    return ((byte)(this[this.tableincomephase.nphaseColumn]));
                }
                set {
                    this[this.tableincomephase.nphaseColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    return ((string)(this[this.tableincomephase.descriptionColumn]));
                }
                set {
                    this[this.tableincomephase.descriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flagregistry {
                get {
                    try {
                        return ((string)(this[this.tableincomephase.flagregistryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'flagregistry\' in table \'incomephase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomephase.flagregistryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flagfinance {
                get {
                    try {
                        return ((string)(this[this.tableincomephase.flagfinanceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'flagfinance\' in table \'incomephase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableincomephase.flagfinanceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cu {
                get {
                    return ((string)(this[this.tableincomephase.cuColumn]));
                }
                set {
                    this[this.tableincomephase.cuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ct {
                get {
                    return ((System.DateTime)(this[this.tableincomephase.ctColumn]));
                }
                set {
                    this[this.tableincomephase.ctColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    return ((string)(this[this.tableincomephase.luColumn]));
                }
                set {
                    this[this.tableincomephase.luColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    return ((System.DateTime)(this[this.tableincomephase.ltColumn]));
                }
                set {
                    this[this.tableincomephase.ltColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagregistryNull() {
                return this.IsNull(this.tableincomephase.flagregistryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagregistryNull() {
                this[this.tableincomephase.flagregistryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagfinanceNull() {
                return this.IsNull(this.tableincomephase.flagfinanceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagfinanceNull() {
                this[this.tableincomephase.flagfinanceColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class finRow : System.Data.DataRow {
            
            private finDataTable tablefin;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal finRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefin = ((finDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idfin {
                get {
                    return ((string)(this[this.tablefin.idfinColumn]));
                }
                set {
                    this[this.tablefin.idfinColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string codefin {
                get {
                    return ((string)(this[this.tablefin.codefinColumn]));
                }
                set {
                    this[this.tablefin.codefinColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public creditpartRow[] GetcreditpartRows() {
                return ((creditpartRow[])(base.GetChildRows(this.Table.ChildRelations["fincreditpart"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class creditpartRowChangeEvent : System.EventArgs {
            
            private creditpartRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public creditpartRowChangeEvent(creditpartRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public creditpartRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class incomeviewRowChangeEvent : System.EventArgs {
            
            private incomeviewRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public incomeviewRowChangeEvent(incomeviewRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public incomeviewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class incomephaseRowChangeEvent : System.EventArgs {
            
            private incomephaseRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public incomephaseRowChangeEvent(incomephaseRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public incomephaseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class finRowChangeEvent : System.EventArgs {
            
            private finRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public finRowChangeEvent(finRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public finRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591