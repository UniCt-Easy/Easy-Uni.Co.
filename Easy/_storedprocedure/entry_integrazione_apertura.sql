
/*
Easy
Copyright (C) 2021 Università degli Studi di Catania (www.unict.it)
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/


if exists (select * from dbo.sysobjects where id = object_id(N'[entry_integrazione_apertura]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [entry_integrazione_apertura]
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO
--setuser 'amm'
--delete from entrydetail where  exists (select * from entry where entrydetail.yentry = entry.yentry and entrydetail.nentry = entry.nentry and identrykind = 7 and yentry = @ayear )
--delete from entry  where    identrykind = 7 and yentry =  @ayear 
--[entry_integrazione_apertura] 2017, 'C', 94
CREATE PROCEDURE [entry_integrazione_apertura]
(
	@ayear int,
	@kind  char(1),  -- D--> Debiti, C--> Crediti
	@nentry  int /*numero della scrittura di apertura a cui collegare eventualmente i dettagli*/
)

AS BEGIN
DECLARE @gen_01 datetime
SELECT  @gen_01 = CONVERT(datetime, '01-01-' + CONVERT(char(4), @ayear), 105)
 --sp_help entrydetail
 -- [entrydetail_apertura] 2013

DECLARE @max_nentry int

 SELECT @max_nentry =   MAX(nentry)
 FROM [entry]
WHERE yentry = @ayear 

select @nentry
IF (@max_nentry IS NULL) SET @max_nentry = 0

DECLARE @ndetail_max int
SET @ndetail_max = 0

IF (ISNULL(@nentry,0) <> 0) 
SELECT @ndetail_max = max(ndetail) FROM entrydetail WHERE yentry = @ayear AND nentry = @nentry

if (@ndetail_max is null) set  @ndetail_max = 0

CREATE TABLE #entrydetail
(
	nentry int, 
	yentry int, 
	ndetail int identity(1,1), 
	amount decimal(19,2),
	ct datetime, 
	cu varchar(64), 
	idacc varchar(38),
	idreg int,
	idupb varchar(36), 
	lt datetime, 
	lu varchar(64),
	idaccmotive varchar(36),
	competencystart datetime, 
	competencystop datetime,
	idsor1 int, 
	idsor2 int,
	idsor3 int, 
	importcode varchar(200),
	description varchar(400),
	autogenerated char(1),
	idrelated varchar(50),
	idepexp int,
	idepacc int
)

	-------------------------------------------------------------------------------------------------
	---------------------------------------------- KIND = Debiti ------------------------------------
	-------------------------------------------------------------------------------------------------
IF (@kind = 'D')
	INSERT INTO #entrydetail
	(
			yentry, nentry, amount,	competencystart,competencystop,
			ct,	cu,idacc,	idaccmotive,idreg,
			idsor1,idsor2, idsor3, idupb, lt,lu,
			description,importcode,	autogenerated,
			idepacc,	idepexp,idrelated
	)
	/**debiti**/
	/*dettagli su conti di debito da integrare*/
	SELECT 			
	@ayear,ISNULL(@nentry,@max_nentry + 1), ED.amount*(-1) 	/**debiti**/, ED.competencystart, ED.competencystop,
	GETDATE(),ED.cu, ED.idacc,	ED.idaccmotive,ED.idreg,
	ED.idsor1,	ED.idsor2,	ED.idsor3,	ED.idupb, GETDATE(),ED.lu,
	ED.description,ED.importcode, ED.autogenerated,
	ED.idepacc, ED.idepexp /*copio il valore di idepexp*/,	ED.idrelated
	from entrydetail ED
	join epexp E on ED.idepexp = E.idepexp
	join account A on ED.idacc=A.idacc
	where 
			(
			  ((A.flagaccountusage& 16 <>0) and (ED.amount <0)) -- prendiamo solo le chiusure (in dare) di debiti non le aperture (che sono in avere)
			   OR
			   ((A.flagaccountusage& 2 <>0) and (ED.amount <0)) -- ratei passivi in dare (di solito  si aprono in avere)
			)
				and E.yepexp<@ayear and ED.yentry=@ayear --AND ED.idepacc is null
			and (select sum(ed3.amount) from entrydetail ed3 where ed3.yentry=@ayear and ed3.idacc=ed.idacc and ed3.idupb=ed.idupb and ed3.idepexp=ed.idepexp)<0
	
	UNION  ALL
	/*aggiungo altrettanti dettagli privi dell'informazione su idepexp e con segno pari ai dettagli originali da integrare*/
	/* affinchè il saldo finale della scrittura sia pari a zero*/
	SELECT 			
	@ayear,ISNULL(@nentry,@max_nentry + 1),ED.amount, ED.competencystart,ED.competencystop,
	GETDATE(),	ED.cu,	ED.idacc,	ED.idaccmotive,ED.idreg,
	ED.idsor1,ED.idsor2,ED.idsor3, ED.idupb,GETDATE(), ED.lu,
	ED.description,	ED.importcode,	ED.autogenerated,	
	NULL,	NULL,/*non copio il valore di idepexp*/	ED.idrelated
	from entrydetail ED
	join epexp E on ED.idepexp = E.idepexp
	join account A on ED.idacc=A.idacc
	where(
			  ((A.flagaccountusage& 16 <>0) and (ED.amount <0)) -- prendiamo solo le chiusure (in dare) di debiti non le aperture (che sono in avere)
			   OR
			   ((A.flagaccountusage& 2 <>0) and (ED.amount <0)) -- ratei passivi in dare (di solito  si aprono in avere)
			)
	
		 and E.yepexp<@ayear and ED.yentry=@ayear --AND ED.idepacc is null
		 and (select sum(ed3.amount) from entrydetail ed3 where ed3.yentry=@ayear and ed3.idacc=ed.idacc and ed3.idupb=ed.idupb and ed3.idepexp=ed.idepexp)<0


	ELSE
	
	-------------------------------------------------------------------------------------------------
	---------------------------------------------- KIND = C Crediti ---------------------------------
	-------------------------------------------------------------------------------------------------

	/**crediti**/
	insert into #entrydetail
	(
			yentry, nentry, amount,	competencystart,competencystop,
			ct,	cu,idacc,	idaccmotive,idreg,
			idsor1,idsor2, idsor3, idupb, lt,lu,
			description,importcode,	autogenerated,
			idepacc,	idepexp,idrelated
	)

	select 			
	@ayear, ISNULL(@nentry,@max_nentry + 1), ED.amount*(-1) /**crediti**/,ED.competencystart,ED.competencystop,
	GETDATE(),ED.cu, ED.idacc, ED.idaccmotive, ED.idreg,
	ED.idsor1,ED.idsor2,ED.idsor3,ED.idupb,GETDATE(),ED.lu,
	ED.description,ED.importcode,ED.autogenerated,
	ED.idepacc/*copio il valore di idepacc*/,ED.idepexp, ED.idrelated
	from entrydetail ED
	join epacc E on ED.idepacc = E.idepacc
	join account A on ED.idacc=A.idacc
	where 
	(
			 
			  ((A.flagaccountusage& 32 <>0) and (ED.amount >0)) -- crediti in avere
			  OR
			   ((A.flagaccountusage& 1 <>0) and (ED.amount >0)) -- ratei attivi in avere (di solito si aprono in dare)
			 
			)
		and E.yepacc<@ayear and ED.yentry=@ayear AND ED.idepexp is null
		and (select sum(ed3.amount) from entrydetail ed3 where ed3.yentry=@ayear and ed3.idacc=ed.idacc and ed3.idupb=ed.idupb and ed3.idepacc=ed.idepacc)>0
	UNION  ALL
	/*aggiungo altrettanti dettagli privi dell'informazione su idepacc e con segno pari ai dettagli originali da integrare*/
	/* affinchè il saldo finale della scrittura sia pari a zero*/

	SELECT 			
	@ayear,ISNULL(@nentry,@max_nentry + 1),ED.amount,ED.competencystart,ED.competencystop,
	GETDATE(),	ED.cu,	ED.idacc,	ED.idaccmotive,ED.idreg,
	ED.idsor1,ED.idsor2,ED.idsor3, ED.idupb,GETDATE(), ED.lu,
	ED.description,	ED.importcode,	ED.autogenerated,	
	NULL /*non copio il valore di idepacc*/,	NULL,ED.idrelated
	FROM entrydetail ED
	join epacc E on ED.idepacc = E.idepacc
	join account A on ED.idacc=A.idacc
	WHERE 
	(
			  ((A.flagaccountusage& 32 <>0) and (ED.amount >0)) -- crediti in avere
			  OR
			   ((A.flagaccountusage& 1 <>0) and (ED.amount >0)) -- ratei attivi in avere (di solito si aprono in dare)
			)
	
		and E.yepacc<@ayear and ED.yentry=@ayear AND ED.idepexp is null
		and (select sum(ed3.amount) from entrydetail ed3 where ed3.yentry=@ayear and ed3.idacc=ed.idacc and ed3.idupb=ed.idupb and ed3.idepacc=ed.idepacc)>0

	select * from #entrydetail 
	/*Se ho estratto dei dettagli scrittura da integrare allora creo una nuova scrittura di apertura che integra la precedente*/
	if ((select count(*) from #entrydetail )>0 /*and (select count(*) from entry where yentry = @ayear and identrykind = 7) > 0 */ )
	BEGIN
	    if  (@nentry is null) begin
		INSERT INTO	entry	
		(
			yentry,nentry,adate,identrykind,description, doc,docdate,
			idrelated,locked,rtf,txt,idsor01,idsor02,idsor03,idsor04,idsor05,
			official,ct,cu,lt,lu
		)
		SELECT 
			@ayear,@max_nentry+1 , @gen_01,7,'Scrittura integrativa di apertura esercizio ' + convert(varchar(4),@ayear),null,null,
			null,'N',null,null,null,null,null,null,null,
			'S',Getdate(),'integrazione_apertura',Getdate(),'integrazione_apertura'
		end

	
		insert into entrydetail
	(
			yentry,nentry, ndetail,	amount, competencystart,competencystop,
			ct,cu,idacc,idaccmotive,idreg,idsor1,idsor2,idsor3,idupb,lt,lu,
			description,importcode,autogenerated,idepacc,idepexp,idrelated
	)
	SELECT 
			yentry,nentry, @ndetail_max + ndetail, amount, competencystart,competencystop,
			ct,cu,idacc,idaccmotive,idreg,idsor1, idsor2,idsor3,idupb,lt,lu,
			description,importcode,autogenerated, idepacc, idepexp, idrelated
		from #entrydetail

	SELECT @ayear, ISNULL(@nentry,@max_nentry + 1) 
	END  

	END



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO
