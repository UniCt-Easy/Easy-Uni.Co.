<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCABfAH0DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+iiobq4W0tJrhwSsUbSEDqQBmgCaq91eW1lCZrqeOGMfxO2B
        9K8+1D4gXUs3kWojtRtUliN7/McAc8Dr6GsNJW1S6EjzNPMwZt8kmW2htp5PQZ7AY+lck8XFfCjphhpP
        4j0IeNtHMrJuuMBsBvJJBGDyB1xxjpn261Yg8WaLOQovBG2B/rUZAM+5GP1rgPs9tBIkUkimRuiZC7vw
        6nv3/CqurPs01wmFAII2jGDXOsbK9rHRHBxbsz2TrRWdoLtJoVk7sWYxKST34rRr0zzgoopDQBSn1fTb
        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
</value>
  </data>
  <metadata name="DS.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>