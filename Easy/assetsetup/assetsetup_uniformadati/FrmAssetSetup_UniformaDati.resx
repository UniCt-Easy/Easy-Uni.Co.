<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="DS.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="DS.Tables" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAE5TeXN0ZW0uRGF0YSwgVmVyc2lvbj0yLjAuMC4wLCBDdWx0dXJl
        PW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAABVTeXN0ZW0uRGF0YS5E
        YXRhVGFibGUEAAAAGURhdGFUYWJsZS5SZW1vdGluZ1ZlcnNpb24YRGF0YVRhYmxlLlJlbW90aW5nRm9y
        bWF0CVhtbFNjaGVtYQtYbWxEaWZmR3JhbQMEAQEOU3lzdGVtLlZlcnNpb24fU3lzdGVtLkRhdGEuU2Vy
        aWFsaXphdGlvbkZvcm1hdAIAAAACAAAACQMAAAAF/P///x9TeXN0ZW0uRGF0YS5TZXJpYWxpemF0aW9u
        Rm9ybWF0AQAAAAd2YWx1ZV9fAAgCAAAAAAAAAAYFAAAAmBI8P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29k
        aW5nPSJ1dGYtMTYiPz4NCjx4czpzY2hlbWEgdGFyZ2V0TmFtZXNwYWNlPSJodHRwOi8vdGVtcHVyaS5v
        cmcvdmlzdGFGb3JtLnhzZCIgeG1sbnM6bXN0bnM9Imh0dHA6Ly90ZW1wdXJpLm9yZy92aXN0YUZvcm0u
        eHNkIiB4bWxucz0iaHR0cDovL3RlbXB1cmkub3JnL3Zpc3RhRm9ybS54c2QiIHhtbG5zOnhzPSJodHRw
        Oi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6bXNkYXRhPSJ1cm46c2NoZW1hcy1taWNy
        b3NvZnQtY29tOnhtbC1tc2RhdGEiIGF0dHJpYnV0ZUZvcm1EZWZhdWx0PSJxdWFsaWZpZWQiIGVsZW1l
        bnRGb3JtRGVmYXVsdD0icXVhbGlmaWVkIj4NCiAgPHhzOmVsZW1lbnQgbmFtZT0iYXNzZXRzZXR1cCI+
        DQogICAgPHhzOmNvbXBsZXhUeXBlPg0KICAgICAgPHhzOnNlcXVlbmNlPg0KICAgICAgICA8eHM6ZWxl
        bWVudCBuYW1lPSJheWVhciIgdHlwZT0ieHM6c2hvcnQiIG1zZGF0YTp0YXJnZXROYW1lc3BhY2U9Imh0
        dHA6Ly90ZW1wdXJpLm9yZy92aXN0YUZvcm0ueHNkIiAvPg0KICAgICAgICA8eHM6ZWxlbWVudCBuYW1l
        PSJjdCIgdHlwZT0ieHM6ZGF0ZVRpbWUiIG1zZGF0YTp0YXJnZXROYW1lc3BhY2U9Imh0dHA6Ly90ZW1w
        dXJpLm9yZy92aXN0YUZvcm0ueHNkIiAvPg0KICAgICAgICA8eHM6ZWxlbWVudCBuYW1lPSJjdSIgdHlw
        ZT0ieHM6c3RyaW5nIiBtc2RhdGE6dGFyZ2V0TmFtZXNwYWNlPSJodHRwOi8vdGVtcHVyaS5vcmcvdmlz
        dGFGb3JtLnhzZCIgLz4NCiAgICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iZmxhZ21vdGl2ZSIgdHlwZT0i
        eHM6c3RyaW5nIiBtc2RhdGE6dGFyZ2V0TmFtZXNwYWNlPSJodHRwOi8vdGVtcHVyaS5vcmcvdmlzdGFG
        b3JtLnhzZCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgICA8eHM6ZWxlbWVudCBuYW1lPSJmbGFnbnVt
        YmVyaW5nIiB0eXBlPSJ4czpzdHJpbmciIG1zZGF0YTp0YXJnZXROYW1lc3BhY2U9Imh0dHA6Ly90ZW1w
        dXJpLm9yZy92aXN0YUZvcm0ueHNkIiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICAgIDx4czplbGVtZW50
        IG5hbWU9ImZsYWdyZWdpc3RyeSIgdHlwZT0ieHM6c3RyaW5nIiBtc2RhdGE6dGFyZ2V0TmFtZXNwYWNl
        PSJodHRwOi8vdGVtcHVyaS5vcmcvdmlzdGFGb3JtLnhzZCIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAg
        ICA8eHM6ZWxlbWVudCBuYW1lPSJmbGFncmVzdGFydCIgdHlwZT0ieHM6c3RyaW5nIiBtc2RhdGE6dGFy
        Z2V0TmFtZXNwYWNlPSJodHRwOi8vdGVtcHVyaS5vcmcvdmlzdGFGb3JtLnhzZCIgbWluT2NjdXJzPSIw
        IiAvPg0KICAgICAgICA8eHM6ZWxlbWVudCBuYW1lPSJsdCIgdHlwZT0ieHM6ZGF0ZVRpbWUiIG1zZGF0
        YTp0YXJnZXROYW1lc3BhY2U9Imh0dHA6Ly90ZW1wdXJpLm9yZy92aXN0YUZvcm0ueHNkIiAvPg0KICAg
        ICAgICA8eHM6ZWxlbWVudCBuYW1lPSJsdSIgdHlwZT0ieHM6c3RyaW5nIiBtc2RhdGE6dGFyZ2V0TmFt
        ZXNwYWNlPSJodHRwOi8vdGVtcHVyaS5vcmcvdmlzdGFGb3JtLnhzZCIgLz4NCiAgICAgICAgPHhzOmVs
        ZW1lbnQgbmFtZT0ibnVtZXJhdGlvbmtpbmQiIHR5cGU9InhzOnN0cmluZyIgbXNkYXRhOnRhcmdldE5h
        bWVzcGFjZT0iaHR0cDovL3RlbXB1cmkub3JnL3Zpc3RhRm9ybS54c2QiIG1pbk9jY3Vycz0iMCIgLz4N
        CiAgICAgICAgPHhzOmVsZW1lbnQgbmFtZT0ibGlua3RvaW52b2ljZSIgdHlwZT0ieHM6c3RyaW5nIiBt
        c2RhdGE6dGFyZ2V0TmFtZXNwYWNlPSJodHRwOi8vdGVtcHVyaS5vcmcvdmlzdGFGb3JtLnhzZCIgbWlu
        T2NjdXJzPSIwIiAvPg0KICAgICAgPC94czpzZXF1ZW5jZT4NCiAgICA8L3hzOmNvbXBsZXhUeXBlPg0K
        ICA8L3hzOmVsZW1lbnQ+DQogIDx4czplbGVtZW50IG5hbWU9InZpc3RhRm9ybSIgbXNkYXRhOklzRGF0
        YVNldD0idHJ1ZSIgbXNkYXRhOk1haW5EYXRhVGFibGU9Imh0dHBfeDAwM0FfX3gwMDJGX194MDAyRl90
        ZW1wdXJpLm9yZ194MDAyRl92aXN0YUZvcm0ueHNkX3gwMDNBX2Fzc2V0c2V0dXAiIG1zZGF0YTpVc2VD
        dXJyZW50TG9jYWxlPSJ0cnVlIj4NCiAgICA8eHM6Y29tcGxleFR5cGU+DQogICAgICA8eHM6Y2hvaWNl
        IG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSJ1bmJvdW5kZWQiIC8+DQogICAgPC94czpjb21wbGV4VHlw
        ZT4NCiAgICA8eHM6dW5pcXVlIG5hbWU9IkNvbnN0cmFpbnQxIiBtc2RhdGE6UHJpbWFyeUtleT0idHJ1
        ZSI+DQogICAgICA8eHM6c2VsZWN0b3IgeHBhdGg9Ii4vL21zdG5zOmFzc2V0c2V0dXAiIC8+DQogICAg
        ICA8eHM6ZmllbGQgeHBhdGg9Im1zdG5zOmF5ZWFyIiAvPg0KICAgIDwveHM6dW5pcXVlPg0KICA8L3hz
        OmVsZW1lbnQ+DQo8L3hzOnNjaGVtYT4GBgAAAIABPGRpZmZncjpkaWZmZ3JhbSB4bWxuczptc2RhdGE9
        InVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206eG1sLW1zZGF0YSIgeG1sbnM6ZGlmZmdyPSJ1cm46c2No
        ZW1hcy1taWNyb3NvZnQtY29tOnhtbC1kaWZmZ3JhbS12MSIgLz4EAwAAAA5TeXN0ZW0uVmVyc2lvbgQA
        AAAGX01ham9yBl9NaW5vcgZfQnVpbGQJX1JldmlzaW9uAAAAAAgICAgCAAAAAAAAAP//////////Cw==
</value>
  </data>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>82, 17</value>
  </metadata>
</root>