
/*
Easy
Copyright (C) 2022 Università degli Studi di Catania (www.unict.it)
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/


//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace notable_importazione {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("VistaDettaglioRitenute")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class VistaDettaglioRitenute : global::System.Data.DataSet {
        
        private expensetaxDataTable tableexpensetax;
        
        private expensetaxofficialDataTable tableexpensetaxofficial;
        
        private taxDataTable tabletax;
        
        private fiscaltaxregionDataTable tablefiscaltaxregion;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public VistaDettaglioRitenute() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected VistaDettaglioRitenute(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["expensetax"] != null)) {
                    base.Tables.Add(new expensetaxDataTable(ds.Tables["expensetax"]));
                }
                if ((ds.Tables["expensetaxofficial"] != null)) {
                    base.Tables.Add(new expensetaxofficialDataTable(ds.Tables["expensetaxofficial"]));
                }
                if ((ds.Tables["tax"] != null)) {
                    base.Tables.Add(new taxDataTable(ds.Tables["tax"]));
                }
                if ((ds.Tables["fiscaltaxregion"] != null)) {
                    base.Tables.Add(new fiscaltaxregionDataTable(ds.Tables["fiscaltaxregion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public expensetaxDataTable expensetax {
            get {
                return this.tableexpensetax;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public expensetaxofficialDataTable expensetaxofficial {
            get {
                return this.tableexpensetaxofficial;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public taxDataTable tax {
            get {
                return this.tabletax;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public fiscaltaxregionDataTable fiscaltaxregion {
            get {
                return this.tablefiscaltaxregion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            VistaDettaglioRitenute cln = ((VistaDettaglioRitenute)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["expensetax"] != null)) {
                    base.Tables.Add(new expensetaxDataTable(ds.Tables["expensetax"]));
                }
                if ((ds.Tables["expensetaxofficial"] != null)) {
                    base.Tables.Add(new expensetaxofficialDataTable(ds.Tables["expensetaxofficial"]));
                }
                if ((ds.Tables["tax"] != null)) {
                    base.Tables.Add(new taxDataTable(ds.Tables["tax"]));
                }
                if ((ds.Tables["fiscaltaxregion"] != null)) {
                    base.Tables.Add(new fiscaltaxregionDataTable(ds.Tables["fiscaltaxregion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableexpensetax = ((expensetaxDataTable)(base.Tables["expensetax"]));
            if ((initTable == true)) {
                if ((this.tableexpensetax != null)) {
                    this.tableexpensetax.InitVars();
                }
            }
            this.tableexpensetaxofficial = ((expensetaxofficialDataTable)(base.Tables["expensetaxofficial"]));
            if ((initTable == true)) {
                if ((this.tableexpensetaxofficial != null)) {
                    this.tableexpensetaxofficial.InitVars();
                }
            }
            this.tabletax = ((taxDataTable)(base.Tables["tax"]));
            if ((initTable == true)) {
                if ((this.tabletax != null)) {
                    this.tabletax.InitVars();
                }
            }
            this.tablefiscaltaxregion = ((fiscaltaxregionDataTable)(base.Tables["fiscaltaxregion"]));
            if ((initTable == true)) {
                if ((this.tablefiscaltaxregion != null)) {
                    this.tablefiscaltaxregion.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "VistaDettaglioRitenute";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/VistaDettaglioRitenute.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableexpensetax = new expensetaxDataTable();
            base.Tables.Add(this.tableexpensetax);
            this.tableexpensetaxofficial = new expensetaxofficialDataTable();
            base.Tables.Add(this.tableexpensetaxofficial);
            this.tabletax = new taxDataTable();
            base.Tables.Add(this.tabletax);
            this.tablefiscaltaxregion = new fiscaltaxregionDataTable();
            base.Tables.Add(this.tablefiscaltaxregion);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeexpensetax() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeexpensetaxofficial() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializetax() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializefiscaltaxregion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            VistaDettaglioRitenute ds = new VistaDettaglioRitenute();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void expensetaxRowChangeEventHandler(object sender, expensetaxRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void expensetaxofficialRowChangeEventHandler(object sender, expensetaxofficialRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void taxRowChangeEventHandler(object sender, taxRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void fiscaltaxregionRowChangeEventHandler(object sender, fiscaltaxregionRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class expensetaxDataTable : global::System.Data.TypedTableBase<expensetaxRow> {
            
            private global::System.Data.DataColumn columnidexp;
            
            private global::System.Data.DataColumn columntaxcode;
            
            private global::System.Data.DataColumn columnnbracket;
            
            private global::System.Data.DataColumn columnabatements;
            
            private global::System.Data.DataColumn columnadmindenominator;
            
            private global::System.Data.DataColumn columnadminnumerator;
            
            private global::System.Data.DataColumn columnadminrate;
            
            private global::System.Data.DataColumn columnadmintax;
            
            private global::System.Data.DataColumn columnayear;
            
            private global::System.Data.DataColumn columncompetencydate;
            
            private global::System.Data.DataColumn columnct;
            
            private global::System.Data.DataColumn columncu;
            
            private global::System.Data.DataColumn columnemploydenominator;
            
            private global::System.Data.DataColumn columnemploynumerator;
            
            private global::System.Data.DataColumn columnemployrate;
            
            private global::System.Data.DataColumn columnemploytax;
            
            private global::System.Data.DataColumn columnexemptionquota;
            
            private global::System.Data.DataColumn columnidcity;
            
            private global::System.Data.DataColumn columnidfiscaltaxregion;
            
            private global::System.Data.DataColumn columnidinc;
            
            private global::System.Data.DataColumn columnidunifiedtax;
            
            private global::System.Data.DataColumn columnlt;
            
            private global::System.Data.DataColumn columnlu;
            
            private global::System.Data.DataColumn columnntaxpay;
            
            private global::System.Data.DataColumn columntaxabledenominator;
            
            private global::System.Data.DataColumn columntaxablegross;
            
            private global::System.Data.DataColumn columntaxablenet;
            
            private global::System.Data.DataColumn columntaxablenumerator;
            
            private global::System.Data.DataColumn columnytaxpay;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public expensetaxDataTable() {
                this.TableName = "expensetax";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal expensetaxDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected expensetaxDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idexpColumn {
                get {
                    return this.columnidexp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn taxcodeColumn {
                get {
                    return this.columntaxcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn nbracketColumn {
                get {
                    return this.columnnbracket;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn abatementsColumn {
                get {
                    return this.columnabatements;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn admindenominatorColumn {
                get {
                    return this.columnadmindenominator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn adminnumeratorColumn {
                get {
                    return this.columnadminnumerator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn adminrateColumn {
                get {
                    return this.columnadminrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn admintaxColumn {
                get {
                    return this.columnadmintax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ayearColumn {
                get {
                    return this.columnayear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn competencydateColumn {
                get {
                    return this.columncompetencydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn employdenominatorColumn {
                get {
                    return this.columnemploydenominator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn employnumeratorColumn {
                get {
                    return this.columnemploynumerator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn employrateColumn {
                get {
                    return this.columnemployrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn employtaxColumn {
                get {
                    return this.columnemploytax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn exemptionquotaColumn {
                get {
                    return this.columnexemptionquota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idcityColumn {
                get {
                    return this.columnidcity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idfiscaltaxregionColumn {
                get {
                    return this.columnidfiscaltaxregion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idincColumn {
                get {
                    return this.columnidinc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idunifiedtaxColumn {
                get {
                    return this.columnidunifiedtax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ntaxpayColumn {
                get {
                    return this.columnntaxpay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn taxabledenominatorColumn {
                get {
                    return this.columntaxabledenominator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn taxablegrossColumn {
                get {
                    return this.columntaxablegross;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn taxablenetColumn {
                get {
                    return this.columntaxablenet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn taxablenumeratorColumn {
                get {
                    return this.columntaxablenumerator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ytaxpayColumn {
                get {
                    return this.columnytaxpay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public expensetaxRow this[int index] {
                get {
                    return ((expensetaxRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event expensetaxRowChangeEventHandler expensetaxRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event expensetaxRowChangeEventHandler expensetaxRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event expensetaxRowChangeEventHandler expensetaxRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event expensetaxRowChangeEventHandler expensetaxRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddexpensetaxRow(expensetaxRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public expensetaxRow AddexpensetaxRow(
                        int idexp, 
                        int taxcode, 
                        int nbracket, 
                        decimal abatements, 
                        decimal admindenominator, 
                        decimal adminnumerator, 
                        decimal adminrate, 
                        decimal admintax, 
                        short ayear, 
                        System.DateTime competencydate, 
                        System.DateTime ct, 
                        string cu, 
                        decimal employdenominator, 
                        decimal employnumerator, 
                        decimal employrate, 
                        decimal employtax, 
                        decimal exemptionquota, 
                        int idcity, 
                        string idfiscaltaxregion, 
                        int idinc, 
                        int idunifiedtax, 
                        System.DateTime lt, 
                        string lu, 
                        int ntaxpay, 
                        decimal taxabledenominator, 
                        decimal taxablegross, 
                        decimal taxablenet, 
                        decimal taxablenumerator, 
                        short ytaxpay) {
                expensetaxRow rowexpensetaxRow = ((expensetaxRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        idexp,
                        taxcode,
                        nbracket,
                        abatements,
                        admindenominator,
                        adminnumerator,
                        adminrate,
                        admintax,
                        ayear,
                        competencydate,
                        ct,
                        cu,
                        employdenominator,
                        employnumerator,
                        employrate,
                        employtax,
                        exemptionquota,
                        idcity,
                        idfiscaltaxregion,
                        idinc,
                        idunifiedtax,
                        lt,
                        lu,
                        ntaxpay,
                        taxabledenominator,
                        taxablegross,
                        taxablenet,
                        taxablenumerator,
                        ytaxpay};
                rowexpensetaxRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowexpensetaxRow);
                return rowexpensetaxRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public expensetaxRow FindByidexptaxcodenbracket(int idexp, int taxcode, int nbracket) {
                return ((expensetaxRow)(this.Rows.Find(new object[] {
                            idexp,
                            taxcode,
                            nbracket})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                expensetaxDataTable cln = ((expensetaxDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new expensetaxDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnidexp = base.Columns["idexp"];
                this.columntaxcode = base.Columns["taxcode"];
                this.columnnbracket = base.Columns["nbracket"];
                this.columnabatements = base.Columns["abatements"];
                this.columnadmindenominator = base.Columns["admindenominator"];
                this.columnadminnumerator = base.Columns["adminnumerator"];
                this.columnadminrate = base.Columns["adminrate"];
                this.columnadmintax = base.Columns["admintax"];
                this.columnayear = base.Columns["ayear"];
                this.columncompetencydate = base.Columns["competencydate"];
                this.columnct = base.Columns["ct"];
                this.columncu = base.Columns["cu"];
                this.columnemploydenominator = base.Columns["employdenominator"];
                this.columnemploynumerator = base.Columns["employnumerator"];
                this.columnemployrate = base.Columns["employrate"];
                this.columnemploytax = base.Columns["employtax"];
                this.columnexemptionquota = base.Columns["exemptionquota"];
                this.columnidcity = base.Columns["idcity"];
                this.columnidfiscaltaxregion = base.Columns["idfiscaltaxregion"];
                this.columnidinc = base.Columns["idinc"];
                this.columnidunifiedtax = base.Columns["idunifiedtax"];
                this.columnlt = base.Columns["lt"];
                this.columnlu = base.Columns["lu"];
                this.columnntaxpay = base.Columns["ntaxpay"];
                this.columntaxabledenominator = base.Columns["taxabledenominator"];
                this.columntaxablegross = base.Columns["taxablegross"];
                this.columntaxablenet = base.Columns["taxablenet"];
                this.columntaxablenumerator = base.Columns["taxablenumerator"];
                this.columnytaxpay = base.Columns["ytaxpay"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnidexp = new global::System.Data.DataColumn("idexp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidexp);
                this.columntaxcode = new global::System.Data.DataColumn("taxcode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxcode);
                this.columnnbracket = new global::System.Data.DataColumn("nbracket", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnbracket);
                this.columnabatements = new global::System.Data.DataColumn("abatements", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnabatements);
                this.columnadmindenominator = new global::System.Data.DataColumn("admindenominator", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadmindenominator);
                this.columnadminnumerator = new global::System.Data.DataColumn("adminnumerator", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadminnumerator);
                this.columnadminrate = new global::System.Data.DataColumn("adminrate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadminrate);
                this.columnadmintax = new global::System.Data.DataColumn("admintax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadmintax);
                this.columnayear = new global::System.Data.DataColumn("ayear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnayear);
                this.columncompetencydate = new global::System.Data.DataColumn("competencydate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompetencydate);
                this.columnct = new global::System.Data.DataColumn("ct", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columncu = new global::System.Data.DataColumn("cu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnemploydenominator = new global::System.Data.DataColumn("employdenominator", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemploydenominator);
                this.columnemploynumerator = new global::System.Data.DataColumn("employnumerator", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemploynumerator);
                this.columnemployrate = new global::System.Data.DataColumn("employrate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemployrate);
                this.columnemploytax = new global::System.Data.DataColumn("employtax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemploytax);
                this.columnexemptionquota = new global::System.Data.DataColumn("exemptionquota", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexemptionquota);
                this.columnidcity = new global::System.Data.DataColumn("idcity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcity);
                this.columnidfiscaltaxregion = new global::System.Data.DataColumn("idfiscaltaxregion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfiscaltaxregion);
                this.columnidinc = new global::System.Data.DataColumn("idinc", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidinc);
                this.columnidunifiedtax = new global::System.Data.DataColumn("idunifiedtax", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidunifiedtax);
                this.columnlt = new global::System.Data.DataColumn("lt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.columnlu = new global::System.Data.DataColumn("lu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnntaxpay = new global::System.Data.DataColumn("ntaxpay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnntaxpay);
                this.columntaxabledenominator = new global::System.Data.DataColumn("taxabledenominator", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxabledenominator);
                this.columntaxablegross = new global::System.Data.DataColumn("taxablegross", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxablegross);
                this.columntaxablenet = new global::System.Data.DataColumn("taxablenet", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxablenet);
                this.columntaxablenumerator = new global::System.Data.DataColumn("taxablenumerator", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxablenumerator);
                this.columnytaxpay = new global::System.Data.DataColumn("ytaxpay", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnytaxpay);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidexp,
                                this.columntaxcode,
                                this.columnnbracket}, true));
                this.columnidexp.AllowDBNull = false;
                this.columntaxcode.AllowDBNull = false;
                this.columnnbracket.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columncu.MaxLength = 64;
                this.columnidfiscaltaxregion.MaxLength = 5;
                this.columnlt.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlu.MaxLength = 64;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public expensetaxRow NewexpensetaxRow() {
                return ((expensetaxRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new expensetaxRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(expensetaxRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.expensetaxRowChanged != null)) {
                    this.expensetaxRowChanged(this, new expensetaxRowChangeEvent(((expensetaxRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.expensetaxRowChanging != null)) {
                    this.expensetaxRowChanging(this, new expensetaxRowChangeEvent(((expensetaxRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.expensetaxRowDeleted != null)) {
                    this.expensetaxRowDeleted(this, new expensetaxRowChangeEvent(((expensetaxRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.expensetaxRowDeleting != null)) {
                    this.expensetaxRowDeleting(this, new expensetaxRowChangeEvent(((expensetaxRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveexpensetaxRow(expensetaxRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VistaDettaglioRitenute ds = new VistaDettaglioRitenute();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "expensetaxDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class expensetaxofficialDataTable : global::System.Data.TypedTableBase<expensetaxofficialRow> {
            
            private global::System.Data.DataColumn columnidexp;
            
            private global::System.Data.DataColumn columnidexpensetaxofficial;
            
            private global::System.Data.DataColumn columnabatements;
            
            private global::System.Data.DataColumn columnadmindenominator;
            
            private global::System.Data.DataColumn columnadminnumerator;
            
            private global::System.Data.DataColumn columnadminrate;
            
            private global::System.Data.DataColumn columnadmintax;
            
            private global::System.Data.DataColumn columnayear;
            
            private global::System.Data.DataColumn columnct;
            
            private global::System.Data.DataColumn columncu;
            
            private global::System.Data.DataColumn columnemploydenominator;
            
            private global::System.Data.DataColumn columnemploynumerator;
            
            private global::System.Data.DataColumn columnemployrate;
            
            private global::System.Data.DataColumn columnemploytax;
            
            private global::System.Data.DataColumn columnexemptionquota;
            
            private global::System.Data.DataColumn columnidcity;
            
            private global::System.Data.DataColumn columnidfiscaltaxregion;
            
            private global::System.Data.DataColumn columnlt;
            
            private global::System.Data.DataColumn columnlu;
            
            private global::System.Data.DataColumn columnnbracket;
            
            private global::System.Data.DataColumn columnstart;
            
            private global::System.Data.DataColumn columnstop;
            
            private global::System.Data.DataColumn columntaxabledenominator;
            
            private global::System.Data.DataColumn columntaxablegross;
            
            private global::System.Data.DataColumn columntaxablenet;
            
            private global::System.Data.DataColumn columntaxablenumerator;
            
            private global::System.Data.DataColumn columntaxcode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public expensetaxofficialDataTable() {
                this.TableName = "expensetaxofficial";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal expensetaxofficialDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected expensetaxofficialDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idexpColumn {
                get {
                    return this.columnidexp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idexpensetaxofficialColumn {
                get {
                    return this.columnidexpensetaxofficial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn abatementsColumn {
                get {
                    return this.columnabatements;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn admindenominatorColumn {
                get {
                    return this.columnadmindenominator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn adminnumeratorColumn {
                get {
                    return this.columnadminnumerator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn adminrateColumn {
                get {
                    return this.columnadminrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn admintaxColumn {
                get {
                    return this.columnadmintax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ayearColumn {
                get {
                    return this.columnayear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn employdenominatorColumn {
                get {
                    return this.columnemploydenominator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn employnumeratorColumn {
                get {
                    return this.columnemploynumerator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn employrateColumn {
                get {
                    return this.columnemployrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn employtaxColumn {
                get {
                    return this.columnemploytax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn exemptionquotaColumn {
                get {
                    return this.columnexemptionquota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idcityColumn {
                get {
                    return this.columnidcity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idfiscaltaxregionColumn {
                get {
                    return this.columnidfiscaltaxregion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn nbracketColumn {
                get {
                    return this.columnnbracket;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn startColumn {
                get {
                    return this.columnstart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn stopColumn {
                get {
                    return this.columnstop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn taxabledenominatorColumn {
                get {
                    return this.columntaxabledenominator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn taxablegrossColumn {
                get {
                    return this.columntaxablegross;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn taxablenetColumn {
                get {
                    return this.columntaxablenet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn taxablenumeratorColumn {
                get {
                    return this.columntaxablenumerator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn taxcodeColumn {
                get {
                    return this.columntaxcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public expensetaxofficialRow this[int index] {
                get {
                    return ((expensetaxofficialRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event expensetaxofficialRowChangeEventHandler expensetaxofficialRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event expensetaxofficialRowChangeEventHandler expensetaxofficialRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event expensetaxofficialRowChangeEventHandler expensetaxofficialRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event expensetaxofficialRowChangeEventHandler expensetaxofficialRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddexpensetaxofficialRow(expensetaxofficialRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public expensetaxofficialRow AddexpensetaxofficialRow(
                        int idexp, 
                        int idexpensetaxofficial, 
                        decimal abatements, 
                        decimal admindenominator, 
                        decimal adminnumerator, 
                        decimal adminrate, 
                        decimal admintax, 
                        short ayear, 
                        System.DateTime ct, 
                        string cu, 
                        decimal employdenominator, 
                        decimal employnumerator, 
                        decimal employrate, 
                        decimal employtax, 
                        decimal exemptionquota, 
                        int idcity, 
                        string idfiscaltaxregion, 
                        System.DateTime lt, 
                        string lu, 
                        int nbracket, 
                        System.DateTime start, 
                        System.DateTime stop, 
                        decimal taxabledenominator, 
                        decimal taxablegross, 
                        decimal taxablenet, 
                        decimal taxablenumerator, 
                        int taxcode) {
                expensetaxofficialRow rowexpensetaxofficialRow = ((expensetaxofficialRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        idexp,
                        idexpensetaxofficial,
                        abatements,
                        admindenominator,
                        adminnumerator,
                        adminrate,
                        admintax,
                        ayear,
                        ct,
                        cu,
                        employdenominator,
                        employnumerator,
                        employrate,
                        employtax,
                        exemptionquota,
                        idcity,
                        idfiscaltaxregion,
                        lt,
                        lu,
                        nbracket,
                        start,
                        stop,
                        taxabledenominator,
                        taxablegross,
                        taxablenet,
                        taxablenumerator,
                        taxcode};
                rowexpensetaxofficialRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowexpensetaxofficialRow);
                return rowexpensetaxofficialRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public expensetaxofficialRow FindByidexpidexpensetaxofficial(int idexp, int idexpensetaxofficial) {
                return ((expensetaxofficialRow)(this.Rows.Find(new object[] {
                            idexp,
                            idexpensetaxofficial})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                expensetaxofficialDataTable cln = ((expensetaxofficialDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new expensetaxofficialDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnidexp = base.Columns["idexp"];
                this.columnidexpensetaxofficial = base.Columns["idexpensetaxofficial"];
                this.columnabatements = base.Columns["abatements"];
                this.columnadmindenominator = base.Columns["admindenominator"];
                this.columnadminnumerator = base.Columns["adminnumerator"];
                this.columnadminrate = base.Columns["adminrate"];
                this.columnadmintax = base.Columns["admintax"];
                this.columnayear = base.Columns["ayear"];
                this.columnct = base.Columns["ct"];
                this.columncu = base.Columns["cu"];
                this.columnemploydenominator = base.Columns["employdenominator"];
                this.columnemploynumerator = base.Columns["employnumerator"];
                this.columnemployrate = base.Columns["employrate"];
                this.columnemploytax = base.Columns["employtax"];
                this.columnexemptionquota = base.Columns["exemptionquota"];
                this.columnidcity = base.Columns["idcity"];
                this.columnidfiscaltaxregion = base.Columns["idfiscaltaxregion"];
                this.columnlt = base.Columns["lt"];
                this.columnlu = base.Columns["lu"];
                this.columnnbracket = base.Columns["nbracket"];
                this.columnstart = base.Columns["start"];
                this.columnstop = base.Columns["stop"];
                this.columntaxabledenominator = base.Columns["taxabledenominator"];
                this.columntaxablegross = base.Columns["taxablegross"];
                this.columntaxablenet = base.Columns["taxablenet"];
                this.columntaxablenumerator = base.Columns["taxablenumerator"];
                this.columntaxcode = base.Columns["taxcode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnidexp = new global::System.Data.DataColumn("idexp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidexp);
                this.columnidexpensetaxofficial = new global::System.Data.DataColumn("idexpensetaxofficial", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidexpensetaxofficial);
                this.columnabatements = new global::System.Data.DataColumn("abatements", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnabatements);
                this.columnadmindenominator = new global::System.Data.DataColumn("admindenominator", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadmindenominator);
                this.columnadminnumerator = new global::System.Data.DataColumn("adminnumerator", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadminnumerator);
                this.columnadminrate = new global::System.Data.DataColumn("adminrate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadminrate);
                this.columnadmintax = new global::System.Data.DataColumn("admintax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadmintax);
                this.columnayear = new global::System.Data.DataColumn("ayear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnayear);
                this.columnct = new global::System.Data.DataColumn("ct", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columncu = new global::System.Data.DataColumn("cu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnemploydenominator = new global::System.Data.DataColumn("employdenominator", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemploydenominator);
                this.columnemploynumerator = new global::System.Data.DataColumn("employnumerator", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemploynumerator);
                this.columnemployrate = new global::System.Data.DataColumn("employrate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemployrate);
                this.columnemploytax = new global::System.Data.DataColumn("employtax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemploytax);
                this.columnexemptionquota = new global::System.Data.DataColumn("exemptionquota", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexemptionquota);
                this.columnidcity = new global::System.Data.DataColumn("idcity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcity);
                this.columnidfiscaltaxregion = new global::System.Data.DataColumn("idfiscaltaxregion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfiscaltaxregion);
                this.columnlt = new global::System.Data.DataColumn("lt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.columnlu = new global::System.Data.DataColumn("lu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnnbracket = new global::System.Data.DataColumn("nbracket", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnbracket);
                this.columnstart = new global::System.Data.DataColumn("start", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart);
                this.columnstop = new global::System.Data.DataColumn("stop", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstop);
                this.columntaxabledenominator = new global::System.Data.DataColumn("taxabledenominator", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxabledenominator);
                this.columntaxablegross = new global::System.Data.DataColumn("taxablegross", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxablegross);
                this.columntaxablenet = new global::System.Data.DataColumn("taxablenet", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxablenet);
                this.columntaxablenumerator = new global::System.Data.DataColumn("taxablenumerator", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxablenumerator);
                this.columntaxcode = new global::System.Data.DataColumn("taxcode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxcode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidexp,
                                this.columnidexpensetaxofficial}, true));
                this.columnidexp.AllowDBNull = false;
                this.columnidexpensetaxofficial.AllowDBNull = false;
                this.columnayear.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columncu.MaxLength = 64;
                this.columnidfiscaltaxregion.MaxLength = 5;
                this.columnlt.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlu.MaxLength = 64;
                this.columnnbracket.AllowDBNull = false;
                this.columntaxcode.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public expensetaxofficialRow NewexpensetaxofficialRow() {
                return ((expensetaxofficialRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new expensetaxofficialRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(expensetaxofficialRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.expensetaxofficialRowChanged != null)) {
                    this.expensetaxofficialRowChanged(this, new expensetaxofficialRowChangeEvent(((expensetaxofficialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.expensetaxofficialRowChanging != null)) {
                    this.expensetaxofficialRowChanging(this, new expensetaxofficialRowChangeEvent(((expensetaxofficialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.expensetaxofficialRowDeleted != null)) {
                    this.expensetaxofficialRowDeleted(this, new expensetaxofficialRowChangeEvent(((expensetaxofficialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.expensetaxofficialRowDeleting != null)) {
                    this.expensetaxofficialRowDeleting(this, new expensetaxofficialRowChangeEvent(((expensetaxofficialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveexpensetaxofficialRow(expensetaxofficialRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VistaDettaglioRitenute ds = new VistaDettaglioRitenute();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "expensetaxofficialDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class taxDataTable : global::System.Data.TypedTableBase<taxRow> {
            
            private global::System.Data.DataColumn columntaxcode;
            
            private global::System.Data.DataColumn columnactive;
            
            private global::System.Data.DataColumn columnappliancebasis;
            
            private global::System.Data.DataColumn columnct;
            
            private global::System.Data.DataColumn columncu;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnfiscaltaxcode;
            
            private global::System.Data.DataColumn columnflagunabatable;
            
            private global::System.Data.DataColumn columngeoappliance;
            
            private global::System.Data.DataColumn columnidaccmotive_cost;
            
            private global::System.Data.DataColumn columnidaccmotive_debit;
            
            private global::System.Data.DataColumn columnidaccmotive_pay;
            
            private global::System.Data.DataColumn columnlt;
            
            private global::System.Data.DataColumn columnlu;
            
            private global::System.Data.DataColumn columnmaintaxcode;
            
            private global::System.Data.DataColumn columntaxablecode;
            
            private global::System.Data.DataColumn columntaxkind;
            
            private global::System.Data.DataColumn columntaxref;
            
            private global::System.Data.DataColumn columninsuranceagencycode;
            
            private global::System.Data.DataColumn columnfiscaltaxcodecredit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public taxDataTable() {
                this.TableName = "tax";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal taxDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected taxDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn taxcodeColumn {
                get {
                    return this.columntaxcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn activeColumn {
                get {
                    return this.columnactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn appliancebasisColumn {
                get {
                    return this.columnappliancebasis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fiscaltaxcodeColumn {
                get {
                    return this.columnfiscaltaxcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn flagunabatableColumn {
                get {
                    return this.columnflagunabatable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn geoapplianceColumn {
                get {
                    return this.columngeoappliance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idaccmotive_costColumn {
                get {
                    return this.columnidaccmotive_cost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idaccmotive_debitColumn {
                get {
                    return this.columnidaccmotive_debit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idaccmotive_payColumn {
                get {
                    return this.columnidaccmotive_pay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn maintaxcodeColumn {
                get {
                    return this.columnmaintaxcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn taxablecodeColumn {
                get {
                    return this.columntaxablecode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn taxkindColumn {
                get {
                    return this.columntaxkind;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn taxrefColumn {
                get {
                    return this.columntaxref;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn insuranceagencycodeColumn {
                get {
                    return this.columninsuranceagencycode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fiscaltaxcodecreditColumn {
                get {
                    return this.columnfiscaltaxcodecredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public taxRow this[int index] {
                get {
                    return ((taxRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event taxRowChangeEventHandler taxRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event taxRowChangeEventHandler taxRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event taxRowChangeEventHandler taxRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event taxRowChangeEventHandler taxRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddtaxRow(taxRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public taxRow AddtaxRow(
                        int taxcode, 
                        string active, 
                        string appliancebasis, 
                        System.DateTime ct, 
                        string cu, 
                        string description, 
                        string fiscaltaxcode, 
                        string flagunabatable, 
                        string geoappliance, 
                        string idaccmotive_cost, 
                        string idaccmotive_debit, 
                        string idaccmotive_pay, 
                        System.DateTime lt, 
                        string lu, 
                        int maintaxcode, 
                        string taxablecode, 
                        short taxkind, 
                        string taxref, 
                        string insuranceagencycode, 
                        string fiscaltaxcodecredit) {
                taxRow rowtaxRow = ((taxRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        taxcode,
                        active,
                        appliancebasis,
                        ct,
                        cu,
                        description,
                        fiscaltaxcode,
                        flagunabatable,
                        geoappliance,
                        idaccmotive_cost,
                        idaccmotive_debit,
                        idaccmotive_pay,
                        lt,
                        lu,
                        maintaxcode,
                        taxablecode,
                        taxkind,
                        taxref,
                        insuranceagencycode,
                        fiscaltaxcodecredit};
                rowtaxRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtaxRow);
                return rowtaxRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public taxRow FindBytaxcode(int taxcode) {
                return ((taxRow)(this.Rows.Find(new object[] {
                            taxcode})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                taxDataTable cln = ((taxDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new taxDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columntaxcode = base.Columns["taxcode"];
                this.columnactive = base.Columns["active"];
                this.columnappliancebasis = base.Columns["appliancebasis"];
                this.columnct = base.Columns["ct"];
                this.columncu = base.Columns["cu"];
                this.columndescription = base.Columns["description"];
                this.columnfiscaltaxcode = base.Columns["fiscaltaxcode"];
                this.columnflagunabatable = base.Columns["flagunabatable"];
                this.columngeoappliance = base.Columns["geoappliance"];
                this.columnidaccmotive_cost = base.Columns["idaccmotive_cost"];
                this.columnidaccmotive_debit = base.Columns["idaccmotive_debit"];
                this.columnidaccmotive_pay = base.Columns["idaccmotive_pay"];
                this.columnlt = base.Columns["lt"];
                this.columnlu = base.Columns["lu"];
                this.columnmaintaxcode = base.Columns["maintaxcode"];
                this.columntaxablecode = base.Columns["taxablecode"];
                this.columntaxkind = base.Columns["taxkind"];
                this.columntaxref = base.Columns["taxref"];
                this.columninsuranceagencycode = base.Columns["insuranceagencycode"];
                this.columnfiscaltaxcodecredit = base.Columns["fiscaltaxcodecredit"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columntaxcode = new global::System.Data.DataColumn("taxcode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxcode);
                this.columnactive = new global::System.Data.DataColumn("active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactive);
                this.columnappliancebasis = new global::System.Data.DataColumn("appliancebasis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappliancebasis);
                this.columnct = new global::System.Data.DataColumn("ct", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columncu = new global::System.Data.DataColumn("cu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnfiscaltaxcode = new global::System.Data.DataColumn("fiscaltaxcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfiscaltaxcode);
                this.columnflagunabatable = new global::System.Data.DataColumn("flagunabatable", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflagunabatable);
                this.columngeoappliance = new global::System.Data.DataColumn("geoappliance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngeoappliance);
                this.columnidaccmotive_cost = new global::System.Data.DataColumn("idaccmotive_cost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidaccmotive_cost);
                this.columnidaccmotive_debit = new global::System.Data.DataColumn("idaccmotive_debit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidaccmotive_debit);
                this.columnidaccmotive_pay = new global::System.Data.DataColumn("idaccmotive_pay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidaccmotive_pay);
                this.columnlt = new global::System.Data.DataColumn("lt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.columnlu = new global::System.Data.DataColumn("lu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnmaintaxcode = new global::System.Data.DataColumn("maintaxcode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaintaxcode);
                this.columntaxablecode = new global::System.Data.DataColumn("taxablecode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxablecode);
                this.columntaxkind = new global::System.Data.DataColumn("taxkind", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxkind);
                this.columntaxref = new global::System.Data.DataColumn("taxref", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxref);
                this.columninsuranceagencycode = new global::System.Data.DataColumn("insuranceagencycode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninsuranceagencycode);
                this.columnfiscaltaxcodecredit = new global::System.Data.DataColumn("fiscaltaxcodecredit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfiscaltaxcodecredit);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columntaxcode}, true));
                this.columntaxcode.AllowDBNull = false;
                this.columntaxcode.Unique = true;
                this.columnactive.MaxLength = 1;
                this.columnappliancebasis.MaxLength = 1;
                this.columnct.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columncu.MaxLength = 64;
                this.columndescription.AllowDBNull = false;
                this.columndescription.MaxLength = 50;
                this.columnfiscaltaxcode.MaxLength = 20;
                this.columnflagunabatable.MaxLength = 1;
                this.columngeoappliance.MaxLength = 1;
                this.columnidaccmotive_cost.MaxLength = 36;
                this.columnidaccmotive_debit.MaxLength = 36;
                this.columnidaccmotive_pay.MaxLength = 36;
                this.columnlt.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlu.MaxLength = 64;
                this.columntaxablecode.MaxLength = 20;
                this.columntaxkind.AllowDBNull = false;
                this.columntaxref.AllowDBNull = false;
                this.columntaxref.MaxLength = 20;
                this.columninsuranceagencycode.MaxLength = 10;
                this.columnfiscaltaxcodecredit.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public taxRow NewtaxRow() {
                return ((taxRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new taxRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(taxRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.taxRowChanged != null)) {
                    this.taxRowChanged(this, new taxRowChangeEvent(((taxRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.taxRowChanging != null)) {
                    this.taxRowChanging(this, new taxRowChangeEvent(((taxRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.taxRowDeleted != null)) {
                    this.taxRowDeleted(this, new taxRowChangeEvent(((taxRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.taxRowDeleting != null)) {
                    this.taxRowDeleting(this, new taxRowChangeEvent(((taxRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovetaxRow(taxRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VistaDettaglioRitenute ds = new VistaDettaglioRitenute();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "taxDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class fiscaltaxregionDataTable : global::System.Data.TypedTableBase<fiscaltaxregionRow> {
            
            private global::System.Data.DataColumn columnidfiscaltaxregion;
            
            private global::System.Data.DataColumn columnactive;
            
            private global::System.Data.DataColumn columnct;
            
            private global::System.Data.DataColumn columncu;
            
            private global::System.Data.DataColumn columnidcountry;
            
            private global::System.Data.DataColumn columnidregion;
            
            private global::System.Data.DataColumn columnlt;
            
            private global::System.Data.DataColumn columnlu;
            
            private global::System.Data.DataColumn columntitle;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public fiscaltaxregionDataTable() {
                this.TableName = "fiscaltaxregion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal fiscaltaxregionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected fiscaltaxregionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idfiscaltaxregionColumn {
                get {
                    return this.columnidfiscaltaxregion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn activeColumn {
                get {
                    return this.columnactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idcountryColumn {
                get {
                    return this.columnidcountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idregionColumn {
                get {
                    return this.columnidregion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn titleColumn {
                get {
                    return this.columntitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public fiscaltaxregionRow this[int index] {
                get {
                    return ((fiscaltaxregionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event fiscaltaxregionRowChangeEventHandler fiscaltaxregionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event fiscaltaxregionRowChangeEventHandler fiscaltaxregionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event fiscaltaxregionRowChangeEventHandler fiscaltaxregionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event fiscaltaxregionRowChangeEventHandler fiscaltaxregionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddfiscaltaxregionRow(fiscaltaxregionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public fiscaltaxregionRow AddfiscaltaxregionRow(string idfiscaltaxregion, string active, System.DateTime ct, string cu, int idcountry, int idregion, System.DateTime lt, string lu, string title) {
                fiscaltaxregionRow rowfiscaltaxregionRow = ((fiscaltaxregionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        idfiscaltaxregion,
                        active,
                        ct,
                        cu,
                        idcountry,
                        idregion,
                        lt,
                        lu,
                        title};
                rowfiscaltaxregionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfiscaltaxregionRow);
                return rowfiscaltaxregionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public fiscaltaxregionRow FindByidfiscaltaxregion(string idfiscaltaxregion) {
                return ((fiscaltaxregionRow)(this.Rows.Find(new object[] {
                            idfiscaltaxregion})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                fiscaltaxregionDataTable cln = ((fiscaltaxregionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new fiscaltaxregionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnidfiscaltaxregion = base.Columns["idfiscaltaxregion"];
                this.columnactive = base.Columns["active"];
                this.columnct = base.Columns["ct"];
                this.columncu = base.Columns["cu"];
                this.columnidcountry = base.Columns["idcountry"];
                this.columnidregion = base.Columns["idregion"];
                this.columnlt = base.Columns["lt"];
                this.columnlu = base.Columns["lu"];
                this.columntitle = base.Columns["title"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnidfiscaltaxregion = new global::System.Data.DataColumn("idfiscaltaxregion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfiscaltaxregion);
                this.columnactive = new global::System.Data.DataColumn("active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactive);
                this.columnct = new global::System.Data.DataColumn("ct", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columncu = new global::System.Data.DataColumn("cu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnidcountry = new global::System.Data.DataColumn("idcountry", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcountry);
                this.columnidregion = new global::System.Data.DataColumn("idregion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidregion);
                this.columnlt = new global::System.Data.DataColumn("lt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.columnlu = new global::System.Data.DataColumn("lu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columntitle = new global::System.Data.DataColumn("title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntitle);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidfiscaltaxregion}, true));
                this.columnidfiscaltaxregion.AllowDBNull = false;
                this.columnidfiscaltaxregion.Unique = true;
                this.columnidfiscaltaxregion.MaxLength = 5;
                this.columnactive.AllowDBNull = false;
                this.columnactive.MaxLength = 1;
                this.columnct.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columncu.MaxLength = 64;
                this.columnlt.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlu.MaxLength = 64;
                this.columntitle.AllowDBNull = false;
                this.columntitle.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public fiscaltaxregionRow NewfiscaltaxregionRow() {
                return ((fiscaltaxregionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new fiscaltaxregionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(fiscaltaxregionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.fiscaltaxregionRowChanged != null)) {
                    this.fiscaltaxregionRowChanged(this, new fiscaltaxregionRowChangeEvent(((fiscaltaxregionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.fiscaltaxregionRowChanging != null)) {
                    this.fiscaltaxregionRowChanging(this, new fiscaltaxregionRowChangeEvent(((fiscaltaxregionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.fiscaltaxregionRowDeleted != null)) {
                    this.fiscaltaxregionRowDeleted(this, new fiscaltaxregionRowChangeEvent(((fiscaltaxregionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.fiscaltaxregionRowDeleting != null)) {
                    this.fiscaltaxregionRowDeleting(this, new fiscaltaxregionRowChangeEvent(((fiscaltaxregionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovefiscaltaxregionRow(fiscaltaxregionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VistaDettaglioRitenute ds = new VistaDettaglioRitenute();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "fiscaltaxregionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class expensetaxRow : global::System.Data.DataRow {
            
            private expensetaxDataTable tableexpensetax;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal expensetaxRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableexpensetax = ((expensetaxDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int idexp {
                get {
                    return ((int)(this[this.tableexpensetax.idexpColumn]));
                }
                set {
                    this[this.tableexpensetax.idexpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int taxcode {
                get {
                    return ((int)(this[this.tableexpensetax.taxcodeColumn]));
                }
                set {
                    this[this.tableexpensetax.taxcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int nbracket {
                get {
                    return ((int)(this[this.tableexpensetax.nbracketColumn]));
                }
                set {
                    this[this.tableexpensetax.nbracketColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal abatements {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetax.abatementsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'abatements\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.abatementsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal admindenominator {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetax.admindenominatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'admindenominator\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.admindenominatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal adminnumerator {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetax.adminnumeratorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'adminnumerator\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.adminnumeratorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal adminrate {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetax.adminrateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'adminrate\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.adminrateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal admintax {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetax.admintaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'admintax\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.admintaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short ayear {
                get {
                    try {
                        return ((short)(this[this.tableexpensetax.ayearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'ayear\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.ayearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime competencydate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableexpensetax.competencydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'competencydate\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.competencydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ct {
                get {
                    return ((global::System.DateTime)(this[this.tableexpensetax.ctColumn]));
                }
                set {
                    this[this.tableexpensetax.ctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string cu {
                get {
                    return ((string)(this[this.tableexpensetax.cuColumn]));
                }
                set {
                    this[this.tableexpensetax.cuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal employdenominator {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetax.employdenominatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'employdenominator\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.employdenominatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal employnumerator {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetax.employnumeratorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'employnumerator\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.employnumeratorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal employrate {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetax.employrateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'employrate\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.employrateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal employtax {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetax.employtaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'employtax\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.employtaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal exemptionquota {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetax.exemptionquotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'exemptionquota\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.exemptionquotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int idcity {
                get {
                    try {
                        return ((int)(this[this.tableexpensetax.idcityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'idcity\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.idcityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string idfiscaltaxregion {
                get {
                    try {
                        return ((string)(this[this.tableexpensetax.idfiscaltaxregionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'idfiscaltaxregion\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.idfiscaltaxregionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int idinc {
                get {
                    try {
                        return ((int)(this[this.tableexpensetax.idincColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'idinc\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.idincColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int idunifiedtax {
                get {
                    try {
                        return ((int)(this[this.tableexpensetax.idunifiedtaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'idunifiedtax\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.idunifiedtaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime lt {
                get {
                    return ((global::System.DateTime)(this[this.tableexpensetax.ltColumn]));
                }
                set {
                    this[this.tableexpensetax.ltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string lu {
                get {
                    return ((string)(this[this.tableexpensetax.luColumn]));
                }
                set {
                    this[this.tableexpensetax.luColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ntaxpay {
                get {
                    try {
                        return ((int)(this[this.tableexpensetax.ntaxpayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'ntaxpay\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.ntaxpayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal taxabledenominator {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetax.taxabledenominatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'taxabledenominator\' nella tabella \'expensetax\' è DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableexpensetax.taxabledenominatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal taxablegross {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetax.taxablegrossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'taxablegross\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.taxablegrossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal taxablenet {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetax.taxablenetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'taxablenet\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.taxablenetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal taxablenumerator {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetax.taxablenumeratorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'taxablenumerator\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.taxablenumeratorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short ytaxpay {
                get {
                    try {
                        return ((short)(this[this.tableexpensetax.ytaxpayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'ytaxpay\' nella tabella \'expensetax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetax.ytaxpayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsabatementsNull() {
                return this.IsNull(this.tableexpensetax.abatementsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetabatementsNull() {
                this[this.tableexpensetax.abatementsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsadmindenominatorNull() {
                return this.IsNull(this.tableexpensetax.admindenominatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetadmindenominatorNull() {
                this[this.tableexpensetax.admindenominatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsadminnumeratorNull() {
                return this.IsNull(this.tableexpensetax.adminnumeratorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetadminnumeratorNull() {
                this[this.tableexpensetax.adminnumeratorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsadminrateNull() {
                return this.IsNull(this.tableexpensetax.adminrateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetadminrateNull() {
                this[this.tableexpensetax.adminrateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsadmintaxNull() {
                return this.IsNull(this.tableexpensetax.admintaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetadmintaxNull() {
                this[this.tableexpensetax.admintaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsayearNull() {
                return this.IsNull(this.tableexpensetax.ayearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetayearNull() {
                this[this.tableexpensetax.ayearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IscompetencydateNull() {
                return this.IsNull(this.tableexpensetax.competencydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetcompetencydateNull() {
                this[this.tableexpensetax.competencydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsemploydenominatorNull() {
                return this.IsNull(this.tableexpensetax.employdenominatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetemploydenominatorNull() {
                this[this.tableexpensetax.employdenominatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsemploynumeratorNull() {
                return this.IsNull(this.tableexpensetax.employnumeratorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetemploynumeratorNull() {
                this[this.tableexpensetax.employnumeratorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsemployrateNull() {
                return this.IsNull(this.tableexpensetax.employrateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetemployrateNull() {
                this[this.tableexpensetax.employrateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsemploytaxNull() {
                return this.IsNull(this.tableexpensetax.employtaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetemploytaxNull() {
                this[this.tableexpensetax.employtaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsexemptionquotaNull() {
                return this.IsNull(this.tableexpensetax.exemptionquotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetexemptionquotaNull() {
                this[this.tableexpensetax.exemptionquotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsidcityNull() {
                return this.IsNull(this.tableexpensetax.idcityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetidcityNull() {
                this[this.tableexpensetax.idcityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsidfiscaltaxregionNull() {
                return this.IsNull(this.tableexpensetax.idfiscaltaxregionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetidfiscaltaxregionNull() {
                this[this.tableexpensetax.idfiscaltaxregionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsidincNull() {
                return this.IsNull(this.tableexpensetax.idincColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetidincNull() {
                this[this.tableexpensetax.idincColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsidunifiedtaxNull() {
                return this.IsNull(this.tableexpensetax.idunifiedtaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetidunifiedtaxNull() {
                this[this.tableexpensetax.idunifiedtaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsntaxpayNull() {
                return this.IsNull(this.tableexpensetax.ntaxpayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetntaxpayNull() {
                this[this.tableexpensetax.ntaxpayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IstaxabledenominatorNull() {
                return this.IsNull(this.tableexpensetax.taxabledenominatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SettaxabledenominatorNull() {
                this[this.tableexpensetax.taxabledenominatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IstaxablegrossNull() {
                return this.IsNull(this.tableexpensetax.taxablegrossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SettaxablegrossNull() {
                this[this.tableexpensetax.taxablegrossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IstaxablenetNull() {
                return this.IsNull(this.tableexpensetax.taxablenetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SettaxablenetNull() {
                this[this.tableexpensetax.taxablenetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IstaxablenumeratorNull() {
                return this.IsNull(this.tableexpensetax.taxablenumeratorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SettaxablenumeratorNull() {
                this[this.tableexpensetax.taxablenumeratorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsytaxpayNull() {
                return this.IsNull(this.tableexpensetax.ytaxpayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetytaxpayNull() {
                this[this.tableexpensetax.ytaxpayColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class expensetaxofficialRow : global::System.Data.DataRow {
            
            private expensetaxofficialDataTable tableexpensetaxofficial;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal expensetaxofficialRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableexpensetaxofficial = ((expensetaxofficialDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int idexp {
                get {
                    return ((int)(this[this.tableexpensetaxofficial.idexpColumn]));
                }
                set {
                    this[this.tableexpensetaxofficial.idexpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int idexpensetaxofficial {
                get {
                    return ((int)(this[this.tableexpensetaxofficial.idexpensetaxofficialColumn]));
                }
                set {
                    this[this.tableexpensetaxofficial.idexpensetaxofficialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal abatements {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetaxofficial.abatementsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'abatements\' nella tabella \'expensetaxofficial\' è DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableexpensetaxofficial.abatementsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal admindenominator {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetaxofficial.admindenominatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'admindenominator\' nella tabella \'expensetaxofficial\' è D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetaxofficial.admindenominatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal adminnumerator {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetaxofficial.adminnumeratorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'adminnumerator\' nella tabella \'expensetaxofficial\' è DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableexpensetaxofficial.adminnumeratorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal adminrate {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetaxofficial.adminrateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'adminrate\' nella tabella \'expensetaxofficial\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetaxofficial.adminrateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal admintax {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetaxofficial.admintaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'admintax\' nella tabella \'expensetaxofficial\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetaxofficial.admintaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short ayear {
                get {
                    return ((short)(this[this.tableexpensetaxofficial.ayearColumn]));
                }
                set {
                    this[this.tableexpensetaxofficial.ayearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ct {
                get {
                    return ((global::System.DateTime)(this[this.tableexpensetaxofficial.ctColumn]));
                }
                set {
                    this[this.tableexpensetaxofficial.ctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string cu {
                get {
                    return ((string)(this[this.tableexpensetaxofficial.cuColumn]));
                }
                set {
                    this[this.tableexpensetaxofficial.cuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal employdenominator {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetaxofficial.employdenominatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'employdenominator\' nella tabella \'expensetaxofficial\' è " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetaxofficial.employdenominatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal employnumerator {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetaxofficial.employnumeratorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'employnumerator\' nella tabella \'expensetaxofficial\' è DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableexpensetaxofficial.employnumeratorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal employrate {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetaxofficial.employrateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'employrate\' nella tabella \'expensetaxofficial\' è DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableexpensetaxofficial.employrateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal employtax {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetaxofficial.employtaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'employtax\' nella tabella \'expensetaxofficial\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetaxofficial.employtaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal exemptionquota {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetaxofficial.exemptionquotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'exemptionquota\' nella tabella \'expensetaxofficial\' è DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableexpensetaxofficial.exemptionquotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int idcity {
                get {
                    try {
                        return ((int)(this[this.tableexpensetaxofficial.idcityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'idcity\' nella tabella \'expensetaxofficial\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetaxofficial.idcityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string idfiscaltaxregion {
                get {
                    try {
                        return ((string)(this[this.tableexpensetaxofficial.idfiscaltaxregionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'idfiscaltaxregion\' nella tabella \'expensetaxofficial\' è " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetaxofficial.idfiscaltaxregionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime lt {
                get {
                    return ((global::System.DateTime)(this[this.tableexpensetaxofficial.ltColumn]));
                }
                set {
                    this[this.tableexpensetaxofficial.ltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string lu {
                get {
                    return ((string)(this[this.tableexpensetaxofficial.luColumn]));
                }
                set {
                    this[this.tableexpensetaxofficial.luColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int nbracket {
                get {
                    return ((int)(this[this.tableexpensetaxofficial.nbracketColumn]));
                }
                set {
                    this[this.tableexpensetaxofficial.nbracketColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime start {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableexpensetaxofficial.startColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'start\' nella tabella \'expensetaxofficial\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetaxofficial.startColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime stop {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableexpensetaxofficial.stopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'stop\' nella tabella \'expensetaxofficial\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetaxofficial.stopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal taxabledenominator {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetaxofficial.taxabledenominatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'taxabledenominator\' nella tabella \'expensetaxofficial\' è" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetaxofficial.taxabledenominatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal taxablegross {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetaxofficial.taxablegrossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'taxablegross\' nella tabella \'expensetaxofficial\' è DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableexpensetaxofficial.taxablegrossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal taxablenet {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetaxofficial.taxablenetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'taxablenet\' nella tabella \'expensetaxofficial\' è DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableexpensetaxofficial.taxablenetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal taxablenumerator {
                get {
                    try {
                        return ((decimal)(this[this.tableexpensetaxofficial.taxablenumeratorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'taxablenumerator\' nella tabella \'expensetaxofficial\' è D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableexpensetaxofficial.taxablenumeratorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int taxcode {
                get {
                    return ((int)(this[this.tableexpensetaxofficial.taxcodeColumn]));
                }
                set {
                    this[this.tableexpensetaxofficial.taxcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsabatementsNull() {
                return this.IsNull(this.tableexpensetaxofficial.abatementsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetabatementsNull() {
                this[this.tableexpensetaxofficial.abatementsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsadmindenominatorNull() {
                return this.IsNull(this.tableexpensetaxofficial.admindenominatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetadmindenominatorNull() {
                this[this.tableexpensetaxofficial.admindenominatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsadminnumeratorNull() {
                return this.IsNull(this.tableexpensetaxofficial.adminnumeratorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetadminnumeratorNull() {
                this[this.tableexpensetaxofficial.adminnumeratorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsadminrateNull() {
                return this.IsNull(this.tableexpensetaxofficial.adminrateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetadminrateNull() {
                this[this.tableexpensetaxofficial.adminrateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsadmintaxNull() {
                return this.IsNull(this.tableexpensetaxofficial.admintaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetadmintaxNull() {
                this[this.tableexpensetaxofficial.admintaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsemploydenominatorNull() {
                return this.IsNull(this.tableexpensetaxofficial.employdenominatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetemploydenominatorNull() {
                this[this.tableexpensetaxofficial.employdenominatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsemploynumeratorNull() {
                return this.IsNull(this.tableexpensetaxofficial.employnumeratorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetemploynumeratorNull() {
                this[this.tableexpensetaxofficial.employnumeratorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsemployrateNull() {
                return this.IsNull(this.tableexpensetaxofficial.employrateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetemployrateNull() {
                this[this.tableexpensetaxofficial.employrateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsemploytaxNull() {
                return this.IsNull(this.tableexpensetaxofficial.employtaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetemploytaxNull() {
                this[this.tableexpensetaxofficial.employtaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsexemptionquotaNull() {
                return this.IsNull(this.tableexpensetaxofficial.exemptionquotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetexemptionquotaNull() {
                this[this.tableexpensetaxofficial.exemptionquotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsidcityNull() {
                return this.IsNull(this.tableexpensetaxofficial.idcityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetidcityNull() {
                this[this.tableexpensetaxofficial.idcityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsidfiscaltaxregionNull() {
                return this.IsNull(this.tableexpensetaxofficial.idfiscaltaxregionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetidfiscaltaxregionNull() {
                this[this.tableexpensetaxofficial.idfiscaltaxregionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsstartNull() {
                return this.IsNull(this.tableexpensetaxofficial.startColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetstartNull() {
                this[this.tableexpensetaxofficial.startColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsstopNull() {
                return this.IsNull(this.tableexpensetaxofficial.stopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetstopNull() {
                this[this.tableexpensetaxofficial.stopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IstaxabledenominatorNull() {
                return this.IsNull(this.tableexpensetaxofficial.taxabledenominatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SettaxabledenominatorNull() {
                this[this.tableexpensetaxofficial.taxabledenominatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IstaxablegrossNull() {
                return this.IsNull(this.tableexpensetaxofficial.taxablegrossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SettaxablegrossNull() {
                this[this.tableexpensetaxofficial.taxablegrossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IstaxablenetNull() {
                return this.IsNull(this.tableexpensetaxofficial.taxablenetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SettaxablenetNull() {
                this[this.tableexpensetaxofficial.taxablenetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IstaxablenumeratorNull() {
                return this.IsNull(this.tableexpensetaxofficial.taxablenumeratorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SettaxablenumeratorNull() {
                this[this.tableexpensetaxofficial.taxablenumeratorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class taxRow : global::System.Data.DataRow {
            
            private taxDataTable tabletax;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal taxRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletax = ((taxDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int taxcode {
                get {
                    return ((int)(this[this.tabletax.taxcodeColumn]));
                }
                set {
                    this[this.tabletax.taxcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string active {
                get {
                    try {
                        return ((string)(this[this.tabletax.activeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'active\' nella tabella \'tax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletax.activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string appliancebasis {
                get {
                    try {
                        return ((string)(this[this.tabletax.appliancebasisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'appliancebasis\' nella tabella \'tax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletax.appliancebasisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ct {
                get {
                    return ((global::System.DateTime)(this[this.tabletax.ctColumn]));
                }
                set {
                    this[this.tabletax.ctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string cu {
                get {
                    return ((string)(this[this.tabletax.cuColumn]));
                }
                set {
                    this[this.tabletax.cuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string description {
                get {
                    return ((string)(this[this.tabletax.descriptionColumn]));
                }
                set {
                    this[this.tabletax.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string fiscaltaxcode {
                get {
                    try {
                        return ((string)(this[this.tabletax.fiscaltaxcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'fiscaltaxcode\' nella tabella \'tax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletax.fiscaltaxcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string flagunabatable {
                get {
                    try {
                        return ((string)(this[this.tabletax.flagunabatableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'flagunabatable\' nella tabella \'tax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletax.flagunabatableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string geoappliance {
                get {
                    try {
                        return ((string)(this[this.tabletax.geoapplianceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'geoappliance\' nella tabella \'tax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletax.geoapplianceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string idaccmotive_cost {
                get {
                    try {
                        return ((string)(this[this.tabletax.idaccmotive_costColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'idaccmotive_cost\' nella tabella \'tax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletax.idaccmotive_costColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string idaccmotive_debit {
                get {
                    try {
                        return ((string)(this[this.tabletax.idaccmotive_debitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'idaccmotive_debit\' nella tabella \'tax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletax.idaccmotive_debitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string idaccmotive_pay {
                get {
                    try {
                        return ((string)(this[this.tabletax.idaccmotive_payColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'idaccmotive_pay\' nella tabella \'tax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletax.idaccmotive_payColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime lt {
                get {
                    return ((global::System.DateTime)(this[this.tabletax.ltColumn]));
                }
                set {
                    this[this.tabletax.ltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string lu {
                get {
                    return ((string)(this[this.tabletax.luColumn]));
                }
                set {
                    this[this.tabletax.luColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int maintaxcode {
                get {
                    try {
                        return ((int)(this[this.tabletax.maintaxcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'maintaxcode\' nella tabella \'tax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletax.maintaxcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string taxablecode {
                get {
                    try {
                        return ((string)(this[this.tabletax.taxablecodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'taxablecode\' nella tabella \'tax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletax.taxablecodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short taxkind {
                get {
                    return ((short)(this[this.tabletax.taxkindColumn]));
                }
                set {
                    this[this.tabletax.taxkindColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string taxref {
                get {
                    return ((string)(this[this.tabletax.taxrefColumn]));
                }
                set {
                    this[this.tabletax.taxrefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string insuranceagencycode {
                get {
                    try {
                        return ((string)(this[this.tabletax.insuranceagencycodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'insuranceagencycode\' nella tabella \'tax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletax.insuranceagencycodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string fiscaltaxcodecredit {
                get {
                    try {
                        return ((string)(this[this.tabletax.fiscaltaxcodecreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'fiscaltaxcodecredit\' nella tabella \'tax\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletax.fiscaltaxcodecreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsactiveNull() {
                return this.IsNull(this.tabletax.activeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetactiveNull() {
                this[this.tabletax.activeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsappliancebasisNull() {
                return this.IsNull(this.tabletax.appliancebasisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetappliancebasisNull() {
                this[this.tabletax.appliancebasisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsfiscaltaxcodeNull() {
                return this.IsNull(this.tabletax.fiscaltaxcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetfiscaltaxcodeNull() {
                this[this.tabletax.fiscaltaxcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsflagunabatableNull() {
                return this.IsNull(this.tabletax.flagunabatableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetflagunabatableNull() {
                this[this.tabletax.flagunabatableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsgeoapplianceNull() {
                return this.IsNull(this.tabletax.geoapplianceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetgeoapplianceNull() {
                this[this.tabletax.geoapplianceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isidaccmotive_costNull() {
                return this.IsNull(this.tabletax.idaccmotive_costColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setidaccmotive_costNull() {
                this[this.tabletax.idaccmotive_costColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isidaccmotive_debitNull() {
                return this.IsNull(this.tabletax.idaccmotive_debitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setidaccmotive_debitNull() {
                this[this.tabletax.idaccmotive_debitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isidaccmotive_payNull() {
                return this.IsNull(this.tabletax.idaccmotive_payColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setidaccmotive_payNull() {
                this[this.tabletax.idaccmotive_payColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsmaintaxcodeNull() {
                return this.IsNull(this.tabletax.maintaxcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetmaintaxcodeNull() {
                this[this.tabletax.maintaxcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IstaxablecodeNull() {
                return this.IsNull(this.tabletax.taxablecodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SettaxablecodeNull() {
                this[this.tabletax.taxablecodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsinsuranceagencycodeNull() {
                return this.IsNull(this.tabletax.insuranceagencycodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetinsuranceagencycodeNull() {
                this[this.tabletax.insuranceagencycodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsfiscaltaxcodecreditNull() {
                return this.IsNull(this.tabletax.fiscaltaxcodecreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetfiscaltaxcodecreditNull() {
                this[this.tabletax.fiscaltaxcodecreditColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class fiscaltaxregionRow : global::System.Data.DataRow {
            
            private fiscaltaxregionDataTable tablefiscaltaxregion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal fiscaltaxregionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefiscaltaxregion = ((fiscaltaxregionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string idfiscaltaxregion {
                get {
                    return ((string)(this[this.tablefiscaltaxregion.idfiscaltaxregionColumn]));
                }
                set {
                    this[this.tablefiscaltaxregion.idfiscaltaxregionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string active {
                get {
                    return ((string)(this[this.tablefiscaltaxregion.activeColumn]));
                }
                set {
                    this[this.tablefiscaltaxregion.activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ct {
                get {
                    return ((global::System.DateTime)(this[this.tablefiscaltaxregion.ctColumn]));
                }
                set {
                    this[this.tablefiscaltaxregion.ctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string cu {
                get {
                    return ((string)(this[this.tablefiscaltaxregion.cuColumn]));
                }
                set {
                    this[this.tablefiscaltaxregion.cuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int idcountry {
                get {
                    try {
                        return ((int)(this[this.tablefiscaltaxregion.idcountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'idcountry\' nella tabella \'fiscaltaxregion\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tablefiscaltaxregion.idcountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int idregion {
                get {
                    try {
                        return ((int)(this[this.tablefiscaltaxregion.idregionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'idregion\' nella tabella \'fiscaltaxregion\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tablefiscaltaxregion.idregionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime lt {
                get {
                    return ((global::System.DateTime)(this[this.tablefiscaltaxregion.ltColumn]));
                }
                set {
                    this[this.tablefiscaltaxregion.ltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string lu {
                get {
                    return ((string)(this[this.tablefiscaltaxregion.luColumn]));
                }
                set {
                    this[this.tablefiscaltaxregion.luColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string title {
                get {
                    return ((string)(this[this.tablefiscaltaxregion.titleColumn]));
                }
                set {
                    this[this.tablefiscaltaxregion.titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsidcountryNull() {
                return this.IsNull(this.tablefiscaltaxregion.idcountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetidcountryNull() {
                this[this.tablefiscaltaxregion.idcountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsidregionNull() {
                return this.IsNull(this.tablefiscaltaxregion.idregionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetidregionNull() {
                this[this.tablefiscaltaxregion.idregionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class expensetaxRowChangeEvent : global::System.EventArgs {
            
            private expensetaxRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public expensetaxRowChangeEvent(expensetaxRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public expensetaxRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class expensetaxofficialRowChangeEvent : global::System.EventArgs {
            
            private expensetaxofficialRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public expensetaxofficialRowChangeEvent(expensetaxofficialRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public expensetaxofficialRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class taxRowChangeEvent : global::System.EventArgs {
            
            private taxRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public taxRowChangeEvent(taxRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public taxRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class fiscaltaxregionRowChangeEvent : global::System.EventArgs {
            
            private fiscaltaxregionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public fiscaltaxregionRowChangeEvent(fiscaltaxregionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public fiscaltaxregionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591
