<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Xceed.Validation</name>
  </assembly>
  <members>
    <member name="T:Xceed.Validation.CompareListOperator">
      <summary>Operators used to compare a value with a list of values.</summary>
    </member>
    <member name="T:Xceed.Validation.CompareValueOperator">
      <summary>Defines the operators used to compare two values.</summary>
    </member>
    <member name="T:Xceed.Validation.ValidationDataType">
      <summary>Defines the parsing type of the input data being validated.</summary>
    </member>
    <member name="T:Xceed.Validation.ValidationLevel">
      <summary>Determines when the validation will be performed for a specific <see cref="T:Xceed.Validation.ValidationCriterion"></see>.</summary>
    </member>
    <member name="T:Xceed.Validation.ConstantListCriterion">
      <summary>Specialization of the <see cref="T:Xceed.Validation.DataTypeCriterion"></see> class that compares an input component's value to a list of constant values.</summary>
    </member>
    <member name="T:Xceed.Validation.ConstantValueCriterion">
      <summary>Specialization of the <see cref="T:Xceed.Validation.DataTypeCriterion"></see> class that compares a value with a constant.</summary>
    </member>
    <member name="T:Xceed.Validation.CustomValidationMessages">
      <summary>Represents the custom validation error messages.</summary>
    </member>
    <member name="T:Xceed.Validation.DataTypeCriterion">
      <summary>Specialization of the <see cref="T:Xceed.Validation.ValidationCriterion"></see> class that validates a value using a data type.</summary>
    </member>
    <member name="T:Xceed.Validation.InputCellValueCriterion">
      <summary>Specialization of the <see cref="T:Xceed.Validation.DataTypeCriterion"></see> class that compares the values of two cells.</summary>
    </member>
    <member name="T:Xceed.Validation.InputValueCriterion">
      <summary>Specialization of the <see cref="T:Xceed.Validation.DataTypeCriterion"></see> class that compares the values of two input components.</summary>
    </member>
    <member name="T:Xceed.Validation.Licenser">
      <summary>Class which is used to register Xceed Input Validator for .NET.</summary>
    </member>
    <member name="T:Xceed.Validation.RangeCriterion">
      <summary>Specialization of the <see cref="T:Xceed.Validation.DataTypeCriterion"></see> class that compares the input value to a range defined by a minumum and a maximum value.</summary>
    </member>
    <member name="T:Xceed.Validation.RegularExpressionCriterion">
      <summary>Represents the validation of a value using a regular expression string.</summary>
    </member>
    <member name="T:Xceed.Validation.ValidationCriterion">
      <summary>Abstract base class of a validation expression containing a single criterion.</summary>
    </member>
    <member name="T:Xceed.Validation.ValidationExpression">
      <summary>Represents expressions that determine whether the evaluation succeeds or fails. Upon failure, a validation message explaining why the evaluation failed can be provided, which can then be displayed.</summary>
    </member>
    <member name="T:Xceed.Validation.ValidationMessages">
      <summary>Represents the validation error messages.</summary>
    </member>
    <member name="T:Xceed.Validation.ValidationProvider">
      <summary>Adds customizable text validation for compatible input components.</summary>
    </member>
    <member name="M:Xceed.Validation.ConstantListCriterion.#ctor">
      <summary>Initializes a new instance of the ConstantListCriterion class.</summary>
    </member>
    <member name="M:Xceed.Validation.ConstantListCriterion.#ctor(System.String,Xceed.Validation.ValidationLevel,Xceed.Validation.CompareListOperator,System.Object[],Xceed.Validation.ValidationDataType,System.Boolean,System.Boolean,System.Boolean,Xceed.Validation.CustomValidationMessages)">
      <summary>Initializes a new instance of the ConstantListCriterion class using the specified values.</summary>
    </member>
    <member name="M:Xceed.Validation.ConstantListCriterion.CanEvaluate(System.Object)">
      <summary>Returns a boolean value indicating whether the validation expression can be evaluated.</summary>
      <returns>Returns true if the validation expression is well formatted and has all required operands and operators to be evaluated on the passed input <see cref="T:System.ComponentModel.Component"></see>, false otherwise.</returns>
    </member>
    <member name="M:Xceed.Validation.ConstantListCriterion.Clone">
      <summary>Creates a copy of this <see cref="T:Xceed.Validation.ConstantListCriterion"></see> object.</summary>
      <returns>The ConstantListCriterion object this method creates, cast as an object.</returns>
    </member>
    <member name="M:Xceed.Validation.ConstantListCriterion.Evaluate(Xceed.Validation.ValidationProvider,System.Object,System.String,System.String@)">
      <summary>Launches the validation on the input component.</summary>
      <returns>&amp;lt;STRONG&amp;gt;true&amp;lt;/STRONG&amp;gt;&amp;amp;nbsp;if the input component contains valid information based on this validation expression; &amp;lt;STRONG&amp;gt;false&amp;lt;/STRONG&amp;gt; otherwise.</returns>
    </member>
    <member name="P:Xceed.Validation.ConstantListCriterion.ConstantList">
      <summary>Gets or sets an array of objects of type specified by <see cref="P:Xceed.Validation.DataTypeCriterion.DataType"></see> property representing the 
            values used for the criterion.</summary>
    </member>
    <member name="P:Xceed.Validation.ConstantListCriterion.Operator">
      <summary>Gets or sets the operator used to compare a value with the <see cref="P:Xceed.Validation.ConstantListCriterion.ConstantList"></see> property.</summary>
    </member>
    <member name="M:Xceed.Validation.ConstantValueCriterion.#ctor">
      <summary>Initializes a new instance of the ConstantValueCriterion class.</summary>
    </member>
    <member name="M:Xceed.Validation.ConstantValueCriterion.#ctor(System.String,Xceed.Validation.ValidationLevel,Xceed.Validation.CompareValueOperator,System.Object,Xceed.Validation.ValidationDataType,System.Boolean,System.Boolean,System.Boolean,Xceed.Validation.CustomValidationMessages)">
      <summary>Initializes a new instance of the ConstantValueCriterion class using the specified values.</summary>
    </member>
    <member name="M:Xceed.Validation.ConstantValueCriterion.CanEvaluate(System.Object)">
      <summary>Returns a boolean value indicating whether the validation expression can be evaluated.</summary>
      <returns>true if the validation expression is well formatted and has all required operands and operators to be evaluated on the passed <see cref="T:System.ComponentModel.Component"></see>; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Validation.ConstantValueCriterion.Clone">
      <summary>Creates a copy of this <see cref="T:Xceed.Validation.ConstantValueCriterion"></see> object.</summary>
      <returns>The ConstantValueCriterion object this method creates, cast as an object.</returns>
    </member>
    <member name="M:Xceed.Validation.ConstantValueCriterion.Evaluate(Xceed.Validation.ValidationProvider,System.Object,System.String,System.String@)">
      <summary>Launches the validation on the input component.</summary>
      <returns>&amp;lt;STRONG&amp;gt;true&amp;lt;/STRONG&amp;gt;&amp;amp;nbsp;if the component contains valid information based on this validation expression; &amp;lt;STRONG&amp;gt;false&amp;lt;/STRONG&amp;gt; otherwise.</returns>
    </member>
    <member name="P:Xceed.Validation.ConstantValueCriterion.Constant">
      <summary>Gets or sets the constant value of type specified by <see cref="P:Xceed.Validation.DataTypeCriterion.DataType"></see> property used in the comparison.</summary>
    </member>
    <member name="P:Xceed.Validation.ConstantValueCriterion.Operator">
      <summary>Gets or sets the <see cref="T:Xceed.Validation.CompareValueOperator"></see> used to compare a value with a 
            constant value.</summary>
    </member>
    <member name="M:Xceed.Validation.CustomValidationMessages.#ctor">
      <summary>Initializes a new instance of the CustomValidationMessages class.</summary>
    </member>
    <member name="M:Xceed.Validation.CustomValidationMessages.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the CustomValidationMessages class using the specified messages.</summary>
    </member>
    <member name="M:Xceed.Validation.CustomValidationMessages.Clone">
      <summary>Creates a copy of this <see cref="T:Xceed.Validation.CustomValidationMessages"></see> object.</summary>
      <returns>The CustomValidationMessages object this method creates, cast as an object.</returns>
    </member>
    <member name="P:Xceed.Validation.CustomValidationMessages.DefaultBetween">
      <summary>Gets the default value for the custom "Between" message.</summary>
    </member>
    <member name="P:Xceed.Validation.CustomValidationMessages.DefaultDataType">
      <summary>Gets the default value for the base custom "Data Type" message.</summary>
    </member>
    <member name="P:Xceed.Validation.CustomValidationMessages.DefaultDate">
      <summary>Gets the default value for the custom "Date" data type message.</summary>
    </member>
    <member name="P:Xceed.Validation.CustomValidationMessages.DefaultEqual">
      <summary>Gets the default value for the custom "Equal To" message.</summary>
    </member>
    <member name="P:Xceed.Validation.CustomValidationMessages.DefaultGreaterThan">
      <summary>Gets the default value for the custom "Greater Than" message.</summary>
    </member>
    <member name="P:Xceed.Validation.CustomValidationMessages.DefaultGreaterThanOrEqual">
      <summary>Gets the default value for the custom "Greater Than or Equal To" message.</summary>
    </member>
    <member name="P:Xceed.Validation.CustomValidationMessages.DefaultInSet">
      <summary>Gets the default value for the custom "In Set of Values" message.</summary>
    </member>
    <member name="P:Xceed.Validation.CustomValidationMessages.DefaultLessThan">
      <summary>Gets the default value for the custom "Less Than" message.</summary>
    </member>
    <member name="P:Xceed.Validation.CustomValidationMessages.DefaultLessThanOrEqual">
      <summary>Gets the default value for the custom "Less Than or Equal To" message.</summary>
    </member>
    <member name="P:Xceed.Validation.CustomValidationMessages.DefaultNotEqual">
      <summary>Gets the default value for the custom "Not Equal To" message.</summary>
    </member>
    <member name="P:Xceed.Validation.CustomValidationMessages.DefaultNotInSet">
      <summary>Gets the default value for the custom "Not in Set of Values" message.</summary>
    </member>
    <member name="P:Xceed.Validation.CustomValidationMessages.DefaultNumber">
      <summary>Gets the default value for the custom "Number" data type message.</summary>
    </member>
    <member name="P:Xceed.Validation.CustomValidationMessages.DefaultRegularExpression">
      <summary>Gets the default value for the custom "Regular Expression" message.</summary>
    </member>
    <member name="P:Xceed.Validation.CustomValidationMessages.DefaultRequiredField">
      <summary>Gets the default value for the custom "Required Field" message.</summary>
    </member>
    <member name="P:Xceed.Validation.CustomValidationMessages.DefaultValue">
      <summary>Gets the default value for the base custom message used for any invalid input value.</summary>
    </member>
    <member name="M:Xceed.Validation.DataTypeCriterion.#ctor">
      <summary>Initializes a new instance of the DataTypeCriterion class.</summary>
    </member>
    <member name="M:Xceed.Validation.DataTypeCriterion.#ctor(System.String,Xceed.Validation.ValidationLevel,Xceed.Validation.ValidationDataType,System.Boolean,System.Boolean,System.Boolean,Xceed.Validation.CustomValidationMessages)">
      <summary>Initializes a new instance of the DataTypeCriterion class using the specified values.</summary>
    </member>
    <member name="M:Xceed.Validation.DataTypeCriterion.CanEvaluate(System.Object)">
      <summary>Returns a boolean value indicating whether the validation expression can be evaluated.</summary>
      <returns>true if the validation expression is well formatted and has all required operands and operators to be evaluated on the passed <see cref="T:System.ComponentModel.Component"></see>; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Validation.DataTypeCriterion.Clone">
      <summary>Creates a copy of this <see cref="T:Xceed.Validation.DataTypeCriterion"></see> object.</summary>
      <returns>The DataTypeCriterion object this method creates, cast as an object.</returns>
    </member>
    <member name="M:Xceed.Validation.DataTypeCriterion.Evaluate(Xceed.Validation.ValidationProvider,System.Object,System.String,System.String@)">
      <summary>Launches the validation on the input component.</summary>
      <returns>&amp;lt;STRONG&amp;gt;true&amp;lt;/STRONG&amp;gt;&amp;amp;nbsp;if the input component contains valid information based on this validation expression; &amp;lt;STRONG&amp;gt;false&amp;lt;/STRONG&amp;gt; otherwise.</returns>
    </member>
    <member name="P:Xceed.Validation.DataTypeCriterion.DataType">
      <summary>Gets or sets the <see cref="T:Xceed.Validation.ValidationDataType"></see> that used to parse the value 
            during validation.</summary>
    </member>
    <member name="P:Xceed.Validation.DataTypeCriterion.RequiredField">
      <summary>Gets or sets a boolean value indicating whether the field must contain a value.</summary>
    </member>
    <member name="M:Xceed.Validation.InputCellValueCriterion.#ctor">
      <summary>Initializes a new instance of the InputCellValueCriterion class.</summary>
    </member>
    <member name="M:Xceed.Validation.InputCellValueCriterion.#ctor(System.String,Xceed.Validation.ValidationLevel,Xceed.Validation.CompareValueOperator,System.String,Xceed.Validation.ValidationDataType,System.Boolean,System.Boolean,System.Boolean,Xceed.Validation.CustomValidationMessages)">
      <summary>Initializes a new instance of the InputCellValueCriterion class using the specified values.</summary>
    </member>
    <member name="M:Xceed.Validation.InputCellValueCriterion.CanEvaluate(System.Object)">
      <summary>Returns a boolean value indicating if the validation expression can be evaluated.</summary>
      <returns>Returns true if the validation expression is well formatted and has all required operands and operators to be evaluated on the passed input <see cref="T:System.ComponentModel.Component"></see>, false otherwise.</returns>
    </member>
    <member name="M:Xceed.Validation.InputCellValueCriterion.Clone">
      <summary>Creates a copy of this <see cref="T:Xceed.Validation.InputCellValueCriterion"></see> object.</summary>
      <returns>The InputCellValueCriterion object this method creates, cast as an object.</returns>
    </member>
    <member name="M:Xceed.Validation.InputCellValueCriterion.Evaluate(Xceed.Validation.ValidationProvider,System.Object,System.String,System.String@)">
      <summary>Launches the validation on this input component.</summary>
      <returns>&amp;lt;STRONG&amp;gt;true&amp;lt;/STRONG&amp;gt;&amp;amp;nbsp;if the input component contains valid information based on this validation expression; &amp;lt;STRONG&amp;gt;false&amp;lt;/STRONG&amp;gt; otherwise.</returns>
    </member>
    <member name="P:Xceed.Validation.InputCellValueCriterion.FieldName">
      <summary>Gets or sets the field name of the <b>Xceed.Grid.Cell</b> being compared.</summary>
    </member>
    <member name="P:Xceed.Validation.InputCellValueCriterion.Operator">
      <summary>Gets or sets the <see cref="T:Xceed.Validation.CompareValueOperator"></see> used to compare an input value with 
            another input value.</summary>
    </member>
    <member name="M:Xceed.Validation.InputValueCriterion.#ctor">
      <summary>Initializes a new instance of the InputValueCriterion class.</summary>
    </member>
    <member name="M:Xceed.Validation.InputValueCriterion.#ctor(System.String,Xceed.Validation.ValidationLevel,Xceed.Validation.CompareValueOperator,System.Windows.Forms.Control,Xceed.Validation.ValidationDataType,System.Boolean,System.Boolean,System.Boolean,Xceed.Validation.CustomValidationMessages)">
      <summary>Initializes a new instance of the InputValueCriterion class using the specified values.</summary>
    </member>
    <member name="M:Xceed.Validation.InputValueCriterion.CanEvaluate(System.Object)">
      <summary>Returns a boolean value indicating whether the validation expression can be evaluated.</summary>
      <returns>true if the validation expression is well formatted and has all required operands and operators to be evaluated on the passed <see cref="T:System.ComponentModel.Component"></see>; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Validation.InputValueCriterion.Clone">
      <summary>Creates a copy of this <see cref="T:Xceed.Validation.InputValueCriterion"></see> object.</summary>
      <returns>The InputValueCriterion object this method creates, cast as an object.</returns>
    </member>
    <member name="M:Xceed.Validation.InputValueCriterion.Evaluate(Xceed.Validation.ValidationProvider,System.Object,System.String,System.String@)">
      <summary>Launches the validation on the input component.</summary>
      <returns>&amp;lt;STRONG&amp;gt;true&amp;lt;/STRONG&amp;gt;&amp;amp;nbsp;if the input component contains valid information based on this validation expression; &amp;lt;STRONG&amp;gt;false&amp;lt;/STRONG&amp;gt; otherwise.</returns>
    </member>
    <member name="P:Xceed.Validation.InputValueCriterion.InputControl">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.Control"></see> compared with the input component associated with this criterion.</summary>
    </member>
    <member name="P:Xceed.Validation.InputValueCriterion.Operator">
      <summary>Gets or sets the <see cref="T:Xceed.Validation.CompareValueOperator"></see> used to compare an input 
            component with the input component associated with this criterion.</summary>
    </member>
    <member name="P:Xceed.Validation.Licenser.LicenseKey">
      <summary>Gets or sets the license key used to license this product.</summary>
    </member>
    <member name="M:Xceed.Validation.RangeCriterion.#ctor">
      <summary>Initializes a new instance of the RangeCriterion class.</summary>
    </member>
    <member name="M:Xceed.Validation.RangeCriterion.#ctor(System.String,Xceed.Validation.ValidationLevel,System.Object,System.Object,Xceed.Validation.ValidationDataType,System.Boolean,System.Boolean,System.Boolean,Xceed.Validation.CustomValidationMessages)">
      <summary>Initializes a new instance of the RangeCriterion class using the specified values.</summary>
    </member>
    <member name="M:Xceed.Validation.RangeCriterion.CanEvaluate(System.Object)">
      <summary>Returns a boolean value indicating whether the validation expression can be evaluated.</summary>
      <returns>true if the validation expression is well formatted and has all required operands and operators to be evaluated on the passed <see cref="T:System.ComponentModel.Component"></see>; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Validation.RangeCriterion.Clone">
      <summary>Creates a copy of this <see cref="T:Xceed.Validation.RangeCriterion"></see> object.</summary>
      <returns>The RangeCriterion object this method creates, cast as an object.</returns>
    </member>
    <member name="M:Xceed.Validation.RangeCriterion.Evaluate(Xceed.Validation.ValidationProvider,System.Object,System.String,System.String@)">
      <summary>Launches the validation on the input component.</summary>
      <returns>&amp;lt;STRONG&amp;gt;true&amp;lt;/STRONG&amp;gt;&amp;amp;nbsp;if the input component contains valid information based on this validation expression; &amp;lt;STRONG&amp;gt;false&amp;lt;/STRONG&amp;gt; otherwise.</returns>
    </member>
    <member name="P:Xceed.Validation.RangeCriterion.Max">
      <summary>Gets or sets the maximum value of the range. It should be of type specified by <see cref="P:Xceed.Validation.DataTypeCriterion.DataType"></see> property.</summary>
    </member>
    <member name="P:Xceed.Validation.RangeCriterion.Min">
      <summary>Gets or sets the minimum value of the range. It should be of type specified by <see cref="P:Xceed.Validation.DataTypeCriterion.DataType"></see> property.</summary>
    </member>
    <member name="M:Xceed.Validation.RegularExpressionCriterion.#ctor">
      <summary>Initializes a new instance of the RegularExpressionCriterion class.</summary>
    </member>
    <member name="M:Xceed.Validation.RegularExpressionCriterion.#ctor(System.String,Xceed.Validation.ValidationLevel,System.String,System.Boolean,System.Boolean,System.Boolean,Xceed.Validation.CustomValidationMessages)">
      <summary>Initializes a new instance of the RegularExpressionCriterion class using 
            the specified values.</summary>
    </member>
    <member name="M:Xceed.Validation.RegularExpressionCriterion.CanEvaluate(System.Object)">
      <summary>Returns a boolean value indicating whether the validation expression can be evaluated.</summary>
      <returns>true if the validation expression is well formatted and has all required operands and operators to be evaluated on the passed <see cref="T:System.ComponentModel.Component"></see>; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Validation.RegularExpressionCriterion.Clone">
      <summary>Creates a copy of this <see cref="T:Xceed.Validation.RegularExpressionCriterion"></see> object.</summary>
      <returns>The RegularExpressionCriterion object this method creates, cast as an object.</returns>
    </member>
    <member name="M:Xceed.Validation.RegularExpressionCriterion.Evaluate(Xceed.Validation.ValidationProvider,System.Object,System.String,System.String@)">
      <summary>Launches the validation on the component.</summary>
      <returns>&amp;lt;STRONG&amp;gt;true&amp;lt;/STRONG&amp;gt;&amp;amp;nbsp;if the component contains valid information based on this validation expression; &amp;lt;STRONG&amp;gt;false&amp;lt;/STRONG&amp;gt; otherwise.</returns>
    </member>
    <member name="P:Xceed.Validation.RegularExpressionCriterion.RegularExpression">
      <summary>Gets or sets the regular expression string used to verify whether the input component's value matches.</summary>
    </member>
    <member name="P:Xceed.Validation.RegularExpressionCriterion.RequiredField">
      <summary>Gets or sets a boolean value indicating whether the field must contain a value.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationCriterion.CanEvaluate(System.Object)">
      <summary>Returns a boolean value indicating whether the validation expression can be evaluated.</summary>
      <returns>Returns true if the validation expression is well formatted and has all required operands and operators to be evaluated on the passed input <see cref="T:System.ComponentModel.Component"></see>; false otherwise.</returns>
    </member>
    <member name="P:Xceed.Validation.ValidationCriterion.CaseSensitive">
      <summary>Gets or sets a boolean value indicating whether the criterion is case sensitive.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationCriterion.CriterionName">
      <summary>Gets or sets a string that substitutes /%name/% variable in error messages to define the criterion.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationCriterion.CustomValidationMessages">
      <summary>Gets or sets the custom message text used in error messages for this criterion.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationCriterion.Trim">
      <summary>Gets or sets a boolean value indicating whether whitepace characters should be trimmed from the control's value before testing with the criterion.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationExpression.CanEvaluate(System.Object)">
      <summary>Returns a boolean value indicating whether the validation expression can be evaluated.</summary>
      <returns>true if the validation expression is well formatted and has all required operands and operators to be evaluated on the passed <see cref="T:System.Windows.Forms.Control"></see>; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Validation.ValidationExpression.Clone">
      <summary>Creates a copy of this <see cref="T:Xceed.Validation.ValidationExpression"></see> object.</summary>
      <returns>The ValidationExpression object this method creates, cast as an object.</returns>
    </member>
    <member name="M:Xceed.Validation.ValidationExpression.Evaluate(Xceed.Validation.ValidationProvider,System.Object,System.String,System.String@)">
      <summary>Launches the validation on the component.</summary>
      <returns>&amp;lt;STRONG&amp;gt;true&amp;lt;/STRONG&amp;gt;&amp;amp;nbsp;if the component contains valid information based on this validation expression; &amp;lt;STRONG&amp;gt;false&amp;lt;/STRONG&amp;gt; otherwise.</returns>
    </member>
    <member name="M:Xceed.Validation.ValidationExpression.GetPropertyValue(System.Object)">
      <summary>Retrieves the value of the specified property in the <see cref="P:Xceed.Validation.ValidationExpression.Properties"></see>
            collection.</summary>
      <returns>An object representing the value of the property.</returns>
    </member>
    <member name="M:Xceed.Validation.ValidationExpression.IsPropertyDefined(System.Object)">
      <summary>Retrieves a boolean value indicating whether the specified property has been explicitly set.</summary>
      <returns>true if the property has been explicitly set; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Validation.ValidationExpression.RemovePropertyValue(System.Object)">
      <summary>Removes the specified property from the <see cref="P:Xceed.Validation.ValidationExpression.Properties"></see> collection.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationExpression.ToString">
      <summary>Returns the string representation of the validation expression.</summary>
      <returns>A string representing the name of the validation expression.</returns>
    </member>
    <member name="P:Xceed.Validation.ValidationExpression.Name">
      <summary>Gets or sets a string representing the reference ID of the criterion.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationExpression.Properties">
      <summary>Gets a collection of property names whose values have been explicitly set
            as well as the corresponding values.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationExpression.ValidationLevel">
      <summary>Gets or sets an <see cref="T:Xceed.Validation.ValidationLevel"></see> value representing the moment at which validation 
            will be performed.</summary>
    </member>
    <member name="E:Xceed.Validation.ValidationExpression.Disposed">
      <summary>Raised when an expression has been disposed.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.#ctor">
      <summary>Initializes a new instance of the ValidationMessages class.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the ValidationMessages class using the specified messages.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.Clone">
      <summary>Creates a copy of this <see cref="T:Xceed.Validation.ValidationMessages"></see> object.</summary>
      <returns>The ValidationMessages object this method creates, cast as an object.</returns>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.GetPropertyValue(System.Object)">
      <summary>Retrieves the value of the specified property in the <see cref="P:Xceed.Validation.ValidationMessages.Properties"></see>
            collection.</summary>
      <returns>An object representing the value of the property.</returns>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.IsPropertyDefined(System.Object)">
      <summary>Retrieves a boolean value indicating whether the specified property has been explicitly set.</summary>
      <returns>true if the property has been explicitly set; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.RemovePropertyValue(System.Object)">
      <summary>Removes the specified property from the <see cref="P:Xceed.Validation.ValidationMessages.Properties"></see> collection.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.ResetBetween">
      <summary>Resets the <see cref="P:Xceed.Validation.ValidationMessages.Between"></see> property to its original value.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.ResetDataType">
      <summary>Resets the <see cref="P:Xceed.Validation.ValidationMessages.DataType"></see> property to its original value.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.ResetDate">
      <summary>Resets the <see cref="P:Xceed.Validation.ValidationMessages.Date"></see> property to its original value.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.ResetEqual">
      <summary>Resets the <see cref="P:Xceed.Validation.ValidationMessages.Equal"></see> property to its original value.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.ResetGreaterThan">
      <summary>Resets the <see cref="P:Xceed.Validation.ValidationMessages.GreaterThan"></see> property to its original value.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.ResetGreaterThanOrEqual">
      <summary>Resets the <see cref="P:Xceed.Validation.ValidationMessages.GreaterThanOrEqual"></see> property to its original value.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.ResetInSet">
      <summary>Resets the <see cref="P:Xceed.Validation.ValidationMessages.InSet"></see> property to its original value.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.ResetLessThan">
      <summary>Resets the <see cref="P:Xceed.Validation.ValidationMessages.LessThan"></see> property to its original value.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.ResetLessThanOrEqual">
      <summary>Resets the <see cref="P:Xceed.Validation.ValidationMessages.LessThanOrEqual"></see> property to its original value.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.ResetNotEqual">
      <summary>Resets the <see cref="P:Xceed.Validation.ValidationMessages.NotEqual"></see> property to its original value.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.ResetNotInSet">
      <summary>Resets the <see cref="P:Xceed.Validation.ValidationMessages.NotInSet"></see> property to its original value.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.ResetNumber">
      <summary>Resets the <see cref="P:Xceed.Validation.ValidationMessages.Number"></see> property to its original value.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.ResetRegularExpression">
      <summary>Resets the <see cref="P:Xceed.Validation.ValidationMessages.RegularExpression"></see> property to its original value.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.ResetRequiredField">
      <summary>Resets the <see cref="P:Xceed.Validation.ValidationMessages.RequiredField"></see> property to its original value.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationMessages.ResetValue">
      <summary>Resets the <see cref="P:Xceed.Validation.ValidationMessages.Value"></see> property to its original value.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.Between">
      <summary>Gets or sets the text for default "Between" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.DataType">
      <summary>Gets or sets the text for default "Data Type" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.Date">
      <summary>Gets or sets the text for default validation error messages of the "Date" data type.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.DefaultBetween">
      <summary>Gets the original value for default "Between" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.DefaultDataType">
      <summary>Gets the original value for default "Data Type" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.DefaultDate">
      <summary>Gets the original value for default validation error messages of the "Date" data type.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.DefaultEqual">
      <summary>Gets the original value for default "Equal To" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.DefaultGreaterThan">
      <summary>Gets the original value for default "Greater Than" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.DefaultGreaterThanOrEqual">
      <summary>Gets the original value for default "Greater Than or Equal To" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.DefaultInSet">
      <summary>Gets the original value for default "In Set of Values" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.DefaultLessThan">
      <summary>Gets the original value for default "Less Than" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.DefaultLessThanOrEqual">
      <summary>Gets the original value for default "Less Than or Equal To" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.DefaultNotEqual">
      <summary>Gets the original value for default "Not Equal To" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.DefaultNotInSet">
      <summary>Gets the original value for default "Not in Set of Values" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.DefaultNumber">
      <summary>Gets the original value for default validation error messages of the "Number" data type.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.DefaultRegularExpression">
      <summary>Gets the original value for default "Regular Expression" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.DefaultRequiredField">
      <summary>Gets the original value for default "Required Field" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.DefaultValue">
      <summary>Gets the original value for default base validation error messages for any invalid value.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.Equal">
      <summary>Gets or sets the text for default "Equal To" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.GreaterThan">
      <summary>Gets or sets the text for default "Greater Than" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.GreaterThanOrEqual">
      <summary>Gets or sets the text for default "Greater Than or Equal To" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.InSet">
      <summary>Gets or sets the text for default "In Set of Values" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.LessThan">
      <summary>Gets or sets the text for default "Less Than" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.LessThanOrEqual">
      <summary>Gets or sets the text for default "Less Than or Equal To" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.NotEqual">
      <summary>Gets or sets the text for default "Not Equal To" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.NotInSet">
      <summary>Gets or sets the text for default "Not in Set of Valudes" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.Number">
      <summary>Gets or sets the text for default validation error messages of the "Number" data type.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.Properties">
      <summary>Gets a collection of property names whose values have been explicitly set
            as well as the corresponding values.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.RegularExpression">
      <summary>Gets or sets the text for "Regular Expression" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.RequiredField">
      <summary>Gets or sets the text for default "Required Field"" validation error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationMessages.Value">
      <summary>Gets or sets the text for default base validation error messages for any invalid value.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationProvider.#ctor">
      <summary>Initializes a new instance of the ValidationProvider class.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationProvider.ContainsExpression(Xceed.Validation.ValidationExpression)">
      <summary>Determines if the provider contains the expression passed as parameter.</summary>
      <returns>Returns true if the validation provider contains the expression; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Validation.ValidationProvider.GetIconAlignment(System.Windows.Forms.Control)">
      <summary>Gets a value indicating where the error icon should be placed in relation to the control.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.ErrorIconAlignment"></see> values. The default icon alignment is <see cref="F:System.Windows.Forms.ErrorIconAlignment.MiddleRight"></see>.</returns>
    </member>
    <member name="M:Xceed.Validation.ValidationProvider.GetIconPadding(System.Windows.Forms.Control)">
      <summary>Returns the amount of extra space to leave next to the error icon.</summary>
      <returns>The number of pixels to leave between the icon and the control. 
            Many icons normally have extra space around their central images, 
            so the padding value is only necessary if additional space is necessary. 
            Padding values can be positive or negative. Negative values cause the icon 
            to overlap the edge of the control. The default icon padding is 0.</returns>
    </member>
    <member name="M:Xceed.Validation.ValidationProvider.GetPropertyValue(System.Object)">
      <summary>Retrieves the value of the specified property in the <see cref="P:Xceed.Validation.ValidationProvider.Properties"></see>
            collection.</summary>
      <returns>An object representing the value of the property.</returns>
    </member>
    <member name="M:Xceed.Validation.ValidationProvider.GetValidationError(System.Object)">
      <summary>Gets the validation error that is displayed next to the input component passed as a parameter.</summary>
      <returns>Returns the error if it exists; $$NULL$$ otherwise.</returns>
    </member>
    <member name="M:Xceed.Validation.ValidationProvider.GetValidationExpression(System.Object)">
      <summary>Retrieves the validation expression associated with the component.</summary>
      <returns>The <see cref="T:Xceed.Validation.ValidationExpression"></see> associated with the input component.</returns>
    </member>
    <member name="M:Xceed.Validation.ValidationProvider.IsPropertyDefined(System.Object)">
      <summary>Retrieves a boolean value indicating whether the specified property has been explicitly set.</summary>
      <returns>true if the property has been explicitly set; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Validation.ValidationProvider.RemovePropertyValue(System.Object)">
      <summary>Removes the specified property from the <see cref="P:Xceed.Validation.ValidationProvider.Properties"></see> collection.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationProvider.SetIconAlignment(System.Windows.Forms.Control,System.Windows.Forms.ErrorIconAlignment)">
      <summary>Sets the location where the error icon should be placed in relation to the control.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationProvider.SetIconPadding(System.Windows.Forms.Control,System.Int32)">
      <summary>Sets the amount of extra space to leave between the specified control and the error icon.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationProvider.SetValidationError(System.Object,System.String)">
      <summary>Sets a validation error to be displayed next to an input component, 
            overriding all validation messages previously set by the validation provider.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationProvider.SetValidationExpression(System.Object,Xceed.Validation.ValidationExpression)">
      <summary>Associates a validation expression with an input component.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationProvider.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="M:Xceed.Validation.ValidationProvider.Validate(System.Object,System.Boolean,System.Object[])">
      <summary>Validates the component and all of its child components, but excludes specified types of components.</summary>
      <returns>Returns true if components are valid; false otherwise.</returns>
    </member>
    <member name="M:Xceed.Validation.ValidationProvider.Validate(System.Object,System.Boolean,System.Boolean)">
      <summary>Validates the component, specifying whether child components and visible components should be validated.</summary>
      <returns>Returns true if components are valid; false otherwise.</returns>
    </member>
    <member name="P:Xceed.Validation.ValidationProvider.DefaultValidationMessages">
      <summary>Gets or sets the default message text used in error messages.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationProvider.Icon">
      <summary>Gets or sets the icon that will be displayed when a validation error occured.</summary>
    </member>
    <member name="P:Xceed.Validation.ValidationProvider.Properties">
      <summary>Gets a collection of property names whose values have been explicitly set
            as well as the corresponding values.</summary>
    </member>
  </members>
</doc>