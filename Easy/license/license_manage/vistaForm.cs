/*
    Easy
    Copyright (C) 2020 Università degli Studi di Catania (www.unict.it)
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

﻿//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2300
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace license_manage {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class vistaForm : DataSet {
        
        private licenseDataTable tablelicense;
        
        public vistaForm() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected vistaForm(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["license"] != null)) {
                    this.Tables.Add(new licenseDataTable(ds.Tables["license"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public licenseDataTable license {
            get {
                return this.tablelicense;
            }
        }
        
        public override DataSet Clone() {
            vistaForm cln = ((vistaForm)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["license"] != null)) {
                this.Tables.Add(new licenseDataTable(ds.Tables["license"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablelicense = ((licenseDataTable)(this.Tables["license"]));
            if ((this.tablelicense != null)) {
                this.tablelicense.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "vistaForm";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/VistaFrmlicenzausomanage.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablelicense = new licenseDataTable();
            this.Tables.Add(this.tablelicense);
        }
        
        private bool ShouldSerializelicense() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void licenseRowChangeEventHandler(object sender, licenseRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class licenseDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columndepartmentname;
            
            private DataColumn columnagencyname;
            
            private DataColumn columnaddress1;
            
            private DataColumn columnaddress2;
            
            private DataColumn columncap;
            
            private DataColumn columnlocation;
            
            private DataColumn columncountry;
            
            private DataColumn columncf;
            
            private DataColumn columnp_iva;
            
            private DataColumn columnagencycode;
            
            private DataColumn columnidreg;
            
            private DataColumn columnsent;
            
            private DataColumn columnswmorecode;
            
            private DataColumn columnswmoreflag;
            
            private DataColumn columniddb;
            
            private DataColumn columnservername;
            
            private DataColumn columndbname;
            
            private DataColumn columnlickind;
            
            private DataColumn columnexpiringlic;
            
            private DataColumn columnlicstatus;
            
            private DataColumn columnchecklic;
            
            private DataColumn columnmankind;
            
            private DataColumn columnexpiringman;
            
            private DataColumn columnmanstatus;
            
            private DataColumn columncheckman;
            
            private DataColumn columncheckflag;
            
            private DataColumn columnagency;
            
            private DataColumn columndepartment;
            
            private DataColumn columnreferent;
            
            private DataColumn columnphonenumber;
            
            private DataColumn columnfax;
            
            private DataColumn columnemail;
            
            private DataColumn columnannotations;
            
            private DataColumn columnnmsgs;
            
            private DataColumn columndummykey;
            
            private DataColumn columnserverbackup1;
            
            private DataColumn columncheckbackup1;
            
            private DataColumn columnserverbackup2;
            
            private DataColumn columncheckbackup2;
            
            private DataColumn columnlu;
            
            private DataColumn columnlt;
            
            internal licenseDataTable() : 
                    base("license") {
                this.InitClass();
            }
            
            internal licenseDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn departmentnameColumn {
                get {
                    return this.columndepartmentname;
                }
            }
            
            internal DataColumn agencynameColumn {
                get {
                    return this.columnagencyname;
                }
            }
            
            internal DataColumn address1Column {
                get {
                    return this.columnaddress1;
                }
            }
            
            internal DataColumn address2Column {
                get {
                    return this.columnaddress2;
                }
            }
            
            internal DataColumn capColumn {
                get {
                    return this.columncap;
                }
            }
            
            internal DataColumn locationColumn {
                get {
                    return this.columnlocation;
                }
            }
            
            internal DataColumn countryColumn {
                get {
                    return this.columncountry;
                }
            }
            
            internal DataColumn cfColumn {
                get {
                    return this.columncf;
                }
            }
            
            internal DataColumn p_ivaColumn {
                get {
                    return this.columnp_iva;
                }
            }
            
            internal DataColumn agencycodeColumn {
                get {
                    return this.columnagencycode;
                }
            }
            
            internal DataColumn idregColumn {
                get {
                    return this.columnidreg;
                }
            }
            
            internal DataColumn sentColumn {
                get {
                    return this.columnsent;
                }
            }
            
            internal DataColumn swmorecodeColumn {
                get {
                    return this.columnswmorecode;
                }
            }
            
            internal DataColumn swmoreflagColumn {
                get {
                    return this.columnswmoreflag;
                }
            }
            
            internal DataColumn iddbColumn {
                get {
                    return this.columniddb;
                }
            }
            
            internal DataColumn servernameColumn {
                get {
                    return this.columnservername;
                }
            }
            
            internal DataColumn dbnameColumn {
                get {
                    return this.columndbname;
                }
            }
            
            internal DataColumn lickindColumn {
                get {
                    return this.columnlickind;
                }
            }
            
            internal DataColumn expiringlicColumn {
                get {
                    return this.columnexpiringlic;
                }
            }
            
            internal DataColumn licstatusColumn {
                get {
                    return this.columnlicstatus;
                }
            }
            
            internal DataColumn checklicColumn {
                get {
                    return this.columnchecklic;
                }
            }
            
            internal DataColumn mankindColumn {
                get {
                    return this.columnmankind;
                }
            }
            
            internal DataColumn expiringmanColumn {
                get {
                    return this.columnexpiringman;
                }
            }
            
            internal DataColumn manstatusColumn {
                get {
                    return this.columnmanstatus;
                }
            }
            
            internal DataColumn checkmanColumn {
                get {
                    return this.columncheckman;
                }
            }
            
            internal DataColumn checkflagColumn {
                get {
                    return this.columncheckflag;
                }
            }
            
            internal DataColumn agencyColumn {
                get {
                    return this.columnagency;
                }
            }
            
            internal DataColumn departmentColumn {
                get {
                    return this.columndepartment;
                }
            }
            
            internal DataColumn referentColumn {
                get {
                    return this.columnreferent;
                }
            }
            
            internal DataColumn phonenumberColumn {
                get {
                    return this.columnphonenumber;
                }
            }
            
            internal DataColumn faxColumn {
                get {
                    return this.columnfax;
                }
            }
            
            internal DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            internal DataColumn annotationsColumn {
                get {
                    return this.columnannotations;
                }
            }
            
            internal DataColumn nmsgsColumn {
                get {
                    return this.columnnmsgs;
                }
            }
            
            internal DataColumn dummykeyColumn {
                get {
                    return this.columndummykey;
                }
            }
            
            internal DataColumn serverbackup1Column {
                get {
                    return this.columnserverbackup1;
                }
            }
            
            internal DataColumn checkbackup1Column {
                get {
                    return this.columncheckbackup1;
                }
            }
            
            internal DataColumn serverbackup2Column {
                get {
                    return this.columnserverbackup2;
                }
            }
            
            internal DataColumn checkbackup2Column {
                get {
                    return this.columncheckbackup2;
                }
            }
            
            internal DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            internal DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            public licenseRow this[int index] {
                get {
                    return ((licenseRow)(this.Rows[index]));
                }
            }
            
            public event licenseRowChangeEventHandler licenseRowChanged;
            
            public event licenseRowChangeEventHandler licenseRowChanging;
            
            public event licenseRowChangeEventHandler licenseRowDeleted;
            
            public event licenseRowChangeEventHandler licenseRowDeleting;
            
            public void AddlicenseRow(licenseRow row) {
                this.Rows.Add(row);
            }
            
            public licenseRow AddlicenseRow(
                        string departmentname, 
                        string agencyname, 
                        string address1, 
                        string address2, 
                        string cap, 
                        string location, 
                        string country, 
                        string cf, 
                        string p_iva, 
                        string agencycode, 
                        int idreg, 
                        string sent, 
                        string swmorecode, 
                        int swmoreflag, 
                        int iddb, 
                        string servername, 
                        string dbname, 
                        string lickind, 
                        System.DateTime expiringlic, 
                        string licstatus, 
                        string checklic, 
                        string mankind, 
                        System.DateTime expiringman, 
                        string manstatus, 
                        string checkman, 
                        string checkflag, 
                        string agency, 
                        string department, 
                        string referent, 
                        string phonenumber, 
                        string fax, 
                        string email, 
                        string annotations, 
                        int nmsgs, 
                        string dummykey, 
                        string serverbackup1, 
                        string checkbackup1, 
                        string serverbackup2, 
                        string checkbackup2, 
                        string lu, 
                        System.DateTime lt) {
                licenseRow rowlicenseRow = ((licenseRow)(this.NewRow()));
                rowlicenseRow.ItemArray = new object[] {
                        departmentname,
                        agencyname,
                        address1,
                        address2,
                        cap,
                        location,
                        country,
                        cf,
                        p_iva,
                        agencycode,
                        idreg,
                        sent,
                        swmorecode,
                        swmoreflag,
                        iddb,
                        servername,
                        dbname,
                        lickind,
                        expiringlic,
                        licstatus,
                        checklic,
                        mankind,
                        expiringman,
                        manstatus,
                        checkman,
                        checkflag,
                        agency,
                        department,
                        referent,
                        phonenumber,
                        fax,
                        email,
                        annotations,
                        nmsgs,
                        dummykey,
                        serverbackup1,
                        checkbackup1,
                        serverbackup2,
                        checkbackup2,
                        lu,
                        lt};
                this.Rows.Add(rowlicenseRow);
                return rowlicenseRow;
            }
            
            public licenseRow FindBydummykey(string dummykey) {
                return ((licenseRow)(this.Rows.Find(new object[] {
                            dummykey})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                licenseDataTable cln = ((licenseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new licenseDataTable();
            }
            
            internal void InitVars() {
                this.columndepartmentname = this.Columns["departmentname"];
                this.columnagencyname = this.Columns["agencyname"];
                this.columnaddress1 = this.Columns["address1"];
                this.columnaddress2 = this.Columns["address2"];
                this.columncap = this.Columns["cap"];
                this.columnlocation = this.Columns["location"];
                this.columncountry = this.Columns["country"];
                this.columncf = this.Columns["cf"];
                this.columnp_iva = this.Columns["p_iva"];
                this.columnagencycode = this.Columns["agencycode"];
                this.columnidreg = this.Columns["idreg"];
                this.columnsent = this.Columns["sent"];
                this.columnswmorecode = this.Columns["swmorecode"];
                this.columnswmoreflag = this.Columns["swmoreflag"];
                this.columniddb = this.Columns["iddb"];
                this.columnservername = this.Columns["servername"];
                this.columndbname = this.Columns["dbname"];
                this.columnlickind = this.Columns["lickind"];
                this.columnexpiringlic = this.Columns["expiringlic"];
                this.columnlicstatus = this.Columns["licstatus"];
                this.columnchecklic = this.Columns["checklic"];
                this.columnmankind = this.Columns["mankind"];
                this.columnexpiringman = this.Columns["expiringman"];
                this.columnmanstatus = this.Columns["manstatus"];
                this.columncheckman = this.Columns["checkman"];
                this.columncheckflag = this.Columns["checkflag"];
                this.columnagency = this.Columns["agency"];
                this.columndepartment = this.Columns["department"];
                this.columnreferent = this.Columns["referent"];
                this.columnphonenumber = this.Columns["phonenumber"];
                this.columnfax = this.Columns["fax"];
                this.columnemail = this.Columns["email"];
                this.columnannotations = this.Columns["annotations"];
                this.columnnmsgs = this.Columns["nmsgs"];
                this.columndummykey = this.Columns["dummykey"];
                this.columnserverbackup1 = this.Columns["serverbackup1"];
                this.columncheckbackup1 = this.Columns["checkbackup1"];
                this.columnserverbackup2 = this.Columns["serverbackup2"];
                this.columncheckbackup2 = this.Columns["checkbackup2"];
                this.columnlu = this.Columns["lu"];
                this.columnlt = this.Columns["lt"];
            }
            
            private void InitClass() {
                this.columndepartmentname = new DataColumn("departmentname", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndepartmentname);
                this.columnagencyname = new DataColumn("agencyname", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnagencyname);
                this.columnaddress1 = new DataColumn("address1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnaddress1);
                this.columnaddress2 = new DataColumn("address2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnaddress2);
                this.columncap = new DataColumn("cap", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncap);
                this.columnlocation = new DataColumn("location", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnlocation);
                this.columncountry = new DataColumn("country", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncountry);
                this.columncf = new DataColumn("cf", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncf);
                this.columnp_iva = new DataColumn("p_iva", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnp_iva);
                this.columnagencycode = new DataColumn("agencycode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnagencycode);
                this.columnidreg = new DataColumn("idreg", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnidreg);
                this.columnsent = new DataColumn("sent", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsent);
                this.columnswmorecode = new DataColumn("swmorecode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnswmorecode);
                this.columnswmoreflag = new DataColumn("swmoreflag", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnswmoreflag);
                this.columniddb = new DataColumn("iddb", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniddb);
                this.columnservername = new DataColumn("servername", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnservername);
                this.columndbname = new DataColumn("dbname", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndbname);
                this.columnlickind = new DataColumn("lickind", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnlickind);
                this.columnexpiringlic = new DataColumn("expiringlic", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnexpiringlic);
                this.columnlicstatus = new DataColumn("licstatus", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnlicstatus);
                this.columnchecklic = new DataColumn("checklic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnchecklic);
                this.columnmankind = new DataColumn("mankind", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnmankind);
                this.columnexpiringman = new DataColumn("expiringman", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnexpiringman);
                this.columnmanstatus = new DataColumn("manstatus", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnmanstatus);
                this.columncheckman = new DataColumn("checkman", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncheckman);
                this.columncheckflag = new DataColumn("checkflag", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncheckflag);
                this.columnagency = new DataColumn("agency", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnagency);
                this.columndepartment = new DataColumn("department", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndepartment);
                this.columnreferent = new DataColumn("referent", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnreferent);
                this.columnphonenumber = new DataColumn("phonenumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnphonenumber);
                this.columnfax = new DataColumn("fax", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfax);
                this.columnemail = new DataColumn("email", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnemail);
                this.columnannotations = new DataColumn("annotations", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnannotations);
                this.columnnmsgs = new DataColumn("nmsgs", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnmsgs);
                this.columndummykey = new DataColumn("dummykey", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndummykey);
                this.columnserverbackup1 = new DataColumn("serverbackup1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnserverbackup1);
                this.columncheckbackup1 = new DataColumn("checkbackup1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncheckbackup1);
                this.columnserverbackup2 = new DataColumn("serverbackup2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnserverbackup2);
                this.columncheckbackup2 = new DataColumn("checkbackup2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncheckbackup2);
                this.columnlu = new DataColumn("lu", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnlu);
                this.columnlt = new DataColumn("lt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnlt);
                this.Constraints.Add(new UniqueConstraint("vistaFormKey1", new DataColumn[] {
                                this.columndummykey}, true));
                this.columndummykey.AllowDBNull = false;
                this.columndummykey.Unique = true;
            }
            
            public licenseRow NewlicenseRow() {
                return ((licenseRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new licenseRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(licenseRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.licenseRowChanged != null)) {
                    this.licenseRowChanged(this, new licenseRowChangeEvent(((licenseRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.licenseRowChanging != null)) {
                    this.licenseRowChanging(this, new licenseRowChangeEvent(((licenseRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.licenseRowDeleted != null)) {
                    this.licenseRowDeleted(this, new licenseRowChangeEvent(((licenseRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.licenseRowDeleting != null)) {
                    this.licenseRowDeleting(this, new licenseRowChangeEvent(((licenseRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovelicenseRow(licenseRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class licenseRow : DataRow {
            
            private licenseDataTable tablelicense;
            
            internal licenseRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablelicense = ((licenseDataTable)(this.Table));
            }
            
            public string departmentname {
                get {
                    try {
                        return ((string)(this[this.tablelicense.departmentnameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.departmentnameColumn] = value;
                }
            }
            
            public string agencyname {
                get {
                    try {
                        return ((string)(this[this.tablelicense.agencynameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.agencynameColumn] = value;
                }
            }
            
            public string address1 {
                get {
                    try {
                        return ((string)(this[this.tablelicense.address1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.address1Column] = value;
                }
            }
            
            public string address2 {
                get {
                    try {
                        return ((string)(this[this.tablelicense.address2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.address2Column] = value;
                }
            }
            
            public string cap {
                get {
                    try {
                        return ((string)(this[this.tablelicense.capColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.capColumn] = value;
                }
            }
            
            public string location {
                get {
                    try {
                        return ((string)(this[this.tablelicense.locationColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.locationColumn] = value;
                }
            }
            
            public string country {
                get {
                    try {
                        return ((string)(this[this.tablelicense.countryColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.countryColumn] = value;
                }
            }
            
            public string cf {
                get {
                    try {
                        return ((string)(this[this.tablelicense.cfColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.cfColumn] = value;
                }
            }
            
            public string p_iva {
                get {
                    try {
                        return ((string)(this[this.tablelicense.p_ivaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.p_ivaColumn] = value;
                }
            }
            
            public string agencycode {
                get {
                    try {
                        return ((string)(this[this.tablelicense.agencycodeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.agencycodeColumn] = value;
                }
            }
            
            public int idreg {
                get {
                    try {
                        return ((int)(this[this.tablelicense.idregColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.idregColumn] = value;
                }
            }
            
            public string sent {
                get {
                    try {
                        return ((string)(this[this.tablelicense.sentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.sentColumn] = value;
                }
            }
            
            public string swmorecode {
                get {
                    try {
                        return ((string)(this[this.tablelicense.swmorecodeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.swmorecodeColumn] = value;
                }
            }
            
            public int swmoreflag {
                get {
                    try {
                        return ((int)(this[this.tablelicense.swmoreflagColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.swmoreflagColumn] = value;
                }
            }
            
            public int iddb {
                get {
                    try {
                        return ((int)(this[this.tablelicense.iddbColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.iddbColumn] = value;
                }
            }
            
            public string servername {
                get {
                    try {
                        return ((string)(this[this.tablelicense.servernameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.servernameColumn] = value;
                }
            }
            
            public string dbname {
                get {
                    try {
                        return ((string)(this[this.tablelicense.dbnameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.dbnameColumn] = value;
                }
            }
            
            public string lickind {
                get {
                    try {
                        return ((string)(this[this.tablelicense.lickindColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.lickindColumn] = value;
                }
            }
            
            public System.DateTime expiringlic {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablelicense.expiringlicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.expiringlicColumn] = value;
                }
            }
            
            public string licstatus {
                get {
                    try {
                        return ((string)(this[this.tablelicense.licstatusColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.licstatusColumn] = value;
                }
            }
            
            public string checklic {
                get {
                    try {
                        return ((string)(this[this.tablelicense.checklicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.checklicColumn] = value;
                }
            }
            
            public string mankind {
                get {
                    try {
                        return ((string)(this[this.tablelicense.mankindColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.mankindColumn] = value;
                }
            }
            
            public System.DateTime expiringman {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablelicense.expiringmanColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.expiringmanColumn] = value;
                }
            }
            
            public string manstatus {
                get {
                    try {
                        return ((string)(this[this.tablelicense.manstatusColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.manstatusColumn] = value;
                }
            }
            
            public string checkman {
                get {
                    try {
                        return ((string)(this[this.tablelicense.checkmanColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.checkmanColumn] = value;
                }
            }
            
            public string checkflag {
                get {
                    try {
                        return ((string)(this[this.tablelicense.checkflagColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.checkflagColumn] = value;
                }
            }
            
            public string agency {
                get {
                    try {
                        return ((string)(this[this.tablelicense.agencyColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.agencyColumn] = value;
                }
            }
            
            public string department {
                get {
                    try {
                        return ((string)(this[this.tablelicense.departmentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.departmentColumn] = value;
                }
            }
            
            public string referent {
                get {
                    try {
                        return ((string)(this[this.tablelicense.referentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.referentColumn] = value;
                }
            }
            
            public string phonenumber {
                get {
                    try {
                        return ((string)(this[this.tablelicense.phonenumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.phonenumberColumn] = value;
                }
            }
            
            public string fax {
                get {
                    try {
                        return ((string)(this[this.tablelicense.faxColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.faxColumn] = value;
                }
            }
            
            public string email {
                get {
                    try {
                        return ((string)(this[this.tablelicense.emailColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.emailColumn] = value;
                }
            }
            
            public string annotations {
                get {
                    try {
                        return ((string)(this[this.tablelicense.annotationsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.annotationsColumn] = value;
                }
            }
            
            public int nmsgs {
                get {
                    try {
                        return ((int)(this[this.tablelicense.nmsgsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.nmsgsColumn] = value;
                }
            }
            
            public string dummykey {
                get {
                    return ((string)(this[this.tablelicense.dummykeyColumn]));
                }
                set {
                    this[this.tablelicense.dummykeyColumn] = value;
                }
            }
            
            public string serverbackup1 {
                get {
                    try {
                        return ((string)(this[this.tablelicense.serverbackup1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.serverbackup1Column] = value;
                }
            }
            
            public string checkbackup1 {
                get {
                    try {
                        return ((string)(this[this.tablelicense.checkbackup1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.checkbackup1Column] = value;
                }
            }
            
            public string serverbackup2 {
                get {
                    try {
                        return ((string)(this[this.tablelicense.serverbackup2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.serverbackup2Column] = value;
                }
            }
            
            public string checkbackup2 {
                get {
                    try {
                        return ((string)(this[this.tablelicense.checkbackup2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.checkbackup2Column] = value;
                }
            }
            
            public string lu {
                get {
                    try {
                        return ((string)(this[this.tablelicense.luColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.luColumn] = value;
                }
            }
            
            public System.DateTime lt {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablelicense.ltColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelicense.ltColumn] = value;
                }
            }
            
            public bool IsdepartmentnameNull() {
                return this.IsNull(this.tablelicense.departmentnameColumn);
            }
            
            public void SetdepartmentnameNull() {
                this[this.tablelicense.departmentnameColumn] = System.Convert.DBNull;
            }
            
            public bool IsagencynameNull() {
                return this.IsNull(this.tablelicense.agencynameColumn);
            }
            
            public void SetagencynameNull() {
                this[this.tablelicense.agencynameColumn] = System.Convert.DBNull;
            }
            
            public bool Isaddress1Null() {
                return this.IsNull(this.tablelicense.address1Column);
            }
            
            public void Setaddress1Null() {
                this[this.tablelicense.address1Column] = System.Convert.DBNull;
            }
            
            public bool Isaddress2Null() {
                return this.IsNull(this.tablelicense.address2Column);
            }
            
            public void Setaddress2Null() {
                this[this.tablelicense.address2Column] = System.Convert.DBNull;
            }
            
            public bool IscapNull() {
                return this.IsNull(this.tablelicense.capColumn);
            }
            
            public void SetcapNull() {
                this[this.tablelicense.capColumn] = System.Convert.DBNull;
            }
            
            public bool IslocationNull() {
                return this.IsNull(this.tablelicense.locationColumn);
            }
            
            public void SetlocationNull() {
                this[this.tablelicense.locationColumn] = System.Convert.DBNull;
            }
            
            public bool IscountryNull() {
                return this.IsNull(this.tablelicense.countryColumn);
            }
            
            public void SetcountryNull() {
                this[this.tablelicense.countryColumn] = System.Convert.DBNull;
            }
            
            public bool IscfNull() {
                return this.IsNull(this.tablelicense.cfColumn);
            }
            
            public void SetcfNull() {
                this[this.tablelicense.cfColumn] = System.Convert.DBNull;
            }
            
            public bool Isp_ivaNull() {
                return this.IsNull(this.tablelicense.p_ivaColumn);
            }
            
            public void Setp_ivaNull() {
                this[this.tablelicense.p_ivaColumn] = System.Convert.DBNull;
            }
            
            public bool IsagencycodeNull() {
                return this.IsNull(this.tablelicense.agencycodeColumn);
            }
            
            public void SetagencycodeNull() {
                this[this.tablelicense.agencycodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsidregNull() {
                return this.IsNull(this.tablelicense.idregColumn);
            }
            
            public void SetidregNull() {
                this[this.tablelicense.idregColumn] = System.Convert.DBNull;
            }
            
            public bool IssentNull() {
                return this.IsNull(this.tablelicense.sentColumn);
            }
            
            public void SetsentNull() {
                this[this.tablelicense.sentColumn] = System.Convert.DBNull;
            }
            
            public bool IsswmorecodeNull() {
                return this.IsNull(this.tablelicense.swmorecodeColumn);
            }
            
            public void SetswmorecodeNull() {
                this[this.tablelicense.swmorecodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsswmoreflagNull() {
                return this.IsNull(this.tablelicense.swmoreflagColumn);
            }
            
            public void SetswmoreflagNull() {
                this[this.tablelicense.swmoreflagColumn] = System.Convert.DBNull;
            }
            
            public bool IsiddbNull() {
                return this.IsNull(this.tablelicense.iddbColumn);
            }
            
            public void SetiddbNull() {
                this[this.tablelicense.iddbColumn] = System.Convert.DBNull;
            }
            
            public bool IsservernameNull() {
                return this.IsNull(this.tablelicense.servernameColumn);
            }
            
            public void SetservernameNull() {
                this[this.tablelicense.servernameColumn] = System.Convert.DBNull;
            }
            
            public bool IsdbnameNull() {
                return this.IsNull(this.tablelicense.dbnameColumn);
            }
            
            public void SetdbnameNull() {
                this[this.tablelicense.dbnameColumn] = System.Convert.DBNull;
            }
            
            public bool IslickindNull() {
                return this.IsNull(this.tablelicense.lickindColumn);
            }
            
            public void SetlickindNull() {
                this[this.tablelicense.lickindColumn] = System.Convert.DBNull;
            }
            
            public bool IsexpiringlicNull() {
                return this.IsNull(this.tablelicense.expiringlicColumn);
            }
            
            public void SetexpiringlicNull() {
                this[this.tablelicense.expiringlicColumn] = System.Convert.DBNull;
            }
            
            public bool IslicstatusNull() {
                return this.IsNull(this.tablelicense.licstatusColumn);
            }
            
            public void SetlicstatusNull() {
                this[this.tablelicense.licstatusColumn] = System.Convert.DBNull;
            }
            
            public bool IschecklicNull() {
                return this.IsNull(this.tablelicense.checklicColumn);
            }
            
            public void SetchecklicNull() {
                this[this.tablelicense.checklicColumn] = System.Convert.DBNull;
            }
            
            public bool IsmankindNull() {
                return this.IsNull(this.tablelicense.mankindColumn);
            }
            
            public void SetmankindNull() {
                this[this.tablelicense.mankindColumn] = System.Convert.DBNull;
            }
            
            public bool IsexpiringmanNull() {
                return this.IsNull(this.tablelicense.expiringmanColumn);
            }
            
            public void SetexpiringmanNull() {
                this[this.tablelicense.expiringmanColumn] = System.Convert.DBNull;
            }
            
            public bool IsmanstatusNull() {
                return this.IsNull(this.tablelicense.manstatusColumn);
            }
            
            public void SetmanstatusNull() {
                this[this.tablelicense.manstatusColumn] = System.Convert.DBNull;
            }
            
            public bool IscheckmanNull() {
                return this.IsNull(this.tablelicense.checkmanColumn);
            }
            
            public void SetcheckmanNull() {
                this[this.tablelicense.checkmanColumn] = System.Convert.DBNull;
            }
            
            public bool IscheckflagNull() {
                return this.IsNull(this.tablelicense.checkflagColumn);
            }
            
            public void SetcheckflagNull() {
                this[this.tablelicense.checkflagColumn] = System.Convert.DBNull;
            }
            
            public bool IsagencyNull() {
                return this.IsNull(this.tablelicense.agencyColumn);
            }
            
            public void SetagencyNull() {
                this[this.tablelicense.agencyColumn] = System.Convert.DBNull;
            }
            
            public bool IsdepartmentNull() {
                return this.IsNull(this.tablelicense.departmentColumn);
            }
            
            public void SetdepartmentNull() {
                this[this.tablelicense.departmentColumn] = System.Convert.DBNull;
            }
            
            public bool IsreferentNull() {
                return this.IsNull(this.tablelicense.referentColumn);
            }
            
            public void SetreferentNull() {
                this[this.tablelicense.referentColumn] = System.Convert.DBNull;
            }
            
            public bool IsphonenumberNull() {
                return this.IsNull(this.tablelicense.phonenumberColumn);
            }
            
            public void SetphonenumberNull() {
                this[this.tablelicense.phonenumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsfaxNull() {
                return this.IsNull(this.tablelicense.faxColumn);
            }
            
            public void SetfaxNull() {
                this[this.tablelicense.faxColumn] = System.Convert.DBNull;
            }
            
            public bool IsemailNull() {
                return this.IsNull(this.tablelicense.emailColumn);
            }
            
            public void SetemailNull() {
                this[this.tablelicense.emailColumn] = System.Convert.DBNull;
            }
            
            public bool IsannotationsNull() {
                return this.IsNull(this.tablelicense.annotationsColumn);
            }
            
            public void SetannotationsNull() {
                this[this.tablelicense.annotationsColumn] = System.Convert.DBNull;
            }
            
            public bool IsnmsgsNull() {
                return this.IsNull(this.tablelicense.nmsgsColumn);
            }
            
            public void SetnmsgsNull() {
                this[this.tablelicense.nmsgsColumn] = System.Convert.DBNull;
            }
            
            public bool Isserverbackup1Null() {
                return this.IsNull(this.tablelicense.serverbackup1Column);
            }
            
            public void Setserverbackup1Null() {
                this[this.tablelicense.serverbackup1Column] = System.Convert.DBNull;
            }
            
            public bool Ischeckbackup1Null() {
                return this.IsNull(this.tablelicense.checkbackup1Column);
            }
            
            public void Setcheckbackup1Null() {
                this[this.tablelicense.checkbackup1Column] = System.Convert.DBNull;
            }
            
            public bool Isserverbackup2Null() {
                return this.IsNull(this.tablelicense.serverbackup2Column);
            }
            
            public void Setserverbackup2Null() {
                this[this.tablelicense.serverbackup2Column] = System.Convert.DBNull;
            }
            
            public bool Ischeckbackup2Null() {
                return this.IsNull(this.tablelicense.checkbackup2Column);
            }
            
            public void Setcheckbackup2Null() {
                this[this.tablelicense.checkbackup2Column] = System.Convert.DBNull;
            }
            
            public bool IsluNull() {
                return this.IsNull(this.tablelicense.luColumn);
            }
            
            public void SetluNull() {
                this[this.tablelicense.luColumn] = System.Convert.DBNull;
            }
            
            public bool IsltNull() {
                return this.IsNull(this.tablelicense.ltColumn);
            }
            
            public void SetltNull() {
                this[this.tablelicense.ltColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class licenseRowChangeEvent : EventArgs {
            
            private licenseRow eventRow;
            
            private DataRowAction eventAction;
            
            public licenseRowChangeEvent(licenseRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public licenseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
