
/*
Easy
Copyright (C) 2022 Università degli Studi di Catania (www.unict.it)
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/


//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace registrypaymethod_modpaganagrafica {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("vistaForm")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class vistaForm : System.Data.DataSet {
        
        private registrypaymethodDataTable tableregistrypaymethod;
        
        private paymethodDataTable tablepaymethod;
        
        private bankDataTable tablebank;
        
        private registrypaymethodviewDataTable tableregistrypaymethodview;
        
        private expirationkindDataTable tableexpirationkind;
        
        private registryDataTable tableregistry;
        
        private cabDataTable tablecab;
        
        private registrymainviewDataTable tableregistrymainview;
        
        private deputyDataTable tabledeputy;
        
        private System.Data.DataRelation relationpaymethodregistrypaymethod;
        
        private System.Data.DataRelation relationbankregistrypaymethod;
        
        private System.Data.DataRelation relationcabregistrypaymethod;
        
        private System.Data.DataRelation relationexpirationkindregistrypaymethod;
        
        private System.Data.DataRelation relationregistryregistrypaymethod;
        
        private System.Data.DataRelation relationdeputyregistrypaymethod;
        
        private System.Data.DataRelation relationbankcab;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vistaForm() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected vistaForm(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["registrypaymethod"] != null)) {
                    base.Tables.Add(new registrypaymethodDataTable(ds.Tables["registrypaymethod"]));
                }
                if ((ds.Tables["paymethod"] != null)) {
                    base.Tables.Add(new paymethodDataTable(ds.Tables["paymethod"]));
                }
                if ((ds.Tables["bank"] != null)) {
                    base.Tables.Add(new bankDataTable(ds.Tables["bank"]));
                }
                if ((ds.Tables["registrypaymethodview"] != null)) {
                    base.Tables.Add(new registrypaymethodviewDataTable(ds.Tables["registrypaymethodview"]));
                }
                if ((ds.Tables["expirationkind"] != null)) {
                    base.Tables.Add(new expirationkindDataTable(ds.Tables["expirationkind"]));
                }
                if ((ds.Tables["registry"] != null)) {
                    base.Tables.Add(new registryDataTable(ds.Tables["registry"]));
                }
                if ((ds.Tables["cab"] != null)) {
                    base.Tables.Add(new cabDataTable(ds.Tables["cab"]));
                }
                if ((ds.Tables["registrymainview"] != null)) {
                    base.Tables.Add(new registrymainviewDataTable(ds.Tables["registrymainview"]));
                }
                if ((ds.Tables["deputy"] != null)) {
                    base.Tables.Add(new deputyDataTable(ds.Tables["deputy"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public registrypaymethodDataTable registrypaymethod {
            get {
                return this.tableregistrypaymethod;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public paymethodDataTable paymethod {
            get {
                return this.tablepaymethod;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public bankDataTable bank {
            get {
                return this.tablebank;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public registrypaymethodviewDataTable registrypaymethodview {
            get {
                return this.tableregistrypaymethodview;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public expirationkindDataTable expirationkind {
            get {
                return this.tableexpirationkind;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public registryDataTable registry {
            get {
                return this.tableregistry;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public cabDataTable cab {
            get {
                return this.tablecab;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public registrymainviewDataTable registrymainview {
            get {
                return this.tableregistrymainview;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public deputyDataTable deputy {
            get {
                return this.tabledeputy;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            vistaForm cln = ((vistaForm)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["registrypaymethod"] != null)) {
                    base.Tables.Add(new registrypaymethodDataTable(ds.Tables["registrypaymethod"]));
                }
                if ((ds.Tables["paymethod"] != null)) {
                    base.Tables.Add(new paymethodDataTable(ds.Tables["paymethod"]));
                }
                if ((ds.Tables["bank"] != null)) {
                    base.Tables.Add(new bankDataTable(ds.Tables["bank"]));
                }
                if ((ds.Tables["registrypaymethodview"] != null)) {
                    base.Tables.Add(new registrypaymethodviewDataTable(ds.Tables["registrypaymethodview"]));
                }
                if ((ds.Tables["expirationkind"] != null)) {
                    base.Tables.Add(new expirationkindDataTable(ds.Tables["expirationkind"]));
                }
                if ((ds.Tables["registry"] != null)) {
                    base.Tables.Add(new registryDataTable(ds.Tables["registry"]));
                }
                if ((ds.Tables["cab"] != null)) {
                    base.Tables.Add(new cabDataTable(ds.Tables["cab"]));
                }
                if ((ds.Tables["registrymainview"] != null)) {
                    base.Tables.Add(new registrymainviewDataTable(ds.Tables["registrymainview"]));
                }
                if ((ds.Tables["deputy"] != null)) {
                    base.Tables.Add(new deputyDataTable(ds.Tables["deputy"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableregistrypaymethod = ((registrypaymethodDataTable)(base.Tables["registrypaymethod"]));
            if ((initTable == true)) {
                if ((this.tableregistrypaymethod != null)) {
                    this.tableregistrypaymethod.InitVars();
                }
            }
            this.tablepaymethod = ((paymethodDataTable)(base.Tables["paymethod"]));
            if ((initTable == true)) {
                if ((this.tablepaymethod != null)) {
                    this.tablepaymethod.InitVars();
                }
            }
            this.tablebank = ((bankDataTable)(base.Tables["bank"]));
            if ((initTable == true)) {
                if ((this.tablebank != null)) {
                    this.tablebank.InitVars();
                }
            }
            this.tableregistrypaymethodview = ((registrypaymethodviewDataTable)(base.Tables["registrypaymethodview"]));
            if ((initTable == true)) {
                if ((this.tableregistrypaymethodview != null)) {
                    this.tableregistrypaymethodview.InitVars();
                }
            }
            this.tableexpirationkind = ((expirationkindDataTable)(base.Tables["expirationkind"]));
            if ((initTable == true)) {
                if ((this.tableexpirationkind != null)) {
                    this.tableexpirationkind.InitVars();
                }
            }
            this.tableregistry = ((registryDataTable)(base.Tables["registry"]));
            if ((initTable == true)) {
                if ((this.tableregistry != null)) {
                    this.tableregistry.InitVars();
                }
            }
            this.tablecab = ((cabDataTable)(base.Tables["cab"]));
            if ((initTable == true)) {
                if ((this.tablecab != null)) {
                    this.tablecab.InitVars();
                }
            }
            this.tableregistrymainview = ((registrymainviewDataTable)(base.Tables["registrymainview"]));
            if ((initTable == true)) {
                if ((this.tableregistrymainview != null)) {
                    this.tableregistrymainview.InitVars();
                }
            }
            this.tabledeputy = ((deputyDataTable)(base.Tables["deputy"]));
            if ((initTable == true)) {
                if ((this.tabledeputy != null)) {
                    this.tabledeputy.InitVars();
                }
            }
            this.relationpaymethodregistrypaymethod = this.Relations["paymethodregistrypaymethod"];
            this.relationbankregistrypaymethod = this.Relations["bankregistrypaymethod"];
            this.relationcabregistrypaymethod = this.Relations["cabregistrypaymethod"];
            this.relationexpirationkindregistrypaymethod = this.Relations["expirationkindregistrypaymethod"];
            this.relationregistryregistrypaymethod = this.Relations["registryregistrypaymethod"];
            this.relationdeputyregistrypaymethod = this.Relations["deputyregistrypaymethod"];
            this.relationbankcab = this.Relations["bankcab"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "vistaForm";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/vistamodpagamentocreddebianagrafica.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableregistrypaymethod = new registrypaymethodDataTable();
            base.Tables.Add(this.tableregistrypaymethod);
            this.tablepaymethod = new paymethodDataTable();
            base.Tables.Add(this.tablepaymethod);
            this.tablebank = new bankDataTable();
            base.Tables.Add(this.tablebank);
            this.tableregistrypaymethodview = new registrypaymethodviewDataTable();
            base.Tables.Add(this.tableregistrypaymethodview);
            this.tableexpirationkind = new expirationkindDataTable();
            base.Tables.Add(this.tableexpirationkind);
            this.tableregistry = new registryDataTable();
            base.Tables.Add(this.tableregistry);
            this.tablecab = new cabDataTable();
            base.Tables.Add(this.tablecab);
            this.tableregistrymainview = new registrymainviewDataTable();
            base.Tables.Add(this.tableregistrymainview);
            this.tabledeputy = new deputyDataTable();
            base.Tables.Add(this.tabledeputy);
            System.Data.ForeignKeyConstraint fkc;
            fkc = new System.Data.ForeignKeyConstraint("vistaFormKey2", new System.Data.DataColumn[] {
                        this.tablepaymethod.idpaymethodColumn}, new System.Data.DataColumn[] {
                        this.tableregistrypaymethod.idpaymethodColumn});
            this.tableregistrypaymethod.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new System.Data.ForeignKeyConstraint("vistaFormKey3", new System.Data.DataColumn[] {
                        this.tablebank.idbankColumn}, new System.Data.DataColumn[] {
                        this.tableregistrypaymethod.idbankColumn});
            this.tableregistrypaymethod.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new System.Data.ForeignKeyConstraint("vistaFormKey4", new System.Data.DataColumn[] {
                        this.tablecab.idbankColumn,
                        this.tablecab.idcabColumn}, new System.Data.DataColumn[] {
                        this.tableregistrypaymethod.idbankColumn,
                        this.tableregistrypaymethod.idcabColumn});
            this.tableregistrypaymethod.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new System.Data.ForeignKeyConstraint("vistaFormKey5", new System.Data.DataColumn[] {
                        this.tableexpirationkind.idexpirationkindColumn}, new System.Data.DataColumn[] {
                        this.tableregistrypaymethod.idexpirationkindColumn});
            this.tableregistrypaymethod.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new System.Data.ForeignKeyConstraint("vistaFormKey6", new System.Data.DataColumn[] {
                        this.tableregistry.idregColumn}, new System.Data.DataColumn[] {
                        this.tableregistrypaymethod.idregColumn});
            this.tableregistrypaymethod.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new System.Data.ForeignKeyConstraint("deputyregistrypaymethod", new System.Data.DataColumn[] {
                        this.tabledeputy.idregColumn}, new System.Data.DataColumn[] {
                        this.tableregistrypaymethod.iddeputyColumn});
            this.tableregistrypaymethod.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new System.Data.ForeignKeyConstraint("vistaFormKey13", new System.Data.DataColumn[] {
                        this.tablebank.idbankColumn}, new System.Data.DataColumn[] {
                        this.tablecab.idbankColumn});
            this.tablecab.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationpaymethodregistrypaymethod = new System.Data.DataRelation("paymethodregistrypaymethod", new System.Data.DataColumn[] {
                        this.tablepaymethod.idpaymethodColumn}, new System.Data.DataColumn[] {
                        this.tableregistrypaymethod.idpaymethodColumn}, false);
            this.Relations.Add(this.relationpaymethodregistrypaymethod);
            this.relationbankregistrypaymethod = new System.Data.DataRelation("bankregistrypaymethod", new System.Data.DataColumn[] {
                        this.tablebank.idbankColumn}, new System.Data.DataColumn[] {
                        this.tableregistrypaymethod.idbankColumn}, false);
            this.Relations.Add(this.relationbankregistrypaymethod);
            this.relationcabregistrypaymethod = new System.Data.DataRelation("cabregistrypaymethod", new System.Data.DataColumn[] {
                        this.tablecab.idbankColumn,
                        this.tablecab.idcabColumn}, new System.Data.DataColumn[] {
                        this.tableregistrypaymethod.idbankColumn,
                        this.tableregistrypaymethod.idcabColumn}, false);
            this.Relations.Add(this.relationcabregistrypaymethod);
            this.relationexpirationkindregistrypaymethod = new System.Data.DataRelation("expirationkindregistrypaymethod", new System.Data.DataColumn[] {
                        this.tableexpirationkind.idexpirationkindColumn}, new System.Data.DataColumn[] {
                        this.tableregistrypaymethod.idexpirationkindColumn}, false);
            this.Relations.Add(this.relationexpirationkindregistrypaymethod);
            this.relationregistryregistrypaymethod = new System.Data.DataRelation("registryregistrypaymethod", new System.Data.DataColumn[] {
                        this.tableregistry.idregColumn}, new System.Data.DataColumn[] {
                        this.tableregistrypaymethod.idregColumn}, false);
            this.Relations.Add(this.relationregistryregistrypaymethod);
            this.relationdeputyregistrypaymethod = new System.Data.DataRelation("deputyregistrypaymethod", new System.Data.DataColumn[] {
                        this.tabledeputy.idregColumn}, new System.Data.DataColumn[] {
                        this.tableregistrypaymethod.iddeputyColumn}, false);
            this.Relations.Add(this.relationdeputyregistrypaymethod);
            this.relationbankcab = new System.Data.DataRelation("bankcab", new System.Data.DataColumn[] {
                        this.tablebank.idbankColumn}, new System.Data.DataColumn[] {
                        this.tablecab.idbankColumn}, false);
            this.Relations.Add(this.relationbankcab);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeregistrypaymethod() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializepaymethod() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializebank() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeregistrypaymethodview() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeexpirationkind() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeregistry() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializecab() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeregistrymainview() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedeputy() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            vistaForm ds = new vistaForm();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void registrypaymethodRowChangeEventHandler(object sender, registrypaymethodRowChangeEvent e);
        
        public delegate void paymethodRowChangeEventHandler(object sender, paymethodRowChangeEvent e);
        
        public delegate void bankRowChangeEventHandler(object sender, bankRowChangeEvent e);
        
        public delegate void registrypaymethodviewRowChangeEventHandler(object sender, registrypaymethodviewRowChangeEvent e);
        
        public delegate void expirationkindRowChangeEventHandler(object sender, expirationkindRowChangeEvent e);
        
        public delegate void registryRowChangeEventHandler(object sender, registryRowChangeEvent e);
        
        public delegate void cabRowChangeEventHandler(object sender, cabRowChangeEvent e);
        
        public delegate void registrymainviewRowChangeEventHandler(object sender, registrymainviewRowChangeEvent e);
        
        public delegate void deputyRowChangeEventHandler(object sender, deputyRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class registrypaymethodDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnregmodcode;
            
            private System.Data.DataColumn columnidreg;
            
            private System.Data.DataColumn columnidpaymethod;
            
            private System.Data.DataColumn columncin;
            
            private System.Data.DataColumn columnidbank;
            
            private System.Data.DataColumn columnidcab;
            
            private System.Data.DataColumn columncc;
            
            private System.Data.DataColumn columnpaymentdescr;
            
            private System.Data.DataColumn columnpaymentexpiring;
            
            private System.Data.DataColumn columnidexpirationkind;
            
            private System.Data.DataColumn columnflagstandard;
            
            private System.Data.DataColumn columntxt;
            
            private System.Data.DataColumn columnrtf;
            
            private System.Data.DataColumn columncu;
            
            private System.Data.DataColumn columnct;
            
            private System.Data.DataColumn columnlu;
            
            private System.Data.DataColumn columnlt;
            
            private System.Data.DataColumn columnactive;
            
            private System.Data.DataColumn columniddeputy;
            
            private System.Data.DataColumn columnrefexternaldoc;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodDataTable() {
                this.TableName = "registrypaymethod";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal registrypaymethodDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected registrypaymethodDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn regmodcodeColumn {
                get {
                    return this.columnregmodcode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idregColumn {
                get {
                    return this.columnidreg;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idpaymethodColumn {
                get {
                    return this.columnidpaymethod;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cinColumn {
                get {
                    return this.columncin;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idbankColumn {
                get {
                    return this.columnidbank;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idcabColumn {
                get {
                    return this.columnidcab;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ccColumn {
                get {
                    return this.columncc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn paymentdescrColumn {
                get {
                    return this.columnpaymentdescr;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn paymentexpiringColumn {
                get {
                    return this.columnpaymentexpiring;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idexpirationkindColumn {
                get {
                    return this.columnidexpirationkind;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn flagstandardColumn {
                get {
                    return this.columnflagstandard;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn txtColumn {
                get {
                    return this.columntxt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rtfColumn {
                get {
                    return this.columnrtf;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn activeColumn {
                get {
                    return this.columnactive;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn iddeputyColumn {
                get {
                    return this.columniddeputy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn refexternaldocColumn {
                get {
                    return this.columnrefexternaldoc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodRow this[int index] {
                get {
                    return ((registrypaymethodRow)(this.Rows[index]));
                }
            }
            
            public event registrypaymethodRowChangeEventHandler registrypaymethodRowChanging;
            
            public event registrypaymethodRowChangeEventHandler registrypaymethodRowChanged;
            
            public event registrypaymethodRowChangeEventHandler registrypaymethodRowDeleting;
            
            public event registrypaymethodRowChangeEventHandler registrypaymethodRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddregistrypaymethodRow(registrypaymethodRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodRow AddregistrypaymethodRow(
                        string regmodcode, 
                        registryRow parentregistryRowByregistryregistrypaymethod, 
                        paymethodRow parentpaymethodRowBypaymethodregistrypaymethod, 
                        string cin, 
                        bankRow parentbankRowBybankregistrypaymethod, 
                        string idcab, 
                        string cc, 
                        string paymentdescr, 
                        short paymentexpiring, 
                        expirationkindRow parentexpirationkindRowByexpirationkindregistrypaymethod, 
                        string flagstandard, 
                        string txt, 
                        byte[] rtf, 
                        string cu, 
                        System.DateTime ct, 
                        string lu, 
                        System.DateTime lt, 
                        string active, 
                        deputyRow parentdeputyRowBydeputyregistrypaymethod, 
                        string refexternaldoc) {
                registrypaymethodRow rowregistrypaymethodRow = ((registrypaymethodRow)(this.NewRow()));
                rowregistrypaymethodRow.ItemArray = new object[] {
                        regmodcode,
                        parentregistryRowByregistryregistrypaymethod[0],
                        parentpaymethodRowBypaymethodregistrypaymethod[0],
                        cin,
                        parentbankRowBybankregistrypaymethod[0],
                        idcab,
                        cc,
                        paymentdescr,
                        paymentexpiring,
                        parentexpirationkindRowByexpirationkindregistrypaymethod[0],
                        flagstandard,
                        txt,
                        rtf,
                        cu,
                        ct,
                        lu,
                        lt,
                        active,
                        parentdeputyRowBydeputyregistrypaymethod[0],
                        refexternaldoc};
                this.Rows.Add(rowregistrypaymethodRow);
                return rowregistrypaymethodRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodRow FindByregmodcodeidreg(string regmodcode, int idreg) {
                return ((registrypaymethodRow)(this.Rows.Find(new object[] {
                            regmodcode,
                            idreg})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                registrypaymethodDataTable cln = ((registrypaymethodDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new registrypaymethodDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnregmodcode = base.Columns["regmodcode"];
                this.columnidreg = base.Columns["idreg"];
                this.columnidpaymethod = base.Columns["idpaymethod"];
                this.columncin = base.Columns["cin"];
                this.columnidbank = base.Columns["idbank"];
                this.columnidcab = base.Columns["idcab"];
                this.columncc = base.Columns["cc"];
                this.columnpaymentdescr = base.Columns["paymentdescr"];
                this.columnpaymentexpiring = base.Columns["paymentexpiring"];
                this.columnidexpirationkind = base.Columns["idexpirationkind"];
                this.columnflagstandard = base.Columns["flagstandard"];
                this.columntxt = base.Columns["txt"];
                this.columnrtf = base.Columns["rtf"];
                this.columncu = base.Columns["cu"];
                this.columnct = base.Columns["ct"];
                this.columnlu = base.Columns["lu"];
                this.columnlt = base.Columns["lt"];
                this.columnactive = base.Columns["active"];
                this.columniddeputy = base.Columns["iddeputy"];
                this.columnrefexternaldoc = base.Columns["refexternaldoc"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnregmodcode = new System.Data.DataColumn("regmodcode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnregmodcode);
                this.columnidreg = new System.Data.DataColumn("idreg", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidreg);
                this.columnidpaymethod = new System.Data.DataColumn("idpaymethod", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidpaymethod);
                this.columncin = new System.Data.DataColumn("cin", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncin);
                this.columnidbank = new System.Data.DataColumn("idbank", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidbank);
                this.columnidcab = new System.Data.DataColumn("idcab", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcab);
                this.columncc = new System.Data.DataColumn("cc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncc);
                this.columnpaymentdescr = new System.Data.DataColumn("paymentdescr", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaymentdescr);
                this.columnpaymentexpiring = new System.Data.DataColumn("paymentexpiring", typeof(short), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaymentexpiring);
                this.columnidexpirationkind = new System.Data.DataColumn("idexpirationkind", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidexpirationkind);
                this.columnflagstandard = new System.Data.DataColumn("flagstandard", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnflagstandard);
                this.columntxt = new System.Data.DataColumn("txt", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntxt);
                this.columnrtf = new System.Data.DataColumn("rtf", typeof(byte[]), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrtf);
                this.columncu = new System.Data.DataColumn("cu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnct = new System.Data.DataColumn("ct", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlu = new System.Data.DataColumn("lu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnlt = new System.Data.DataColumn("lt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.columnactive = new System.Data.DataColumn("active", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnactive);
                this.columniddeputy = new System.Data.DataColumn("iddeputy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columniddeputy);
                this.columnrefexternaldoc = new System.Data.DataColumn("refexternaldoc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefexternaldoc);
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey1", new System.Data.DataColumn[] {
                                this.columnregmodcode,
                                this.columnidreg}, true));
                this.columnregmodcode.AllowDBNull = false;
                this.columnidreg.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlt.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodRow NewregistrypaymethodRow() {
                return ((registrypaymethodRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new registrypaymethodRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(registrypaymethodRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.registrypaymethodRowChanged != null)) {
                    this.registrypaymethodRowChanged(this, new registrypaymethodRowChangeEvent(((registrypaymethodRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.registrypaymethodRowChanging != null)) {
                    this.registrypaymethodRowChanging(this, new registrypaymethodRowChangeEvent(((registrypaymethodRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.registrypaymethodRowDeleted != null)) {
                    this.registrypaymethodRowDeleted(this, new registrypaymethodRowChangeEvent(((registrypaymethodRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.registrypaymethodRowDeleting != null)) {
                    this.registrypaymethodRowDeleting(this, new registrypaymethodRowChangeEvent(((registrypaymethodRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveregistrypaymethodRow(registrypaymethodRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "registrypaymethodDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class paymethodDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnidpaymethod;
            
            private System.Data.DataColumn columndescription;
            
            private System.Data.DataColumn columnflagpaymentadvice;
            
            private System.Data.DataColumn columncu;
            
            private System.Data.DataColumn columnct;
            
            private System.Data.DataColumn columnlu;
            
            private System.Data.DataColumn columnlt;
            
            private System.Data.DataColumn columnmethodbankcode;
            
            private System.Data.DataColumn columnallowdeputy;
            
            private System.Data.DataColumn columnfooterpaymentadvice;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public paymethodDataTable() {
                this.TableName = "paymethod";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal paymethodDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected paymethodDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idpaymethodColumn {
                get {
                    return this.columnidpaymethod;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn flagpaymentadviceColumn {
                get {
                    return this.columnflagpaymentadvice;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn methodbankcodeColumn {
                get {
                    return this.columnmethodbankcode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn allowdeputyColumn {
                get {
                    return this.columnallowdeputy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn footerpaymentadviceColumn {
                get {
                    return this.columnfooterpaymentadvice;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public paymethodRow this[int index] {
                get {
                    return ((paymethodRow)(this.Rows[index]));
                }
            }
            
            public event paymethodRowChangeEventHandler paymethodRowChanging;
            
            public event paymethodRowChangeEventHandler paymethodRowChanged;
            
            public event paymethodRowChangeEventHandler paymethodRowDeleting;
            
            public event paymethodRowChangeEventHandler paymethodRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddpaymethodRow(paymethodRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public paymethodRow AddpaymethodRow(string idpaymethod, string description, string flagpaymentadvice, string cu, System.DateTime ct, string lu, System.DateTime lt, string methodbankcode, string allowdeputy, string footerpaymentadvice) {
                paymethodRow rowpaymethodRow = ((paymethodRow)(this.NewRow()));
                rowpaymethodRow.ItemArray = new object[] {
                        idpaymethod,
                        description,
                        flagpaymentadvice,
                        cu,
                        ct,
                        lu,
                        lt,
                        methodbankcode,
                        allowdeputy,
                        footerpaymentadvice};
                this.Rows.Add(rowpaymethodRow);
                return rowpaymethodRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public paymethodRow FindByidpaymethod(string idpaymethod) {
                return ((paymethodRow)(this.Rows.Find(new object[] {
                            idpaymethod})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                paymethodDataTable cln = ((paymethodDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new paymethodDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidpaymethod = base.Columns["idpaymethod"];
                this.columndescription = base.Columns["description"];
                this.columnflagpaymentadvice = base.Columns["flagpaymentadvice"];
                this.columncu = base.Columns["cu"];
                this.columnct = base.Columns["ct"];
                this.columnlu = base.Columns["lu"];
                this.columnlt = base.Columns["lt"];
                this.columnmethodbankcode = base.Columns["methodbankcode"];
                this.columnallowdeputy = base.Columns["allowdeputy"];
                this.columnfooterpaymentadvice = base.Columns["footerpaymentadvice"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidpaymethod = new System.Data.DataColumn("idpaymethod", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidpaymethod);
                this.columndescription = new System.Data.DataColumn("description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnflagpaymentadvice = new System.Data.DataColumn("flagpaymentadvice", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnflagpaymentadvice);
                this.columncu = new System.Data.DataColumn("cu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnct = new System.Data.DataColumn("ct", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlu = new System.Data.DataColumn("lu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnlt = new System.Data.DataColumn("lt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.columnmethodbankcode = new System.Data.DataColumn("methodbankcode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmethodbankcode);
                this.columnallowdeputy = new System.Data.DataColumn("allowdeputy", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnallowdeputy);
                this.columnfooterpaymentadvice = new System.Data.DataColumn("footerpaymentadvice", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfooterpaymentadvice);
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey7", new System.Data.DataColumn[] {
                                this.columnidpaymethod}, true));
                this.columnidpaymethod.AllowDBNull = false;
                this.columnidpaymethod.Unique = true;
                this.columndescription.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlt.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public paymethodRow NewpaymethodRow() {
                return ((paymethodRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new paymethodRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(paymethodRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.paymethodRowChanged != null)) {
                    this.paymethodRowChanged(this, new paymethodRowChangeEvent(((paymethodRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.paymethodRowChanging != null)) {
                    this.paymethodRowChanging(this, new paymethodRowChangeEvent(((paymethodRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.paymethodRowDeleted != null)) {
                    this.paymethodRowDeleted(this, new paymethodRowChangeEvent(((paymethodRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.paymethodRowDeleting != null)) {
                    this.paymethodRowDeleting(this, new paymethodRowChangeEvent(((paymethodRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovepaymethodRow(paymethodRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "paymethodDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class bankDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnidbank;
            
            private System.Data.DataColumn columndescription;
            
            private System.Data.DataColumn columncu;
            
            private System.Data.DataColumn columnct;
            
            private System.Data.DataColumn columnlu;
            
            private System.Data.DataColumn columnlt;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bankDataTable() {
                this.TableName = "bank";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal bankDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected bankDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idbankColumn {
                get {
                    return this.columnidbank;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bankRow this[int index] {
                get {
                    return ((bankRow)(this.Rows[index]));
                }
            }
            
            public event bankRowChangeEventHandler bankRowChanging;
            
            public event bankRowChangeEventHandler bankRowChanged;
            
            public event bankRowChangeEventHandler bankRowDeleting;
            
            public event bankRowChangeEventHandler bankRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddbankRow(bankRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bankRow AddbankRow(string idbank, string description, string cu, System.DateTime ct, string lu, System.DateTime lt) {
                bankRow rowbankRow = ((bankRow)(this.NewRow()));
                rowbankRow.ItemArray = new object[] {
                        idbank,
                        description,
                        cu,
                        ct,
                        lu,
                        lt};
                this.Rows.Add(rowbankRow);
                return rowbankRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bankRow FindByidbank(string idbank) {
                return ((bankRow)(this.Rows.Find(new object[] {
                            idbank})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                bankDataTable cln = ((bankDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new bankDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidbank = base.Columns["idbank"];
                this.columndescription = base.Columns["description"];
                this.columncu = base.Columns["cu"];
                this.columnct = base.Columns["ct"];
                this.columnlu = base.Columns["lu"];
                this.columnlt = base.Columns["lt"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidbank = new System.Data.DataColumn("idbank", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidbank);
                this.columndescription = new System.Data.DataColumn("description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columncu = new System.Data.DataColumn("cu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnct = new System.Data.DataColumn("ct", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlu = new System.Data.DataColumn("lu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnlt = new System.Data.DataColumn("lt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey8", new System.Data.DataColumn[] {
                                this.columnidbank}, true));
                this.columnidbank.AllowDBNull = false;
                this.columnidbank.Unique = true;
                this.columndescription.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlt.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bankRow NewbankRow() {
                return ((bankRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new bankRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(bankRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.bankRowChanged != null)) {
                    this.bankRowChanged(this, new bankRowChangeEvent(((bankRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.bankRowChanging != null)) {
                    this.bankRowChanging(this, new bankRowChangeEvent(((bankRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.bankRowDeleted != null)) {
                    this.bankRowDeleted(this, new bankRowChangeEvent(((bankRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.bankRowDeleting != null)) {
                    this.bankRowDeleting(this, new bankRowChangeEvent(((bankRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovebankRow(bankRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "bankDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class registrypaymethodviewDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnregmodcode;
            
            private System.Data.DataColumn columnidreg;
            
            private System.Data.DataColumn columnregistry;
            
            private System.Data.DataColumn columnidpaymethod;
            
            private System.Data.DataColumn columnpaymethod;
            
            private System.Data.DataColumn columncin;
            
            private System.Data.DataColumn columnidbank;
            
            private System.Data.DataColumn columnbanktitle;
            
            private System.Data.DataColumn columnidcab;
            
            private System.Data.DataColumn columncabtitle;
            
            private System.Data.DataColumn columncc;
            
            private System.Data.DataColumn columnpaymentdescr;
            
            private System.Data.DataColumn columnpaymentexpiring;
            
            private System.Data.DataColumn columnidexpirationkind;
            
            private System.Data.DataColumn columnflagstandard;
            
            private System.Data.DataColumn columnactive;
            
            private System.Data.DataColumn columncu;
            
            private System.Data.DataColumn columnct;
            
            private System.Data.DataColumn columnlu;
            
            private System.Data.DataColumn columnlt;
            
            private System.Data.DataColumn columniddeputy;
            
            private System.Data.DataColumn columndeputy;
            
            private System.Data.DataColumn columnallowdeputy;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodviewDataTable() {
                this.TableName = "registrypaymethodview";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal registrypaymethodviewDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected registrypaymethodviewDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn regmodcodeColumn {
                get {
                    return this.columnregmodcode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idregColumn {
                get {
                    return this.columnidreg;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn registryColumn {
                get {
                    return this.columnregistry;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idpaymethodColumn {
                get {
                    return this.columnidpaymethod;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn paymethodColumn {
                get {
                    return this.columnpaymethod;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cinColumn {
                get {
                    return this.columncin;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idbankColumn {
                get {
                    return this.columnidbank;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn banktitleColumn {
                get {
                    return this.columnbanktitle;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idcabColumn {
                get {
                    return this.columnidcab;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cabtitleColumn {
                get {
                    return this.columncabtitle;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ccColumn {
                get {
                    return this.columncc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn paymentdescrColumn {
                get {
                    return this.columnpaymentdescr;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn paymentexpiringColumn {
                get {
                    return this.columnpaymentexpiring;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idexpirationkindColumn {
                get {
                    return this.columnidexpirationkind;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn flagstandardColumn {
                get {
                    return this.columnflagstandard;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn activeColumn {
                get {
                    return this.columnactive;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn iddeputyColumn {
                get {
                    return this.columniddeputy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn deputyColumn {
                get {
                    return this.columndeputy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn allowdeputyColumn {
                get {
                    return this.columnallowdeputy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodviewRow this[int index] {
                get {
                    return ((registrypaymethodviewRow)(this.Rows[index]));
                }
            }
            
            public event registrypaymethodviewRowChangeEventHandler registrypaymethodviewRowChanging;
            
            public event registrypaymethodviewRowChangeEventHandler registrypaymethodviewRowChanged;
            
            public event registrypaymethodviewRowChangeEventHandler registrypaymethodviewRowDeleting;
            
            public event registrypaymethodviewRowChangeEventHandler registrypaymethodviewRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddregistrypaymethodviewRow(registrypaymethodviewRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodviewRow AddregistrypaymethodviewRow(
                        string regmodcode, 
                        int idreg, 
                        string registry, 
                        string idpaymethod, 
                        string paymethod, 
                        string cin, 
                        string idbank, 
                        string banktitle, 
                        string idcab, 
                        string cabtitle, 
                        string cc, 
                        string paymentdescr, 
                        short paymentexpiring, 
                        string idexpirationkind, 
                        string flagstandard, 
                        string active, 
                        string cu, 
                        System.DateTime ct, 
                        string lu, 
                        System.DateTime lt, 
                        int iddeputy, 
                        string deputy, 
                        string allowdeputy) {
                registrypaymethodviewRow rowregistrypaymethodviewRow = ((registrypaymethodviewRow)(this.NewRow()));
                rowregistrypaymethodviewRow.ItemArray = new object[] {
                        regmodcode,
                        idreg,
                        registry,
                        idpaymethod,
                        paymethod,
                        cin,
                        idbank,
                        banktitle,
                        idcab,
                        cabtitle,
                        cc,
                        paymentdescr,
                        paymentexpiring,
                        idexpirationkind,
                        flagstandard,
                        active,
                        cu,
                        ct,
                        lu,
                        lt,
                        iddeputy,
                        deputy,
                        allowdeputy};
                this.Rows.Add(rowregistrypaymethodviewRow);
                return rowregistrypaymethodviewRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodviewRow FindByregmodcodeidreg(string regmodcode, int idreg) {
                return ((registrypaymethodviewRow)(this.Rows.Find(new object[] {
                            regmodcode,
                            idreg})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                registrypaymethodviewDataTable cln = ((registrypaymethodviewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new registrypaymethodviewDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnregmodcode = base.Columns["regmodcode"];
                this.columnidreg = base.Columns["idreg"];
                this.columnregistry = base.Columns["registry"];
                this.columnidpaymethod = base.Columns["idpaymethod"];
                this.columnpaymethod = base.Columns["paymethod"];
                this.columncin = base.Columns["cin"];
                this.columnidbank = base.Columns["idbank"];
                this.columnbanktitle = base.Columns["banktitle"];
                this.columnidcab = base.Columns["idcab"];
                this.columncabtitle = base.Columns["cabtitle"];
                this.columncc = base.Columns["cc"];
                this.columnpaymentdescr = base.Columns["paymentdescr"];
                this.columnpaymentexpiring = base.Columns["paymentexpiring"];
                this.columnidexpirationkind = base.Columns["idexpirationkind"];
                this.columnflagstandard = base.Columns["flagstandard"];
                this.columnactive = base.Columns["active"];
                this.columncu = base.Columns["cu"];
                this.columnct = base.Columns["ct"];
                this.columnlu = base.Columns["lu"];
                this.columnlt = base.Columns["lt"];
                this.columniddeputy = base.Columns["iddeputy"];
                this.columndeputy = base.Columns["deputy"];
                this.columnallowdeputy = base.Columns["allowdeputy"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnregmodcode = new System.Data.DataColumn("regmodcode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnregmodcode);
                this.columnidreg = new System.Data.DataColumn("idreg", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidreg);
                this.columnregistry = new System.Data.DataColumn("registry", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistry);
                this.columnidpaymethod = new System.Data.DataColumn("idpaymethod", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidpaymethod);
                this.columnpaymethod = new System.Data.DataColumn("paymethod", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaymethod);
                this.columncin = new System.Data.DataColumn("cin", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncin);
                this.columnidbank = new System.Data.DataColumn("idbank", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidbank);
                this.columnbanktitle = new System.Data.DataColumn("banktitle", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbanktitle);
                this.columnidcab = new System.Data.DataColumn("idcab", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcab);
                this.columncabtitle = new System.Data.DataColumn("cabtitle", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncabtitle);
                this.columncc = new System.Data.DataColumn("cc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncc);
                this.columnpaymentdescr = new System.Data.DataColumn("paymentdescr", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaymentdescr);
                this.columnpaymentexpiring = new System.Data.DataColumn("paymentexpiring", typeof(short), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaymentexpiring);
                this.columnidexpirationkind = new System.Data.DataColumn("idexpirationkind", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidexpirationkind);
                this.columnflagstandard = new System.Data.DataColumn("flagstandard", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnflagstandard);
                this.columnactive = new System.Data.DataColumn("active", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnactive);
                this.columncu = new System.Data.DataColumn("cu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnct = new System.Data.DataColumn("ct", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlu = new System.Data.DataColumn("lu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnlt = new System.Data.DataColumn("lt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.columniddeputy = new System.Data.DataColumn("iddeputy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columniddeputy);
                this.columndeputy = new System.Data.DataColumn("deputy", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndeputy);
                this.columnallowdeputy = new System.Data.DataColumn("allowdeputy", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnallowdeputy);
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey9", new System.Data.DataColumn[] {
                                this.columnregmodcode,
                                this.columnidreg}, true));
                this.columnregmodcode.AllowDBNull = false;
                this.columnidreg.AllowDBNull = false;
                this.columnregistry.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlt.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodviewRow NewregistrypaymethodviewRow() {
                return ((registrypaymethodviewRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new registrypaymethodviewRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(registrypaymethodviewRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.registrypaymethodviewRowChanged != null)) {
                    this.registrypaymethodviewRowChanged(this, new registrypaymethodviewRowChangeEvent(((registrypaymethodviewRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.registrypaymethodviewRowChanging != null)) {
                    this.registrypaymethodviewRowChanging(this, new registrypaymethodviewRowChangeEvent(((registrypaymethodviewRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.registrypaymethodviewRowDeleted != null)) {
                    this.registrypaymethodviewRowDeleted(this, new registrypaymethodviewRowChangeEvent(((registrypaymethodviewRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.registrypaymethodviewRowDeleting != null)) {
                    this.registrypaymethodviewRowDeleting(this, new registrypaymethodviewRowChangeEvent(((registrypaymethodviewRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveregistrypaymethodviewRow(registrypaymethodviewRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "registrypaymethodviewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class expirationkindDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnidexpirationkind;
            
            private System.Data.DataColumn columndescription;
            
            private System.Data.DataColumn columnlt;
            
            private System.Data.DataColumn columnlu;
            
            private System.Data.DataColumn columnactive;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public expirationkindDataTable() {
                this.TableName = "expirationkind";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal expirationkindDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected expirationkindDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idexpirationkindColumn {
                get {
                    return this.columnidexpirationkind;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn activeColumn {
                get {
                    return this.columnactive;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public expirationkindRow this[int index] {
                get {
                    return ((expirationkindRow)(this.Rows[index]));
                }
            }
            
            public event expirationkindRowChangeEventHandler expirationkindRowChanging;
            
            public event expirationkindRowChangeEventHandler expirationkindRowChanged;
            
            public event expirationkindRowChangeEventHandler expirationkindRowDeleting;
            
            public event expirationkindRowChangeEventHandler expirationkindRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddexpirationkindRow(expirationkindRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public expirationkindRow AddexpirationkindRow(string idexpirationkind, string description, System.DateTime lt, string lu, string active) {
                expirationkindRow rowexpirationkindRow = ((expirationkindRow)(this.NewRow()));
                rowexpirationkindRow.ItemArray = new object[] {
                        idexpirationkind,
                        description,
                        lt,
                        lu,
                        active};
                this.Rows.Add(rowexpirationkindRow);
                return rowexpirationkindRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public expirationkindRow FindByidexpirationkind(string idexpirationkind) {
                return ((expirationkindRow)(this.Rows.Find(new object[] {
                            idexpirationkind})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                expirationkindDataTable cln = ((expirationkindDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new expirationkindDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidexpirationkind = base.Columns["idexpirationkind"];
                this.columndescription = base.Columns["description"];
                this.columnlt = base.Columns["lt"];
                this.columnlu = base.Columns["lu"];
                this.columnactive = base.Columns["active"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidexpirationkind = new System.Data.DataColumn("idexpirationkind", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidexpirationkind);
                this.columndescription = new System.Data.DataColumn("description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnlt = new System.Data.DataColumn("lt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.columnlu = new System.Data.DataColumn("lu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnactive = new System.Data.DataColumn("active", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnactive);
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey10", new System.Data.DataColumn[] {
                                this.columnidexpirationkind}, true));
                this.columnidexpirationkind.AllowDBNull = false;
                this.columnidexpirationkind.Unique = true;
                this.columndescription.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public expirationkindRow NewexpirationkindRow() {
                return ((expirationkindRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new expirationkindRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(expirationkindRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.expirationkindRowChanged != null)) {
                    this.expirationkindRowChanged(this, new expirationkindRowChangeEvent(((expirationkindRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.expirationkindRowChanging != null)) {
                    this.expirationkindRowChanging(this, new expirationkindRowChangeEvent(((expirationkindRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.expirationkindRowDeleted != null)) {
                    this.expirationkindRowDeleted(this, new expirationkindRowChangeEvent(((expirationkindRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.expirationkindRowDeleting != null)) {
                    this.expirationkindRowDeleting(this, new expirationkindRowChangeEvent(((expirationkindRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveexpirationkindRow(expirationkindRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "expirationkindDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class registryDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnidreg;
            
            private System.Data.DataColumn columntitle;
            
            private System.Data.DataColumn columncf;
            
            private System.Data.DataColumn columnidland;
            
            private System.Data.DataColumn columnp_iva;
            
            private System.Data.DataColumn columnresidence;
            
            private System.Data.DataColumn columnsortcode;
            
            private System.Data.DataColumn columnidcurrency;
            
            private System.Data.DataColumn columnidlanguage;
            
            private System.Data.DataColumn columnannotation;
            
            private System.Data.DataColumn columnhuman;
            
            private System.Data.DataColumn columnbirthdate;
            
            private System.Data.DataColumn columnbirthplace;
            
            private System.Data.DataColumn columnbirthprovince;
            
            private System.Data.DataColumn columnbirthnation;
            
            private System.Data.DataColumn columngender;
            
            private System.Data.DataColumn columnsurname;
            
            private System.Data.DataColumn columnforename;
            
            private System.Data.DataColumn columnforeigncf;
            
            private System.Data.DataColumn columnflagtax;
            
            private System.Data.DataColumn columnactive;
            
            private System.Data.DataColumn columntxt;
            
            private System.Data.DataColumn columnrtf;
            
            private System.Data.DataColumn columncu;
            
            private System.Data.DataColumn columnct;
            
            private System.Data.DataColumn columnlu;
            
            private System.Data.DataColumn columnlt;
            
            private System.Data.DataColumn columnbadgecode;
            
            private System.Data.DataColumn columnidcategory;
            
            private System.Data.DataColumn columnidcentralizedcategory;
            
            private System.Data.DataColumn columnidmaritalstatus;
            
            private System.Data.DataColumn columnidtitle;
            
            private System.Data.DataColumn columnidregistryclass;
            
            private System.Data.DataColumn columnmaritalsurname;
            
            private System.Data.DataColumn columnidcity;
            
            private System.Data.DataColumn columnextmatricula;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registryDataTable() {
                this.TableName = "registry";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal registryDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected registryDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idregColumn {
                get {
                    return this.columnidreg;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn titleColumn {
                get {
                    return this.columntitle;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cfColumn {
                get {
                    return this.columncf;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idlandColumn {
                get {
                    return this.columnidland;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn p_ivaColumn {
                get {
                    return this.columnp_iva;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn residenceColumn {
                get {
                    return this.columnresidence;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn sortcodeColumn {
                get {
                    return this.columnsortcode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idcurrencyColumn {
                get {
                    return this.columnidcurrency;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idlanguageColumn {
                get {
                    return this.columnidlanguage;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn annotationColumn {
                get {
                    return this.columnannotation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn humanColumn {
                get {
                    return this.columnhuman;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn birthdateColumn {
                get {
                    return this.columnbirthdate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn birthplaceColumn {
                get {
                    return this.columnbirthplace;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn birthprovinceColumn {
                get {
                    return this.columnbirthprovince;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn birthnationColumn {
                get {
                    return this.columnbirthnation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn genderColumn {
                get {
                    return this.columngender;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn surnameColumn {
                get {
                    return this.columnsurname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn forenameColumn {
                get {
                    return this.columnforename;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn foreigncfColumn {
                get {
                    return this.columnforeigncf;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn flagtaxColumn {
                get {
                    return this.columnflagtax;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn activeColumn {
                get {
                    return this.columnactive;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn txtColumn {
                get {
                    return this.columntxt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rtfColumn {
                get {
                    return this.columnrtf;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn badgecodeColumn {
                get {
                    return this.columnbadgecode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idcategoryColumn {
                get {
                    return this.columnidcategory;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idcentralizedcategoryColumn {
                get {
                    return this.columnidcentralizedcategory;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idmaritalstatusColumn {
                get {
                    return this.columnidmaritalstatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idtitleColumn {
                get {
                    return this.columnidtitle;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idregistryclassColumn {
                get {
                    return this.columnidregistryclass;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn maritalsurnameColumn {
                get {
                    return this.columnmaritalsurname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idcityColumn {
                get {
                    return this.columnidcity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn extmatriculaColumn {
                get {
                    return this.columnextmatricula;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registryRow this[int index] {
                get {
                    return ((registryRow)(this.Rows[index]));
                }
            }
            
            public event registryRowChangeEventHandler registryRowChanging;
            
            public event registryRowChangeEventHandler registryRowChanged;
            
            public event registryRowChangeEventHandler registryRowDeleting;
            
            public event registryRowChangeEventHandler registryRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddregistryRow(registryRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registryRow AddregistryRow(
                        int idreg, 
                        string title, 
                        string cf, 
                        string idland, 
                        string p_iva, 
                        string residence, 
                        string sortcode, 
                        string idcurrency, 
                        string idlanguage, 
                        string annotation, 
                        string human, 
                        System.DateTime birthdate, 
                        string birthplace, 
                        string birthprovince, 
                        string birthnation, 
                        string gender, 
                        string surname, 
                        string forename, 
                        string foreigncf, 
                        string flagtax, 
                        string active, 
                        string txt, 
                        byte[] rtf, 
                        string cu, 
                        System.DateTime ct, 
                        string lu, 
                        System.DateTime lt, 
                        string badgecode, 
                        string idcategory, 
                        string idcentralizedcategory, 
                        string idmaritalstatus, 
                        string idtitle, 
                        string idregistryclass, 
                        string maritalsurname, 
                        int idcity, 
                        string extmatricula) {
                registryRow rowregistryRow = ((registryRow)(this.NewRow()));
                rowregistryRow.ItemArray = new object[] {
                        idreg,
                        title,
                        cf,
                        idland,
                        p_iva,
                        residence,
                        sortcode,
                        idcurrency,
                        idlanguage,
                        annotation,
                        human,
                        birthdate,
                        birthplace,
                        birthprovince,
                        birthnation,
                        gender,
                        surname,
                        forename,
                        foreigncf,
                        flagtax,
                        active,
                        txt,
                        rtf,
                        cu,
                        ct,
                        lu,
                        lt,
                        badgecode,
                        idcategory,
                        idcentralizedcategory,
                        idmaritalstatus,
                        idtitle,
                        idregistryclass,
                        maritalsurname,
                        idcity,
                        extmatricula};
                this.Rows.Add(rowregistryRow);
                return rowregistryRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registryRow FindByidreg(int idreg) {
                return ((registryRow)(this.Rows.Find(new object[] {
                            idreg})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                registryDataTable cln = ((registryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new registryDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidreg = base.Columns["idreg"];
                this.columntitle = base.Columns["title"];
                this.columncf = base.Columns["cf"];
                this.columnidland = base.Columns["idland"];
                this.columnp_iva = base.Columns["p_iva"];
                this.columnresidence = base.Columns["residence"];
                this.columnsortcode = base.Columns["sortcode"];
                this.columnidcurrency = base.Columns["idcurrency"];
                this.columnidlanguage = base.Columns["idlanguage"];
                this.columnannotation = base.Columns["annotation"];
                this.columnhuman = base.Columns["human"];
                this.columnbirthdate = base.Columns["birthdate"];
                this.columnbirthplace = base.Columns["birthplace"];
                this.columnbirthprovince = base.Columns["birthprovince"];
                this.columnbirthnation = base.Columns["birthnation"];
                this.columngender = base.Columns["gender"];
                this.columnsurname = base.Columns["surname"];
                this.columnforename = base.Columns["forename"];
                this.columnforeigncf = base.Columns["foreigncf"];
                this.columnflagtax = base.Columns["flagtax"];
                this.columnactive = base.Columns["active"];
                this.columntxt = base.Columns["txt"];
                this.columnrtf = base.Columns["rtf"];
                this.columncu = base.Columns["cu"];
                this.columnct = base.Columns["ct"];
                this.columnlu = base.Columns["lu"];
                this.columnlt = base.Columns["lt"];
                this.columnbadgecode = base.Columns["badgecode"];
                this.columnidcategory = base.Columns["idcategory"];
                this.columnidcentralizedcategory = base.Columns["idcentralizedcategory"];
                this.columnidmaritalstatus = base.Columns["idmaritalstatus"];
                this.columnidtitle = base.Columns["idtitle"];
                this.columnidregistryclass = base.Columns["idregistryclass"];
                this.columnmaritalsurname = base.Columns["maritalsurname"];
                this.columnidcity = base.Columns["idcity"];
                this.columnextmatricula = base.Columns["extmatricula"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidreg = new System.Data.DataColumn("idreg", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidreg);
                this.columntitle = new System.Data.DataColumn("title", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntitle);
                this.columncf = new System.Data.DataColumn("cf", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncf);
                this.columnidland = new System.Data.DataColumn("idland", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidland);
                this.columnp_iva = new System.Data.DataColumn("p_iva", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnp_iva);
                this.columnresidence = new System.Data.DataColumn("residence", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnresidence);
                this.columnsortcode = new System.Data.DataColumn("sortcode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsortcode);
                this.columnidcurrency = new System.Data.DataColumn("idcurrency", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcurrency);
                this.columnidlanguage = new System.Data.DataColumn("idlanguage", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidlanguage);
                this.columnannotation = new System.Data.DataColumn("annotation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnannotation);
                this.columnhuman = new System.Data.DataColumn("human", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnhuman);
                this.columnbirthdate = new System.Data.DataColumn("birthdate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthdate);
                this.columnbirthplace = new System.Data.DataColumn("birthplace", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthplace);
                this.columnbirthprovince = new System.Data.DataColumn("birthprovince", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthprovince);
                this.columnbirthnation = new System.Data.DataColumn("birthnation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthnation);
                this.columngender = new System.Data.DataColumn("gender", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columngender);
                this.columnsurname = new System.Data.DataColumn("surname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsurname);
                this.columnforename = new System.Data.DataColumn("forename", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnforename);
                this.columnforeigncf = new System.Data.DataColumn("foreigncf", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnforeigncf);
                this.columnflagtax = new System.Data.DataColumn("flagtax", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnflagtax);
                this.columnactive = new System.Data.DataColumn("active", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnactive);
                this.columntxt = new System.Data.DataColumn("txt", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntxt);
                this.columnrtf = new System.Data.DataColumn("rtf", typeof(byte[]), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrtf);
                this.columncu = new System.Data.DataColumn("cu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnct = new System.Data.DataColumn("ct", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlu = new System.Data.DataColumn("lu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnlt = new System.Data.DataColumn("lt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.columnbadgecode = new System.Data.DataColumn("badgecode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbadgecode);
                this.columnidcategory = new System.Data.DataColumn("idcategory", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcategory);
                this.columnidcentralizedcategory = new System.Data.DataColumn("idcentralizedcategory", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcentralizedcategory);
                this.columnidmaritalstatus = new System.Data.DataColumn("idmaritalstatus", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidmaritalstatus);
                this.columnidtitle = new System.Data.DataColumn("idtitle", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidtitle);
                this.columnidregistryclass = new System.Data.DataColumn("idregistryclass", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidregistryclass);
                this.columnmaritalsurname = new System.Data.DataColumn("maritalsurname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaritalsurname);
                this.columnidcity = new System.Data.DataColumn("idcity", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcity);
                this.columnextmatricula = new System.Data.DataColumn("extmatricula", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnextmatricula);
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey11", new System.Data.DataColumn[] {
                                this.columnidreg}, true));
                this.columnidreg.AllowDBNull = false;
                this.columnidreg.Unique = true;
                this.columntitle.AllowDBNull = false;
                this.columnresidence.AllowDBNull = false;
                this.columnhuman.AllowDBNull = false;
                this.columnflagtax.AllowDBNull = false;
                this.columnactive.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlt.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registryRow NewregistryRow() {
                return ((registryRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new registryRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(registryRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.registryRowChanged != null)) {
                    this.registryRowChanged(this, new registryRowChangeEvent(((registryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.registryRowChanging != null)) {
                    this.registryRowChanging(this, new registryRowChangeEvent(((registryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.registryRowDeleted != null)) {
                    this.registryRowDeleted(this, new registryRowChangeEvent(((registryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.registryRowDeleting != null)) {
                    this.registryRowDeleting(this, new registryRowChangeEvent(((registryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveregistryRow(registryRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "registryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class cabDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnidbank;
            
            private System.Data.DataColumn columnidcab;
            
            private System.Data.DataColumn columndescription;
            
            private System.Data.DataColumn columnaddress;
            
            private System.Data.DataColumn columncap;
            
            private System.Data.DataColumn columncountry;
            
            private System.Data.DataColumn columncu;
            
            private System.Data.DataColumn columnct;
            
            private System.Data.DataColumn columnlu;
            
            private System.Data.DataColumn columnlt;
            
            private System.Data.DataColumn columnidcity;
            
            private System.Data.DataColumn columnlocation;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cabDataTable() {
                this.TableName = "cab";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal cabDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected cabDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idbankColumn {
                get {
                    return this.columnidbank;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idcabColumn {
                get {
                    return this.columnidcab;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn capColumn {
                get {
                    return this.columncap;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn countryColumn {
                get {
                    return this.columncountry;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idcityColumn {
                get {
                    return this.columnidcity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn locationColumn {
                get {
                    return this.columnlocation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cabRow this[int index] {
                get {
                    return ((cabRow)(this.Rows[index]));
                }
            }
            
            public event cabRowChangeEventHandler cabRowChanging;
            
            public event cabRowChangeEventHandler cabRowChanged;
            
            public event cabRowChangeEventHandler cabRowDeleting;
            
            public event cabRowChangeEventHandler cabRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddcabRow(cabRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cabRow AddcabRow(bankRow parentbankRowBybankcab, string idcab, string description, string address, string cap, string country, string cu, System.DateTime ct, string lu, System.DateTime lt, int idcity, string location) {
                cabRow rowcabRow = ((cabRow)(this.NewRow()));
                rowcabRow.ItemArray = new object[] {
                        parentbankRowBybankcab[0],
                        idcab,
                        description,
                        address,
                        cap,
                        country,
                        cu,
                        ct,
                        lu,
                        lt,
                        idcity,
                        location};
                this.Rows.Add(rowcabRow);
                return rowcabRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cabRow FindByidbankidcab(string idbank, string idcab) {
                return ((cabRow)(this.Rows.Find(new object[] {
                            idbank,
                            idcab})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                cabDataTable cln = ((cabDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new cabDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidbank = base.Columns["idbank"];
                this.columnidcab = base.Columns["idcab"];
                this.columndescription = base.Columns["description"];
                this.columnaddress = base.Columns["address"];
                this.columncap = base.Columns["cap"];
                this.columncountry = base.Columns["country"];
                this.columncu = base.Columns["cu"];
                this.columnct = base.Columns["ct"];
                this.columnlu = base.Columns["lu"];
                this.columnlt = base.Columns["lt"];
                this.columnidcity = base.Columns["idcity"];
                this.columnlocation = base.Columns["location"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidbank = new System.Data.DataColumn("idbank", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidbank);
                this.columnidcab = new System.Data.DataColumn("idcab", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcab);
                this.columndescription = new System.Data.DataColumn("description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnaddress = new System.Data.DataColumn("address", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columncap = new System.Data.DataColumn("cap", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncap);
                this.columncountry = new System.Data.DataColumn("country", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncountry);
                this.columncu = new System.Data.DataColumn("cu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnct = new System.Data.DataColumn("ct", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlu = new System.Data.DataColumn("lu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnlt = new System.Data.DataColumn("lt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.columnidcity = new System.Data.DataColumn("idcity", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcity);
                this.columnlocation = new System.Data.DataColumn("location", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocation);
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey12", new System.Data.DataColumn[] {
                                this.columnidbank,
                                this.columnidcab}, true));
                this.columnidbank.AllowDBNull = false;
                this.columnidcab.AllowDBNull = false;
                this.columndescription.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlt.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cabRow NewcabRow() {
                return ((cabRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new cabRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(cabRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.cabRowChanged != null)) {
                    this.cabRowChanged(this, new cabRowChangeEvent(((cabRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.cabRowChanging != null)) {
                    this.cabRowChanging(this, new cabRowChangeEvent(((cabRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.cabRowDeleted != null)) {
                    this.cabRowDeleted(this, new cabRowChangeEvent(((cabRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.cabRowDeleting != null)) {
                    this.cabRowDeleting(this, new cabRowChangeEvent(((cabRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovecabRow(cabRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "cabDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class registrymainviewDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnidreg;
            
            private System.Data.DataColumn columntitle;
            
            private System.Data.DataColumn columnsurname;
            
            private System.Data.DataColumn columnforename;
            
            private System.Data.DataColumn columncf;
            
            private System.Data.DataColumn columnp_iva;
            
            private System.Data.DataColumn columnresidence;
            
            private System.Data.DataColumn columnresidencekind;
            
            private System.Data.DataColumn columnannotation;
            
            private System.Data.DataColumn columnbirthdate;
            
            private System.Data.DataColumn columnidcity;
            
            private System.Data.DataColumn columncity;
            
            private System.Data.DataColumn columnidcurrency;
            
            private System.Data.DataColumn columncurrency;
            
            private System.Data.DataColumn columnidlanguage;
            
            private System.Data.DataColumn columnlanguage;
            
            private System.Data.DataColumn columngender;
            
            private System.Data.DataColumn columnforeigncf;
            
            private System.Data.DataColumn columnidtitle;
            
            private System.Data.DataColumn columnqualification;
            
            private System.Data.DataColumn columnidmaritalstatus;
            
            private System.Data.DataColumn columnmaritalstatus;
            
            private System.Data.DataColumn columnsortcode;
            
            private System.Data.DataColumn columnregistrykind;
            
            private System.Data.DataColumn columnhuman;
            
            private System.Data.DataColumn columnflagtax;
            
            private System.Data.DataColumn columnactive;
            
            private System.Data.DataColumn columnbadgecode;
            
            private System.Data.DataColumn columnmaritalsurname;
            
            private System.Data.DataColumn columnidcategory;
            
            private System.Data.DataColumn columnidemployment;
            
            private System.Data.DataColumn columnextmatricula;
            
            private System.Data.DataColumn columnidcentralizedcategory;
            
            private System.Data.DataColumn columnbirthprovince;
            
            private System.Data.DataColumn columnbirthnation;
            
            private System.Data.DataColumn columnbirthplace;
            
            private System.Data.DataColumn columnidland;
            
            private System.Data.DataColumn columncu;
            
            private System.Data.DataColumn columnct;
            
            private System.Data.DataColumn columnlu;
            
            private System.Data.DataColumn columnlt;
            
            private System.Data.DataColumn columnlocation;
            
            private System.Data.DataColumn columnidnation;
            
            private System.Data.DataColumn columnnation;
            
            private System.Data.DataColumn columnidregistryclass;
            
            private System.Data.DataColumn columnregistryclass;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrymainviewDataTable() {
                this.TableName = "registrymainview";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal registrymainviewDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected registrymainviewDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idregColumn {
                get {
                    return this.columnidreg;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn titleColumn {
                get {
                    return this.columntitle;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn surnameColumn {
                get {
                    return this.columnsurname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn forenameColumn {
                get {
                    return this.columnforename;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cfColumn {
                get {
                    return this.columncf;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn p_ivaColumn {
                get {
                    return this.columnp_iva;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn residenceColumn {
                get {
                    return this.columnresidence;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn residencekindColumn {
                get {
                    return this.columnresidencekind;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn annotationColumn {
                get {
                    return this.columnannotation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn birthdateColumn {
                get {
                    return this.columnbirthdate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idcityColumn {
                get {
                    return this.columnidcity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cityColumn {
                get {
                    return this.columncity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idcurrencyColumn {
                get {
                    return this.columnidcurrency;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn currencyColumn {
                get {
                    return this.columncurrency;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idlanguageColumn {
                get {
                    return this.columnidlanguage;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn languageColumn {
                get {
                    return this.columnlanguage;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn genderColumn {
                get {
                    return this.columngender;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn foreigncfColumn {
                get {
                    return this.columnforeigncf;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idtitleColumn {
                get {
                    return this.columnidtitle;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn qualificationColumn {
                get {
                    return this.columnqualification;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idmaritalstatusColumn {
                get {
                    return this.columnidmaritalstatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn maritalstatusColumn {
                get {
                    return this.columnmaritalstatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn sortcodeColumn {
                get {
                    return this.columnsortcode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn registrykindColumn {
                get {
                    return this.columnregistrykind;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn humanColumn {
                get {
                    return this.columnhuman;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn flagtaxColumn {
                get {
                    return this.columnflagtax;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn activeColumn {
                get {
                    return this.columnactive;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn badgecodeColumn {
                get {
                    return this.columnbadgecode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn maritalsurnameColumn {
                get {
                    return this.columnmaritalsurname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idcategoryColumn {
                get {
                    return this.columnidcategory;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idemploymentColumn {
                get {
                    return this.columnidemployment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn extmatriculaColumn {
                get {
                    return this.columnextmatricula;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idcentralizedcategoryColumn {
                get {
                    return this.columnidcentralizedcategory;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn birthprovinceColumn {
                get {
                    return this.columnbirthprovince;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn birthnationColumn {
                get {
                    return this.columnbirthnation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn birthplaceColumn {
                get {
                    return this.columnbirthplace;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idlandColumn {
                get {
                    return this.columnidland;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn locationColumn {
                get {
                    return this.columnlocation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idnationColumn {
                get {
                    return this.columnidnation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nationColumn {
                get {
                    return this.columnnation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idregistryclassColumn {
                get {
                    return this.columnidregistryclass;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn registryclassColumn {
                get {
                    return this.columnregistryclass;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrymainviewRow this[int index] {
                get {
                    return ((registrymainviewRow)(this.Rows[index]));
                }
            }
            
            public event registrymainviewRowChangeEventHandler registrymainviewRowChanging;
            
            public event registrymainviewRowChangeEventHandler registrymainviewRowChanged;
            
            public event registrymainviewRowChangeEventHandler registrymainviewRowDeleting;
            
            public event registrymainviewRowChangeEventHandler registrymainviewRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddregistrymainviewRow(registrymainviewRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrymainviewRow AddregistrymainviewRow(
                        int idreg, 
                        string title, 
                        string surname, 
                        string forename, 
                        string cf, 
                        string p_iva, 
                        string residence, 
                        string residencekind, 
                        string annotation, 
                        System.DateTime birthdate, 
                        int idcity, 
                        string city, 
                        string idcurrency, 
                        string currency, 
                        string idlanguage, 
                        string language, 
                        string gender, 
                        string foreigncf, 
                        string idtitle, 
                        string qualification, 
                        string idmaritalstatus, 
                        string maritalstatus, 
                        string sortcode, 
                        string registrykind, 
                        string human, 
                        string flagtax, 
                        string active, 
                        string badgecode, 
                        string maritalsurname, 
                        string idcategory, 
                        string idemployment, 
                        string extmatricula, 
                        string idcentralizedcategory, 
                        string birthprovince, 
                        string birthnation, 
                        string birthplace, 
                        string idland, 
                        string cu, 
                        System.DateTime ct, 
                        string lu, 
                        System.DateTime lt, 
                        string location, 
                        int idnation, 
                        string nation, 
                        string idregistryclass, 
                        string registryclass) {
                registrymainviewRow rowregistrymainviewRow = ((registrymainviewRow)(this.NewRow()));
                rowregistrymainviewRow.ItemArray = new object[] {
                        idreg,
                        title,
                        surname,
                        forename,
                        cf,
                        p_iva,
                        residence,
                        residencekind,
                        annotation,
                        birthdate,
                        idcity,
                        city,
                        idcurrency,
                        currency,
                        idlanguage,
                        language,
                        gender,
                        foreigncf,
                        idtitle,
                        qualification,
                        idmaritalstatus,
                        maritalstatus,
                        sortcode,
                        registrykind,
                        human,
                        flagtax,
                        active,
                        badgecode,
                        maritalsurname,
                        idcategory,
                        idemployment,
                        extmatricula,
                        idcentralizedcategory,
                        birthprovince,
                        birthnation,
                        birthplace,
                        idland,
                        cu,
                        ct,
                        lu,
                        lt,
                        location,
                        idnation,
                        nation,
                        idregistryclass,
                        registryclass};
                this.Rows.Add(rowregistrymainviewRow);
                return rowregistrymainviewRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrymainviewRow FindByidreg(int idreg) {
                return ((registrymainviewRow)(this.Rows.Find(new object[] {
                            idreg})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                registrymainviewDataTable cln = ((registrymainviewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new registrymainviewDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidreg = base.Columns["idreg"];
                this.columntitle = base.Columns["title"];
                this.columnsurname = base.Columns["surname"];
                this.columnforename = base.Columns["forename"];
                this.columncf = base.Columns["cf"];
                this.columnp_iva = base.Columns["p_iva"];
                this.columnresidence = base.Columns["residence"];
                this.columnresidencekind = base.Columns["residencekind"];
                this.columnannotation = base.Columns["annotation"];
                this.columnbirthdate = base.Columns["birthdate"];
                this.columnidcity = base.Columns["idcity"];
                this.columncity = base.Columns["city"];
                this.columnidcurrency = base.Columns["idcurrency"];
                this.columncurrency = base.Columns["currency"];
                this.columnidlanguage = base.Columns["idlanguage"];
                this.columnlanguage = base.Columns["language"];
                this.columngender = base.Columns["gender"];
                this.columnforeigncf = base.Columns["foreigncf"];
                this.columnidtitle = base.Columns["idtitle"];
                this.columnqualification = base.Columns["qualification"];
                this.columnidmaritalstatus = base.Columns["idmaritalstatus"];
                this.columnmaritalstatus = base.Columns["maritalstatus"];
                this.columnsortcode = base.Columns["sortcode"];
                this.columnregistrykind = base.Columns["registrykind"];
                this.columnhuman = base.Columns["human"];
                this.columnflagtax = base.Columns["flagtax"];
                this.columnactive = base.Columns["active"];
                this.columnbadgecode = base.Columns["badgecode"];
                this.columnmaritalsurname = base.Columns["maritalsurname"];
                this.columnidcategory = base.Columns["idcategory"];
                this.columnidemployment = base.Columns["idemployment"];
                this.columnextmatricula = base.Columns["extmatricula"];
                this.columnidcentralizedcategory = base.Columns["idcentralizedcategory"];
                this.columnbirthprovince = base.Columns["birthprovince"];
                this.columnbirthnation = base.Columns["birthnation"];
                this.columnbirthplace = base.Columns["birthplace"];
                this.columnidland = base.Columns["idland"];
                this.columncu = base.Columns["cu"];
                this.columnct = base.Columns["ct"];
                this.columnlu = base.Columns["lu"];
                this.columnlt = base.Columns["lt"];
                this.columnlocation = base.Columns["location"];
                this.columnidnation = base.Columns["idnation"];
                this.columnnation = base.Columns["nation"];
                this.columnidregistryclass = base.Columns["idregistryclass"];
                this.columnregistryclass = base.Columns["registryclass"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidreg = new System.Data.DataColumn("idreg", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidreg);
                this.columntitle = new System.Data.DataColumn("title", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntitle);
                this.columnsurname = new System.Data.DataColumn("surname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsurname);
                this.columnforename = new System.Data.DataColumn("forename", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnforename);
                this.columncf = new System.Data.DataColumn("cf", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncf);
                this.columnp_iva = new System.Data.DataColumn("p_iva", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnp_iva);
                this.columnresidence = new System.Data.DataColumn("residence", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnresidence);
                this.columnresidencekind = new System.Data.DataColumn("residencekind", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnresidencekind);
                this.columnannotation = new System.Data.DataColumn("annotation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnannotation);
                this.columnbirthdate = new System.Data.DataColumn("birthdate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthdate);
                this.columnidcity = new System.Data.DataColumn("idcity", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcity);
                this.columncity = new System.Data.DataColumn("city", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncity);
                this.columnidcurrency = new System.Data.DataColumn("idcurrency", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcurrency);
                this.columncurrency = new System.Data.DataColumn("currency", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncurrency);
                this.columnidlanguage = new System.Data.DataColumn("idlanguage", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidlanguage);
                this.columnlanguage = new System.Data.DataColumn("language", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlanguage);
                this.columngender = new System.Data.DataColumn("gender", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columngender);
                this.columnforeigncf = new System.Data.DataColumn("foreigncf", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnforeigncf);
                this.columnidtitle = new System.Data.DataColumn("idtitle", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidtitle);
                this.columnqualification = new System.Data.DataColumn("qualification", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnqualification);
                this.columnidmaritalstatus = new System.Data.DataColumn("idmaritalstatus", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidmaritalstatus);
                this.columnmaritalstatus = new System.Data.DataColumn("maritalstatus", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaritalstatus);
                this.columnsortcode = new System.Data.DataColumn("sortcode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsortcode);
                this.columnregistrykind = new System.Data.DataColumn("registrykind", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistrykind);
                this.columnhuman = new System.Data.DataColumn("human", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnhuman);
                this.columnflagtax = new System.Data.DataColumn("flagtax", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnflagtax);
                this.columnactive = new System.Data.DataColumn("active", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnactive);
                this.columnbadgecode = new System.Data.DataColumn("badgecode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbadgecode);
                this.columnmaritalsurname = new System.Data.DataColumn("maritalsurname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaritalsurname);
                this.columnidcategory = new System.Data.DataColumn("idcategory", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcategory);
                this.columnidemployment = new System.Data.DataColumn("idemployment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidemployment);
                this.columnextmatricula = new System.Data.DataColumn("extmatricula", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnextmatricula);
                this.columnidcentralizedcategory = new System.Data.DataColumn("idcentralizedcategory", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcentralizedcategory);
                this.columnbirthprovince = new System.Data.DataColumn("birthprovince", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthprovince);
                this.columnbirthnation = new System.Data.DataColumn("birthnation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthnation);
                this.columnbirthplace = new System.Data.DataColumn("birthplace", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthplace);
                this.columnidland = new System.Data.DataColumn("idland", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidland);
                this.columncu = new System.Data.DataColumn("cu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnct = new System.Data.DataColumn("ct", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlu = new System.Data.DataColumn("lu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnlt = new System.Data.DataColumn("lt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.columnlocation = new System.Data.DataColumn("location", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocation);
                this.columnidnation = new System.Data.DataColumn("idnation", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidnation);
                this.columnnation = new System.Data.DataColumn("nation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnation);
                this.columnidregistryclass = new System.Data.DataColumn("idregistryclass", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidregistryclass);
                this.columnregistryclass = new System.Data.DataColumn("registryclass", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistryclass);
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey21", new System.Data.DataColumn[] {
                                this.columnidreg}, true));
                this.columnidreg.AllowDBNull = false;
                this.columnidreg.Unique = true;
                this.columntitle.AllowDBNull = false;
                this.columnresidence.AllowDBNull = false;
                this.columnflagtax.AllowDBNull = false;
                this.columnactive.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlt.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrymainviewRow NewregistrymainviewRow() {
                return ((registrymainviewRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new registrymainviewRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(registrymainviewRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.registrymainviewRowChanged != null)) {
                    this.registrymainviewRowChanged(this, new registrymainviewRowChangeEvent(((registrymainviewRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.registrymainviewRowChanging != null)) {
                    this.registrymainviewRowChanging(this, new registrymainviewRowChangeEvent(((registrymainviewRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.registrymainviewRowDeleted != null)) {
                    this.registrymainviewRowDeleted(this, new registrymainviewRowChangeEvent(((registrymainviewRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.registrymainviewRowDeleting != null)) {
                    this.registrymainviewRowDeleting(this, new registrymainviewRowChangeEvent(((registrymainviewRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveregistrymainviewRow(registrymainviewRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "registrymainviewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class deputyDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnidreg;
            
            private System.Data.DataColumn columntitle;
            
            private System.Data.DataColumn columncf;
            
            private System.Data.DataColumn columnidland;
            
            private System.Data.DataColumn columnp_iva;
            
            private System.Data.DataColumn columnresidence;
            
            private System.Data.DataColumn columnsortcode;
            
            private System.Data.DataColumn columnidcurrency;
            
            private System.Data.DataColumn columnidlanguage;
            
            private System.Data.DataColumn columnannotation;
            
            private System.Data.DataColumn columnhuman;
            
            private System.Data.DataColumn columnbirthdate;
            
            private System.Data.DataColumn columnbirthplace;
            
            private System.Data.DataColumn columnbirthprovince;
            
            private System.Data.DataColumn columnbirthnation;
            
            private System.Data.DataColumn columngender;
            
            private System.Data.DataColumn columnsurname;
            
            private System.Data.DataColumn columnforename;
            
            private System.Data.DataColumn columnforeigncf;
            
            private System.Data.DataColumn columnflagtax;
            
            private System.Data.DataColumn columnactive;
            
            private System.Data.DataColumn columntxt;
            
            private System.Data.DataColumn columnrtf;
            
            private System.Data.DataColumn columncu;
            
            private System.Data.DataColumn columnct;
            
            private System.Data.DataColumn columnlu;
            
            private System.Data.DataColumn columnlt;
            
            private System.Data.DataColumn columnbadgecode;
            
            private System.Data.DataColumn columnidcategory;
            
            private System.Data.DataColumn columnidcentralizedcategory;
            
            private System.Data.DataColumn columnidmaritalstatus;
            
            private System.Data.DataColumn columnidtitle;
            
            private System.Data.DataColumn columnidregistryclass;
            
            private System.Data.DataColumn columnmaritalsurname;
            
            private System.Data.DataColumn columndelete_flagattivo;
            
            private System.Data.DataColumn columnidcity;
            
            private System.Data.DataColumn columnidnation;
            
            private System.Data.DataColumn columnlocation;
            
            private System.Data.DataColumn columnextmatricula;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deputyDataTable() {
                this.TableName = "deputy";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal deputyDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected deputyDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idregColumn {
                get {
                    return this.columnidreg;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn titleColumn {
                get {
                    return this.columntitle;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cfColumn {
                get {
                    return this.columncf;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idlandColumn {
                get {
                    return this.columnidland;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn p_ivaColumn {
                get {
                    return this.columnp_iva;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn residenceColumn {
                get {
                    return this.columnresidence;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn sortcodeColumn {
                get {
                    return this.columnsortcode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idcurrencyColumn {
                get {
                    return this.columnidcurrency;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idlanguageColumn {
                get {
                    return this.columnidlanguage;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn annotationColumn {
                get {
                    return this.columnannotation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn humanColumn {
                get {
                    return this.columnhuman;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn birthdateColumn {
                get {
                    return this.columnbirthdate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn birthplaceColumn {
                get {
                    return this.columnbirthplace;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn birthprovinceColumn {
                get {
                    return this.columnbirthprovince;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn birthnationColumn {
                get {
                    return this.columnbirthnation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn genderColumn {
                get {
                    return this.columngender;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn surnameColumn {
                get {
                    return this.columnsurname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn forenameColumn {
                get {
                    return this.columnforename;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn foreigncfColumn {
                get {
                    return this.columnforeigncf;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn flagtaxColumn {
                get {
                    return this.columnflagtax;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn activeColumn {
                get {
                    return this.columnactive;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn txtColumn {
                get {
                    return this.columntxt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rtfColumn {
                get {
                    return this.columnrtf;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn badgecodeColumn {
                get {
                    return this.columnbadgecode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idcategoryColumn {
                get {
                    return this.columnidcategory;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idcentralizedcategoryColumn {
                get {
                    return this.columnidcentralizedcategory;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idmaritalstatusColumn {
                get {
                    return this.columnidmaritalstatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idtitleColumn {
                get {
                    return this.columnidtitle;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idregistryclassColumn {
                get {
                    return this.columnidregistryclass;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn maritalsurnameColumn {
                get {
                    return this.columnmaritalsurname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn delete_flagattivoColumn {
                get {
                    return this.columndelete_flagattivo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idcityColumn {
                get {
                    return this.columnidcity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idnationColumn {
                get {
                    return this.columnidnation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn locationColumn {
                get {
                    return this.columnlocation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn extmatriculaColumn {
                get {
                    return this.columnextmatricula;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deputyRow this[int index] {
                get {
                    return ((deputyRow)(this.Rows[index]));
                }
            }
            
            public event deputyRowChangeEventHandler deputyRowChanging;
            
            public event deputyRowChangeEventHandler deputyRowChanged;
            
            public event deputyRowChangeEventHandler deputyRowDeleting;
            
            public event deputyRowChangeEventHandler deputyRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddeputyRow(deputyRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deputyRow AdddeputyRow(
                        int idreg, 
                        string title, 
                        string cf, 
                        string idland, 
                        string p_iva, 
                        string residence, 
                        string sortcode, 
                        string idcurrency, 
                        string idlanguage, 
                        string annotation, 
                        string human, 
                        System.DateTime birthdate, 
                        string birthplace, 
                        string birthprovince, 
                        string birthnation, 
                        string gender, 
                        string surname, 
                        string forename, 
                        string foreigncf, 
                        string flagtax, 
                        string active, 
                        string txt, 
                        byte[] rtf, 
                        string cu, 
                        System.DateTime ct, 
                        string lu, 
                        System.DateTime lt, 
                        string badgecode, 
                        string idcategory, 
                        string idcentralizedcategory, 
                        string idmaritalstatus, 
                        string idtitle, 
                        string idregistryclass, 
                        string maritalsurname, 
                        string delete_flagattivo, 
                        int idcity, 
                        int idnation, 
                        string location, 
                        string extmatricula) {
                deputyRow rowdeputyRow = ((deputyRow)(this.NewRow()));
                rowdeputyRow.ItemArray = new object[] {
                        idreg,
                        title,
                        cf,
                        idland,
                        p_iva,
                        residence,
                        sortcode,
                        idcurrency,
                        idlanguage,
                        annotation,
                        human,
                        birthdate,
                        birthplace,
                        birthprovince,
                        birthnation,
                        gender,
                        surname,
                        forename,
                        foreigncf,
                        flagtax,
                        active,
                        txt,
                        rtf,
                        cu,
                        ct,
                        lu,
                        lt,
                        badgecode,
                        idcategory,
                        idcentralizedcategory,
                        idmaritalstatus,
                        idtitle,
                        idregistryclass,
                        maritalsurname,
                        delete_flagattivo,
                        idcity,
                        idnation,
                        location,
                        extmatricula};
                this.Rows.Add(rowdeputyRow);
                return rowdeputyRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deputyRow FindByidreg(int idreg) {
                return ((deputyRow)(this.Rows.Find(new object[] {
                            idreg})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                deputyDataTable cln = ((deputyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new deputyDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidreg = base.Columns["idreg"];
                this.columntitle = base.Columns["title"];
                this.columncf = base.Columns["cf"];
                this.columnidland = base.Columns["idland"];
                this.columnp_iva = base.Columns["p_iva"];
                this.columnresidence = base.Columns["residence"];
                this.columnsortcode = base.Columns["sortcode"];
                this.columnidcurrency = base.Columns["idcurrency"];
                this.columnidlanguage = base.Columns["idlanguage"];
                this.columnannotation = base.Columns["annotation"];
                this.columnhuman = base.Columns["human"];
                this.columnbirthdate = base.Columns["birthdate"];
                this.columnbirthplace = base.Columns["birthplace"];
                this.columnbirthprovince = base.Columns["birthprovince"];
                this.columnbirthnation = base.Columns["birthnation"];
                this.columngender = base.Columns["gender"];
                this.columnsurname = base.Columns["surname"];
                this.columnforename = base.Columns["forename"];
                this.columnforeigncf = base.Columns["foreigncf"];
                this.columnflagtax = base.Columns["flagtax"];
                this.columnactive = base.Columns["active"];
                this.columntxt = base.Columns["txt"];
                this.columnrtf = base.Columns["rtf"];
                this.columncu = base.Columns["cu"];
                this.columnct = base.Columns["ct"];
                this.columnlu = base.Columns["lu"];
                this.columnlt = base.Columns["lt"];
                this.columnbadgecode = base.Columns["badgecode"];
                this.columnidcategory = base.Columns["idcategory"];
                this.columnidcentralizedcategory = base.Columns["idcentralizedcategory"];
                this.columnidmaritalstatus = base.Columns["idmaritalstatus"];
                this.columnidtitle = base.Columns["idtitle"];
                this.columnidregistryclass = base.Columns["idregistryclass"];
                this.columnmaritalsurname = base.Columns["maritalsurname"];
                this.columndelete_flagattivo = base.Columns["delete_flagattivo"];
                this.columnidcity = base.Columns["idcity"];
                this.columnidnation = base.Columns["idnation"];
                this.columnlocation = base.Columns["location"];
                this.columnextmatricula = base.Columns["extmatricula"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidreg = new System.Data.DataColumn("idreg", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidreg);
                this.columntitle = new System.Data.DataColumn("title", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntitle);
                this.columncf = new System.Data.DataColumn("cf", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncf);
                this.columnidland = new System.Data.DataColumn("idland", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidland);
                this.columnp_iva = new System.Data.DataColumn("p_iva", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnp_iva);
                this.columnresidence = new System.Data.DataColumn("residence", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnresidence);
                this.columnsortcode = new System.Data.DataColumn("sortcode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsortcode);
                this.columnidcurrency = new System.Data.DataColumn("idcurrency", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcurrency);
                this.columnidlanguage = new System.Data.DataColumn("idlanguage", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidlanguage);
                this.columnannotation = new System.Data.DataColumn("annotation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnannotation);
                this.columnhuman = new System.Data.DataColumn("human", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnhuman);
                this.columnbirthdate = new System.Data.DataColumn("birthdate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthdate);
                this.columnbirthplace = new System.Data.DataColumn("birthplace", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthplace);
                this.columnbirthprovince = new System.Data.DataColumn("birthprovince", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthprovince);
                this.columnbirthnation = new System.Data.DataColumn("birthnation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthnation);
                this.columngender = new System.Data.DataColumn("gender", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columngender);
                this.columnsurname = new System.Data.DataColumn("surname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsurname);
                this.columnforename = new System.Data.DataColumn("forename", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnforename);
                this.columnforeigncf = new System.Data.DataColumn("foreigncf", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnforeigncf);
                this.columnflagtax = new System.Data.DataColumn("flagtax", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnflagtax);
                this.columnactive = new System.Data.DataColumn("active", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnactive);
                this.columntxt = new System.Data.DataColumn("txt", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntxt);
                this.columnrtf = new System.Data.DataColumn("rtf", typeof(byte[]), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrtf);
                this.columncu = new System.Data.DataColumn("cu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnct = new System.Data.DataColumn("ct", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlu = new System.Data.DataColumn("lu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnlt = new System.Data.DataColumn("lt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.columnbadgecode = new System.Data.DataColumn("badgecode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbadgecode);
                this.columnidcategory = new System.Data.DataColumn("idcategory", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcategory);
                this.columnidcentralizedcategory = new System.Data.DataColumn("idcentralizedcategory", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcentralizedcategory);
                this.columnidmaritalstatus = new System.Data.DataColumn("idmaritalstatus", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidmaritalstatus);
                this.columnidtitle = new System.Data.DataColumn("idtitle", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidtitle);
                this.columnidregistryclass = new System.Data.DataColumn("idregistryclass", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidregistryclass);
                this.columnmaritalsurname = new System.Data.DataColumn("maritalsurname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaritalsurname);
                this.columndelete_flagattivo = new System.Data.DataColumn("delete_flagattivo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndelete_flagattivo);
                this.columnidcity = new System.Data.DataColumn("idcity", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcity);
                this.columnidnation = new System.Data.DataColumn("idnation", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidnation);
                this.columnlocation = new System.Data.DataColumn("location", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocation);
                this.columnextmatricula = new System.Data.DataColumn("extmatricula", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnextmatricula);
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey22", new System.Data.DataColumn[] {
                                this.columnidreg}, true));
                this.columnidreg.AllowDBNull = false;
                this.columnidreg.Unique = true;
                this.columntitle.AllowDBNull = false;
                this.columnresidence.AllowDBNull = false;
                this.columnhuman.AllowDBNull = false;
                this.columnflagtax.AllowDBNull = false;
                this.columnactive.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlt.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deputyRow NewdeputyRow() {
                return ((deputyRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new deputyRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(deputyRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.deputyRowChanged != null)) {
                    this.deputyRowChanged(this, new deputyRowChangeEvent(((deputyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.deputyRowChanging != null)) {
                    this.deputyRowChanging(this, new deputyRowChangeEvent(((deputyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.deputyRowDeleted != null)) {
                    this.deputyRowDeleted(this, new deputyRowChangeEvent(((deputyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.deputyRowDeleting != null)) {
                    this.deputyRowDeleting(this, new deputyRowChangeEvent(((deputyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedeputyRow(deputyRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "deputyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class registrypaymethodRow : System.Data.DataRow {
            
            private registrypaymethodDataTable tableregistrypaymethod;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal registrypaymethodRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableregistrypaymethod = ((registrypaymethodDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string regmodcode {
                get {
                    return ((string)(this[this.tableregistrypaymethod.regmodcodeColumn]));
                }
                set {
                    this[this.tableregistrypaymethod.regmodcodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idreg {
                get {
                    return ((int)(this[this.tableregistrypaymethod.idregColumn]));
                }
                set {
                    this[this.tableregistrypaymethod.idregColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idpaymethod {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethod.idpaymethodColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idpaymethod\' in table \'registrypaymethod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethod.idpaymethodColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cin {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethod.cinColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cin\' in table \'registrypaymethod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethod.cinColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idbank {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethod.idbankColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idbank\' in table \'registrypaymethod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethod.idbankColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idcab {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethod.idcabColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idcab\' in table \'registrypaymethod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethod.idcabColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cc {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethod.ccColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cc\' in table \'registrypaymethod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethod.ccColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string paymentdescr {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethod.paymentdescrColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'paymentdescr\' in table \'registrypaymethod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethod.paymentdescrColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short paymentexpiring {
                get {
                    try {
                        return ((short)(this[this.tableregistrypaymethod.paymentexpiringColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'paymentexpiring\' in table \'registrypaymethod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethod.paymentexpiringColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idexpirationkind {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethod.idexpirationkindColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idexpirationkind\' in table \'registrypaymethod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethod.idexpirationkindColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flagstandard {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethod.flagstandardColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'flagstandard\' in table \'registrypaymethod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethod.flagstandardColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string txt {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethod.txtColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'txt\' in table \'registrypaymethod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethod.txtColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] rtf {
                get {
                    try {
                        return ((byte[])(this[this.tableregistrypaymethod.rtfColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'rtf\' in table \'registrypaymethod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethod.rtfColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cu {
                get {
                    return ((string)(this[this.tableregistrypaymethod.cuColumn]));
                }
                set {
                    this[this.tableregistrypaymethod.cuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ct {
                get {
                    return ((System.DateTime)(this[this.tableregistrypaymethod.ctColumn]));
                }
                set {
                    this[this.tableregistrypaymethod.ctColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    return ((string)(this[this.tableregistrypaymethod.luColumn]));
                }
                set {
                    this[this.tableregistrypaymethod.luColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    return ((System.DateTime)(this[this.tableregistrypaymethod.ltColumn]));
                }
                set {
                    this[this.tableregistrypaymethod.ltColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string active {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethod.activeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'active\' in table \'registrypaymethod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethod.activeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int iddeputy {
                get {
                    try {
                        return ((int)(this[this.tableregistrypaymethod.iddeputyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'iddeputy\' in table \'registrypaymethod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethod.iddeputyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refexternaldoc {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethod.refexternaldocColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'refexternaldoc\' in table \'registrypaymethod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethod.refexternaldocColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public paymethodRow paymethodRow {
                get {
                    return ((paymethodRow)(this.GetParentRow(this.Table.ParentRelations["paymethodregistrypaymethod"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["paymethodregistrypaymethod"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bankRow bankRow {
                get {
                    return ((bankRow)(this.GetParentRow(this.Table.ParentRelations["bankregistrypaymethod"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["bankregistrypaymethod"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cabRow cabRowParent {
                get {
                    return ((cabRow)(this.GetParentRow(this.Table.ParentRelations["cabregistrypaymethod"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["cabregistrypaymethod"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public expirationkindRow expirationkindRow {
                get {
                    return ((expirationkindRow)(this.GetParentRow(this.Table.ParentRelations["expirationkindregistrypaymethod"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["expirationkindregistrypaymethod"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registryRow registryRow {
                get {
                    return ((registryRow)(this.GetParentRow(this.Table.ParentRelations["registryregistrypaymethod"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["registryregistrypaymethod"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deputyRow deputyRow {
                get {
                    return ((deputyRow)(this.GetParentRow(this.Table.ParentRelations["deputyregistrypaymethod"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["deputyregistrypaymethod"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidpaymethodNull() {
                return this.IsNull(this.tableregistrypaymethod.idpaymethodColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidpaymethodNull() {
                this[this.tableregistrypaymethod.idpaymethodColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscinNull() {
                return this.IsNull(this.tableregistrypaymethod.cinColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcinNull() {
                this[this.tableregistrypaymethod.cinColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidbankNull() {
                return this.IsNull(this.tableregistrypaymethod.idbankColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidbankNull() {
                this[this.tableregistrypaymethod.idbankColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidcabNull() {
                return this.IsNull(this.tableregistrypaymethod.idcabColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidcabNull() {
                this[this.tableregistrypaymethod.idcabColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsccNull() {
                return this.IsNull(this.tableregistrypaymethod.ccColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetccNull() {
                this[this.tableregistrypaymethod.ccColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspaymentdescrNull() {
                return this.IsNull(this.tableregistrypaymethod.paymentdescrColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpaymentdescrNull() {
                this[this.tableregistrypaymethod.paymentdescrColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspaymentexpiringNull() {
                return this.IsNull(this.tableregistrypaymethod.paymentexpiringColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpaymentexpiringNull() {
                this[this.tableregistrypaymethod.paymentexpiringColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidexpirationkindNull() {
                return this.IsNull(this.tableregistrypaymethod.idexpirationkindColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidexpirationkindNull() {
                this[this.tableregistrypaymethod.idexpirationkindColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagstandardNull() {
                return this.IsNull(this.tableregistrypaymethod.flagstandardColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagstandardNull() {
                this[this.tableregistrypaymethod.flagstandardColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstxtNull() {
                return this.IsNull(this.tableregistrypaymethod.txtColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettxtNull() {
                this[this.tableregistrypaymethod.txtColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrtfNull() {
                return this.IsNull(this.tableregistrypaymethod.rtfColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrtfNull() {
                this[this.tableregistrypaymethod.rtfColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsactiveNull() {
                return this.IsNull(this.tableregistrypaymethod.activeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetactiveNull() {
                this[this.tableregistrypaymethod.activeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsiddeputyNull() {
                return this.IsNull(this.tableregistrypaymethod.iddeputyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetiddeputyNull() {
                this[this.tableregistrypaymethod.iddeputyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefexternaldocNull() {
                return this.IsNull(this.tableregistrypaymethod.refexternaldocColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefexternaldocNull() {
                this[this.tableregistrypaymethod.refexternaldocColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class paymethodRow : System.Data.DataRow {
            
            private paymethodDataTable tablepaymethod;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal paymethodRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepaymethod = ((paymethodDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idpaymethod {
                get {
                    return ((string)(this[this.tablepaymethod.idpaymethodColumn]));
                }
                set {
                    this[this.tablepaymethod.idpaymethodColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    return ((string)(this[this.tablepaymethod.descriptionColumn]));
                }
                set {
                    this[this.tablepaymethod.descriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flagpaymentadvice {
                get {
                    try {
                        return ((string)(this[this.tablepaymethod.flagpaymentadviceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'flagpaymentadvice\' in table \'paymethod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepaymethod.flagpaymentadviceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cu {
                get {
                    return ((string)(this[this.tablepaymethod.cuColumn]));
                }
                set {
                    this[this.tablepaymethod.cuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ct {
                get {
                    return ((System.DateTime)(this[this.tablepaymethod.ctColumn]));
                }
                set {
                    this[this.tablepaymethod.ctColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    return ((string)(this[this.tablepaymethod.luColumn]));
                }
                set {
                    this[this.tablepaymethod.luColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    return ((System.DateTime)(this[this.tablepaymethod.ltColumn]));
                }
                set {
                    this[this.tablepaymethod.ltColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string methodbankcode {
                get {
                    try {
                        return ((string)(this[this.tablepaymethod.methodbankcodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'methodbankcode\' in table \'paymethod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepaymethod.methodbankcodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string allowdeputy {
                get {
                    try {
                        return ((string)(this[this.tablepaymethod.allowdeputyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'allowdeputy\' in table \'paymethod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepaymethod.allowdeputyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string footerpaymentadvice {
                get {
                    try {
                        return ((string)(this[this.tablepaymethod.footerpaymentadviceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'footerpaymentadvice\' in table \'paymethod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepaymethod.footerpaymentadviceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagpaymentadviceNull() {
                return this.IsNull(this.tablepaymethod.flagpaymentadviceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagpaymentadviceNull() {
                this[this.tablepaymethod.flagpaymentadviceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmethodbankcodeNull() {
                return this.IsNull(this.tablepaymethod.methodbankcodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmethodbankcodeNull() {
                this[this.tablepaymethod.methodbankcodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsallowdeputyNull() {
                return this.IsNull(this.tablepaymethod.allowdeputyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetallowdeputyNull() {
                this[this.tablepaymethod.allowdeputyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfooterpaymentadviceNull() {
                return this.IsNull(this.tablepaymethod.footerpaymentadviceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfooterpaymentadviceNull() {
                this[this.tablepaymethod.footerpaymentadviceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodRow[] GetregistrypaymethodRows() {
                return ((registrypaymethodRow[])(base.GetChildRows(this.Table.ChildRelations["paymethodregistrypaymethod"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class bankRow : System.Data.DataRow {
            
            private bankDataTable tablebank;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal bankRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebank = ((bankDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idbank {
                get {
                    return ((string)(this[this.tablebank.idbankColumn]));
                }
                set {
                    this[this.tablebank.idbankColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    return ((string)(this[this.tablebank.descriptionColumn]));
                }
                set {
                    this[this.tablebank.descriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cu {
                get {
                    return ((string)(this[this.tablebank.cuColumn]));
                }
                set {
                    this[this.tablebank.cuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ct {
                get {
                    return ((System.DateTime)(this[this.tablebank.ctColumn]));
                }
                set {
                    this[this.tablebank.ctColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    return ((string)(this[this.tablebank.luColumn]));
                }
                set {
                    this[this.tablebank.luColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    return ((System.DateTime)(this[this.tablebank.ltColumn]));
                }
                set {
                    this[this.tablebank.ltColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cabRow[] GetcabRows() {
                return ((cabRow[])(base.GetChildRows(this.Table.ChildRelations["bankcab"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodRow[] GetregistrypaymethodRows() {
                return ((registrypaymethodRow[])(base.GetChildRows(this.Table.ChildRelations["bankregistrypaymethod"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class registrypaymethodviewRow : System.Data.DataRow {
            
            private registrypaymethodviewDataTable tableregistrypaymethodview;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal registrypaymethodviewRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableregistrypaymethodview = ((registrypaymethodviewDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string regmodcode {
                get {
                    return ((string)(this[this.tableregistrypaymethodview.regmodcodeColumn]));
                }
                set {
                    this[this.tableregistrypaymethodview.regmodcodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idreg {
                get {
                    return ((int)(this[this.tableregistrypaymethodview.idregColumn]));
                }
                set {
                    this[this.tableregistrypaymethodview.idregColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string registry {
                get {
                    return ((string)(this[this.tableregistrypaymethodview.registryColumn]));
                }
                set {
                    this[this.tableregistrypaymethodview.registryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idpaymethod {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethodview.idpaymethodColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idpaymethod\' in table \'registrypaymethodview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethodview.idpaymethodColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string paymethod {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethodview.paymethodColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'paymethod\' in table \'registrypaymethodview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethodview.paymethodColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cin {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethodview.cinColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cin\' in table \'registrypaymethodview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethodview.cinColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idbank {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethodview.idbankColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idbank\' in table \'registrypaymethodview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethodview.idbankColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string banktitle {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethodview.banktitleColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'banktitle\' in table \'registrypaymethodview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethodview.banktitleColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idcab {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethodview.idcabColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idcab\' in table \'registrypaymethodview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethodview.idcabColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cabtitle {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethodview.cabtitleColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cabtitle\' in table \'registrypaymethodview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethodview.cabtitleColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cc {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethodview.ccColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cc\' in table \'registrypaymethodview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethodview.ccColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string paymentdescr {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethodview.paymentdescrColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'paymentdescr\' in table \'registrypaymethodview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethodview.paymentdescrColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short paymentexpiring {
                get {
                    try {
                        return ((short)(this[this.tableregistrypaymethodview.paymentexpiringColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'paymentexpiring\' in table \'registrypaymethodview\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethodview.paymentexpiringColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idexpirationkind {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethodview.idexpirationkindColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idexpirationkind\' in table \'registrypaymethodview\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethodview.idexpirationkindColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flagstandard {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethodview.flagstandardColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'flagstandard\' in table \'registrypaymethodview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethodview.flagstandardColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string active {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethodview.activeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'active\' in table \'registrypaymethodview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethodview.activeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cu {
                get {
                    return ((string)(this[this.tableregistrypaymethodview.cuColumn]));
                }
                set {
                    this[this.tableregistrypaymethodview.cuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ct {
                get {
                    return ((System.DateTime)(this[this.tableregistrypaymethodview.ctColumn]));
                }
                set {
                    this[this.tableregistrypaymethodview.ctColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    return ((string)(this[this.tableregistrypaymethodview.luColumn]));
                }
                set {
                    this[this.tableregistrypaymethodview.luColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    return ((System.DateTime)(this[this.tableregistrypaymethodview.ltColumn]));
                }
                set {
                    this[this.tableregistrypaymethodview.ltColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int iddeputy {
                get {
                    try {
                        return ((int)(this[this.tableregistrypaymethodview.iddeputyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'iddeputy\' in table \'registrypaymethodview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethodview.iddeputyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string deputy {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethodview.deputyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'deputy\' in table \'registrypaymethodview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethodview.deputyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string allowdeputy {
                get {
                    try {
                        return ((string)(this[this.tableregistrypaymethodview.allowdeputyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'allowdeputy\' in table \'registrypaymethodview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrypaymethodview.allowdeputyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidpaymethodNull() {
                return this.IsNull(this.tableregistrypaymethodview.idpaymethodColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidpaymethodNull() {
                this[this.tableregistrypaymethodview.idpaymethodColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspaymethodNull() {
                return this.IsNull(this.tableregistrypaymethodview.paymethodColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpaymethodNull() {
                this[this.tableregistrypaymethodview.paymethodColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscinNull() {
                return this.IsNull(this.tableregistrypaymethodview.cinColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcinNull() {
                this[this.tableregistrypaymethodview.cinColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidbankNull() {
                return this.IsNull(this.tableregistrypaymethodview.idbankColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidbankNull() {
                this[this.tableregistrypaymethodview.idbankColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbanktitleNull() {
                return this.IsNull(this.tableregistrypaymethodview.banktitleColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbanktitleNull() {
                this[this.tableregistrypaymethodview.banktitleColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidcabNull() {
                return this.IsNull(this.tableregistrypaymethodview.idcabColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidcabNull() {
                this[this.tableregistrypaymethodview.idcabColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscabtitleNull() {
                return this.IsNull(this.tableregistrypaymethodview.cabtitleColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcabtitleNull() {
                this[this.tableregistrypaymethodview.cabtitleColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsccNull() {
                return this.IsNull(this.tableregistrypaymethodview.ccColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetccNull() {
                this[this.tableregistrypaymethodview.ccColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspaymentdescrNull() {
                return this.IsNull(this.tableregistrypaymethodview.paymentdescrColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpaymentdescrNull() {
                this[this.tableregistrypaymethodview.paymentdescrColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspaymentexpiringNull() {
                return this.IsNull(this.tableregistrypaymethodview.paymentexpiringColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpaymentexpiringNull() {
                this[this.tableregistrypaymethodview.paymentexpiringColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidexpirationkindNull() {
                return this.IsNull(this.tableregistrypaymethodview.idexpirationkindColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidexpirationkindNull() {
                this[this.tableregistrypaymethodview.idexpirationkindColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsflagstandardNull() {
                return this.IsNull(this.tableregistrypaymethodview.flagstandardColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetflagstandardNull() {
                this[this.tableregistrypaymethodview.flagstandardColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsactiveNull() {
                return this.IsNull(this.tableregistrypaymethodview.activeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetactiveNull() {
                this[this.tableregistrypaymethodview.activeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsiddeputyNull() {
                return this.IsNull(this.tableregistrypaymethodview.iddeputyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetiddeputyNull() {
                this[this.tableregistrypaymethodview.iddeputyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdeputyNull() {
                return this.IsNull(this.tableregistrypaymethodview.deputyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdeputyNull() {
                this[this.tableregistrypaymethodview.deputyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsallowdeputyNull() {
                return this.IsNull(this.tableregistrypaymethodview.allowdeputyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetallowdeputyNull() {
                this[this.tableregistrypaymethodview.allowdeputyColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class expirationkindRow : System.Data.DataRow {
            
            private expirationkindDataTable tableexpirationkind;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal expirationkindRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableexpirationkind = ((expirationkindDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idexpirationkind {
                get {
                    return ((string)(this[this.tableexpirationkind.idexpirationkindColumn]));
                }
                set {
                    this[this.tableexpirationkind.idexpirationkindColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    return ((string)(this[this.tableexpirationkind.descriptionColumn]));
                }
                set {
                    this[this.tableexpirationkind.descriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableexpirationkind.ltColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'lt\' in table \'expirationkind\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpirationkind.ltColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    try {
                        return ((string)(this[this.tableexpirationkind.luColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'lu\' in table \'expirationkind\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpirationkind.luColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string active {
                get {
                    try {
                        return ((string)(this[this.tableexpirationkind.activeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'active\' in table \'expirationkind\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexpirationkind.activeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsltNull() {
                return this.IsNull(this.tableexpirationkind.ltColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetltNull() {
                this[this.tableexpirationkind.ltColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsluNull() {
                return this.IsNull(this.tableexpirationkind.luColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetluNull() {
                this[this.tableexpirationkind.luColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsactiveNull() {
                return this.IsNull(this.tableexpirationkind.activeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetactiveNull() {
                this[this.tableexpirationkind.activeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodRow[] GetregistrypaymethodRows() {
                return ((registrypaymethodRow[])(base.GetChildRows(this.Table.ChildRelations["expirationkindregistrypaymethod"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class registryRow : System.Data.DataRow {
            
            private registryDataTable tableregistry;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal registryRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableregistry = ((registryDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idreg {
                get {
                    return ((int)(this[this.tableregistry.idregColumn]));
                }
                set {
                    this[this.tableregistry.idregColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string title {
                get {
                    return ((string)(this[this.tableregistry.titleColumn]));
                }
                set {
                    this[this.tableregistry.titleColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cf {
                get {
                    try {
                        return ((string)(this[this.tableregistry.cfColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cf\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.cfColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idland {
                get {
                    try {
                        return ((string)(this[this.tableregistry.idlandColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idland\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.idlandColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string p_iva {
                get {
                    try {
                        return ((string)(this[this.tableregistry.p_ivaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'p_iva\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.p_ivaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string residence {
                get {
                    return ((string)(this[this.tableregistry.residenceColumn]));
                }
                set {
                    this[this.tableregistry.residenceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sortcode {
                get {
                    try {
                        return ((string)(this[this.tableregistry.sortcodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'sortcode\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.sortcodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idcurrency {
                get {
                    try {
                        return ((string)(this[this.tableregistry.idcurrencyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idcurrency\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.idcurrencyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idlanguage {
                get {
                    try {
                        return ((string)(this[this.tableregistry.idlanguageColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idlanguage\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.idlanguageColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string annotation {
                get {
                    try {
                        return ((string)(this[this.tableregistry.annotationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'annotation\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.annotationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string human {
                get {
                    return ((string)(this[this.tableregistry.humanColumn]));
                }
                set {
                    this[this.tableregistry.humanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime birthdate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableregistry.birthdateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'birthdate\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.birthdateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string birthplace {
                get {
                    try {
                        return ((string)(this[this.tableregistry.birthplaceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'birthplace\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.birthplaceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string birthprovince {
                get {
                    try {
                        return ((string)(this[this.tableregistry.birthprovinceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'birthprovince\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.birthprovinceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string birthnation {
                get {
                    try {
                        return ((string)(this[this.tableregistry.birthnationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'birthnation\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.birthnationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gender {
                get {
                    try {
                        return ((string)(this[this.tableregistry.genderColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'gender\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.genderColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string surname {
                get {
                    try {
                        return ((string)(this[this.tableregistry.surnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'surname\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.surnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string forename {
                get {
                    try {
                        return ((string)(this[this.tableregistry.forenameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'forename\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.forenameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string foreigncf {
                get {
                    try {
                        return ((string)(this[this.tableregistry.foreigncfColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'foreigncf\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.foreigncfColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flagtax {
                get {
                    return ((string)(this[this.tableregistry.flagtaxColumn]));
                }
                set {
                    this[this.tableregistry.flagtaxColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string active {
                get {
                    return ((string)(this[this.tableregistry.activeColumn]));
                }
                set {
                    this[this.tableregistry.activeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string txt {
                get {
                    try {
                        return ((string)(this[this.tableregistry.txtColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'txt\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.txtColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] rtf {
                get {
                    try {
                        return ((byte[])(this[this.tableregistry.rtfColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'rtf\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.rtfColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cu {
                get {
                    return ((string)(this[this.tableregistry.cuColumn]));
                }
                set {
                    this[this.tableregistry.cuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ct {
                get {
                    return ((System.DateTime)(this[this.tableregistry.ctColumn]));
                }
                set {
                    this[this.tableregistry.ctColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    return ((string)(this[this.tableregistry.luColumn]));
                }
                set {
                    this[this.tableregistry.luColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    return ((System.DateTime)(this[this.tableregistry.ltColumn]));
                }
                set {
                    this[this.tableregistry.ltColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string badgecode {
                get {
                    try {
                        return ((string)(this[this.tableregistry.badgecodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'badgecode\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.badgecodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idcategory {
                get {
                    try {
                        return ((string)(this[this.tableregistry.idcategoryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idcategory\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.idcategoryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idcentralizedcategory {
                get {
                    try {
                        return ((string)(this[this.tableregistry.idcentralizedcategoryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idcentralizedcategory\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.idcentralizedcategoryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idmaritalstatus {
                get {
                    try {
                        return ((string)(this[this.tableregistry.idmaritalstatusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idmaritalstatus\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.idmaritalstatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idtitle {
                get {
                    try {
                        return ((string)(this[this.tableregistry.idtitleColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idtitle\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.idtitleColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idregistryclass {
                get {
                    try {
                        return ((string)(this[this.tableregistry.idregistryclassColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idregistryclass\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.idregistryclassColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string maritalsurname {
                get {
                    try {
                        return ((string)(this[this.tableregistry.maritalsurnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'maritalsurname\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.maritalsurnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idcity {
                get {
                    try {
                        return ((int)(this[this.tableregistry.idcityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idcity\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.idcityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string extmatricula {
                get {
                    try {
                        return ((string)(this[this.tableregistry.extmatriculaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'extmatricula\' in table \'registry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistry.extmatriculaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscfNull() {
                return this.IsNull(this.tableregistry.cfColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcfNull() {
                this[this.tableregistry.cfColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidlandNull() {
                return this.IsNull(this.tableregistry.idlandColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidlandNull() {
                this[this.tableregistry.idlandColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isp_ivaNull() {
                return this.IsNull(this.tableregistry.p_ivaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setp_ivaNull() {
                this[this.tableregistry.p_ivaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssortcodeNull() {
                return this.IsNull(this.tableregistry.sortcodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsortcodeNull() {
                this[this.tableregistry.sortcodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidcurrencyNull() {
                return this.IsNull(this.tableregistry.idcurrencyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidcurrencyNull() {
                this[this.tableregistry.idcurrencyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidlanguageNull() {
                return this.IsNull(this.tableregistry.idlanguageColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidlanguageNull() {
                this[this.tableregistry.idlanguageColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsannotationNull() {
                return this.IsNull(this.tableregistry.annotationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetannotationNull() {
                this[this.tableregistry.annotationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbirthdateNull() {
                return this.IsNull(this.tableregistry.birthdateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbirthdateNull() {
                this[this.tableregistry.birthdateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbirthplaceNull() {
                return this.IsNull(this.tableregistry.birthplaceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbirthplaceNull() {
                this[this.tableregistry.birthplaceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbirthprovinceNull() {
                return this.IsNull(this.tableregistry.birthprovinceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbirthprovinceNull() {
                this[this.tableregistry.birthprovinceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbirthnationNull() {
                return this.IsNull(this.tableregistry.birthnationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbirthnationNull() {
                this[this.tableregistry.birthnationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgenderNull() {
                return this.IsNull(this.tableregistry.genderColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgenderNull() {
                this[this.tableregistry.genderColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssurnameNull() {
                return this.IsNull(this.tableregistry.surnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsurnameNull() {
                this[this.tableregistry.surnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsforenameNull() {
                return this.IsNull(this.tableregistry.forenameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetforenameNull() {
                this[this.tableregistry.forenameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsforeigncfNull() {
                return this.IsNull(this.tableregistry.foreigncfColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetforeigncfNull() {
                this[this.tableregistry.foreigncfColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstxtNull() {
                return this.IsNull(this.tableregistry.txtColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettxtNull() {
                this[this.tableregistry.txtColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrtfNull() {
                return this.IsNull(this.tableregistry.rtfColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrtfNull() {
                this[this.tableregistry.rtfColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbadgecodeNull() {
                return this.IsNull(this.tableregistry.badgecodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbadgecodeNull() {
                this[this.tableregistry.badgecodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidcategoryNull() {
                return this.IsNull(this.tableregistry.idcategoryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidcategoryNull() {
                this[this.tableregistry.idcategoryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidcentralizedcategoryNull() {
                return this.IsNull(this.tableregistry.idcentralizedcategoryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidcentralizedcategoryNull() {
                this[this.tableregistry.idcentralizedcategoryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidmaritalstatusNull() {
                return this.IsNull(this.tableregistry.idmaritalstatusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidmaritalstatusNull() {
                this[this.tableregistry.idmaritalstatusColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidtitleNull() {
                return this.IsNull(this.tableregistry.idtitleColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidtitleNull() {
                this[this.tableregistry.idtitleColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidregistryclassNull() {
                return this.IsNull(this.tableregistry.idregistryclassColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidregistryclassNull() {
                this[this.tableregistry.idregistryclassColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmaritalsurnameNull() {
                return this.IsNull(this.tableregistry.maritalsurnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmaritalsurnameNull() {
                this[this.tableregistry.maritalsurnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidcityNull() {
                return this.IsNull(this.tableregistry.idcityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidcityNull() {
                this[this.tableregistry.idcityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsextmatriculaNull() {
                return this.IsNull(this.tableregistry.extmatriculaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetextmatriculaNull() {
                this[this.tableregistry.extmatriculaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodRow[] GetregistrypaymethodRows() {
                return ((registrypaymethodRow[])(base.GetChildRows(this.Table.ChildRelations["registryregistrypaymethod"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class cabRow : System.Data.DataRow {
            
            private cabDataTable tablecab;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal cabRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecab = ((cabDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idbank {
                get {
                    return ((string)(this[this.tablecab.idbankColumn]));
                }
                set {
                    this[this.tablecab.idbankColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idcab {
                get {
                    return ((string)(this[this.tablecab.idcabColumn]));
                }
                set {
                    this[this.tablecab.idcabColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    return ((string)(this[this.tablecab.descriptionColumn]));
                }
                set {
                    this[this.tablecab.descriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tablecab.addressColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'address\' in table \'cab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecab.addressColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cap {
                get {
                    try {
                        return ((string)(this[this.tablecab.capColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cap\' in table \'cab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecab.capColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string country {
                get {
                    try {
                        return ((string)(this[this.tablecab.countryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'country\' in table \'cab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecab.countryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cu {
                get {
                    return ((string)(this[this.tablecab.cuColumn]));
                }
                set {
                    this[this.tablecab.cuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ct {
                get {
                    return ((System.DateTime)(this[this.tablecab.ctColumn]));
                }
                set {
                    this[this.tablecab.ctColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    return ((string)(this[this.tablecab.luColumn]));
                }
                set {
                    this[this.tablecab.luColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    return ((System.DateTime)(this[this.tablecab.ltColumn]));
                }
                set {
                    this[this.tablecab.ltColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idcity {
                get {
                    try {
                        return ((int)(this[this.tablecab.idcityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idcity\' in table \'cab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecab.idcityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string location {
                get {
                    try {
                        return ((string)(this[this.tablecab.locationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'location\' in table \'cab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecab.locationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bankRow bankRow {
                get {
                    return ((bankRow)(this.GetParentRow(this.Table.ParentRelations["bankcab"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["bankcab"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaddressNull() {
                return this.IsNull(this.tablecab.addressColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaddressNull() {
                this[this.tablecab.addressColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscapNull() {
                return this.IsNull(this.tablecab.capColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcapNull() {
                this[this.tablecab.capColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscountryNull() {
                return this.IsNull(this.tablecab.countryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcountryNull() {
                this[this.tablecab.countryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidcityNull() {
                return this.IsNull(this.tablecab.idcityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidcityNull() {
                this[this.tablecab.idcityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslocationNull() {
                return this.IsNull(this.tablecab.locationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlocationNull() {
                this[this.tablecab.locationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodRow[] GetregistrypaymethodRows() {
                return ((registrypaymethodRow[])(base.GetChildRows(this.Table.ChildRelations["cabregistrypaymethod"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class registrymainviewRow : System.Data.DataRow {
            
            private registrymainviewDataTable tableregistrymainview;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal registrymainviewRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableregistrymainview = ((registrymainviewDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idreg {
                get {
                    return ((int)(this[this.tableregistrymainview.idregColumn]));
                }
                set {
                    this[this.tableregistrymainview.idregColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string title {
                get {
                    return ((string)(this[this.tableregistrymainview.titleColumn]));
                }
                set {
                    this[this.tableregistrymainview.titleColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string surname {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.surnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'surname\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.surnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string forename {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.forenameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'forename\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.forenameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cf {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.cfColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cf\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.cfColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string p_iva {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.p_ivaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'p_iva\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.p_ivaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string residence {
                get {
                    return ((string)(this[this.tableregistrymainview.residenceColumn]));
                }
                set {
                    this[this.tableregistrymainview.residenceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string residencekind {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.residencekindColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'residencekind\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.residencekindColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string annotation {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.annotationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'annotation\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.annotationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime birthdate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableregistrymainview.birthdateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'birthdate\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.birthdateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idcity {
                get {
                    try {
                        return ((int)(this[this.tableregistrymainview.idcityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idcity\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.idcityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string city {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.cityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'city\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.cityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idcurrency {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.idcurrencyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idcurrency\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.idcurrencyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string currency {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.currencyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'currency\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.currencyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idlanguage {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.idlanguageColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idlanguage\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.idlanguageColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string language {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.languageColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'language\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.languageColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gender {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.genderColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'gender\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.genderColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string foreigncf {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.foreigncfColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'foreigncf\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.foreigncfColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idtitle {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.idtitleColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idtitle\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.idtitleColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string qualification {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.qualificationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'qualification\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.qualificationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idmaritalstatus {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.idmaritalstatusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idmaritalstatus\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.idmaritalstatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string maritalstatus {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.maritalstatusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'maritalstatus\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.maritalstatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sortcode {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.sortcodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'sortcode\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.sortcodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string registrykind {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.registrykindColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'registrykind\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.registrykindColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string human {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.humanColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'human\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.humanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flagtax {
                get {
                    return ((string)(this[this.tableregistrymainview.flagtaxColumn]));
                }
                set {
                    this[this.tableregistrymainview.flagtaxColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string active {
                get {
                    return ((string)(this[this.tableregistrymainview.activeColumn]));
                }
                set {
                    this[this.tableregistrymainview.activeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string badgecode {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.badgecodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'badgecode\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.badgecodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string maritalsurname {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.maritalsurnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'maritalsurname\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.maritalsurnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idcategory {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.idcategoryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idcategory\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.idcategoryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idemployment {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.idemploymentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idemployment\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.idemploymentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string extmatricula {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.extmatriculaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'extmatricula\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.extmatriculaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idcentralizedcategory {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.idcentralizedcategoryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idcentralizedcategory\' in table \'registrymainview\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.idcentralizedcategoryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string birthprovince {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.birthprovinceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'birthprovince\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.birthprovinceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string birthnation {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.birthnationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'birthnation\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.birthnationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string birthplace {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.birthplaceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'birthplace\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.birthplaceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idland {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.idlandColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idland\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.idlandColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cu {
                get {
                    return ((string)(this[this.tableregistrymainview.cuColumn]));
                }
                set {
                    this[this.tableregistrymainview.cuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ct {
                get {
                    return ((System.DateTime)(this[this.tableregistrymainview.ctColumn]));
                }
                set {
                    this[this.tableregistrymainview.ctColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    return ((string)(this[this.tableregistrymainview.luColumn]));
                }
                set {
                    this[this.tableregistrymainview.luColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    return ((System.DateTime)(this[this.tableregistrymainview.ltColumn]));
                }
                set {
                    this[this.tableregistrymainview.ltColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string location {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.locationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'location\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.locationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idnation {
                get {
                    try {
                        return ((int)(this[this.tableregistrymainview.idnationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idnation\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.idnationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nation {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.nationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nation\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.nationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idregistryclass {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.idregistryclassColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idregistryclass\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.idregistryclassColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string registryclass {
                get {
                    try {
                        return ((string)(this[this.tableregistrymainview.registryclassColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'registryclass\' in table \'registrymainview\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableregistrymainview.registryclassColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssurnameNull() {
                return this.IsNull(this.tableregistrymainview.surnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsurnameNull() {
                this[this.tableregistrymainview.surnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsforenameNull() {
                return this.IsNull(this.tableregistrymainview.forenameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetforenameNull() {
                this[this.tableregistrymainview.forenameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscfNull() {
                return this.IsNull(this.tableregistrymainview.cfColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcfNull() {
                this[this.tableregistrymainview.cfColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isp_ivaNull() {
                return this.IsNull(this.tableregistrymainview.p_ivaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setp_ivaNull() {
                this[this.tableregistrymainview.p_ivaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsresidencekindNull() {
                return this.IsNull(this.tableregistrymainview.residencekindColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetresidencekindNull() {
                this[this.tableregistrymainview.residencekindColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsannotationNull() {
                return this.IsNull(this.tableregistrymainview.annotationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetannotationNull() {
                this[this.tableregistrymainview.annotationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbirthdateNull() {
                return this.IsNull(this.tableregistrymainview.birthdateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbirthdateNull() {
                this[this.tableregistrymainview.birthdateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidcityNull() {
                return this.IsNull(this.tableregistrymainview.idcityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidcityNull() {
                this[this.tableregistrymainview.idcityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscityNull() {
                return this.IsNull(this.tableregistrymainview.cityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcityNull() {
                this[this.tableregistrymainview.cityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidcurrencyNull() {
                return this.IsNull(this.tableregistrymainview.idcurrencyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidcurrencyNull() {
                this[this.tableregistrymainview.idcurrencyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscurrencyNull() {
                return this.IsNull(this.tableregistrymainview.currencyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcurrencyNull() {
                this[this.tableregistrymainview.currencyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidlanguageNull() {
                return this.IsNull(this.tableregistrymainview.idlanguageColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidlanguageNull() {
                this[this.tableregistrymainview.idlanguageColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslanguageNull() {
                return this.IsNull(this.tableregistrymainview.languageColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlanguageNull() {
                this[this.tableregistrymainview.languageColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgenderNull() {
                return this.IsNull(this.tableregistrymainview.genderColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgenderNull() {
                this[this.tableregistrymainview.genderColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsforeigncfNull() {
                return this.IsNull(this.tableregistrymainview.foreigncfColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetforeigncfNull() {
                this[this.tableregistrymainview.foreigncfColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidtitleNull() {
                return this.IsNull(this.tableregistrymainview.idtitleColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidtitleNull() {
                this[this.tableregistrymainview.idtitleColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsqualificationNull() {
                return this.IsNull(this.tableregistrymainview.qualificationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetqualificationNull() {
                this[this.tableregistrymainview.qualificationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidmaritalstatusNull() {
                return this.IsNull(this.tableregistrymainview.idmaritalstatusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidmaritalstatusNull() {
                this[this.tableregistrymainview.idmaritalstatusColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmaritalstatusNull() {
                return this.IsNull(this.tableregistrymainview.maritalstatusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmaritalstatusNull() {
                this[this.tableregistrymainview.maritalstatusColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssortcodeNull() {
                return this.IsNull(this.tableregistrymainview.sortcodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsortcodeNull() {
                this[this.tableregistrymainview.sortcodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsregistrykindNull() {
                return this.IsNull(this.tableregistrymainview.registrykindColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetregistrykindNull() {
                this[this.tableregistrymainview.registrykindColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshumanNull() {
                return this.IsNull(this.tableregistrymainview.humanColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethumanNull() {
                this[this.tableregistrymainview.humanColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbadgecodeNull() {
                return this.IsNull(this.tableregistrymainview.badgecodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbadgecodeNull() {
                this[this.tableregistrymainview.badgecodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmaritalsurnameNull() {
                return this.IsNull(this.tableregistrymainview.maritalsurnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmaritalsurnameNull() {
                this[this.tableregistrymainview.maritalsurnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidcategoryNull() {
                return this.IsNull(this.tableregistrymainview.idcategoryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidcategoryNull() {
                this[this.tableregistrymainview.idcategoryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidemploymentNull() {
                return this.IsNull(this.tableregistrymainview.idemploymentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidemploymentNull() {
                this[this.tableregistrymainview.idemploymentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsextmatriculaNull() {
                return this.IsNull(this.tableregistrymainview.extmatriculaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetextmatriculaNull() {
                this[this.tableregistrymainview.extmatriculaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidcentralizedcategoryNull() {
                return this.IsNull(this.tableregistrymainview.idcentralizedcategoryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidcentralizedcategoryNull() {
                this[this.tableregistrymainview.idcentralizedcategoryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbirthprovinceNull() {
                return this.IsNull(this.tableregistrymainview.birthprovinceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbirthprovinceNull() {
                this[this.tableregistrymainview.birthprovinceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbirthnationNull() {
                return this.IsNull(this.tableregistrymainview.birthnationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbirthnationNull() {
                this[this.tableregistrymainview.birthnationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbirthplaceNull() {
                return this.IsNull(this.tableregistrymainview.birthplaceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbirthplaceNull() {
                this[this.tableregistrymainview.birthplaceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidlandNull() {
                return this.IsNull(this.tableregistrymainview.idlandColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidlandNull() {
                this[this.tableregistrymainview.idlandColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslocationNull() {
                return this.IsNull(this.tableregistrymainview.locationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlocationNull() {
                this[this.tableregistrymainview.locationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidnationNull() {
                return this.IsNull(this.tableregistrymainview.idnationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidnationNull() {
                this[this.tableregistrymainview.idnationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnationNull() {
                return this.IsNull(this.tableregistrymainview.nationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnationNull() {
                this[this.tableregistrymainview.nationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidregistryclassNull() {
                return this.IsNull(this.tableregistrymainview.idregistryclassColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidregistryclassNull() {
                this[this.tableregistrymainview.idregistryclassColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsregistryclassNull() {
                return this.IsNull(this.tableregistrymainview.registryclassColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetregistryclassNull() {
                this[this.tableregistrymainview.registryclassColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class deputyRow : System.Data.DataRow {
            
            private deputyDataTable tabledeputy;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal deputyRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledeputy = ((deputyDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idreg {
                get {
                    return ((int)(this[this.tabledeputy.idregColumn]));
                }
                set {
                    this[this.tabledeputy.idregColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string title {
                get {
                    return ((string)(this[this.tabledeputy.titleColumn]));
                }
                set {
                    this[this.tabledeputy.titleColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cf {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.cfColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cf\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.cfColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idland {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.idlandColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idland\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.idlandColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string p_iva {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.p_ivaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'p_iva\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.p_ivaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string residence {
                get {
                    return ((string)(this[this.tabledeputy.residenceColumn]));
                }
                set {
                    this[this.tabledeputy.residenceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sortcode {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.sortcodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'sortcode\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.sortcodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idcurrency {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.idcurrencyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idcurrency\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.idcurrencyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idlanguage {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.idlanguageColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idlanguage\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.idlanguageColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string annotation {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.annotationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'annotation\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.annotationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string human {
                get {
                    return ((string)(this[this.tabledeputy.humanColumn]));
                }
                set {
                    this[this.tabledeputy.humanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime birthdate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabledeputy.birthdateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'birthdate\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.birthdateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string birthplace {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.birthplaceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'birthplace\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.birthplaceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string birthprovince {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.birthprovinceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'birthprovince\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.birthprovinceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string birthnation {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.birthnationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'birthnation\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.birthnationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gender {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.genderColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'gender\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.genderColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string surname {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.surnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'surname\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.surnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string forename {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.forenameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'forename\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.forenameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string foreigncf {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.foreigncfColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'foreigncf\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.foreigncfColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string flagtax {
                get {
                    return ((string)(this[this.tabledeputy.flagtaxColumn]));
                }
                set {
                    this[this.tabledeputy.flagtaxColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string active {
                get {
                    return ((string)(this[this.tabledeputy.activeColumn]));
                }
                set {
                    this[this.tabledeputy.activeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string txt {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.txtColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'txt\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.txtColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] rtf {
                get {
                    try {
                        return ((byte[])(this[this.tabledeputy.rtfColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'rtf\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.rtfColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cu {
                get {
                    return ((string)(this[this.tabledeputy.cuColumn]));
                }
                set {
                    this[this.tabledeputy.cuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ct {
                get {
                    return ((System.DateTime)(this[this.tabledeputy.ctColumn]));
                }
                set {
                    this[this.tabledeputy.ctColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    return ((string)(this[this.tabledeputy.luColumn]));
                }
                set {
                    this[this.tabledeputy.luColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    return ((System.DateTime)(this[this.tabledeputy.ltColumn]));
                }
                set {
                    this[this.tabledeputy.ltColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string badgecode {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.badgecodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'badgecode\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.badgecodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idcategory {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.idcategoryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idcategory\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.idcategoryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idcentralizedcategory {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.idcentralizedcategoryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idcentralizedcategory\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.idcentralizedcategoryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idmaritalstatus {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.idmaritalstatusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idmaritalstatus\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.idmaritalstatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idtitle {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.idtitleColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idtitle\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.idtitleColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idregistryclass {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.idregistryclassColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idregistryclass\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.idregistryclassColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string maritalsurname {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.maritalsurnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'maritalsurname\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.maritalsurnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string delete_flagattivo {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.delete_flagattivoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'delete_flagattivo\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.delete_flagattivoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idcity {
                get {
                    try {
                        return ((int)(this[this.tabledeputy.idcityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idcity\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.idcityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idnation {
                get {
                    try {
                        return ((int)(this[this.tabledeputy.idnationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idnation\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.idnationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string location {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.locationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'location\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.locationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string extmatricula {
                get {
                    try {
                        return ((string)(this[this.tabledeputy.extmatriculaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'extmatricula\' in table \'deputy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeputy.extmatriculaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscfNull() {
                return this.IsNull(this.tabledeputy.cfColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcfNull() {
                this[this.tabledeputy.cfColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidlandNull() {
                return this.IsNull(this.tabledeputy.idlandColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidlandNull() {
                this[this.tabledeputy.idlandColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isp_ivaNull() {
                return this.IsNull(this.tabledeputy.p_ivaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setp_ivaNull() {
                this[this.tabledeputy.p_ivaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssortcodeNull() {
                return this.IsNull(this.tabledeputy.sortcodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsortcodeNull() {
                this[this.tabledeputy.sortcodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidcurrencyNull() {
                return this.IsNull(this.tabledeputy.idcurrencyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidcurrencyNull() {
                this[this.tabledeputy.idcurrencyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidlanguageNull() {
                return this.IsNull(this.tabledeputy.idlanguageColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidlanguageNull() {
                this[this.tabledeputy.idlanguageColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsannotationNull() {
                return this.IsNull(this.tabledeputy.annotationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetannotationNull() {
                this[this.tabledeputy.annotationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbirthdateNull() {
                return this.IsNull(this.tabledeputy.birthdateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbirthdateNull() {
                this[this.tabledeputy.birthdateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbirthplaceNull() {
                return this.IsNull(this.tabledeputy.birthplaceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbirthplaceNull() {
                this[this.tabledeputy.birthplaceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbirthprovinceNull() {
                return this.IsNull(this.tabledeputy.birthprovinceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbirthprovinceNull() {
                this[this.tabledeputy.birthprovinceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbirthnationNull() {
                return this.IsNull(this.tabledeputy.birthnationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbirthnationNull() {
                this[this.tabledeputy.birthnationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgenderNull() {
                return this.IsNull(this.tabledeputy.genderColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgenderNull() {
                this[this.tabledeputy.genderColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssurnameNull() {
                return this.IsNull(this.tabledeputy.surnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsurnameNull() {
                this[this.tabledeputy.surnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsforenameNull() {
                return this.IsNull(this.tabledeputy.forenameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetforenameNull() {
                this[this.tabledeputy.forenameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsforeigncfNull() {
                return this.IsNull(this.tabledeputy.foreigncfColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetforeigncfNull() {
                this[this.tabledeputy.foreigncfColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstxtNull() {
                return this.IsNull(this.tabledeputy.txtColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettxtNull() {
                this[this.tabledeputy.txtColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrtfNull() {
                return this.IsNull(this.tabledeputy.rtfColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrtfNull() {
                this[this.tabledeputy.rtfColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbadgecodeNull() {
                return this.IsNull(this.tabledeputy.badgecodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbadgecodeNull() {
                this[this.tabledeputy.badgecodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidcategoryNull() {
                return this.IsNull(this.tabledeputy.idcategoryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidcategoryNull() {
                this[this.tabledeputy.idcategoryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidcentralizedcategoryNull() {
                return this.IsNull(this.tabledeputy.idcentralizedcategoryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidcentralizedcategoryNull() {
                this[this.tabledeputy.idcentralizedcategoryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidmaritalstatusNull() {
                return this.IsNull(this.tabledeputy.idmaritalstatusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidmaritalstatusNull() {
                this[this.tabledeputy.idmaritalstatusColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidtitleNull() {
                return this.IsNull(this.tabledeputy.idtitleColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidtitleNull() {
                this[this.tabledeputy.idtitleColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidregistryclassNull() {
                return this.IsNull(this.tabledeputy.idregistryclassColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidregistryclassNull() {
                this[this.tabledeputy.idregistryclassColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmaritalsurnameNull() {
                return this.IsNull(this.tabledeputy.maritalsurnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmaritalsurnameNull() {
                this[this.tabledeputy.maritalsurnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdelete_flagattivoNull() {
                return this.IsNull(this.tabledeputy.delete_flagattivoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdelete_flagattivoNull() {
                this[this.tabledeputy.delete_flagattivoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidcityNull() {
                return this.IsNull(this.tabledeputy.idcityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidcityNull() {
                this[this.tabledeputy.idcityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidnationNull() {
                return this.IsNull(this.tabledeputy.idnationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidnationNull() {
                this[this.tabledeputy.idnationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslocationNull() {
                return this.IsNull(this.tabledeputy.locationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlocationNull() {
                this[this.tabledeputy.locationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsextmatriculaNull() {
                return this.IsNull(this.tabledeputy.extmatriculaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetextmatriculaNull() {
                this[this.tabledeputy.extmatriculaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodRow[] GetregistrypaymethodRows() {
                return ((registrypaymethodRow[])(base.GetChildRows(this.Table.ChildRelations["deputyregistrypaymethod"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class registrypaymethodRowChangeEvent : System.EventArgs {
            
            private registrypaymethodRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodRowChangeEvent(registrypaymethodRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class paymethodRowChangeEvent : System.EventArgs {
            
            private paymethodRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public paymethodRowChangeEvent(paymethodRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public paymethodRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class bankRowChangeEvent : System.EventArgs {
            
            private bankRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bankRowChangeEvent(bankRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bankRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class registrypaymethodviewRowChangeEvent : System.EventArgs {
            
            private registrypaymethodviewRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodviewRowChangeEvent(registrypaymethodviewRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrypaymethodviewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class expirationkindRowChangeEvent : System.EventArgs {
            
            private expirationkindRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public expirationkindRowChangeEvent(expirationkindRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public expirationkindRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class registryRowChangeEvent : System.EventArgs {
            
            private registryRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registryRowChangeEvent(registryRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class cabRowChangeEvent : System.EventArgs {
            
            private cabRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cabRowChangeEvent(cabRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cabRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class registrymainviewRowChangeEvent : System.EventArgs {
            
            private registrymainviewRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrymainviewRowChangeEvent(registrymainviewRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public registrymainviewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class deputyRowChangeEvent : System.EventArgs {
            
            private deputyRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deputyRowChangeEvent(deputyRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deputyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591
