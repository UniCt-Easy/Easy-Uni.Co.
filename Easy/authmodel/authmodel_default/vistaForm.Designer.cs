
/*
Easy
Copyright (C) 2024 Università degli Studi di Catania (www.unict.it)
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/


//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace itinerationrefundkind_default {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("vistaForm")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class vistaForm : System.Data.DataSet {
        
        private itinerationrefundkindDataTable tableitinerationrefundkind;
        
        private accmotiveappliedDataTable tableaccmotiveapplied;
        
        private System.Data.DataRelation relationaccmotiveapplieditinerationrefundkind;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vistaForm() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected vistaForm(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["itinerationrefundkind"] != null)) {
                    base.Tables.Add(new itinerationrefundkindDataTable(ds.Tables["itinerationrefundkind"]));
                }
                if ((ds.Tables["accmotiveapplied"] != null)) {
                    base.Tables.Add(new accmotiveappliedDataTable(ds.Tables["accmotiveapplied"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }   
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public itinerationrefundkindDataTable itinerationrefundkind {
            get {
                return this.tableitinerationrefundkind;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public accmotiveappliedDataTable accmotiveapplied {
            get {
                return this.tableaccmotiveapplied;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            vistaForm cln = ((vistaForm)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["itinerationrefundkind"] != null)) {
                    base.Tables.Add(new itinerationrefundkindDataTable(ds.Tables["itinerationrefundkind"]));
                }
                if ((ds.Tables["accmotiveapplied"] != null)) {
                    base.Tables.Add(new accmotiveappliedDataTable(ds.Tables["accmotiveapplied"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableitinerationrefundkind = ((itinerationrefundkindDataTable)(base.Tables["itinerationrefundkind"]));
            if ((initTable == true)) {
                if ((this.tableitinerationrefundkind != null)) {
                    this.tableitinerationrefundkind.InitVars();
                }
            }
            this.tableaccmotiveapplied = ((accmotiveappliedDataTable)(base.Tables["accmotiveapplied"]));
            if ((initTable == true)) {
                if ((this.tableaccmotiveapplied != null)) {
                    this.tableaccmotiveapplied.InitVars();
                }
            }
            this.relationaccmotiveapplieditinerationrefundkind = this.Relations["accmotiveapplieditinerationrefundkind"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "vistaForm";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Vistafrmclassspesemissione.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableitinerationrefundkind = new itinerationrefundkindDataTable();
            base.Tables.Add(this.tableitinerationrefundkind);
            this.tableaccmotiveapplied = new accmotiveappliedDataTable();
            base.Tables.Add(this.tableaccmotiveapplied);
            System.Data.ForeignKeyConstraint fkc;
            fkc = new System.Data.ForeignKeyConstraint("accmotiveapplieditinerationrefundkind", new System.Data.DataColumn[] {
                        this.tableaccmotiveapplied.idaccmotiveColumn}, new System.Data.DataColumn[] {
                        this.tableitinerationrefundkind.idaccmotiveColumn});
            this.tableitinerationrefundkind.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationaccmotiveapplieditinerationrefundkind = new System.Data.DataRelation("accmotiveapplieditinerationrefundkind", new System.Data.DataColumn[] {
                        this.tableaccmotiveapplied.idaccmotiveColumn}, new System.Data.DataColumn[] {
                        this.tableitinerationrefundkind.idaccmotiveColumn}, false);
            this.Relations.Add(this.relationaccmotiveapplieditinerationrefundkind);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeitinerationrefundkind() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeaccmotiveapplied() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            vistaForm ds = new vistaForm();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void itinerationrefundkindRowChangeEventHandler(object sender, itinerationrefundkindRowChangeEvent e);
        
        public delegate void accmotiveappliedRowChangeEventHandler(object sender, accmotiveappliedRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class itinerationrefundkindDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columniditinerationrefundkind;
            
            private System.Data.DataColumn columndescription;
            
            private System.Data.DataColumn columncu;
            
            private System.Data.DataColumn columnct;
            
            private System.Data.DataColumn columnlu;
            
            private System.Data.DataColumn columnlt;
            
            private System.Data.DataColumn columnidaccmotive;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public itinerationrefundkindDataTable() {
                this.TableName = "itinerationrefundkind";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal itinerationrefundkindDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected itinerationrefundkindDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn iditinerationrefundkindColumn {
                get {
                    return this.columniditinerationrefundkind;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idaccmotiveColumn {
                get {
                    return this.columnidaccmotive;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public itinerationrefundkindRow this[int index] {
                get {
                    return ((itinerationrefundkindRow)(this.Rows[index]));
                }
            }
            
            public event itinerationrefundkindRowChangeEventHandler itinerationrefundkindRowChanging;
            
            public event itinerationrefundkindRowChangeEventHandler itinerationrefundkindRowChanged;
            
            public event itinerationrefundkindRowChangeEventHandler itinerationrefundkindRowDeleting;
            
            public event itinerationrefundkindRowChangeEventHandler itinerationrefundkindRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdditinerationrefundkindRow(itinerationrefundkindRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public itinerationrefundkindRow AdditinerationrefundkindRow(string iditinerationrefundkind, string description, string cu, System.DateTime ct, string lu, System.DateTime lt, accmotiveappliedRow parentaccmotiveappliedRowByaccmotiveapplieditinerationrefundkind) {
                itinerationrefundkindRow rowitinerationrefundkindRow = ((itinerationrefundkindRow)(this.NewRow()));
                rowitinerationrefundkindRow.ItemArray = new object[] {
                        iditinerationrefundkind,
                        description,
                        cu,
                        ct,
                        lu,
                        lt,
                        parentaccmotiveappliedRowByaccmotiveapplieditinerationrefundkind[0]};
                this.Rows.Add(rowitinerationrefundkindRow);
                return rowitinerationrefundkindRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public itinerationrefundkindRow FindByiditinerationrefundkind(string iditinerationrefundkind) {
                return ((itinerationrefundkindRow)(this.Rows.Find(new object[] {
                            iditinerationrefundkind})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                itinerationrefundkindDataTable cln = ((itinerationrefundkindDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new itinerationrefundkindDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columniditinerationrefundkind = base.Columns["iditinerationrefundkind"];
                this.columndescription = base.Columns["description"];
                this.columncu = base.Columns["cu"];
                this.columnct = base.Columns["ct"];
                this.columnlu = base.Columns["lu"];
                this.columnlt = base.Columns["lt"];
                this.columnidaccmotive = base.Columns["idaccmotive"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columniditinerationrefundkind = new System.Data.DataColumn("iditinerationrefundkind", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columniditinerationrefundkind);
                this.columndescription = new System.Data.DataColumn("description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columncu = new System.Data.DataColumn("cu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnct = new System.Data.DataColumn("ct", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlu = new System.Data.DataColumn("lu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnlt = new System.Data.DataColumn("lt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.columnidaccmotive = new System.Data.DataColumn("idaccmotive", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidaccmotive);
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey1", new System.Data.DataColumn[] {
                                this.columniditinerationrefundkind}, true));
                this.columniditinerationrefundkind.AllowDBNull = false;
                this.columniditinerationrefundkind.Unique = true;
                this.columndescription.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlt.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public itinerationrefundkindRow NewitinerationrefundkindRow() {
                return ((itinerationrefundkindRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new itinerationrefundkindRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(itinerationrefundkindRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.itinerationrefundkindRowChanged != null)) {
                    this.itinerationrefundkindRowChanged(this, new itinerationrefundkindRowChangeEvent(((itinerationrefundkindRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.itinerationrefundkindRowChanging != null)) {
                    this.itinerationrefundkindRowChanging(this, new itinerationrefundkindRowChangeEvent(((itinerationrefundkindRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.itinerationrefundkindRowDeleted != null)) {
                    this.itinerationrefundkindRowDeleted(this, new itinerationrefundkindRowChangeEvent(((itinerationrefundkindRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.itinerationrefundkindRowDeleting != null)) {
                    this.itinerationrefundkindRowDeleting(this, new itinerationrefundkindRowChangeEvent(((itinerationrefundkindRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveitinerationrefundkindRow(itinerationrefundkindRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "itinerationrefundkindDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class accmotiveappliedDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnidaccmotive;
            
            private System.Data.DataColumn columnparidaccmotive;
            
            private System.Data.DataColumn columncodemotive;
            
            private System.Data.DataColumn columnmotive;
            
            private System.Data.DataColumn columncu;
            
            private System.Data.DataColumn columnct;
            
            private System.Data.DataColumn columnlu;
            
            private System.Data.DataColumn columnlt;
            
            private System.Data.DataColumn columnactive;
            
            private System.Data.DataColumn columnidepoperation;
            
            private System.Data.DataColumn columnepoperation;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public accmotiveappliedDataTable() {
                this.TableName = "accmotiveapplied";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal accmotiveappliedDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected accmotiveappliedDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idaccmotiveColumn {
                get {
                    return this.columnidaccmotive;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn paridaccmotiveColumn {
                get {
                    return this.columnparidaccmotive;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn codemotiveColumn {
                get {
                    return this.columncodemotive;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn motiveColumn {
                get {
                    return this.columnmotive;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cuColumn {
                get {
                    return this.columncu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn luColumn {
                get {
                    return this.columnlu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ltColumn {
                get {
                    return this.columnlt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn activeColumn {
                get {
                    return this.columnactive;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idepoperationColumn {
                get {
                    return this.columnidepoperation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn epoperationColumn {
                get {
                    return this.columnepoperation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public accmotiveappliedRow this[int index] {
                get {
                    return ((accmotiveappliedRow)(this.Rows[index]));
                }
            }
            
            public event accmotiveappliedRowChangeEventHandler accmotiveappliedRowChanging;
            
            public event accmotiveappliedRowChangeEventHandler accmotiveappliedRowChanged;
            
            public event accmotiveappliedRowChangeEventHandler accmotiveappliedRowDeleting;
            
            public event accmotiveappliedRowChangeEventHandler accmotiveappliedRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddaccmotiveappliedRow(accmotiveappliedRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public accmotiveappliedRow AddaccmotiveappliedRow(string idaccmotive, string paridaccmotive, string codemotive, string motive, string cu, System.DateTime ct, string lu, System.DateTime lt, string active, string idepoperation, string epoperation) {
                accmotiveappliedRow rowaccmotiveappliedRow = ((accmotiveappliedRow)(this.NewRow()));
                rowaccmotiveappliedRow.ItemArray = new object[] {
                        idaccmotive,
                        paridaccmotive,
                        codemotive,
                        motive,
                        cu,
                        ct,
                        lu,
                        lt,
                        active,
                        idepoperation,
                        epoperation};
                this.Rows.Add(rowaccmotiveappliedRow);
                return rowaccmotiveappliedRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public accmotiveappliedRow FindByidaccmotive(string idaccmotive) {
                return ((accmotiveappliedRow)(this.Rows.Find(new object[] {
                            idaccmotive})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                accmotiveappliedDataTable cln = ((accmotiveappliedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new accmotiveappliedDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidaccmotive = base.Columns["idaccmotive"];
                this.columnparidaccmotive = base.Columns["paridaccmotive"];
                this.columncodemotive = base.Columns["codemotive"];
                this.columnmotive = base.Columns["motive"];
                this.columncu = base.Columns["cu"];
                this.columnct = base.Columns["ct"];
                this.columnlu = base.Columns["lu"];
                this.columnlt = base.Columns["lt"];
                this.columnactive = base.Columns["active"];
                this.columnidepoperation = base.Columns["idepoperation"];
                this.columnepoperation = base.Columns["epoperation"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidaccmotive = new System.Data.DataColumn("idaccmotive", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidaccmotive);
                this.columnparidaccmotive = new System.Data.DataColumn("paridaccmotive", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnparidaccmotive);
                this.columncodemotive = new System.Data.DataColumn("codemotive", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncodemotive);
                this.columnmotive = new System.Data.DataColumn("motive", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmotive);
                this.columncu = new System.Data.DataColumn("cu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncu);
                this.columnct = new System.Data.DataColumn("ct", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlu = new System.Data.DataColumn("lu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlu);
                this.columnlt = new System.Data.DataColumn("lt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlt);
                this.columnactive = new System.Data.DataColumn("active", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnactive);
                this.columnidepoperation = new System.Data.DataColumn("idepoperation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidepoperation);
                this.columnepoperation = new System.Data.DataColumn("epoperation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnepoperation);
                this.Constraints.Add(new System.Data.UniqueConstraint("vistaFormKey2", new System.Data.DataColumn[] {
                                this.columnidaccmotive}, true));
                this.columnidaccmotive.AllowDBNull = false;
                this.columnidaccmotive.Unique = true;
                this.columncodemotive.AllowDBNull = false;
                this.columnmotive.AllowDBNull = false;
                this.columncu.AllowDBNull = false;
                this.columnct.AllowDBNull = false;
                this.columnlu.AllowDBNull = false;
                this.columnlt.AllowDBNull = false;
                this.columnidepoperation.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public accmotiveappliedRow NewaccmotiveappliedRow() {
                return ((accmotiveappliedRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new accmotiveappliedRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(accmotiveappliedRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.accmotiveappliedRowChanged != null)) {
                    this.accmotiveappliedRowChanged(this, new accmotiveappliedRowChangeEvent(((accmotiveappliedRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.accmotiveappliedRowChanging != null)) {
                    this.accmotiveappliedRowChanging(this, new accmotiveappliedRowChangeEvent(((accmotiveappliedRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.accmotiveappliedRowDeleted != null)) {
                    this.accmotiveappliedRowDeleted(this, new accmotiveappliedRowChangeEvent(((accmotiveappliedRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.accmotiveappliedRowDeleting != null)) {
                    this.accmotiveappliedRowDeleting(this, new accmotiveappliedRowChangeEvent(((accmotiveappliedRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveaccmotiveappliedRow(accmotiveappliedRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                vistaForm ds = new vistaForm();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "accmotiveappliedDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class itinerationrefundkindRow : System.Data.DataRow {
            
            private itinerationrefundkindDataTable tableitinerationrefundkind;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal itinerationrefundkindRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableitinerationrefundkind = ((itinerationrefundkindDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string iditinerationrefundkind {
                get {
                    return ((string)(this[this.tableitinerationrefundkind.iditinerationrefundkindColumn]));
                }
                set {
                    this[this.tableitinerationrefundkind.iditinerationrefundkindColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    return ((string)(this[this.tableitinerationrefundkind.descriptionColumn]));
                }
                set {
                    this[this.tableitinerationrefundkind.descriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cu {
                get {
                    return ((string)(this[this.tableitinerationrefundkind.cuColumn]));
                }
                set {
                    this[this.tableitinerationrefundkind.cuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ct {
                get {
                    return ((System.DateTime)(this[this.tableitinerationrefundkind.ctColumn]));
                }
                set {
                    this[this.tableitinerationrefundkind.ctColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    return ((string)(this[this.tableitinerationrefundkind.luColumn]));
                }
                set {
                    this[this.tableitinerationrefundkind.luColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    return ((System.DateTime)(this[this.tableitinerationrefundkind.ltColumn]));
                }
                set {
                    this[this.tableitinerationrefundkind.ltColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idaccmotive {
                get {
                    try {
                        return ((string)(this[this.tableitinerationrefundkind.idaccmotiveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'idaccmotive\' in table \'itinerationrefundkind\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitinerationrefundkind.idaccmotiveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public accmotiveappliedRow accmotiveappliedRow {
                get {
                    return ((accmotiveappliedRow)(this.GetParentRow(this.Table.ParentRelations["accmotiveapplieditinerationrefundkind"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["accmotiveapplieditinerationrefundkind"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidaccmotiveNull() {
                return this.IsNull(this.tableitinerationrefundkind.idaccmotiveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidaccmotiveNull() {
                this[this.tableitinerationrefundkind.idaccmotiveColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class accmotiveappliedRow : System.Data.DataRow {
            
            private accmotiveappliedDataTable tableaccmotiveapplied;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal accmotiveappliedRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableaccmotiveapplied = ((accmotiveappliedDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idaccmotive {
                get {
                    return ((string)(this[this.tableaccmotiveapplied.idaccmotiveColumn]));
                }
                set {
                    this[this.tableaccmotiveapplied.idaccmotiveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string paridaccmotive {
                get {
                    try {
                        return ((string)(this[this.tableaccmotiveapplied.paridaccmotiveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'paridaccmotive\' in table \'accmotiveapplied\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableaccmotiveapplied.paridaccmotiveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string codemotive {
                get {
                    return ((string)(this[this.tableaccmotiveapplied.codemotiveColumn]));
                }
                set {
                    this[this.tableaccmotiveapplied.codemotiveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string motive {
                get {
                    return ((string)(this[this.tableaccmotiveapplied.motiveColumn]));
                }
                set {
                    this[this.tableaccmotiveapplied.motiveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cu {
                get {
                    return ((string)(this[this.tableaccmotiveapplied.cuColumn]));
                }
                set {
                    this[this.tableaccmotiveapplied.cuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ct {
                get {
                    return ((System.DateTime)(this[this.tableaccmotiveapplied.ctColumn]));
                }
                set {
                    this[this.tableaccmotiveapplied.ctColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lu {
                get {
                    return ((string)(this[this.tableaccmotiveapplied.luColumn]));
                }
                set {
                    this[this.tableaccmotiveapplied.luColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lt {
                get {
                    return ((System.DateTime)(this[this.tableaccmotiveapplied.ltColumn]));
                }
                set {
                    this[this.tableaccmotiveapplied.ltColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string active {
                get {
                    try {
                        return ((string)(this[this.tableaccmotiveapplied.activeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'active\' in table \'accmotiveapplied\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableaccmotiveapplied.activeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idepoperation {
                get {
                    return ((string)(this[this.tableaccmotiveapplied.idepoperationColumn]));
                }
                set {
                    this[this.tableaccmotiveapplied.idepoperationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string epoperation {
                get {
                    try {
                        return ((string)(this[this.tableaccmotiveapplied.epoperationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'epoperation\' in table \'accmotiveapplied\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableaccmotiveapplied.epoperationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsparidaccmotiveNull() {
                return this.IsNull(this.tableaccmotiveapplied.paridaccmotiveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetparidaccmotiveNull() {
                this[this.tableaccmotiveapplied.paridaccmotiveColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsactiveNull() {
                return this.IsNull(this.tableaccmotiveapplied.activeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetactiveNull() {
                this[this.tableaccmotiveapplied.activeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsepoperationNull() {
                return this.IsNull(this.tableaccmotiveapplied.epoperationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetepoperationNull() {
                this[this.tableaccmotiveapplied.epoperationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public itinerationrefundkindRow[] GetitinerationrefundkindRows() {
                return ((itinerationrefundkindRow[])(base.GetChildRows(this.Table.ChildRelations["accmotiveapplieditinerationrefundkind"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class itinerationrefundkindRowChangeEvent : System.EventArgs {
            
            private itinerationrefundkindRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public itinerationrefundkindRowChangeEvent(itinerationrefundkindRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public itinerationrefundkindRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class accmotiveappliedRowChangeEvent : System.EventArgs {
            
            private accmotiveappliedRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public accmotiveappliedRowChangeEvent(accmotiveappliedRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public accmotiveappliedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591
